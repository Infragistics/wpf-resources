<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
                    xmlns:ig="http://schemas.infragistics.com/xaml" 
                    xmlns:igPrimitives="http://schemas.infragistics.com/xaml/primitives" 
                    xmlns:igBase="http://schemas.infragistics.com/xaml" 
                    xmlns:igBasePrim="http://schemas.infragistics.com/xaml/primitives" 
                    xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
                    xmlns:sys="clr-namespace:System;assembly=mscorlib" mc:Ignorable="d">

  <!-- *********************************  RESOURCES  ********************************* -->
  <ResourceDictionary.MergedDictionaries>
    <ResourceDictionary Source="Office2013.Styles.xaml" />
  </ResourceDictionary.MergedDictionaries>

  <!-- ********************************** BRUSHES **********************************-->
  <SolidColorBrush x:Key="ForegroundBrush" Color="{StaticResource Color_001}" />
  <SolidColorBrush x:Key="TransparentBrush" Color="{StaticResource Color_046}" />

  <!-- RepeatButton Brushes -->
  <SolidColorBrush x:Key="RepeatButtonBackgroundBrush" Color="{StaticResource Color_005}" />
  <SolidColorBrush x:Key="RepeatButtonHoverBackgroundBrush" Color="{StaticResource Color_011}" />
  <SolidColorBrush x:Key="RepeatButtonPressedBackgroundBrush" Color="{StaticResource Color_011}" />

  <!-- Slider Brushes -->
  <SolidColorBrush x:Key="HSliderTrackBackgroundBrush" Color="{StaticResource Color_005}" />
  <SolidColorBrush x:Key="VSliderTrackBackgroundBrush" Color="{StaticResource Color_005}" />

  <SolidColorBrush x:Key="TickBackgroundBrush" Color="{StaticResource Color_005}" />
  <SolidColorBrush x:Key="TrackFillBackgroundBrush" Color="{StaticResource Color_013}" />

  <!--  Slider Thumb Brushes -->
  <SolidColorBrush x:Key="SliderThumbBackgroundBrush" Color="{StaticResource Color_005}" />
  <SolidColorBrush x:Key="SliderThumbHoverBackgroundBrush" Color="{StaticResource Color_010}" />
  <SolidColorBrush x:Key="SliderThumbPressedBackgroundBrush" Color="{StaticResource Color_011}" />

  <igPrimitives:ValueConverterGroup x:Key="boolToVisibilityConverter">
    <!-- if true sets visibility to Visible -->
    <igPrimitives:FixedValueConverter>
      <igPrimitives:FixedValueConverter.SourceValue>
        <sys:Boolean>True</sys:Boolean>
      </igPrimitives:FixedValueConverter.SourceValue>
      <igPrimitives:FixedValueConverter.DestinationValue>
        <Visibility>Visible</Visibility>
      </igPrimitives:FixedValueConverter.DestinationValue>
    </igPrimitives:FixedValueConverter>
    <!-- if false sets visibility to Collapsed -->
    <igPrimitives:FixedValueConverter>
      <igPrimitives:FixedValueConverter.DestinationValue>
        <Visibility>Collapsed</Visibility>
      </igPrimitives:FixedValueConverter.DestinationValue>
    </igPrimitives:FixedValueConverter>
  </igPrimitives:ValueConverterGroup>
  <igPrimitives:ValueConverterGroup x:Key="NotBoolToVisibilityConverter">
    <!-- if true sets visibility to Collapsed -->
    <igPrimitives:FixedValueConverter>
      <igPrimitives:FixedValueConverter.SourceValue>
        <sys:Boolean>True</sys:Boolean>
      </igPrimitives:FixedValueConverter.SourceValue>
      <igPrimitives:FixedValueConverter.DestinationValue>
        <Visibility>Collapsed</Visibility>
      </igPrimitives:FixedValueConverter.DestinationValue>
    </igPrimitives:FixedValueConverter>
    <!-- if false sets visibility to Visible -->
    <igPrimitives:FixedValueConverter>
      <igPrimitives:FixedValueConverter.DestinationValue>
        <Visibility>Visible</Visibility>
      </igPrimitives:FixedValueConverter.DestinationValue>
    </igPrimitives:FixedValueConverter>
  </igPrimitives:ValueConverterGroup>

  <!-- *********************************  IncrementButton Style  ********************************* -->
  <Style x:Key="DecreaseButtonStyle" TargetType="RepeatButton">
    <Setter Property="Background" Value="{StaticResource RepeatButtonBackgroundBrush}" />
    <Setter Property="BorderBrush" Value="{StaticResource RepeatButtonBackgroundBrush}" />
    <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
    <Setter Property="Height" Value="8" />
    <Setter Property="Width" Value="8" />
    <Setter Property="BorderThickness" Value="0" />
    <Setter Property="Padding" Value="0" />
    <Setter Property="HorizontalContentAlignment" Value="Center" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="RepeatButton">
          <Grid x:Name="root" Background="{StaticResource TransparentBrush}" igPrimitives:XamlHelper.SnapsToDevicePixels="True">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="MouseOver">
                  <Storyboard>
                    <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="hoverElem" d:IsOptimized="True" />
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Pressed">
                  <Storyboard>
                    <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="pressedElem" d:IsOptimized="True" />
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Disabled">
                  <Storyboard>
                    <DoubleAnimation Duration="0" To="0.35" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="root" />
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="FocusStates">
                <VisualState x:Name="Focused" />
                <VisualState x:Name="Unfocused" />
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Rectangle x:Name="normalElem" Width="6" Height="2" Fill="{TemplateBinding Background}" Stretch="Fill" UseLayoutRounding="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" />
            <Rectangle x:Name="hoverElem" Width="6" Height="2" Fill="{StaticResource RepeatButtonHoverBackgroundBrush}" Stretch="Fill" UseLayoutRounding="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" Opacity="0" />
            <Rectangle x:Name="pressedElem" Width="6" Height="2" Fill="{StaticResource RepeatButtonPressedBackgroundBrush}" Stretch="Fill" UseLayoutRounding="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" Opacity="0" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- *********************************  IncrementButton Style  ********************************* -->
  <Style x:Key="IncreaseButtonStyle" TargetType="RepeatButton">
    <Setter Property="Background" Value="{StaticResource RepeatButtonBackgroundBrush}" />
    <Setter Property="BorderBrush" Value="{StaticResource RepeatButtonBackgroundBrush}" />
    <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
    <Setter Property="Height" Value="8" />
    <Setter Property="Width" Value="8" />
    <Setter Property="BorderThickness" Value="0" />
    <Setter Property="Padding" Value="0" />
    <Setter Property="HorizontalContentAlignment" Value="Center" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="RepeatButton">
          <Grid x:Name="root" Background="{StaticResource TransparentBrush}" igPrimitives:XamlHelper.SnapsToDevicePixels="True">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="MouseOver">
                  <Storyboard>
                    <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="hoverElem" d:IsOptimized="True" />
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Pressed">
                  <Storyboard>
                    <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="pressedElem" d:IsOptimized="True" />
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Disabled">
                  <Storyboard>
                    <DoubleAnimation Duration="0" To="0.35" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="root" />
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="FocusStates">
                <VisualState x:Name="Focused" />
                <VisualState x:Name="Unfocused" />
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Path x:Name="normalElem" Width="8" Height="8" Data="M0,4 H8 M4,0 V8" StrokeThickness="2" Stroke="{TemplateBinding Background}" UseLayoutRounding="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" />
            <Path x:Name="hoverElem" Width="8" Height="8" Data="M0,4 H8 M4,0 V8" StrokeThickness="2" Stroke="{StaticResource RepeatButtonHoverBackgroundBrush}" UseLayoutRounding="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" Opacity="0" />
            <Path x:Name="pressedElem" Width="8" Height="8" Data="M0,4 H8 M4,0 V8" StrokeThickness="2" Stroke="{StaticResource RepeatButtonPressedBackgroundBrush}" UseLayoutRounding="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" Opacity="0" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- *********************************  Tick Styles  ********************************* -->
  <DataTemplate x:Key="HorizontalTick">
    <Rectangle Width="1" Height="5" Fill="{StaticResource TickBackgroundBrush}" />
  </DataTemplate>
  <DataTemplate x:Key="VerticalTick">
    <Rectangle Width="5" Height="1" Fill="{StaticResource TickBackgroundBrush}" />
  </DataTemplate>

    <!-- *********************************  SliderThumbTooltip Style  ********************************* -->
    <Style x:Key="SliderThumbTooltip" TargetType="ToolTip">
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="FontFamily" Value="Segoe UI" />
        <Setter Property="FontSize"  Value="12" />
        <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
        <Setter Property="Background" Value="{StaticResource TooltipBackgroundBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource TooltipBorderBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Padding" Value="12,9" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToolTip">
                    <Grid >
                        <Rectangle Stroke="{TemplateBinding BorderBrush}" Fill="{TemplateBinding Background}" StrokeThickness="{TemplateBinding BorderThickness}" />
                        <StackPanel Orientation="Horizontal" d:LayoutOverrides="Width, Height">
                            <ContentPresenter Margin="{TemplateBinding Padding}"/>
                        </StackPanel>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- *********************************  XamSliderBase Style  ********************************* -->
  <Style TargetType="igBase:XamSliderBase" x:Key="SliderBaseStyle">
    <Setter Property="Orientation" Value="Horizontal" />
    <Setter Property="HorizontalTickMarksTemplate" Value="{StaticResource HorizontalTick}" />
    <Setter Property="VerticalTickMarksTemplate" Value="{StaticResource VerticalTick}" />
    <Setter Property="IsMouseWheelEnabled" Value="False" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igBase:XamSliderBase">
          <Grid x:Name="RootElement" Background="{TemplateBinding Background}">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="OrientationStates">
                <VisualState x:Name="Horizontal" />
                <VisualState x:Name="Vertical">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HorizontalSlider" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Collapsed</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="VerticalSlider" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid x:Name="HorizontalSlider">
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
              </Grid.ColumnDefinitions>
              <Grid Grid.Column="0" Visibility="{Binding Path=IsDirectionReversed, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource NotBoolToVisibilityConverter }}" Margin="0,0,4,0" igBasePrim:XamlHelper.Focusable="False">
                <RepeatButton x:Name="HorizontalDecrease" Visibility="{TemplateBinding DecreaseButtonVisibility}" Style="{StaticResource DecreaseButtonStyle}" >
                  <igBase:Commanding.Command>
                    <igBase:XamSliderBaseCommandSource EventName="Click" CommandType="SmallDecrease" />
                  </igBase:Commanding.Command>
                </RepeatButton>
              </Grid>
              <Grid Grid.Column="0" Visibility="{Binding Path=IsDirectionReversed, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource boolToVisibilityConverter }}" Margin="0,0,4,0" igBasePrim:XamlHelper.Focusable="False">
                <RepeatButton x:Name="HorizontalDecreaseReversed" Visibility="{TemplateBinding DecreaseButtonVisibility}" Style="{StaticResource IncreaseButtonStyle}">
                  <igBase:Commanding.Command>
                    <igBase:XamSliderBaseCommandSource EventName="Click" CommandType="SmallDecrease" />
                  </igBase:Commanding.Command>
                </RepeatButton>
              </Grid>
              <Grid Grid.Column="2" Margin="6,0,0,0" Visibility="{Binding Path=IsDirectionReversed, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource NotBoolToVisibilityConverter }}" igBasePrim:XamlHelper.Focusable="False">
                <RepeatButton x:Name="HorizontalIncrease" Visibility="{TemplateBinding IncreaseButtonVisibility}" Style="{StaticResource IncreaseButtonStyle}" RenderTransformOrigin="0.5,0.5">
                  <igBase:Commanding.Command>
                    <igBase:XamSliderBaseCommandSource EventName="Click" CommandType="SmallIncrease" />
                  </igBase:Commanding.Command>
                </RepeatButton>
              </Grid>
              <Grid Grid.Column="2" Margin="6,0,0,0" Visibility="{Binding Path=IsDirectionReversed, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource boolToVisibilityConverter }}" igBasePrim:XamlHelper.Focusable="False">
                <RepeatButton x:Name="HorizontalIncreaseReversed" Visibility="{TemplateBinding IncreaseButtonVisibility}" Style="{StaticResource DecreaseButtonStyle}" RenderTransformOrigin="0.5,0.5">
                  <igBase:Commanding.Command>
                    <igBase:XamSliderBaseCommandSource EventName="Click" CommandType="SmallIncrease" />
                  </igBase:Commanding.Command>
                </RepeatButton>
              </Grid>
              <Grid x:Name="HorizontalSlidersGrid" Grid.Column="1">
                <Grid.RowDefinitions>
                  <RowDefinition Height="*" />
                  <RowDefinition Height="Auto" />
                  <RowDefinition Height="*" />
                </Grid.RowDefinitions>
              </Grid>
              <Grid x:Name="HorizontalTickMarks" Grid.Column="1" Background="{StaticResource TransparentBrush}" Margin="0" />
              <Grid x:Name="HorizontalTrack" Height="11" Grid.Column="1" Background="{StaticResource TransparentBrush}">
                <Rectangle Fill="{StaticResource HSliderTrackBackgroundBrush}" Height="1" Margin="0" igPrimitives:XamlHelper.SnapsToDevicePixels="True" />
                <Canvas x:Name="HorizontalTrackFills" />
                <Canvas x:Name="HorizontalThumbs" />
              </Grid>
            </Grid>
            <Grid x:Name="VerticalSlider" Visibility="Collapsed">
              <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
                <RowDefinition Height="Auto" />
              </Grid.RowDefinitions>
              <Grid Grid.Row="2" Visibility="{Binding Path=IsDirectionReversed, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource NotBoolToVisibilityConverter }}" Margin="0,6,0,0" igBasePrim:XamlHelper.Focusable="False">
                <RepeatButton x:Name="VerticalDecrease" Visibility="{TemplateBinding DecreaseButtonVisibility}" Style="{StaticResource DecreaseButtonStyle}" RenderTransformOrigin="0.5,0.5">
                  <igBase:Commanding.Command>
                    <igBase:XamSliderBaseCommandSource EventName="Click" CommandType="SmallDecrease" />
                  </igBase:Commanding.Command>
                </RepeatButton>
              </Grid>
              <Grid Grid.Row="2" Visibility="{Binding Path=IsDirectionReversed, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource boolToVisibilityConverter }}" Margin="0,6,0,0" igBasePrim:XamlHelper.Focusable="False">
                <RepeatButton x:Name="VerticalDecreaseReversed" Visibility="{TemplateBinding DecreaseButtonVisibility}" Style="{StaticResource IncreaseButtonStyle}" RenderTransformOrigin="0.5,0.5">
                  <igBase:Commanding.Command>
                    <igBase:XamSliderBaseCommandSource EventName="Click" CommandType="SmallDecrease" />
                  </igBase:Commanding.Command>
                </RepeatButton>
              </Grid>
              <Grid Visibility="{Binding Path=IsDirectionReversed, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource NotBoolToVisibilityConverter }}" Margin="0,0,0,4" igBasePrim:XamlHelper.Focusable="False">
                <RepeatButton x:Name="VerticalIncrease" Visibility="{TemplateBinding IncreaseButtonVisibility}" Style="{StaticResource IncreaseButtonStyle}" RenderTransformOrigin="0.5,0.5">
                  <igBase:Commanding.Command>
                    <igBase:XamSliderBaseCommandSource EventName="Click" CommandType="SmallIncrease" />
                  </igBase:Commanding.Command>
                </RepeatButton>
              </Grid>
              <Grid Visibility="{Binding Path=IsDirectionReversed, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource boolToVisibilityConverter }}" Margin="0,0,0,4" igBasePrim:XamlHelper.Focusable="False">
                <RepeatButton x:Name="VerticalIncreaseReversed" Visibility="{TemplateBinding IncreaseButtonVisibility}" Style="{StaticResource DecreaseButtonStyle}" RenderTransformOrigin="0.5,0.5">
                  <igBase:Commanding.Command>
                    <igBase:XamSliderBaseCommandSource EventName="Click" CommandType="SmallIncrease" />
                  </igBase:Commanding.Command>
                </RepeatButton>
              </Grid>
              <Grid x:Name="VerticalSlidersGrid" Grid.Row="1">
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="*" />
                  <ColumnDefinition Width="Auto" />
                  <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
              </Grid>
              <Grid x:Name="VerticalTickMarks" Grid.Row="1" Background="{StaticResource TransparentBrush}" Margin="0" />
              <Grid x:Name="VerticalTrack" Width="11" Grid.Row="1" Background="{StaticResource TransparentBrush}">
                <Rectangle Fill="{StaticResource VSliderTrackBackgroundBrush}" Width="1" Margin="0" igPrimitives:XamlHelper.SnapsToDevicePixels="True" />
                <Canvas x:Name="VerticalTrackFills" />
                <Canvas x:Name="VerticalThumbs" />
              </Grid>
            </Grid>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="igBase:XamSliderBase" BasedOn="{StaticResource SliderBaseStyle}" />

  <!-- ********************************* XamNumericSlider Style  ********************************* -->
  <Style TargetType="igBase:XamNumericSlider" BasedOn="{StaticResource SliderBaseStyle}">
    <Setter Property="MaxValue" Value="100" />
    <Setter Property="MinValue" Value="0" />
    <Setter Property="SmallChange" Value="1" />
    <Setter Property="LargeChange" Value="10" />
    <Setter Property="TrackClickAction" Value="None" />
  </Style>

  <!-- ********************************* XamDateTimeSlider Style  ********************************* -->
  <Style TargetType="igBase:XamDateTimeSlider" BasedOn="{StaticResource SliderBaseStyle}">
    <Setter Property="SmallChange" Value="1" />
    <Setter Property="LargeChange" Value="10" />
    <Setter Property="SmallChangeType" Value="Days" />
    <Setter Property="LargeChangeType" Value="Days" />
    <Setter Property="TrackClickAction" Value="None" />
  </Style>

  <!-- ********************************* XamNumericRangeSlider Style  ********************************* -->
  <Style TargetType="igBase:XamNumericRangeSlider" BasedOn="{StaticResource SliderBaseStyle}">
    <Setter Property="MaxValue" Value="100" />
    <Setter Property="MinValue" Value="0" />
    <Setter Property="SmallChange" Value="1" />
    <Setter Property="LargeChange" Value="10" />
    <Setter Property="TrackClickAction" Value="None" />
  </Style>

  <!-- ********************************* XamDateTimeRangeSlider Style  ********************************* -->
  <Style TargetType="igBase:XamDateTimeRangeSlider" BasedOn="{StaticResource SliderBaseStyle}">
    <Setter Property="SmallChange" Value="1" />
    <Setter Property="LargeChange" Value="10" />
    <Setter Property="SmallChangeType" Value="Days" />
    <Setter Property="LargeChangeType" Value="Days" />
    <Setter Property="TrackClickAction" Value="None" />
  </Style>

  <!-- ********************************* XamSliderThumbBase Style  ********************************* -->
  <Style TargetType="igBase:XamSliderThumbBase" x:Key="XamSliderThumbBaseStyle">
    <Setter Property="Background" Value="{StaticResource SliderThumbBackgroundBrush}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igBase:XamSliderThumbBase">
          <Grid x:Name="RootElement">
            <ToolTipService.ToolTip>
              <ToolTip x:Name="ThumbToolTip" Style="{StaticResource SliderThumbTooltip}" 
                       ContentTemplate="{TemplateBinding ToolTipTemplate}" Visibility="{TemplateBinding ToolTipVisibility}" />
            </ToolTipService.ToolTip>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="OrientationStates">
                <VisualState x:Name="Horizontal" />
                <VisualState x:Name="Vertical">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HorizontalThumb" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Collapsed</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="VerticalThumb" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Enabled" />
                <VisualState x:Name="Disabled">
                  <Storyboard>
                    <DoubleAnimation Duration="0" To="0.35" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="RootElement" d:IsOptimized="True" />
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="FocusStates">
                <VisualState x:Name="Unfocused">
                  <Storyboard>
                    <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="DragElem" d:IsOptimized="True" />
                    <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="verticalDragElem" d:IsOptimized="True" />
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Focused">
                  <Storyboard>
                    <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="DragElem" d:IsOptimized="True" />
                    <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="verticalDragElem" d:IsOptimized="True" />
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="ActiveStates">
                <VisualState x:Name="Inactive" />
                <VisualState x:Name="Active">
                  <Storyboard>
                    <DoubleAnimation Storyboard.TargetName="HorizontalThumbContent" Storyboard.TargetProperty="Opacity" To="1" />
                    <DoubleAnimation Storyboard.TargetName="VerticalThumbContent" Storyboard.TargetProperty="Opacity" To="1" />
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="HoverStates">
                <VisualState x:Name="Hover">
                  <Storyboard>
                    <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="HoverElem" d:IsOptimized="True" />
                    <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="verticalHoverElem" d:IsOptimized="True" />
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="NoHover" />
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid x:Name="HorizontalThumb" VerticalAlignment="Center" HorizontalAlignment="Center">
              <Grid x:Name="HorizontalThumbContent" Height="11" Width="4" igPrimitives:XamlHelper.SnapsToDevicePixels="True">
                <Rectangle x:Name="normalElem" Fill="{TemplateBinding Background}" />
                <Rectangle x:Name="HoverElem" Fill="{StaticResource SliderThumbHoverBackgroundBrush}" Opacity="0" />
                <Rectangle x:Name="DragElem" Fill="{StaticResource SliderThumbPressedBackgroundBrush}" Opacity="0" />
              </Grid>
            </Grid>
            <Grid x:Name="VerticalThumb" Visibility="Collapsed" VerticalAlignment="Center" HorizontalAlignment="Center">
              <Grid x:Name="VerticalThumbContent" Height="4" Width="11" igPrimitives:XamlHelper.SnapsToDevicePixels="True">
                <Rectangle x:Name="verticalnormalElem" Fill="{TemplateBinding Background}" />
                <Rectangle x:Name="verticalHoverElem" Fill="{StaticResource SliderThumbHoverBackgroundBrush}" Opacity="0" />
                <Rectangle x:Name="verticalDragElem" Fill="{StaticResource SliderThumbPressedBackgroundBrush}" Opacity="0" />
              </Grid>
            </Grid>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style TargetType="igBase:XamSliderDateTimeThumb" BasedOn="{StaticResource XamSliderThumbBaseStyle}" />
  <Style TargetType="igBase:XamSliderNumericThumb" BasedOn="{StaticResource XamSliderThumbBaseStyle}" />

  <!-- *********************************  TrackFillThumb Style  ********************************* -->
  <Style TargetType="igBase:XamSliderThumbBase" x:Key="TrackFillThumbStyle">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igBase:XamSliderThumbBase">
          <Grid x:Name="RootElement">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="OrientationStates">
                <VisualState x:Name="Horizontal">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HorizontalThumb" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>
                            Visible
                          </Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="VerticalThumb" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>
                            Collapsed
                          </Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Vertical">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HorizontalThumb" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>
                            Collapsed
                          </Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="VerticalThumb" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>
                            Visible
                          </Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="FocusStates">
                <VisualState x:Name="Unfocused" />
                <VisualState x:Name="Focused" />
              </VisualStateGroup>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Enabled" />
                <VisualState x:Name="Disabled">
                  <Storyboard>
                    <DoubleAnimation Duration="0" To="0.35" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="RootElement" d:IsOptimized="True" />
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="ActiveStates">
                <VisualState x:Name="Inactive" />
                <VisualState x:Name="Active" />
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid x:Name="HorizontalThumb">
              <Rectangle Fill="{TemplateBinding Background}" Height="1" VerticalAlignment="Center" igPrimitives:XamlHelper.SnapsToDevicePixels="True" />
            </Grid>
            <Grid x:Name="VerticalThumb">
              <Rectangle Fill="{TemplateBinding Background}" Width="1" HorizontalAlignment="Center" igPrimitives:XamlHelper.SnapsToDevicePixels="True" />
            </Grid>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- ********************************* TrackFill Style  ********************************* -->
  <Style TargetType="igPrimitives:TrackFill" BasedOn="{StaticResource TrackFillThumbStyle}">
    <Setter Property="Background" Value="{StaticResource TrackFillBackgroundBrush}" />
  </Style>
</ResourceDictionary>