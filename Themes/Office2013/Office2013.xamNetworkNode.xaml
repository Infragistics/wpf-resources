<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    xmlns:ig="http://schemas.infragistics.com/xaml"
                    xmlns:NetworkNode="http://schemas.infragistics.com/xaml"
                    xmlns:igPrim="http://schemas.infragistics.com/xaml/primitives"
                    mc:Ignorable="d">

  <!-- *********************************  RESOURCES  ********************************* -->
  <ResourceDictionary.MergedDictionaries> 
    <ResourceDictionary Source="Office2013.Styles.xaml" />
  </ResourceDictionary.MergedDictionaries>

  <!-- ********************************** BRUSHES **********************************-->
  <!-- NetworkNode Brushes -->
  <SolidColorBrush x:Key="NetworkNodeChartPreviewBrush" Color="{StaticResource Color_019}" Opacity="0.7"/>
  <SolidColorBrush x:Key="NetworkNodeConnectorLineBrush" Color="{StaticResource Color_005}"/>
  <SolidColorBrush x:Key="NetworkNodeDragStrokeBrush" Color="{StaticResource Color_003}"/>

  <!-- NetworkNode NodeControl Brushes -->
  <SolidColorBrush x:Key="NetworkNodeNodeControlBackgroundBrush" Color="{StaticResource Color_009}"/>
  <SolidColorBrush x:Key="NetworkNodeNodeControlBorderBrush" Color="{StaticResource Color_005}"/>
  <SolidColorBrush x:Key="NetworkNodeNodeControlHoverBackgroundBrush" Color="{StaticResource Color_010}"/>
  <SolidColorBrush x:Key="NetworkNodeNodeControlHoverBorderBrush" Color="{StaticResource Color_011}"/>
  <SolidColorBrush x:Key="NetworkNodeNodeControlSelectedBackgroundBrush" Color="{StaticResource Color_011}"/>
  <SolidColorBrush x:Key="NetworkNodeNodeControlSelectedBorderBrush" Color="{StaticResource Color_012}"/>
  <SolidColorBrush x:Key="NetworkNodeNodeControlFocusedBorderBrush" Color="{StaticResource Color_012}"/>
  <SolidColorBrush x:Key="NetworkNodeNodeControlReadOnlyBackgroundBrush" Color="{StaticResource Color_007}"/>
  <SolidColorBrush x:Key="NetworkNodeNodeControlReadOnlyBorderBrush" Color="{StaticResource Color_006}"/>
  <SolidColorBrush x:Key="NetworkNodeNodeControlEditingBorderBrush" Color="{StaticResource Color_012}"/>
  <SolidColorBrush x:Key="NetworkNodeNodeControlDisabledBackgroundBrush" Color="{StaticResource Color_007}"/>

  <!-- NetworkNode ToggleButton Brushes -->
  <SolidColorBrush x:Key="NetworkNodeToggleButtonBackgroundBrush" Color="{StaticResource Color_009}"/>
  <SolidColorBrush x:Key="NetworkNodeToggleButtonBorderBrush" Color="{StaticResource Color_005}"/>
  <SolidColorBrush x:Key="NetworkNodeToggleButtonHoverBackgroundBrush" Color="{StaticResource Color_010}"/>
  <SolidColorBrush x:Key="NetworkNodeToggleButtonHoverBorderBrush" Color="{StaticResource Color_011}"/>
  <SolidColorBrush x:Key="NetworkNodeToggleButtonPressedBackgroundBrush" Color="{StaticResource Color_011}"/>
  <SolidColorBrush x:Key="NetworkNodeToggleButtonPressedBorderBrush" Color="{StaticResource Color_012}"/>
  <SolidColorBrush x:Key="NetworkNodeToggleButtonFocusBorderBrush" Color="{StaticResource Color_012}"/>
  <SolidColorBrush x:Key="NetworkNodeToggleButtonDisabledBackgroundBrush" Color="{StaticResource Color_007}"/>
  <SolidColorBrush x:Key="NetworkNodeToggleButtonExpandBackgroundBrush" Color="{StaticResource Color_001}"/>
  <SolidColorBrush x:Key="NetworkNodeToggleButtonCollapseBackgroundBrush" Color="{StaticResource Color_001}"/>

  <!-- *********************************  XamNetworkNode Style ********************************* -->
  <Style x:Key="XamNetworkNodeStyle" TargetType="NetworkNode:XamNetworkNode" >
    <Setter Property="BorderThickness" Value="1"/>
    <Setter Property="Padding" Value="2"/>
    <Setter Property="DragStroke" Value="{StaticResource NetworkNodeDragStrokeBrush}"/>
    <Setter Property="DragStrokeThickness" Value="1"/>
    <Setter Property="PreviewBrush" Value="{StaticResource NetworkNodeChartPreviewBrush}"/>
    <Setter Property="ToolTipStyle" Value="{StaticResource ToolTipStyle}"/>
    <!-- Connector properties -->
    <Setter Property="Line" Value="{StaticResource NetworkNodeConnectorLineBrush}"/>
    <Setter Property="LineThickness" Value="1"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="NetworkNode:XamNetworkNode">
          <Border Margin="{TemplateBinding Padding}" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
            <Grid>
              <ContentPresenter x:Name="ContentPresenter"/>
              <NetworkNode:NetworkNodeNodesPanel x:Name="NodesPanel" Background="{StaticResource TransparentBrush}">
              </NetworkNode:NetworkNodeNodesPanel>
              <Canvas x:Name="Overlay"/>
              <ig:XamOverviewPlusDetailPane x:Name="Thumbnail" IsZoomable="True"  Visibility="{TemplateBinding OverviewPlusDetailPaneVisibility}" HorizontalAlignment="{TemplateBinding HorizontalOverviewPlusDetailPaneAlignment}" VerticalAlignment="{TemplateBinding VerticalOverviewPlusDetailPaneAlignment}"/>
            </Grid>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="NetworkNode:XamNetworkNode" BasedOn="{StaticResource XamNetworkNodeStyle}" />

  <!-- *********************************  NodeToggleButton Style  ********************************* -->
  <Style x:Key="NodeToggleButtonStyle" TargetType="ToggleButton">
    <Setter Property="IsTabStop" Value="False"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="ToggleButton">
          <Grid>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal"/>
                <VisualState x:Name="MouseOver">
                  <Storyboard>
                    <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="over" d:IsOptimized="True"/>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Pressed">
                  <Storyboard>
                    <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="pressed" d:IsOptimized="True"/>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Disabled">
                  <Storyboard>
                    <DoubleAnimation Duration="0" To="0.6" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="DisabledFill" d:IsOptimized="True"/>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="CheckStates">
                <VisualState x:Name="Checked">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="expand">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Unchecked"/>
                <VisualState x:Name="Indeterminate"/>
              </VisualStateGroup>
              <VisualStateGroup x:Name="FocusStates">
                <VisualState x:Name="Focused">
                  <Storyboard>
                    <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="focused" d:IsOptimized="True"/>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Unfocused"/>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Rectangle x:Name="normal" Fill="{StaticResource NetworkNodeToggleButtonBackgroundBrush}" Stroke="{StaticResource NetworkNodeToggleButtonBorderBrush}" StrokeThickness="1"/>
            <Rectangle x:Name="over" Fill="{StaticResource NetworkNodeToggleButtonHoverBackgroundBrush}" Opacity="0" StrokeThickness="1" Stroke="{StaticResource NetworkNodeToggleButtonHoverBorderBrush}" />
            <Rectangle x:Name="pressed" Fill="{StaticResource NetworkNodeToggleButtonPressedBackgroundBrush}" Opacity="0" StrokeThickness="1" Stroke="{StaticResource NetworkNodeToggleButtonPressedBorderBrush}"/>
            <Rectangle x:Name="focused" StrokeThickness="1" Opacity="0" Stroke="{StaticResource NetworkNodeToggleButtonFocusBorderBrush}"/>
            <Grid x:Name="grid" HorizontalAlignment="Center" VerticalAlignment="Center" Width="8" Height="8">
              <Path x:Name="expand" Data="M3,0 L5,0 L5,3 L8,3 L8,5 L5,5 L5,8 L3,8 L3,5 L0,5 L0,3 L3,3 z" Fill="{StaticResource NetworkNodeToggleButtonExpandBackgroundBrush}" Stretch="Fill" UseLayoutRounding="False" HorizontalAlignment="Left" VerticalAlignment="Top" Visibility="Collapsed"/>
              <Path x:Name="collapse" Data="M0,0 L8,0 L8,2 L0,2 z" Fill="{StaticResource NetworkNodeToggleButtonCollapseBackgroundBrush}" Height="2" Stretch="Fill" UseLayoutRounding="False"/>
            </Grid>
            <Rectangle x:Name="DisabledFill" Fill="{StaticResource NetworkNodeToggleButtonDisabledBackgroundBrush}" Opacity="0"/>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- *********************************  NetworkNode NodeControl Style  ********************************* -->
  <Style x:Key="NetworkNodeNodeControlStyle" TargetType="NetworkNode:NetworkNodeNodeControl">
    <Setter Property="FontFamily" Value="Segoe UI"/>
    <Setter Property="FontSize" Value="12"/>
    <Setter Property="HorizontalAlignment" Value="Left"/>
    <Setter Property="VerticalAlignment" Value="Top"/>
    <Setter Property="BorderThickness" Value="1"/>
    <Setter Property="CornerRadius" Value="0"/>
    <Setter Property="MinWidth" Value="30"/>
    <Setter Property="MinHeight" Value="26"/>
    <Setter Property="Margin" Value="0"/>
    <Setter Property="Padding" Value="6,0,6,1"/>
    <Setter Property="BorderBrush" Value="{StaticResource NetworkNodeNodeControlBorderBrush}"/>
    <Setter Property="Background" Value="{StaticResource NetworkNodeNodeControlBackgroundBrush}"/>
    <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}"/>
    <Setter Property="HorizontalContentAlignment" Value="Center"/>
    <Setter Property="VerticalContentAlignment" Value="Center"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="NetworkNode:NetworkNodeNodeControl">
          <Grid>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal"/>
                <VisualState x:Name="MouseOver">
                  <Storyboard>
                    <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="NodeOver" d:IsOptimized="True"/>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Disabled">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="DisabledFill">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Pressed"/>
                <VisualState x:Name="ReadOnly">
                  <Storyboard>
                    <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="NodeReadOnly" d:IsOptimized="True"/>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="FocusStates">
                <VisualState x:Name="Focused">
                  <Storyboard>
                    <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="NodeFocused" d:IsOptimized="True"/>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Unfocused"/>
              </VisualStateGroup>
              <VisualStateGroup x:Name="SelectedStates">
                <VisualState x:Name="Unselected">
                </VisualState>
                <VisualState x:Name="Selected">
                  <Storyboard>
                    <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="NodeSelected" d:IsOptimized="True"/>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="EditStates">
                <VisualState x:Name="NotEditing"/>
                <VisualState x:Name="Editing">
                  <Storyboard>
                    <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="NodeEditing" d:IsOptimized="True"/>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Border x:Name="NodeBackground" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"/>
            <Border x:Name="NodeReadOnly" Background="{StaticResource NetworkNodeNodeControlReadOnlyBackgroundBrush}" BorderBrush="{StaticResource NetworkNodeNodeControlReadOnlyBorderBrush}" CornerRadius="{TemplateBinding CornerRadius}" BorderThickness="{TemplateBinding BorderThickness}" Opacity="0" />
            <Border x:Name="NodeOver" BorderBrush="{StaticResource NetworkNodeNodeControlHoverBorderBrush}"  Background="{StaticResource NetworkNodeNodeControlHoverBackgroundBrush}" BorderThickness="{TemplateBinding BorderThickness}" Opacity="0" />
            <Border x:Name="NodeSelected" BorderBrush="{StaticResource NetworkNodeNodeControlSelectedBorderBrush}" Background="{StaticResource NetworkNodeNodeControlSelectedBackgroundBrush}" BorderThickness="{TemplateBinding BorderThickness}" Opacity="0" />
            <Border x:Name="NodeFocused" BorderBrush="{StaticResource NetworkNodeNodeControlFocusedBorderBrush}" Opacity="0" BorderThickness="1" />
            <Border x:Name="NodeEditing" BorderBrush="{StaticResource NetworkNodeNodeControlEditingBorderBrush}" CornerRadius="{TemplateBinding CornerRadius}" BorderThickness="1" Opacity="0" />
            <Rectangle x:Name="DisabledFill" Fill="{StaticResource NetworkNodeNodeControlDisabledBackgroundBrush}" Stroke="{StaticResource NetworkNodeNodeControlReadOnlyBorderBrush}"  StrokeThickness="1"  Visibility="Collapsed"  />

            <ContentControl x:Name="NodeContainer" Margin="{TemplateBinding Padding}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Foreground="{TemplateBinding Foreground}" >
              <ContentPresenter x:Name="NodePresenter"/>
            </ContentControl>
            <ToggleButton x:Name="ExpanderButton" Style="{StaticResource NodeToggleButtonStyle}"
                 Margin="-7,-7,0,0" Width="14" Height="14" HorizontalAlignment="Left" VerticalAlignment="Top"/>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="NetworkNode:NetworkNodeNodeControl" BasedOn="{StaticResource NetworkNodeNodeControlStyle}" />

</ResourceDictionary>