<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
                    xmlns:sys="clr-namespace:System;assembly=mscorlib" 
                    xmlns:ig="http://schemas.infragistics.com/xaml" 
                    xmlns:igPrim="http://schemas.infragistics.com/xaml/primitives" 
                    xmlns:igLocal="http://schemas.infragistics.com/xaml" 
                    xmlns:igConverters="http://infragistics.com/Windows"
                    xmlns:igEditors="http://infragistics.com/Editors">

    <!--  *********************************  RESOURCES  *********************************  -->
    <ResourceDictionary.MergedDictionaries>     
        <ResourceDictionary Source="RoyalLight.Styles.xaml" />
        <ResourceDictionary Source="RoyalLight.xamMenu.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <!--  *********************************  COMMON GLYPHS  *********************************  -->
    <!--  GridSplitter Glyph  -->
    <Geometry x:Key="GridSplitterGlyph">M 15 12 L 13.5 12 L 12 12 L 12 13.5 L 12 15 L 13.5 15 L 15 15 L 15 13.5 L 15 12 ZM 15 6 L 13.5 6 L 12 6 L 12 7.5 L 12 9 L 13.5 9 L 15 9 L 15 7.5 L 15 6 ZM 15 0 L 13.5 0 L 12 0 L 12 1.5 L 12 3 L 13.5 3 L 15 3 L 15 1.5 L 15 0 Z</Geometry>

    <!--  TabArea Scroll Glyph  -->
    <Geometry x:Key="EllipsisGlyph">M 8 0 L 8 2 L 10 2 L 10 0 L 8 0 ZM 4 0 L 4 2 L 6 2 L 6 0 L 4 0 ZM 0 0 L 0 2 L 2 2 L 2 0 L 0 0 Z</Geometry>

    <!--  SheetTab DropIndicator Glyph  -->
    <Geometry x:Key="SheetTabDropIndicatorGlyph">M 0,0 4,4 8,0 Z</Geometry>

    <!--  SelectAll Button Glyph  -->
    <Geometry x:Key="SelectAllGlyph">M 0,1 1,1 1,0 Z</Geometry>

    <!--  ********************************** BRUSHES **********************************  -->
    <!--  XamSpreadsheet Brushes  -->
    <SolidColorBrush x:Key="XamSpreadsheetBackgroundBrush" Color="{StaticResource Color_002}" />
    <SolidColorBrush x:Key="XamSpreadsheetBorderBrush" Color="{StaticResource Color_009}" />
    <SolidColorBrush x:Key="SheetScrollBarBackgroundBrush" Color="{StaticResource Color_046}" />
    <SolidColorBrush x:Key="SheetTabDropIndicatorBackgroundBrush" Color="{StaticResource Color_013}" />
    <SolidColorBrush x:Key="SheetFormulaBarAreaBackgroundBrush" Color="{StaticResource Color_002}" />
    <SolidColorBrush x:Key="SheetFormulaBarAreaButtonForegroundBrush" Color="{StaticResource Color_002}" />
    <SolidColorBrush x:Key="SheetTabItemAreaBackgroundBrush" Color="{StaticResource Color_002}" />
    <SolidColorBrush x:Key="SheetPaneSplitterBackgroundBrush" Color="{StaticResource Color_003}" />
    <SolidColorBrush x:Key="SheetPaneSplitterHoverBackgroundBrush" Color="{StaticResource Color_010}" />

    <!--  SelectAll Button Brushes  -->
    <SolidColorBrush x:Key="SheetSelectAllButtonBackgroundBrush" Color="{StaticResource Color_002}" />
    <SolidColorBrush x:Key="SheetSelectAllTriangleBackgroundBrush" Color="{StaticResource Color_004}" />
    <SolidColorBrush x:Key="SheetSelectAllTriangleHoverBackgroundBrush" Color="{StaticResource Color_006}" />
    <SolidColorBrush x:Key="SheetSelectAllTriangleSelectedBackgroundBrush" Color="{StaticResource Color_011}" />

    <!--  TabArea Button Brushes  -->
    <SolidColorBrush x:Key="TabAreaAddButtonForegroundBrush" Color="{StaticResource Color_004}" />
    <SolidColorBrush x:Key="TabAreaAddButtonHoverForegroundBrush" Color="{StaticResource Color_006}" />
    <SolidColorBrush x:Key="TabAreaAddButtonPressedForegroundBrush" Color="{StaticResource Color_011}" />
    <SolidColorBrush x:Key="TabAreaAddButtonDisabledForegroundBrush" Color="{StaticResource Color_003}" />
    <SolidColorBrush x:Key="TabAreaScrollButtonForegroundBrush" Color="{StaticResource Color_004}" />
    <SolidColorBrush x:Key="TabAreaScrollButtonHoverForegroundBrush" Color="{StaticResource Color_006}" />
    <SolidColorBrush x:Key="TabAreaScrollButtonPressedForegroundBrush" Color="{StaticResource Color_011}" />
    <SolidColorBrush x:Key="TabAreaScrollButtonDisabledForegroundBrush" Color="{StaticResource Color_008}" />
    <SolidColorBrush x:Key="TabAreaEllipsisButtonHoverForegroundBrush" Color="{StaticResource Color_006}" />
    <SolidColorBrush x:Key="TabAreaEllipsisButtonPressedForegroundBrush" Color="{StaticResource Color_011}" />

    <!--  SheetTabItem Brushes  -->
    <SolidColorBrush x:Key="SheetTabItemTextForegroundBrsuh" Color="{StaticResource Color_006}" />
    <SolidColorBrush x:Key="SheetTabItemBackgroundBrush" Color="{StaticResource Color_046}" />
    <SolidColorBrush x:Key="SheetTabItemHoverBackgroundBrush" Color="{StaticResource Color_007}" />
    <SolidColorBrush x:Key="SheetTabItemHoverBottomBorderBrush" Color="{StaticResource Color_017}" />
    <SolidColorBrush x:Key="SheetTabItemSelectedBackgroundBrush" Color="{StaticResource Color_007}" />
    <SolidColorBrush x:Key="SheetTabItemBorderBrush" Color="{StaticResource Color_012}" />
    <SolidColorBrush x:Key="SheetTabItemSelectedBorderBrush" Color="{StaticResource Color_009}" />
    <SolidColorBrush x:Key="SheetTabItemSelectedBottomBorderBrush" Color="{StaticResource Color_013}" />
    <SolidColorBrush x:Key="SheetTabItemSelectedTextForegroundBrsuh" Color="{StaticResource Color_001}" />

    <!--  Icon Brushes  -->
	  <SolidColorBrush x:Key="IconsDarkBackgroundBrush" Color="{StaticResource Color_004}" />
	  <SolidColorBrush x:Key="IconsNormalBackgroundBrush" Color="{StaticResource Color_004}" />
	  <SolidColorBrush x:Key="IconsInnerBackgroundBrush" Color="{StaticResource Color_002}" />

    <!--  TabControl Brushes  -->
    <SolidColorBrush x:Key="TabControlBackgroundBrush" Color="{StaticResource Color_046}" />
    <SolidColorBrush x:Key="TabControlBorderBrush" Color="{StaticResource Color_009}" />
    <SolidColorBrush x:Key="TabItemBackgroundBrush" Color="{StaticResource Color_046}" />
    <SolidColorBrush x:Key="TabItemBorderBrush" Color="{StaticResource Color_009}" />
    <SolidColorBrush x:Key="TabItemSelectedBorderBrush" Color="{StaticResource Color_013}" />
    <SolidColorBrush x:Key="TabItemForegroundBrush" Color="{StaticResource Color_001}" />
    <SolidColorBrush x:Key="TabItemHoverForegroundBrush" Color="{StaticResource Color_014}" />
    <SolidColorBrush x:Key="TabItemSelectedForegroundBrush" Color="{StaticResource Color_014}" />
    <SolidColorBrush x:Key="TabItemDisabledForegroundBrush" Color="{StaticResource Color_008}" />

    <!-- CellFormatDialog Brushes -->
    <SolidColorBrush x:Key="HeaderBackgroundBrush" Color="{StaticResource Color_056}" />
    <SolidColorBrush x:Key="HeaderForegroundBrush" Color="{StaticResource Color_017}" />
    <SolidColorBrush x:Key="GuideLinesBackgroundBrush" Color="{StaticResource Color_055}" />
    <SolidColorBrush x:Key="BorderLinesBackgroundBrush" Color="{StaticResource Color_053}" />
    <SolidColorBrush x:Key="BorderLineButtonContentBackgroundBrush" Color="{StaticResource Color_055}" />
    <SolidColorBrush x:Key="ColorPickerButtonHoverBackgroundBrush" Color="{StaticResource Color_002}" />

    <!--  BorderTab Presets Button Brushes  -->
    <SolidColorBrush x:Key="PresetButtonBackgroundBrush" Color="{StaticResource Color_003}" />
    <SolidColorBrush x:Key="PresetButtonBorderBrush" Color="{StaticResource Color_003}" />
    <SolidColorBrush x:Key="PresetButtonHoverBackgroundBrush" Color="{StaticResource Color_008}" />
    <SolidColorBrush x:Key="PresetButtonHoverBorderBrush" Color="{StaticResource Color_009}" />
    <SolidColorBrush x:Key="PresetButtonPressedBackgroundBrush" Color="{StaticResource Color_011}" Opacity="0.3" />
    <SolidColorBrush x:Key="PresetButtonPressedBorderBrush" Color="{StaticResource Color_011}" />
    <SolidColorBrush x:Key="PresetButtonFocusedBorderBrush" Color="{StaticResource Color_013}" />
    <SolidColorBrush x:Key="PresetButtonFocusedBackgroundBrush" Color="{StaticResource Color_003}" />

    <!-- *********************************  ICON IMAGES  ********************************* -->
	  <DataTemplate x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type igLocal:SpreadsheetContextMenuProvider}, ResourceId=CutImage}">
		  <Grid Width="16" Height="16">
			  <Path Width="13" Height="15" Data="M 69.5113,40.0949C 69.5113,39.7349 69.8046,39.4283 70.1646,39.4283C 70.5113,39.4283 70.8046,39.7349 70.8046,40.0949C 70.8046,40.4683 70.5113,40.7749 70.1646,40.7749C 69.8046,40.7749 69.5113,40.4683 69.5113,40.0949 Z M 72.1113,44.4683C 72.1113,43.535 72.8313,42.7883 73.7379,42.7883C 74.6313,42.7883 75.3513,43.535 75.3513,44.4683C 75.3513,45.4016 74.6313,46.1483 73.7379,46.1483C 72.8313,46.1483 72.1113,45.4016 72.1113,44.4683 Z M 64.9646,44.4683C 64.9646,43.535 65.6846,42.7883 66.5779,42.7883C 67.4846,42.7883 68.2046,43.535 68.2046,44.4683C 68.2046,45.4016 67.4846,46.1483 66.5779,46.1483C 65.6846,46.1483 64.9646,45.4016 64.9646,44.4683 Z M 63.6579,44.4683C 63.6579,46.1349 64.9646,47.4949 66.5779,47.4949C 68.2046,47.4949 69.5113,46.1349 69.5113,44.4683C 69.5113,43.9749 69.3913,43.5216 69.1913,43.1083L 70.2313,41.7749L 71.1779,43.0016C 70.938,43.4283 70.8046,43.9349 70.8046,44.4683C 70.8046,46.1349 72.1113,47.4949 73.7379,47.4949C 75.3513,47.4949 76.6579,46.1349 76.6579,44.4683C 76.6579,42.8016 75.3513,41.4416 73.7379,41.4416C 73.4979,41.4416 73.2846,41.4683 73.0713,41.5216L 71.7113,39.8549L 74.938,35.6816C 74.938,35.6816 76.3379,34.3483 74.7113,32.495L 70.2313,38.0283L 65.7513,32.495C 64.1246,34.3483 65.5113,35.6816 65.5113,35.6816L 68.7379,39.8549L 67.3646,41.5483C 67.1113,41.4816 66.8579,41.4416 66.5779,41.4416C 64.9646,41.4416 63.6579,42.8016 63.6579,44.4683 Z " Fill="{StaticResource IconsDarkBackgroundBrush}" Stretch="Fill" UseLayoutRounding="False" />
		  </Grid>
	  </DataTemplate>
	  <DataTemplate x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type igLocal:SpreadsheetContextMenuProvider}, ResourceId=CopyImage}">
		  <Grid Width="16" Height="16">
			  <Path Margin="6,0,0,5" Data="M8,0.01599128 L10,2.0159912 L10,11.015999 L0,11.015999 L0,0.015625549 z" Fill="{StaticResource IconsDarkBackgroundBrush}" Stretch="Fill" UseLayoutRounding="False" />
			  <Path Margin="0,5,6,0" Data="M0,0 L5,0 L5,7 L10,7 L10,11 L0,11 z" Fill="{StaticResource IconsDarkBackgroundBrush}" Stretch="Fill" UseLayoutRounding="False" />
			  <Path Width="6" Height="7" HorizontalAlignment="Left" Margin="2,0,0,2" VerticalAlignment="Bottom" Data="M4.5895576E-06,6 L6,6 L6,7 L4.5895576E-06,7 z M4.5895576E-06,4.0000005 L3,4.0000005 L3,5 L4.5895576E-06,5.0000005 z M4.5895576E-06,2.0000005 L3,2.0000005 L3,3.0000002 L4.5895576E-06,3.0000002 z M0,0 L3,0 L3,0.99999994 L0,0.99999994 z" Fill="{StaticResource IconsInnerBackgroundBrush}" Stretch="Fill" UseLayoutRounding="False" />
			  <Path Width="6" Height="7" HorizontalAlignment="Right" Margin="0,2,2,0" VerticalAlignment="Top" Data="M4.5895586E-06,6.000001 L6.0000048,6.000001 L6.0000048,7.000001 L4.5895586E-06,7.000001 z M4.5895586E-06,4.000001 L6.0000048,4.000001 L6.0000048,5.000001 L4.5895586E-06,5.000001 z M4.5895586E-06,2.0000007 L6.0000048,2.0000007 L6.0000048,3.0000007 L4.5895586E-06,3.0000007 z M0,0 L6,0 L6,1 L0,1 z" Fill="{StaticResource IconsInnerBackgroundBrush}" Stretch="Fill" UseLayoutRounding="False" />
		  </Grid>
	  </DataTemplate>
	  <DataTemplate x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type igLocal:SpreadsheetContextMenuProvider}, ResourceId=PasteImage}">
		  <Grid Width="16" Height="16">
			  <Path Width="5" Height="2" HorizontalAlignment="Left" Margin="3,0,0,0" VerticalAlignment="Top" Data="M0.99999994,0 L4,0 L4,0.99999994 L5,0.99999994 L5,2 L0,2 L0,0.99999994 L0.99999994,0.99999994 z" Fill="{StaticResource IconsNormalBackgroundBrush}" Stretch="Fill" UseLayoutRounding="False" />
			  <Path Width="11" Height="12" HorizontalAlignment="Left" Margin="0,1,0,0" VerticalAlignment="Top" Data="M0,0 L2,0 L2,2 L9,2 L9,0 L11,0 L11,3 L5,3 L5,12 L5.2452087E-06,12 z" Fill="{StaticResource IconsNormalBackgroundBrush}" Stretch="Fill" UseLayoutRounding="False" />
			  <Path Margin="6,5,0,0" Data="M8,0.01599128 L10,2.0159912 L10,11.015999 L0,11.015999 L0,0.015625549 z" Fill="{StaticResource IconsDarkBackgroundBrush}" Stretch="Fill" UseLayoutRounding="False" />
			  <Path Width="6" Height="7" HorizontalAlignment="Right" Margin="0,7,2,0" VerticalAlignment="Top" Data="M4.5895586E-06,6.000001 L6.0000048,6.000001 L6.0000048,7.000001 L4.5895586E-06,7.000001 z M4.5895586E-06,4.000001 L6.0000048,4.000001 L6.0000048,5.000001 L4.5895586E-06,5.000001 z M4.5895586E-06,2.0000007 L6.0000048,2.0000007 L6.0000048,3.0000007 L4.5895586E-06,3.0000007 z M0,0 L6,0 L6,1 L0,1 z" Fill="{StaticResource IconsInnerBackgroundBrush}" Stretch="Fill" UseLayoutRounding="False" />
		  </Grid>
	  </DataTemplate>

    <!-- ********************************** Converters **********************************-->
    <BooleanToVisibilityConverter x:Key="boolToVis" />
    <igPrim:DecimalValueToVisibilityConverter x:Key="DecimalValueToVisibilityConverter" />
    <igPrim:ColorInfoToBrushConverter x:Key="ColorInfoToBrushConverter" />
    <igPrim:PaletteEntryToBrushConverter x:Key="PaletteEntryToBrushConverter" />
    <igPrim:ColorToBrushConverter x:Key="ColorToBrushConverter" />

    <igPrim:ValueConverterGroup x:Key="isEnabledToSplitterExtent">
        <igPrim:FixedValueConverter>
            <igPrim:FixedValueConverter.SourceValue>
                <sys:Boolean>true</sys:Boolean>
            </igPrim:FixedValueConverter.SourceValue>
            <igPrim:FixedValueConverter.DestinationValue>
                <sys:Double>3</sys:Double>
            </igPrim:FixedValueConverter.DestinationValue>
        </igPrim:FixedValueConverter>
        <igPrim:FixedValueConverter>
            <igPrim:FixedValueConverter.DestinationValue>
                <sys:Double>1</sys:Double>
            </igPrim:FixedValueConverter.DestinationValue>
        </igPrim:FixedValueConverter>
    </igPrim:ValueConverterGroup>

    <igPrim:ValueConverterGroup x:Key="notBoolToVisibility">
        <!-- when true then collapse the item, otherwise leave it visible -->
        <igPrim:FixedValueConverter>
            <igPrim:FixedValueConverter.SourceValue>
                <sys:Boolean>True</sys:Boolean>
            </igPrim:FixedValueConverter.SourceValue>
            <igPrim:FixedValueConverter.DestinationValue>
                <Visibility>Collapsed</Visibility>
            </igPrim:FixedValueConverter.DestinationValue>
        </igPrim:FixedValueConverter>
    </igPrim:ValueConverterGroup>

    <igPrim:ValueConverterGroup x:Key="notVisibility">
        <!-- flip the Visibility from Visible to Collapsed -->
        <igPrim:FixedValueConverter>
            <igPrim:FixedValueConverter.SourceValue>
                <Visibility>Visible</Visibility>
            </igPrim:FixedValueConverter.SourceValue>
            <igPrim:FixedValueConverter.DestinationValue>
                <Visibility>Collapsed</Visibility>
            </igPrim:FixedValueConverter.DestinationValue>
        </igPrim:FixedValueConverter>
    </igPrim:ValueConverterGroup>

    <ig:AlphaColorConverter Opacity="0" x:Key="transparentConverter" />
    <ig:CalculatedForegroundConverter x:Key="calculatedForegroundConverter" />
    <igPrim:InverseBooleanConverter x:Key="inverseBooleanConverter"/>
    <igConverters:NotBoolToVisibilityConverter x:Key="notBoolToVisibilityConverter"/>
    <ig:ColorBlendConverter x:Key="colorConverter" />

    <!-- *********************************  STRING RESOURCES  ********************************* -->
    <igPrim:SpreadsheetResourceString x:Key="toolTipFormulaBarNameBox" ResourceName="ToolTip_FormulaBarNameBox" />
    <igPrim:SpreadsheetResourceString x:Key="toolTipFormulaBarCancelButton" ResourceName="ToolTip_FormulaBarCancelButton" />
    <igPrim:SpreadsheetResourceString x:Key="toolTipFormulaBarEnterButton" ResourceName="ToolTip_FormulaBarEnterButton" />
    <igPrim:SpreadsheetResourceString x:Key="toolTipFormulaBarTextEditor" ResourceName="ToolTip_FormulaBarTextEditor" />

    <igPrim:SpreadsheetResourceString x:Key="FilterDialog_Title" ResourceName="FilterDialog_Title" />
    <igPrim:SpreadsheetResourceString x:Key="FilterDialog_OK" ResourceName="FilterDialog_OK" />
    <igPrim:SpreadsheetResourceString x:Key="FilterDialog_Cancel" ResourceName="FilterDialog_Cancel" />
    <igPrim:SpreadsheetResourceString x:Key="FilterDialog_AsteriskHint" ResourceName="FilterDialog_AsteriskHint" />
    <igPrim:SpreadsheetResourceString x:Key="FilterDialog_QuestionMarkHint" ResourceName="FilterDialog_QuestionMarkHint" />
    <igPrim:SpreadsheetResourceString x:Key="FilterDialog_Or" ResourceName="FilterDialog_Or" />
    <igPrim:SpreadsheetResourceString x:Key="FilterDialog_And" ResourceName="FilterDialog_And" />
    <igPrim:SpreadsheetResourceString x:Key="FilterDialog_ShowRowsWhere" ResourceName="FilterDialog_ShowRowsWhere" />

    <!-- FormatCellsDialog -->
    <igPrim:SpreadsheetResourceString x:Key="FormatCellsDialog_Title" ResourceName="FormatCellsDialog_Title" />
    <igPrim:SpreadsheetResourceString x:Key="FormatCellsDialog_OK" ResourceName="FormatCellsDialog_OK" />
    <igPrim:SpreadsheetResourceString x:Key="FormatCellsDialog_Cancel" ResourceName="FormatCellsDialog_Cancel" />
    <igPrim:SpreadsheetResourceString x:Key="FormatCellsDialog_NumberTab_CategoryLabel" ResourceName="FormatCellsDialog_NumberTab_CategoryLabel" />
    <igPrim:SpreadsheetResourceString x:Key="FormatCellsDialog_NumberTab_SampleLabel" ResourceName="FormatCellsDialog_NumberTab_SampleLabel" />
    <igPrim:SpreadsheetResourceString x:Key="FormatCellsDialog_NumberTab_DecimalPlaces" ResourceName="FormatCellsDialog_NumberTab_DecimalPlaces" />
    <igPrim:SpreadsheetResourceString x:Key="SpreadsheetFontControl_FontLabel" ResourceName="SpreadsheetFontControl_FontLabel" />
    <igPrim:SpreadsheetResourceString x:Key="SpreadsheetFontControl_FontStyleLabel" ResourceName="SpreadsheetFontControl_FontStyleLabel" />
    <igPrim:SpreadsheetResourceString x:Key="SpreadsheetFontControl_SizeLabel" ResourceName="SpreadsheetFontControl_SizeLabel" />
    <igPrim:SpreadsheetResourceString x:Key="SpreadsheetFontControl_UnderlineLabel" ResourceName="SpreadsheetFontControl_UnderlineLabel" />
    <igPrim:SpreadsheetResourceString x:Key="SpreadsheetFontControl_ColorLabel" ResourceName="SpreadsheetFontControl_ColorLabel" />
    <igPrim:SpreadsheetResourceString x:Key="SpreadsheetFontControl_NormalFontLabel" ResourceName="SpreadsheetFontControl_NormalFontLabel" />
    <igPrim:SpreadsheetResourceString x:Key="SpreadsheetFontControl_StrikethroughLabel" ResourceName="SpreadsheetFontControl_StrikethroughLabel" />
    <igPrim:SpreadsheetResourceString x:Key="SpreadsheetFontControl_SubscriptLabel" ResourceName="SpreadsheetFontControl_SubscriptLabel" />
    <igPrim:SpreadsheetResourceString x:Key="SpreadsheetFontControl_SuperscriptLabel" ResourceName="SpreadsheetFontControl_SuperscriptLabel" />
    <igPrim:SpreadsheetResourceString x:Key="SpreadsheetFontControl_Text_Effects" ResourceName="SpreadsheetFontControl_Text_Effects" />
    <igPrim:SpreadsheetResourceString x:Key="SpreadsheetFontControl_Text_Preview" ResourceName="SpreadsheetFontControl_Text_Preview" />
    <igPrim:SpreadsheetResourceString x:Key="SpreadsheetThemeColorPickerControl_Text_Automatic" ResourceName="SpreadsheetThemeColorPickerControl_Text_Automatic" />
    <igPrim:SpreadsheetResourceString x:Key="SpreadsheetThemeColorPickerControl_Text_NoColor" ResourceName="SpreadsheetThemeColorPickerControl_Text_NoColor" />
    <igPrim:SpreadsheetResourceString x:Key="SpreadsheetThemeColorPickerControl_Text_ThemeColors" ResourceName="SpreadsheetThemeColorPickerControl_Text_ThemeColors" />
    <igPrim:SpreadsheetResourceString x:Key="SpreadsheetThemeColorPickerControl_Text_StandardColors" ResourceName="SpreadsheetThemeColorPickerControl_Text_StandardColors" />
    <igPrim:SpreadsheetResourceString x:Key="FormatCellsDialog_AlignmentTab_Text_Horizontal" ResourceName="FormatCellsDialog_AlignmentTab_Text_Horizontal" />
    <igPrim:SpreadsheetResourceString x:Key="FormatCellsDialog_AlignmentTab_Text_Vertical" ResourceName="FormatCellsDialog_AlignmentTab_Text_Vertical" />
    <igPrim:SpreadsheetResourceString x:Key="FormatCellsDialog_AlignmentTab_Text_TextAlignment" ResourceName="FormatCellsDialog_AlignmentTab_Text_TextAlignment" />
    <igPrim:SpreadsheetResourceString x:Key="FormatCellsDialog_AlignmentTab_Text_Indent" ResourceName="FormatCellsDialog_AlignmentTab_Text_Indent" />
    <igPrim:SpreadsheetResourceString x:Key="FormatCellsDialog_AlignmentTab_Text_JustifyDistributed" ResourceName="FormatCellsDialog_AlignmentTab_Text_JustifyDistributed" />
    <igPrim:SpreadsheetResourceString x:Key="FormatCellsDialog_AlignmentTab_Text_TextControl" ResourceName="FormatCellsDialog_AlignmentTab_Text_TextControl" />
    <igPrim:SpreadsheetResourceString x:Key="FormatCellsDialog_AlignmentTab_Text_WrapText" ResourceName="FormatCellsDialog_AlignmentTab_Text_WrapText" />
    <igPrim:SpreadsheetResourceString x:Key="FormatCellsDialog_AlignmentTab_Text_ShrinkToFit" ResourceName="FormatCellsDialog_AlignmentTab_Text_ShrinkToFit" />
    <igPrim:SpreadsheetResourceString x:Key="FormatCellsDialog_AlignmentTab_Text_MergeCells" ResourceName="FormatCellsDialog_AlignmentTab_Text_MergeCells" />
    <igPrim:SpreadsheetResourceString x:Key="FormatCellsDialog_AlignmentTab_Text_RightToLeft" ResourceName="FormatCellsDialog_AlignmentTab_Text_RightToLeft" />
    <igPrim:SpreadsheetResourceString x:Key="FormatCellsDialog_AlignmentTab_Text_TextDirection" ResourceName="FormatCellsDialog_AlignmentTab_Text_TextDirection" />
    <igPrim:SpreadsheetResourceString x:Key="FormatCellsDialog_FillTab_Text_BackgroundColor" ResourceName="FormatCellsDialog_FillTab_Text_BackgroundColor" />
    <igPrim:SpreadsheetResourceString x:Key="FormatCellsDialog_FillTab_Text_PatternColor" ResourceName="FormatCellsDialog_FillTab_Text_PatternColor" />
    <igPrim:SpreadsheetResourceString x:Key="FormatCellsDialog_FillTab_Text_PatternStyle" ResourceName="FormatCellsDialog_FillTab_Text_PatternStyle" />
    <igPrim:SpreadsheetResourceString x:Key="FormatCellsDialog_FillTab_Text_Sample" ResourceName="FormatCellsDialog_FillTab_Text_Sample" />
    <igPrim:SpreadsheetResourceString x:Key="FormatCellsDialog_ProtectionTab_Text_Locked" ResourceName="FormatCellsDialog_ProtectionTab_Text_Locked" />
    <igPrim:SpreadsheetResourceString x:Key="FormatCellsDialog_ProtectionTab_Text_Hidden" ResourceName="FormatCellsDialog_ProtectionTab_Text_Hidden" />
    <igPrim:SpreadsheetResourceString x:Key="FormatCellsDialog_ProtectionTab_Text_Summary" ResourceName="FormatCellsDialog_ProtectionTab_Text_Summary" />
    <igPrim:SpreadsheetResourceString x:Key="FormatCellsDialog_BorderTab_Text_Line" ResourceName="FormatCellsDialog_BorderTab_Text_Line" />
    <igPrim:SpreadsheetResourceString x:Key="FormatCellsDialog_BorderTab_Text_Style" ResourceName="FormatCellsDialog_BorderTab_Text_Style" />
    <igPrim:SpreadsheetResourceString x:Key="FormatCellsDialog_BorderTab_Text_Color" ResourceName="FormatCellsDialog_BorderTab_Text_Color" />
    <igPrim:SpreadsheetResourceString x:Key="FormatCellsDialog_BorderTab_Text_Presets" ResourceName="FormatCellsDialog_BorderTab_Text_Presets" />
    <igPrim:SpreadsheetResourceString x:Key="FormatCellsDialog_BorderTab_Text_PresetNone" ResourceName="FormatCellsDialog_BorderTab_Text_PresetNone" />
    <igPrim:SpreadsheetResourceString x:Key="FormatCellsDialog_BorderTab_Text_PresetOutline" ResourceName="FormatCellsDialog_BorderTab_Text_PresetOutline" />
    <igPrim:SpreadsheetResourceString x:Key="FormatCellsDialog_BorderTab_Text_PresetInside" ResourceName="FormatCellsDialog_BorderTab_Text_PresetInside" />
    <igPrim:SpreadsheetResourceString x:Key="FormatCellsDialog_BorderTab_Text_Border" ResourceName="FormatCellsDialog_BorderTab_Text_Border" />
    <igPrim:SpreadsheetResourceString x:Key="FormatCellsDialog_BorderTab_Text_SampleText" ResourceName="FormatCellsDialog_BorderTab_Text_SampleText" />
    <igPrim:SpreadsheetResourceString x:Key="FormatCellsDialog_BorderTab_Text_Description" ResourceName="FormatCellsDialog_BorderTab_Text_Description" />

  <!-- *********************************  Preset Button Style (FormatCell Dialog Border Settings)  ********************************* -->
    <Style x:Key="PresetButtonStyle" TargetType="Button">
        <Setter Property="Padding" Value="0" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid x:Name="MainGrid">
                        <Rectangle x:Name="normal" Opacity="1" RadiusX="{StaticResource RadiusXY}" RadiusY="{StaticResource RadiusXY}" StrokeThickness="{TemplateBinding BorderThickness}" Stroke="{StaticResource PresetButtonBorderBrush}" Fill="{StaticResource PresetButtonBackgroundBrush}" />
                        <Rectangle x:Name="hover" Opacity="0" RadiusX="{StaticResource RadiusXY}" RadiusY="{StaticResource RadiusXY}" StrokeThickness="{TemplateBinding BorderThickness}" Stroke="{StaticResource PresetButtonHoverBorderBrush}" Fill="{StaticResource PresetButtonHoverBackgroundBrush}" />
                        <Rectangle x:Name="pressed" Opacity="0" RadiusX="{StaticResource RadiusXY}" RadiusY="{StaticResource RadiusXY}" StrokeThickness="{TemplateBinding BorderThickness}" Stroke="{StaticResource PresetButtonPressedBorderBrush}" Fill="{StaticResource PresetButtonPressedBackgroundBrush}" />
                        <Rectangle x:Name="focused" Opacity="0" RadiusX="{StaticResource RadiusXY}" RadiusY="{StaticResource RadiusXY}" StrokeThickness="{TemplateBinding BorderThickness}" Stroke="{StaticResource PresetButtonFocusedBorderBrush}" />
                        <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Margin="{TemplateBinding Padding}" HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="hover" Property="Opacity" Value="1" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="pressed" Property="Opacity" Value="1" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="MainGrid" Property="Opacity" Value="0.5" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsKeyboardFocused" Value="True" />
                                <Condition Property="IsPressed" Value="True" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter TargetName="focused" Property="Visibility" Value="Collapsed" />
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsKeyboardFocused" Value="True" />
                                <Condition Property="IsPressed" Value="False" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter TargetName="focused" Property="Visibility" Value="Visible" />
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- *********************************  Preset ToggleButton Style  (FormatCell Dialog Border Settings)  ********************************* -->
    <Style x:Key="PresetToggleButtonStyle" TargetType="ToggleButton">
        <Setter Property="Padding" Value="0" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Grid x:Name="MainGrid">
                        <Rectangle x:Name="normal" Opacity="1" RadiusX="{StaticResource RadiusXY}" RadiusY="{StaticResource RadiusXY}"  StrokeThickness="{TemplateBinding BorderThickness}" Stroke="{StaticResource PresetButtonBorderBrush}" Fill="{StaticResource PresetButtonBackgroundBrush}" />
                        <Rectangle x:Name="hover" Opacity="0" RadiusX="{StaticResource RadiusXY}" RadiusY="{StaticResource RadiusXY}"  StrokeThickness="{TemplateBinding BorderThickness}" Stroke="{StaticResource PresetButtonHoverBorderBrush}" Fill="{StaticResource PresetButtonHoverBackgroundBrush}" />
                        <Rectangle x:Name="pressed" Opacity="0" RadiusX="{StaticResource RadiusXY}" RadiusY="{StaticResource RadiusXY}"  StrokeThickness="{TemplateBinding BorderThickness}" Stroke="{StaticResource PresetButtonPressedBorderBrush}" Fill="{StaticResource PresetButtonPressedBackgroundBrush}" />
                        <Rectangle x:Name="focused" Opacity="0" RadiusX="{StaticResource RadiusXY}" RadiusY="{StaticResource RadiusXY}"  StrokeThickness="{TemplateBinding BorderThickness}" Stroke="{StaticResource PresetButtonFocusedBorderBrush}" />
                        <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Margin="{TemplateBinding Padding}" HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="hover" Property="Opacity" Value="1" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="pressed" Property="Opacity" Value="1" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="pressed" Property="Opacity" Value="1" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="MainGrid" Property="Opacity" Value="0.5" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsKeyboardFocused" Value="True" />
                                <Condition Property="IsPressed" Value="True" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter TargetName="focused" Property="Visibility" Value="Collapsed" />
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsKeyboardFocused" Value="True" />
                                <Condition Property="IsPressed" Value="False" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter TargetName="focused" Property="Visibility" Value="Visible" />
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  *********************************  TransparentButton Style  *********************************  -->
    <Style x:Key="TransparentButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Foreground" Value="{StaticResource GlyphBackgroundBrush}" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="MinHeight" Value="22" />
        <Setter Property="MinWidth" Value="22" />
        <Setter Property="Padding" Value="0,0,0,2" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="contentPresenter" Storyboard.TargetProperty="(TextElement.Foreground)">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource GlyphHoverBackgroundBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <!--<DoubleAnimation Duration="0" Storyboard.TargetName="contentPresenter" Storyboard.TargetProperty="(UIElement.Opacity)" To="1" />-->
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="contentPresenter" Storyboard.TargetProperty="(TextElement.Foreground)">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource GlyphPressedBackgroundBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <!--<DoubleAnimation Duration="0" Storyboard.TargetName="contentPresenter" Storyboard.TargetProperty="(UIElement.Opacity)" To="1" />-->
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" Storyboard.TargetName="contentPresenter" Storyboard.TargetProperty="(UIElement.Opacity)" To="0.3" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused" />
                                <VisualState x:Name="Unfocused" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Rectangle Margin="-6,0" Fill="{StaticResource TransparentBrush}" />
                        <ContentPresenter x:Name="contentPresenter"
                                          Margin="{TemplateBinding Padding}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          Content="{TemplateBinding Content}"
                                          ContentTemplate="{TemplateBinding ContentTemplate}"
                                          TextElement.Foreground="{TemplateBinding Foreground}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  ********************************** GridSplitter Style **********************************  -->
    <Style x:Key="GridSplitterStyle" TargetType="{x:Type GridSplitter}">
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Width" Value="28" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="GridSplitter">
                    <Grid Background="{StaticResource TransparentBrush}">
                        <Path x:Name="splitterglyph"
                              Width="3"
                              Height="15"
                              Stretch="Fill"
                              Margin="{TemplateBinding Padding}"
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                              Data="{StaticResource GridSplitterGlyph}"
                              Fill="{StaticResource GlyphBackgroundBrush}"
                              igPrim:XamlHelper.SnapsToDevicePixels="True"/>
                    </Grid>
                    <!--<ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="splitterglyph" Property="Fill" Value="{StaticResource GlyphHoverBackgroundBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>-->
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  *********************************  FormulaBarTextBox Style  *********************************  -->
    <ControlTemplate x:Key="FormulaBarExpanderToggleButton" TargetType="{x:Type ToggleButton}">
        <Grid>
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CheckStates">
                    <VisualState x:Name="Checked">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.001" Storyboard.TargetName="Unchecked_Arrow" Storyboard.TargetProperty="(UIElement.Visibility)">
                                <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                    <DiscreteObjectKeyFrame.Value>
                                        <Visibility>Collapsed</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.001" Storyboard.TargetName="Checked_Arrow" Storyboard.TargetProperty="(UIElement.Visibility)">
                                <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                    <DiscreteObjectKeyFrame.Value>
                                        <Visibility>Visible</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Unchecked" />
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Rectangle x:Name="Rectangle"
                       Margin="0,0,0,0"
                       Fill="{StaticResource TransparentBrush}" />
            <Grid x:Name="Unchecked_Arrow"
                  Width="16"
                  Height="16"
                  Margin="1,0,2,0"
                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                  VerticalAlignment="Center">
                <Path Width="10"
                      Height="6"
                      VerticalAlignment="Center"
                      Data="{StaticResource VArrowDown}"
                      Fill="{StaticResource GlyphBackgroundBrush}"
                      Stretch="Fill" />
            </Grid>
            <Grid x:Name="Checked_Arrow"
                  Width="16"
                  Height="16"
                  Margin="1,0,2,0"
                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                  VerticalAlignment="Center"
                  Visibility="Collapsed">
                <Path Width="10"
                      Height="6"
                      VerticalAlignment="Center"
                      Data="{StaticResource VArrowTop}"
                      Fill="{StaticResource GlyphBackgroundBrush}"
                      Stretch="Fill" />
            </Grid>
        </Grid>
    </ControlTemplate>

    <!--  *********************************  FormulaBarNameBox Style  *********************************  -->
    <Style TargetType="igPrim:FormulaBarNameBox">
        <Setter Property="Background" Value="{StaticResource TransparentBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="igPrim:FormulaBarNameBox">
                    <Border igPrim:XamlHelper.SnapsToDevicePixels="True"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Padding="{TemplateBinding Padding}">
                        <ComboBox x:Name="NameBoxCombo"
                                  IsEditable="True"
                                  Style="{StaticResource ComboBoxStyle}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  *********************************  FormulaBarTextEditor Style  *********************************  -->
    <Style TargetType="igPrim:FormulaBarTextEditor">
        <Setter Property="Background" Value="{StaticResource TextBoxBackgroundBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource TextBoxBorderBrush}" />
        <Setter Property="BorderThickness" Value="{StaticResource DefaultBorderThickness}" />
        <Setter Property="FontSize" Value="{StaticResource FontSize}" />
        <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
        <Setter Property="MinHeight" Value="22" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="igPrim:FormulaBarTextEditor">
                    <Border igPrim:XamlHelper.SnapsToDevicePixels="True"
                            Background="{TemplateBinding Background}"
                            Padding="{TemplateBinding Padding}">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition />
                                <RowDefinition />
                            </Grid.RowDefinitions>
                            <Border x:Name="formulaborder"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    CornerRadius="{StaticResource CornerRadius}">
                                <igPrim:FormulaBarTextEditorControl x:Name="FormulaTextBox"
                                                                    MinHeight="{TemplateBinding MinHeight}"
                                                                    Background="{StaticResource TransparentBrush}"
                                                                    BorderBrush="{StaticResource TransparentBrush}"
                                                                    BorderThickness="0"
                                                                    Foreground="{TemplateBinding Foreground}"
                                                                    ScrollViewer.VerticalScrollBarVisibility="Auto"
                                                                    SelectionBrush="{StaticResource SelectionBrush}"
                                                                    CaretBrush="{StaticResource CaretForegroundBrush}">
                                    <igPrim:FormulaBarTextEditorControl.Resources>
                                        <!--  Border colors  -->
                                        <Color x:Key="BorderMediumColor">#FF888888</Color>
                                        <!--  Styles  -->
                                        <Style TargetType="{x:Type ScrollViewer}">
                                            <Setter Property="OverridesDefaultStyle" Value="True" />
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="{x:Type ScrollViewer}">
                                                        <Grid>
                                                            <Grid.ColumnDefinitions>
                                                                <ColumnDefinition />
                                                                <ColumnDefinition Width="Auto" />
                                                            </Grid.ColumnDefinitions>
                                                            <Grid.RowDefinitions>
                                                                <RowDefinition Height="Auto" />
                                                                <RowDefinition />
                                                                <RowDefinition Height="Auto" />
                                                            </Grid.RowDefinitions>
                                                            <!--  Button for toggling the height of the textbox.  -->
                                                            <ToggleButton x:Name="ExpanderButton"
                                                                          Grid.Column="1"
                                                                          Width="20"
                                                                          Height="20"
                                                                          VerticalAlignment="Top"
                                                                          igPrim:XamlHelper.Focusable="False"
                                                                          Background="Transparent"
                                                                          BorderBrush="Transparent"
                                                                          BorderThickness="{StaticResource DefaultBorderThickness}"
                                                                          Template="{StaticResource FormulaBarExpanderToggleButton}" />
                                                            <Border Grid.Row="0"
                                                                    Grid.RowSpan="2"
                                                                    BorderThickness="0,1,1,1">
                                                                <Border.BorderBrush>
                                                                    <SolidColorBrush Color="{DynamicResource BorderMediumColor}" />
                                                                </Border.BorderBrush>
                                                                <ScrollContentPresenter CanContentScroll="{TemplateBinding CanContentScroll}" />
                                                            </Border>
                                                            <ScrollBar x:Name="PART_VerticalScrollBar"
                                                                       Grid.Row="1"
                                                                       Grid.Column="1"
                                                                       Maximum="{TemplateBinding ScrollableHeight}"
                                                                       ViewportSize="{TemplateBinding ViewportHeight}"
                                                                       Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                                                                       Value="{TemplateBinding VerticalOffset}" />
                                                            <ScrollBar x:Name="PART_HorizontalScrollBar"
                                                                       Grid.Row="2"
                                                                       Grid.Column="0"
                                                                       Maximum="{TemplateBinding ScrollableWidth}"
                                                                       Orientation="Horizontal"
                                                                       ViewportSize="{TemplateBinding ViewportWidth}"
                                                                       Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
                                                                       Value="{TemplateBinding HorizontalOffset}" />
                                                        </Grid>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </igPrim:FormulaBarTextEditorControl.Resources>
                                </igPrim:FormulaBarTextEditorControl>
                            </Border>
                            <Thumb x:Name="ResizeThumb"
                                   Grid.Row="1"
                                   Height="10"
                                   igPrim:XamlHelper.Focusable="False"
                                   Cursor="SizeNS">
                                <Thumb.Template>
                                    <ControlTemplate>
                                        <Border Background="{StaticResource TransparentBrush}" />
                                    </ControlTemplate>
                                </Thumb.Template>
                            </Thumb>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="formulaborder" Property="BorderBrush" Value="{StaticResource TextBoxHoverBorderBrush}" />
                        </Trigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding ElementName=FormulaTextBox, Path=IsFocused}" Value="True" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="formulaborder" Property="BorderBrush" Value="{StaticResource TextBoxFocusedBrush}" />
                        </MultiDataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  *********************************  FormulaBarControl Style  *********************************  -->
    <Style TargetType="igPrim:FormulaBarControl">
        <Setter Property="Background" Value="{StaticResource TransparentBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="igPrim:FormulaBarControl">
                    <Border Margin="{TemplateBinding Margin}"
                            igPrim:XamlHelper.SnapsToDevicePixels="True"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Padding="{TemplateBinding Padding}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="{Binding Path=NameBoxWidth, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>

                            <!--  Name ComboBox  -->
                            <igPrim:FormulaBarNameBox x:Name="FormulaBarNameBox"
                                                      Grid.Column="0"
                                                      VerticalAlignment="Top"
                                                      IsEnabled="{Binding Path=IsInEditMode, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource inverseBooleanConverter}}"
                                                      ToolTip="{Binding Source={StaticResource toolTipFormulaBarNameBox}, Path=Value}" />

                            <!--  Splitter  -->
                            <GridSplitter x:Name="FormulaBarNameBoxSplitter"
                                          Grid.Column="1"
                                          Height="{Binding ElementName=FormulaBarNameBox, Path=ActualHeight}"
                                          HorizontalAlignment="Center"
                                          VerticalAlignment="Top"
                                          igPrim:XamlHelper.Focusable="False"
                                          Background="{StaticResource GlyphBackgroundBrush}"
                                          Padding="12,0,12,0"
                                          ResizeBehavior="PreviousAndCurrent"
                                          Style="{StaticResource GridSplitterStyle}" />

                            <!--  OK/Cancel Buttons  -->
                            <Border Grid.Column="2"
                                    Height="{Binding ElementName=FormulaBarNameBox, Path=ActualHeight}"
                                    VerticalAlignment="Top"
                                    BorderBrush="{StaticResource ComboBoxBorderBrush}"
                                    BorderThickness="{StaticResource DefaultBorderThickness}"
                                    CornerRadius="{StaticResource CornerRadius}">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition />
                                        <ColumnDefinition />
                                    </Grid.ColumnDefinitions>
                                    <Button x:Name="CancelButton"
                                            Grid.Column="0"
                                            Margin="3,0,3,0"
                                            igPrim:XamlHelper.Focusable="False"
                                            BorderThickness="0"
                                            Style="{StaticResource TransparentButtonStyle}"
                                            ToolTip="{Binding Source={StaticResource toolTipFormulaBarCancelButton}, Path=Value}">
                                        <igLocal:Commanding.Command>
                                            <igPrim:SpreadsheetCommandSource CommandType="ExitEditModeAndDiscardChanges" EventName="Click" />
                                        </igLocal:Commanding.Command>
                                        <Button.Content>
                                            <Path Width="8"
                                                  Height="8"
                                                  HorizontalAlignment="Center"
                                                  VerticalAlignment="Center"
                                                  Data="{StaticResource ClearFilterIcon}"
                                                  Fill="{Binding Path=(TextElement.Foreground), RelativeSource={RelativeSource AncestorType=ContentPresenter}}" />
                                        </Button.Content>
                                    </Button>
                                    <Button x:Name="OKButton"
                                            Grid.Column="1"
                                            Margin="3,0,3,0"
                                            igPrim:XamlHelper.Focusable="False"
                                            BorderThickness="0"
                                            Style="{StaticResource TransparentButtonStyle}"
                                            ToolTip="{Binding Source={StaticResource toolTipFormulaBarEnterButton}, Path=Value}">
                                        <igLocal:Commanding.Command>
                                            <igPrim:SpreadsheetCommandSource CommandType="ExitEditModeAndUpdateActiveCell" EventName="Click" />
                                        </igLocal:Commanding.Command>
                                        <Path Width="9"
                                              Height="8"
                                              Data="{StaticResource CheckBoxCheck}"
                                              Fill="{Binding Path=(TextElement.Foreground), RelativeSource={RelativeSource AncestorType=ContentPresenter}}"
                                              Stretch="Fill"
                                              UseLayoutRounding="False" />
                                    </Button>
                                </Grid>
                            </Border>

                            <!--  Formula TextBox  -->
                            <igPrim:FormulaBarTextEditor x:Name="FormulaBarTextEditor"
                                                         Grid.Column="3"
                                                         Margin="4,0,0,0"
                                                         ToolTip="{Binding Source={StaticResource toolTipFormulaBarTextEditor}, Path=Value}" />
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  ********************************** XamSpreadsheet Style **********************************  -->
    <Style TargetType="igLocal:XamSpreadsheet">
        <Setter Property="Background" Value="{StaticResource XamSpreadsheetBackgroundBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource XamSpreadsheetBorderBrush}" />
        <Setter Property="BorderThickness" Value="{StaticResource DefaultBorderThickness}" />
        <Setter Property="ResourceProvider">
            <Setter.Value>
                <igPrim:SpreadsheetResourceProvider>
                    <igPrim:SpreadsheetResourceProvider.ResourceOverrides>
                        <ResourceDictionary>
                            <SolidColorBrush x:Key="RowHeaderBackground" Color="{StaticResource Color_007}" />
                            <SolidColorBrush x:Key="ColumnHeaderBackground" Color="{StaticResource Color_007}" />
                            <SolidColorBrush x:Key="RowHeaderWithSelectedCellsBackground" Color="{StaticResource Color_003}" />
                            <SolidColorBrush x:Key="ColumnHeaderWithSelectedCellsBackground" Color="{StaticResource Color_003}" />
                            <SolidColorBrush x:Key="RowHeaderSelectedBackground" Color="{StaticResource Color_011}" />
                            <SolidColorBrush x:Key="ColumnHeaderSelectedBackground" Color="{StaticResource Color_011}" />
                            <SolidColorBrush x:Key="RowHeaderSelectedForeground" Color="{StaticResource Color_002}" />
                            <SolidColorBrush x:Key="RowHeaderWithSelectedCellsForeground" Color="{StaticResource Color_001}" />
                            <SolidColorBrush x:Key="ColumnHeaderWithSelectedCellsForeground" Color="{StaticResource Color_001}" />
                            <SolidColorBrush x:Key="ColumnHeaderSelectedForeground" Color="{StaticResource Color_002}" />
                            <SolidColorBrush x:Key="RowHeaderForeground" Color="{StaticResource Color_001}" />
                            <SolidColorBrush x:Key="ColumnHeaderForeground" Color="{StaticResource Color_001}" />
                            <SolidColorBrush x:Key="RowHeaderHotTrackForeground" Color="{StaticResource Color_002}" />
                            <SolidColorBrush x:Key="ColumnHeaderHotTrackForeground" Color="{StaticResource Color_002}" />
                            <SolidColorBrush x:Key="RowHeaderHotTrackBackground" Color="{StaticResource Color_013}" />
                            <SolidColorBrush x:Key="ColumnHeaderHotTrackBackground" Color="{StaticResource Color_013}" />
                            <SolidColorBrush x:Key="RowHeaderHotTrackSelectedForeground" Color="{StaticResource Color_002}" />
                            <SolidColorBrush x:Key="ColumnHeaderHotTrackSelectedForeground" Color="{StaticResource Color_002}" />
                            <SolidColorBrush x:Key="TabAreaSplitterForeground" Color="{StaticResource Color_001}" />
                            <SolidColorBrush x:Key="TabAreaBorder" Color="{StaticResource Color_012}" />
                            <SolidColorBrush x:Key="TabAreaBackground" Color="{StaticResource Color_002}" />
                            <SolidColorBrush x:Key="RowHeaderBorder" Color="{StaticResource Color_012}" />
                            <SolidColorBrush x:Key="ColumnHeaderBorder" Color="{StaticResource Color_012}" />
                            <SolidColorBrush x:Key="RowHeaderWithSelectedCellsBorder" Color="{StaticResource Color_012}" />
                            <SolidColorBrush x:Key="ColumnHeaderWithSelectedCellsBorder" Color="{StaticResource Color_012}" />
                            <SolidColorBrush x:Key="RowHeaderSelectedBorder" Color="{StaticResource Color_012}" />
                            <SolidColorBrush x:Key="ColumnHeaderSelectedBorder" Color="{StaticResource Color_012}" />
                            <SolidColorBrush x:Key="RowHeaderHotTrackBorder" Color="{StaticResource Color_012}" />
                            <SolidColorBrush x:Key="ColumnHeaderHotTrackBorder" Color="{StaticResource Color_012}" />
                            <SolidColorBrush x:Key="CellSelectionFill" Opacity="0.3" Color="{StaticResource Color_004}" />
                            <SolidColorBrush x:Key="CellSelectionDragBorder" Color="{StaticResource Color_013}" />
                            <SolidColorBrush x:Key="CellSelectionInnerBorder" Color="{StaticResource Color_002}" />
                            <SolidColorBrush x:Key="CellSelectionHandleBorder" Color="{StaticResource Color_002}" />
                            <SolidColorBrush x:Key="CellSelectionHandleFill" Color="{StaticResource Color_013}" />
                            <SolidColorBrush x:Key="CellSelectionDragBorderInHeader" Color="{StaticResource Color_013}" />
                            <SolidColorBrush x:Key="MultiSelectActiveCellBorder" Color="{StaticResource Color_013}" />
                            <DataTemplate x:Key="TabDropIndicatorTemplate">
                                <Grid>
                                    <Path Data="{StaticResource SheetTabDropIndicatorGlyph}" Fill="{StaticResource SheetTabDropIndicatorBackgroundBrush}" />
                                </Grid>
                            </DataTemplate>
                        </ResourceDictionary>
                    </igPrim:SpreadsheetResourceProvider.ResourceOverrides>
                </igPrim:SpreadsheetResourceProvider>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="igLocal:XamSpreadsheet">
                    <Border igPrim:XamlHelper.SnapsToDevicePixels="True"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Padding="{TemplateBinding Padding}">
                        <Border.Resources>
                            <Style BasedOn="{StaticResource ScrollBarStyle}" TargetType="{x:Type ScrollBar}">
                                <Setter Property="Background" Value="{StaticResource SheetScrollBarBackgroundBrush}" />
                            </Style>
                            <Style BasedOn="{StaticResource ScrollViewerStyle}" TargetType="{x:Type ScrollViewer}" />
                        </Border.Resources>
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>
                            <Border Grid.Row="0"
                                    Background="{StaticResource SheetFormulaBarAreaBackgroundBrush}"
                                    Visibility="{Binding Path=IsFormulaBarVisible, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource boolToVis}}">
                                <igPrim:FormulaBarControl x:Name="FormulaBar"
                                                          Grid.Row="0"
                                                          Margin="2,5,2,0" />
                            </Border>
                            <igPrim:SpreadsheetLayoutPanel x:Name="RootPanel" Grid.Row="1" />
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  ********************************** SpreadsheetSelectAllButton Style **********************************  -->
    <Style TargetType="igPrim:SpreadsheetSelectAllButton">
        <Setter Property="Padding" Value="4" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="igPrim:SpreadsheetSelectAllButton">
                    <Border HorizontalAlignment="Stretch"
                            VerticalAlignment="Stretch"
                            igPrim:XamlHelper.SnapsToDevicePixels="True"
                            Background="{StaticResource SheetSelectAllButtonBackgroundBrush}"
                            Padding="{TemplateBinding Padding}">
                        <Path x:Name="triangle"
                              Width="12"
                              Height="12"
                              HorizontalAlignment="Right"
                              VerticalAlignment="Bottom"
                              Data="{StaticResource SelectAllGlyph}"
                              Fill="{StaticResource SheetSelectAllTriangleBackgroundBrush}"
                              Stretch="UniformToFill" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="triangle" Property="Fill" Value="{StaticResource SheetSelectAllTriangleHoverBackgroundBrush}" />
                        </Trigger>
                        <Trigger Property="AreAllRowsAndColumnsSelected" Value="True">
                            <Setter TargetName="triangle" Property="Fill" Value="{StaticResource SheetSelectAllTriangleSelectedBackgroundBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  ********************************** PaneSplitter Style **********************************  -->
    <Style x:Key="PaneSplitterStyle" TargetType="Control">
        <Setter Property="Background" Value="{StaticResource SheetPaneSplitterBackgroundBrush}" />
        <!--<Setter Property="Margin" Value="1,1,0,0" />-->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Control">
                    <Border MinWidth="{Binding IsEnabled, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource isEnabledToSplitterExtent}}"
                            MinHeight="{Binding MinWidth, RelativeSource={RelativeSource Self}}"
                            Background="{TemplateBinding Background}" />
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{StaticResource SheetPaneSplitterHoverBackgroundBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  ********************************** SpreadsheetPaneSplitter Style **********************************  -->
    <Style BasedOn="{StaticResource PaneSplitterStyle}" TargetType="igPrim:SpreadsheetPaneSplitter" />

    <!--  ********************************** SpreadsheetPaneSplitterIntersection Style **********************************  -->
    <Style BasedOn="{StaticResource PaneSplitterStyle}" TargetType="igPrim:SpreadsheetPaneSplitterIntersection" />

    <!--  ********************************** TabAreaButton Style **********************************  -->
    <Style x:Key="TabAreaButtonStyle" TargetType="ButtonBase">
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Width" Value="28" />
        <Setter Property="igPrim:XamlHelper.Focusable" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ButtonBase">
                    <Grid Background="{StaticResource TransparentBrush}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  ********************************** TabAreaAddButton Style **********************************  -->
    <Style x:Key="TabAreaAddButtonStyle" BasedOn="{StaticResource TabAreaButtonStyle}" TargetType="ButtonBase">
        <Setter Property="Foreground" Value="{StaticResource TabAreaAddButtonForegroundBrush}" />
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Foreground" Value="{StaticResource TabAreaAddButtonDisabledForegroundBrush}" />
                <Setter Property="Opacity" Value="0.6" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{StaticResource TabAreaAddButtonHoverForegroundBrush}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Foreground" Value="{StaticResource TabAreaAddButtonPressedForegroundBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--  ********************************** TabAreaScrollButton Style **********************************  -->
    <Style x:Key="TabAreaScrollButtonStyle" BasedOn="{StaticResource TabAreaButtonStyle}" TargetType="ButtonBase">
        <Setter Property="Foreground" Value="{StaticResource TabAreaScrollButtonForegroundBrush}" />
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Foreground" Value="{StaticResource TabAreaScrollButtonDisabledForegroundBrush}" />
                <Setter Property="Opacity" Value="0.6" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{StaticResource TabAreaScrollButtonHoverForegroundBrush}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Foreground" Value="{StaticResource TabAreaScrollButtonPressedForegroundBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--  ********************************** TabAreaEllipsisButton Style **********************************  -->
    <Style x:Key="TabAreaEllipsisButtonStyle" BasedOn="{StaticResource TabAreaScrollButtonStyle}" TargetType="ButtonBase">
        <Setter Property="Margin" Value="0,5,0,0" />
        <Setter Property="Width" Value="27" />
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{StaticResource TabAreaEllipsisButtonHoverForegroundBrush}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Foreground" Value="{StaticResource TabAreaEllipsisButtonPressedForegroundBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--  ********************************** SpreadsheetTabItemArea Style **********************************  -->
    <Style TargetType="igPrim:SpreadsheetTabItemArea">
        <Setter Property="Padding" Value="14,0,0,0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="igPrim:SpreadsheetTabItemArea">
                    <Grid igPrim:XamlHelper.SnapsToDevicePixels="True" Background="{StaticResource TransparentBrush}">
                        <Grid Margin="{TemplateBinding Padding}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <RepeatButton x:Name="ScrollPrevious"
                                          Grid.Column="0"
                                          Style="{StaticResource TabAreaScrollButtonStyle}">
                                <igLocal:Commanding.Commands>
                                    <igLocal:CommandSourceCollection>
                                        <igPrim:SpreadsheetCommandSource CommandType="ScrollPreviousWorksheet"
                                                                         DisallowedModifiers="Control"
                                                                         EventName="Click" />
                                        <igPrim:SpreadsheetCommandSource CommandType="ScrollToFirstWorksheet"
                                                                         EventName="Click"
                                                                         RequiredModifiers="Control" />
                                    </igLocal:CommandSourceCollection>
                                </igLocal:Commanding.Commands>
                                <Grid>
                                    <Path  Width="6"
                                           Height="10"
                                           Data="{StaticResource VArrowLeft}"
                                           Fill="{Binding Path=Foreground, ElementName=ScrollPrevious}"
                                           igPrim:XamlHelper.SnapsToDevicePixels="True"/>
                                </Grid>
                            </RepeatButton>
                            <RepeatButton x:Name="ScrollNext"
                                          Grid.Column="1"
                                          Style="{StaticResource TabAreaScrollButtonStyle}">
                                <igLocal:Commanding.Commands>
                                    <igLocal:CommandSourceCollection>
                                        <igPrim:SpreadsheetCommandSource CommandType="ScrollNextWorksheet"
                                                                         DisallowedModifiers="Control"
                                                                         EventName="Click" />
                                        <igPrim:SpreadsheetCommandSource CommandType="ScrollToLastWorksheet"
                                                                         EventName="Click"
                                                                         RequiredModifiers="Control" />
                                    </igLocal:CommandSourceCollection>
                                </igLocal:Commanding.Commands>
                                <Grid>
                                    <Path  Width="6"
                                          Height="10"
                                          Data="{StaticResource VArrowRight}"
                                          Fill="{Binding Path=Foreground, ElementName=ScrollNext}"
                                          igPrim:XamlHelper.SnapsToDevicePixels="True"/>
                                </Grid>
                            </RepeatButton>
                            <Button x:Name="ActivatePrevious"
                                    Grid.Column="2"
                                    Style="{StaticResource TabAreaEllipsisButtonStyle}">
                                <igLocal:Commanding.Command>
                                    <igPrim:SpreadsheetCommandSource CommandType="ActivatePreviousOutOfViewWorksheet" EventName="Click" />
                                </igLocal:Commanding.Command>
                                <Path igPrim:XamlHelper.SnapsToDevicePixels="True"
                                      Data="{StaticResource EllipsisGlyph}"
                                      Fill="{Binding Path=Foreground, ElementName=ActivatePrevious}" />
                            </Button>
                            <igPrim:SpreadsheetTabItemPanel x:Name="TabItemPanel" Grid.Column="3" />
                            <Button x:Name="ActivateNext"
                                    Grid.Column="4"
                                    Style="{StaticResource TabAreaEllipsisButtonStyle}">
                                <igLocal:Commanding.Command>
                                    <igPrim:SpreadsheetCommandSource CommandType="ActivateNextOutOfViewWorksheet" EventName="Click" />
                                </igLocal:Commanding.Command>
                                <Path igPrim:XamlHelper.SnapsToDevicePixels="True"
                                      Data="{StaticResource EllipsisGlyph}"
                                      Fill="{Binding Path=Foreground, ElementName=ActivateNext}" />
                            </Button>
                            <Button x:Name="AddSheet"
                                    Grid.Column="5"
                                    Style="{StaticResource TabAreaAddButtonStyle}">
                                <igLocal:Commanding.Command>
                                    <igPrim:SpreadsheetCommandSource CommandType="AddNewWorksheet" EventName="Click" />
                                </igLocal:Commanding.Command>
                                <Grid>
                                    <Path Width="8"
                                          Height="8"
                                          Data="{StaticResource PlusIcon}"
                                          Stretch="Fill"
                                          HorizontalAlignment="Center"
                                          VerticalAlignment="Center"
                                          igPrim:XamlHelper.SnapsToDevicePixels="True"
                                          Fill="{Binding Path=Foreground, ElementName=AddSheet}" />
                                </Grid>
                            </Button>
                        </Grid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  ********************************** SpreadsheetTabItem Style **********************************  -->
    <Style TargetType="igPrim:SpreadsheetTabItem">
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="10,0,10,0" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="igPrim:SpreadsheetTabItem">
                    <Grid Background="{StaticResource TransparentBrush}">
                        <Grid.Resources>
                            <Style x:Key="SheetTabItemTextBoxStyle" BasedOn="{StaticResource TextBoxStyle}" TargetType="TextBox">
                                <Setter Property="FontSize" Value="{StaticResource FontSize}" />
                                <Setter Property="MinHeight" Value="0" />
                            </Style>
                        </Grid.Resources>
                        <Border x:Name="background"
                                Margin="0,1,0,0"
                                Background="{StaticResource SheetTabItemBackgroundBrush}" />
                        <Border x:Name="normalBorder"
                                Margin="0,4,0,4"
                                igPrim:XamlHelper.SnapsToDevicePixels="True"
                                BorderBrush="{StaticResource SheetTabItemBorderBrush}"
                                BorderThickness="1,0,1,0" />
                        <Border x:Name="selectedSideBorder"
                                Margin="0,0,0,5"
                                igPrim:XamlHelper.SnapsToDevicePixels="True"
                                BorderBrush="{StaticResource SheetTabItemSelectedBorderBrush}"
                                BorderThickness="1,0,1,0"
                                Visibility="Collapsed" />
                        <Border x:Name="selectedBottomBorder"
                                Margin="0,0,0,3"
                                igPrim:XamlHelper.SnapsToDevicePixels="True"
                                BorderBrush="{StaticResource SheetTabItemSelectedBottomBorderBrush}"
                                BorderThickness="0,0,0,2"
                                Visibility="Collapsed" />
                        <Border x:Name="hoverBottomBorder"
                                Margin="0,0,0,3"
                                igPrim:XamlHelper.SnapsToDevicePixels="True"
                                BorderBrush="{StaticResource SheetTabItemHoverBottomBorderBrush}"
                                BorderThickness="0,0,0,2"
                                Visibility="Collapsed" />
                        <Grid x:Name="TextGrid" Margin="3,3,3,3">
                            <Grid x:Name="CustomColorBackground" Visibility="Collapsed">
                                <Grid.Background>
                                    <LinearGradientBrush Opacity="0.5" StartPoint="0,0" EndPoint="0,1">
                                        <GradientStop Offset="0" Color="{Binding Path=CustomColor, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource transparentConverter}, FallbackValue=Transparent}" />
                                        <GradientStop Offset="1" Color="{Binding Path=CustomColor, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource colorConverter}, FallbackValue=Transparent}" />
                                    </LinearGradientBrush>
                                </Grid.Background>
                            </Grid>
                            <TextBlock x:Name="normalText"
                                       Margin="0,1,0,4"
                                       HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                       VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                       FontSize="{StaticResource FontSize}"
                                       Foreground="{StaticResource SheetTabItemTextForegroundBrsuh}"
                                       Padding="{TemplateBinding Padding}"
                                       Text="{TemplateBinding WorksheetName}" />
                            <TextBlock x:Name="boldText"
                                       Margin="0,1,0,4"
                                       HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                       VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                       FontSize="{StaticResource FontSize}"
                                       Foreground="{StaticResource ForegroundBrush}"
                                       Padding="{TemplateBinding Padding}"
                                       Text="{TemplateBinding WorksheetName}"
                                       Visibility="Hidden" />

                            <!--  Note the negative padding is to counteract the default margins that the TextBoxView has on itself  -->
                            <TextBox x:Name="TextBox"
                                     Margin="{TemplateBinding Padding}"
                                     BorderThickness="0"
                                     Padding="-2,0,-2,0"
                                     Style="{StaticResource SheetTabItemTextBoxStyle}"
                                     Visibility="Collapsed" />
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="IsSelected" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="background" Property="Background" Value="{StaticResource SheetTabItemHoverBackgroundBrush}" />
                            <Setter TargetName="boldText" Property="Foreground" Value="{StaticResource SheetTabItemSelectedTextForegroundBrsuh}" />
                            <Setter TargetName="hoverBottomBorder" Property="Visibility" Value="Visible" />
                            <Setter TargetName="boldText" Property="Visibility" Value="Visible" />
                            <Setter TargetName="normalText" Property="Visibility" Value="Hidden" />
                        </MultiTrigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsActive" Value="False" />
                                <Condition Property="IsSelected" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="background" Property="Background" Value="{StaticResource SheetTabItemSelectedBackgroundBrush}" />
                            <Setter TargetName="boldText" Property="Foreground" Value="{StaticResource SheetTabItemSelectedTextForegroundBrsuh}" />
                        </MultiTrigger>

                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="background" Property="Margin" Value="0,0,0,3" />
                            <Setter TargetName="TextGrid" Property="Margin" Value="3,4,3,6" />
                            <Setter TargetName="boldText" Property="Margin" Value="0,0,0,0" />
                            <Setter TargetName="normalText" Property="Margin" Value="0,0,0,0" />
                            <Setter TargetName="boldText" Property="Visibility" Value="Visible" />
                            <Setter TargetName="normalText" Property="Visibility" Value="Hidden" />
                            <Setter TargetName="selectedSideBorder" Property="Visibility" Value="Visible" />
                            <Setter TargetName="selectedBottomBorder" Property="Visibility" Value="Visible" />
                            <Setter TargetName="normalBorder" Property="Visibility" Value="Collapsed" />
                        </Trigger>

                        <Trigger Property="IsActive" Value="True">
                            <Setter TargetName="background" Property="Background" Value="{StaticResource SheetTabItemSelectedBackgroundBrush}" />
                            <Setter TargetName="boldText" Property="Foreground" Value="{StaticResource SheetTabItemSelectedTextForegroundBrsuh}" />
                            <Setter TargetName="background" Property="Margin" Value="0,0,0,3" />
                        </Trigger>

                        <!--  if there's a custom color and its selected then we'll use a half-opaque gradient of that color  -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="HasCustomColor" Value="True" />
                                <Condition Property="IsSelected" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="CustomColorBackground" Property="Visibility" Value="Visible" />
                        </MultiTrigger>

                        <!--  if there's a custom color and the tab is not selected then we'll use that  background behind the text so we also need to calculate the foreground  -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="HasCustomColor" Value="True" />
                                <Condition Property="IsSelected" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="TextGrid" Property="Background" Value="{Binding Path=CustomColor, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource colorConverter}}" />
                            <Setter TargetName="normalText" Property="Foreground" Value="{Binding Path=CustomColor, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource calculatedForegroundConverter}}" />
                            <Setter TargetName="boldText" Property="Foreground" Value="{Binding ElementName=normalText, Path=Foreground}" />
                        </MultiTrigger>

                        <Trigger Property="IsEditing" Value="True">
                            <Setter TargetName="boldText" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="normalText" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="TextBox" Property="Visibility" Value="Visible" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  ********************************** SpreadsheetTabItemAreaSplitter Style **********************************  -->
    <Style TargetType="igPrim:SpreadsheetTabItemAreaSplitter">
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Width" Value="28" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="igPrim:SpreadsheetTabItemAreaSplitter">
                    <Grid Background="{StaticResource TransparentBrush}">
                        <Path x:Name="glyph"
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                              Data="{StaticResource GridSplitterGlyph}"
                              Fill="{StaticResource GlyphBackgroundBrush}" />
                    </Grid>
                    <!--<ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="glyph" Property="Fill" Value="{StaticResource GlyphHoverBackgroundBrush}" />
                        </Trigger>                    
                    </ControlTemplate.Triggers>-->
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- ********************************** SpreadsheetInputMessageControl Style **********************************-->
    <Style TargetType="igPrim:SpreadsheetInputMessageControl">
        <Setter Property="MaxWidth" Value="260" />
        <Setter Property="MaxHeight" Value="170" />
        <Setter Property="Foreground" Value="{Binding Path=(igPrim:ResourceProvider.ResourceProvider)[InputMessageForeground], RelativeSource={RelativeSource Self}}" />
        <Setter Property="BorderBrush" Value="{Binding Path=(igPrim:ResourceProvider.ResourceProvider)[InputMessageBorder], RelativeSource={RelativeSource Self}}" />
        <Setter Property="Background" Value="{Binding Path=(igPrim:ResourceProvider.ResourceProvider)[InputMessageBackground], RelativeSource={RelativeSource Self}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="igPrim:SpreadsheetInputMessageControl">
                    <Border 
                        BorderBrush="{TemplateBinding BorderBrush}" 
                        Background="{TemplateBinding Background}" 
                        BorderThickness="1" 
                        Padding="4,2,6,5">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition />
                            </Grid.RowDefinitions>
                            <TextBlock Grid.Row="0" 
                                       Text="{TemplateBinding Title}" 
                                       Foreground="{TemplateBinding Foreground}"
                                       FontWeight="Bold" 
                                       Padding="0,0,22,0"
                                       Visibility="{Binding Path=HasTitle, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource boolToVis}}"
                                       />
                            <TextBlock Grid.Row="1" 
                                       Text="{TemplateBinding Message}" 
                                       Foreground="{TemplateBinding Foreground}"
                                       TextWrapping="Wrap" 
                                       Padding="2,0,0,0"
                                       />
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
 
    <!-- ********************************** SpreadsheetFilterDialogControl **********************************-->
    <Style TargetType="igPrim:SpreadsheetFilterDialogControl">
        <Setter Property="TitleDescription" Value="{Binding Source={StaticResource FilterDialog_Title}, Path=Value}"  />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="igPrim:SpreadsheetFilterDialogControl">
                    <Border BorderBrush="{StaticResource PopupBorderBrush}" BorderThickness="1">
                        <Grid Margin="10">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <TextBlock Grid.Row="0" Text="{Binding Source={StaticResource FilterDialog_ShowRowsWhere}, Path=Value}" />
                            <TextBlock Grid.Row="1" Text="{Binding Path=ColumnName }" Margin="0,10,0,0"/>
                            <Grid Grid.Row="2">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" MinWidth="191"/>
                                    <ColumnDefinition Width="Auto" MinWidth="525 "/>
                                </Grid.ColumnDefinitions>
                                <ComboBox Name="cboOperator1" Grid.Row="0" Grid.Column="0" Margin="10,10,0,0" ItemsSource="{Binding Path=OperatorsList}" DisplayMemberPath="DisplayText" SelectedValuePath="DataValue" SelectedValue="{Binding Path=Operator1}"/>
                                <ComboBox Name="cboOperand1" Grid.Row="0" Grid.Column="1" Margin="10,10,0,0" IsEditable="True" ItemsSource="{Binding Path=OperandsList}" Text="{Binding Path=Operand1}"/>

                                <Grid Grid.Row="1" Grid.Column="0">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="Auto" />
                                    </Grid.ColumnDefinitions>

                                    <RadioButton Name="optAnd" Content="{Binding Source={StaticResource FilterDialog_And}, Path=Value}" Grid.Row="0" Grid.Column="0" Margin="20,10,0,0" IsChecked="{Binding Path=IsAnd}" />
                                    <RadioButton Name="optOr" Content="{Binding Source={StaticResource FilterDialog_Or}, Path=Value}" Grid.Row="0" Grid.Column="1" Margin="10,10,0,0" IsChecked="{Binding Path=IsOr}"/>
                                </Grid>

                                <ComboBox Name="cboOperator2" Grid.Row="2" Grid.Column="0" Margin="10,10,0,0" ItemsSource="{Binding Path=OperatorsList}" DisplayMemberPath="DisplayText" SelectedValuePath="DataValue"  SelectedValue="{Binding Path=Operator2}"/>
                                <ComboBox Name="cboOperand2" Grid.Row="2" Grid.Column="1" Margin="10,10,0,0" IsEditable="True" ItemsSource="{Binding Path=OperandsList}" Text="{Binding Path=Operand2}"/>
                            </Grid>
                            <TextBlock Grid.Row="3" Text="{Binding Source={StaticResource FilterDialog_QuestionMarkHint}, Path=Value}" Margin="0,10,0,10"/>
                            <TextBlock Grid.Row="4" Text="{Binding Source={StaticResource FilterDialog_AsteriskHint}, Path=Value}" />
                            <Grid Grid.Row="5">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <Button Name="btnOK" Grid.Column ="1" Content="{Binding Source={StaticResource FilterDialog_OK}, Path=Value}" Margin="0,10,10,0" Command="{x:Static igPrim:SpreadsheetFilterDialogControl.ApplyFilterCommand}" MinWidth="75"/>
                                <Button Name="btnCancel" Grid.Column ="2" Content="{Binding Source={StaticResource FilterDialog_Cancel}, Path=Value}" Margin="0,10,0,0" Command="{x:Static igPrim:SpreadsheetFilterDialogControl.CancelCommand}" MinWidth="75"/>
                            </Grid>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  *********************************  TabControl Style  *********************************  -->
    <Style TargetType="{x:Type TabControl}">
        <Setter Property="Background" Value="{StaticResource TabControlBackgroundBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource TabControlBorderBrush}" />
        <Setter Property="BorderThickness" Value="0 2 0 0" />
        <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="6" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
    </Style>

    <!-- *********************************  TabItem Style  ********************************* -->
    <Style TargetType="{x:Type TabItem}">
        <Setter Property="Background" Value="{StaticResource TabItemBackgroundBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource TabItemBorderBrush}" />
        <Setter Property="Foreground" Value="{StaticResource TabItemForegroundBrush}" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="Padding" Value="8 6 8 8" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabItem}">
                    <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
                        <Border x:Name="mainBorder"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                VerticalAlignment="Bottom"/>
                        <Border x:Name="bottomLine"
                                VerticalAlignment="Bottom"
                                Margin="0 0 0 -2"
                                BorderBrush="{StaticResource TabItemBackgroundBrush}"
                                BorderThickness="0,0,0,2" />
                        <ContentPresenter x:Name="contentPresenter"
                                          Margin="{TemplateBinding Padding}"
                                          HorizontalAlignment="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"
                                          VerticalAlignment="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"
                                          ContentSource="Header"
                                          Focusable="False"
                                          RecognizesAccessKey="True"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true" />
                                <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Top" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="contentPresenter" Property="TextBlock.Foreground" Value="{StaticResource TabItemHoverForegroundBrush}" />
                            <Setter TargetName="bottomLine" Property="BorderBrush" Value="{StaticResource TabItemForegroundBrush}" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false" />
                                <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Top" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="contentPresenter" Property="TextBlock.Foreground" Value="{StaticResource TabItemDisabledForegroundBrush}" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="true" />
                                <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Top" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="bottomLine" Property="BorderBrush" Value="{StaticResource TabItemSelectedBorderBrush}" />
                            <Setter TargetName="contentPresenter" Property="TextBlock.Foreground" Value="{StaticResource TabItemSelectedForegroundBrush}" />
                        </MultiDataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- ********************************** Border buttons content template **********************************-->
    <DataTemplate x:Key="borderLineButtonContent">
        <Border>
            <Grid x:Name="mainGrid" Margin="8" Background="{StaticResource BorderLineButtonContentBackgroundBrush}">
                <Grid.RowDefinitions>
                    <RowDefinition/>
                    <RowDefinition/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>

                <!-- Guidelines -->
                <Rectangle Grid.Row="0" Grid.Column="0" Grid.RowSpan="1" Grid.ColumnSpan="2" VerticalAlignment="Bottom"
                           Height="1" Fill="{StaticResource GuideLinesBackgroundBrush}" />
                <Rectangle Grid.Row="0" Grid.Column="0" Grid.RowSpan="2" Grid.ColumnSpan="1" HorizontalAlignment="Right"
                           Width="1" Fill="{StaticResource GuideLinesBackgroundBrush}" />

                <!-- Border lines -->
                <!-- Left -->
                <Rectangle Grid.Row="0" Grid.Column="0" Grid.RowSpan="2" Grid.ColumnSpan="1" HorizontalAlignment="Left"
                           Width="1" Fill="{StaticResource BorderLinesBackgroundBrush}"
                           Visibility="{Binding Path=(igPrim:BorderButtonBehaviors.LeftBorderVisibility), RelativeSource={RelativeSource AncestorType=ButtonBase}}"/>
                <!-- Top -->
                <Rectangle Grid.Row="0" Grid.Column="0" Grid.RowSpan="1" Grid.ColumnSpan="2" VerticalAlignment="Top"
                           Height="1" Fill="{StaticResource BorderLinesBackgroundBrush}"
                           Visibility="{Binding Path=(igPrim:BorderButtonBehaviors.TopBorderVisibility), RelativeSource={RelativeSource AncestorType=ButtonBase}}"/>
                <!-- Right -->
                <Rectangle Grid.Row="0" Grid.Column="1" Grid.RowSpan="2" Grid.ColumnSpan="1" HorizontalAlignment="Right"
                           Width="1" Fill="{StaticResource BorderLinesBackgroundBrush}"
                           Visibility="{Binding Path=(igPrim:BorderButtonBehaviors.RightBorderVisibility), RelativeSource={RelativeSource AncestorType=ButtonBase}}"/>
                <!-- Bottom -->
                <Rectangle Grid.Row="1" Grid.Column="0" Grid.RowSpan="1" Grid.ColumnSpan="2" VerticalAlignment="Bottom"
                           Height="1" Fill="{StaticResource BorderLinesBackgroundBrush}"
                           Visibility="{Binding Path=(igPrim:BorderButtonBehaviors.BottomBorderVisibility), RelativeSource={RelativeSource AncestorType=ButtonBase}}"/>
                <!-- InsideVertical -->
                <Rectangle Grid.Row="0" Grid.Column="0" Grid.RowSpan="2" Grid.ColumnSpan="1" HorizontalAlignment="Right"
                           Width="1" Fill="{StaticResource BorderLinesBackgroundBrush}"
                           Visibility="{Binding Path=(igPrim:BorderButtonBehaviors.InsideVerticalBorderVisibility), RelativeSource={RelativeSource AncestorType=ButtonBase}}"/>
                <!-- InsideHorizontal-->
                <Rectangle Grid.Row="0" Grid.Column="0" Grid.RowSpan="1" Grid.ColumnSpan="2" VerticalAlignment="Bottom"
                           Height="1" Fill="{StaticResource BorderLinesBackgroundBrush}"
                           Visibility="{Binding Path=(igPrim:BorderButtonBehaviors.InsideHorizontalBorderVisibility), RelativeSource={RelativeSource AncestorType=ButtonBase}}"/>
                <!-- DiagonalDown-->
                <Line Grid.Row="0" Grid.Column="0" Grid.RowSpan="2" Grid.ColumnSpan="2"
                      X1="0" 
                      X2="{Binding ActualWidth, ElementName=mainGrid}"
                      Y1="0" 
                      Y2="{Binding ActualHeight, ElementName=mainGrid}"
                      StrokeThickness="1" Stroke="{StaticResource BorderLinesBackgroundBrush}"
                      Visibility="{Binding Path=(igPrim:BorderButtonBehaviors.DiagonalDownBorderVisibility), RelativeSource={RelativeSource AncestorType=ButtonBase}}"
                      />
                <!-- DiagonalUp-->
                <Line Grid.Row="0" Grid.Column="0" Grid.RowSpan="2" Grid.ColumnSpan="2"
                      X1="0" 
                      X2="{Binding ActualWidth, ElementName=mainGrid}"
                      Y1="{Binding ActualHeight, ElementName=mainGrid}" 
                      Y2="0"
                      StrokeThickness="1" Stroke="{StaticResource BorderLinesBackgroundBrush}"
                      Visibility="{Binding Path=(igPrim:BorderButtonBehaviors.DiagonalUpBorderVisibility), RelativeSource={RelativeSource AncestorType=ButtonBase}}"
                      />
            </Grid>
        </Border>
    </DataTemplate>

    <!-- ********************************** ColorPaletteButtonControl **********************************-->
    <Style TargetType="igPrim:ColorPaletteButtonControl">
        <Setter Property="Height" Value="{Binding Path=ActualWidth, RelativeSource={RelativeSource Self}}"/>
        <Setter Property="Margin" Value="1"/>
        <Setter Property="Command" Value="{x:Static igPrim:ThemeColorPaletteControl.SelectColorCommand}"/>
        <Setter Property="CommandParameter" Value="{Binding Path=PaletteEntry, RelativeSource={RelativeSource Self}}"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Border Margin="1" BorderBrush="{StaticResource ListBoxBorderBrush}">
                        <Grid Background="{Binding Path=Background, RelativeSource={RelativeSource AncestorType=igPrim:ColorPaletteButtonControl}}"/>
                    </Border>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- ********************************** ThemeColorPaletteControl **********************************-->
    <Style TargetType="igPrim:ThemeColorPaletteControl">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="igPrim:ThemeColorPaletteControl">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>

                        <Button Name="AutomaticColorButton" Grid.Row="0" HorizontalAlignment="Stretch" Margin="0,4,0,4" 
                                      Command="{x:Static igPrim:ThemeColorPaletteControl.SelectAutomaticColorCommand}"
                                      Visibility="{TemplateBinding AutomaticColorButtonVisibility}" >
                            <Button.Template>
                                <ControlTemplate TargetType="Button">
                                    <Grid HorizontalAlignment="Stretch">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="*"/>
                                        </Grid.ColumnDefinitions>
                                        <Rectangle Width="20" Height="20" VerticalAlignment="Center" 
                                                   Fill="{Binding AutomaticColor, RelativeSource={RelativeSource AncestorType=igPrim:ThemeColorPaletteControl}, Converter={StaticResource ColorToBrushConverter}}"
                                                   Stroke="{StaticResource ListBoxBorderBrush}" StrokeThickness="1"/>
                                        <Label Grid.Column="1" Content="{StaticResource SpreadsheetThemeColorPickerControl_Text_Automatic}" Margin="8,0,0,0" 
                                               VerticalAlignment="Center" HorizontalAlignment="Stretch" Padding="0" Foreground="{StaticResource ForegroundBrush}"/>
                                    </Grid>
                                </ControlTemplate>
                            </Button.Template>
                        </Button>

                        <Button Name="NoColorButton" Grid.Row="0" HorizontalAlignment="Stretch" Margin="0,4,0,4"
                                Command="{x:Static igPrim:ThemeColorPaletteControl.NoColorCommand}" 
                                      Background="Black" Visibility="{TemplateBinding NoColorButtonVisibility}">
                            <Button.Template>
                                <ControlTemplate TargetType="Button">
                                    <Grid >
                                        <Border BorderThickness="1" BorderBrush="{StaticResource ButtonBorderBrush}" Name="ToggleBorder">
                                            <TextBlock TextAlignment="Center" Height="20" Text="{Binding Source={StaticResource SpreadsheetThemeColorPickerControl_Text_NoColor}, Path=Value}" 
                                                       Margin="0,3,0,0" VerticalAlignment="Center" Padding="0" />
                                        </Border>
                                    </Grid>
                                    <ControlTemplate.Triggers>
                                        <DataTrigger Binding="{Binding Path=IsNoColorSelected, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Value="True">
                                            <Setter Property="Background" TargetName="ToggleBorder" Value="{StaticResource PresetButtonPressedBackgroundBrush}"/>
                                            <Setter Property="BorderBrush" TargetName="ToggleBorder" Value="{StaticResource PresetButtonPressedBorderBrush}"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Path=IsNoColorSelected, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Value="False">
                                            <Setter Property="Background" TargetName="ToggleBorder" Value="Transparent"/>
                                        </DataTrigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Button.Template>
                        </Button>

                        <Label Grid.Row="1" Content="{StaticResource SpreadsheetThemeColorPickerControl_Text_ThemeColors}" Padding="0" Visibility="{TemplateBinding SectionHeaderVisibility}"/>

                        <Grid Name="BaseThemeColorsGrid" Grid.Row="2" >
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>

                            <igPrim:ColorPaletteButtonControl Grid.Row="0" Grid.Column="0" ThemeColorPickerControlViewModel="{TemplateBinding ThemeColorPickerControlViewModel}" PaletteEntry="{Binding Path=ThemeColorPickerControlViewModel.Palette[0-0], RelativeSource={RelativeSource Self}}"/>
                            <igPrim:ColorPaletteButtonControl Grid.Row="0" Grid.Column="1" ThemeColorPickerControlViewModel="{TemplateBinding ThemeColorPickerControlViewModel}" PaletteEntry="{Binding Path=ThemeColorPickerControlViewModel.Palette[0-1], RelativeSource={RelativeSource Self}}"/>
                            <igPrim:ColorPaletteButtonControl Grid.Row="0" Grid.Column="2" ThemeColorPickerControlViewModel="{TemplateBinding ThemeColorPickerControlViewModel}" PaletteEntry="{Binding Path=ThemeColorPickerControlViewModel.Palette[0-2], RelativeSource={RelativeSource Self}}"/>
                            <igPrim:ColorPaletteButtonControl Grid.Row="0" Grid.Column="3" ThemeColorPickerControlViewModel="{TemplateBinding ThemeColorPickerControlViewModel}" PaletteEntry="{Binding Path=ThemeColorPickerControlViewModel.Palette[0-3], RelativeSource={RelativeSource Self}}"/>
                            <igPrim:ColorPaletteButtonControl Grid.Row="0" Grid.Column="4" ThemeColorPickerControlViewModel="{TemplateBinding ThemeColorPickerControlViewModel}" PaletteEntry="{Binding Path=ThemeColorPickerControlViewModel.Palette[0-4], RelativeSource={RelativeSource Self}}"/>
                            <igPrim:ColorPaletteButtonControl Grid.Row="0" Grid.Column="5" ThemeColorPickerControlViewModel="{TemplateBinding ThemeColorPickerControlViewModel}" PaletteEntry="{Binding Path=ThemeColorPickerControlViewModel.Palette[0-5], RelativeSource={RelativeSource Self}}"/>
                            <igPrim:ColorPaletteButtonControl Grid.Row="0" Grid.Column="6" ThemeColorPickerControlViewModel="{TemplateBinding ThemeColorPickerControlViewModel}" PaletteEntry="{Binding Path=ThemeColorPickerControlViewModel.Palette[0-6], RelativeSource={RelativeSource Self}}"/>
                            <igPrim:ColorPaletteButtonControl Grid.Row="0" Grid.Column="7" ThemeColorPickerControlViewModel="{TemplateBinding ThemeColorPickerControlViewModel}" PaletteEntry="{Binding Path=ThemeColorPickerControlViewModel.Palette[0-7], RelativeSource={RelativeSource Self}}"/>
                            <igPrim:ColorPaletteButtonControl Grid.Row="0" Grid.Column="8" ThemeColorPickerControlViewModel="{TemplateBinding ThemeColorPickerControlViewModel}" PaletteEntry="{Binding Path=ThemeColorPickerControlViewModel.Palette[0-8], RelativeSource={RelativeSource Self}}"/>
                            <igPrim:ColorPaletteButtonControl Grid.Row="0" Grid.Column="9" ThemeColorPickerControlViewModel="{TemplateBinding ThemeColorPickerControlViewModel}" PaletteEntry="{Binding Path=ThemeColorPickerControlViewModel.Palette[0-9], RelativeSource={RelativeSource Self}}"/>
                        </Grid>

                        <Rectangle Grid.Row="3" Height="1" Fill="Gray" Margin="0,3,0,3"/>

                        <!-- TintedThemeColorsGrid -->
                        <Grid Name="TintedThemeColorsGrid" Grid.Row="4" >
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>

                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>

                            <!-- Row 1 -->
                            <igPrim:ColorPaletteButtonControl Grid.Row="0" Grid.Column="0" ThemeColorPickerControlViewModel="{TemplateBinding ThemeColorPickerControlViewModel}" PaletteEntry="{Binding Path=ThemeColorPickerControlViewModel.Palette[1-0], RelativeSource={RelativeSource Self}}"/>
                            <igPrim:ColorPaletteButtonControl Grid.Row="0" Grid.Column="1" ThemeColorPickerControlViewModel="{TemplateBinding ThemeColorPickerControlViewModel}" PaletteEntry="{Binding Path=ThemeColorPickerControlViewModel.Palette[1-1], RelativeSource={RelativeSource Self}}"/>
                            <igPrim:ColorPaletteButtonControl Grid.Row="0" Grid.Column="2" ThemeColorPickerControlViewModel="{TemplateBinding ThemeColorPickerControlViewModel}" PaletteEntry="{Binding Path=ThemeColorPickerControlViewModel.Palette[1-2], RelativeSource={RelativeSource Self}}"/>
                            <igPrim:ColorPaletteButtonControl Grid.Row="0" Grid.Column="3" ThemeColorPickerControlViewModel="{TemplateBinding ThemeColorPickerControlViewModel}" PaletteEntry="{Binding Path=ThemeColorPickerControlViewModel.Palette[1-3], RelativeSource={RelativeSource Self}}"/>
                            <igPrim:ColorPaletteButtonControl Grid.Row="0" Grid.Column="4" ThemeColorPickerControlViewModel="{TemplateBinding ThemeColorPickerControlViewModel}" PaletteEntry="{Binding Path=ThemeColorPickerControlViewModel.Palette[1-4], RelativeSource={RelativeSource Self}}"/>
                            <igPrim:ColorPaletteButtonControl Grid.Row="0" Grid.Column="5" ThemeColorPickerControlViewModel="{TemplateBinding ThemeColorPickerControlViewModel}" PaletteEntry="{Binding Path=ThemeColorPickerControlViewModel.Palette[1-5], RelativeSource={RelativeSource Self}}"/>
                            <igPrim:ColorPaletteButtonControl Grid.Row="0" Grid.Column="6" ThemeColorPickerControlViewModel="{TemplateBinding ThemeColorPickerControlViewModel}" PaletteEntry="{Binding Path=ThemeColorPickerControlViewModel.Palette[1-6], RelativeSource={RelativeSource Self}}"/>
                            <igPrim:ColorPaletteButtonControl Grid.Row="0" Grid.Column="7" ThemeColorPickerControlViewModel="{TemplateBinding ThemeColorPickerControlViewModel}" PaletteEntry="{Binding Path=ThemeColorPickerControlViewModel.Palette[1-7], RelativeSource={RelativeSource Self}}"/>
                            <igPrim:ColorPaletteButtonControl Grid.Row="0" Grid.Column="8" ThemeColorPickerControlViewModel="{TemplateBinding ThemeColorPickerControlViewModel}" PaletteEntry="{Binding Path=ThemeColorPickerControlViewModel.Palette[1-8], RelativeSource={RelativeSource Self}}"/>
                            <igPrim:ColorPaletteButtonControl Grid.Row="0" Grid.Column="9" ThemeColorPickerControlViewModel="{TemplateBinding ThemeColorPickerControlViewModel}" PaletteEntry="{Binding Path=ThemeColorPickerControlViewModel.Palette[1-9], RelativeSource={RelativeSource Self}}"/>

                            <!-- Row 2 -->
                            <igPrim:ColorPaletteButtonControl Grid.Row="1" Grid.Column="0" ThemeColorPickerControlViewModel="{TemplateBinding ThemeColorPickerControlViewModel}" PaletteEntry="{Binding Path=ThemeColorPickerControlViewModel.Palette[2-0], RelativeSource={RelativeSource Self}}"/>
                            <igPrim:ColorPaletteButtonControl Grid.Row="1" Grid.Column="1" ThemeColorPickerControlViewModel="{TemplateBinding ThemeColorPickerControlViewModel}" PaletteEntry="{Binding Path=ThemeColorPickerControlViewModel.Palette[2-1], RelativeSource={RelativeSource Self}}"/>
                            <igPrim:ColorPaletteButtonControl Grid.Row="1" Grid.Column="2" ThemeColorPickerControlViewModel="{TemplateBinding ThemeColorPickerControlViewModel}" PaletteEntry="{Binding Path=ThemeColorPickerControlViewModel.Palette[2-2], RelativeSource={RelativeSource Self}}"/>
                            <igPrim:ColorPaletteButtonControl Grid.Row="1" Grid.Column="3" ThemeColorPickerControlViewModel="{TemplateBinding ThemeColorPickerControlViewModel}" PaletteEntry="{Binding Path=ThemeColorPickerControlViewModel.Palette[2-3], RelativeSource={RelativeSource Self}}"/>
                            <igPrim:ColorPaletteButtonControl Grid.Row="1" Grid.Column="4" ThemeColorPickerControlViewModel="{TemplateBinding ThemeColorPickerControlViewModel}" PaletteEntry="{Binding Path=ThemeColorPickerControlViewModel.Palette[2-4], RelativeSource={RelativeSource Self}}"/>
                            <igPrim:ColorPaletteButtonControl Grid.Row="1" Grid.Column="5" ThemeColorPickerControlViewModel="{TemplateBinding ThemeColorPickerControlViewModel}" PaletteEntry="{Binding Path=ThemeColorPickerControlViewModel.Palette[2-5], RelativeSource={RelativeSource Self}}"/>
                            <igPrim:ColorPaletteButtonControl Grid.Row="1" Grid.Column="6" ThemeColorPickerControlViewModel="{TemplateBinding ThemeColorPickerControlViewModel}" PaletteEntry="{Binding Path=ThemeColorPickerControlViewModel.Palette[2-6], RelativeSource={RelativeSource Self}}"/>
                            <igPrim:ColorPaletteButtonControl Grid.Row="1" Grid.Column="7" ThemeColorPickerControlViewModel="{TemplateBinding ThemeColorPickerControlViewModel}" PaletteEntry="{Binding Path=ThemeColorPickerControlViewModel.Palette[2-7], RelativeSource={RelativeSource Self}}"/>
                            <igPrim:ColorPaletteButtonControl Grid.Row="1" Grid.Column="8" ThemeColorPickerControlViewModel="{TemplateBinding ThemeColorPickerControlViewModel}" PaletteEntry="{Binding Path=ThemeColorPickerControlViewModel.Palette[2-8], RelativeSource={RelativeSource Self}}"/>
                            <igPrim:ColorPaletteButtonControl Grid.Row="1" Grid.Column="9" ThemeColorPickerControlViewModel="{TemplateBinding ThemeColorPickerControlViewModel}" PaletteEntry="{Binding Path=ThemeColorPickerControlViewModel.Palette[2-9], RelativeSource={RelativeSource Self}}"/>

                            <!-- Row 3 -->
                            <igPrim:ColorPaletteButtonControl Grid.Row="2" Grid.Column="0" ThemeColorPickerControlViewModel="{TemplateBinding ThemeColorPickerControlViewModel}" PaletteEntry="{Binding Path=ThemeColorPickerControlViewModel.Palette[3-0], RelativeSource={RelativeSource Self}}"/>
                            <igPrim:ColorPaletteButtonControl Grid.Row="2" Grid.Column="1" ThemeColorPickerControlViewModel="{TemplateBinding ThemeColorPickerControlViewModel}" PaletteEntry="{Binding Path=ThemeColorPickerControlViewModel.Palette[3-1], RelativeSource={RelativeSource Self}}"/>
                            <igPrim:ColorPaletteButtonControl Grid.Row="2" Grid.Column="2" ThemeColorPickerControlViewModel="{TemplateBinding ThemeColorPickerControlViewModel}" PaletteEntry="{Binding Path=ThemeColorPickerControlViewModel.Palette[3-2], RelativeSource={RelativeSource Self}}"/>
                            <igPrim:ColorPaletteButtonControl Grid.Row="2" Grid.Column="3" ThemeColorPickerControlViewModel="{TemplateBinding ThemeColorPickerControlViewModel}" PaletteEntry="{Binding Path=ThemeColorPickerControlViewModel.Palette[3-3], RelativeSource={RelativeSource Self}}"/>
                            <igPrim:ColorPaletteButtonControl Grid.Row="2" Grid.Column="4" ThemeColorPickerControlViewModel="{TemplateBinding ThemeColorPickerControlViewModel}" PaletteEntry="{Binding Path=ThemeColorPickerControlViewModel.Palette[3-4], RelativeSource={RelativeSource Self}}"/>
                            <igPrim:ColorPaletteButtonControl Grid.Row="2" Grid.Column="5" ThemeColorPickerControlViewModel="{TemplateBinding ThemeColorPickerControlViewModel}" PaletteEntry="{Binding Path=ThemeColorPickerControlViewModel.Palette[3-5], RelativeSource={RelativeSource Self}}"/>
                            <igPrim:ColorPaletteButtonControl Grid.Row="2" Grid.Column="6" ThemeColorPickerControlViewModel="{TemplateBinding ThemeColorPickerControlViewModel}" PaletteEntry="{Binding Path=ThemeColorPickerControlViewModel.Palette[3-6], RelativeSource={RelativeSource Self}}"/>
                            <igPrim:ColorPaletteButtonControl Grid.Row="2" Grid.Column="7" ThemeColorPickerControlViewModel="{TemplateBinding ThemeColorPickerControlViewModel}" PaletteEntry="{Binding Path=ThemeColorPickerControlViewModel.Palette[3-7], RelativeSource={RelativeSource Self}}"/>
                            <igPrim:ColorPaletteButtonControl Grid.Row="2" Grid.Column="8" ThemeColorPickerControlViewModel="{TemplateBinding ThemeColorPickerControlViewModel}" PaletteEntry="{Binding Path=ThemeColorPickerControlViewModel.Palette[3-8], RelativeSource={RelativeSource Self}}"/>
                            <igPrim:ColorPaletteButtonControl Grid.Row="2" Grid.Column="9" ThemeColorPickerControlViewModel="{TemplateBinding ThemeColorPickerControlViewModel}" PaletteEntry="{Binding Path=ThemeColorPickerControlViewModel.Palette[3-9], RelativeSource={RelativeSource Self}}"/>

                            <!-- Row 4 -->
                            <igPrim:ColorPaletteButtonControl Grid.Row="3" Grid.Column="0" ThemeColorPickerControlViewModel="{TemplateBinding ThemeColorPickerControlViewModel}" PaletteEntry="{Binding Path=ThemeColorPickerControlViewModel.Palette[4-0], RelativeSource={RelativeSource Self}}"/>
                            <igPrim:ColorPaletteButtonControl Grid.Row="3" Grid.Column="1" ThemeColorPickerControlViewModel="{TemplateBinding ThemeColorPickerControlViewModel}" PaletteEntry="{Binding Path=ThemeColorPickerControlViewModel.Palette[4-1], RelativeSource={RelativeSource Self}}"/>
                            <igPrim:ColorPaletteButtonControl Grid.Row="3" Grid.Column="2" ThemeColorPickerControlViewModel="{TemplateBinding ThemeColorPickerControlViewModel}" PaletteEntry="{Binding Path=ThemeColorPickerControlViewModel.Palette[4-2], RelativeSource={RelativeSource Self}}"/>
                            <igPrim:ColorPaletteButtonControl Grid.Row="3" Grid.Column="3" ThemeColorPickerControlViewModel="{TemplateBinding ThemeColorPickerControlViewModel}" PaletteEntry="{Binding Path=ThemeColorPickerControlViewModel.Palette[4-3], RelativeSource={RelativeSource Self}}"/>
                            <igPrim:ColorPaletteButtonControl Grid.Row="3" Grid.Column="4" ThemeColorPickerControlViewModel="{TemplateBinding ThemeColorPickerControlViewModel}" PaletteEntry="{Binding Path=ThemeColorPickerControlViewModel.Palette[4-4], RelativeSource={RelativeSource Self}}"/>
                            <igPrim:ColorPaletteButtonControl Grid.Row="3" Grid.Column="5" ThemeColorPickerControlViewModel="{TemplateBinding ThemeColorPickerControlViewModel}" PaletteEntry="{Binding Path=ThemeColorPickerControlViewModel.Palette[4-5], RelativeSource={RelativeSource Self}}"/>
                            <igPrim:ColorPaletteButtonControl Grid.Row="3" Grid.Column="6" ThemeColorPickerControlViewModel="{TemplateBinding ThemeColorPickerControlViewModel}" PaletteEntry="{Binding Path=ThemeColorPickerControlViewModel.Palette[4-6], RelativeSource={RelativeSource Self}}"/>
                            <igPrim:ColorPaletteButtonControl Grid.Row="3" Grid.Column="7" ThemeColorPickerControlViewModel="{TemplateBinding ThemeColorPickerControlViewModel}" PaletteEntry="{Binding Path=ThemeColorPickerControlViewModel.Palette[4-7], RelativeSource={RelativeSource Self}}"/>
                            <igPrim:ColorPaletteButtonControl Grid.Row="3" Grid.Column="8" ThemeColorPickerControlViewModel="{TemplateBinding ThemeColorPickerControlViewModel}" PaletteEntry="{Binding Path=ThemeColorPickerControlViewModel.Palette[4-8], RelativeSource={RelativeSource Self}}"/>
                            <igPrim:ColorPaletteButtonControl Grid.Row="3" Grid.Column="9" ThemeColorPickerControlViewModel="{TemplateBinding ThemeColorPickerControlViewModel}" PaletteEntry="{Binding Path=ThemeColorPickerControlViewModel.Palette[4-9], RelativeSource={RelativeSource Self}}"/>

                            <!-- Row 5 -->
                            <igPrim:ColorPaletteButtonControl Grid.Row="4" Grid.Column="0" ThemeColorPickerControlViewModel="{TemplateBinding ThemeColorPickerControlViewModel}" PaletteEntry="{Binding Path=ThemeColorPickerControlViewModel.Palette[5-0], RelativeSource={RelativeSource Self}}"/>
                            <igPrim:ColorPaletteButtonControl Grid.Row="4" Grid.Column="1" ThemeColorPickerControlViewModel="{TemplateBinding ThemeColorPickerControlViewModel}" PaletteEntry="{Binding Path=ThemeColorPickerControlViewModel.Palette[5-1], RelativeSource={RelativeSource Self}}"/>
                            <igPrim:ColorPaletteButtonControl Grid.Row="4" Grid.Column="2" ThemeColorPickerControlViewModel="{TemplateBinding ThemeColorPickerControlViewModel}" PaletteEntry="{Binding Path=ThemeColorPickerControlViewModel.Palette[5-2], RelativeSource={RelativeSource Self}}"/>
                            <igPrim:ColorPaletteButtonControl Grid.Row="4" Grid.Column="3" ThemeColorPickerControlViewModel="{TemplateBinding ThemeColorPickerControlViewModel}" PaletteEntry="{Binding Path=ThemeColorPickerControlViewModel.Palette[5-3], RelativeSource={RelativeSource Self}}"/>
                            <igPrim:ColorPaletteButtonControl Grid.Row="4" Grid.Column="4" ThemeColorPickerControlViewModel="{TemplateBinding ThemeColorPickerControlViewModel}" PaletteEntry="{Binding Path=ThemeColorPickerControlViewModel.Palette[5-4], RelativeSource={RelativeSource Self}}"/>
                            <igPrim:ColorPaletteButtonControl Grid.Row="4" Grid.Column="5" ThemeColorPickerControlViewModel="{TemplateBinding ThemeColorPickerControlViewModel}" PaletteEntry="{Binding Path=ThemeColorPickerControlViewModel.Palette[5-5], RelativeSource={RelativeSource Self}}"/>
                            <igPrim:ColorPaletteButtonControl Grid.Row="4" Grid.Column="6" ThemeColorPickerControlViewModel="{TemplateBinding ThemeColorPickerControlViewModel}" PaletteEntry="{Binding Path=ThemeColorPickerControlViewModel.Palette[5-6], RelativeSource={RelativeSource Self}}"/>
                            <igPrim:ColorPaletteButtonControl Grid.Row="4" Grid.Column="7" ThemeColorPickerControlViewModel="{TemplateBinding ThemeColorPickerControlViewModel}" PaletteEntry="{Binding Path=ThemeColorPickerControlViewModel.Palette[5-7], RelativeSource={RelativeSource Self}}"/>
                            <igPrim:ColorPaletteButtonControl Grid.Row="4" Grid.Column="8" ThemeColorPickerControlViewModel="{TemplateBinding ThemeColorPickerControlViewModel}" PaletteEntry="{Binding Path=ThemeColorPickerControlViewModel.Palette[5-8], RelativeSource={RelativeSource Self}}"/>
                            <igPrim:ColorPaletteButtonControl Grid.Row="4" Grid.Column="9" ThemeColorPickerControlViewModel="{TemplateBinding ThemeColorPickerControlViewModel}" PaletteEntry="{Binding Path=ThemeColorPickerControlViewModel.Palette[5-9], RelativeSource={RelativeSource Self}}"/>
                        </Grid>

                        <Rectangle Grid.Row="5" Height="1" Fill="{StaticResource HeaderBackgroundBrush}" Margin="0,3,0,3" Visibility="{TemplateBinding SectionHeaderVisibility, Converter={StaticResource notVisibility}}"/>
                        <Label Grid.Row="5" Content="{StaticResource SpreadsheetThemeColorPickerControl_Text_StandardColors}"  Padding="0" Visibility="{TemplateBinding SectionHeaderVisibility}"/>

                        <Grid Name="StandardColorsGrid" Grid.Row="6" >
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>

                            <igPrim:ColorPaletteButtonControl Grid.Row="0" Grid.Column="0" ThemeColorPickerControlViewModel="{TemplateBinding ThemeColorPickerControlViewModel}" PaletteEntry="{Binding Path=ThemeColorPickerControlViewModel.Palette[6-0], RelativeSource={RelativeSource Self}}"/>
                            <igPrim:ColorPaletteButtonControl Grid.Row="0" Grid.Column="1" ThemeColorPickerControlViewModel="{TemplateBinding ThemeColorPickerControlViewModel}" PaletteEntry="{Binding Path=ThemeColorPickerControlViewModel.Palette[6-1], RelativeSource={RelativeSource Self}}"/>
                            <igPrim:ColorPaletteButtonControl Grid.Row="0" Grid.Column="2" ThemeColorPickerControlViewModel="{TemplateBinding ThemeColorPickerControlViewModel}" PaletteEntry="{Binding Path=ThemeColorPickerControlViewModel.Palette[6-2], RelativeSource={RelativeSource Self}}"/>
                            <igPrim:ColorPaletteButtonControl Grid.Row="0" Grid.Column="3" ThemeColorPickerControlViewModel="{TemplateBinding ThemeColorPickerControlViewModel}" PaletteEntry="{Binding Path=ThemeColorPickerControlViewModel.Palette[6-3], RelativeSource={RelativeSource Self}}"/>
                            <igPrim:ColorPaletteButtonControl Grid.Row="0" Grid.Column="4" ThemeColorPickerControlViewModel="{TemplateBinding ThemeColorPickerControlViewModel}" PaletteEntry="{Binding Path=ThemeColorPickerControlViewModel.Palette[6-4], RelativeSource={RelativeSource Self}}"/>
                            <igPrim:ColorPaletteButtonControl Grid.Row="0" Grid.Column="5" ThemeColorPickerControlViewModel="{TemplateBinding ThemeColorPickerControlViewModel}" PaletteEntry="{Binding Path=ThemeColorPickerControlViewModel.Palette[6-5], RelativeSource={RelativeSource Self}}"/>
                            <igPrim:ColorPaletteButtonControl Grid.Row="0" Grid.Column="6" ThemeColorPickerControlViewModel="{TemplateBinding ThemeColorPickerControlViewModel}" PaletteEntry="{Binding Path=ThemeColorPickerControlViewModel.Palette[6-6], RelativeSource={RelativeSource Self}}"/>
                            <igPrim:ColorPaletteButtonControl Grid.Row="0" Grid.Column="7" ThemeColorPickerControlViewModel="{TemplateBinding ThemeColorPickerControlViewModel}" PaletteEntry="{Binding Path=ThemeColorPickerControlViewModel.Palette[6-7], RelativeSource={RelativeSource Self}}"/>
                            <igPrim:ColorPaletteButtonControl Grid.Row="0" Grid.Column="8" ThemeColorPickerControlViewModel="{TemplateBinding ThemeColorPickerControlViewModel}" PaletteEntry="{Binding Path=ThemeColorPickerControlViewModel.Palette[6-8], RelativeSource={RelativeSource Self}}"/>
                            <igPrim:ColorPaletteButtonControl Grid.Row="0" Grid.Column="9" ThemeColorPickerControlViewModel="{TemplateBinding ThemeColorPickerControlViewModel}" PaletteEntry="{Binding Path=ThemeColorPickerControlViewModel.Palette[6-9], RelativeSource={RelativeSource Self}}"/>
                        </Grid>

                        <Rectangle Grid.Row="7" Fill="Transparent" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- ********************************** ThemeColorPickerControl **********************************-->
    <Style TargetType="igPrim:ThemeColorPickerControl">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="igPrim:ThemeColorPickerControl">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>

                        <ToggleButton x:Name="ThemeColorPickerToggleButton" Height="24" HorizontalAlignment="Stretch" 
                                      HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch"
                                      IsChecked="{Binding ElementName=ThemeColorPickerPopup, Path=IsOpen}">
                            <ToggleButton.Style>
                                <Style TargetType="ToggleButton">
                                    <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="ToggleButton">
                                                <Grid>
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="*"/>
                                                        <ColumnDefinition Width="23"/>
                                                    </Grid.ColumnDefinitions>

                                                    <Border x:Name="ToggleBorder" BorderThickness="1" CornerRadius="{StaticResource CornerRadius}" BorderBrush="{StaticResource ComboBoxBorderBrush}" Background="{StaticResource ComboBoxBackgroundBrush}" Grid.ColumnSpan="2" />

                                                    <Grid Margin="4" >
                                                    <TextBlock x:Name="SpecialColorText" HorizontalAlignment="Center" VerticalAlignment="Center" TextAlignment="Center" 
                                                               Text="{Binding Source={StaticResource SpreadsheetThemeColorPickerControl_Text_Automatic}, Path=Value}" 
                                                               Foreground="{StaticResource ForegroundBrush}"
                                                               Visibility="{Binding Path=IsAutomaticColorSelected, RelativeSource={RelativeSource AncestorType=igPrim:ThemeColorPickerControl}, Converter={StaticResource boolToVis}}"/>
                                                    <Rectangle x:Name="SelectedColorSwatch" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" 
                                                               Fill="{Binding Path=SelectedBrush, RelativeSource={RelativeSource AncestorType=igPrim:ThemeColorPickerControl}}" 
                                                               Visibility="{Binding Path=IsColorSelected, RelativeSource={RelativeSource AncestorType=igPrim:ThemeColorPickerControl}, Converter={StaticResource boolToVis}}"/>
                                                </Grid>
                                                    <Grid Grid.Column="1">
                                                        <Rectangle x:Name="normal"
                                                                   Grid.ColumnSpan="2"
                                                                   Fill="{StaticResource ComboBoxToggleButtonBackgroundBrush}"
                                                                   IsHitTestVisible="False"
                                                                   Opacity="0"
                                                                   RadiusX="{StaticResource RadiusXY}"
                                                                   RadiusY="{StaticResource RadiusXY}"
                                                                   Stroke="{StaticResource ComboBoxToggleButtonBorderBrush}"
                                                                   StrokeThickness="{StaticResource DefaultStrokeThickness}" />
                                                        <Path x:Name="Arrow"
                                                              Width="7"
                                                              Height="4"
                                                              Data="{StaticResource DownArrow}"
                                                              Fill="{StaticResource GlyphBackgroundBrush}"
                                                              Stretch="Fill" />
                                                        <Path x:Name="ArrowSelected"
                                                              Width="7"
                                                              Height="4"
                                                              Data="{StaticResource DownArrow}"
                                                              Fill="{StaticResource GlyphActiveBackgroundBrush}"
                                                              Stretch="Fill"
                                                              Visibility="Collapsed" />
                                                    </Grid>
                                                </Grid>
                                                <ControlTemplate.Triggers>
                                                    <Trigger Property="IsMouseOver" Value="True">
                                                        <Setter TargetName="Arrow" Property="Fill" Value="{StaticResource GlyphHoverBackgroundBrush}" />
                                                        <Setter TargetName="ToggleBorder" Property="Border.BorderBrush" Value="{StaticResource ComboBoxToggleButtonHoverBorderBrush}" />
                                                    </Trigger>
                                                    <Trigger Property="IsPressed" Value="True">
                                                        <Setter TargetName="SpecialColorText" Property="Foreground" Value="{StaticResource ActiveForegroundBrush}" />
                                                        <Setter TargetName="Arrow" Property="Fill" Value="{StaticResource GlyphActiveBackgroundBrush}" />
                                                        <Setter TargetName="ToggleBorder" Property="Border.BorderBrush" Value="{StaticResource ComboBoxToggleButtonPressedBorderBrush}" />
                                                        <Setter TargetName="ToggleBorder" Property="Border.Background" Value="{StaticResource ComboBoxToggleButtonPressedBackgroundBrush}" />
                                                    </Trigger>
                                                    <Trigger Property="IsChecked" Value="True">
                                                        <Setter TargetName="SpecialColorText" Property="Foreground" Value="{StaticResource ActiveForegroundBrush}" />
                                                        <Setter TargetName="ArrowSelected" Property="Visibility" Value="Visible" />
                                                        <Setter TargetName="ToggleBorder" Property="Border.BorderBrush" Value="{StaticResource ComboBoxToggleButtonPressedBorderBrush}" />
                                                        <Setter TargetName="ToggleBorder" Property="Border.Background" Value="{StaticResource ComboBoxToggleButtonPressedBackgroundBrush}" />
                                                    </Trigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>

                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding IsOpen, ElementName=ThemeColorPickerPopup}" Value="True">
                                            <Setter Property="IsEnabled" Value="False" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </ToggleButton.Style>
                        </ToggleButton>

                        <Popup x:Name="ThemeColorPickerPopup" HorizontalAlignment="Stretch" 
                               StaysOpen="False" PlacementTarget="{Binding ElementName=ThemeColorPickerToggleButton}" Placement="Bottom">
                            <Border Background="{StaticResource PopupBackgroundBrush}" BorderThickness="1" BorderBrush="{StaticResource PopupBorderBrush}" HorizontalAlignment="Stretch" VerticalAlignment="Top">
                                <igPrim:ThemeColorPaletteControl HorizontalAlignment="Stretch"
                                                                      MinWidth="225"
                                                                      Margin="6,3,6,3"
                                                                      ThemeColorPickerControlViewModel="{Binding Path=ThemeColorPickerControlViewModel, RelativeSource={RelativeSource AncestorType=igPrim:ThemeColorPaletteControl}, Mode=TwoWay}"
                                                                      SelectedColorInfo="{Binding Path=SelectedColorInfo, RelativeSource={RelativeSource AncestorType=igPrim:ThemeColorPaletteControl}, Mode=TwoWay}" 
                                                                      SpecialColorModeOption="{Binding Path=SpecialColorModeOption, RelativeSource={RelativeSource AncestorType=igPrim:ThemeColorPaletteControl}}"
                                                                      IsNoColorSelected="{Binding Path=IsNoColorSelected, RelativeSource={RelativeSource AncestorType=igPrim:ThemeColorPaletteControl}, Mode=TwoWay}"
                                                                      IsAutomaticColorSelected="{Binding Path=IsAutomaticColorSelected, RelativeSource={RelativeSource AncestorType=igPrim:ThemeColorPaletteControl}, Mode=TwoWay}"
                                                                      IsColorSelected="{Binding Path=IsColorSelected, RelativeSource={RelativeSource AncestorType=igPrim:ThemeColorPaletteControl}, Mode=TwoWay}"/>
                            </Border>
                        </Popup>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- JM 01/09/2018 - TFS247301 - FormatCellsDialog  -->
    <!-- ********************************** SpreadsheetFontControl **********************************-->
    <Style TargetType="igPrim:SpreadsheetFontControl">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="igPrim:SpreadsheetFontControl">
                    <Grid Margin="0" Name="FontControlRootGrid">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="5"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="100"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="83"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="6"/>
                            <ColumnDefinition Width="1.6*"/>
                            <ColumnDefinition Width="14"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="14"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="0"/>
                            <ColumnDefinition Width="6"/>
                        </Grid.ColumnDefinitions>

                        <!-- ==================  Font  ================== -->
                        <Border Grid.Row="1" 
                                Grid.Column="1" 
                                Margin="0,0,0,10"
                                Background="{StaticResource HeaderBackgroundBrush}"
                                Padding="4,2,4,4"
                                HorizontalAlignment="Left">
                            <Label Content="{Binding Source={StaticResource SpreadsheetFontControl_FontLabel}, Path=Value}" Padding="0" Foreground="{StaticResource HeaderForegroundBrush}"/>
                         </Border>
                        <Border Grid.Row="1" 
                                Grid.Column="3"
                                Margin="0,0,0,10"
                                Background="{StaticResource HeaderBackgroundBrush}"
                                Padding="4,2,4,4"
                                HorizontalAlignment="Left">
                            <Label  Content="{Binding Source={StaticResource SpreadsheetFontControl_FontStyleLabel}, Path=Value}" Padding="0"  Foreground="{StaticResource HeaderForegroundBrush}"/>
                            </Border>
                        <Border Grid.Row="1" 
                                Grid.Column="5" 
                                Margin="0,0,0,10"
                                Background="{StaticResource HeaderBackgroundBrush}"
                                Padding="4,2,4,4"
                                HorizontalAlignment="Left">
                            <Label Content="{Binding Source={StaticResource SpreadsheetFontControl_SizeLabel}, Path=Value}" Padding="0"  Foreground="{StaticResource HeaderForegroundBrush}"/>
                        </Border>
                        <ListBox Grid.Row="2" Grid.Column="1" x:Name="TESTID_FT_FontNames" ItemsSource="{Binding FontNames}" SelectedValue="{Binding SelectedFontName, Mode=TwoWay}" igPrim:ListBoxBehaviors.AutoscrollToSelectedItem="True" IsEnabled="{Binding IsFontNameSelectionEnabled}"/>
                        <ListBox Grid.Row="2" Grid.Column="3"  x:Name="TESTID_FT_FontStyles" ItemsSource="{Binding FontStyles}" SelectedValue="{Binding SelectedFontStyle, Mode=TwoWay}" DisplayMemberPath="DisplayText"/>
                        <ListBox Grid.Row="2" Grid.Column="5" x:Name="TESTID_FT_FontSizes" ItemsSource="{Binding FontSizes}" SelectedValue="{Binding SelectedFontSize, Mode=TwoWay}"  igPrim:ListBoxBehaviors.AutoscrollToSelectedItem="True" IsEnabled="{Binding IsFontSizeSelectionEnabled}"/>

                        <!-- ==================  Underline  ================== -->
                        <Grid Grid.Row="3" Grid.Column="1" Grid.ColumnSpan="1" Margin="0,6,0,0" >
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Border Margin="0,10,0,10"
                                 Background="{StaticResource HeaderBackgroundBrush}"
                                 Padding="4,2,4,4"
                                 HorizontalAlignment="Left">
                            <Label Content="{Binding Source={StaticResource SpreadsheetFontControl_UnderlineLabel}, Path=Value}" Padding="0" Foreground="{StaticResource HeaderForegroundBrush}"/>
                            </Border>
                        </Grid>
                        <ComboBox Grid.Row="4" Grid.Column="1" Grid.ColumnSpan="1"
                              Name="cmbFontUnderlineStyles"
                              Margin="0,2,0,0" HorizontalAlignment="Stretch" VerticalAlignment="Top"
                              ItemsSource="{Binding FontUnderlineStyles}"
                              SelectedValue="{Binding SelectedFontUnderlineStyle}"/>
                        
                        <!-- ==================  Color  ================== -->
                        <Grid Grid.Row="3" Grid.Column="3" Grid.ColumnSpan="1" Margin="0,6,0,0" >
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Border Margin="0,10,0,10"
                                    Background="{StaticResource HeaderBackgroundBrush}"
                                    Padding="4,2,4,4"
                                    HorizontalAlignment="Left">
                                <Label Content="{Binding Source={StaticResource SpreadsheetFontControl_ColorLabel}, Path=Value}" Padding="0" Foreground="{StaticResource HeaderForegroundBrush}"/>
                                </Border>
                        </Grid>
                        <igPrim:ThemeColorPickerControl Grid.Row="4" Grid.Column="3" Grid.ColumnSpan="1" Margin="0,2,0,0"  
                                                        x:Name="TESTID_FT_FontColor" 
                                                             VerticalAlignment="Top" HorizontalAlignment="Stretch" 
                                                             ThemeColorPickerControlViewModel="{Binding ThemeColorPickerControlViewModel}"
                                                             SpecialColorModeOption="Automatic" 
                                                             SelectedColorInfo="{Binding SelectedFontColorInfo, Mode=TwoWay}" 
                                                             SectionHeaderVisibility="Visible"/>

                        <!-- ==================  Normal Font  ================== -->
                        <CheckBox Grid.Row="4" Grid.Column="5" Grid.ColumnSpan="1" x:Name="TESTID_FT_NormalFont" VerticalAlignment="Top" Margin="0,6,0,0" Content="{Binding Source={StaticResource SpreadsheetFontControl_NormalFontLabel}, Path=Value}" 
                              IsChecked="{Binding IsNormalFont, Mode=TwoWay}"/>

                        <!-- ==================  Text Effects  ================== -->
                        <Grid Grid.Row="5" Grid.Column="1" Margin="0,10,0,2" >
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Border Margin="0,10,0,10"
                                    Background="{StaticResource HeaderBackgroundBrush}"
                                    Padding="4,2,4,4"
                                    HorizontalAlignment="Left">
                                <Label Content="{Binding Source={StaticResource SpreadsheetFontControl_Text_Effects}, Path=Value}" Padding="0" Foreground="{StaticResource HeaderForegroundBrush}"/>
                                </Border>
                            
                        </Grid>
                        <StackPanel Grid.Row="6" Grid.Column="1">
                            <CheckBox Content="{Binding Source={StaticResource SpreadsheetFontControl_StrikethroughLabel}, Path=Value}" x:Name="TESTID_FT_Strikethrough" IsChecked="{Binding Strikeout, Mode=TwoWay}" Margin="0,3,2,3" IsThreeState="True"/>
                            <CheckBox Content="{Binding Source={StaticResource SpreadsheetFontControl_SuperscriptLabel}, Path=Value}" x:Name="TESTID_FT_Superscript" IsChecked="{Binding Superscript, Mode=TwoWay}" Margin="0,3,2,3" IsThreeState="True" IsEnabled="{Binding IsSuperscriptSelectionEnabled}"/>
                            <CheckBox Content="{Binding Source={StaticResource SpreadsheetFontControl_SubscriptLabel}, Path=Value}" x:Name="TESTID_FT_Subscript" IsChecked="{Binding Subscript, Mode=TwoWay}" Margin="0,3,2,3" IsThreeState="True" IsEnabled="{Binding IsSubscriptSelectionEnabled}"/>
                        </StackPanel>

                        <!-- ==================  Text Preview  ================== -->
                        <Grid Grid.Row="5" Grid.Column="3" Margin="0,10,0,2" >
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Border Margin="0,10,0,10"
                                    Background="{StaticResource HeaderBackgroundBrush}"
                                    Padding="4,2,4,4"
                                    HorizontalAlignment="Left">
                                <Label  Content="{Binding Source={StaticResource SpreadsheetFontControl_Text_Preview}, Path=Value}" Padding="0" Foreground="{StaticResource HeaderForegroundBrush}"/>
                            </Border>
                        </Grid>
                        <Border Grid.Row="6" Grid.Column="3" Grid.ColumnSpan="3" BorderBrush="{StaticResource ListBoxBorderBrush}" BorderThickness="1" Padding="7">
                            <Grid  x:Name="fontPreviewGrid">
                                <Border Margin="0" BorderThickness="0" igPrim:XamlHelper.SnapsToDevicePixels="True">
                                    <Grid ClipToBounds="False">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width=".35*"/>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width=".35*"/>
                                        </Grid.ColumnDefinitions>
                                        <Rectangle  x:Name="LeftBaselineMarker"  Grid.Column="0" Fill="{StaticResource ListBoxBorderBrush}" Height="1" VerticalAlignment="Center" igPrim:XamlHelper.SnapsToDevicePixels="True" />
                                        <Grid Grid.Column="1" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="10,0,10,0" >
                                            <igPrim:SpreadsheetFontPreviewControl 
                                                x:Name="FontPreviewControl" Padding="0" IsHitTestVisible="False" 
                                                Background="{Binding ElementName=fontPreviewGrid, Path=Background}" 
                                                MinWidth="0" />
                                        </Grid>
                                        <Rectangle x:Name="RightBaselineMarker" Grid.Column="2" Fill="{StaticResource ListBoxBorderBrush}" Height="1" VerticalAlignment="Center" igPrim:XamlHelper.SnapsToDevicePixels="True" />
                                    </Grid>
                                </Border>
                            </Grid>
                        </Border>

                        <Rectangle  Grid.Row="7" Grid.Column="1" Grid.ColumnSpan="5" Fill="Transparent"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- JM 12/19/2017 - TFS247301 - FormatCellsDialog -->
    <!-- ********************************** FormatCellsDialogNumberTabTemplate **********************************-->
    <DataTemplate x:Key="FormatCellsDialogNumberTabTemplate">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="6"/>
                <ColumnDefinition Width="120"/>
                <ColumnDefinition Width="10"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="6"/>
            </Grid.ColumnDefinitions>

            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>

            <!-- ================================= Category ================================= -->
            <Border Grid.Row="0" 
                    Grid.Column="1" 
                    Margin="0,5,0,10"
                    Background="{StaticResource HeaderBackgroundBrush}"
                    Padding="4,2,4,4"
                    HorizontalAlignment="Left">
                <Label Content="{Binding Source={StaticResource FormatCellsDialog_NumberTab_CategoryLabel}, Path=Value}" Padding="0" Foreground="{StaticResource HeaderForegroundBrush}" />
                </Border>
            <ListBox Grid.Row="1" Grid.RowSpan="4" Grid.Column="1" x:Name="TESTID_NT_Category"  SelectedItem="{Binding ViewModel.SelectedFormatCategory}" ItemsSource="{Binding ViewModel.FormatCategories}" DisplayMemberPath="CategoryName" igPrim:ListBoxBehaviors.AutoscrollToSelectedItem="True"/>

            <!-- ================================= Sample / Preview Area ================================= -->
            <Border Grid.Row="1" 
                    Grid.Column="3"
                    Margin="0,0,0,10"
                    Background="{StaticResource HeaderBackgroundBrush}"
                    Padding="4,2,4,4"
                    HorizontalAlignment="Left">
                <Label Content="{Binding Source={StaticResource FormatCellsDialog_NumberTab_SampleLabel}, Path=Value}" Padding="0" Foreground="{StaticResource HeaderForegroundBrush}" />
                </Border>
            <Border Grid.Row="2" Grid.Column="3" BorderThickness="1" BorderBrush="{StaticResource ListBoxBorderBrush}" Margin="0,0,0,0" Height="30" >
                <igPrim:CellFormatPreviewControl BorderThickness="0"  VerticalAlignment="Stretch" HorizontalAlignment="Stretch" PreviewFormatMask="{Binding ViewModel.SelectedFormatResolved}" PreviewValue="{Binding ViewModel.CellValue}"/>
            </Border>
            <Rectangle Grid.Row="2" Grid.Column="3" Margin="0,0,0,0" Height="35" VerticalAlignment="Center" Fill="Transparent"/>

            <!-- ================================= DecimalPlaces ================================= -->
            <StackPanel Grid.Row="3" Grid.Column="3"  Visibility="{Binding ViewModel.SelectedFormatCategory.DecimalPlaces, Converter={StaticResource DecimalValueToVisibilityConverter}, ConverterParameter=-1}" Margin="0,12,0,0">
                <Border Margin="0,0,0,10"
                        Background="{StaticResource HeaderBackgroundBrush}"
                        Padding="4,2,4,4"
                        HorizontalAlignment="Left">
                    <Label Content="{Binding Source={StaticResource FormatCellsDialog_NumberTab_DecimalPlaces}, Path=Value}" Padding="0"  Foreground="{StaticResource HeaderForegroundBrush}" />
                    </Border>
                <igEditors:XamNumericEditor Height="25"  HorizontalAlignment="Left" Width="100" 
                                        SpinButtonDisplayMode="Always" PromptChar="" Name="numberOfColumns"
                                        Value="{Binding ViewModel.SelectedFormatCategory.DecimalPlaces}" ValueType="{x:Type sys:Int32}" Margin="0,0,0,0">
                    <igEditors:XamNumericEditor.ValueConstraint>
                        <igEditors:ValueConstraint MinInclusive="0" MaxInclusive="30" ValidateAsType="Integer32"/>
                    </igEditors:XamNumericEditor.ValueConstraint>
                </igEditors:XamNumericEditor>
            </StackPanel>

            <!-- ================================= Selected Category Formats ================================= -->
            <Grid Grid.Row="4" Grid.Column="3" Visibility="{Binding ViewModel.SelectedFormatCategory.AreFormatsVisible, Converter={StaticResource boolToVis}}" Margin="0,12,0,0">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                
                <Border Grid.Row="0"
                        Margin="0,5,0,10"
                        Background="{StaticResource HeaderBackgroundBrush}"
                        Padding="4,2,4,4"
                        HorizontalAlignment="Left">
                    <Label Content="{Binding ViewModel.SelectedFormatCategory.FormatsHeader}" Padding="0" Foreground="{StaticResource HeaderForegroundBrush}"/>
                    </Border>
                <TextBox Grid.Row="1" x:Name="TESTID_NT_CustomizedFormatMask" Text="{Binding ViewModel.CustomizedFormatMask, UpdateSourceTrigger=PropertyChanged}" Visibility="{Binding ViewModel.SelectedFormatCategory.IsCustom, Converter={StaticResource boolToVis}}" Height="24" Margin="0,0,0,-1"/>                
                <ListBox Grid.Row="2" x:Name="TESTID_NT_Formats" SelectedItem="{Binding ViewModel.SelectedFormat}" ItemsSource="{Binding ViewModel.SelectedFormatCategory.Formats}" VerticalAlignment="Stretch" igPrim:ListBoxBehaviors.AutoscrollToSelectedItem="True">
                    <ListBox.ItemTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding PreviewText}"/>
                        </DataTemplate>
                    </ListBox.ItemTemplate>
                </ListBox>
            </Grid>

            <!-- ================== Description ================== -->
            <TextBlock Grid.Row="5" Grid.Column="1" Grid.ColumnSpan="3" Margin="0,20,0,50" TextWrapping="Wrap" Text="{Binding ViewModel.SelectedFormatCategory.Description}"/>
        </Grid>
    </DataTemplate>

    <!-- JM 12/19/2017 - TFS247301 - FormatCellsDialog -->
    <!-- ********************************** FormatCellsDialogAlignmentTabTemplate **********************************-->
    <DataTemplate x:Key="FormatCellsDialogAlignmentTabTemplate">
        <Grid Margin="0">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>

            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="6"/>
                <ColumnDefinition Width="6"/>
                <ColumnDefinition Width="160"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="6"/>
            </Grid.ColumnDefinitions>

            <!-- ================== Text Alignment  ================== -->
            <Grid Grid.Row="0" Grid.Column="1" Grid.ColumnSpan="3" Margin="0,8,0,0" >
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Border Margin="0,5,0,10"
                        Background="{StaticResource HeaderBackgroundBrush}"
                        Padding="4,2,4,4"
                        HorizontalAlignment="Left">
                    <Label Content="{Binding Source={StaticResource FormatCellsDialog_AlignmentTab_Text_TextAlignment}, Path=Value}" Padding="0" Foreground="{StaticResource HeaderForegroundBrush}"/>
                    </Border>
             </Grid>

            <Label Grid.Row="1" Grid.Column="2" Grid.ColumnSpan="3" Margin="0,8,0,0" HorizontalAlignment="Left" VerticalAlignment="Top" Content="{Binding Source={StaticResource FormatCellsDialog_AlignmentTab_Text_Horizontal}, Path=Value}" Target="{Binding ElementName=cmbHorizontalTextAlignment}" Padding="0" Foreground="{StaticResource HeaderForegroundBrush}"  />
            <ComboBox Grid.Row="2" Grid.Column="2" Grid.ColumnSpan="3" Margin="0,5,0,0" Width="150" HorizontalAlignment="Left" Name="cmbHorizontalTextAlignment" 
                              ItemsSource="{Binding ViewModel.HorizontalCellAlignments}"
                              SelectedValue="{Binding ViewModel.SelectedHorizontalCellAlignment}"/>

            <Label Grid.Row="2" Grid.Column="3" Grid.ColumnSpan="2" Margin="0,8,0,5" HorizontalAlignment="Left" VerticalAlignment="Center" Content="{Binding Source={StaticResource FormatCellsDialog_AlignmentTab_Text_Indent}, Path=Value}" Target="{Binding ElementName=spinIndent}" Padding="0" Foreground="{StaticResource HeaderForegroundBrush}" />
            <igEditors:XamNumericEditor Grid.Row="3" Grid.Column="3" Grid.ColumnSpan="2" Margin="0,0,0,0" HorizontalAlignment="Left" Width="70" Height="22" Name="spinIndent"
                                        SpinButtonDisplayMode="Always" PromptChar="" Mask="nnn" TrimFractionalZeros="True" SpinIncrement="1" SpinWrapBehavior="NoWrapping"
                                        Value="{Binding ViewModel.Indent, Mode=TwoWay}" ValueType="{x:Type sys:Int32}" >
                <igEditors:XamNumericEditor.ValueConstraint>
                    <igEditors:ValueConstraint MinInclusive="0" MaxInclusive="250"/>
                </igEditors:XamNumericEditor.ValueConstraint>
            </igEditors:XamNumericEditor>

            <Label Grid.Row="3" Grid.Column="2" Grid.ColumnSpan="3" Margin="0,7,0,0" HorizontalAlignment="Left" VerticalAlignment="Top" Content="{Binding Source={StaticResource FormatCellsDialog_AlignmentTab_Text_Vertical}, Path=Value}" Target="{Binding ElementName=cmbVerticalTextAlignment}" Padding="0" Foreground="{StaticResource HeaderForegroundBrush}" />
            <ComboBox Grid.Row="4" Grid.Column="2" Grid.ColumnSpan="3" Width="150" HorizontalAlignment="Left" Name="cmbVerticalTextAlignment"
                              ItemsSource="{Binding ViewModel.VerticalCellAlignments}"
                              SelectedValue="{Binding ViewModel.SelectedVerticalCellAlignment}" Margin="0,5,0,0" />

            <Rectangle  Grid.Row="5" Grid.Column="2" Grid.ColumnSpan="3" Fill="Transparent" Height="26"/>
            <!-- ================== Text Control  ================== -->
            <Grid Grid.Row="6" Grid.Column="1" Grid.ColumnSpan="3" Margin="0,11,0,0" >
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Border Margin="0,0,0,10"
                        Background="{StaticResource HeaderBackgroundBrush}"
                        Padding="4,2,4,4"
                        HorizontalAlignment="Left">
                    <Label Content="{Binding Source={StaticResource FormatCellsDialog_AlignmentTab_Text_TextControl}, Path=Value}" Padding="0" Foreground="{StaticResource HeaderForegroundBrush}"/>
                    </Border>
            </Grid>

            <CheckBox Grid.Row="7" Grid.Column="2" Grid.ColumnSpan="3" Margin="0,8,0,0" VerticalAlignment="Center" HorizontalAlignment="Left" 
                      IsChecked="{Binding ViewModel.WrapText}" Name="chkWrapText"
                      Content="{Binding Source={StaticResource FormatCellsDialog_AlignmentTab_Text_WrapText}, Path=Value}"
                      IsThreeState="True"/>
            <CheckBox Grid.Row="8" Grid.Column="2" Grid.ColumnSpan="3" Margin="0,8,0,0" VerticalAlignment="Center" HorizontalAlignment="Left" 
                      x:Name="TESTID_AT_ShrinkToFit" 
                      IsChecked="{Binding ViewModel.ShrinkToFit}" 
                      Content="{Binding Source={StaticResource FormatCellsDialog_AlignmentTab_Text_ShrinkToFit}, Path=Value}"
                      IsEnabled="{Binding ViewModel.IsShrinkToFitSelectionEnabled}" 
                      IsThreeState="True"/>
            <CheckBox Grid.Row="9" Grid.Column="2" Grid.ColumnSpan="3" Margin="0,8,0,0" VerticalAlignment="Center" HorizontalAlignment="Left" 
                      x:Name="TESTID_AT_MergeCells" 
                      IsChecked="{Binding ViewModel.MergeCells}" 
                      Content="{Binding Source={StaticResource FormatCellsDialog_AlignmentTab_Text_MergeCells}, Path=Value}"
                      IsEnabled="{Binding ViewModel.IsMergeCellsSelectionEnabled}" 
                      IsThreeState="True"/>
            <Rectangle  Grid.Row="13" Grid.Column="0" Grid.ColumnSpan="5" Fill="Transparent"/>
        </Grid>
    </DataTemplate>

    <!-- ********************************** FormatCellsDialogFontTabTemplate **********************************-->
    <DataTemplate x:Key="FormatCellsDialogFontTabTemplate">
        <Grid>
            <igPrim:SpreadsheetFontControl DataContext="{Binding ViewModel.FontControlViewModel}"/>
        </Grid>
    </DataTemplate>

    <!-- ********************************** FormatCellsDialogBorderTabTemplate **********************************-->
    <DataTemplate x:Key="FormatCellsDialogBorderTabTemplate">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="50"/>
                <RowDefinition Height="25"/>
                <RowDefinition Height="42"/>
                <RowDefinition Height="50"/>
                <RowDefinition Height="50"/>
                <RowDefinition Height="50"/>
                <RowDefinition Height="50"/>
                <RowDefinition Height="15"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>

            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="6"/>
                <ColumnDefinition Width="6"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="15"/>
                <ColumnDefinition Width="65"/>
                <ColumnDefinition Width="65"/>
                <ColumnDefinition Width="65"/>
                <ColumnDefinition Width="65"/>
                <ColumnDefinition Width="50"/>
                <ColumnDefinition Width="6"/>
            </Grid.ColumnDefinitions>

            <!-- ==================  Line ================== -->
            <!-- Line -->
            <Grid Grid.Row="0" Grid.Column="1" Grid.ColumnSpan="2" >
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Border Margin="0,5,0,10"
                        Background="{StaticResource HeaderBackgroundBrush}"
                        Padding="4,2,4,4"
                        HorizontalAlignment="Left">
                    <Label Content="{Binding Source={StaticResource FormatCellsDialog_BorderTab_Text_Line}, Path=Value}" Padding="0" Foreground="{StaticResource HeaderForegroundBrush}"/>
                    </Border>
            </Grid>

            <!-- Style -->
            <Grid  Grid.Row="1" Grid.Column="2" Grid.RowSpan="5" Margin="0,6,0,0" >
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>

                <Label Content="{Binding Source={StaticResource FormatCellsDialog_BorderTab_Text_Style}, Path=Value}" VerticalAlignment="Bottom" HorizontalAlignment="Left" Padding="0,0,0,5" Foreground="{StaticResource HeaderForegroundBrush}" />
                <ListBox Grid.Row="1"  x:Name="TESTID_BT_LineStyles"  ItemsSource="{Binding ViewModel.CellBorderLineStyles}" SelectedValue="{Binding ViewModel.SelectedCellBorderLineStyle, Mode=TwoWay}" igPrim:ListBoxBehaviors.AutoscrollToSelectedItem="True"/>
            </Grid>

            <!-- Color -->
            <StackPanel Grid.Row="6" Grid.RowSpan="3" Grid.Column="2" >
                <Label Margin="0,8,0,0" HorizontalAlignment="Left" VerticalAlignment="Top" Content="{Binding Source={StaticResource FormatCellsDialog_BorderTab_Text_Color}, Path=Value}" Padding="0" Foreground="{StaticResource HeaderForegroundBrush}" />
                <igPrim:ThemeColorPickerControl Margin="0,5,0,0" 
                                                x:Name="TESTID_BT_LineColor" 
                                                SpecialColorModeOption="Automatic" 
                                                SelectedColorInfo="{Binding ViewModel.CellBorderLineColorInfo, Mode=TwoWay}" 
                                                ThemeColorPickerControlViewModel="{Binding ViewModel.ThemeColorPickerControlViewModel}" SectionHeaderVisibility="Visible"
                                                />
            </StackPanel>

            <!-- ==================  Presets ================== -->
            <Grid Grid.Row="0" Grid.Column="4" Grid.ColumnSpan="4" >
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Border Margin="0,5,0,10"
                        Background="{StaticResource HeaderBackgroundBrush}"
                        Padding="4,2,4,4"
                        HorizontalAlignment="Left">
                    <Label Content="{Binding Source={StaticResource FormatCellsDialog_BorderTab_Text_Presets},Path=Value}" Padding="0" Foreground="{StaticResource HeaderForegroundBrush}"/>
                </Border>
            </Grid>

            <!-- Preset buttons -->
            <!-- None -->
            <Button Grid.Row="1" Grid.Column="5" Width="50" Height="50"  
                    x:Name="TESTID_BT_NonePreset" 
                    Style="{StaticResource PresetButtonStyle}"
                    HorizontalAlignment="Center" VerticalAlignment="Center" 
                    Command="{x:Static igPrim:SpreadsheetFormatCellsDialogControl.ApplyCellBorderPresetCommand}" CommandParameter="{x:Static igPrim:SpreadsheetCellBorderPresetType.None}"
                    ContentTemplate="{StaticResource borderLineButtonContent}"
                    HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch"/>
            <!-- Outline -->
            <Button Grid.Row="1" Grid.Column="6" Width="50" Height="50"
                    x:Name="TESTID_BT_OutlinePreset" 
                    Style="{StaticResource PresetButtonStyle}"
                    HorizontalAlignment="Center" VerticalAlignment="Center" 
                    Command="{x:Static igPrim:SpreadsheetFormatCellsDialogControl.ApplyCellBorderPresetCommand}" CommandParameter="{x:Static igPrim:SpreadsheetCellBorderPresetType.Outline}"
                    ContentTemplate="{StaticResource borderLineButtonContent}"
                    HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch"
                    igPrim:BorderButtonBehaviors.LeftBorderVisibility="Visible"
                    igPrim:BorderButtonBehaviors.TopBorderVisibility="Visible"
                    igPrim:BorderButtonBehaviors.RightBorderVisibility="Visible"
                    igPrim:BorderButtonBehaviors.BottomBorderVisibility="Visible"
                    />
            <!-- Inside -->
            <Button Grid.Row="1" Grid.Column="7" Width="50" Height="50" 
                    x:Name="TESTID_BT_InsidePreset" 
                    Style="{StaticResource PresetButtonStyle}"
                    HorizontalAlignment="Center" VerticalAlignment="Center" 
                    Command="{x:Static igPrim:SpreadsheetFormatCellsDialogControl.ApplyCellBorderPresetCommand}" CommandParameter="{x:Static igPrim:SpreadsheetCellBorderPresetType.Inside}"
                    ContentTemplate="{StaticResource borderLineButtonContent}"
                    HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch"
                    igPrim:BorderButtonBehaviors.InsideHorizontalBorderVisibility="Visible"
                    igPrim:BorderButtonBehaviors.InsideVerticalBorderVisibility="Visible"
                    IsEnabled="{Binding ViewModel.CellBorderInfo.IsInsideCellBordersEditable}"
                    />

            <!-- Preset labels -->
            <Label Grid.Row="2" Grid.Column="5" VerticalAlignment="Center" HorizontalAlignment="Center" Content="{Binding Source={StaticResource FormatCellsDialog_BorderTab_Text_PresetNone}, Path=Value}"/>
            <Label Grid.Row="2" Grid.Column="6" VerticalAlignment="Center" HorizontalAlignment="Center" Content="{Binding Source={StaticResource FormatCellsDialog_BorderTab_Text_PresetOutline}, Path=Value}"/>
            <Label Grid.Row="2" Grid.Column="7" VerticalAlignment="Center" HorizontalAlignment="Center" 
                   Content="{Binding Source={StaticResource FormatCellsDialog_BorderTab_Text_PresetInside}, Path=Value}"
                   IsEnabled="{Binding ViewModel.CellBorderInfo.IsInsideCellBordersEditable}"/>

            <!-- Border -->
            <Grid Grid.Row="3" Grid.Column="4" Grid.ColumnSpan="4" >
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Border Margin="0,10,0,10"
                        Background="{StaticResource HeaderBackgroundBrush}"
                        Padding="4,2,4,4"
                        HorizontalAlignment="Left">
                    <Label Content="{Binding Source={StaticResource FormatCellsDialog_BorderTab_Text_Border}, Path=Value}" Padding="0" Foreground="{StaticResource HeaderForegroundBrush}"/>
              </Border>
            </Grid>

            <!-- Line-adding buttons -->
            <!-- Top -->
            <ToggleButton Grid.Row="4" Grid.Column="4" Width="40" Height="40" 
                          x:Name="TESTID_BT_AddTopLine" 
                          Style="{StaticResource PresetToggleButtonStyle}"
                          HorizontalAlignment="Right" VerticalAlignment="Top" Margin="0,0,6,0" 
                          Command="{x:Static igPrim:SpreadsheetFormatCellsDialogControl.ToggleCellBorderLineCommand}" CommandParameter="{x:Static igPrim:SpreadsheetCellBorderType.Top}"
                          ContentTemplate="{StaticResource borderLineButtonContent}"
                          HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch"
                          igPrim:BorderButtonBehaviors.TopBorderVisibility="Visible"
                          IsChecked="{Binding Path=ViewModel.CellBorderInfo.IsTopCellBorderVisible, Mode=OneWay}"
                          />
            <!-- Inside Horizontal -->
            <ToggleButton Grid.Row="5" Grid.Column="4" Width="40" Height="40" 
                          x:Name="TESTID_BT_AddInsideHorizontalLine" 
                          Style="{StaticResource PresetToggleButtonStyle}"
                          HorizontalAlignment="Right" VerticalAlignment="Center" Margin="0,0,6,0" 
                          Command="{x:Static igPrim:SpreadsheetFormatCellsDialogControl.ToggleCellBorderLineCommand}" CommandParameter="{x:Static igPrim:SpreadsheetCellBorderType.InsideHorizontal}"
                          ContentTemplate="{StaticResource borderLineButtonContent}"
                          HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch"
                          igPrim:BorderButtonBehaviors.InsideHorizontalBorderVisibility="Visible"
                          IsChecked="{Binding Path=ViewModel.CellBorderInfo.IsInsideHorizontalCellBorderVisible, Mode=OneWay}"
                          IsEnabled="{Binding ViewModel.CellBorderInfo.IsInsideHorizontalCellBorderEditable}"
                          />
            <!-- Bottom -->
            <ToggleButton Grid.Row="6" Grid.Column="4" Width="40" Height="40" 
                          x:Name="TESTID_BT_AddBottomLine" 
                          Style="{StaticResource PresetToggleButtonStyle}"
                          HorizontalAlignment="Right" VerticalAlignment="Bottom" Margin="0,0,6,0" 
                          Command="{x:Static igPrim:SpreadsheetFormatCellsDialogControl.ToggleCellBorderLineCommand}" CommandParameter="{x:Static igPrim:SpreadsheetCellBorderType.Bottom}"
                          ContentTemplate="{StaticResource borderLineButtonContent}"
                          HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch"
                          igPrim:BorderButtonBehaviors.BottomBorderVisibility="Visible"
                          IsChecked="{Binding Path=ViewModel.CellBorderInfo.IsBottomCellBorderVisible, Mode=OneWay}"
                          />
            <!-- DiagonalUp-->
            <ToggleButton Grid.Row="7" Grid.Column="4" Width="40" Height="40" 
                          x:Name="TESTID_BT_AddDiagonalUpLine" 
                          Style="{StaticResource PresetToggleButtonStyle}"
                          HorizontalAlignment="Right" VerticalAlignment="Bottom" Margin="0,0,6,0" 
                          Command="{x:Static igPrim:SpreadsheetFormatCellsDialogControl.ToggleCellBorderLineCommand}" CommandParameter="{x:Static igPrim:SpreadsheetCellBorderType.DiagonalUp}"
                          ContentTemplate="{StaticResource borderLineButtonContent}"
                          HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch"
                          igPrim:BorderButtonBehaviors.DiagonalUpBorderVisibility="Visible"
                          IsChecked="{Binding Path=ViewModel.CellBorderInfo.IsDiagonalUpCellBorderVisible, Mode=OneWay}"
                          />
            <!-- Left -->
            <ToggleButton Grid.Row="7" Grid.Column="5" Width="40" Height="40" 
                          x:Name="TESTID_BT_AddLeftLine" 
                          Style="{StaticResource PresetToggleButtonStyle}"
                          HorizontalAlignment="Left" VerticalAlignment="Bottom" Margin="0,0,6,0" 
                          Command="{x:Static igPrim:SpreadsheetFormatCellsDialogControl.ToggleCellBorderLineCommand}" CommandParameter="{x:Static igPrim:SpreadsheetCellBorderType.Left}"
                          ContentTemplate="{StaticResource borderLineButtonContent}"
                          HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch"
                          igPrim:BorderButtonBehaviors.LeftBorderVisibility="Visible"
                          IsChecked="{Binding Path=ViewModel.CellBorderInfo.IsLeftCellBorderVisible, Mode=OneWay}"
                          />
            <!-- InsideVertical -->
            <ToggleButton Grid.Row="7" Grid.Column="6" Width="40" Height="40" 
                          x:Name="TESTID_BT_AddInsideVerticalLine" 
                          Style="{StaticResource PresetToggleButtonStyle}"
                          HorizontalAlignment="Center" VerticalAlignment="Bottom" Margin="0,0,6,0" 
                          Command="{x:Static igPrim:SpreadsheetFormatCellsDialogControl.ToggleCellBorderLineCommand}" CommandParameter="{x:Static igPrim:SpreadsheetCellBorderType.InsideVertical}"
                          ContentTemplate="{StaticResource borderLineButtonContent}"
                          HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch"
                          igPrim:BorderButtonBehaviors.InsideVerticalBorderVisibility="Visible"
                          IsChecked="{Binding Path=ViewModel.CellBorderInfo.IsInsideVerticalCellBorderVisible, Mode=OneWay}"
                          IsEnabled="{Binding ViewModel.CellBorderInfo.IsInsideVerticalCellBorderEditable}"
                          />
            <!-- Right -->
            <ToggleButton Grid.Row="7" Grid.Column="7" Width="40" Height="40" 
                          x:Name="TESTID_BT_AddRightLine" 
                          Style="{StaticResource PresetToggleButtonStyle}"
                          HorizontalAlignment="Right" VerticalAlignment="Bottom" Margin="0,0,6,0" 
                          Command="{x:Static igPrim:SpreadsheetFormatCellsDialogControl.ToggleCellBorderLineCommand}" CommandParameter="{x:Static igPrim:SpreadsheetCellBorderType.Right}"
                          ContentTemplate="{StaticResource borderLineButtonContent}"
                          HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch"
                          igPrim:BorderButtonBehaviors.RightBorderVisibility="Visible"
                          IsChecked="{Binding Path=ViewModel.CellBorderInfo.IsRightCellBorderVisible, Mode=OneWay}"
                          />
            <!-- DiagonalDown-->
            <ToggleButton Grid.Row="7" Grid.Column="8" Width="40" Height="40" 
                          x:Name="TESTID_BT_AddDiagonalDownLine" 
                          Style="{StaticResource PresetToggleButtonStyle}"
                          HorizontalAlignment="Center" VerticalAlignment="Bottom" Margin="0,0,6,0" 
                          Command="{x:Static igPrim:SpreadsheetFormatCellsDialogControl.ToggleCellBorderLineCommand}" CommandParameter="{x:Static igPrim:SpreadsheetCellBorderType.DiagonalDown}"
                          ContentTemplate="{StaticResource borderLineButtonContent}"
                          HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch"
                          igPrim:BorderButtonBehaviors.DiagonalDownBorderVisibility="Visible"
                          IsChecked="{Binding Path=ViewModel.CellBorderInfo.IsDiagonalDownCellBorderVisible, Mode=OneWay}"
                          />

            <!-- Preview -->
            <igPrim:CellBordersPreviewControl Grid.Row="4" Grid.RowSpan="3" Grid.Column="5" Grid.ColumnSpan="3" 
                                                   HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                                                   OriginalWorkbook="{Binding ViewModel.Workbook}"/>

            <!-- Description -->
            <TextBlock Grid.Row="9" Grid.Column="1" Grid.ColumnSpan="8" Margin="0,10,0,0" TextWrapping="Wrap" 
                       Text="{Binding Source={StaticResource FormatCellsDialog_BorderTab_Text_Description}, Path=Value}"
                       VerticalAlignment="Bottom"/>

            <Rectangle  Grid.Row="10" Grid.Column="1" Grid.ColumnSpan="8" Fill="{StaticResource TransparentBrush}"/>
        </Grid>
    </DataTemplate>

    <!-- ********************************** FormatCellsDialogFillTabTemplate **********************************-->
    <DataTemplate x:Key="FormatCellsDialogFillTabTemplate">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>

            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="6"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="50"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="6"/>
            </Grid.ColumnDefinitions>

            <!-- ==================  Background Color  ================== -->
            <Grid Grid.Row="0" Grid.Column="1" Grid.ColumnSpan="1" Margin="0,10,0,2" >
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Border Margin="0,0,0,10"
                        Background="{StaticResource HeaderBackgroundBrush}"
                        Padding="4,2,4,4"
                        HorizontalAlignment="Left">
                    <Label Content="{Binding Source={StaticResource FormatCellsDialog_FillTab_Text_BackgroundColor}, Path=Value}" Padding="0" Foreground="{StaticResource HeaderForegroundBrush}"/>
                    </Border>
            </Grid>
            <igPrim:ThemeColorPaletteControl Grid.Row="1" Grid.Column="1" Grid.RowSpan="4" Grid.ColumnSpan="1" Margin="0,2,0,0"
                                             x:Name="TESTID_FILLT_Background" 
                                                  VerticalAlignment="Top" HorizontalAlignment="Stretch" 
                                                  SpecialColorModeOption="NoColor" 
                                             NoColorVersion="{Binding ViewModel.NoColorVersion, Mode=TwoWay}"
                                                  SelectedColorInfo="{Binding ViewModel.BackgroundColorInfo, Mode=TwoWay}" 
                                                  ThemeColorPickerControlViewModel="{Binding ViewModel.ThemeColorPickerControlViewModel}" SectionHeaderVisibility="Collapsed"/>

            <!-- ==================  Pattern ================== -->
            <!-- Pattern Color -->
            <Grid Grid.Row="0" Grid.Column="3" Grid.ColumnSpan="1" Margin="0,10,0,0" >
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Border Margin="0,0,0,10"
                        Background="{StaticResource HeaderBackgroundBrush}"
                        Padding="4,2,4,4"
                        HorizontalAlignment="Left">
                    <Label Content="{Binding Source={StaticResource FormatCellsDialog_FillTab_Text_PatternColor}, Path=Value}" Padding="0" Foreground="{StaticResource HeaderForegroundBrush}"/>
                </Border>
            </Grid>
            <igPrim:ThemeColorPickerControl Grid.Row="1" Grid.Column="3" Grid.ColumnSpan="1" Margin="0,2,0,0" 
                                            x:Name="TESTID_FILLT_PatternColor" 
                                                 VerticalAlignment="Top" HorizontalAlignment="Stretch" 
                                                 SpecialColorModeOption="Automatic" 
                                                 SelectedColorInfo="{Binding ViewModel.FillPatternColorInfo, Mode=TwoWay}" 
                                                 ThemeColorPickerControlViewModel="{Binding ViewModel.ThemeColorPickerControlViewModel}" SectionHeaderVisibility="Visible"/>

            <!-- Pattern Style -->
            <Grid Grid.Row="2" Grid.Column="3" Grid.ColumnSpan="1" Margin="0,12,0,0" >
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Border Margin="0,0,0,10"
                        Background="{StaticResource HeaderBackgroundBrush}"
                        Padding="4,2,4,4"
                        HorizontalAlignment="Left">
                <Label Content="{Binding Source={StaticResource FormatCellsDialog_FillTab_Text_PatternStyle}, Path=Value}" Padding="0" Foreground="{StaticResource HeaderForegroundBrush}"/>
               </Border>
            </Grid>
            <ComboBox Grid.Row="3" Grid.Column="3" Grid.ColumnSpan="1"  
                      x:Name="TESTID_FILLT_PatternStyle" 
                      ItemsSource="{Binding ViewModel.FillPatternStyles}"
                      SelectedValue="{Binding Path=ViewModel.SelectedFillPatternStyle, Mode=TwoWay}"/>

            <!-- ================== Sample ================== -->
            <StackPanel Grid.Row="5" Grid.Column="1" Grid.ColumnSpan="3" Margin="0,0,0,10" VerticalAlignment="Bottom">
                <Border Margin="0,0,0,10"
                        Background="{StaticResource HeaderBackgroundBrush}"
                        Padding="4,2,4,4"
                        HorizontalAlignment="Left">
                <Label Content="{Binding Source={StaticResource FormatCellsDialog_FillTab_Text_Sample}, Path=Value}" Padding="0" Foreground="{StaticResource HeaderForegroundBrush}"/>
                    </Border>
                <Border BorderThickness="1" BorderBrush="{StaticResource ListBoxBorderBrush}">
                    <igPrim:CellFillPreviewControl BorderThickness="0" IsEnabled="False" PreviewFill="{Binding ViewModel.SelectedFillForPreview}" Height="59" Margin="8" HorizontalAlignment="Stretch"/>
                </Border>
            </StackPanel>
        </Grid>
    </DataTemplate>

    <!-- ********************************** FormatCellsDialogProtectionTabTemplate **********************************-->
    <DataTemplate x:Key="FormatCellsDialogProtectionTabTemplate">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>

            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="6"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="6"/>
            </Grid.ColumnDefinitions>

            <CheckBox Grid.Row="0" Grid.Column="1" Margin="0,10,0,0" VerticalAlignment="Top" HorizontalAlignment="Left" 
                      x:Name="TESTID_PT_Locked" 
                      IsChecked="{Binding ViewModel.Locked}" 
                      Content="{Binding Source={StaticResource FormatCellsDialog_ProtectionTab_Text_Locked}, Path=Value}"
                      IsThreeState="True"/>
            <CheckBox Grid.Row="1" Grid.Column="1" Margin="0,10,0,0" VerticalAlignment="Top" HorizontalAlignment="Left" 
                      x:Name="TESTID_PT_Hidden" 
                      IsChecked="{Binding ViewModel.Hidden}" 
                      Content="{Binding Source={StaticResource FormatCellsDialog_ProtectionTab_Text_Hidden}, Path=Value}"
                      IsThreeState="True"/>
            <TextBlock Grid.Row="2" Grid.Column="1" Margin="0,10,0,0" Text="{Binding Source={StaticResource FormatCellsDialog_ProtectionTab_Text_Summary}, Path=Value}" HorizontalAlignment="Left" VerticalAlignment="Top" Padding="0" TextWrapping="Wrap"/>
        </Grid>
    </DataTemplate>

    <!-- ********************************** SpreadsheetFormatCellsDialogControl **********************************-->
    <Style TargetType="igPrim:SpreadsheetFormatCellsDialogControl">
        <Setter Property="TitleDescription" Value="{Binding Source={StaticResource FormatCellsDialog_Title}, Path=Value}"  />

        <Setter Property="AlignmentTabTemplate" Value="{Binding Source={StaticResource FormatCellsDialogAlignmentTabTemplate}}"/>
        <Setter Property="BorderTabTemplate" Value="{Binding Source={StaticResource FormatCellsDialogBorderTabTemplate}}"/>
        <Setter Property="FillTabTemplate" Value="{Binding Source={StaticResource FormatCellsDialogFillTabTemplate}}"/>
        <Setter Property="FontTabTemplate" Value="{Binding Source={StaticResource FormatCellsDialogFontTabTemplate}}"/>
        <Setter Property="NumberTabTemplate" Value="{Binding Source={StaticResource FormatCellsDialogNumberTabTemplate}}"/>
        <Setter Property="ProtectionTabTemplate" Value="{Binding Source={StaticResource FormatCellsDialogProtectionTabTemplate}}"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="igPrim:SpreadsheetFormatCellsDialogControl">
                    <Border BorderBrush="{StaticResource PopupBorderBrush}" BorderThickness="1">
                        <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>

                        <TabControl x:Name="MainTabControl"/>

                        <Grid Grid.Row="1">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>

                            <Button Grid.Column ="1" x:Name="TESTID_DIALOG_OK" Content="{Binding Source={StaticResource FormatCellsDialog_OK}, Path=Value}" Margin="0,8,0,8" MinWidth="75" Command="{x:Static igPrim:SpreadsheetFormatCellsDialogControl.ApplySettingsCommand}" />
                            <Button Grid.Column ="2" x:Name="TESTID_DIALOG_Cancel" Content="{Binding Source={StaticResource FormatCellsDialog_Cancel}, Path=Value}" Margin="8,8,8,8" MinWidth="75" Command="{x:Static igPrim:SpreadsheetFormatCellsDialogControl.CancelSettingsCommand}" IsCancel="True"/>
                        </Grid>
                    </Grid>
                        </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>