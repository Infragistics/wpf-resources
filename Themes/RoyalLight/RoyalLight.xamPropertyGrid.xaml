<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:ig="http://schemas.infragistics.com/xaml"
                    xmlns:igControls="http://schemas.infragistics.com/xaml/wpf"
                    xmlns:igPrim="http://schemas.infragistics.com/xaml/primitives"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib">

    <!--  *********************************  RESOURCES  *********************************  -->
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="RoyalLight.xamDateTimeInput.xaml" />
        <ResourceDictionary Source="RoyalLight.xamSlider.xaml" />
        <ResourceDictionary Source="RoyalLight.xamMaskedInput.xaml" />
        <ResourceDictionary Source="RoyalLight.xamColorPicker.xaml" />
        <ResourceDictionary Source="RoyalLight.Styles.xaml" />   
    </ResourceDictionary.MergedDictionaries>

    <!--  *********************************  COMMON GLYPHS  *********************************  -->

    <Geometry x:Key="CategorizeIcon">M 577 628 L 577 629 L 585 629 L 585 628 L 577 628 ZM 577 620 L 577 621 L 585 621 L 585 620 L 577 620 ZM 577 626 L 577 627 L 585 627 L 585 626 L 577 626 ZM 577 618 L 577 619 L 585 619 L 585 618 L 577 618 ZM 577 623 L 577 625 L 588 625 L 588 623 L 577 623 ZM 577 615 L 577 617 L 588 617 L 588 615 L 577 615 ZM 574 623 L 574 625 L 576 625 L 576 623 L 574 623 ZM 574 615 L 574 617 L 576 617 L 576 615 L 574 615 Z</Geometry>
    <Geometry x:Key="SortIcon">M 576.1719 578 L 577 575.9375 L 577.8281 578 L 576.1719 578 ZM 574 580 L 575.4678 580 L 575.8438 579 L 578.2969 579 L 578.673 580 L 580 580 L 577.7542 574 L 576.2458 574 L 574 580 ZM 582 582 L 585 586 L 588 582 L 586 582 L 586 576 L 584 576 L 584 582 L 582 582 ZM 579.5 587.1429 L 576.3879 587.1429 L 579.5 582.5893 L 579.5 582 L 574.5 582 L 574.5 582.8571 L 577.6902 582.8571 L 574.5 587.3973 L 574.5 588 L 579.5 588 L 579.5 587.1429 Z</Geometry>
    <Geometry x:Key="NumericSliderThumbGlyph">M1,16 L11,16 L11,5 L6,1 L1,5 z</Geometry>
    <Geometry x:Key="NumericSliderThumbInnerGlyph">M0,17 L12,17 L12,5 L6,0 L0,5 z</Geometry>
    <Geometry x:Key="NumericSliderThumbDisabledGlyph">M 2.39,0 C2.39,0 5.60,0 5.60,0 6.92,0 8,1.17 8,2.62 8,2.62 8,11.51 8,11.51 8,11.51 3.90,15 3.90,15 3.90,15 0,11.51 0,11.51 0,11.51 0,2.62 0,2.62 0,1.17 1.07,0 2.39,0 z</Geometry>

    <!--  *********************************  BRUSHES  *********************************  -->

    <!--  MenuItem Brushes  -->
    <SolidColorBrush x:Key="MenuItemHoverBackgroundBrush" Color="{StaticResource Color_008}" />
    <SolidColorBrush x:Key="MenuIconColumnBorderBrush" Color="{StaticResource Color_046}" />

    <!--  Menu Brushes  -->
    <SolidColorBrush x:Key="MenuPopupBackgroundBrush" Color="{StaticResource Color_007}" />
    <SolidColorBrush x:Key="MenuPopupBorderBrush" Color="{StaticResource Color_012}" />
    <SolidColorBrush x:Key="ContextMenuBackgroundBrush" Color="{StaticResource Color_007}" />
    <SolidColorBrush x:Key="ContextMenuBorderBrush" Color="{StaticResource Color_012}" />
    <SolidColorBrush x:Key="MenuSeparatorBackgroundBrush" Color="{StaticResource Color_005}" />
    <SolidColorBrush x:Key="MenuItemHeaderHoverForegroundBrush" Color="{StaticResource Color_013}" />

    <!--  PropertyItem Brushes  -->
    <SolidColorBrush x:Key="PropertyItemBackgroundBrush" Color="{StaticResource Color_002}" />
    <SolidColorBrush x:Key="PropertyItemSelectedBackgroundBrush" Color="{StaticResource Color_011}" />
    <SolidColorBrush x:Key="PropertyItemHoverBackgroundBrush" Color="{StaticResource Color_008}" />
    <SolidColorBrush x:Key="PropertyItemNameBorderBrush" Color="{StaticResource Color_003}" />
    <SolidColorBrush x:Key="PropertyItemEditorBorderBrush" Color="{StaticResource Color_003}" />
    <SolidColorBrush x:Key="PropertyItemLayoutPanelBackgroundBrush" Color="{StaticResource Color_002}" />

    <!--  PropertyGrid Brushes  -->
    <SolidColorBrush x:Key="PropertyGridBackgroundBrush" Color="{StaticResource Color_002}" />
    <SolidColorBrush x:Key="PropertyGridBorderBrush" Color="{StaticResource Color_003}" />
    <SolidColorBrush x:Key="PropertyGridCategoryBackgroundBrush" Color="{StaticResource Color_003}" />
    <SolidColorBrush x:Key="PropertyGridDescriptionAreaBackgroundBrush" Color="{StaticResource Color_007}" />
    <SolidColorBrush x:Key="PropertyDescriptionForegroundBrush" Color="{StaticResource Color_001}" />
    <SolidColorBrush x:Key="PropertyGridDescriptionAreaSplitterBackgroundBrush" Color="{StaticResource Color_003}" />
    <SolidColorBrush x:Key="PropertyGridValueResetButtonBorderBrush" Color="{StaticResource Color_005}" />
    <SolidColorBrush x:Key="PropertyGridValueResetButtonCanResetBackgroundBrush" Color="{StaticResource Color_013}" />
    <SolidColorBrush x:Key="PropertyGridValueResetButtonCannotResetBackgroundBrush" Color="{StaticResource Color_046}" />

    <!--  JM 10-10-16 TFS224559 - Added.  -->
    <SolidColorBrush x:Key="XamPropertyGrid_ItemEditorBoundPropertyBorderBrush" Color="#FFFFCF00" />

    <!--  *********************************  PropertyGridBrushEditor Brushes START  ***************************************  -->
    <!--  *********************************  SPECIFIC COLORS  *********************************  -->
    <Color x:Key="Color_1001">#ff000000</Color>
    <Color x:Key="Color_1003">#FFFFFF00</Color>
    <Color x:Key="Color_1004">#ff00ff00</Color>
    <Color x:Key="Color_1006">#ff00ffff</Color>
    <Color x:Key="Color_1007">#ff0000ff</Color>
    <Color x:Key="Color_1008">#FFFF00FF</Color>
    <Color x:Key="Color_1009">#FFFF0000</Color>

    <!--  *********************************  BRUSHES  *********************************  -->
    <!--  Alpha Slider Brushes  -->
    <SolidColorBrush x:Key="PropertyGridBrushEditorAlphaSliderThumbBackgroundBrush" Color="{StaticResource Color_005}" />
    <SolidColorBrush x:Key="PropertyGridBrushEditorAlphaSliderThumbHoverBackgroundBrush" Color="{StaticResource Color_001}" />
    <SolidColorBrush x:Key="PropertyGridBrushEditorAlphaSliderThumbPressedBackgroundBrush" Color="{StaticResource Color_013}" />
    <SolidColorBrush x:Key="PropertyGridBrushEditorAlphaSliderThumbFocusedBorderBrush" Color="{StaticResource Color_013}" />
    <SolidColorBrush x:Key="PropertyGridBrushEditorAlphaSliderTrackBackgroundBrush" Color="{StaticResource Color_009}" />
    <SolidColorBrush x:Key="PropertyGridBrushEditorAlphaSliderSelectionRangeBackgroundBrush" Color="{StaticResource Color_013}" />

    <!--  Expander Brushes  -->
    <SolidColorBrush x:Key="PropertyGridBrushEditorExpanderButtonBackgroundBrush" Color="{StaticResource Color_002}" />
    <SolidColorBrush x:Key="PropertyGridBrushEditorExpanderButtonBorderBrush" Color="{StaticResource Color_009}" />
    <SolidColorBrush x:Key="PropertyGridBrushEditorExpanderButtonHoverBackgroundBrush" Color="{StaticResource Color_002}" />
    <SolidColorBrush x:Key="PropertyGridBrushEditorExpanderButtonHoverBorderBrush" Color="{StaticResource Color_005}" />
    <SolidColorBrush x:Key="PropertyGridBrushEditorExpanderButtonPressedBackgroundBrush" Color="{StaticResource Color_011}" />
    <SolidColorBrush x:Key="PropertyGridBrushEditorExpanderButtonPressedBorderBrush" Color="{StaticResource Color_011}" />
    <SolidColorBrush x:Key="PropertyGridBrushEditorExpanderArrowHoverBorderBrush" Color="{StaticResource Color_006}" />
    <SolidColorBrush x:Key="PropertyGridBrushEditorExpanderArrowPressedBorderBrush" Color="{StaticResource Color_002}" />
    <SolidColorBrush x:Key="PropertyGridBrushEditorExpanderDisabledForegroundBrush" Color="{StaticResource Color_043}" />

    <!--  PropertyGridBrushEditor Brushes  -->
    <SolidColorBrush x:Key="PropertyGridBrushEditorBackgroundBrush" Color="{StaticResource Color_002}" />
    <SolidColorBrush x:Key="PropertyGridBrushEditorGradientStopsBorderBrush" Color="{StaticResource Color_005}" />
    <SolidColorBrush x:Key="PropertyGridBrushEditorColorSampleBorderBrush" Color="{StaticResource Color_046}" />
    <SolidColorBrush x:Key="PropertyGridBrushEditorGradientThumbOuterBackgroundBrush" Color="{StaticResource Color_009}" />
    <SolidColorBrush x:Key="PropertyGridBrushEditorGradientThumbInnerBorderBrush" Color="{StaticResource Color_003}" />
    <SolidColorBrush x:Key="PropertyGridBrushEditorGradientThumbFocusedBorderBrush" Color="{StaticResource Color_011}" />
    <SolidColorBrush x:Key="PropertyGridBrushEditorCurrentColorBorderBrush" Color="{StaticResource Color_005}" />
    <LinearGradientBrush x:Key="PropertyGridBrushEditorColorShadePickerWhiteBackgroundBrush" StartPoint="0,0" EndPoint="1,0">
        <GradientStop Offset="0" Color="{StaticResource Color_009}" />
        <GradientStop Offset="1" Color="{StaticResource Color_046}" />
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="PropertyGridBrushEditorColorShadePickerBlackBackgroundBrush" StartPoint="0,1" EndPoint="0, 0">
        <GradientStop Offset="0" Color="{StaticResource Color_1001}" />
        <GradientStop Offset="1" Color="{StaticResource Color_046}" />
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="PropertyGridBrushEditorColorShadePickerHueBackgroundBrush" igPrim:XamlHelper.IsExcludedFromWash="True" StartPoint="0,0" EndPoint="0,1">
        <GradientStop Offset="0.00" Color="{StaticResource Color_1009}" />
        <GradientStop Offset="0.17" Color="{StaticResource Color_1003}" />
        <GradientStop Offset="0.33" Color="{StaticResource Color_1004}" />
        <GradientStop Offset="0.50" Color="{StaticResource Color_1006}" />
        <GradientStop Offset="0.66" Color="{StaticResource Color_1007}" />
        <GradientStop Offset="0.83" Color="{StaticResource Color_1008}" />
        <GradientStop Offset="1.00" Color="{StaticResource Color_1009}" />
    </LinearGradientBrush>
    <SolidColorBrush x:Key="PropertyGridBrushEditorColorShadePickerColorSamplingBackgroundBrush" Color="{StaticResource Color_1009}" />
    <SolidColorBrush x:Key="PropertyGridBrushEditorColorShadePickerHueRectangleBorderBrush" Color="{StaticResource Color_046}" />
    <SolidColorBrush x:Key="PropertyGridBrushEditorColorShadePickerShadingCanvasBorderBrush" Color="{StaticResource Color_005}" />
    <LinearGradientBrush x:Key="PropertyGridBrushEditorLinearGradienBackgroundBrush" StartPoint="0,0.5" EndPoint="1,0.5">
        <GradientStop Offset="1" Color="{StaticResource Color_004}" />
        <GradientStop Color="{StaticResource Color_009}" />
    </LinearGradientBrush>
    <RadialGradientBrush x:Key="PropertyGridBrushEditorRadialGradienBackgroundBrush">
        <GradientStop Offset="1" Color="{StaticResource Color_004}" />
        <GradientStop Color="{StaticResource Color_009}" />
    </RadialGradientBrush>

    <!--  Tree Brushes  -->
    <SolidColorBrush x:Key="TreeViewBackgroundBrush" Color="{StaticResource Color_002}" />
    <SolidColorBrush x:Key="TreeViewBorderBrush" Color="{StaticResource Color_046}" />

    <!--  TreeItem Brushes  -->
    <SolidColorBrush x:Key="TreeViewItemBackgroundBrush" Color="{StaticResource Color_046}" />
    <SolidColorBrush x:Key="TreeViewItemBorderBrush" Color="{StaticResource Color_046}" />
    <SolidColorBrush x:Key="TreeViewItemHoverBackgroundBrush" Color="{StaticResource Color_003}" />
    <SolidColorBrush x:Key="TreeViewItemHoverBorderBrush" Color="{StaticResource Color_008}" />
    <SolidColorBrush x:Key="TreeViewItemSelectedBackgroundBrush" Color="{StaticResource Color_011}" />
    <SolidColorBrush x:Key="TreeViewItemSelectedBorderBrush" Color="{StaticResource Color_011}" />
    <SolidColorBrush x:Key="TreeViewItemActiveBackgroundBrush" Color="{StaticResource Color_011}" />
    <SolidColorBrush x:Key="TreeViewItemActiveBorderBrush" Color="{StaticResource Color_011}" />

    <!--  ExpansionIndicator Brushes  -->
    <SolidColorBrush x:Key="ExpansionIndicatorGlyphBackgroundBrush" Color="{StaticResource Color_004}" />
    <SolidColorBrush x:Key="ExpansionIndicatorGlyphHoverBackgroundBrush" Color="{StaticResource Color_005}" />
    <SolidColorBrush x:Key="ExpansionIndicatorGlyphExpandedBackgroundBrush" Color="{StaticResource Color_002}" />

    <!--  *********************************  PropertyGridBrushEditor Brushes END  ***************************************  -->

    <!--  *********************************  BrushEditor Radiobuttons Templates START *********************************  -->

    <!--  *********************************  Null Brush  *********************************  -->
    <DataTemplate x:Key="IsNullBrushTemplate">
        <Grid Margin="0,0,0,1">
            <Path Width="15"
                  Height="9"
                  Data="M0,0 L15,0 L0,10 z"
                  Fill="{Binding Path=(Foreground), RelativeSource={RelativeSource AncestorType=ContentControl}}"
                  Stretch="Fill" />
            <Path Width="15"
                  Height="9"
                  Margin="2,2,0,0"
                  Data="M15,0 L15,10 L0,10 z"
                  Fill="{Binding Path=(Foreground), RelativeSource={RelativeSource AncestorType=ContentControl}}"
                  Stretch="Fill" />
        </Grid>
    </DataTemplate>

    <!--  *********************************  Solid Brush  *********************************  -->
    <DataTemplate x:Key="IsSolidColorBrushTemplate">
        <Grid>
            <Rectangle Width="16" Height="11" Stroke="{Binding Path=(Foreground), RelativeSource={RelativeSource AncestorType=ContentControl}}" StrokeThickness="{StaticResource DefaultStrokeThickness}" />
            <Rectangle Width="12" Height="7" Fill="{Binding Path=(Foreground), RelativeSource={RelativeSource AncestorType=ContentControl}}" StrokeThickness="0" />
        </Grid>
    </DataTemplate>

    <!--  *********************************  Gradient / Lineargradient  *********************************  -->
    <DataTemplate x:Key="IsGradientBrushTemplate">
        <Grid>
            <Rectangle Width="16" Height="11" Stroke="{Binding Path=(Foreground), RelativeSource={RelativeSource AncestorType=ContentControl}}" StrokeThickness="{StaticResource DefaultStrokeThickness}" />
            <Rectangle Width="12" Height="7" Fill="{Binding Path=(Foreground), RelativeSource={RelativeSource AncestorType=ContentControl}}" StrokeThickness="0">
                <Rectangle.OpacityMask>
                    <LinearGradientBrush StartPoint="0,0.5" EndPoint="1,0.5">
                        <GradientStop Offset="1" Color="{StaticResource Color_018}" />
                        <GradientStop Color="{StaticResource Color_046}" />
                    </LinearGradientBrush>
                </Rectangle.OpacityMask>
            </Rectangle>
        </Grid>
    </DataTemplate>

    <!--  *********************************   Brush  Resource *********************************  -->
    <DataTemplate x:Key="IsSelectingBrushTemplate">
        <Grid>
            <Border Width="13"
                    Height="8"
                    Margin="3,0,0,0"
                    BorderBrush="{Binding Path=(Foreground), RelativeSource={RelativeSource AncestorType=ContentControl}}"
                    BorderThickness="0,1,1,0"
                    Background="{StaticResource TransparentBrush}" />
            <Border Width="13"
                    Height="8"
                    Margin="0,3,0,0"
                    BorderBrush="{Binding Path=(Foreground), RelativeSource={RelativeSource AncestorType=ContentControl}}"
                    BorderThickness="1"
                    Background="{StaticResource TransparentBrush}" />
        </Grid>
    </DataTemplate>

    <!--  *********************************  RadialGradient  *********************************  -->
    <DataTemplate x:Key="IsRadialGradientBrushTemplate">
        <Grid>
            <Rectangle Width="16" Height="10" Stroke="{Binding Path=(Foreground), RelativeSource={RelativeSource AncestorType=ContentControl}}" StrokeThickness="{StaticResource DefaultStrokeThickness}" />
            <Rectangle Width="12" Height="6" Fill="{Binding Path=(Foreground), RelativeSource={RelativeSource AncestorType=ContentControl}}" StrokeThickness="0">
                <Rectangle.OpacityMask>
                    <RadialGradientBrush>
                        <GradientStop Offset="1" Color="{StaticResource Color_018}" />
                        <GradientStop Color="{StaticResource Color_046}" />
                    </RadialGradientBrush>
                </Rectangle.OpacityMask>
            </Rectangle>
        </Grid>
    </DataTemplate>

    <!--  *********************************  ReverseStops   *********************************  -->
    <DataTemplate x:Key="ReverseStopsTemplate">
        <Grid Width="14" Height="12">
            <Rectangle Width="14"
                       Height="8"
                       Fill="{StaticResource TransparentBrush}"
                       Stroke="{Binding Path=(Foreground), RelativeSource={RelativeSource AncestorType=ContentControl}}"
                       StrokeThickness="{StaticResource DefaultStrokeThickness}" />
            <Rectangle Width="14"
                       Height="8"
                       Fill="{Binding Path=(Foreground), RelativeSource={RelativeSource AncestorType=ContentControl}}"
                       Stroke="{Binding Path=(Foreground), RelativeSource={RelativeSource AncestorType=ContentControl}}"
                       StrokeThickness="{StaticResource DefaultStrokeThickness}">
                <Rectangle.OpacityMask>
                    <LinearGradientBrush StartPoint="0,0.5" EndPoint="1,0.5">
                        <GradientStop Offset="1" Color="{StaticResource Color_018}" />
                        <GradientStop Color="{StaticResource Color_046}" />
                    </LinearGradientBrush>
                </Rectangle.OpacityMask>
            </Rectangle>
            <Path Width="9"
                  Margin="0,-2,0,0"
                  HorizontalAlignment="Left"
                  VerticalAlignment="Top"
                  Data="M77.2798,42.312 L62.3771,30.448 57.4118,36.6814 65.8771,43.4214 42.6131,43.4214 42.6131,51.392 65.8745,51.392 57.4118,58.1294 62.3771,64.3654 77.2798,52.5 83.6771,47.4053 77.2798,42.312 z"
                  Fill="{Binding Path=(Foreground), RelativeSource={RelativeSource AncestorType=ContentControl}}"
                  Stretch="Uniform" />
            <Path Width="9"
                  Margin="0,0,0,-2"
                  HorizontalAlignment="Right"
                  VerticalAlignment="Bottom"
                  Data="M77.2798,42.312 L62.3771,30.448 57.4118,36.6814 65.8771,43.4214 42.6131,43.4214 42.6131,51.392 65.8745,51.392 57.4118,58.1294 62.3771,64.3654 77.2798,52.5 83.6771,47.4053 77.2798,42.312 z"
                  Fill="{Binding Path=(Foreground), RelativeSource={RelativeSource AncestorType=ContentControl}}"
                  RenderTransformOrigin="0.5, 0.5"
                  Stretch="Uniform">
                <Path.RenderTransform>
                    <RotateTransform Angle="180" />
                </Path.RenderTransform>
            </Path>
        </Grid>
    </DataTemplate>

    <!--  ********************************* VerticalLinearGradient   *********************************  -->
    <DataTemplate x:Key="IsVerticalLinearGradientTemplate">
        <Grid Height="16">
            <Rectangle Width="1"
                       Height="16"
                       HorizontalAlignment="Center"
                       VerticalAlignment="Center"
                       Fill="{Binding Path=(Foreground), RelativeSource={RelativeSource AncestorType=ContentControl}}"
                       StrokeThickness="0" />
            <Path Width="7"
                  Height="16"
                  HorizontalAlignment="Center"
                  VerticalAlignment="Center"
                  Data="M0,3 L3,0 L6,3z M0,13 L3,16 L6,13z"
                  Fill="{Binding Path=(Foreground), RelativeSource={RelativeSource AncestorType=ContentControl}}"
                  Stretch="Fill"
                  StrokeThickness="{StaticResource DefaultStrokeThickness}" />
        </Grid>
    </DataTemplate>

    <!--  ********************************* VerticalLinearGradient   *********************************  -->
    <DataTemplate x:Key="IsHorizontalLinearGradientTemplate">
        <Grid Width="16">
            <Rectangle Width="16"
                       Height="1"
                       HorizontalAlignment="Center"
                       VerticalAlignment="Center"
                       Fill="{Binding Path=(Foreground), RelativeSource={RelativeSource AncestorType=ContentControl}}"
                       StrokeThickness="0" />
            <Path Width="16"
                  Height="7"
                  HorizontalAlignment="Center"
                  VerticalAlignment="Center"
                  Data="M3,0 L0,3 L3,6z M13,0 L16,3 L13,6z"
                  Fill="{Binding Path=(Foreground), RelativeSource={RelativeSource AncestorType=ContentControl}}"
                  Stretch="Fill"
                  StrokeThickness="{StaticResource DefaultStrokeThickness}" />
        </Grid>
    </DataTemplate>


    <!--  *********************************  BrushEditor Radiobuttons Templates END  *********************************  -->


    <!--  *********************************  CONVERTERS  *********************************  -->
    <igPrim:GridLengthConverter x:Key="GridLengthConverter" />
    <igPrim:ExpandableObjectMarginConverter x:Key="ExpandableObjectMarginConverter" />
    <igPrim:PropertyItemMarginConverter x:Key="PropertyItemMarginConverter" />
    <igPrim:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter" />
    <igControls:NotBoolToVisibilityConverter x:Key="NotBoolToVisibilityConverter" />
    <igPrim:InverseBooleanConverter x:Key="InverseBooleanConverter" />
    <igControls:BoolToHiddenConverter x:Key="BoolToHiddenConverter" />

    <igPrim:ValueConverterGroup x:Key="InverseBoolToVisibilityConverter">
        <igPrim:FixedValueConverter>
            <igPrim:FixedValueConverter.SourceValue>
                <sys:Boolean>true</sys:Boolean>
            </igPrim:FixedValueConverter.SourceValue>
            <igPrim:FixedValueConverter.DestinationValue>
                <Visibility>Collapsed</Visibility>
            </igPrim:FixedValueConverter.DestinationValue>
        </igPrim:FixedValueConverter>
        <igPrim:FixedValueConverter>
            <igPrim:FixedValueConverter.DestinationValue>
                <Visibility>Visible</Visibility>
            </igPrim:FixedValueConverter.DestinationValue>
        </igPrim:FixedValueConverter>
    </igPrim:ValueConverterGroup>

    <!--  JM 10-10-16 TFS224559 - Added.  -->
    <igPrim:BoundPropertyBorderBrushConverter x:Key="BoundPropertyBorderBrushConverter" />

    <!--  *********************************  STRING RESOURCES  *********************************  -->
    <igPrim:PropertyGridResourceString x:Key="toolTipCategorizeButton" ResourceName="ToolTip_CategorizeButton" />
    <igPrim:PropertyGridResourceString x:Key="toolTipSortButton" ResourceName="ToolTip_SortButton" />
    <igPrim:PropertyGridResourceString x:Key="toolTipClearFilterButton" ResourceName="ToolTip_ClearFilterButton" />
    <igPrim:PropertyGridResourceString x:Key="toolTipFilterTextBox" ResourceName="ToolTip_FilterTextBox" />
    <igPrim:PropertyGridResourceString x:Key="toolTipAddListEntryButton" ResourceName="ToolTip_AddListEntryButton" />
    <igPrim:PropertyGridResourceString x:Key="toolTipRemoveListEntryButton" ResourceName="ToolTip_RemoveListEntryButton" />
    <igPrim:PropertyGridResourceString x:Key="toolTipCreateExpandableObjectButton" ResourceName="ToolTip_CreateExpandableObjectButton" />
    <igPrim:PropertyGridResourceString x:Key="toolTipPropertyValueResetButtonCanReset" ResourceName="ToolTip_PropertyValueResetButtonCanReset" />
    <igPrim:PropertyGridResourceString x:Key="toolTipPropertyValueResetButtonCannotReset" ResourceName="ToolTip_PropertyValueResetButtonCannotReset" />

    <!--  JM 10-10-16 TFS224559 - Added.  -->
    <igPrim:PropertyGridResourceString x:Key="toolTipPropertyValueResetButtonCanResetBinding" ResourceName="ToolTip_PropertyValueResetButtonCanResetBinding" />

    <!--  *********************************  TextBox Style  *********************************  -->
    <Style x:Key="PropertyGridTextBoxStyle" TargetType="TextBox">
        <Setter Property="Background" Value="{StaticResource TransparentBrush}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="CaretBrush" Value="{StaticResource CaretForegroundBrush}" />
        <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
        <Setter Property="FontFamily" Value="{StaticResource FontFamily}" />
        <Setter Property="FontSize" Value="{StaticResource FontSize}" />
        <Setter Property="FontWeight" Value="{StaticResource FontNormal}" />
        <Setter Property="MinHeight" Value="{StaticResource DefaultMinHeight}" />
        <Setter Property="Padding" Value="{StaticResource TextBoxPadding}" />
        <Setter Property="SelectionBrush" Value="{StaticResource TextBoxFocusedBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TextBox">
                    <Grid x:Name="RootElement" SnapsToDevicePixels="True">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver" />
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" Storyboard.TargetName="PART_ContentHost" Storyboard.TargetProperty="Opacity" To="0.6" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="ReadOnly">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" Storyboard.TargetName="PART_ContentHost" Storyboard.TargetProperty="Opacity" To="0.6" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid>
                            <Border x:Name="Border"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    CornerRadius="{StaticResource CornerRadius}"
                                    Opacity="1" />
                            <ScrollViewer x:Name="PART_ContentHost" BorderThickness="0" IsTabStop="False" Padding="{TemplateBinding Padding}" />
                        </Grid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  *********************************  ComboBoxToggleButton Style   *********************************  -->
    <Style x:Key="PropertyGridComboBoxToggleButtonStyle" TargetType="ToggleButton">
        <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
        <Setter Property="MinHeight" Value="{StaticResource DefaultMinHeight}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Padding" Value="2" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Grid x:Name="Main" igPrim:XamlHelper.SnapsToDevicePixels="True">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition Width="24" />
                        </Grid.ColumnDefinitions>
                        <Rectangle x:Name="Bd" Grid.ColumnSpan="2" Fill="{StaticResource TransparentBrush}" />
                        <Rectangle x:Name="normal"
                                   Grid.ColumnSpan="2"
                                   Fill="{StaticResource PropertyItemBackgroundBrush}"
                                   IsHitTestVisible="False"
                                   Opacity="0" />
                        <Rectangle x:Name="hover" Grid.ColumnSpan="2" IsHitTestVisible="False" Opacity="0" />
                        <Rectangle x:Name="focused" Grid.ColumnSpan="2" IsHitTestVisible="False" Opacity="0" />
                        <Rectangle x:Name="pressed"
                                   Grid.ColumnSpan="2"
                                   Fill="{StaticResource ComboBoxToggleButtonPressedBackgroundBrush}"
                                   IsHitTestVisible="False"
                                   Opacity="0"
                                   Stroke="{StaticResource ComboBoxToggleButtonPressedBorderBrush}"
                                   StrokeThickness="{StaticResource DefaultStrokeThickness}" />
                        <Grid Grid.Column="1" HorizontalAlignment="Center">
                            <Path x:Name="Arrow"
                                  Width="7"
                                  Height="4"
                                  Data="{StaticResource DownArrow}"
                                  Fill="{StaticResource GlyphBackgroundBrush}"
                                  Stretch="Fill" />
                            <Path x:Name="ArrowSelected"
                                  Width="7"
                                  Height="4"
                                  Data="{StaticResource DownArrow}"
                                  Fill="{StaticResource GlyphActiveBackgroundBrush}"
                                  Stretch="Fill"
                                  Visibility="Collapsed" />
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Arrow" Property="Fill" Value="{StaticResource GlyphHoverBackgroundBrush}" />
                            <Setter TargetName="hover" Property="Opacity" Value="1" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="pressed" Property="Opacity" Value="1" />
                            <Setter TargetName="ArrowSelected" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="Arrow" Property="Opacity" Value="0" />
                            <Setter TargetName="ArrowSelected" Property="Visibility" Value="Visible" />
                            <Setter TargetName="pressed" Property="Opacity" Value="1" />
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter TargetName="focused" Property="Opacity" Value="1" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Main" Property="Opacity" Value="0.3" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  *********************************  ComboBox Style  *********************************  -->
    <Style x:Key="PropertyGridComboBoxStyle" TargetType="{x:Type ComboBox}">
        <Setter Property="Padding" Value="6,2,20,2" />
        <Setter Property="Margin" Value="0 0 5 0" />
        <Setter Property="FontSize" Value="{StaticResource FontSize}" />
        <Setter Property="FontFamily" Value="{StaticResource FontFamily}" />
        <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
        <Setter Property="Background" Value="{StaticResource TransparentBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource TransparentBrush}" />
        <Setter Property="ItemContainerStyle" Value="{StaticResource ComboBoxItemStyle}" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="true" />
        <Setter Property="ScrollViewer.PanningMode" Value="Both" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Grid x:Name="MainGrid" SnapsToDevicePixels="true">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition MinWidth="22" />
                        </Grid.ColumnDefinitions>
                        <Rectangle x:Name="normal" Fill="{StaticResource PropertyItemBackgroundBrush}" StrokeThickness="0" Grid.ColumnSpan="2" />
                        <Rectangle x:Name="hover"
                                   Fill="{StaticResource ComboBoxHoverBackgroundBrush}"
                                   StrokeThickness="0"
                                   Visibility="Collapsed"
                                   Grid.ColumnSpan="2" />
                        <Popup x:Name="PART_Popup"
                               AllowsTransparency="true"
                               Grid.ColumnSpan="2"
                               IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}"
                               Margin="1"
                               PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}"
                               Placement="Bottom">
                            <Border x:Name="DropDownBorder"
                                    HorizontalAlignment="Stretch"
                                    Background="{StaticResource PopupBackgroundBrush}"
                                    BorderBrush="{StaticResource PopupBorderBrush}"
                                    BorderThickness="{StaticResource DefaultBorderThickness}"
                                    MaxHeight="{TemplateBinding MaxDropDownHeight}"
                                    MinWidth="{Binding ActualWidth, ElementName=MainGrid}">
                                <ScrollViewer x:Name="DropDownScrollViewer" Style="{StaticResource ScrollViewerStyle}">
                                    <Grid RenderOptions.ClearTypeHint="Enabled">
                                        <Canvas HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                            <Rectangle x:Name="OpaqueRect" Fill="{Binding Background, ElementName=DropDownBorder}" Height="{Binding ActualHeight, ElementName=DropDownBorder}" Width="{Binding ActualWidth, ElementName=DropDownBorder}" />
                                        </Canvas>
                                        <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                    </Grid>
                                </ScrollViewer>
                            </Border>
                        </Popup>
                        <ToggleButton Grid.ColumnSpan="2"
                                      BorderBrush="{TemplateBinding BorderBrush}"
                                      BorderThickness="0"
                                      Background="{TemplateBinding Background}"
                                      IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                      Style="{StaticResource PropertyGridComboBoxToggleButtonStyle}" />
                        <ContentPresenter Grid.ColumnSpan="2"
                                          ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                          ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                          Content="{TemplateBinding SelectionBoxItem}"
                                          ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          IsHitTestVisible="false"
                                          Margin="{TemplateBinding Padding}"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Visibility" TargetName="hover" Value="Visible" />
                        </Trigger>
                        <Trigger Property="HasItems" Value="false">
                            <Setter Property="Height" TargetName="DropDownBorder" Value="95" />
                        </Trigger>
                        <Trigger Property="IsDropDownOpen" Value="True">
                            <Setter Property="Foreground" Value="{StaticResource ActiveForegroundBrush}" />
                        </Trigger>
                        <Trigger Property="IsMouseCaptureWithin" Value="True">
                            <Setter Property="Foreground" Value="{StaticResource ActiveForegroundBrush}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="MainGrid" Property="Opacity" Value="0.3" />
                        </Trigger>
                        <Trigger Property="IsGrouping" Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
                        </Trigger>
                        <Trigger Property="ScrollViewer.CanContentScroll" SourceName="DropDownScrollViewer" Value="false">
                            <Setter Property="Canvas.Top" TargetName="OpaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}" />
                            <Setter Property="Canvas.Left" TargetName="OpaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsEditable" Value="true">
                <Setter Property="IsTabStop" Value="false" />
                <Setter Property="Padding" Value="0" />
                <Setter Property="Template" Value="{StaticResource ComboBoxEditableTemplate}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--  *********************************  ContextMenu Style  *********************************  -->
    <Style TargetType="ContextMenu">
        <Setter Property="Background" Value="{StaticResource ContextMenuBackgroundBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource ContextMenuBorderBrush}" />
        <Setter Property="BorderThickness" Value="{StaticResource DefaultBorderThickness}" />
        <Setter Property="FontFamily" Value="{StaticResource FontFamily}" />
        <Setter Property="FontSize" Value="{StaticResource FontSize}" />
        <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
        <Setter Property="Padding" Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ContextMenu}">
                    <Border x:Name="Border"
                            igPrim:XamlHelper.SnapsToDevicePixels="True"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <ScrollViewer Style="{StaticResource ScrollViewerStyle}" VerticalScrollBarVisibility="Auto">
                            <Grid Margin="{TemplateBinding Padding}">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition MaxWidth="26" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <Border Background="{StaticResource MenuIconColumnBorderBrush}" />
                                <ItemsPresenter Grid.ColumnSpan="2" />
                            </Grid>
                        </ScrollViewer>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  *********************************  Separator Style  *********************************  -->
    <Style TargetType="Separator">
        <Setter Property="BorderBrush" Value="{StaticResource MenuSeparatorBackgroundBrush}" />
        <Setter Property="Height" Value="1" />
        <Setter Property="Margin" Value="0,4,0,4" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Separator">
                    <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{StaticResource DefaultBorderThickness}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  *********************************  MenuItemSubmenuItem Template  *********************************  -->
    <ControlTemplate x:Key="MenuItemSubmenuItemTemplate" TargetType="MenuItem">
        <Border Name="Border" Background="{StaticResource ContextMenuBackgroundBrush}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" SharedSizeGroup="Icon" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" SharedSizeGroup="Shortcut" />
                    <ColumnDefinition Width="13" />
                </Grid.ColumnDefinitions>
                <ContentPresenter Name="Icon" Margin="6,0,6,0" VerticalAlignment="Center" ContentSource="Icon" />
                <Border Name="Check"
                        Width="13"
                        Height="13"
                        Margin="6,0,6,0"
                        Background="{StaticResource CheckBoxBackgroundBrush}"
                        BorderBrush="{StaticResource CheckBoxBorderBrush}"
                        BorderThickness="{StaticResource DefaultBorderThickness}"
                        Visibility="Collapsed">
                    <Path x:Name="CheckMark"
                          Width="9"
                          Height="8"
                          Data="{StaticResource CheckBoxCheck}"
                          Fill="{StaticResource CheckBoxCheckBackgroundBrush}"
                          Stretch="Fill"
                          UseLayoutRounding="False"
                          Visibility="Hidden" />
                </Border>
                <ContentPresenter Name="HeaderHost"
                                  Grid.Column="1"
                                  Margin="0,2,0,0"
                                  ContentSource="Header"
                                  RecognizesAccessKey="True"
                                  TextBlock.FontSize="{StaticResource FontSize}"
                                  TextBlock.Foreground="{StaticResource ForegroundBrush}" />
                <TextBlock x:Name="InputGestureText"
                           Grid.Column="2"
                           Margin="8,3,2,3"
                           DockPanel.Dock="Right"
                           FontSize="{StaticResource FontSize}"
                           Foreground="{StaticResource ForegroundBrush}"
                           Text="{TemplateBinding InputGestureText}" />
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="Icon" Value="{x:Null}">
                <Setter TargetName="Icon" Property="Visibility" Value="Hidden" />
            </Trigger>
            <Trigger Property="IsChecked" Value="true">
                <Setter TargetName="CheckMark" Property="Visibility" Value="Visible" />
            </Trigger>
            <Trigger Property="IsCheckable" Value="true">
                <Setter TargetName="Check" Property="Visibility" Value="Visible" />
                <Setter TargetName="Icon" Property="Visibility" Value="Hidden" />
            </Trigger>
            <Trigger Property="IsHighlighted" Value="true">
                <Setter TargetName="Border" Property="Background" Value="{StaticResource MenuItemHoverBackgroundBrush}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter TargetName="Border" Property="Opacity" Value="0.3" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!--  *********************************  MenuItemSubmenuHeader Template  *********************************  -->
    <ControlTemplate x:Key="MenuItemSubmenuHeaderTemplate" TargetType="MenuItem">
        <Border Name="Border" Background="{StaticResource ContextMenuBackgroundBrush}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" SharedSizeGroup="Icon" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" SharedSizeGroup="Shortcut" />
                    <ColumnDefinition Width="13" />
                </Grid.ColumnDefinitions>
                <ContentPresenter Name="Icon" Margin="6,0,6,0" VerticalAlignment="Center" ContentSource="Icon" />
                <Popup Name="Popup"
                       AllowsTransparency="True"
                       Focusable="False"
                       HorizontalOffset="-4"
                       IsOpen="{TemplateBinding IsSubmenuOpen}"
                       Placement="Right"
                       PopupAnimation="Fade">
                    <Border Name="SubmenuBorder"
                            Background="{StaticResource MenuPopupBackgroundBrush}"
                            BorderBrush="{StaticResource MenuPopupBorderBrush}"
                            BorderThickness="{StaticResource DefaultBorderThickness}"
                            Padding="1">
                        <ScrollViewer Style="{StaticResource ScrollViewerStyle}" VerticalScrollBarVisibility="Auto">

                            <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle" />
                        </ScrollViewer>
                    </Border>
                </Popup>
                <ContentPresenter Name="HeaderHost"
                                  Grid.Column="1"
                                  Margin="0,2,0,0"
                                  ContentSource="Header"
                                  RecognizesAccessKey="True"
                                  TextBlock.FontSize="{StaticResource FontSize}"
                                  TextBlock.Foreground="{StaticResource ForegroundBrush}" />
                <TextBlock x:Name="InputGestureText"
                           Grid.Column="2"
                           Margin="5,2,2,2"
                           DockPanel.Dock="Right"
                           FontSize="{StaticResource FontSize}"
                           Foreground="{StaticResource ForegroundBrush}"
                           Text="{TemplateBinding InputGestureText}" />
                <Path Grid.Column="3"
                      HorizontalAlignment="Center"
                      VerticalAlignment="Center"
                      Data="{StaticResource VArrowRight}"
                      Fill="{StaticResource GlyphBackgroundBrush}"
                      Stretch="Fill"
                      Height="10"
                      Width="6" />
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="Icon" Value="{x:Null}">
                <Setter TargetName="Icon" Property="Visibility" Value="Collapsed" />
            </Trigger>
            <Trigger Property="IsHighlighted" Value="true">
                <Setter TargetName="Border" Property="Background" Value="{StaticResource MenuItemHoverBackgroundBrush}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter TargetName="Border" Property="Opacity" Value="0.3" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!--  *********************************  MenuItemSubmenuHeader Template  *********************************  -->
    <ControlTemplate x:Key="MenuItemHeaderTemplate" TargetType="MenuItem">
        <Border Name="Border" Background="{StaticResource ContextMenuBackgroundBrush}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" SharedSizeGroup="Icon" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" SharedSizeGroup="Shortcut" />
                </Grid.ColumnDefinitions>
                <ContentPresenter Name="Icon" Margin="6,0,6,0" VerticalAlignment="Center" ContentSource="Icon" />
                <ContentPresenter x:Name="HeaderHost"
                                  Grid.Column="1"
                                  Margin="7,3,0,3"
                                  ContentSource="Header"
                                  RecognizesAccessKey="True"
                                  TextBlock.FontSize="{StaticResource FontSize}"
                                  TextBlock.Foreground="{StaticResource ForegroundBrush}" />
                <TextBlock x:Name="InputGestureText"
                           Grid.Column="2"
                           Margin="7,3,0,3"
                           DockPanel.Dock="Right"
                           FontSize="{StaticResource FontSize}"
                           Foreground="{StaticResource ForegroundBrush}"
                           Text="{TemplateBinding InputGestureText}" />
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="Icon" Value="{x:Null}">
                <Setter TargetName="Icon" Property="Visibility" Value="Collapsed" />
            </Trigger>
            <Trigger Property="IsHighlighted" Value="true">
                <Setter TargetName="HeaderHost" Property="TextBlock.Foreground" Value="{StaticResource MenuItemHeaderHoverForegroundBrush}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter TargetName="Border" Property="Opacity" Value="0.3" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!--  *********************************  MenuItem Style  *********************************  -->
    <Style TargetType="MenuItem">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Style.Triggers>
            <Trigger Property="Role" Value="SubmenuHeader">
                <Setter Property="Template" Value="{StaticResource MenuItemSubmenuHeaderTemplate}" />
            </Trigger>
            <Trigger Property="Role" Value="SubmenuItem">
                <Setter Property="Template" Value="{StaticResource MenuItemSubmenuItemTemplate}" />
            </Trigger>
            <Trigger Property="Role" Value="TopLevelItem">
                <Setter Property="Template" Value="{StaticResource MenuItemHeaderTemplate}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--  *********************************  RadioButton Style  *********************************  -->
    <Style x:Key="PropertyGridRadioButtonStyle" TargetType="{x:Type RadioButton}">
        <Setter Property="BorderThickness" Value="{StaticResource DefaultBorderThickness}" />
        <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="MinHeight" Value="24" />
        <Setter Property="MinWidth" Value="24" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RadioButton">
                    <Grid igPrim:XamlHelper.SnapsToDevicePixels="True" x:Name="MainGrid">
                        <Rectangle x:Name="normal"
                                   Fill="{StaticResource ButtonBackgroundBrush}"
                                   Stroke="{StaticResource ButtonBorderBrush}"
                                   StrokeThickness="{StaticResource DefaultStrokeThickness}"
                                   RadiusX="{StaticResource RadiusXY}"
                                   RadiusY="{StaticResource RadiusXY}" />
                        <Rectangle x:Name="FocusedVisualElement"
                                   Stroke="{StaticResource ButtonFocusedBorderBrush}"
                                   StrokeThickness="{StaticResource DefaultStrokeThickness}"
                                   Fill="{StaticResource ButtonFocusedBackgroundBrush}"
                                   Visibility="Collapsed"
                                   RadiusX="{StaticResource RadiusXY}"
                                   RadiusY="{StaticResource RadiusXY}" />
                        <Rectangle x:Name="hover"
                                   Fill="{StaticResource ButtonHoverBackgroundBrush}"
                                   Opacity="0"
                                   Stroke="{StaticResource ButtonHoverBorderBrush}"
                                   StrokeThickness="{StaticResource DefaultStrokeThickness}"
                                   RadiusX="{StaticResource RadiusXY}"
                                   RadiusY="{StaticResource RadiusXY}" />
                        <Rectangle x:Name="pressed"
                                   Fill="{StaticResource ButtonPressedBackgroundBrush}"
                                   Opacity="0"
                                   Stroke="{StaticResource ButtonPressedBorderBrush}"
                                   StrokeThickness="{StaticResource DefaultStrokeThickness}"
                                   RadiusX="{StaticResource RadiusXY}"
                                   RadiusY="{StaticResource RadiusXY}" />
                        <Rectangle x:Name="checked"
                                   Fill="{StaticResource ButtonPressedBackgroundBrush}"
                                   Opacity="0"
                                   Stroke="{StaticResource ButtonPressedBackgroundBrush}"
                                   StrokeThickness="{StaticResource DefaultStrokeThickness}"
                                   RadiusX="{StaticResource RadiusXY}"
                                   RadiusY="{StaticResource RadiusXY}" />
                        <!--  JM 10-14-14 TFS183020 Set IsTabStop to false.  -->
                        <ContentControl x:Name="ContentControl"
                                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                        Foreground="{StaticResource GlyphBackgroundBrush}"
                                        IsTabStop="False">
                            <ContentPresenter />
                        </ContentControl>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="hover" Property="Opacity" Value="1" />
                            <Setter TargetName="ContentControl" Property="Foreground" Value="{StaticResource GlyphHoverBackgroundBrush}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="checked" Property="Opacity" Value="1" />
                            <Setter TargetName="ContentControl" Property="Foreground" Value="{StaticResource GlyphActiveBackgroundBrush}" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="checked" Property="Opacity" Value="1" />
                            <Setter TargetName="ContentControl" Property="Foreground" Value="{StaticResource GlyphActiveBackgroundBrush}" />
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter TargetName="FocusedVisualElement" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="MainGrid" Property="Opacity" Value="0.3" />
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  *********************************  ExpanderToggleButton Template  *********************************  -->
    <ControlTemplate x:Key="ExpanderToggleButton" TargetType="{x:Type ToggleButton}">
        <Grid>
            <Rectangle x:Name="Rectangle" Margin="0,0,0,0" Fill="{StaticResource TransparentBrush}" />
            <Path x:Name="Up_Arrow"
                  Width="6"
                  Height="10"
                  Margin="2,0,0,0"
                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                  VerticalAlignment="Center"
                  Data="{StaticResource VArrowRight}"
                  Fill="{TemplateBinding Foreground}"
                  IsHitTestVisible="False"
                  RenderTransformOrigin="0.5,0.5" />
            <Path x:Name="Down_Arrow"
                  Width="10"
                  Height="6"
                  Margin="2,0,0,0"
                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                  VerticalAlignment="Center"
                  Data="{StaticResource VArrowDown}"
                  Fill="{TemplateBinding Foreground}"
                  IsHitTestVisible="False"
                  RenderTransformOrigin="0.5,0.5"
                  Visibility="Collapsed" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsChecked" Value="True">
                <Setter TargetName="Up_Arrow" Property="Visibility" Value="Collapsed" />
                <Setter TargetName="Down_Arrow" Property="Visibility" Value="Visible" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!--  *********************************  ClearFilterButton Style  *********************************  -->
    <Style x:Key="{x:Static igPrim:PropertyGridFilterAreaControl.ClearFilterButtonStyleKey}" BasedOn="{StaticResource ButtonStyle}" TargetType="{x:Type Button}">
        <Setter Property="MinHeight" Value="22" />
        <Setter Property="MinWidth" Value="22" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid x:Name="mainGrid">
                        <Border x:Name="Bd" Background="{StaticResource TransparentBrush}" CornerRadius="{StaticResource DropDownCornerRadius}" />
                        <Grid Background="{StaticResource TransparentBrush}" ToolTip="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ToolTip}">
                            <Path x:Name="icon"
                                  Width="8"
                                  Height="8"
                                  Data="{StaticResource ClearFilterIcon}"
                                  Fill="{StaticResource GlyphBackgroundBrush}"
                                  Stretch="Fill" />
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Bd" Property="Background" Value="{StaticResource ButtonHoverBackgroundBrush}" />
                            <Setter TargetName="icon" Property="Fill" Value="{StaticResource GlyphHoverBackgroundBrush}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="Bd" Property="Background" Value="{StaticResource ButtonPressedBackgroundBrush}" />
                            <Setter TargetName="icon" Property="Fill" Value="{StaticResource GlyphActiveBackgroundBrush}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="mainGrid" Property="Opacity" Value="0.3" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  *********************************  PropertyGridButton Style  *********************************  -->
    <Style x:Key="PropertyGridButtonStyle" BasedOn="{StaticResource IconButtonStyle}" TargetType="{x:Type Button}">
        <Setter Property="MinHeight" Value="16" />
        <Setter Property="MinWidth" Value="16" />
        <Setter Property="Padding" Value="0" />
    </Style>

    <Style x:Key="TransparentPropertyGridButtonStyle" BasedOn="{StaticResource IconButtonStyle}" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="{StaticResource TransparentBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource TransparentBrush}" />
        <Setter Property="MinHeight" Value="16" />
        <Setter Property="MinWidth" Value="16" />
        <Setter Property="Padding" Value="0" />
    </Style>

    <!--  *********************************  CategorizeButton Style  *********************************  -->
    <Style x:Key="{x:Static igPrim:PropertyGridFilterAreaControl.CategorizeButtonStyleKey}" BasedOn="{StaticResource PropertyGridRadioButtonStyle}" TargetType="{x:Type RadioButton}">
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Grid Background="{StaticResource TransparentBrush}" ToolTip="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ToolTip}" igPrim:XamlHelper.SnapsToDevicePixels="True">
                        <Path Width="14"
                              Height="14"
                              Stretch="Fill"
                              Data="{StaticResource CategorizeIcon}"
                              Fill="{Binding Path=(Foreground), RelativeSource={RelativeSource AncestorType=ContentControl}}" />
                    </Grid>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  *********************************  SortButton Style  *********************************  -->
    <Style x:Key="{x:Static igPrim:PropertyGridFilterAreaControl.SortButtonStyleKey}" BasedOn="{StaticResource PropertyGridRadioButtonStyle}" TargetType="{x:Type RadioButton}">
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Grid Background="{StaticResource TransparentBrush}" ToolTip="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ToolTip}" igPrim:XamlHelper.SnapsToDevicePixels="True">
                        <Path Width="14"
                              Height="14"
                              Stretch="Fill"
                              Data="{StaticResource SortIcon}"
                              Fill="{Binding Path=(Foreground), RelativeSource={RelativeSource AncestorType=ContentControl}}" />
                    </Grid>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  *********************************  PropertyGridFilterAreaControl Style  *********************************  -->
    <Style TargetType="igPrim:PropertyGridFilterAreaControl">
        <Setter Property="Background" Value="{StaticResource TransparentBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="igPrim:PropertyGridFilterAreaControl">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>

                        <RadioButton x:Name="PART_CategorizeButton"
                                     Grid.Column="0"
                                     Margin="2"
                                     GroupName="Sorting"
                                     IsChecked="{Binding Path=PropertyGrid.IsCategorized, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                                     IsThreeState="False"
                                     Style="{DynamicResource {x:Static igPrim:PropertyGridFilterAreaControl.CategorizeButtonStyleKey}}"
                                     ToolTip="{Binding Source={StaticResource toolTipCategorizeButton}, Path=Value}">
                            <ig:Commanding.Commands>
                                <ig:CommandSourceCollection>
                                    <igPrim:PropertyGridCommandSource CommandType="SortByCategory" EventName="Checked" />
                                </ig:CommandSourceCollection>
                            </ig:Commanding.Commands>
                        </RadioButton>
                        <RadioButton x:Name="PART_SortButton"
                                     Grid.Column="1"
                                     Margin="2"
                                     GroupName="Sorting"
                                     IsChecked="{Binding Path=PropertyGrid.IsCategorized, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource InverseBooleanConverter}, Mode=OneWay}"
                                     IsThreeState="False"
                                     Style="{DynamicResource {x:Static igPrim:PropertyGridFilterAreaControl.SortButtonStyleKey}}"
                                     ToolTip="{Binding Source={StaticResource toolTipSortButton}, Path=Value}">
                            <ig:Commanding.Commands>
                                <ig:CommandSourceCollection>
                                    <igPrim:PropertyGridCommandSource CommandType="SortAlphabetically" EventName="Checked" />
                                </ig:CommandSourceCollection>
                            </ig:Commanding.Commands>
                        </RadioButton>
                        <TextBox x:Name="PART_FilterTextBox"
                                 Grid.Column="2"
                                 Margin="2"
                                 HorizontalAlignment="Stretch"
                                 Padding="4,2,26,2"
                                 Style="{StaticResource TextBoxStyle}"
                                 Text="{Binding Path=PropertyGrid.FilterText, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                 ToolTip="{Binding Source={StaticResource toolTipFilterTextBox}, Path=Value}" />
                        <Button x:Name="PART_ClearFilterButton"
                                Grid.Column="2"
                                Width="20"
                                Height="20"
                                Margin="0,0,3,0"
                                HorizontalAlignment="Right"
                                Style="{DynamicResource {x:Static igPrim:PropertyGridFilterAreaControl.ClearFilterButtonStyleKey}}"
                                ToolTip="{Binding Source={StaticResource toolTipClearFilterButton}, Path=Value}">
                            <ig:Commanding.Commands>
                                <ig:CommandSourceCollection>
                                    <igPrim:PropertyGridCommandSource CommandType="ClearFilterText" EventName="Click" />
                                </ig:CommandSourceCollection>
                            </ig:Commanding.Commands>
                        </Button>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  *********************************  PropertyGridDescriptionAreaControl Style  *********************************  -->
    <Style TargetType="igPrim:PropertyGridDescriptionAreaControl">
        <Setter Property="Background" Value="{StaticResource PropertyGridDescriptionAreaBackgroundBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="igPrim:PropertyGridDescriptionAreaControl">
                    <Grid Background="{TemplateBinding Background}">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>

                        <StackPanel Grid.Row="0" Orientation="Horizontal">
                            <TextBlock Margin="4,2,2,2" FontWeight="{StaticResource FontBold}" Foreground="{StaticResource ForegroundBrush}" Text="{Binding Path=SelectedPropertyName, RelativeSource={RelativeSource TemplatedParent}}" />
                            <TextBlock Margin="4,2,2,2" Foreground="{StaticResource ForegroundBrush}" Text="{Binding Path=SelectedPropertyTypeName, RelativeSource={RelativeSource TemplatedParent}}" />
                        </StackPanel>
                        <TextBlock Grid.Row="1" Margin="17,0,2,4" Foreground="{StaticResource PropertyDescriptionForegroundBrush}" Text="{Binding Path=SelectedPropertyDescription, RelativeSource={RelativeSource TemplatedParent}}" TextWrapping="Wrap"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  *********************************  PropertyGridCategoryItemView Style  *********************************  -->
    <Style TargetType="igPrim:PropertyGridCategoryItemView">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type igPrim:PropertyGridCategoryItemView}">
                    <Border HorizontalAlignment="Stretch" Background="{StaticResource PropertyGridCategoryBackgroundBrush}">

                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="SelectedStates">
                                <VisualState x:Name="Selected">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="focusRect" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="displayName" Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ActiveForegroundBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="UnSelected" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>


                        <Grid VerticalAlignment="Center" HorizontalAlignment="Stretch">
                            <Grid Margin="0 4">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="22" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>

                                <!--  JM 09-21-16 TFS224438 - Initialize the focus rect's Opacity to zero, and update it in a ControlTemplate DataTrigger below when the control gets focus.  -->
                                <Rectangle x:Name="focusRect"
                                           Grid.ColumnSpan="2"
                                           Fill="{StaticResource ButtonPressedBackgroundBrush}"
                                           HorizontalAlignment="Stretch"
                                           VerticalAlignment="Stretch"
                                           MinWidth="{Binding ElementName=displayName, Path=ActualWidth}"
                                           Visibility="Collapsed"
                                           Opacity="0" />

                                <TextBlock x:Name="displayName"
                                           Grid.Column="1"
                                           Text="{Binding DisplayName}"
                                           Foreground="{StaticResource ForegroundBrush}"
                                           HorizontalAlignment="Left"
                                           FontWeight="{StaticResource FontBold}"
                                           TextTrimming="CharacterEllipsis"
                                           VerticalAlignment="Center"
                                           Margin="0 3 0 4" />

                                <ToggleButton x:Name="Toggle"
                                              Grid.Column="0"
                                              Grid.ColumnSpan="2"
                                              Background="{StaticResource TransparentBrush}"
                                              HorizontalContentAlignment="Left"
                                              IsChecked="{Binding CategoryItem.IsExpanded, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                                              Template="{StaticResource ExpanderToggleButton}"
                                              Foreground="{StaticResource GlyphBackgroundBrush}"/>
                            </Grid>
                        </Grid>

                    </Border>

                    <!--  JM 09-21-16 TFS224438 - Show the focus rect when the control gets keyboard focus.  -->
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding Path=IsKeyboardFocusWithin, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ig:XamPropertyGrid}}}" Value="True">
                            <Setter TargetName="focusRect" Property="Opacity" Value="1" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Visibility, ElementName=focusRect}" Value="Visible">
                            <Setter TargetName="Toggle" Property="Foreground" Value="{StaticResource GlyphActiveBackgroundBrush}" />
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  *********************************  PropertyGridPropertyItemView Style  *********************************  -->
    <Style TargetType="igPrim:PropertyGridPropertyItemView">
        <Setter Property="BorderThickness" Value="{StaticResource DefaultBorderThickness}" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type igPrim:PropertyGridPropertyItemView}">
                    <Border Margin="{Binding IsCategorizedItem, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource PropertyItemMarginConverter}}" HorizontalAlignment="Stretch" Background="{StaticResource PropertyItemBackgroundBrush}">
                        <Grid HorizontalAlignment="Stretch" VerticalAlignment="Center">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="{Binding PropertyGrid.NameColumnWidth, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource GridLengthConverter}}" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>

                            <!--  Item name column  -->
                            <Border x:Name="PART_DisplayNameBorder" BorderBrush="{StaticResource PropertyItemNameBorderBrush}" BorderThickness="1,0,1,1">
                                <Grid>
                                    <Grid Margin="{Binding PropertyItem.NestingLevel, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource ExpandableObjectMarginConverter}}">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="15" />
                                            <ColumnDefinition Width="*" />
                                        </Grid.ColumnDefinitions>
                                        <Rectangle x:Name="hoverArea" Grid.ColumnSpan="2" Height="{Binding ElementName=displayName, Path=ActualHeight}" VerticalAlignment="Top" />
                                        <Rectangle x:Name="highlightArea"
                                                   Grid.ColumnSpan="2"
                                                   Height="{Binding ElementName=displayName, Path=ActualHeight}"
                                                   VerticalAlignment="Top"
                                                   Visibility="Collapsed" />
                                        <TextBlock x:Name="displayName"
                                                   Grid.Column="1"
                                                   HorizontalAlignment="Stretch"
                                                   VerticalAlignment="Top"
                                                   Foreground="{StaticResource ForegroundBrush}"
                                                   Padding="2,4"
                                                   Text="{Binding DisplayName}"
                                                   TextTrimming="CharacterEllipsis"
                                                   MinHeight="27" />
                                        <ToggleButton x:Name="ItemViewToggle" Grid.Column="0"
                                                      Grid.ColumnSpan="2"
                                                      HorizontalContentAlignment="Left"
                                                      Background="{StaticResource TransparentBrush}"
                                                      IsChecked="{Binding PropertyItem.IsExpanded, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                                                      Template="{StaticResource ExpanderToggleButton}"
                                                      Visibility="{Binding PropertyItem.IsExpandableResolved, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BoolToVisibilityConverter}}"
                                                      Foreground="{StaticResource GlyphBackgroundBrush}"/>
                                    </Grid>
                                </Grid>
                            </Border>

                            <!--  Item value/editor column  -->
                            <Border Grid.Column="1" Background="{StaticResource TransparentBrush}" BorderBrush="{StaticResource PropertyItemEditorBorderBrush}" BorderThickness="0,0,1,1">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="Auto" />
                                    </Grid.ColumnDefinitions>


                                    <!--  JM 10-10-16 TFS224559. Add a border around the editor that sets its BorderBrush if the property is a bound DependencyProperty.  -->
                                    <Border BorderThickness="1" BorderBrush="{Binding IsBoundDependencyProperty, Converter={StaticResource BoundPropertyBorderBrushConverter}, ConverterParameter={StaticResource XamPropertyGrid_ItemEditorBoundPropertyBorderBrush}}">
                                        <ContentControl x:Name="PART_EditorSiteContentControl"
                                                        VerticalAlignment="Center"
                                                        HorizontalContentAlignment="Stretch"
                                                        Content="{TemplateBinding EditorElement}"
                                                        Foreground="{StaticResource ForegroundBrush}"
                                                        IsTabStop="False">
                                            <ContentControl.Resources>
                                                <Style BasedOn="{StaticResource PropertyGridTextBoxStyle}" TargetType="TextBox" />
                                            </ContentControl.Resources>
                                        </ContentControl>
                                    </Border>
                                    <Button x:Name="PART_RemoveListEntryButton"
                                            Grid.Column="1"
                                            Width="16"
                                            Height="16"
                                            Margin="2"
                                            HorizontalAlignment="Right"
                                            VerticalAlignment="Center"
                                            Focusable="False"
                                            IsTabStop="False"
                                            Style="{DynamicResource {x:Static igPrim:PropertyGridPropertyItemView.RemoveListEntryButtonStyleKey}}"
                                            ToolTip="{Binding Source={StaticResource toolTipRemoveListEntryButton}, Path=Value}"
                                            Visibility="{Binding Path=IsRemoveableFromList, Converter={StaticResource BoolToVisibilityConverter}}">
                                        <ig:Commanding.Commands>
                                            <ig:CommandSourceCollection>
                                                <igPrim:PropertyGridPropertyItemCommandSource CommandType="RemoveListEntry" EventName="Click" ParameterBinding="{Binding}" />
                                            </ig:CommandSourceCollection>
                                        </ig:Commanding.Commands>
                                    </Button>
                                    <Button x:Name="PART_OptionsMenuButton"
                                            Grid.Column="2"
                                            Width="8"
                                            Height="8"
                                            MinWidth="8"
                                            MinHeight="8"
                                            Margin="4,7,2,2"
                                            HorizontalAlignment="Right"
                                            VerticalAlignment="Top"
                                            Focusable="False"
                                            IsTabStop="False">
                                        <Button.Template>
                                            <ControlTemplate TargetType="Button">
                                                <Grid>
                                                    <Rectangle Cursor="Hand"
                                                               Fill="{StaticResource PropertyGridValueResetButtonCanResetBackgroundBrush}"
                                                               Stroke="{StaticResource PropertyGridValueResetButtonBorderBrush}"
                                                               StrokeThickness="{StaticResource DefaultStrokeThickness}"
                                                               ToolTip="{Binding Source={StaticResource toolTipPropertyValueResetButtonCanReset}, Path=Value}"
                                                               Visibility="{Binding Path=CanResetValue, Converter={StaticResource BoolToVisibilityConverter}}" />
                                                    <Rectangle Fill="{StaticResource PropertyGridValueResetButtonCannotResetBackgroundBrush}"
                                                               Stroke="{StaticResource PropertyGridValueResetButtonBorderBrush}"
                                                               StrokeThickness="{StaticResource DefaultStrokeThickness}"
                                                               ToolTip="{Binding Source={StaticResource toolTipPropertyValueResetButtonCannotReset}, Path=Value}"
                                                               Visibility="{Binding Path=CanResetValue, Converter={StaticResource InverseBoolToVisibilityConverter}}" />

                                                    <!--
                                                        JM 10-10-16 TFS224559. Add a Rectangle that is shown if the property is a bound DependencyProperty.
                                                        Use the same brush we use above for the border around the edit area when the property is a bound DependencyProperty.
                                                    -->
                                                    <Rectangle Fill="{StaticResource XamPropertyGrid_ItemEditorBoundPropertyBorderBrush}"
                                                               Stroke="{StaticResource PropertyGridValueResetButtonBorderBrush}"
                                                               StrokeThickness="1"
                                                               Cursor="Hand"
                                                               Visibility="{Binding Path=IsBoundDependencyProperty, Converter={StaticResource BoolToVisibilityConverter}}"
                                                               ToolTip="{Binding Source={StaticResource toolTipPropertyValueResetButtonCanResetBinding}, Path=Value}" />
                                                </Grid>
                                            </ControlTemplate>
                                        </Button.Template>
                                        <ig:Commanding.Commands>
                                            <ig:CommandSourceCollection>
                                                <igPrim:PropertyGridPropertyItemCommandSource CommandType="ShowOptionsMenu" EventName="Click" ParameterBinding="{Binding}" />
                                            </ig:CommandSourceCollection>
                                        </ig:Commanding.Commands>
                                    </Button>
                                </Grid>
                            </Border>
                        </Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="SelectedStates">
                                <VisualState x:Name="Selected">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="highlightArea" Storyboard.TargetProperty="(Rectangle.Fill)">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource PropertyItemSelectedBackgroundBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="displayName" Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ActiveForegroundBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="highlightArea" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="UnSelected" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="hoverArea" Storyboard.TargetProperty="(Rectangle.Fill)">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource PropertyItemHoverBackgroundBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Normal" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Border>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding Path=Visibility, ElementName=highlightArea}" Value="Visible">
                            <Setter TargetName="ItemViewToggle" Property="Foreground" Value="{StaticResource GlyphActiveBackgroundBrush}" />
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  *********************************  AddListEntryButton Style  *********************************  -->
    <Style x:Key="{x:Static igPrim:PropertyGridListEditorControl.AddListEntryButtonStyleKey}" BasedOn="{StaticResource TransparentPropertyGridButtonStyle}" TargetType="{x:Type Button}">
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Grid Background="{StaticResource TransparentBrush}" ToolTip="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ToolTip}">
                        <Path Width="8"
                              Height="8"
                              HorizontalAlignment="Center"
                              VerticalAlignment="Center"
                              Data="{StaticResource PlusIcon}"
                              Fill="{Binding Path=(Foreground), RelativeSource={RelativeSource AncestorType=ContentControl}}"
                              IsHitTestVisible="False"
                              Stretch="Fill" />
                    </Grid>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  *********************************  RemoveListEntryButton Style  *********************************  -->
    <Style x:Key="{x:Static igPrim:PropertyGridPropertyItemView.RemoveListEntryButtonStyleKey}" BasedOn="{StaticResource TransparentPropertyGridButtonStyle}" TargetType="{x:Type Button}">
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Grid Background="{StaticResource TransparentBrush}" ToolTip="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ToolTip}">
                        <Path Width="8"
                              Height="2"
                              HorizontalAlignment="Center"
                              VerticalAlignment="Center"
                              Data="{StaticResource MinusIcon}"
                              Fill="{Binding Path=(Foreground), RelativeSource={RelativeSource AncestorType=ContentControl}}"
                              IsHitTestVisible="False"
                              Stretch="Fill" />
                    </Grid>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  *********************************  PropertyGridListEditorControl Style  *********************************  -->
    <Style TargetType="igPrim:PropertyGridListEditorControl">
        <Setter Property="Background" Value="{StaticResource TransparentBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="igPrim:PropertyGridListEditorControl">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <!--  JM TFS231830 02-02-17  -->
                            <!--<ColumnDefinition Width="Auto" />
              <ColumnDefinition Width="*" />-->
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>

                        <!--  JM TFS231830 02-02-17  -->
                        <!--<TextBlock Margin="5,2,22,0" Foreground="{StaticResource ForegroundBrush}" Text="{Binding PropertyItem.ListValueDescription, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" Opacity="0.6" />-->
                        <TextBlock Margin="5,2,0,0" Foreground="{StaticResource ForegroundBrush}" Text="{Binding PropertyItem.ListValueDescription, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" Opacity="0.6" />
                        <Button x:Name="PART_AddListEntryButton"
                                Grid.Column="1"
                                Width="22"
                                Height="22"
                                Margin="2 2 5 2"
                                HorizontalAlignment="Right"
                                Style="{DynamicResource {x:Static igPrim:PropertyGridListEditorControl.AddListEntryButtonStyleKey}}"
                                ToolTip="{Binding Source={StaticResource toolTipAddListEntryButton}, Path=Value}"
                                Visibility="{Binding Path=PropertyItem.CanAddEntryToList, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BoolToVisibilityConverter}}">
                            <ig:Commanding.Commands>
                                <ig:CommandSourceCollection>
                                    <igPrim:PropertyGridPropertyItemCommandSource CommandType="AddListEntry" EventName="Click" ParameterBinding="{Binding}" />
                                </ig:CommandSourceCollection>
                            </ig:Commanding.Commands>
                        </Button>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  *********************************  CreateExpandableObjectButton Style  *********************************  -->
    <Style x:Key="{x:Static igPrim:PropertyGridExpandableObjectEditorControl.CreateExpandableObjectButtonStyleKey}" BasedOn="{StaticResource TransparentPropertyGridButtonStyle}" TargetType="{x:Type Button}">
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Grid Background="{StaticResource TransparentBrush}" ToolTip="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ToolTip}">
                        <Path Width="8"
                              Height="8"
                              HorizontalAlignment="Center"
                              VerticalAlignment="Center"
                              Data="{StaticResource PlusIcon}"
                              Fill="{Binding Path=(Foreground), RelativeSource={RelativeSource AncestorType=ContentControl}}"
                              IsHitTestVisible="False"
                              Stretch="Fill" />
                    </Grid>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  *********************************  PropertyGridExpandableObjectEditorControl Style  *********************************  -->
    <Style TargetType="igPrim:PropertyGridExpandableObjectEditorControl">
        <Setter Property="Background" Value="{StaticResource TransparentBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="igPrim:PropertyGridExpandableObjectEditorControl">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>

                        <TextBlock Foreground="{StaticResource ForegroundBrush}" Margin="5,2,22,0" Text="{Binding PropertyItem.ExpandableObjectValueDescription, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" Opacity="0.6" />

                        <Button x:Name="PART_CreateExpandableObjectButton"
                                Grid.Column="1"
                                Width="22"
                                Height="22"
                                Margin="2 2 5 2"
                                HorizontalAlignment="Right"
                                Style="{DynamicResource {x:Static igPrim:PropertyGridExpandableObjectEditorControl.CreateExpandableObjectButtonStyleKey}}"
                                ToolTip="{Binding Source={StaticResource toolTipCreateExpandableObjectButton}, Path=Value}"
                                Visibility="{Binding Path=PropertyItem.CanCreateExpandableObjectInstance, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BoolToVisibilityConverter}}">
                            <ig:Commanding.Commands>
                                <ig:CommandSourceCollection>
                                    <igPrim:PropertyGridPropertyItemCommandSource CommandType="CreateExpandableObject" EventName="Click" ParameterBinding="{Binding}" />
                                </ig:CommandSourceCollection>
                            </ig:Commanding.Commands>
                        </Button>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  *********************************  PropertyGrid Style  *********************************  -->
    <Style TargetType="ig:XamPropertyGrid">
        <Setter Property="Background" Value="{StaticResource PropertyGridBackgroundBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource PropertyGridBorderBrush}" />
        <Setter Property="BorderThickness" Value="{StaticResource DefaultBorderThickness}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ig:XamPropertyGrid">
                    <Border igPrim:XamlHelper.SnapsToDevicePixels="True"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Padding="{TemplateBinding Padding}">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition />
                                <RowDefinition Height="5" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>

                            <!--  Filter area.  -->
                            <Grid Grid.Row="0" Margin="4" Visibility="{TemplateBinding FilterAreaVisibility}">
                                <igPrim:PropertyGridFilterAreaControl x:Name="PART_PropertyGridFilterAreaControl" />
                            </Grid>

                            <!--  Properties area.  -->
                            <Border Grid.Row="1" BorderBrush="{StaticResource PropertyGridDescriptionAreaBackgroundBrush}" BorderThickness="0,2,0,0">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="Auto" />
                                    </Grid.ColumnDefinitions>

                                    <!--  Invisible thumb for resizing the Name column  -->
                                    <Thumb x:Name="PART_NameColumnDragThumb"
                                           Width="6"
                                           Margin="-4,0,0,0"
                                           HorizontalAlignment="Left"
                                           Cursor="SizeWE"
                                           Panel.ZIndex="1">
                                        <Thumb.Template>
                                            <ControlTemplate>
                                                <Border Background="{StaticResource TransparentBrush}" />
                                            </ControlTemplate>
                                        </Thumb.Template>
                                    </Thumb>

                                    <!--  Panel that lays out all the items  -->
                                    <igPrim:PropertyGridItemLayoutPanel x:Name="PART_ItemLayoutPanel" Grid.Column="0" Background="{StaticResource PropertyItemLayoutPanelBackgroundBrush}">
                                        <igPrim:PropertyGridItemLayoutPanel.Resources>
                                            <!--  Settings for the CheckBox control used as a property editor.  -->
                                            <Style BasedOn="{StaticResource CheckBoxStyle}" TargetType="CheckBox">
                                                <Setter Property="Margin" Value="6,0,0,0" />
                                                <Setter Property="VerticalContentAlignment" Value="Top" />
                                            </Style>

                                            <!--  Settings for the ListBox control used as a property editor.  -->
                                            <Style BasedOn="{StaticResource ListBoxStyle}" TargetType="{x:Type ListBox}" />

                                            <!--  Settings for the ComboBox control used as a property editor.  -->
                                            <Style BasedOn="{StaticResource PropertyGridComboBoxStyle}" TargetType="ComboBox">
                                                <Setter Property="BorderThickness" Value="0" />
                                            </Style>

                                            <!--  Settings for the TextBox control used as a property editor.  -->
                                            <Style BasedOn="{StaticResource PropertyGridTextBoxStyle}" TargetType="TextBox" />

                                            <!--  Settings for the XamDateTimeInput control used as a property editor.  -->
                                            <Style BasedOn="{StaticResource XamDateTimeInputStyle}" TargetType="ig:XamDateTimeInput">
                                                <Setter Property="BorderThickness" Value="0" />
                                                <Setter Property="DropDownButtonDisplayMode" Value="MouseOver" />
                                                <Setter Property="Padding" Value="4,0" />
                                            </Style>
                                        </igPrim:PropertyGridItemLayoutPanel.Resources>
                                    </igPrim:PropertyGridItemLayoutPanel>

                                    <ScrollBar x:Name="PART_VerticalScrollBar"
                                               Grid.Column="1"
                                               Orientation="Vertical"
                                               Style="{StaticResource ScrollBarStyle}"
                                               Visibility="{TemplateBinding ScrollBarVisibility}" />
                                </Grid>
                            </Border>

                            <!--  Description area.  -->
                            <GridSplitter x:Name="PART_DescriptionAreaSplitter"
                                          Grid.Row="2"
                                          Height="5"
                                          HorizontalAlignment="Stretch"
                                          Background="{StaticResource PropertyGridDescriptionAreaSplitterBackgroundBrush}"
                                          Visibility="{TemplateBinding DescriptionAreaVisibility}" />

                            <Grid Grid.Row="3" Visibility="{TemplateBinding DescriptionAreaVisibility}">
                                <igPrim:PropertyGridDescriptionAreaControl x:Name="PART_PropertyGridDescriptionAreaControl" />
                            </Grid>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  ***************************************************************************************************  -->
    <!--  *********************************  PropertyGridBrushEditor  ***************************************  -->
    <!--  ***************************************************************************************************  -->


    <!--  *********************************  CONVERTERS  *********************************  -->
    <igPrim:ByteDoubleConverter x:Key="byteDoubleConverter" />
    <igPrim:ByteIntConverter x:Key="byteIntConverter" />
    <igPrim:BoolToVisibilityConverter x:Key="boolToVisibilityConverter" />
    <igControls:NotBoolToVisibilityConverter x:Key="notBoolToVisibilityConverter" />

    <!--  *********************************  STRING RESOURCES  *********************************  -->
    <igPrim:PropertyGridResourceString x:Key="toolTipNoBrushButton" ResourceName="ToolTip_NoBrushButton" />
    <igPrim:PropertyGridResourceString x:Key="toolTipSolidBrushButton" ResourceName="ToolTip_SolidBrushButton" />
    <igPrim:PropertyGridResourceString x:Key="toolTipGradientBrushButton" ResourceName="ToolTip_GradientBrushButton" />
    <igPrim:PropertyGridResourceString x:Key="toolTipInitialColorRectangle" ResourceName="ToolTip_InitialColorRectangle" />
    <igPrim:PropertyGridResourceString x:Key="toolTipCurrentColorRectangle" ResourceName="ToolTip_CurrentColorRectangle" />
    <igPrim:PropertyGridResourceString x:Key="toolTipRedValueTextBox" ResourceName="ToolTip_RedValueTextBox" />
    <igPrim:PropertyGridResourceString x:Key="toolTipGreenValueTextBox" ResourceName="ToolTip_GreenValueTextBox" />
    <igPrim:PropertyGridResourceString x:Key="toolTipBlueValueTextBox" ResourceName="ToolTip_BlueValueTextBox" />
    <igPrim:PropertyGridResourceString x:Key="toolTipAlphaValueTextBox" ResourceName="ToolTip_AlphaValueTextBox" />
    <igPrim:PropertyGridResourceString x:Key="toolTipLinearGradientButton" ResourceName="ToolTip_LinearGradientButton" />
    <igPrim:PropertyGridResourceString x:Key="toolTipRadialGradientButton" ResourceName="ToolTip_RadialGradientButton" />
    <igPrim:PropertyGridResourceString x:Key="toolTipReverseStopsButton" ResourceName="ToolTip_ReverseStopsButton" />
    <igPrim:PropertyGridResourceString x:Key="toolTipVerticalLinearGradientButton" ResourceName="ToolTip_VerticalLinearGradientButton" />
    <igPrim:PropertyGridResourceString x:Key="toolTipHorizontalLinearGradientButton" ResourceName="ToolTip_HorizontalLinearGradientButton" />
    <igPrim:PropertyGridResourceString x:Key="miscTextNone" ResourceName="MiscText_None" />
    <igPrim:PropertyGridResourceString x:Key="miscTextR" ResourceName="MiscText_R" />
    <igPrim:PropertyGridResourceString x:Key="miscTextG" ResourceName="MiscText_G" />
    <igPrim:PropertyGridResourceString x:Key="miscTextB" ResourceName="MiscText_B" />
    <igPrim:PropertyGridResourceString x:Key="miscTextA" ResourceName="MiscText_A" />

    <!--  JM 10-04-16 TFS224563 - Added.  -->
    <igPrim:PropertyGridResourceString x:Key="toolTipSelectBrushResourceButton" ResourceName="ToolTip_SelectBrushResourceButton" />

    <!--  *********************************  NumericRangeSlider Style  *********************************  -->
    <Style x:Key="NumericRangeSliderStyle" TargetType="ig:XamSliderBase">
        <Setter Property="IsMouseWheelEnabled" Value="False" />
        <Setter Property="Orientation" Value="Horizontal" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ig:XamSliderBase">
                    <Grid x:Name="RootElement" Background="{TemplateBinding Background}">
                        <Border x:Name="HorizontalSlider" BorderBrush="{StaticResource PropertyGridBrushEditorGradientStopsBorderBrush}" BorderThickness="{StaticResource DefaultBorderThickness}">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <RepeatButton x:Name="HorizontalDecrease"
                                              Grid.Column="0"
                                              Margin="0,0,4,0"
                                              igPrim:XamlHelper.Focusable="False"
                                              Style="{StaticResource DecreaseButtonStyle}"
                                              Visibility="{TemplateBinding DecreaseButtonVisibility}">
                                    <ig:Commanding.Command>
                                        <ig:XamSliderBaseCommandSource CommandType="SmallDecrease" EventName="Click" />
                                    </ig:Commanding.Command>
                                </RepeatButton>
                                <Grid x:Name="HorizontalSlidersGrid" Grid.Column="1">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="*" />
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="*" />
                                    </Grid.RowDefinitions>
                                </Grid>
                                <Grid x:Name="HorizontalTickMarks" Grid.Column="1" Margin="0" Background="{StaticResource TransparentBrush}" />
                                <Grid x:Name="HorizontalTrack" Grid.Column="1" Height="11" Background="{StaticResource TransparentBrush}">
                                    <Rectangle Height="1" Margin="0" igPrim:XamlHelper.SnapsToDevicePixels="True" Fill="{StaticResource TransparentBrush}" />
                                    <Canvas x:Name="HorizontalTrackFills" />
                                    <Canvas x:Name="HorizontalThumbs" />
                                </Grid>
                                <RepeatButton x:Name="HorizontalIncrease"
                                              Grid.Column="2"
                                              Margin="6,0,0,0"
                                              igPrim:XamlHelper.Focusable="False"
                                              RenderTransformOrigin="0.5,0.5"
                                              Style="{StaticResource IncreaseButtonStyle}"
                                              Visibility="{TemplateBinding IncreaseButtonVisibility}">
                                    <ig:Commanding.Command>
                                        <ig:XamSliderBaseCommandSource CommandType="SmallIncrease" EventName="Click" />
                                    </ig:Commanding.Command>
                                </RepeatButton>
                            </Grid>
                        </Border>
                        <Border x:Name="VerticalSlider" BorderBrush="{StaticResource PropertyGridBrushEditorGradientStopsBorderBrush}" BorderThickness="{StaticResource DefaultBorderThickness}" Visibility="Collapsed">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="*" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>
                                <RepeatButton x:Name="VerticalIncrease"
                                              Margin="0,0,0,4"
                                              igPrim:XamlHelper.Focusable="False"
                                              RenderTransformOrigin="0.5,0.5"
                                              Style="{StaticResource IncreaseButtonStyle}"
                                              Visibility="{TemplateBinding IncreaseButtonVisibility}">
                                    <ig:Commanding.Command>
                                        <ig:XamSliderBaseCommandSource CommandType="SmallIncrease" EventName="Click" />
                                    </ig:Commanding.Command>
                                </RepeatButton>
                                <Grid x:Name="VerticalSlidersGrid" Grid.Row="1">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="*" />
                                    </Grid.ColumnDefinitions>
                                </Grid>
                                <Grid x:Name="VerticalTickMarks" Grid.Row="1" Margin="0" Background="{StaticResource TransparentBrush}" />
                                <Grid x:Name="VerticalTrack" Grid.Row="1" Width="11" Background="{StaticResource TransparentBrush}">
                                    <Rectangle Width="1" Margin="0" igPrim:XamlHelper.SnapsToDevicePixels="True" Fill="{StaticResource TransparentBrush}" />
                                    <Canvas x:Name="VerticalTrackFills" />
                                    <Canvas x:Name="VerticalThumbs" />
                                </Grid>
                                <RepeatButton x:Name="VerticalDecrease"
                                              Grid.Row="2"
                                              Margin="0,6,0,0"
                                              igPrim:XamlHelper.Focusable="False"
                                              RenderTransformOrigin="0.5,0.5"
                                              Style="{StaticResource DecreaseButtonStyle}"
                                              Visibility="{TemplateBinding DecreaseButtonVisibility}">
                                    <ig:Commanding.Command>
                                        <ig:XamSliderBaseCommandSource CommandType="SmallDecrease" EventName="Click" />
                                    </ig:Commanding.Command>
                                </RepeatButton>
                            </Grid>
                        </Border>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="OrientationStates">
                                <VisualState x:Name="Horizontal" />
                                <VisualState x:Name="Vertical">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HorizontalSlider" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="VerticalSlider" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  *********************************  SliderNumericThumb Style  *********************************  -->
    <Style x:Key="NumericThumbStyle" TargetType="ig:XamSliderNumericThumb">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ig:XamSliderNumericThumb">
                    <Grid x:Name="RootElement">
                        <ToolTipService.ToolTip>
                            <ToolTip x:Name="ThumbToolTip" ContentTemplate="{TemplateBinding ToolTipTemplate}" Visibility="{TemplateBinding ToolTipVisibility}" />
                        </ToolTipService.ToolTip>
                        <Grid x:Name="HorizontalThumb" Margin="-6,8,6,0">
                            <Grid x:Name="HorizontalThumbContent" Width="12" Height="17">
                                <Path x:Name="BaseBg"
                                      Width="10"
                                      Height="15"
                                      Data="{StaticResource NumericSliderThumbGlyph}"
                                      Fill="{TemplateBinding Background}"
                                      Opacity="1"
                                      Stretch="Fill" />
                                <Path x:Name="InnerWhiteBorder"
                                      Width="12"
                                      Height="17"
                                      HorizontalAlignment="Left"
                                      VerticalAlignment="Top"
                                      Data="{StaticResource NumericSliderThumbInnerGlyph}"
                                      Opacity="1"
                                      Stretch="Fill"
                                      Stroke="{StaticResource PropertyGridBrushEditorGradientThumbOuterBackgroundBrush}"
                                      StrokeThickness="2" />
                                <Path x:Name="InnerBlackBorder"
                                      Width="10"
                                      Height="15"
                                      Data="{StaticResource NumericSliderThumbGlyph}"
                                      Opacity="1"
                                      Stretch="Fill"
                                      Stroke="{StaticResource PropertyGridBrushEditorGradientThumbInnerBorderBrush}"
                                      StrokeThickness="1" />
                                <Path x:Name="FocusElement"
                                      Width="12"
                                      Height="17"
                                      HorizontalAlignment="Left"
                                      VerticalAlignment="Top"
                                      Data="{StaticResource NumericSliderThumbInnerGlyph}"
                                      Opacity="1"
                                      Stretch="Fill"
                                      Stroke="{StaticResource PropertyGridBrushEditorGradientThumbFocusedBorderBrush}"
                                      StrokeThickness="{StaticResource DefaultStrokeThickness}"
                                      Visibility="Collapsed" />
                                <Path x:Name="DisabledElement"
                                      Width="10"
                                      Height="15"
                                      Margin="0,0,0,0"
                                      HorizontalAlignment="Left"
                                      VerticalAlignment="Top"
                                      Data="{StaticResource NumericSliderThumbDisabledGlyph}"
                                      Opacity="0.5"
                                      Stretch="Fill"
                                      Stroke="White"
                                      StrokeThickness="{StaticResource DefaultStrokeThickness}"
                                      Visibility="Collapsed" />
                            </Grid>
                        </Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="EnabledStates">
                                <VisualState x:Name="Enabled" />
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="DisabledElement" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Unfocused" />
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="FocusElement" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="InnerBlackBorder" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  *********************************  Expander Down Style  *********************************  -->
    <Style x:Key="PropertyGridBrushEditorExpanderDownHeaderStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Padding="{TemplateBinding Padding}">
                        <Grid Background="{StaticResource TransparentBrush}" SnapsToDevicePixels="False">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="22" />
                            </Grid.ColumnDefinitions>
                            <ContentPresenter Grid.Column="0"
                                              HorizontalAlignment="Stretch"
                                              VerticalAlignment="Center"
                                              RecognizesAccessKey="True"
                                              SnapsToDevicePixels="True" />
                            <Rectangle x:Name="rectangle"
                                       Grid.Column="1"
                                       Width="22"
                                       Height="22"
                                       HorizontalAlignment="Center"
                                       VerticalAlignment="Center"
                                       Fill="{StaticResource PropertyGridBrushEditorExpanderButtonBackgroundBrush}" />
                            <Path x:Name="arrow"
                                  Grid.Column="1"
                                  Width="7"
                                  Height="4"
                                  Data="{StaticResource VArrowDown}"
                                  Fill="{StaticResource GlyphBackgroundBrush}"
                                  RenderTransformOrigin="0.5, 0.5"
                                  Stretch="Fill" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter TargetName="arrow" Property="Data" Value="{StaticResource VArrowTop}" />
                            <Setter TargetName="rectangle" Property="Fill" Value="{StaticResource PropertyGridBrushEditorExpanderButtonPressedBackgroundBrush}" />
                            <Setter TargetName="arrow" Property="Fill" Value="{StaticResource PropertyGridBrushEditorExpanderArrowPressedBorderBrush}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="rectangle" Property="Fill" Value="{StaticResource PropertyGridBrushEditorExpanderButtonHoverBackgroundBrush}" />
                            <Setter TargetName="arrow" Property="Fill" Value="{StaticResource PropertyGridBrushEditorExpanderArrowHoverBorderBrush}" />
                            <!--<Setter TargetName="rectangle" Property="Stroke" Value="{StaticResource PropertyGridBrushEditorExpanderButtonHoverBorderBrush}" />-->
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="rectangle" Property="Fill" Value="{StaticResource PropertyGridBrushEditorExpanderButtonPressedBackgroundBrush}" />
                            <Setter TargetName="arrow" Property="Fill" Value="{StaticResource PropertyGridBrushEditorExpanderArrowPressedBorderBrush}" />
                            <!--<Setter TargetName="rectangle" Property="Stroke" Value="{StaticResource PropertyGridBrushEditorExpanderButtonPressedBorderBrush}" />-->
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  *********************************  Expander Style  *********************************  -->
    <Style x:Key="PropertyGridBrushEditorExpanderStyle" TargetType="{x:Type Expander}">
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="BorderBrush" Value="{StaticResource PropertyItemEditorBorderBrush}" />
        <Setter Property="FontFamily" Value="{StaticResource FontFamily}" />
        <Setter Property="FontSize" Value="{StaticResource FontSize}" />
        <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Expander}">
                    <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
                        <DockPanel>
                            <!--  JM 10-14-14 TFS183020 Set IsTabStop to false.  -->
                            <ToggleButton x:Name="HeaderSite"
                                          MinWidth="0"
                                          MinHeight="0"
                                          Margin="1"
                                          HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                          Content="{TemplateBinding Header}"
                                          ContentTemplate="{TemplateBinding HeaderTemplate}"
                                          ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}"
                                          DockPanel.Dock="Top"
                                          FontFamily="{TemplateBinding FontFamily}"
                                          FontSize="{TemplateBinding FontSize}"
                                          FontStretch="{TemplateBinding FontStretch}"
                                          FontStyle="{TemplateBinding FontStyle}"
                                          FontWeight="{TemplateBinding FontWeight}"
                                          Foreground="{TemplateBinding Foreground}"
                                          IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                          IsTabStop="False"
                                          Padding="{TemplateBinding Padding}"
                                          Style="{StaticResource PropertyGridBrushEditorExpanderDownHeaderStyle}" />
                            <ContentPresenter x:Name="ExpandSite"
                                              Margin="1,5"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              DockPanel.Dock="Bottom"
                                              Focusable="false"
                                              Visibility="Collapsed" />
                        </DockPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsExpanded" Value="true">
                            <Setter TargetName="ExpandSite" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{StaticResource PropertyGridBrushEditorExpanderDisabledForegroundBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
    </Style>

    <!--  *********************************  SliderRepeatButton Style  *********************************  -->
    <Style x:Key="SliderRepeatButtonStyle" TargetType="{x:Type RepeatButton}">
        <Setter Property="Focusable" Value="false" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Rectangle Fill="{StaticResource TransparentBrush}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  *********************************  Slider Horizontal Thumb Style  *********************************  -->
    <Style x:Key="HSliderThumbStyle" TargetType="{x:Type Thumb}">
        <Setter Property="Background" Value="{StaticResource PropertyGridBrushEditorAlphaSliderThumbBackgroundBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="MinHeight" Value="11" />
        <Setter Property="MinWidth" Value="4" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Grid>
                        <Ellipse x:Name="ThumbBackground" Width="12" Height="12" Fill="{TemplateBinding Background}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="ThumbBackground" Property="Fill" Value="{StaticResource PropertyGridBrushEditorAlphaSliderThumbHoverBackgroundBrush}" />
                        </Trigger>
                        <Trigger Property="IsMouseCaptured" Value="True">
                            <Setter TargetName="ThumbBackground" Property="Fill" Value="{StaticResource PropertyGridBrushEditorAlphaSliderThumbPressedBackgroundBrush}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="ThumbBackground" Property="Opacity" Value="0.3" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  *********************************  Slider Style  *********************************  -->
    <Style x:Key="SliderStyle" TargetType="{x:Type Slider}">
        <Setter Property="Background" Value="{StaticResource TransparentBrush}" />
        <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
        <Setter Property="Stylus.IsPressAndHoldEnabled" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Slider}">
                    <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" MinHeight="{TemplateBinding MinHeight}" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <TickBar x:Name="TopTick"
                                     Grid.Row="0"
                                     Height="1"
                                     Fill="{TemplateBinding Foreground}"
                                     Placement="Top"
                                     Visibility="Collapsed" />
                            <Border x:Name="TrackBackground"
                                    Grid.Row="1"
                                    Height="2"
                                    VerticalAlignment="center"
                                    Background="{StaticResource PropertyGridBrushEditorAlphaSliderTrackBackgroundBrush}">
                                <Canvas Margin="-6,-1">
                                    <Rectangle x:Name="PART_SelectionRange"
                                               Width="0"
                                               Height="2"
                                               Fill="{StaticResource PropertyGridBrushEditorAlphaSliderSelectionRangeBackgroundBrush}"
                                               Visibility="Hidden" />
                                </Canvas>
                            </Border>
                            <Track x:Name="PART_Track" Grid.Row="1">
                                <Track.DecreaseRepeatButton>
                                    <RepeatButton Command="{x:Static Slider.DecreaseLarge}" Style="{StaticResource SliderRepeatButtonStyle}" />
                                </Track.DecreaseRepeatButton>
                                <Track.IncreaseRepeatButton>
                                    <RepeatButton Command="{x:Static Slider.IncreaseLarge}" Style="{StaticResource SliderRepeatButtonStyle}" />
                                </Track.IncreaseRepeatButton>
                                <Track.Thumb>
                                    <Thumb x:Name="Thumb" Style="{StaticResource HSliderThumbStyle}" />
                                </Track.Thumb>
                            </Track>
                            <TickBar x:Name="BottomTick"
                                     Grid.Row="2"
                                     Height="1"
                                     Fill="{TemplateBinding Foreground}"
                                     Placement="Bottom"
                                     Visibility="Collapsed" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="TickPlacement" Value="TopLeft">
                            <Setter TargetName="TrackBackground" Property="Margin" Value="5,2,5,0" />
                            <Setter TargetName="Thumb" Property="Style" Value="{StaticResource HSliderThumbStyle}" />
                            <Setter TargetName="TopTick" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="TickPlacement" Value="BottomRight">
                            <Setter TargetName="TrackBackground" Property="Margin" Value="5,0,5,2" />
                            <Setter TargetName="Thumb" Property="Style" Value="{StaticResource HSliderThumbStyle}" />
                            <Setter TargetName="BottomTick" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="TickPlacement" Value="Both">
                            <Setter TargetName="TopTick" Property="Visibility" Value="Visible" />
                            <Setter TargetName="BottomTick" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="IsSelectionRangeEnabled" Value="true">
                            <Setter TargetName="PART_SelectionRange" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="true">
                            <Setter TargetName="Thumb" Property="Foreground" Value="{StaticResource PropertyGridBrushEditorAlphaSliderThumbFocusedBorderBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  *********************************  ExpandCollapseToggle Style  *********************************  -->
    <Style x:Key="ExpandCollapseToggleStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Width" Value="16" />
        <Setter Property="Height" Value="16" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Background="{StaticResource TransparentBrush}" Height="16" Padding="6,4,0,0" Width="16">
                        <Path x:Name="ExpandPath" Data="M5,0 L7,0 7,7 0,7 0,5 5,5 z" Fill="{StaticResource ExpansionIndicatorGlyphBackgroundBrush}">
                            <Path.RenderTransform>
                                <RotateTransform Angle="-45" CenterY="4" CenterX="4" />
                            </Path.RenderTransform>
                        </Path>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="RenderTransform" TargetName="ExpandPath">
                                <Setter.Value>
                                    <RotateTransform Angle="45" CenterY="6" CenterX="6" />
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Fill" TargetName="ExpandPath" Value="{StaticResource ExpansionIndicatorGlyphBackgroundBrush}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Fill" TargetName="ExpandPath" Value="{StaticResource ExpansionIndicatorGlyphHoverBackgroundBrush}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="IsChecked" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Fill" TargetName="ExpandPath" Value="{StaticResource ExpansionIndicatorGlyphHoverBackgroundBrush}" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  *********************************  TreeViewItemFocusVisual Style  *********************************  -->
    <Style x:Key="TreeViewItemFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  *********************************  TreeViewItem Style  *********************************  -->
    <Style x:Key="TreeViewItemStyle" TargetType="{x:Type TreeViewItem}">
        <Setter Property="Background" Value="{StaticResource TreeViewItemBackgroundBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource TreeViewItemBorderBrush}" />
        <Setter Property="BorderThickness" Value="{StaticResource DefaultBorderThickness}" />
        <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
        <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="Padding" Value="4,0" />
        <Setter Property="FocusVisualStyle" Value="{StaticResource TreeViewItemFocusVisual}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TreeViewItem}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition MinWidth="19" Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition />
                        </Grid.RowDefinitions>
                        <ToggleButton x:Name="Expander" ClickMode="Press" IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource ExpandCollapseToggleStyle}" />
                        <Border x:Name="Bd"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}"
                                Grid.Column="1"
                                Padding="{TemplateBinding Padding}"
                                SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="PART_Header" ContentSource="Header" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Border>
                        <ItemsPresenter x:Name="ItemsHost" Grid.ColumnSpan="2" Grid.Column="1" Grid.Row="1" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsExpanded" Value="false">
                            <Setter Property="Visibility" TargetName="ItemsHost" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="HasItems" Value="false">
                            <Setter Property="Visibility" TargetName="Expander" Value="Hidden" />
                        </Trigger>
                        <Trigger Property="IsSelected" Value="true">
                            <Setter Property="Background" TargetName="Bd" Value="{StaticResource TreeViewItemSelectedBackgroundBrush}" />
                            <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource TreeViewItemSelectedBorderBrush}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="Bd" Value="{StaticResource TreeViewItemHoverBackgroundBrush}" />
                            <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource TreeViewItemHoverBorderBrush}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="true" />
                                <Condition Property="IsSelectionActive" Value="false" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" TargetName="Bd" Value="{StaticResource TransparentBrush}" />
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" TargetName="Bd" Value="0.3" />
                            <Setter Property="Opacity" TargetName="Expander" Value="0.3" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  *********************************  TreeView Style  *********************************  -->
    <Style x:Key="TreeViewStyle" TargetType="{x:Type TreeView}">
        <Setter Property="Background" Value="{StaticResource TreeViewBackgroundBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource TreeViewBorderBrush}" />
        <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Padding" Value="1" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.PanningMode" Value="Both" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TreeView}">
                    <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
                        <ScrollViewer x:Name="_tv_scrollviewer_"
                                      Background="{TemplateBinding Background}"
                                      CanContentScroll="false"
                                      Focusable="false"
                                      HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
                                      Padding="{TemplateBinding Padding}"
                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                      VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}"
                                      Style="{StaticResource ScrollViewerStyle}">
                            <ItemsPresenter />
                        </ScrollViewer>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" TargetName="Bd" Value="0.5" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  *********************************  PropertyGridBrushEditorControl Style  *********************************  -->
    <Style TargetType="igPrim:PropertyGridBrushEditorControl">
        <Setter Property="Background" Value="{StaticResource PropertyGridBrushEditorBackgroundBrush}" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="igPrim:PropertyGridBrushEditorControl">
                    <Expander x:Name="expander" igPrim:XamlHelper.SnapsToDevicePixels="True" IsExpanded="{Binding Path=IsExpanded, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource PropertyGridBrushEditorExpanderStyle}">
                        <Expander.HeaderTemplate>
                            <DataTemplate>
                                <Grid>
                                    <Border Margin="0,0,1,0" HorizontalAlignment="Stretch" BorderBrush="{StaticResource PropertyGridBrushEditorColorSampleBorderBrush}" BorderThickness="{StaticResource DefaultBorderThickness}">
                                        <Grid>
                                            <TextBlock Height="16" Margin="3,1,0,2" Foreground="{StaticResource ForegroundBrush}" Text="{Binding Source={StaticResource miscTextNone}, Path=Value}" />
                                            <!--  JM 10-04-16 TFS224563 - Changed the Visibility binding to use a new TransparentPreviewBrushVisibility property.  -->
                                            <Rectangle Height="22" Fill="{Binding TransparentPreviewBrush, RelativeSource={RelativeSource AncestorType={x:Type igPrim:PropertyGridBrushEditorControl}}}" Visibility="{Binding Path=TransparentPreviewBrushVisibility, RelativeSource={RelativeSource AncestorType={x:Type igPrim:PropertyGridBrushEditorControl}}}" />
                                            <Rectangle Height="22" Fill="{Binding Path=SelectedBrush, RelativeSource={RelativeSource AncestorType={x:Type igPrim:PropertyGridBrushEditorControl}}}" />
                                        </Grid>
                                    </Border>
                                </Grid>
                            </DataTemplate>
                        </Expander.HeaderTemplate>
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition x:Name="brushTypeRow" Height="Auto" />
                                <RowDefinition x:Name="samplingRow" Height="*" />
                                <RowDefinition x:Name="gradientStopsRow" Height="Auto" />
                            </Grid.RowDefinitions>

                            <!--  Brush Types Area  -->
                            <Grid Grid.Row="0">
                                <StackPanel HorizontalAlignment="Stretch" Orientation="Horizontal">
                                    <RadioButton Width="55"
                                                 Height="23"
                                                 Margin="0,0,2,0"
                                                 IsChecked="{Binding Path=IsNullBrush, RelativeSource={RelativeSource TemplatedParent}}"
                                                 IsThreeState="False"
                                                 Style="{StaticResource PropertyGridRadioButtonStyle}"
                                                 ToolTip="{Binding Source={StaticResource toolTipNoBrushButton}, Path=Value}">
                                        <ContentPresenter ContentTemplate="{StaticResource IsNullBrushTemplate}" />
                                    </RadioButton>
                                    <RadioButton Width="55"
                                                 Height="23"
                                                 Margin="2,0,2,0"
                                                 IsChecked="{Binding Path=IsSolidColorBrush, RelativeSource={RelativeSource TemplatedParent}}"
                                                 IsThreeState="False"
                                                 Style="{StaticResource PropertyGridRadioButtonStyle}"
                                                 ToolTip="{Binding Source={StaticResource toolTipSolidBrushButton}, Path=Value}">
                                        <ContentPresenter ContentTemplate="{StaticResource IsSolidColorBrushTemplate}" />
                                    </RadioButton>
                                    <RadioButton Width="55"
                                                 Height="23"
                                                 Margin="2,0,2,0"
                                                 IsChecked="{Binding Path=IsGradientBrush, RelativeSource={RelativeSource TemplatedParent}}"
                                                 IsThreeState="False"
                                                 Style="{StaticResource PropertyGridRadioButtonStyle}"
                                                 ToolTip="{Binding Source={StaticResource toolTipGradientBrushButton}, Path=Value}">
                                        <ContentPresenter ContentTemplate="{StaticResource IsGradientBrushTemplate}" />
                                    </RadioButton>

                                    <!--  JM 10-04-16 TFS224563 - Added a button to select a brush resource.  -->
                                    <RadioButton IsThreeState="False"
                                                 Width="55"
                                                 Height="23"
                                                 Margin="2,0,0,0"
                                                 Style="{StaticResource PropertyGridRadioButtonStyle}"
                                                 IsChecked="{Binding Path=IsSelectingBrushResource, RelativeSource={RelativeSource TemplatedParent}}"
                                                 ToolTip="{Binding Source={StaticResource toolTipSelectBrushResourceButton}, Path=Value}"
                                                 Visibility="{Binding Path=SelectBrushResourceButtonVisibility, RelativeSource={RelativeSource TemplatedParent}}">
                                        <ContentPresenter ContentTemplate="{StaticResource IsSelectingBrushTemplate}" />
                                    </RadioButton>
                                </StackPanel>
                            </Grid>

                            <!--  Color Sampling Area  -->
                            <!--  JM 10-04-16 TFS224563 - Changed the Visibility binding to use a new ColorSamplingAreaVisibility property.  -->
                            <Grid Grid.Row="1" Margin="0,4,0,0" Visibility="{Binding Path=ColorSamplingAreaVisibility, RelativeSource={RelativeSource TemplatedParent}}">
                                <Grid.RowDefinitions>
                                    <RowDefinition x:Name="shadingCanvasRow" Height="*" />
                                    <RowDefinition x:Name="currentColorRow" Height="Auto" />
                                </Grid.RowDefinitions>

                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="24" />
                                    <ColumnDefinition Width="60" />
                                </Grid.ColumnDefinitions>

                                <!--  SHADING GRID and CANVAS  -->
                                <Grid x:Name="ShadingGrid">
                                    <Rectangle x:Name="ColorSamplingRectangle"
                                               Margin="0,1,0,0"
                                               HorizontalAlignment="Stretch"
                                               VerticalAlignment="Stretch"
                                               Fill="{StaticResource PropertyGridBrushEditorColorShadePickerColorSamplingBackgroundBrush}" />
                                    <Rectangle x:Name="rectWhiteGradient"
                                               Margin="0,1,0,0"
                                               HorizontalAlignment="Stretch"
                                               VerticalAlignment="Stretch"
                                               Fill="{StaticResource PropertyGridBrushEditorColorShadePickerWhiteBackgroundBrush}" />
                                    <Rectangle x:Name="rectBlackGradient"
                                               Margin="0,1,0,0"
                                               HorizontalAlignment="Stretch"
                                               VerticalAlignment="Stretch"
                                               Fill="{StaticResource PropertyGridBrushEditorColorShadePickerBlackBackgroundBrush}" />
                                    <Canvas x:Name="ShadingCanvas" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="{StaticResource TransparentBrush}">
                                        <!--  JoeM 09-21-16 TFS224436 Change size to 12x12, set IsHitTestVisible = true and set Background to 'almost transparent' so it is hit-testable but not visible.  -->
                                        <Canvas x:Name="LightnessSelector"
                                                Canvas.Left="100"
                                                Canvas.Top="96"
                                                Width="12"
                                                Height="12"
                                                IsHitTestVisible="True"
                                                Background="#01FFFFFF">
                                            <Ellipse Width="12"
                                                     Height="12"
                                                     IsHitTestVisible="True"
                                                     Stroke="{StaticResource ForegroundBrush}"
                                                     StrokeThickness="3" />
                                            <Ellipse Width="12"
                                                     Height="12"
                                                     IsHitTestVisible="True"
                                                     Stroke="{StaticResource ForegroundBrush}"
                                                     StrokeThickness="{StaticResource DefaultStrokeThickness}" />
                                        </Canvas>
                                    </Canvas>
                                    <!--  JoeM 09-21-16 TFS224436 Set IsHitTestVisible = false.  -->
                                    <Border BorderBrush="{StaticResource PropertyGridBrushEditorColorShadePickerShadingCanvasBorderBrush}" BorderThickness="1,1,0,0" IsHitTestVisible="False" />
                                </Grid>

                                <!--  HUE Area  -->
                                <Grid Grid.Column="1">
                                    <Rectangle x:Name="HueRectangle"
                                               HorizontalAlignment="Stretch"
                                               VerticalAlignment="Stretch"
                                               Fill="{StaticResource PropertyGridBrushEditorColorShadePickerHueBackgroundBrush}"
                                               Stroke="{StaticResource PropertyGridBrushEditorColorShadePickerHueRectangleBorderBrush}" />
                                    <Canvas x:Name="HueCanvas"
                                            HorizontalAlignment="Stretch"
                                            VerticalAlignment="Stretch"
                                            Background="{StaticResource TransparentBrush}"
                                            IsHitTestVisible="False">
                                        <Grid x:Name="HueSelector" Width="{Binding ElementName=HueCanvas, Path=ActualWidth}" Margin="0,-4,0,0" VerticalAlignment="Top">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto" />
                                                <ColumnDefinition Width="*" />
                                                <ColumnDefinition Width="Auto" />
                                            </Grid.ColumnDefinitions>
                                            <Grid Grid.Column="0" Width="5" Height="8">
                                                <Path Data="F1 M 276.761,316L 262.619,307.835L 262.619,324.165L 276.761,316 Z " Fill="{StaticResource GlyphBackgroundBrush}" Stretch="Fill" StrokeLineJoin="Round" />
                                            </Grid>
                                            <Grid Grid.Column="2" Width="5" Height="8">
                                                <Path Data="F1 M 276.761,316L 262.619,307.835L 262.619,324.165L 276.761,316 Z "
                                                      Fill="{StaticResource GlyphBackgroundBrush}"
                                                      RenderTransformOrigin=".5,.5"
                                                      Stretch="Fill"
                                                      StrokeLineJoin="Round">
                                                    <Path.RenderTransform>
                                                        <RotateTransform Angle="180" />
                                                    </Path.RenderTransform>
                                                </Path>
                                            </Grid>
                                        </Grid>
                                    </Canvas>
                                </Grid>

                                <!--  Individual Color Values Area  -->
                                <Grid Grid.Row="0" Grid.RowSpan="2" Grid.Column="2">
                                    <Grid.Resources>
                                        <Style TargetType="{x:Type TextBlock}">
                                            <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
                                            <Setter Property="Margin" Value="10,0,6,0" />
                                            <Setter Property="TextAlignment" Value="Center" />
                                            <Setter Property="VerticalAlignment" Value="Center" />
                                        </Style>
                                    </Grid.Resources>

                                    <StackPanel x:Name="RGBValuesArea" Orientation="Vertical" Visibility="Visible">
                                        <Grid>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto" />
                                                <RowDefinition Height="Auto" />
                                                <RowDefinition Height="Auto" />
                                                <RowDefinition Height="Auto" />
                                                <RowDefinition Height="Auto" />
                                            </Grid.RowDefinitions>

                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto" />
                                                <ColumnDefinition Width="*" />
                                            </Grid.ColumnDefinitions>

                                            <TextBlock Grid.Row="0" Text="{Binding Source={StaticResource miscTextR}, Path=Value}" />
                                            <igPrim:PropertyGridRgbValueEditor Grid.Row="0"
                                                                               Grid.Column="1"
                                                                               Margin="0,0,0,2"
                                                                               Style="{StaticResource TextBoxStyle}"
                                                                               ToolTip="{Binding Source={StaticResource toolTipRedValueTextBox}, Path=Value}"
                                                                               Value="{Binding Path=Red, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource byteIntConverter}}" />

                                            <TextBlock Grid.Row="1" Text="{Binding Source={StaticResource miscTextG}, Path=Value}" />
                                            <igPrim:PropertyGridRgbValueEditor Grid.Row="1"
                                                                               Grid.Column="1"
                                                                               Margin="0,0,0,2"
                                                                               Style="{StaticResource TextBoxStyle}"
                                                                               ToolTip="{Binding Source={StaticResource toolTipGreenValueTextBox}, Path=Value}"
                                                                               Value="{Binding Path=Green, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource byteIntConverter}}" />

                                            <TextBlock Grid.Row="2" Text="{Binding Source={StaticResource miscTextB}, Path=Value}" />
                                            <igPrim:PropertyGridRgbValueEditor Grid.Row="2"
                                                                               Grid.Column="1"
                                                                               Margin="0,0,0,2"
                                                                               Style="{StaticResource TextBoxStyle}"
                                                                               ToolTip="{Binding Source={StaticResource toolTipBlueValueTextBox}, Path=Value}"
                                                                               Value="{Binding Path=Blue, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource byteIntConverter}}" />

                                            <TextBlock Grid.Row="3" Text="{Binding Source={StaticResource miscTextA}, Path=Value}" />
                                            <igPrim:PropertyGridRgbValueEditor Grid.Row="3"
                                                                               Grid.Column="1"
                                                                               Margin="0,0,0,2"
                                                                               Style="{StaticResource TextBoxStyle}"
                                                                               ToolTip="{Binding Source={StaticResource toolTipAlphaValueTextBox}, Path=Value}"
                                                                               Value="{Binding Path=Alpha, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource byteIntConverter}}" />

                                            <Slider Grid.Row="4"
                                                    Grid.Column="1"
                                                    Margin="0,4,0,0"
                                                    HorizontalAlignment="Stretch"
                                                    LargeChange="10"
                                                    Maximum="255"
                                                    Minimum="0"
                                                    SmallChange="1"
                                                    Style="{StaticResource SliderStyle}"
                                                    ToolTip="{Binding Source={StaticResource toolTipAlphaValueTextBox}, Path=Value}"
                                                    Value="{Binding Path=Alpha, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource byteDoubleConverter}}" />
                                        </Grid>
                                    </StackPanel>
                                </Grid>

                                <!--  PREVIOUS AND CURRENT COLOR  -->
                                <Border x:Name="currentColor" Grid.Row="1" BorderBrush="{StaticResource PropertyGridBrushEditorCurrentColorBorderBrush}" BorderThickness="{StaticResource DefaultBorderThickness}">
                                    <Grid>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="22" />
                                        </Grid.RowDefinitions>

                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*" />
                                            <ColumnDefinition Width="*" />
                                        </Grid.ColumnDefinitions>

                                        <Grid.Resources>
                                            <igPrim:NullableColorConverter x:Key="ColorConverter" />
                                        </Grid.Resources>

                                        <Rectangle Grid.ColumnSpan="2" Fill="{Binding TransparentPreviewBrush, RelativeSource={RelativeSource TemplatedParent}}" />

                                        <Border BorderBrush="{StaticResource PropertyGridBrushEditorCurrentColorBorderBrush}" BorderThickness="0,0,1,0">
                                            <Rectangle x:Name="InitialColorRectangle" Cursor="Hand" ToolTip="{Binding Source={StaticResource toolTipInitialColorRectangle}, Path=Value}">
                                                <Rectangle.Fill>
                                                    <SolidColorBrush Color="{Binding InitialColor, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource ColorConverter}}" />
                                                </Rectangle.Fill>
                                            </Rectangle>
                                        </Border>

                                        <Rectangle Grid.Column="1" ToolTip="{Binding Source={StaticResource toolTipCurrentColorRectangle}, Path=Value}">
                                            <Rectangle.Fill>
                                                <SolidColorBrush Color="{Binding CurrentColor, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource ColorConverter}}" />
                                            </Rectangle.Fill>
                                        </Rectangle>
                                    </Grid>
                                </Border>
                            </Grid>

                            <!--  Gradient Stops Area  -->
                            <Grid x:Name="GradientStopsArea" Grid.Row="2" Visibility="{Binding Path=IsGradientBrush, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource boolToVisibilityConverter}}">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>

                                <ig:XamNumericRangeSlider x:Name="GradientStopsSlider"
                                                          Height="16"
                                                          Margin="2,10,2,15"
                                                          DecreaseButtonVisibility="Collapsed"
                                                          IncreaseButtonVisibility="Collapsed"
                                                          LargeChange=".3"
                                                          MaxValue="1"
                                                          MinValue="0"
                                                          SmallChange=".1"
                                                          Style="{StaticResource NumericRangeSliderStyle}"
                                                          ThumbStyle="{StaticResource NumericThumbStyle}" />

                                <Grid Grid.Row="2" Margin="0,3,0,0">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="Auto" />
                                    </Grid.ColumnDefinitions>

                                    <!--  Linear/Radial gradient buttons  -->
                                    <RadioButton Grid.Column="0"
                                                 Width="24"
                                                 Margin="0,0,2,0"
                                                 IsChecked="{Binding Path=IsLinearGradientBrush, RelativeSource={RelativeSource TemplatedParent}}"
                                                 IsThreeState="False"
                                                 Style="{StaticResource PropertyGridRadioButtonStyle}"
                                                 ToolTip="{Binding Source={StaticResource toolTipLinearGradientButton}, Path=Value}">
                                        <ContentPresenter ContentTemplate="{StaticResource IsGradientBrushTemplate}" />
                                    </RadioButton>
                                    <RadioButton Grid.Column="1"
                                                 Width="24"
                                                 Margin="2,0,0,0"
                                                 IsChecked="{Binding Path=IsRadialGradientBrush, RelativeSource={RelativeSource TemplatedParent}}"
                                                 IsThreeState="False"
                                                 Style="{StaticResource PropertyGridRadioButtonStyle}"
                                                 ToolTip="{Binding Source={StaticResource toolTipRadialGradientButton}, Path=Value}">
                                        <ContentPresenter ContentTemplate="{StaticResource IsRadialGradientBrushTemplate}" />
                                    </RadioButton>

                                    <Button x:Name="ReverseStopsButton"
                                            Grid.Column="2"
                                            Width="24"
                                            Height="24"
                                            Margin="15,0,0,0"
                                            Style="{StaticResource PropertyGridButtonStyle}"
                                            ToolTip="{Binding Source={StaticResource toolTipReverseStopsButton}, Path=Value}">
                                        <ContentPresenter ContentTemplate="{StaticResource ReverseStopsTemplate}" />
                                    </Button>

                                    <!--  Vertical/Horizontal Options for Linear Gradient  -->
                                    <Grid Grid.Column="3" Margin="15,0,0,0" Visibility="{Binding Path=IsLinearGradientBrush, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource boolToVisibilityConverter}}">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="Auto" />
                                        </Grid.ColumnDefinitions>

                                        <RadioButton Grid.Column="0"
                                                     Width="24"
                                                     Margin="0,0,2,0"
                                                     IsChecked="{Binding Path=IsVerticalLinearGradientBrush, RelativeSource={RelativeSource TemplatedParent}}"
                                                     IsThreeState="False"
                                                     Style="{StaticResource PropertyGridRadioButtonStyle}"
                                                     ToolTip="{Binding Source={StaticResource toolTipVerticalLinearGradientButton}, Path=Value}">
                                            <ContentPresenter ContentTemplate="{StaticResource IsVerticalLinearGradientTemplate}" />
                                        </RadioButton>
                                        <RadioButton Grid.Column="1"
                                                     Width="24"
                                                     Margin="2,0,0,0"
                                                     IsChecked="{Binding Path=IsHorizontalLinearGradientBrush, RelativeSource={RelativeSource TemplatedParent}}"
                                                     IsThreeState="False"
                                                     Style="{StaticResource PropertyGridRadioButtonStyle}"
                                                     ToolTip="{Binding Source={StaticResource toolTipHorizontalLinearGradientButton}, Path=Value}">
                                            <ContentPresenter ContentTemplate="{StaticResource IsHorizontalLinearGradientTemplate}" />
                                        </RadioButton>
                                    </Grid>
                                </Grid>
                            </Grid>

                            <!--  JM 10-04-16 TFS224563 - Added a derived treeview control for picking brush resources.  -->
                            <!--  Brush Resource Area  -->
                            <Grid x:Name="BrushResourceArea" Grid.Row="1" Margin="0,6,0,0" Visibility="{Binding Path=IsSelectingBrushResource, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource boolToVisibilityConverter}}">
                                <igPrim:PropertyGridBrushResourcesTreeViewControl x:Name="BrushResourcesTreeView" Height="180" />
                            </Grid>
                        </Grid>
                    </Expander>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  JM 10-04-16 TFS224563 - Added.  -->
    <!--  *********************************  PropertyGridBrushResourcesTreeViewControl Style  *********************************  -->
    <Style TargetType="igPrim:PropertyGridBrushResourcesTreeViewControl">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="igPrim:PropertyGridBrushResourcesTreeViewControl">
                    <Border>
                        <TreeView x:Name="PART_TreeView" Style="{StaticResource TreeViewStyle}" ItemContainerStyle="{StaticResource TreeViewItemStyle}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  JM 10-04-16 TFS224563 - Added.  -->
    <!--  *********************************  PropertyGridBrushGroupItem HierarchicalDataTemplate  *********************************  -->
    <HierarchicalDataTemplate DataType="{x:Type igPrim:PropertyGridBrushGroupItem}" ItemsSource="{Binding Items}">
        <Grid x:Name="grid">
            <TextBlock Text="{Binding Name}" Margin="3" />
        </Grid>
    </HierarchicalDataTemplate>

    <!--  JM 10-04-16 TFS224563 - Added.  -->
    <!--  *********************************  PropertyGridBrushResourceItem DataTemplate  *********************************  -->
    <DataTemplate DataType="{x:Type igPrim:PropertyGridBrushResourceItem}">
        <Grid x:Name="grid" Margin="-1,0,0,0">
            <Grid Margin="3">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <Rectangle StrokeThickness="1"
                           Stroke="DarkGray"
                           Fill="{Binding Brush}"
                           Width="40"
                           Height="14" />
                <TextBlock Text="{Binding Name}"
                           Grid.Column="1"
                           Margin="6,0,0,0"
                           HorizontalAlignment="Left"
                           VerticalAlignment="Center" />
            </Grid>
        </Grid>
    </DataTemplate>

</ResourceDictionary>