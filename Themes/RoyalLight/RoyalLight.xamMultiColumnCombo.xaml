<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:PresentationOptions="http://schemas.microsoft.com/winfx/2006/xaml/presentation/options"
                    xmlns:System="clr-namespace:System;assembly=mscorlib"
                    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                    xmlns:igControlsPrim="http://schemas.infragistics.com/xaml/primitives"
                    xmlns:igPrimBase="http://schemas.infragistics.com/xaml/primitives"
                    xmlns:igShared="http://schemas.infragistics.com/xaml"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    mc:Ignorable="PresentationOptions d">

  <!--  *********************************  RESOURCES  *********************************  -->
  <ResourceDictionary.MergedDictionaries>  
    <ResourceDictionary Source="RoyalLight.Styles.xaml" />
  </ResourceDictionary.MergedDictionaries>

  <!--  *********************************  BRUSHES  *********************************  -->
  <!--  Header Brushes  -->
  <SolidColorBrush x:Key="HeaderBackgroundBrush" Color="{StaticResource Color_002}" />
  <SolidColorBrush x:Key="HeaderBorderBrush" Color="{StaticResource Color_009}" />
  <SolidColorBrush x:Key="HeaderHoverBackgroundBrush" Color="{StaticResource Color_002}" />
  <SolidColorBrush x:Key="HeaderHoverForegroundBrush" Color="{StaticResource Color_014}" />
  <SolidColorBrush x:Key="HeaderForegroundBrush" Color="{StaticResource Color_001}" />

  <!--  Cell Brushes  -->
  <SolidColorBrush x:Key="CellForegroundBrush" Color="{StaticResource Color_001}" />
  <SolidColorBrush x:Key="CellItemBackgroundBrush" Color="{StaticResource Color_002}" />
  <SolidColorBrush x:Key="CellItemBorderBrush" Color="{StaticResource Color_003}" />
  <SolidColorBrush x:Key="CellItemSelectedBackgroundBrush" Color="{StaticResource Color_011}" />
  <SolidColorBrush x:Key="CellItemHoverBackgroundBrush" Color="{StaticResource Color_008}" />
  <SolidColorBrush x:Key="CellItemFocusBackgroundBrush"  Color="{StaticResource Color_011}" Opacity="0.1"/>
  <SolidColorBrush x:Key="CellItemFocusBorderBrush" Color="{StaticResource Color_013}" />

  <!--  Popup Resizer Brushes  -->
  <SolidColorBrush x:Key="PopupResizerBorderBrush" Color="{StaticResource Color_008}" />
  <SolidColorBrush x:Key="PopupResizerBackgroundBrush" Color="{StaticResource Color_003}" />
  <SolidColorBrush x:Key="PopupResizerHoverBorderBrush" Color="{StaticResource Color_009}" />
  <SolidColorBrush x:Key="PopupResizerHoverBackgroundBrush" Color="{StaticResource Color_008}" />
  <SolidColorBrush x:Key="PopupResizerPressedBrush" Color="{StaticResource Color_011}" />

  <!--  MultiColumnComboEditor Brushes  -->
  <SolidColorBrush x:Key="ClearSelectionBackgroundBrush" Color="{StaticResource Color_046}" />
  <SolidColorBrush x:Key="CaretForegroundBrush" Color="{StaticResource Color_001}" />

  <SolidColorBrush x:Key="HighlightingTextBlockBackgroundBrush" Color="{StaticResource Color_011}" Opacity="0.4" />


  <!--  *********************************  Generic Variables  *********************************  -->
  <Thickness x:Key="ComboCellHeaderBorderThickness">0,0,0,2</Thickness>
  <Thickness x:Key="ComboCellBorderThickness">0,0,0,1</Thickness>
  <System:Double x:Key="ComboCellBorderMouseOverThickness">0</System:Double>
  <System:Double x:Key="ComboCellBorderSelectedThickness">0</System:Double>
  <Thickness x:Key="ComboCellBorderFocusThickness">0</Thickness>

  <!--  ToggleButton Width for EditorItem  -->
  <System:Double x:Key="ToggleButtonWidth">24</System:Double>

  <!--  *********************************  Popup Style  *********************************  -->
  <Style x:Key="PopupStyle" TargetType="Popup">
    <Setter Property="AllowsTransparency" Value="True" />
  </Style>

  <!--  *********************************  Converters  *********************************  -->
  <igPrimBase:ValueConverterGroup x:Key="boolToVisibility">
    <!--  if true sets visibility to Visible  -->
    <igPrimBase:FixedValueConverter>
      <igPrimBase:FixedValueConverter.SourceValue>
        <System:Boolean>
          True
        </System:Boolean>
      </igPrimBase:FixedValueConverter.SourceValue>
      <igPrimBase:FixedValueConverter.DestinationValue>
        <Visibility>
          Visible
        </Visibility>
      </igPrimBase:FixedValueConverter.DestinationValue>
    </igPrimBase:FixedValueConverter>
    <!--  if false sets visibility to Collapsed  -->
    <igPrimBase:FixedValueConverter>
      <igPrimBase:FixedValueConverter.DestinationValue>
        <Visibility>
          Collapsed
        </Visibility>
      </igPrimBase:FixedValueConverter.DestinationValue>
    </igPrimBase:FixedValueConverter>
  </igPrimBase:ValueConverterGroup>

  <!--  *********************************  Cross Template  *********************************  -->
  <ControlTemplate x:Key="CrossTemplate">
    <Grid>
      <!--  The button's background needs to be transparent to make it clickable  -->
      <Rectangle x:Name="background"
                 Width="{TemplateBinding Width}"
                 Height="{TemplateBinding Height}"
                 Fill="{StaticResource ClearSelectionBackgroundBrush}" />
      <!--  This is the "X" for the button  -->
      <Path x:Name="Cross"
            Width="10"
            Height="10"
            Data="{StaticResource CloseIcon}"
            Fill="{StaticResource GlyphBackgroundBrush}"
            Opacity="1"
            Stretch="Fill"
            UseLayoutRounding="False"
            IsHitTestVisible="False"/>
    </Grid>
    <ControlTemplate.Triggers>
      <Trigger Property="IsMouseOver" Value="True">
        <Setter TargetName="Cross" Property="Fill" Value="{StaticResource GlyphDeleteIconBackgroundBrush}" />
      </Trigger>
      <Trigger Property="IsEnabled" Value="False">
        <Setter TargetName="Cross" Property="Opacity" Value="0.3" />
      </Trigger>
      <DataTrigger Binding="{Binding IsOpen, ElementName=Popup}" Value="True">
        <Setter TargetName="Cross" Property="Fill" Value="{StaticResource GlyphActiveBackgroundBrush}" />
      </DataTrigger>
      <MultiDataTrigger>
        <MultiDataTrigger.Conditions>
          <Condition  Binding="{Binding IsOpen, ElementName=Popup}" Value="True"/>
          <Condition  Binding="{Binding IsMouseOver, ElementName=background}" Value="True"/>
        </MultiDataTrigger.Conditions>
        <Setter TargetName="Cross" Property="Fill" Value="{StaticResource GlyphDeleteIconBackgroundBrush}" />
      </MultiDataTrigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>

  <!--  *********************************  MultiColumn Combo TextBox Style  *********************************  -->
  <Style x:Key="MultiColumnComboTextBoxStyle" TargetType="TextBox">
    <Setter Property="Background" Value="{StaticResource TransparentBrush}" />
    <Setter Property="CaretBrush" Value="{StaticResource CaretForegroundBrush}" />
    <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
    <Setter Property="FontFamily" Value="{StaticResource FontFamily}" />   
    <Setter Property="FontWeight" Value="{StaticResource FontNormal}" />
    <Setter Property="MinHeight" Value="{StaticResource DefaultMinHeight}" />
    <Setter Property="Padding" Value="{StaticResource TextBoxPadding}" />
    <Setter Property="SelectionBrush" Value="{StaticResource TextBoxFocusedBrush}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="TextBox">
          <Grid x:Name="RootElement" SnapsToDevicePixels="True">
            <Grid>
              <ScrollViewer x:Name="PART_ContentHost"
                            BorderThickness="0"
                            IsTabStop="False"
                            Padding="{TemplateBinding Padding}" />
            </Grid>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!--  ********************************* MultiColumn Combo ToggleButton Style   *********************************  -->
  <Style x:Key="MultiColumnComboToggleButtonStyle" TargetType="ToggleButton">
    <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
    <Setter Property="MinHeight" Value="{StaticResource DefaultMinHeight}" />
    <Setter Property="Padding" Value="2" />
    <Setter Property="Cursor" Value="Hand" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="ToggleButton">
          <Grid x:Name="Main">
            <Grid.ColumnDefinitions>
              <ColumnDefinition />
              <ColumnDefinition Width="24" />
            </Grid.ColumnDefinitions>
            <Rectangle x:Name="Bd"
                       Grid.ColumnSpan="2"
                       Fill="{StaticResource TransparentBrush}" />
            <Grid Grid.Column="1" HorizontalAlignment="Center">
              <Path x:Name="Arrow"
                    Width="7"
                    Height="4"
                    Data="{StaticResource DownArrow}"
                    Fill="{StaticResource GlyphBackgroundBrush}"
                    Stretch="Fill" />
              <Path x:Name="ArrowSelected"
                    Width="7"
                    Height="4"
                    Data="{StaticResource DownArrow}"
                    Fill="{StaticResource GlyphActiveBackgroundBrush}"
                    Stretch="Fill"
                    Visibility="Collapsed" />
            </Grid>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
              <Setter TargetName="Arrow" Property="Fill" Value="{StaticResource GlyphHoverBackgroundBrush}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
              <Setter TargetName="Arrow" Property="Fill" Value="{StaticResource GlyphActiveBackgroundBrush}" />
            </Trigger>
            <Trigger Property="IsChecked" Value="True">
              <Setter TargetName="Arrow" Property="Opacity" Value="0" />
              <Setter TargetName="ArrowSelected" Property="Visibility" Value="Visible" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!--  ******************************************* PopupResizer Style   *************************************  -->
  <Style x:Key="PopupResizerStyle" TargetType="igPrimBase:PopupResizer">
    <Setter Property="Background" Value="{StaticResource PopupResizerBackgroundBrush}" />
    <Setter Property="BorderBrush" Value="{StaticResource PopupResizerBorderBrush}" />
    <Setter Property="Height" Value="15" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igPrimBase:PopupResizer">
          <Border Height="{TemplateBinding Height}" >
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="FlowDirections">
                <VisualState x:Name="LTR" />
                <VisualState x:Name="RTL">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ResizeElem" Storyboard.TargetProperty="Cursor">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Cursor>SizeNESW</Cursor>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="AboveLTR">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ResizeElem" Storyboard.TargetProperty="Cursor">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Cursor>SizeNESW</Cursor>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="AboveRTL">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ResizeElem" Storyboard.TargetProperty="Cursor">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Cursor>SizeNWSE</Cursor>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="Position">
                <VisualState x:Name="Below" />
                <VisualState x:Name="Above">
                  <Storyboard>
                    <PointAnimationUsingKeyFrames Storyboard.TargetName="BelowPosition" Storyboard.TargetProperty="(UIElement.RenderTransformOrigin)">
                      <EasingPointKeyFrame KeyTime="0" Value="0.5,0.5" />
                    </PointAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="BelowPosition" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)">
                      <EasingDoubleKeyFrame KeyTime="0" Value="-1" />
                    </DoubleAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid>
              <Grid x:Name="BelowPosition" Margin="0">
                <Grid.RenderTransform>
                  <TransformGroup>
                    <ScaleTransform />
                    <SkewTransform />
                    <RotateTransform />
                    <TranslateTransform />
                  </TransformGroup>
                </Grid.RenderTransform>

                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="*" />
                  <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>

                <Border x:Name="resizer"
                        Grid.ColumnSpan="2"
                        Margin="0 -2 0 0"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="1" />

                <Border x:Name="ResizeElem"
                        Grid.Column="1"
                        VerticalAlignment="Bottom"
                        Background="{StaticResource TransparentBrush}"
                        BorderThickness="1"
                        Cursor="SizeNWSE">
                  <Grid x:Name="BelowDots"
                        Width="7"
                        Height="7"
                        Margin="0,0,2,2"
                        VerticalAlignment="Bottom">
                    <Rectangle x:Name="BelowDot1"
                               Width="2"
                               Height="2"
                               Margin="0,0,4,0"
                               HorizontalAlignment="Right"
                               VerticalAlignment="Bottom"
                               Fill="{TemplateBinding Foreground}" />
                    <Rectangle x:Name="BelowDot2"
                               Width="2"
                               Height="2"
                               HorizontalAlignment="Right"
                               VerticalAlignment="Bottom"
                               Fill="{TemplateBinding Foreground}" />
                    <Rectangle x:Name="BelowDot3"
                               Width="2"
                               Height="2"
                               Margin="0,0,0,4"
                               HorizontalAlignment="Right"
                               VerticalAlignment="Bottom"
                               Fill="{TemplateBinding Foreground}" />
                    <Rectangle x:Name="TouchableZone"
                               Grid.Column="1"
                               Margin="-20 -12 -12 -12"
                               Fill="{StaticResource TransparentBrush}" />
                  </Grid>
                </Border>
              </Grid>
            </Grid>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
              <Setter TargetName="resizer" Property="Background" Value="{StaticResource PopupResizerHoverBackgroundBrush}" />
              <Setter TargetName="resizer" Property="BorderBrush" Value="{StaticResource PopupResizerHoverBorderBrush}" />
              <Setter TargetName="BelowDot1" Property="Fill" Value="{StaticResource GlyphHoverBackgroundBrush}" />
              <Setter TargetName="BelowDot2" Property="Fill" Value="{StaticResource GlyphHoverBackgroundBrush}" />
              <Setter TargetName="BelowDot3" Property="Fill" Value="{StaticResource GlyphHoverBackgroundBrush}" />
            </Trigger>
            <Trigger Property="IsMouseCaptureWithin" Value="True">
              <Setter TargetName="resizer" Property="Background" Value="{StaticResource PopupResizerPressedBrush}" />
              <Setter TargetName="resizer" Property="BorderBrush" Value="{StaticResource PopupResizerPressedBrush}" />
              <Setter TargetName="BelowDot1" Property="Fill" Value="{StaticResource GlyphActiveBackgroundBrush}" />
              <Setter TargetName="BelowDot2" Property="Fill" Value="{StaticResource GlyphActiveBackgroundBrush}" />
              <Setter TargetName="BelowDot3" Property="Fill" Value="{StaticResource GlyphActiveBackgroundBrush}" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!--  *********************************  XamMultiColumnComboEditor Style  *********************************  -->
  <Style x:Key="XamMultiColumnComboEditorStyle" TargetType="igShared:XamMultiColumnComboEditor">
    <Setter Property="FontFamily" Value="{StaticResource FontFamily}" />
    <Setter Property="FontSize" Value="{StaticResource FontSize}" />
    <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
    <Setter Property="Background" Value="{StaticResource TextBoxBackgroundBrush}" />
    <Setter Property="BorderBrush" Value="{StaticResource TextBoxBorderBrush}" />
    <Setter Property="BorderThickness" Value="{StaticResource DefaultBorderThickness}" />
    <Setter Property="Padding" Value="{StaticResource DefaultPadding}" />
    <Setter Property="MinHeight" Value="24" />
    <Setter Property="MinDropDownHeight" Value="30" />
    <Setter Property="HorizontalContentAlignment" Value="Left" />
    <Setter Property="VerticalContentAlignment" Value="Stretch" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igShared:XamMultiColumnComboEditor">
          <Grid x:Name="main" igPrimBase:XamlHelper.SnapsToDevicePixels="True">
            <Grid.Resources>
              <Style BasedOn="{StaticResource CheckBoxStyle}" TargetType="CheckBox" />
            </Grid.Resources>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="MouseOver"/>
                <VisualState x:Name="Disabled">
                  <Storyboard>
                    <DoubleAnimation Duration="0" Storyboard.TargetName="main" Storyboard.TargetProperty="Opacity" To="0.3" />
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="FocusStates">
                <VisualState x:Name="Focused"/>
                <VisualState x:Name="Unfocused" />
              </VisualStateGroup>
              <VisualStateGroup x:Name="ModeStates">
                <VisualState x:Name="Selectable" />
                <VisualState x:Name="Editable"/>
              </VisualStateGroup>
              <VisualStateGroup x:Name="WaterMarkStates">
                <VisualState x:Name="WaterMarkHidden" />
                <VisualState x:Name="WaterMarkVisible">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="WaterMark" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="DropDownStates">
                <VisualState x:Name="Closed" />
                <VisualState x:Name="Open">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Popup" Storyboard.TargetProperty="IsOpen">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <System:Boolean>True</System:Boolean>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="border" Storyboard.TargetProperty="Stroke">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ComboBoxToggleButtonPressedBackgroundBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="border" Storyboard.TargetProperty="Fill">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ComboBoxToggleButtonPressedBackgroundBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="ValidationStates">
                <VisualState x:Name="Valid" />
                <VisualState x:Name="InvalidUnfocused">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ValidationErrorElement" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="InvalidFocused">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ValidationErrorElement" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <!--<ObjectAnimationUsingKeyFrames Storyboard.TargetName="validationTooltip" Storyboard.TargetProperty="IsOpen">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <System:Boolean>True</System:Boolean>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>-->
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="InvalidMouseOver">
                    <Storyboard>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="ValidationErrorElement">
                            <DiscreteObjectKeyFrame KeyTime="0">
                                <DiscreteObjectKeyFrame.Value>
                                    <Visibility>Visible</Visibility>
                                </DiscreteObjectKeyFrame.Value>
                            </DiscreteObjectKeyFrame>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="IsOpen" Storyboard.TargetName="validationTooltip">
                            <DiscreteObjectKeyFrame KeyTime="0:0:0.001">
                                <DiscreteObjectKeyFrame.Value>
                                    <System:Boolean>True</System:Boolean>
                                </DiscreteObjectKeyFrame.Value>
                            </DiscreteObjectKeyFrame>
                        </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="PositionStates">
                <VisualState x:Name="Below" />
                <VisualState x:Name="Above">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Resizer" Storyboard.TargetProperty="Position">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <igPrimBase:ResizerPosition>Above</igPrimBase:ResizerPosition>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Resizer" Storyboard.TargetProperty="(Grid.Row)">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <System:Int32>0</System:Int32>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="RootPopupElement" Storyboard.TargetProperty="(Grid.Row)">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <System:Int32>1</System:Int32>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Border x:Name="ContentPresenterBorder" Background="{TemplateBinding Background}">
              <Grid x:Name="gridLayout" ShowGridLines="False">
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="*" />
                  <ColumnDefinition Width="Auto" />
                  <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <Popup x:Name="Popup"
                       Grid.ColumnSpan="2"
                       VerticalAlignment="Bottom"
                       IsOpen="False"
                       Style="{StaticResource PopupStyle}">
                  <Grid>
                    <Grid.RowDefinitions>
                      <RowDefinition Height="*" />
                      <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    <Border x:Name="RootPopupElement"
                            Height="Auto"
                            MinHeight="{TemplateBinding MinDropDownHeight}"
                            MaxWidth="{TemplateBinding MaxDropDownWidth}"
                            MaxHeight="{TemplateBinding MaxDropDownHeight}"
                            HorizontalAlignment="Stretch"
                            Background="{StaticResource PopupBackgroundBrush}"
                            BorderBrush="{StaticResource PopupBorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                      <Grid>
                        <Grid.ColumnDefinitions>
                          <ColumnDefinition Width="*" />
                          <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                          <RowDefinition Height="Auto" />
                          <RowDefinition Height="*" />
                          <RowDefinition Height="Auto" />
                          <RowDefinition Height="Auto" />
                          <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <igPrimBase:MultiColumnComboItemsPanel x:Name="ItemsPanel"
                                                               Grid.Row="1"
                                                               VerticalAlignment="Top" />
                        <ScrollBar x:Name="VerticalScrollBar"
                                   Grid.Row="1"
                                   Grid.Column="1"
                                   Style="{StaticResource ScrollBarStyle}" />
                        <ScrollBar x:Name="HorizontalScrollBar"
                                   Grid.Row="2"
                                   Grid.Column="0"
                                   Style="{StaticResource ScrollBarStyle}" />
                        <ContentControl x:Name="FooterContentArea"
                                        Grid.Row="3"
                                        Grid.ColumnSpan="2"
                                        HorizontalContentAlignment="Stretch"
                                        Content="{TemplateBinding Footer}"
                                        ContentTemplate="{TemplateBinding FooterTemplate}" />
                      </Grid>
                    </Border>
                    <igPrimBase:PopupResizer x:Name="Resizer"
                                             Grid.Row="1"
                                             Grid.ColumnSpan="2"
                                             Popup="{Binding ElementName=Popup}"
                                             ResizeElement="{Binding ElementName=RootPopupElement}"
                                             Style="{StaticResource PopupResizerStyle}"
                                             Visibility="{Binding AllowDropDownResizing, Converter={StaticResource boolToVisibility}, RelativeSource={RelativeSource TemplatedParent}}" />
                  </Grid>
                </Popup>
                <Rectangle x:Name="border"
                           Grid.ColumnSpan="3"
                           Margin="0"
                           IsHitTestVisible="false"
                           Stroke="{StaticResource TextBoxBorderBrush}"
                           Fill="{StaticResource TextBoxBackgroundBrush}"
                           StrokeThickness="{StaticResource DefaultStrokeThickness}"
                           RadiusX="{StaticResource RadiusXY}"
                           RadiusY="{StaticResource RadiusXY}"/>
                <Rectangle x:Name="FocusVisualElement"
                           Grid.ColumnSpan="3"
                           Margin="0"
                           IsHitTestVisible="false"
                           Opacity="0"
                           Stroke="{StaticResource TextBoxFocusedBrush}"
                           StrokeThickness="{StaticResource DefaultStrokeThickness}"
                           RadiusX="{StaticResource RadiusXY}"
                           RadiusY="{StaticResource RadiusXY}"/>
                <TextBlock x:Name="WaterMark"
                           HorizontalAlignment="Stretch"
                           VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                           Foreground="{TemplateBinding Foreground}"
                           IsHitTestVisible="False"
                           Padding="{TemplateBinding Padding}"
                           Text="{TemplateBinding EmptyText}"
                           Visibility="Collapsed" />
                <igPrimBase:SpecializedTextBox x:Name="TextBoxPresenter"
                                               Grid.ColumnSpan="3"
                                               HorizontalAlignment="Stretch"
                                               VerticalAlignment="Center"
                                               BorderBrush="{StaticResource TransparentBrush}"
                                               CaretBrush="{StaticResource CaretForegroundBrush}"
                                               Foreground="{TemplateBinding Foreground}"
                                               IsTabStop="{TemplateBinding IsTabStop}"
                                               Padding="6,4,50,2"
                                               Style="{StaticResource MultiColumnComboTextBoxStyle}"
                                               Visibility="Collapsed" />
                <StackPanel x:Name="MultiSelectContentPanel"
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            Orientation="Horizontal" />
                <ToggleButton x:Name="ToggleButton"
                              Grid.Column="1"
                              Width="{StaticResource ToggleButtonWidth}"
                              igPrimBase:XamlHelper.Focusable="False"
                              IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                              IsTabStop="False"
                              Style="{StaticResource MultiColumnComboToggleButtonStyle}"
                              BorderBrush="{StaticResource TransparentBrush}"
                              BorderThickness="0"/>
                <Button Grid.Column="1"
                        Width="22"
                        Height="22"
                        HorizontalAlignment="Right"
                        VerticalAlignment="Center"
                        igPrimBase:XamlHelper.Focusable="False"
                        Background="{StaticResource TransparentBrush}"
                        ClickMode="Press"
                        Cursor="Hand"
                        IsEnabled="False"
                        Template="{StaticResource CrossTemplate}"
                        Visibility="{TemplateBinding SelectedItemsResetButtonVisibility}">
                  <igShared:Commanding.Command>
                    <igPrimBase:MultiColumnComboEditorCommandSource CommandType="ClearSelection" EventName="Click" />
                  </igShared:Commanding.Command>
                  <ToolTipService.ToolTip>
                    <ToolTip Content="{Binding LocalizedStrings[SelectedItemsResetButton_ToolTip], RelativeSource={RelativeSource TemplatedParent}}" />
                  </ToolTipService.ToolTip>
                </Button>
              </Grid>
            </Border>
            <Border x:Name="ValidationErrorElement"
                    BorderBrush="{StaticResource ValidationErrorElement}"
                    BorderThickness="{StaticResource DefaultBorderThickness}"
                    Visibility="Collapsed">
              <ToolTipService.ToolTip>
                <ToolTip x:Name="validationTooltip"
                         DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                         Placement="Right"
                         PlacementTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                         Template="{StaticResource ValidationToolTipTemplate}" />
              </ToolTipService.ToolTip>
              <Grid Width="12"
                    Height="12"
                    Margin="1,-4,-4,0"
                    HorizontalAlignment="Right"
                    VerticalAlignment="Top"
                    Background="{StaticResource TransparentBrush}">
                <Path Margin="1,3,0,0"
                      Data="M 1,0 L6,0 A 2,2 90 0 1 8,2 L8,7 z"
                      Fill="{StaticResource ValidationErrorElement}" />
              </Grid>
            </Border>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="IsDropDownOpen" Value="True">
              <Setter TargetName="TextBoxPresenter" Property="Padding"  Value="5,4,50,2 " />
              <Setter TargetName="TextBoxPresenter" Property="Foreground"  Value="{StaticResource ActiveForegroundBrush}" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
              <Setter TargetName="TextBoxPresenter" Property="Padding"  Value="6,4,50,2 " />
              <Setter TargetName="border" Property="Stroke" Value="{StaticResource TextBoxHoverBorderBrush}" />
              <Setter TargetName="border" Property="Fill" Value="{StaticResource TextBoxHoverBackgroundBrush}" />
            </Trigger>
            <DataTrigger Binding="{Binding IsFocused, ElementName=TextBoxPresenter}" Value="True">
              <Setter TargetName="border" Property="Stroke" Value="{StaticResource TextBoxFocusedBrush}" />
            </DataTrigger>
            <Trigger Property="IsEditableResolved" Value="True">
              <Setter TargetName="TextBoxPresenter" Property="Visibility" Value="Visible" />
              <Setter TargetName="MultiSelectContentPanel" Property="Visibility" Value="Collapsed" />
              <Setter TargetName="ToggleButton" Property="Grid.Column" Value="2" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style BasedOn="{StaticResource XamMultiColumnComboEditorStyle}" TargetType="igShared:XamMultiColumnComboEditor" />

  <!--  *********************************  ComboHeaderCellControl Style  *********************************  -->
  <Style x:Key="ComboHeaderCellControlStyle" TargetType="igShared:ComboHeaderCellControl">
    <Setter Property="FontFamily" Value="{StaticResource FontFamily}" />
    <Setter Property="FontSize" Value="{StaticResource FontSize}" />
    <Setter Property="FontWeight" Value="{StaticResource FontSemiBold}" />
    <Setter Property="Foreground" Value="{StaticResource HeaderForegroundBrush}" />
    <Setter Property="Background" Value="{StaticResource HeaderBackgroundBrush}" />
    <Setter Property="BorderBrush" Value="{StaticResource HeaderBorderBrush}" />
    <Setter Property="BorderThickness" Value="{StaticResource ComboCellHeaderBorderThickness}" />
    <Setter Property="Padding" Value="{StaticResource GridHeaderPadding}" />
    <Setter Property="MinHeight" Value="28" />
    <Setter Property="HorizontalContentAlignment" Value="Left" />
    <Setter Property="VerticalContentAlignment" Value="Center" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igShared:ComboHeaderCellControl">
          <Grid  igPrimBase:XamlHelper.SnapsToDevicePixels="True">
            <Border x:Name="Bd"
                    Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}" />
            <ContentPresenter x:Name="contentPresenter"
                              Margin="{TemplateBinding Padding}"
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                              Content="{TemplateBinding Content}"
                              ContentTemplate="{TemplateBinding ContentTemplate}" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Style.Triggers>
      <Trigger Property="IsMouseOver" Value="True">
        <Setter Property="Foreground" Value="{StaticResource HeaderHoverForegroundBrush}" />
      </Trigger>
    </Style.Triggers>
  </Style>
  <Style BasedOn="{StaticResource ComboHeaderCellControlStyle}" TargetType="igShared:ComboHeaderCellControl" />

  <!--  *********************************  ComboCellControl Style  *********************************  -->
  <Style x:Key="ComboCellControlStyle" TargetType="igShared:ComboCellControl">
    <Setter Property="FontFamily" Value="{StaticResource FontFamily}" />
    <Setter Property="FontSize" Value="{StaticResource FontSize}" />
    <Setter Property="Foreground" Value="{StaticResource CellForegroundBrush}" />
    <Setter Property="Background" Value="{StaticResource CellItemBackgroundBrush}" />
    <Setter Property="BorderBrush" Value="{StaticResource CellItemBorderBrush}" />
    <Setter Property="BorderThickness" Value="{StaticResource ComboCellBorderThickness}" />
    <Setter Property="Padding" Value="{StaticResource GridCellPadding}" />
    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
    <Setter Property="VerticalContentAlignment" Value="Center" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igShared:ComboCellControl">
          <Grid x:Name="main" Background="{TemplateBinding Background}" igPrimBase:XamlHelper.SnapsToDevicePixels="True">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="MouseOver">
                  <Storyboard>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="mouseOverRectangle" Storyboard.TargetProperty="Opacity">
                      <SplineDoubleKeyFrame KeyTime="0" Value="1" />
                    </DoubleAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Disabled">
                  <Storyboard>
                    <DoubleAnimation Duration="0" Storyboard.TargetName="main" Storyboard.TargetProperty="Opacity" To="0.3" />
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="SelectionStates">
                <VisualState x:Name="Unselected" />
                <VisualState x:Name="Selected">
                  <Storyboard>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="selectedRectangle" Storyboard.TargetProperty="Opacity">
                      <SplineDoubleKeyFrame KeyTime="0" Value="1" />
                    </DoubleAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="contentControl" Storyboard.TargetProperty="Foreground">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ActiveForegroundBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="FocusStates">
                <VisualState x:Name="Focused">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="FocusVisualElement" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Unfocused" />
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Border x:Name="Bd"
                    igPrimBase:XamlHelper.SnapsToDevicePixels="True"
                    Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}" />
            <Border x:Name="FocusVisualElement"
                    Background="{StaticResource CellItemFocusBackgroundBrush}"
                    BorderBrush="{StaticResource CellItemFocusBorderBrush}"
                    BorderThickness="{StaticResource ComboCellBorderFocusThickness}"
                    Visibility="Collapsed" />
            <Rectangle x:Name="mouseOverRectangle"
                       Fill="{StaticResource CellItemHoverBackgroundBrush}"
                       IsHitTestVisible="False"
                       Opacity="0" />
            <Rectangle x:Name="selectedRectangle"
                       Fill="{StaticResource CellItemSelectedBackgroundBrush}"
                       IsHitTestVisible="False"
                       Opacity="0" />
            <ContentControl x:Name="contentControl"
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            Foreground="{TemplateBinding Foreground}">
              <ContentPresenter x:Name="contentPresenter"
                                Content="{TemplateBinding Content}"
                                ContentTemplate="{TemplateBinding ContentTemplate}" />
            </ContentControl>
          </Grid>
          <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding Opacity, ElementName=selectedRectangle}" Value="1">
              <Setter Property="Foreground" Value="{StaticResource ActiveForegroundBrush}" />
            </DataTrigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style BasedOn="{StaticResource ComboCellControlStyle}" TargetType="igShared:ComboCellControl" />

  <!--  *********************************  RowSelectionCheckBoxCellControl Style  *********************************  -->
  <Style x:Key="RowSelectionCheckBoxCellControlStyle" TargetType="igShared:RowSelectionCheckBoxCellControl">
    <Setter Property="Background" Value="{StaticResource CellItemBackgroundBrush}" />
    <Setter Property="BorderBrush" Value="{StaticResource CellItemBorderBrush}" />
    <Setter Property="BorderThickness" Value="{StaticResource ComboCellBorderThickness}" />
    <Setter Property="Padding" Value="{StaticResource DefaultPadding}" />
    <Setter Property="HorizontalContentAlignment" Value="Center" />
    <Setter Property="VerticalContentAlignment" Value="Center" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igShared:RowSelectionCheckBoxCellControl">
          <Grid x:Name="Bg" Background="{TemplateBinding Background}">
            <CheckBox x:Name="Checkbox"
                      Margin="{TemplateBinding Padding}"
                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                      IsHitTestVisible="False" />
          </Grid>
          <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding ElementName=Checkbox, Path=IsChecked}" Value="True">
              <Setter TargetName="Bg" Property="Background" Value="{StaticResource CellItemSelectedBackgroundBrush}" />
            </DataTrigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style BasedOn="{StaticResource RowSelectionCheckBoxCellControlStyle}" TargetType="igShared:RowSelectionCheckBoxCellControl" />

  <!--  *********************************  RowSelectionCheckBoxHeaderCellControl Style  *********************************  -->
  <Style x:Key="RowSelectionCheckBoxHeaderCellControlStyle" TargetType="igShared:RowSelectionCheckBoxHeaderCellControl">
    <Setter Property="Background" Value="{StaticResource HeaderBackgroundBrush}" />
    <Setter Property="Padding" Value="{StaticResource DefaultPadding}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igShared:RowSelectionCheckBoxHeaderCellControl">
          <Grid>
            <Rectangle Fill="{TemplateBinding Background}" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style BasedOn="{StaticResource RowSelectionCheckBoxHeaderCellControlStyle}" TargetType="igShared:RowSelectionCheckBoxHeaderCellControl" />

  <!--  *********************************  HighlightingTextBlock Style  *********************************  -->
  <Style x:Key="HighlightingTextBlockStyle" TargetType="igControlsPrim:HighlightingTextBlock">
    <Setter Property="Highlight" Value="{StaticResource HighlightingTextBlockBackgroundBrush}"/>
    <!--<Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />-->
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igControlsPrim:HighlightingTextBlock">
          <Grid>
            <TextBlock x:Name="TextBlock" Foreground="{TemplateBinding Foreground}"/>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style BasedOn="{StaticResource HighlightingTextBlockStyle}" TargetType="igControlsPrim:HighlightingTextBlock" />
</ResourceDictionary>