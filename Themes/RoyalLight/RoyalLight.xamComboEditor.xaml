<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:System="clr-namespace:System;assembly=mscorlib"
                    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                    xmlns:ig="http://schemas.infragistics.com/xaml"
                    xmlns:igPrim="http://schemas.infragistics.com/xaml/primitives"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    mc:Ignorable="d">

  <!--  *********************************  RESOURCES  *********************************  -->
  <ResourceDictionary.MergedDictionaries>  
    <ResourceDictionary Source="RoyalLight.Styles.xaml" />
  </ResourceDictionary.MergedDictionaries>

  <!--  *********************************  BRUSHES  *********************************  -->
  <!--  Popup Resizer Brushes  -->
  <SolidColorBrush x:Key="PopupResizerBorderBrush" Color="{StaticResource Color_008}" />
  <SolidColorBrush x:Key="PopupResizerBackgroundBrush" Color="{StaticResource Color_003}" />

  <!--  *********************************  Converters  *********************************  -->
  <igPrim:ValueConverterGroup x:Key="boolToVisibility">
    <!--  if true sets visibility to Visible  -->
    <igPrim:FixedValueConverter>
      <igPrim:FixedValueConverter.SourceValue>
        <System:Boolean>
          True
        </System:Boolean>
      </igPrim:FixedValueConverter.SourceValue>
      <igPrim:FixedValueConverter.DestinationValue>
        <Visibility>
          Visible
        </Visibility>
      </igPrim:FixedValueConverter.DestinationValue>
    </igPrim:FixedValueConverter>
    <!--  if false sets visibility to Collapsed  -->
    <igPrim:FixedValueConverter>
      <igPrim:FixedValueConverter.DestinationValue>
        <Visibility>
          Collapsed
        </Visibility>
      </igPrim:FixedValueConverter.DestinationValue>
    </igPrim:FixedValueConverter>
  </igPrim:ValueConverterGroup>

  <!--  *********************************  TextBox Style  *********************************  -->
  <Style x:Key="SpecializedTextBoxStyle" TargetType="TextBox">
    <Setter Property="Background" Value="{StaticResource TransparentBrush}" />
    <Setter Property="BorderBrush" Value="{StaticResource TransparentBrush}" />
    <Setter Property="BorderThickness" Value="{StaticResource DefaultBorderThickness}" />
    <Setter Property="CaretBrush" Value="{StaticResource CaretForegroundBrush}" />
    <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
    <Setter Property="FontFamily" Value="{StaticResource FontFamily}" />
    <Setter Property="FontSize" Value="{StaticResource FontSize}" />
    <Setter Property="FontWeight" Value="{StaticResource FontNormal}" />
    <Setter Property="MinHeight" Value="{StaticResource DefaultMinHeight}" />
    <Setter Property="Padding" Value="{StaticResource TextBoxPadding}" />
    <Setter Property="SelectionBrush" Value="{StaticResource TextBoxFocusedBrush}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="TextBox">
          <Grid x:Name="RootElement" SnapsToDevicePixels="True">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="MouseOver"/>
                <VisualState x:Name="Disabled"/>
                <VisualState x:Name="ReadOnly">
                  <Storyboard>
                    <DoubleAnimation Duration="0" Storyboard.TargetName="ReadOnlyVisualElement" Storyboard.TargetProperty="Opacity" To="1" />
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="FocusStates">
                <VisualState x:Name="Focused"/>
                <VisualState x:Name="Unfocused"/>
              </VisualStateGroup>
              <VisualStateGroup x:Name="ValidationStates">
                <VisualState x:Name="Valid" />
                <VisualState x:Name="InvalidUnfocused">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ValidationErrorElement" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="InvalidFocused">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ValidationErrorElement" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid>
              <Border x:Name="Border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{StaticResource CornerRadius}" Opacity="1" />
              <Border x:Name="DisabledVisualElement" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{StaticResource CornerRadius}" IsHitTestVisible="False" Opacity="0" />
              <Border x:Name="ReadOnlyVisualElement" Background="{StaticResource TextBoxReadOnlyBackgroundBrush}" BorderBrush="{StaticResource TextBoxReadOnlyBorderBrush}" CornerRadius="{StaticResource CornerRadius}" Opacity="0" />
              <ScrollViewer x:Name="PART_ContentHost" BorderThickness="0" IsTabStop="False" Padding="{TemplateBinding Padding}" />
            </Grid>
            <Border x:Name="FocusVisualElement" BorderBrush="{StaticResource TextBoxFocusedBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{StaticResource CornerRadius}" IsHitTestVisible="False" Opacity="0" />
            <Border x:Name="ValidationErrorElement" BorderBrush="{StaticResource ValidationErrorElement}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{StaticResource CornerRadius}" Visibility="Collapsed">
              <ToolTipService.ToolTip>
                <ToolTip x:Name="validationTooltip" DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}" Placement="Right" PlacementTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}" Template="{StaticResource TextBoxValidationToolTipTemplate}" />
              </ToolTipService.ToolTip>
              <Grid Width="12" Height="12" Margin="1,-4,-4,0" HorizontalAlignment="Right" VerticalAlignment="Top" Background="Transparent">
                <Path Margin="1,3,0,0" Data="M 1,0 L6,0 A 2,2 90 0 1 8,2 L8,7 z" Fill="{StaticResource ValidationErrorElement}" />
                <Path Margin="1,3,0,0" Data="M 0,0 L2,0 L 8,6 L8,8" Fill="{StaticResource ActiveForegroundBrush}" />
              </Grid>
            </Border>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="Validation.ErrorTemplate" Value="{StaticResource TextBoxValidationToolTipTemplate}" />
  </Style>

  <Style x:Key="ComboEditorTextBoxStyle" TargetType="TextBox">
    <Setter Property="Background" Value="{StaticResource TextBoxBackgroundBrush}" />
    <Setter Property="BorderBrush" Value="{StaticResource TextBoxBorderBrush}" />
    <Setter Property="BorderThickness" Value="{StaticResource DefaultBorderThickness}" />
    <Setter Property="CaretBrush" Value="{StaticResource CaretForegroundBrush}" />
    <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
    <Setter Property="FontFamily" Value="{StaticResource FontFamily}" />
    <Setter Property="FontSize" Value="{StaticResource FontSize}" />
    <Setter Property="FontWeight" Value="{StaticResource FontNormal}" />
    <Setter Property="MinHeight" Value="{StaticResource DefaultMinHeight}" />
    <Setter Property="Padding" Value="{StaticResource TextBoxPadding}" />
    <Setter Property="SelectionBrush" Value="{StaticResource TextBoxFocusedBrush}" />
  </Style>

  <!--  *********************************  ComboEditorToggleButton Style   *********************************  -->
  <Style x:Key="ComboEditorToggleButtonStyle" TargetType="ToggleButton">
    <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
    <Setter Property="MinHeight" Value="{StaticResource DefaultMinHeight}" />
    <Setter Property="Padding" Value="2" />
    <Setter Property="Cursor" Value="Hand" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="ToggleButton">
          <Grid x:Name="Main">
            <Grid.ColumnDefinitions>
              <ColumnDefinition />
              <ColumnDefinition Width="23" />
            </Grid.ColumnDefinitions>
            <Rectangle x:Name="Bd"
                       Grid.ColumnSpan="2"
                       Fill="{StaticResource TransparentBrush}" />
            <Grid Grid.Column="1" HorizontalAlignment="Center">
              <Path x:Name="Arrow"
                    Width="7"
                    Height="4"
                    Data="{StaticResource DownArrow}"
                    Fill="{StaticResource GlyphBackgroundBrush}"
                    Stretch="Fill" />
              <Path x:Name="ArrowSelected"
                    Width="7"
                    Height="4"
                    Data="{StaticResource DownArrow}"
                    Fill="{StaticResource GlyphActiveBackgroundBrush}"
                    Stretch="Fill"
                    Visibility="Collapsed" />
            </Grid>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
              <Setter TargetName="Arrow" Property="Fill" Value="{StaticResource GlyphHoverBackgroundBrush}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
              <Setter TargetName="Arrow" Property="Fill" Value="{StaticResource GlyphActiveBackgroundBrush}" />
            </Trigger>
            <Trigger Property="IsChecked" Value="True">
              <Setter TargetName="ArrowSelected" Property="Visibility" Value="Visible" />
              <Setter TargetName="Arrow" Property="Visibility" Value="Collapsed" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!--  ******************************************* PopupResizer Style   *************************************  -->
  <Style x:Key="PopupResizerStyle" TargetType="igPrim:PopupResizer">
    <Setter Property="Background" Value="{StaticResource ForegroundBrush}" />
    <Setter Property="BorderBrush" Value="{StaticResource PopupResizerBorderBrush}" />
    <Setter Property="Background" Value="{StaticResource PopupResizerBackgroundBrush}" />
    <Setter Property="Height" Value="15" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igPrim:PopupResizer">
          <Border Height="{TemplateBinding Height}">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="FlowDirections">
                <VisualState x:Name="LTR" />
                <VisualState x:Name="RTL">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ResizeElem" Storyboard.TargetProperty="Cursor">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Cursor>SizeNESW</Cursor>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="AboveLTR">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ResizeElem" Storyboard.TargetProperty="Cursor">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Cursor>SizeNESW</Cursor>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="AboveRTL">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ResizeElem" Storyboard.TargetProperty="Cursor">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Cursor>SizeNWSE</Cursor>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="Position">
                <VisualState x:Name="Below" />
                <VisualState x:Name="Above">
                  <Storyboard>
                    <PointAnimationUsingKeyFrames Storyboard.TargetName="BelowPosition" Storyboard.TargetProperty="(UIElement.RenderTransformOrigin)">
                      <EasingPointKeyFrame KeyTime="0" Value="0.5,0.5" />
                    </PointAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="BelowPosition" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)">
                      <EasingDoubleKeyFrame KeyTime="0" Value="-1" />
                    </DoubleAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid>
              <Grid x:Name="BelowPosition" Margin="0">
                <Grid.RenderTransform>
                  <TransformGroup>
                    <ScaleTransform />
                    <SkewTransform />
                    <RotateTransform />
                    <TranslateTransform />
                  </TransformGroup>
                </Grid.RenderTransform>

                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="*" />
                  <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>

                <Border x:Name="resizer"
                        Grid.ColumnSpan="2"
                        Margin="0 -2 0 0"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="1" />

                <Border x:Name="ResizeElem"
                        Grid.Column="1"
                        VerticalAlignment="Bottom"
                        Background="{StaticResource TransparentBrush}"
                        BorderThickness="1"
                        Cursor="SizeNWSE">
                  <Grid x:Name="BelowDots"
                        Width="7"
                        Height="7"
                        Margin="0,0,2,2"
                        VerticalAlignment="Bottom">
                    <Rectangle x:Name="BelowDot1"
                               Width="2"
                               Height="2"
                               Margin="0,0,4,0"
                               HorizontalAlignment="Right"
                               VerticalAlignment="Bottom"
                               Fill="{StaticResource GlyphBackgroundBrush}" />
                    <Rectangle x:Name="BelowDot2"
                               Width="2"
                               Height="2"
                               HorizontalAlignment="Right"
                               VerticalAlignment="Bottom"
                               Fill="{StaticResource GlyphBackgroundBrush}" />
                    <Rectangle x:Name="BelowDot3"
                               Width="2"
                               Height="2"
                               Margin="0,0,0,4"
                               HorizontalAlignment="Right"
                               VerticalAlignment="Bottom"
                               Fill="{StaticResource GlyphBackgroundBrush}" />
                    <Rectangle x:Name="TouchableZone"
                               Grid.Column="1"
                               Margin="-20 -12 -12 -12"
                               Fill="{StaticResource TransparentBrush}" />
                  </Grid>
                </Border>
              </Grid>
            </Grid>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!--  *********************************  ComboEditorItemControl Style  *********************************  -->
  <Style x:Key="ComboEditorItemControlStyle" TargetType="ig:ComboEditorItemControl">
    <Setter Property="FontFamily" Value="{StaticResource FontFamily}" />
    <Setter Property="FontSize" Value="{StaticResource FontSize}" />
    <Setter Property="MinHeight" Value="24" />
    <Setter Property="Padding" Value="4 2 6 2" />
    <Setter Property="Background" Value="{StaticResource TransparentBrush}" />
    <Setter Property="BorderBrush" Value="{StaticResource TransparentBrush}" />
    <Setter Property="HorizontalContentAlignment" Value="Left" />
    <Setter Property="VerticalContentAlignment" Value="Center" />
    <Setter Property="BorderThickness" Value="{StaticResource DefaultBorderThickness}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="ig:ComboEditorItemControl">
          <Grid>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="MouseOver">
                  <Storyboard>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="hoverRectangle" Storyboard.TargetProperty="Opacity">
                      <SplineDoubleKeyFrame KeyTime="0" Value="1" />
                    </DoubleAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Disabled">
                  <Storyboard>
                    <DoubleAnimation Duration="0" Storyboard.TargetName="content" Storyboard.TargetProperty="(UIElement.Opacity)" To="0.3" />
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="SelectionStates">
                <VisualState x:Name="Unselected" />
                <VisualState x:Name="Selected">
                  <Storyboard>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="selectedRectangle" Storyboard.TargetProperty="Opacity">
                      <SplineDoubleKeyFrame KeyTime="0" Value="1" />
                    </DoubleAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="contentControl" Storyboard.TargetProperty="Foreground">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ActiveForegroundBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="FocusStates">
                <VisualState x:Name="Focused">
                  <Storyboard>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="FocusedVisualElement" Storyboard.TargetProperty="(UIElement.Opacity)">
                      <EasingDoubleKeyFrame KeyTime="0" Value="1" />
                    </DoubleAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Unfocused" />
              </VisualStateGroup>
              <VisualStateGroup x:Name="SelectionModeStates">
                <VisualState x:Name="CheckBox">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="SelectedCheckbox" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Standard" />
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Rectangle x:Name="Bd"
                       Fill="{TemplateBinding Background}"
                       Stroke="{TemplateBinding BorderBrush}"
                       StrokeThickness="{TemplateBinding BorderThickness}" />
            <Rectangle x:Name="FocusedVisualElement"
                       Opacity="0"
                       Stroke="{StaticResource ComboBoxItemFocusedBorderBrush}"
                       StrokeThickness="{StaticResource DefaultStrokeThickness}" />
            <Rectangle x:Name="hoverRectangle"
                       Fill="{StaticResource ComboBoxItemHoverBackgroundBrush}"
                       IsHitTestVisible="False"
                       Opacity="0" />
            <Rectangle x:Name="selectedRectangle"
                       Fill="{StaticResource ComboBoxItemPressedBackgroundBrush}"
                       IsHitTestVisible="False"
                       Opacity="0" />
            <Grid x:Name="content" Margin="{TemplateBinding Padding}">
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
              </Grid.ColumnDefinitions>
              <CheckBox x:Name="SelectedCheckbox"
                        VerticalAlignment="Center"
                        IsHitTestVisible="False"
                        Style="{StaticResource CheckBoxStyle}"
                        Visibility="Collapsed" />
              <ContentControl x:Name="contentControl"
                              Grid.Column="1"
                              Foreground="{TemplateBinding Foreground}">
                <ContentPresenter x:Name="contentPresenter"
                                  Margin="{TemplateBinding Padding}"
                                  VerticalAlignment="Center"
                                  Content="{TemplateBinding Content}"
                                  ContentTemplate="{TemplateBinding ContentTemplate}" />
              </ContentControl>
            </Grid>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style BasedOn="{StaticResource ComboEditorItemControlStyle}" TargetType="ig:ComboEditorItemControl" />

  <!--  *********************************  TextBlock Style  *********************************  -->
  <Style x:Key="TextBlockStyle" TargetType="TextBlock">
    <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
    <Setter Property="FontSize" Value="{StaticResource FontSize}" />
    <Setter Property="FontFamily" Value="{StaticResource FontFamily}" />
    <Setter Property="MinHeight" Value="{StaticResource DefaultMinHeight}" />
    <Setter Property="TextTrimming" Value="CharacterEllipsis" />
  </Style>

  <!--  *********************************  XamComboEditor Style  *********************************  -->
  <Style x:Key="XamComboEditorStyle" TargetType="ig:XamComboEditor">
    <Setter Property="FontSize" Value="{StaticResource FontSize}" />
    <Setter Property="Padding" Value="4,2,24,2" />
    <Setter Property="MinHeight" Value="24" />
    <Setter Property="MinDropDownHeight" Value="24" />
    <Setter Property="HorizontalContentAlignment" Value="Left" />
    <Setter Property="VerticalContentAlignment" Value="Center" />
    <Setter Property="BorderThickness" Value="{StaticResource DefaultBorderThickness}" />
    <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
    <Setter Property="Background" Value="{StaticResource ComboBoxBackgroundBrush}" />
    <Setter Property="BorderBrush" Value="{StaticResource ComboBoxBorderBrush}" />
    <Setter Property="FocusVisualStyle" Value="{x:Null}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="ig:XamComboEditor">
          <Grid x:Name="main" igPrim:XamlHelper.SnapsToDevicePixels="True">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="Disabled">
                  <Storyboard>
                    <DoubleAnimation  Duration="0" Storyboard.TargetName="main" Storyboard.TargetProperty="(UIElement.Opacity)" To="0.3" />
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="FocusStates">
                <VisualState x:Name="Focused">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="FocusVisualElement" Storyboard.TargetProperty="(UIElement.Visibility)">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Unfocused" />
              </VisualStateGroup>
              <VisualStateGroup x:Name="ModeStates">
                <VisualState x:Name="Selectable">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="contentControl" Storyboard.TargetProperty="(UIElement.Visibility)">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Editable"/>
              </VisualStateGroup>
              <VisualStateGroup x:Name="WaterMarkStates">
                <VisualState x:Name="WaterMarkHidden" />
                <VisualState x:Name="WaterMarkVisible">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="WaterMark" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="DropDownStates">
                <VisualState x:Name="Closed" />
                <VisualState x:Name="Open">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Popup" Storyboard.TargetProperty="IsOpen">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <System:Boolean>True</System:Boolean>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="contentControl" Storyboard.TargetProperty="Foreground">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ActiveForegroundBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="TextBoxPresenter" Storyboard.TargetProperty="Foreground">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ActiveForegroundBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="PositionStates">
                <VisualState x:Name="Below" />
                <VisualState x:Name="Above">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Resizer" Storyboard.TargetProperty="Position">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <igPrim:ResizerPosition>Above</igPrim:ResizerPosition>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Resizer" Storyboard.TargetProperty="(Grid.Row)">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <System:Int32>0</System:Int32>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="ValidationStates">
                <VisualState x:Name="Valid" />
                <VisualState x:Name="InvalidUnfocused">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ValidationErrorElement" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="InvalidFocused">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ValidationErrorElement" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <!--<ObjectAnimationUsingKeyFrames Storyboard.TargetName="validationTooltip" Storyboard.TargetProperty="IsOpen">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <System:Boolean>True</System:Boolean>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>-->
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="InvalidMouseOver">
                    <Storyboard>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="ValidationErrorElement">
                            <DiscreteObjectKeyFrame KeyTime="0">
                                <DiscreteObjectKeyFrame.Value>
                                    <Visibility>Visible</Visibility>
                                </DiscreteObjectKeyFrame.Value>
                            </DiscreteObjectKeyFrame>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="IsOpen" Storyboard.TargetName="validationTooltip">
                            <DiscreteObjectKeyFrame KeyTime="0:0:0.001">
                                <DiscreteObjectKeyFrame.Value>
                                    <System:Boolean>True</System:Boolean>
                                </DiscreteObjectKeyFrame.Value>
                            </DiscreteObjectKeyFrame>
                        </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Border x:Name="ContentPresenterBorder">
              <Grid x:Name="gridLayout" ShowGridLines="False">
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="*" />
                  <ColumnDefinition MinWidth="23" />
                </Grid.ColumnDefinitions>
                <Border x:Name="Border"
                        Grid.ColumnSpan="2"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="{StaticResource CornerRadius}" />
                <Popup x:Name="Popup"
                       Grid.ColumnSpan="2"
                       VerticalAlignment="Bottom"
                       igPrim:XamlHelper.SnapsToDevicePixels="True"
                       IsOpen="False">
                  <Grid Background="{TemplateBinding BorderBrush}">
                    <Grid.RowDefinitions>
                      <RowDefinition Height="Auto" />
                      <RowDefinition Height="*" />
                      <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    <Border x:Name="RootPopupElement"
                            Grid.Row="1"
                            Height="Auto"
                            MinHeight="{TemplateBinding MinDropDownHeight}"
                            MaxWidth="{TemplateBinding MaxDropDownWidth}"
                            MaxHeight="{TemplateBinding MaxDropDownHeight}"
                            Margin="0 0 1 0"
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Top"
                            Background="{StaticResource PopupBackgroundBrush}"
                            BorderBrush="{StaticResource PopupBorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                      <Grid>
                        <Grid.ColumnDefinitions>
                          <ColumnDefinition Width="*" />
                          <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                          <RowDefinition Height="*" />
                          <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <igPrim:ItemsPanel x:Name="ItemsPanel"
                                           Margin="0"
                                           VerticalAlignment="Top" />
                        <ScrollBar x:Name="VerticalScrollBar"
                                   Grid.Row="0"
                                   Grid.Column="1"
                                   Margin="0,1,1,1"
                                   Style="{StaticResource ScrollBarStyle}" />
                        <ScrollBar x:Name="HorizontalScrollBar"
                                   Grid.Row="1"
                                   Grid.Column="0"
                                   Style="{StaticResource ScrollBarStyle}" />
                      </Grid>
                    </Border>
                    <igPrim:PopupResizer x:Name="Resizer"
                                         Grid.Row="2"
                                         Grid.ColumnSpan="2"
                                         Popup="{Binding ElementName=Popup}"
                                         ResizeElement="{Binding ElementName=RootPopupElement}"
                                         Style="{StaticResource PopupResizerStyle}"
                                         Visibility="{Binding Path=AllowDropDownResizing, Converter={StaticResource boolToVisibility}, RelativeSource={RelativeSource TemplatedParent}}">
                      <igPrim:PopupResizer.RenderTransform>
                        <TransformGroup>
                          <ScaleTransform />
                          <SkewTransform />
                          <RotateTransform />
                          <TranslateTransform />
                        </TransformGroup>
                      </igPrim:PopupResizer.RenderTransform>
                    </igPrim:PopupResizer>
                  </Grid>
                </Popup>
                <Border x:Name="FocusVisualElement"
                     Grid.ColumnSpan="2"
                     BorderBrush="{StaticResource ComboBoxFocusedBorderBrush}"
                     BorderThickness="{TemplateBinding BorderThickness}"
                     CornerRadius="{StaticResource CornerRadius}"
                     Background="{StaticResource TransparentBrush}"
                     IsHitTestVisible="False"
                     Visibility="Collapsed"  />
                <ToggleButton x:Name="ToggleButton"
                              Grid.ColumnSpan="2"
                              Margin="0"
                              HorizontalAlignment="Stretch"
                              VerticalAlignment="Stretch"
                              IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                              IsTabStop="False"
                              Style="{StaticResource ComboEditorToggleButtonStyle}" />
                <TextBlock x:Name="WaterMark"
                              HorizontalAlignment="Stretch"
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                              Foreground="{TemplateBinding Foreground}"
                              IsHitTestVisible="False"
                              Padding="{TemplateBinding Padding}"
                              Style="{StaticResource TextBlockStyle}"
                              Text="{TemplateBinding EmptyText}"
                              Visibility="Collapsed"
                              Grid.ColumnSpan="2"/>
                <igPrim:SpecializedTextBox x:Name="TextBoxPresenter"
                                           Grid.ColumnSpan="2"
                                           VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                           IsTabStop="{TemplateBinding IsTabStop}"
                                           Padding="4,2,0,3"
                                           Margin="0 0 24 0"
                                           Style="{StaticResource SpecializedTextBoxStyle}"
                                           Visibility="Collapsed"
                                           HorizontalAlignment="Stretch"/>
                <ContentControl x:Name="contentControl"
                                Grid.ColumnSpan="2"
                                Margin="0,0,24,2"
                                HorizontalAlignment="Stretch"
                                VerticalAlignment="Center"
                                Foreground="{TemplateBinding Foreground}">
                  <Grid>
                    <StackPanel x:Name="MultiSelectContentPanel"
                                Margin="6,0,0,0"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                Orientation="Horizontal" />
                  </Grid>
                </ContentControl>
              </Grid>
            </Border>

            <Border x:Name="ValidationErrorElement"
                    Grid.ColumnSpan="2"
                    BorderBrush="{StaticResource ValidationErrorElement}"
                    BorderThickness="{StaticResource DefaultBorderThickness}"
                    CornerRadius="1"
                    Visibility="Collapsed">
              <ToolTipService.ToolTip>
                <ToolTip x:Name="validationTooltip"
                         DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                         Placement="Right"
                         PlacementTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                         Template="{StaticResource ValidationToolTipTemplate}">
                  --&gt;
                </ToolTip>
              </ToolTipService.ToolTip>
              <Grid Width="12"
                    Height="12"
                    Margin="1,-4,-4,0"
                    HorizontalAlignment="Right"
                    VerticalAlignment="Top"
                    Background="{StaticResource TransparentBrush}">
                <Path Margin="1,3,0,0"
                      Data="M 1,0 L6,0 A 2,2 90 0 1 8,2 L8,7 z"
                      Fill="{StaticResource ValidationErrorElement}" />
              </Grid>
            </Border>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
              <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource ComboBoxHoverBorderBrush}" />
              <Setter TargetName="TextBoxPresenter" Property="Margin" Value="0 0 24 0" />
              <Setter TargetName="TextBoxPresenter" Property="Padding" Value="4,2,0,3 " />
            </Trigger>
            <Trigger Property="IsDropDownOpen" Value="True">
              <Setter TargetName="FocusVisualElement" Property="Visibility" Value="Visible" />
              <Setter TargetName="FocusVisualElement" Property="Background" Value="{StaticResource ComboBoxFocusedBorderBrush}" />
              <Setter TargetName="TextBoxPresenter" Property="Margin" Value="0 0 24 0" />
              <Setter TargetName="TextBoxPresenter" Property="Padding" Value="4 2 0 3" />
              <Setter TargetName="TextBoxPresenter" Property="CaretBrush" Value="{StaticResource CaretActiveForegroundBrush}" />
            </Trigger>
            <DataTrigger Binding="{Binding IsFocused, ElementName=TextBoxPresenter}" Value="True">
              <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource ComboBoxFocusedBorderBrush}" />
            </DataTrigger>
            <Trigger Property="IsEditableResolved" Value="True">
              <Setter TargetName="TextBoxPresenter" Property="Visibility" Value="Visible" />
              <Setter TargetName="MultiSelectContentPanel" Property="Visibility" Value="Collapsed" />
              <Setter TargetName="MultiSelectContentPanel" Property="Margin" Value="10,10,16,0" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style BasedOn="{StaticResource XamComboEditorStyle}" TargetType="ig:XamComboEditor" />
</ResourceDictionary>