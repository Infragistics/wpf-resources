<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:System="clr-namespace:System;assembly=mscorlib"
                    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                    xmlns:igEditors="http://schemas.infragistics.com/xaml"
                    xmlns:igEditorsPrim="http://schemas.infragistics.com/xaml/primitives"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    mc:Ignorable="d">

    <!--  *********************************  COLORS  *********************************  -->
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="RoyalDark.Theme.Colors.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <!--  *********************************  COMMON ATTRIBUTES  *********************************  -->

    <System:Double x:Key="DefaultMinHeight">24</System:Double>
    <Thickness x:Key="DefaultBorderThickness">1 1 1 1</Thickness>
    <Thickness x:Key="MaskedInputPadding">6 4 6 2</Thickness>
    <CornerRadius x:Key="CornerRadius">1</CornerRadius>

    <!--  Fonts  -->
    <FontFamily x:Key="FontFamily">#Segoe UI</FontFamily>
    <System:Double x:Key="FontSize10">10</System:Double>
    <System:Double x:Key="FontSize">12</System:Double>
    <FontWeight x:Key="FontNormal">Normal</FontWeight>

        
    <!--  *********************************  COMMON GLYPHS  *********************************  -->
     <!--  Plus/Minus Icons  -->
   <Geometry x:Key="PlusIcon">M3,0 L5,0 L5,3 L8,3 L8,5 L5,5 L5,8 L3,8 L3,5 L0,5 L0,3 L3,3 z</Geometry>
   <Geometry x:Key="MinusIcon">M0,0 L8,0 L8,2 L0,2 z</Geometry>
    
   <SolidColorBrush x:Key="ValidationErrorElement" igEditorsPrim:XamlHelper.IsExcludedFromWash="True" Color="{StaticResource Color_019}" />
    
    <!--  *********************************  BRUSHES  *********************************  -->
    <SolidColorBrush x:Key="ForegroundBrush" Color="{StaticResource Color_001}" />
    <SolidColorBrush x:Key="TransparentBrush" Color="{StaticResource Color_046}" />

    <!--  Glyph Brushes  -->
    <SolidColorBrush x:Key="GlyphBackgroundBrush" Color="{StaticResource Color_004}" />
    <SolidColorBrush x:Key="GlyphHoverBackgroundBrush" Color="{StaticResource Color_001}" />
    <SolidColorBrush x:Key="GlyphPressedBackgroundBrush" Color="{StaticResource Color_001}" />

    <!--  MaskedInput Brushes  -->
    <SolidColorBrush x:Key="InputBackgroundBrush" Color="{StaticResource Color_002}" />
    <SolidColorBrush x:Key="InputBorderBrush" Color="{StaticResource Color_003}" />
    <SolidColorBrush x:Key="InputHoverBorderBrush" Color="{StaticResource Color_012}" />
    <SolidColorBrush x:Key="InputFocusedBorderBrush" Color="{StaticResource Color_013}" />
    <SolidColorBrush x:Key="CaretForegroundBrush" Color="{StaticResource Color_001}" />
    <SolidColorBrush x:Key="SelectionBrush" Color="{StaticResource Color_011}" />
    
    <!--  Button Brushes  -->
    <SolidColorBrush x:Key="ButtonHoverBackgroundBrush" Color="{StaticResource Color_010}" />
    <SolidColorBrush x:Key="ButtonPressedBackgroundBrush" Color="{StaticResource Color_011}" />

  <!--  *********************************  Value Converters  *********************************  -->
  <igEditorsPrim:HorizontalToTextAlignmentConverter x:Key="horizToTextAlignmentConverter" />

  <!--  Tooltip Brushes  -->
  <SolidColorBrush x:Key="TooltipBackgroundBrush" Color="{StaticResource Color_002}" />
  <SolidColorBrush x:Key="TooltipBorderBrush" Color="{StaticResource Color_003}" />
  <SolidColorBrush x:Key="TooltipShadowBrush" Color="{StaticResource Color_056}" />
  <Thickness x:Key="ToolTipPadding">8 6 8 8</Thickness>

  <!--  *********************************  ToolTip Style  *********************************  -->
  <Style x:Key="ErrorToolTipStyle" TargetType="ContentControl">
    <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
    <Setter Property="FontFamily" Value="{StaticResource FontFamily}" />
    <Setter Property="FontSize" Value="{StaticResource FontSize10}" />
    <Setter Property="FontWeight" Value="{StaticResource FontNormal}" />
    <Setter Property="Background" Value="{StaticResource TooltipBackgroundBrush}" />
    <Setter Property="BorderBrush" Value="{StaticResource TooltipBorderBrush}" />
    <Setter Property="Padding" Value="{StaticResource ToolTipPadding}" />
    <Setter Property="BorderThickness" Value="{StaticResource DefaultBorderThickness}" />
    <Setter Property="HorizontalAlignment" Value="Left" />
    <Setter Property="VerticalAlignment" Value="Center" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="ContentControl">
          <Grid>
            <Grid>
              <Border Margin="-4"
                      Background="{StaticResource TooltipShadowBrush}"
                      CornerRadius="5"
                      Opacity="0.1" />
              <Border Margin="-3"
                      Background="{StaticResource TooltipShadowBrush}"
                      CornerRadius="4"
                      Opacity="0.3" />
              <Border Margin="-2"
                      Background="{StaticResource TooltipShadowBrush}"
                      CornerRadius="3"
                      Opacity="0.5" />
              <Border Margin="-1"
                      Background="{StaticResource TooltipShadowBrush}"
                      CornerRadius="2"
                      Opacity="0.7" />
              <Rectangle Fill="{TemplateBinding Background}"
                         Stroke="{TemplateBinding BorderBrush}"
                         StrokeThickness="0" />
              <ContentPresenter Margin="{TemplateBinding Padding}"
                                HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalAlignment}" />
            </Grid>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!--  ********************************* ValidationDecorator *********************************  -->
  <Style TargetType="igEditorsPrim:ValidationDecorator">
    <Setter Property="Background" Value="{StaticResource ValidationErrorElement}"/>
    <Setter Property="BorderBrush" Value="{StaticResource ValidationErrorElement}"/>
    <Setter Property="ErrorForeground" Value="{StaticResource ForegroundBrush}"/>
    <Setter Property="BorderThickness" Value="{StaticResource DefaultBorderThickness}"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igEditorsPrim:ValidationDecorator">
          <Grid Name="RootVisual">
            <VisualStateManager.VisualStateGroups>

							<VisualStateGroup x:Name="ErrorStates">
								<VisualState x:Name="NoError"/>
								<VisualState x:Name="Error">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ErrorPanel" Storyboard.TargetProperty="(UIElement.Visibility)">
											<DiscreteObjectKeyFrame KeyTime="00:00:00.000000">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Visible</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>

							<VisualStateGroup x:Name="OpenStates">
								<VisualState x:Name="Closed"/>
								<VisualState x:Name="Open">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
																	 Storyboard.TargetName="ErrorToolTip"
																	 Storyboard.TargetProperty="HorizontalOffset">
											<SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="6"/>
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>

						</VisualStateManager.VisualStateGroups>

						<ContentPresenter/>

						<Border Name="ErrorPanel"
							Visibility="Collapsed"
							BorderBrush="{TemplateBinding BorderBrush}"
							BorderThickness="{TemplateBinding BorderThickness}"
							CornerRadius="{StaticResource CornerRadius}">
							<ToolTipService.ToolTip>
								<ToolTip
									Name="ErrorToolTip"
									Content="{Binding Path=ErrorContent, RelativeSource={RelativeSource TemplatedParent}}"
									IsOpen="{Binding Path=IsToolTipOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
									PlacementTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}"
									Placement="Right"
									HorizontalOffset="-6"
									BorderThickness="0"
									Margin="0"
									Background="{TemplateBinding Background}"
									Foreground="{TemplateBinding ErrorForeground}"
                                    Style="{StaticResource ErrorToolTipStyle}"
											/>
							</ToolTipService.ToolTip>

							<Grid HorizontalAlignment="Right"
									VerticalAlignment="Top"
								Background="{StaticResource TransparentBrush}"
								Margin="1,-4,-4, 0"
								Height="12"
								Width="12">

								<Path Fill="{TemplateBinding Background}"
									Margin="1,3,0,0"
									Data="M1,0L6,0C7.10457,1.53635e-008 8,0.89543 8,2L8,7z"/>
								<Path Fill="{TemplateBinding Background}"
									Margin="1,3,0,0"
									Data="M0,0L2,0L8,6L8,8"/>
							</Grid>
						</Border>
					</Grid>

				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

    <!--  *********************************  RepeatButtonTemplates  *********************************  -->
    <!--  *********************************  SpinUP  *********************************  -->
    <ControlTemplate x:Key="SpinUpButtonTemplate" TargetType="RepeatButton">
        <Grid>
            <Rectangle x:Name="Bg" Width="22" Height="22" Fill="{StaticResource TransparentBrush}" />
            <ContentControl x:Name="content" IsTabStop="False" HorizontalAlignment="{TemplateBinding HorizontalAlignment}" VerticalAlignment="{TemplateBinding VerticalAlignment}" Foreground="{StaticResource GlyphBackgroundBrush}" >
            <Path Data="{StaticResource PlusIcon}"
                 Width="8"
                 Height="8"
                 Fill="{Binding Path=(Foreground), RelativeSource={RelativeSource AncestorType=ContentControl}}"
                 Stretch="Fill"/>
            </ContentControl>
        </Grid>
         <ControlTemplate.Triggers>
             <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="content" Property="Foreground" Value="{StaticResource GlyphHoverBackgroundBrush}" />
                  <Setter TargetName="Bg" Property="Fill" Value="{StaticResource ButtonHoverBackgroundBrush}" />
             </Trigger>
             <Trigger Property="IsPressed" Value="True">
                  <Setter TargetName="content" Property="Foreground" Value="{StaticResource GlyphPressedBackgroundBrush}" />
                  <Setter TargetName="Bg" Property="Fill" Value="{StaticResource ButtonPressedBackgroundBrush}" />
             </Trigger>
             <Trigger Property="IsEnabled" Value="False">
                 <Setter TargetName="content" Property="Opacity" Value="0.3" />
             </Trigger>
         </ControlTemplate.Triggers>
    </ControlTemplate>
    
   <!--  *********************************  SpinDOWN  *********************************  -->  
     <ControlTemplate x:Key="SpinDownButtonTemplate" TargetType="RepeatButton">
        <Grid>
            <Rectangle x:Name="Bg" Width="22" Height="22" Fill="{StaticResource TransparentBrush}" />
            <ContentControl x:Name="content" IsTabStop="False" HorizontalAlignment="{TemplateBinding HorizontalAlignment}" VerticalAlignment="{TemplateBinding VerticalAlignment}" Foreground="{StaticResource GlyphBackgroundBrush}" >
             <Path Data="{StaticResource MinusIcon}"
                   Width="8"
                   Height="2"
                   Fill="{Binding Path=(Foreground), RelativeSource={RelativeSource AncestorType=ContentControl}}"
                   Stretch="Fill"/>
            </ContentControl>
        </Grid>
         <ControlTemplate.Triggers>
             <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="content" Property="Foreground" Value="{StaticResource GlyphHoverBackgroundBrush}" />
                  <Setter TargetName="Bg" Property="Fill" Value="{StaticResource ButtonHoverBackgroundBrush}" />
             </Trigger>
             <Trigger Property="IsPressed" Value="True">
                  <Setter TargetName="content" Property="Foreground" Value="{StaticResource GlyphPressedBackgroundBrush}" />
                  <Setter TargetName="Bg" Property="Fill" Value="{StaticResource ButtonPressedBackgroundBrush}" />
             </Trigger>
             <Trigger Property="IsEnabled" Value="False">
                 <Setter TargetName="content" Property="Opacity" Value="0.3" />
             </Trigger>
         </ControlTemplate.Triggers>
    </ControlTemplate>

    <!--  *********************************  SpinButton Style  *********************************  -->
    <Style x:Key="SpinButtonStyle" TargetType="RepeatButton">
        <Setter Property="Padding" Value="3,1" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="igEditorsPrim:XamlHelper.Focusable" Value="False" />
    </Style>

    <!--  *********************************  MaskedInputTextBox Style  *********************************  -->
    <Style x:Key="MaskedInputTextBoxStyle" TargetType="TextBox">
        <Setter Property="Background" Value="{StaticResource TransparentBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource TransparentBrush}" />
        <Setter Property="CaretBrush" Value="{StaticResource CaretForegroundBrush}" />
        <Setter Property="SelectionBrush" Value="{StaticResource SelectionBrush}" />
    </Style>

    <!--  *********************************  MaskedInput Style  *********************************  -->
    <Style x:Key="MaskedInputStyle" TargetType="igEditors:XamMaskedInput">
        <Setter Property="Background" Value="{StaticResource InputBackgroundBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource InputBorderBrush}" />
        <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
        <Setter Property="FontFamily" Value="{StaticResource FontFamily}" />
        <Setter Property="FontSize" Value="{StaticResource FontSize}" />
        <Setter Property="FontWeight" Value="{StaticResource FontNormal}" />
        <Setter Property="igEditorsPrim:XamlHelper.SnapsToDevicePixels" Value="True" />
        <Setter Property="SpinButtonStyle" Value="{StaticResource SpinButtonStyle}" />
        <Setter Property="BorderThickness" Value="{StaticResource DefaultBorderThickness}" />
        <Setter Property="MinHeight" Value="{StaticResource DefaultMinHeight}" />
        <Setter Property="Padding" Value="{StaticResource MaskedInputPadding}" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="igEditors:XamMaskedInput">
                    <igEditorsPrim:ValidationDecorator x:Name="MainBorder">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="OverBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="MainBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="0.3" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="ReadOnly" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Unfocused" />
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="FocusBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>

                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <Grid Grid.ColumnSpan="2">
                                    <Border x:Name="BgBorder"
                                            Background="{TemplateBinding Background}"
                                            BorderBrush="{TemplateBinding BorderBrush}"
                                            BorderThickness="{TemplateBinding BorderThickness}"
                                            CornerRadius="{StaticResource CornerRadius}"
                                            Visibility="Visible" />
                                </Grid>
                                <igEditorsPrim:MaskedInputTextBox x:Name="PART_InputTextBox"
                                                                  Margin="{TemplateBinding Padding}"
                                                                  HorizontalAlignment="Stretch"
                                                                  VerticalAlignment="Stretch"
                                                                  HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                                  VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                                                  igEditorsPrim:XamlHelper.Focusable="{TemplateBinding igEditorsPrim:XamlHelper.Focusable}"
                                                                  Foreground="{TemplateBinding Foreground}"
                                                                  InputMethod.PreferredImeState="{TemplateBinding InputMethod.PreferredImeState}"
                                                                  IsTabStop="{TemplateBinding IsTabStop}"
                                                                  Style="{StaticResource MaskedInputTextBoxStyle}"
                                                                  TextAlignment="{Binding HorizontalContentAlignment, Converter={StaticResource horizToTextAlignmentConverter}, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
                                <Grid x:Name="PART_SpinButtons"
                                      Grid.Column="1"
                                      Margin="0"
                                      igEditorsPrim:XamlHelper.SnapsToDevicePixels="True"
                                      Visibility="{TemplateBinding SpinButtonVisibilityResolved}">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="*" />
                                    </Grid.ColumnDefinitions>
                                    <RepeatButton x:Name="spinUp"
                                                  Grid.Column="1"                                               
                                                  VerticalAlignment="Center"
                                                  Style="{TemplateBinding SpinButtonStyle}"
                                                  Template="{StaticResource SpinUpButtonTemplate}">
                                        
                                        <igEditors:Commanding.Command>
                                            <igEditorsPrim:MaskedInputCommandSource CommandId="SpinUp" EventName="Click" />
                                        </igEditors:Commanding.Command>
                                    </RepeatButton>
                                      <RepeatButton x:Name="spinDown"
                                                    Grid.Column="0"
                                                    Margin="0 0 1 0"
                                                    VerticalAlignment="Center"
                                                    Style="{TemplateBinding SpinButtonStyle}"
                                                    Template="{StaticResource SpinDownButtonTemplate}">
                                        <igEditors:Commanding.Command>
                                            <igEditorsPrim:MaskedInputCommandSource CommandId="SpinDown" EventName="Click" />
                                        </igEditors:Commanding.Command>
                                    </RepeatButton>
                                </Grid>
                                <Grid Grid.ColumnSpan="2">
                                    <Border x:Name="OverBorder"
                                            BorderBrush="{StaticResource InputHoverBorderBrush}"
                                            BorderThickness="{TemplateBinding BorderThickness}"
                                            CornerRadius="{StaticResource CornerRadius}"
                                            Opacity="0" />
                                    <Border x:Name="FocusBorder"
                                            BorderBrush="{StaticResource InputFocusedBorderBrush}"
                                            BorderThickness="{TemplateBinding BorderThickness}"
                                            CornerRadius="{StaticResource CornerRadius}"
                                            Opacity="0" />
                                </Grid>
                            </Grid>
                        </Grid>
                    </igEditorsPrim:ValidationDecorator>
                    <ControlTemplate.Triggers />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style BasedOn="{StaticResource MaskedInputStyle}" TargetType="igEditors:XamMaskedInput">
        <Setter Property="HorizontalContentAlignment" Value="Left" />
    </Style>

    <!--  *********************************  XamNumericInput Style  *********************************  -->
    <Style BasedOn="{StaticResource MaskedInputStyle}" TargetType="igEditors:XamNumericInput">
        <Setter Property="HorizontalContentAlignment" Value="Right" />
    </Style>

    <!--  *********************************  XamCurrencyInput Style  *********************************  -->
    <Style BasedOn="{StaticResource MaskedInputStyle}" TargetType="igEditors:XamCurrencyInput">
        <Setter Property="HorizontalContentAlignment" Value="Right" />
    </Style>
</ResourceDictionary>