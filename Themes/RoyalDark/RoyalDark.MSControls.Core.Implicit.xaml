<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    xmlns:system="clr-namespace:System;assembly=mscorlib"
                    mc:Ignorable="d">

    <!--  *********************************  RESOURCES  *********************************  -->
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="RoyalDark.Styles.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <!--  *********************************  BRUSHES  *********************************  -->
    <!--  Slider Brushes  -->
    <SolidColorBrush x:Key="SliderThumbBackgroundBrush" Color="{StaticResource Color_004}" />
    <SolidColorBrush x:Key="SliderThumbHoverBackgroundBrush" Color="{StaticResource Color_001}" />
    <SolidColorBrush x:Key="SliderThumbPressedBackgroundBrush" Color="{StaticResource Color_013}" />
    <SolidColorBrush x:Key="SliderThumbFocusedBorderBrush" Color="{StaticResource Color_013}" />
    <SolidColorBrush x:Key="SliderTrackBackgroundBrush" Color="{StaticResource Color_005}" />
    <SolidColorBrush x:Key="SliderSelectionRangeBackgroundBrush" Color="{StaticResource Color_013}" />

    <!--  GridSplitter Brushes  -->
    <SolidColorBrush x:Key="GridSplitterBackgroundBrush" Color="{StaticResource Color_005}" />
    <SolidColorBrush x:Key="GridSplitterBorderBrush" Color="{StaticResource Color_003}" />
    <SolidColorBrush x:Key="GridSplitterHoverBackgroundBrush" Color="{StaticResource Color_006}" />
    <SolidColorBrush x:Key="GridSplitterHoverBorderBrush" Color="{StaticResource Color_003}" />
    <SolidColorBrush x:Key="GridSplitterPressedBackgroundBrush" Color="{StaticResource Color_011}" />
    <SolidColorBrush x:Key="GridSplitterPressedBorderBrush" Color="{StaticResource Color_011}" />
    <SolidColorBrush x:Key="GridSplitterFocusedBorderBrush" Color="{StaticResource Color_013}" />

    <!--  ProgressBar Brushes  -->
    <SolidColorBrush x:Key="ProgressBarBackgroundBrush" Color="{StaticResource Color_0451}" />
    <SolidColorBrush x:Key="ProgressBarTrackFillBrush" Color="{StaticResource Color_011}" />

    <LinearGradientBrush x:Key="ProgressBarIndeterminateBackgroundBrush" MappingMode="Absolute" SpreadMethod="Repeat" StartPoint="500,1" EndPoint="0,1">
        <LinearGradientBrush.Transform>
            <TransformGroup>
                <TranslateTransform X="0" />
                <SkewTransform AngleX="-0" />
            </TransformGroup>
        </LinearGradientBrush.Transform>
        <GradientStop Offset="0.5001" Color="{StaticResource Color_046}" />
        <GradientStop Offset="0.5" Color="{StaticResource Color_011}" />
        <GradientStop Offset="0.0001" Color="{StaticResource Color_011}" />
        <GradientStop Offset="1" Color="{StaticResource Color_046}" />
    </LinearGradientBrush>

    <!--  Tooltip Brushes  -->
    <SolidColorBrush x:Key="TooltipBackgroundBrush" Color="{StaticResource Color_002}" />
    <SolidColorBrush x:Key="TooltipBorderBrush" Color="{StaticResource Color_003}" />

    <!--  Expander Brushes  -->
    <SolidColorBrush x:Key="ExpanderButtonBackgroundBrush" Color="{StaticResource Color_003}" />
    <SolidColorBrush x:Key="ExpanderButtonBorderBrush" Color="{StaticResource Color_003}" />
    <SolidColorBrush x:Key="ExpanderButtonHoverBackgroundBrush" Color="{StaticResource Color_010}" />
    <SolidColorBrush x:Key="ExpanderButtonHoverBorderBrush" Color="{StaticResource Color_010}" />
    <SolidColorBrush x:Key="ExpanderButtonPressedBackgroundBrush" Color="{StaticResource Color_011}" />
    <SolidColorBrush x:Key="ExpanderButtonPressedBorderBrush" Color="{StaticResource Color_011}" />
    <SolidColorBrush x:Key="ExpanderButtonFocusedBorderBrush" Color="{StaticResource Color_013}" />
    <SolidColorBrush x:Key="ExpanderBackgroundBrush" Color="{StaticResource Color_046}" />
    <SolidColorBrush x:Key="ExpanderBorderBrush" Color="{StaticResource Color_046}" />

    <!--  GroupBox Brushes  -->
    <SolidColorBrush x:Key="GroupBoxBorderBrush" Color="{StaticResource Color_014}" />
    <SolidColorBrush x:Key="GroupBoxBackgroundBrush" Color="{StaticResource Color_046}" />

    <!--  PassWordBox Brushes  -->
    <SolidColorBrush x:Key="PasswordBoxForegroundBrush" Color="{StaticResource Color_001}" />
    <SolidColorBrush x:Key="CaretForegroundBrush" Color="{StaticResource Color_001}" />

    <!-- StatusBar Brushes -->
    <SolidColorBrush x:Key="StatusBarForegroundBrush" Color="{StaticResource Color_001}"/>
    <SolidColorBrush x:Key="StatusBarForegroundBrushDisabled" Color="{StaticResource Color_001}" Opacity="0.15"/>
    <SolidColorBrush x:Key="StatusBarBackgroundBrush" Color="{StaticResource Color_007}"/>
    <SolidColorBrush x:Key="StatusBarBorderBrush" Color="{StaticResource Color_003}"/>
    <SolidColorBrush x:Key="StatusBarSeparatorBackgroundBrush" Color="{StaticResource Color_003}"/>

    <!--  *********************************  COMMON ATTRIBUTES  *********************************  -->
    <Thickness x:Key="StatusBarItemPadding">8,0</Thickness>
    <Thickness x:Key="SeparatorMargin">0</Thickness>
    <system:Double x:Key="SeparatorMinWidth">1</system:Double>
    <system:Double x:Key="SeparatorMinHeight">1</system:Double>
    <Thickness x:Key="StatusBarBorderThickness">1</Thickness>
    <system:Double x:Key="StatusBarMinHeight">26</system:Double>
    <VerticalAlignment x:Key="StatusBarVerticalAlignment">Bottom</VerticalAlignment>

    <!--  *********************************  TextBlock Style  *********************************  -->
    <Style x:Key="TextBlockStyle" TargetType="TextBlock">
        <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
        <Setter Property="FontFamily" Value="{StaticResource FontFamily}" />
        <Setter Property="FontSize" Value="{StaticResource FontSize}" />
        <Setter Property="FontWeight" Value="{StaticResource FontNormal}" />
    </Style>

    <!--  *********************************  Label Style  *********************************  -->
    <Style x:Key="LabelStyle" TargetType="{x:Type Label}">
        <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
        <Setter Property="FontFamily" Value="{StaticResource FontFamily}" />
        <Setter Property="FontSize" Value="{StaticResource FontSize}" />
        <Setter Property="FontWeight" Value="{StaticResource FontNormal}" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
    </Style>

    <!--  *********************************  SliderRepeatButton Style  *********************************  -->
    <Style x:Key="SliderRepeatButtonStyle" TargetType="{x:Type RepeatButton}">
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Rectangle Fill="{StaticResource TransparentBrush}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  *********************************  Slider Horizontal Thumb Style  *********************************  -->
    <Style x:Key="HSliderThumbStyle" TargetType="{x:Type Thumb}">
        <Setter Property="Background" Value="{StaticResource SliderThumbBackgroundBrush}" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Grid>
                        <Ellipse x:Name="ThumbBackground"
                                 Width="12"
                                 Height="12"
                                 Fill="{TemplateBinding Background}" />
                        <Ellipse x:Name="FocusedVisualElement"
                                 Width="12"
                                 Height="12"
                                 Opacity="0"
                                 Stroke="{StaticResource SliderThumbFocusedBorderBrush}"
                                 StrokeThickness="1" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="ThumbBackground" Property="Fill" Value="{StaticResource SliderThumbHoverBackgroundBrush}" />
                        </Trigger>
                        <Trigger Property="IsMouseCaptured" Value="True">
                            <Setter TargetName="ThumbBackground" Property="Fill" Value="{StaticResource SliderThumbPressedBackgroundBrush}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="ThumbBackground" Property="Opacity" Value="0.3" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  *********************************  Slider Vertical Thumb Style  *********************************  -->
    <Style x:Key="VSliderThumbStyle" TargetType="{x:Type Thumb}">
        <Setter Property="Background" Value="{StaticResource SliderThumbBackgroundBrush}" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Grid>
                        <Ellipse x:Name="ThumbBackground"
                                 Width="12"
                                 Height="12"
                                 Fill="{TemplateBinding Background}" />
                        <Ellipse x:Name="FocusedVisualElement"
                                 Width="12"
                                 Height="12"
                                 Opacity="0"
                                 Stroke="{StaticResource SliderThumbFocusedBorderBrush}"
                                 StrokeThickness="1" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="ThumbBackground" Property="Fill" Value="{StaticResource SliderThumbHoverBackgroundBrush}" />
                        </Trigger>
                        <Trigger Property="IsMouseCaptured" Value="True">
                            <Setter TargetName="ThumbBackground" Property="Fill" Value="{StaticResource SliderThumbPressedBackgroundBrush}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="ThumbBackground" Property="Opacity" Value="0.3" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  *********************************  Slider Style  *********************************  -->
    <Style x:Key="SliderStyle" TargetType="{x:Type Slider}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
        <Setter Property="Stylus.IsPressAndHoldEnabled" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Slider}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="true">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" MinHeight="{TemplateBinding MinHeight}" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <TickBar x:Name="TopTick"
                                     Grid.Row="0"
                                     Height="1"
                                     Fill="{TemplateBinding Foreground}"
                                     Placement="Top"
                                     Visibility="Collapsed" />
                            <Border x:Name="TrackBackground"
                                    Grid.Row="1"
                                    Height="2"
                                    VerticalAlignment="center"
                                    Background="{StaticResource SliderTrackBackgroundBrush}">
                                <Canvas Margin="-6 0 -6 -1">
                                    <Rectangle x:Name="PART_SelectionRange"
                                               Height="2"
                                               Fill="{StaticResource SliderSelectionRangeBackgroundBrush}"
                                               Visibility="Hidden" />
                                </Canvas>
                            </Border>
                            <Track x:Name="PART_Track" Grid.Row="1">
                                <Track.DecreaseRepeatButton>
                                    <RepeatButton Command="{x:Static Slider.DecreaseLarge}" Style="{StaticResource SliderRepeatButtonStyle}" />
                                </Track.DecreaseRepeatButton>
                                <Track.IncreaseRepeatButton>
                                    <RepeatButton Command="{x:Static Slider.IncreaseLarge}" Style="{StaticResource SliderRepeatButtonStyle}" />
                                </Track.IncreaseRepeatButton>
                                <Track.Thumb>
                                    <Thumb x:Name="Thumb" Style="{StaticResource HSliderThumbStyle}" />
                                </Track.Thumb>
                            </Track>
                            <TickBar x:Name="BottomTick"
                                     Grid.Row="2"
                                     Height="1"
                                     Fill="{TemplateBinding Foreground}"
                                     Placement="Bottom"
                                     Visibility="Collapsed" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="TickPlacement" Value="TopLeft">
                            <Setter TargetName="TopTick" Property="Visibility" Value="Visible" />
                            <Setter TargetName="Thumb" Property="Style" Value="{StaticResource HSliderThumbStyle}" />
                            <Setter TargetName="TrackBackground" Property="Margin" Value="5,2,5,0" />
                        </Trigger>
                        <Trigger Property="TickPlacement" Value="BottomRight">
                            <Setter TargetName="BottomTick" Property="Visibility" Value="Visible" />
                            <Setter TargetName="Thumb" Property="Style" Value="{StaticResource HSliderThumbStyle}" />
                            <Setter TargetName="TrackBackground" Property="Margin" Value="5,0,5,2" />
                        </Trigger>
                        <Trigger Property="TickPlacement" Value="Both">
                            <Setter TargetName="TopTick" Property="Visibility" Value="Visible" />
                            <Setter TargetName="BottomTick" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="IsSelectionRangeEnabled" Value="true">
                            <Setter TargetName="PART_SelectionRange" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="true">
                            <Setter TargetName="Thumb" Property="Foreground" Value="{StaticResource SliderThumbFocusedBorderBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Orientation" Value="Vertical">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Slider}">
                            <Border Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    SnapsToDevicePixels="true">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="Auto" MinWidth="{TemplateBinding MinWidth}" />
                                        <ColumnDefinition Width="Auto" />
                                    </Grid.ColumnDefinitions>
                                    <TickBar x:Name="TopTick"
                                             Grid.Column="0"
                                             Width="2"
                                             Fill="{TemplateBinding Foreground}"
                                             Placement="Left"
                                             Visibility="Collapsed" />
                                    <Border x:Name="TrackBackground"
                                            Grid.Column="1"
                                            Width="2"
                                            HorizontalAlignment="center"
                                            Background="{StaticResource SliderTrackBackgroundBrush}">
                                        <Canvas Margin="0 -6 -1 -6">
                                            <Rectangle x:Name="PART_SelectionRange"
                                                       Width="2"
                                                       Fill="{StaticResource SliderSelectionRangeBackgroundBrush}"
                                                       Visibility="Hidden" />
                                        </Canvas>
                                    </Border>
                                    <Track x:Name="PART_Track" Grid.Column="1">
                                        <Track.DecreaseRepeatButton>
                                            <RepeatButton Command="{x:Static Slider.DecreaseLarge}" Style="{StaticResource SliderRepeatButtonStyle}" />
                                        </Track.DecreaseRepeatButton>
                                        <Track.IncreaseRepeatButton>
                                            <RepeatButton Command="{x:Static Slider.IncreaseLarge}" Style="{StaticResource SliderRepeatButtonStyle}" />
                                        </Track.IncreaseRepeatButton>
                                        <Track.Thumb>
                                            <Thumb x:Name="Thumb" Style="{StaticResource VSliderThumbStyle}" />
                                        </Track.Thumb>
                                    </Track>
                                    <TickBar x:Name="BottomTick"
                                             Grid.Column="2"
                                             Width="2"
                                             Fill="{TemplateBinding Foreground}"
                                             Placement="Right"
                                             Visibility="Collapsed" />
                                </Grid>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="TickPlacement" Value="TopLeft">
                                    <Setter TargetName="TopTick" Property="Visibility" Value="Visible" />
                                    <Setter TargetName="Thumb" Property="Style" Value="{StaticResource VSliderThumbStyle}" />
                                    <Setter TargetName="TrackBackground" Property="Margin" Value="2,5,0,5" />
                                </Trigger>
                                <Trigger Property="TickPlacement" Value="BottomRight">
                                    <Setter TargetName="BottomTick" Property="Visibility" Value="Visible" />
                                    <Setter TargetName="Thumb" Property="Style" Value="{StaticResource VSliderThumbStyle}" />
                                    <Setter TargetName="TrackBackground" Property="Margin" Value="0,5,2,5" />
                                </Trigger>
                                <Trigger Property="TickPlacement" Value="Both">
                                    <Setter TargetName="TopTick" Property="Visibility" Value="Visible" />
                                    <Setter TargetName="BottomTick" Property="Visibility" Value="Visible" />
                                </Trigger>
                                <Trigger Property="IsSelectionRangeEnabled" Value="true">
                                    <Setter TargetName="PART_SelectionRange" Property="Visibility" Value="Visible" />
                                </Trigger>
                                <Trigger Property="IsKeyboardFocused" Value="true">
                                    <Setter TargetName="Thumb" Property="Foreground" Value="{StaticResource SliderThumbFocusedBorderBrush}" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--  *********************************  RepeatButton Style  *********************************  -->
    <Style x:Key="RepeatButtonStyle" TargetType="{x:Type RepeatButton}">
        <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
        <Setter Property="FontFamily" Value="{StaticResource FontFamily}" />
        <Setter Property="FontSize" Value="{StaticResource FontSize}" />
        <Setter Property="FontWeight" Value="{StaticResource FontNormal}" />
        <Setter Property="Padding" Value="{StaticResource DefaultPadding}" />
        <Setter Property="MinHeight" Value="{StaticResource DefaultMinHeight}" />
        <Setter Property="MinWidth" Value="{StaticResource DefaultMinHeight}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Grid x:Name="Main" SnapsToDevicePixels="True">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Bd" Storyboard.TargetProperty="Fill">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonHoverBackgroundBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Bd" Storyboard.TargetProperty="Stroke">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonHoverBorderBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Bd" Storyboard.TargetProperty="Fill">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonPressedBackgroundBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Bd" Storyboard.TargetProperty="Stroke">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonPressedBorderBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ContentControl" Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="0.2" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="Bd" Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="0.3" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused" />
                                <VisualState x:Name="Unfocused" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Rectangle x:Name="Bd"
                                   Fill="{StaticResource ButtonBackgroundBrush}"
                                   RadiusX="{StaticResource RadiusXY}"
                                   RadiusY="{StaticResource RadiusXY}"
                                   Stroke="{StaticResource ButtonBorderBrush}"
                                   StrokeThickness="1" />
                        <ContentControl x:Name="ContentControl"
                                        Margin="{TemplateBinding Padding}"
                                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                        Foreground="{TemplateBinding Foreground}">
                            <ContentPresenter x:Name="contentPresenter" />
                        </ContentControl>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  ********************************** GridSplitter Style **********************************  -->
    <Style x:Key="GridSplitterStyle" TargetType="{x:Type GridSplitter}">
        <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
        <Setter Property="Background" Value="{StaticResource GridSplitterBackgroundBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource GridSplitterBorderBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="PreviewStyle">
            <Setter.Value>
                <Style TargetType="Control">
                    <Setter Property="Control.Template">
                        <Setter.Value>
                            <ControlTemplate>
                                <Rectangle Fill="{StaticResource GridSplitterPressedBackgroundBrush}"
                                           Opacity="0.75"
                                           Stroke="{StaticResource GridSplitterPressedBorderBrush}"
                                           StrokeThickness="1" />
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type GridSplitter}">
                    <Grid>
                        <Border x:Name="border"
                                MinWidth="8"
                                MinHeight="8"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}">
                            <Grid>
                                <StackPanel x:Name="HGrip"
                                            Height="8"
                                            HorizontalAlignment="Center"
                                            VerticalAlignment="Center"
                                            Orientation="Vertical">
                                    <Rectangle x:Name="HGripTopElem"
                                               Width="20"
                                               Height="1"
                                               Margin="1,2,1,1"
                                               Fill="{StaticResource GlyphBackgroundBrush}"
                                               StrokeThickness="0" />
                                    <Rectangle x:Name="HGripBottomElem"
                                               Width="20"
                                               Height="1"
                                               Margin="1,1,1,2"
                                               Fill="{StaticResource GlyphBackgroundBrush}"
                                               StrokeThickness="0" />
                                </StackPanel>
                                <StackPanel x:Name="VGrip"
                                            Width="8"
                                            HorizontalAlignment="Center"
                                            VerticalAlignment="Center"
                                            Orientation="Horizontal"
                                            Visibility="Collapsed">
                                    <Rectangle x:Name="VGripTopElem"
                                               Width="1"
                                               Height="20"
                                               Margin="2,1,1,1"
                                               Fill="{StaticResource GlyphBackgroundBrush}"
                                               StrokeThickness="0" />
                                    <Rectangle x:Name="VGripBottomElem"
                                               Width="1"
                                               Height="20"
                                               Margin="1,1,2,1"
                                               Fill="{StaticResource GlyphBackgroundBrush}"
                                               StrokeThickness="0" />
                                </StackPanel>
                            </Grid>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HorizontalAlignment" Value="Stretch">
                            <Setter TargetName="HGrip" Property="Visibility" Value="Visible" />
                            <Setter TargetName="VGrip" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="VerticalAlignment" Value="Stretch">
                            <Setter TargetName="VGrip" Property="Visibility" Value="Visible" />
                            <Setter TargetName="HGrip" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource GridSplitterFocusedBorderBrush}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{StaticResource GridSplitterHoverBackgroundBrush}" />
                            <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource GridSplitterHoverBorderBrush}" />
                            <Setter TargetName="HGripTopElem" Property="Fill" Value="{StaticResource GlyphHoverBackgroundBrush}" />
                            <Setter TargetName="HGripBottomElem" Property="Fill" Value="{StaticResource GlyphHoverBackgroundBrush}" />
                            <Setter TargetName="VGripTopElem" Property="Fill" Value="{StaticResource GlyphHoverBackgroundBrush}" />
                            <Setter TargetName="VGripBottomElem" Property="Fill" Value="{StaticResource GlyphHoverBackgroundBrush}" />
                        </Trigger>
                        <Trigger Property="IsDragging" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{StaticResource GridSplitterPressedBackgroundBrush}" />
                            <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource GridSplitterPressedBorderBrush}" />
                            <Setter TargetName="HGripTopElem" Property="Fill" Value="{StaticResource GlyphHoverBackgroundBrush}" />
                            <Setter TargetName="HGripBottomElem" Property="Fill" Value="{StaticResource GlyphHoverBackgroundBrush}" />
                            <Setter TargetName="VGripTopElem" Property="Fill" Value="{StaticResource GlyphHoverBackgroundBrush}" />
                            <Setter TargetName="VGripBottomElem" Property="Fill" Value="{StaticResource GlyphHoverBackgroundBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  ********************************** ProgressBar Style **********************************  -->
    <Style x:Key="ProgressBarStyle" TargetType="{x:Type ProgressBar}">
        <Setter Property="Foreground" Value="{StaticResource ProgressBarTrackFillBrush}" />
        <Setter Property="Background" Value="{StaticResource ProgressBarBackgroundBrush}" />
        <Setter Property="Height" Value="6" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ProgressBar}">
                    <Grid x:Name="TemplateRoot" SnapsToDevicePixels="true">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Determinate" />
                                <VisualState x:Name="Indeterminate">
                                    <Storyboard RepeatBehavior="Forever">
                                        <DoubleAnimation Duration="00:00:2" From="0" Storyboard.TargetName="IndeterminateGradientFill" Storyboard.TargetProperty="(Shape.Fill).(LinearGradientBrush.Transform).(TransformGroup.Children)[0].X" To="500" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="ProgressBarTrack" Background="{TemplateBinding Background}" />
                        <Rectangle x:Name="PART_Track" />
                        <Decorator x:Name="PART_Indicator" HorizontalAlignment="Left">
                            <Grid x:Name="Foreground">
                                <Rectangle x:Name="Indicator" Fill="{TemplateBinding Foreground}" />
                            </Grid>
                        </Decorator>
                        <Grid x:Name="IndeterminateRoot" Visibility="Collapsed">
                            <Rectangle x:Name="IndeterminateSolidFill"
                                       Fill="{TemplateBinding Background}"
                                       Opacity="1"
                                       RenderTransformOrigin="0.5,0.5" />
                            <Rectangle x:Name="IndeterminateGradientFill" Fill="{StaticResource ProgressBarIndeterminateBackgroundBrush}" />
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Orientation" Value="Vertical">
                            <Setter TargetName="TemplateRoot" Property="LayoutTransform">
                                <Setter.Value>
                                    <RotateTransform Angle="-90" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsIndeterminate" Value="true">
                            <Setter TargetName="Indicator" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="IndeterminateRoot" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="IsIndeterminate" Value="false" />
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  ********************************** PasswordBox Style **********************************  -->
    <Style x:Key="PasswordBoxStyle" TargetType="{x:Type PasswordBox}">
        <Setter Property="Foreground" Value="{StaticResource PasswordBoxForegroundBrush}" />
        <Setter Property="FontFamily" Value="{StaticResource FontFamily}" />
        <Setter Property="FontSize" Value="{StaticResource FontSize}" />
        <Setter Property="FontWeight" Value="{StaticResource FontNormal}" />
        <Setter Property="Background" Value="{StaticResource TextBoxBackgroundBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource TextBoxBorderBrush}" />
        <Setter Property="BorderThickness" Value="{StaticResource DefaultBorderThickness}" />
        <Setter Property="Padding" Value="{StaticResource TextBoxPadding}" />
        <Setter Property="MinHeight" Value="{StaticResource DefaultMinHeight}" />
        <Setter Property="PasswordChar" Value="●" />
        <Setter Property="KeyboardNavigation.TabNavigation" Value="None" />
        <Setter Property="AllowDrop" Value="true" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
        <Setter Property="FlowDirection" Value="LeftToRight" />
        <Setter Property="CaretBrush" Value="{StaticResource CaretForegroundBrush}" />
        <Setter Property="SelectionBrush" Value="{StaticResource TextBoxFocusedBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type PasswordBox}">
                    <Grid x:Name="MainGrid" SnapsToDevicePixels="True">
                        <Border x:Name="Bd"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="{StaticResource CornerRadius}" />
                        <Border x:Name="ReadOnlyVisualElement"
                                Background="{StaticResource TextBoxReadOnlyBackgroundBrush}"
                                CornerRadius="{StaticResource CornerRadius}"
                                Opacity="0" />
                        <Border>
                            <ScrollViewer x:Name="PART_ContentHost" />
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="MainGrid" Property="Opacity" Value="0.3" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Bd" Property="BorderBrush" Value="{StaticResource TextBoxHoverBorderBrush}" />
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter TargetName="Bd" Property="BorderBrush" Value="{StaticResource TextBoxFocusedBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  *********************************  ToolTip Style  *********************************  -->
    <Style x:Key="{x:Type ToolTip}" TargetType="ToolTip">
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
        <Setter Property="FontFamily" Value="{StaticResource FontFamily}" />
        <Setter Property="FontSize" Value="{StaticResource FontSize}" />
        <Setter Property="FontWeight" Value="{StaticResource FontNormal}" />
        <Setter Property="Background" Value="{StaticResource TooltipBackgroundBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource TooltipBorderBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Padding" Value="12,9" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToolTip">
                    <Grid>
                        <Rectangle Fill="{TemplateBinding Background}"
                                   Stroke="{TemplateBinding BorderBrush}"
                                   StrokeThickness="{TemplateBinding BorderThickness}" />
                        <StackPanel Orientation="Horizontal">
                            <ContentPresenter Margin="{TemplateBinding Padding}" Content="{TemplateBinding Content}" />
                        </StackPanel>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  *********************************  Expander Right Style  *********************************  -->
    <Style x:Key="ExpanderRightHeaderStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border x:Name="MainBorder" Padding="{TemplateBinding Padding}">
                        <Grid Background="{StaticResource TransparentBrush}" SnapsToDevicePixels="True">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="24" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>
                            <Grid>
                                <Ellipse x:Name="bg"
                                         Width="{StaticResource DefaultSize}"
                                         Height="{StaticResource DefaultSize}"
                                         HorizontalAlignment="Center"
                                         VerticalAlignment="Center"
                                         Fill="{StaticResource ExpanderButtonBackgroundBrush}"
                                         Stroke="{StaticResource ExpanderButtonBorderBrush}" />
                                <Path x:Name="arrow"
                                      Width="10"
                                      Height="6"
                                      Margin="0 0 -1 0"
                                      Data="{StaticResource VArrowDown}"
                                      Fill="{StaticResource ForegroundBrush}"
                                      Opacity="0.4"
                                      RenderTransformOrigin="0.5, 0.5"
                                      Stretch="Fill">
                                    <Path.RenderTransform>
                                        <TransformGroup>
                                            <RotateTransform Angle="-90" />
                                        </TransformGroup>
                                    </Path.RenderTransform>
                                </Path>
                            </Grid>
                            <ContentPresenter Grid.Row="1"
                                              Margin="0,4,0,0"
                                              HorizontalAlignment="Center"
                                              VerticalAlignment="Stretch"
                                              RecognizesAccessKey="True"
                                              SnapsToDevicePixels="True" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter TargetName="arrow" Property="LayoutTransform">
                                <Setter.Value>
                                    <RotateTransform Angle="180" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="bg" Property="Fill" Value="{StaticResource ExpanderButtonPressedBackgroundBrush}" />
                            <Setter TargetName="bg" Property="Stroke" Value="{StaticResource ExpanderButtonPressedBorderBrush}" />
                        </Trigger>
                        <Trigger Property="IsFocused" Value="true">
                            <Setter TargetName="bg" Property="Stroke" Value="{StaticResource ExpanderButtonFocusedBorderBrush}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="bg" Property="Fill" Value="{StaticResource ExpanderButtonHoverBackgroundBrush}" />
                            <Setter TargetName="bg" Property="Stroke" Value="{StaticResource ExpanderButtonHoverBorderBrush}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="bg" Property="Fill" Value="{StaticResource ExpanderButtonPressedBackgroundBrush}" />
                            <Setter TargetName="bg" Property="Stroke" Value="{StaticResource ExpanderButtonPressedBorderBrush}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="MainBorder" Property="Opacity" Value="0.3" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  *********************************  Expander Up Style  *********************************  -->
    <Style x:Key="ExpanderUpHeaderStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border x:Name="MainBorder" Padding="{TemplateBinding Padding}">
                        <Grid Background="{StaticResource TransparentBrush}" SnapsToDevicePixels="True">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="24" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <Grid>
                                <Ellipse x:Name="bg"
                                         Width="{StaticResource DefaultSize}"
                                         Height="{StaticResource DefaultSize}"
                                         HorizontalAlignment="Center"
                                         VerticalAlignment="Center"
                                         Fill="{StaticResource ExpanderButtonBackgroundBrush}"
                                         Stroke="{StaticResource ExpanderButtonBorderBrush}" />
                                <Path x:Name="arrow"
                                      Width="10"
                                      Height="6"
                                      Margin="0 -1 0 0"
                                      Data="{StaticResource VArrowDown}"
                                      Fill="{StaticResource ForegroundBrush}"
                                      Opacity="0.4"
                                      RenderTransformOrigin="0.5, 0.5"
                                      Stretch="Fill">
                                    <Path.RenderTransform>
                                        <TransformGroup>
                                            <RotateTransform Angle="180" />
                                        </TransformGroup>
                                    </Path.RenderTransform>
                                </Path>
                            </Grid>
                            <ContentPresenter Grid.Column="1"
                                              Margin="4,0,0,0"
                                              HorizontalAlignment="Stretch"
                                              VerticalAlignment="Center"
                                              RecognizesAccessKey="True"
                                              SnapsToDevicePixels="True" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter TargetName="arrow" Property="LayoutTransform">
                                <Setter.Value>
                                    <RotateTransform Angle="180" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="bg" Property="Fill" Value="{StaticResource ExpanderButtonPressedBackgroundBrush}" />
                            <Setter TargetName="bg" Property="Stroke" Value="{StaticResource ExpanderButtonPressedBorderBrush}" />
                        </Trigger>
                        <Trigger Property="IsFocused" Value="true">
                            <Setter TargetName="bg" Property="Stroke" Value="{StaticResource ExpanderButtonFocusedBorderBrush}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="bg" Property="Fill" Value="{StaticResource ExpanderButtonHoverBackgroundBrush}" />
                            <Setter TargetName="bg" Property="Stroke" Value="{StaticResource ExpanderButtonHoverBorderBrush}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="bg" Property="Fill" Value="{StaticResource ExpanderButtonPressedBackgroundBrush}" />
                            <Setter TargetName="bg" Property="Stroke" Value="{StaticResource ExpanderButtonPressedBorderBrush}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="MainBorder" Property="Opacity" Value="0.3" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  *********************************  Expander Left Style  *********************************  -->
    <Style x:Key="ExpanderLeftHeaderStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border x:Name="MainBorder" Padding="{TemplateBinding Padding}">
                        <Grid Background="{StaticResource TransparentBrush}" SnapsToDevicePixels="True">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="24" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>
                            <Grid>
                                <Ellipse x:Name="bg"
                                         Width="{StaticResource DefaultSize}"
                                         Height="{StaticResource DefaultSize}"
                                         HorizontalAlignment="Center"
                                         VerticalAlignment="Center"
                                         Fill="{StaticResource ExpanderButtonBackgroundBrush}"
                                         Stroke="{StaticResource ExpanderButtonBorderBrush}" />
                                <Path x:Name="arrow"
                                      Width="10"
                                      Height="6"
                                      Margin="-1 0 0 0"
                                      Data="{StaticResource VArrowDown}"
                                      Fill="{StaticResource ForegroundBrush}"
                                      Opacity="0.4"
                                      RenderTransformOrigin="0.5, 0.5"
                                      Stretch="Fill">
                                    <Path.RenderTransform>
                                        <TransformGroup>
                                            <RotateTransform Angle="90" />
                                        </TransformGroup>
                                    </Path.RenderTransform>
                                </Path>
                            </Grid>
                            <ContentPresenter Grid.Row="1"
                                              Margin="0,4,0,0"
                                              HorizontalAlignment="Center"
                                              VerticalAlignment="Stretch"
                                              RecognizesAccessKey="True"
                                              SnapsToDevicePixels="True" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter TargetName="arrow" Property="LayoutTransform">
                                <Setter.Value>
                                    <RotateTransform Angle="180" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="bg" Property="Fill" Value="{StaticResource ExpanderButtonPressedBackgroundBrush}" />
                            <Setter TargetName="bg" Property="Stroke" Value="{StaticResource ExpanderButtonPressedBorderBrush}" />
                        </Trigger>
                        <Trigger Property="IsFocused" Value="true">
                            <Setter TargetName="bg" Property="Stroke" Value="{StaticResource ExpanderButtonFocusedBorderBrush}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="bg" Property="Fill" Value="{StaticResource ExpanderButtonHoverBackgroundBrush}" />
                            <Setter TargetName="bg" Property="Stroke" Value="{StaticResource ExpanderButtonHoverBorderBrush}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="bg" Property="Fill" Value="{StaticResource ExpanderButtonPressedBackgroundBrush}" />
                            <Setter TargetName="bg" Property="Stroke" Value="{StaticResource ExpanderButtonPressedBorderBrush}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="MainBorder" Property="Opacity" Value="0.3" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  *********************************  Expander Down Style  *********************************  -->
    <Style x:Key="ExpanderDownHeaderStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border x:Name="MainBorder" Padding="{TemplateBinding Padding}">
                        <Grid Background="{StaticResource TransparentBrush}" SnapsToDevicePixels="True">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="24" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <Ellipse x:Name="bg"
                                     Width="{StaticResource DefaultSize}"
                                     Height="{StaticResource DefaultSize}"
                                     HorizontalAlignment="Center"
                                     VerticalAlignment="Center"
                                     Fill="{StaticResource ExpanderButtonBackgroundBrush}"
                                     Stroke="{StaticResource ExpanderButtonBorderBrush}" />
                            <Path x:Name="arrow"
                                  Width="10"
                                  Height="6"
                                  Margin="0 0 0 -1"
                                  Data="{StaticResource VArrowDown}"
                                  Fill="{StaticResource ForegroundBrush}"
                                  Opacity="0.4"
                                  RenderTransformOrigin="0.5, 0.5"
                                  Stretch="Fill" />
                            <ContentPresenter Grid.Column="1"
                                              Margin="4,0,0,0"
                                              HorizontalAlignment="Stretch"
                                              VerticalAlignment="Center"
                                              RecognizesAccessKey="True"
                                              SnapsToDevicePixels="True" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="true">
                            <Setter TargetName="bg" Property="Stroke" Value="{StaticResource ExpanderButtonFocusedBorderBrush}" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter TargetName="arrow" Property="LayoutTransform">
                                <Setter.Value>
                                    <RotateTransform Angle="180" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="bg" Property="Fill" Value="{StaticResource ExpanderButtonPressedBackgroundBrush}" />
                            <Setter TargetName="bg" Property="Stroke" Value="{StaticResource ExpanderButtonPressedBorderBrush}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="bg" Property="Fill" Value="{StaticResource ExpanderButtonHoverBackgroundBrush}" />
                            <Setter TargetName="bg" Property="Stroke" Value="{StaticResource ExpanderButtonHoverBorderBrush}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="bg" Property="Fill" Value="{StaticResource ExpanderButtonPressedBackgroundBrush}" />
                            <Setter TargetName="bg" Property="Stroke" Value="{StaticResource ExpanderButtonPressedBorderBrush}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="MainBorder" Property="Opacity" Value="0.3" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  *********************************  Expander Style  *********************************  -->
    <Style x:Key="ExpanderStyle" TargetType="{x:Type Expander}">
        <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
        <Setter Property="FontFamily" Value="{StaticResource FontFamily}" />
        <Setter Property="FontSize" Value="{StaticResource FontSize}" />
        <Setter Property="FontWeight" Value="{StaticResource FontNormal}" />
        <Setter Property="Background" Value="{StaticResource ExpanderBackgroundBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource ExpanderBorderBrush}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Expander}">
                    <Border x:Name="Main"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{StaticResource CornerRadius}"
                            SnapsToDevicePixels="true">
                        <DockPanel>
                            <ToggleButton x:Name="HeaderSite"
                                          MinWidth="0"
                                          MinHeight="0"
                                          Margin="1"
                                          HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                          Content="{TemplateBinding Header}"
                                          ContentTemplate="{TemplateBinding HeaderTemplate}"
                                          ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}"
                                          DockPanel.Dock="Top"
                                          FontFamily="{TemplateBinding FontFamily}"
                                          FontSize="{TemplateBinding FontSize}"
                                          FontStretch="{TemplateBinding FontStretch}"
                                          FontStyle="{TemplateBinding FontStyle}"
                                          FontWeight="{TemplateBinding FontWeight}"
                                          Foreground="{TemplateBinding Foreground}"
                                          IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                          Padding="{TemplateBinding Padding}"
                                          Style="{StaticResource ExpanderDownHeaderStyle}" />
                            <ContentPresenter x:Name="ExpandSite"
                                              Margin="{TemplateBinding Padding}"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              DockPanel.Dock="Bottom"
                                              Focusable="false"
                                              Visibility="Collapsed" />
                        </DockPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsExpanded" Value="true">
                            <Setter TargetName="ExpandSite" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="ExpandDirection" Value="Right">
                            <Setter TargetName="ExpandSite" Property="DockPanel.Dock" Value="Right" />
                            <Setter TargetName="HeaderSite" Property="DockPanel.Dock" Value="Left" />
                            <Setter TargetName="HeaderSite" Property="Style" Value="{StaticResource ExpanderRightHeaderStyle}" />
                        </Trigger>
                        <Trigger Property="ExpandDirection" Value="Up">
                            <Setter TargetName="ExpandSite" Property="DockPanel.Dock" Value="Top" />
                            <Setter TargetName="HeaderSite" Property="DockPanel.Dock" Value="Bottom" />
                            <Setter TargetName="HeaderSite" Property="Style" Value="{StaticResource ExpanderUpHeaderStyle}" />
                        </Trigger>
                        <Trigger Property="ExpandDirection" Value="Left">
                            <Setter TargetName="ExpandSite" Property="DockPanel.Dock" Value="Left" />
                            <Setter TargetName="HeaderSite" Property="DockPanel.Dock" Value="Right" />
                            <Setter TargetName="HeaderSite" Property="Style" Value="{StaticResource ExpanderLeftHeaderStyle}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="Main" Property="Opacity" Value="0.3" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  *********************************  ToggleButton Style  *********************************  -->
    <Style x:Key="ToggleButtonStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
        <Setter Property="FontFamily" Value="{StaticResource FontFamily}" />
        <Setter Property="FontSize" Value="{StaticResource FontSize}" />
        <Setter Property="FontWeight" Value="{StaticResource FontNormal}" />
        <Setter Property="Padding" Value="10,0,10,2" />
        <Setter Property="MinHeight" Value="{StaticResource DefaultMinHeight}" />
        <Setter Property="MinWidth" Value="{StaticResource DefaultMinHeight}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Grid SnapsToDevicePixels="True">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Bd" Storyboard.TargetProperty="Fill">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonHoverBackgroundBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Bd" Storyboard.TargetProperty="Stroke">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonHoverBorderBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Bd" Storyboard.TargetProperty="Fill">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonPressedBackgroundBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Bd" Storyboard.TargetProperty="Stroke">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonPressedBorderBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ContentControl" Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="0.2" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="Bd" Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="0.3" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CheckStates">
                                <VisualState x:Name="Checked">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="checked" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unchecked" />
                                <VisualState x:Name="Indeterminate" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused" />
                                <VisualState x:Name="Unfocused" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Rectangle x:Name="Bd"
                                   Fill="{StaticResource ButtonBackgroundBrush}"
                                   RadiusX="{StaticResource RadiusXY}"
                                   RadiusY="{StaticResource RadiusXY}"
                                   Stroke="{StaticResource ButtonBorderBrush}"
                                   StrokeThickness="1" />
                        <Rectangle x:Name="checked"
                                   Fill="{StaticResource ButtonPressedBackgroundBrush}"
                                   RadiusX="{StaticResource RadiusXY}"
                                   RadiusY="{StaticResource RadiusXY}"
                                   Stroke="{StaticResource ButtonPressedBackgroundBrush}"
                                   StrokeThickness="1"
                                   Visibility="Collapsed" />
                        <ContentControl x:Name="ContentControl"
                                        Margin="{TemplateBinding Padding}"
                                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                        Foreground="{TemplateBinding Foreground}">
                            <ContentPresenter x:Name="contentPresenter" />
                        </ContentControl>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  *********************************  GroupBox Style  *********************************  -->
    <BorderGapMaskConverter x:Key="BorderGapMaskConverter" />
    <Style x:Key="GroupBoxStyle" TargetType="{x:Type GroupBox}">
        <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
        <Setter Property="FontFamily" Value="{StaticResource FontFamily}" />
        <Setter Property="FontSize" Value="{StaticResource FontSize}" />
        <Setter Property="FontWeight" Value="{StaticResource FontNormal}" />
        <Setter Property="BorderBrush" Value="{StaticResource GroupBoxBorderBrush}" />
        <Setter Property="BorderThickness" Value="{StaticResource DefaultBorderThickness}" />
        <Setter Property="Padding" Value="5" />
        <Setter Property="Background" Value="{StaticResource GroupBoxBackgroundBrush}" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type GroupBox}">
                    <Grid SnapsToDevicePixels="true">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="6" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="6" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                            <RowDefinition Height="6" />
                        </Grid.RowDefinitions>
                        <Border BorderBrush="{StaticResource TransparentBrush}" BorderThickness="{TemplateBinding BorderThickness}" Grid.ColumnSpan="4" CornerRadius="0" Grid.Row="1" Grid.RowSpan="3">
                            <Border.OpacityMask>
                                <MultiBinding ConverterParameter="7" Converter="{StaticResource BorderGapMaskConverter}">
                                    <Binding ElementName="Header" Path="ActualWidth" />
                                    <Binding Path="ActualWidth" RelativeSource="{RelativeSource Self}" />
                                    <Binding Path="ActualHeight" RelativeSource="{RelativeSource Self}" />
                                </MultiBinding>
                            </Border.OpacityMask>
                            <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="0">
                            </Border>
                        </Border>
                        <Border x:Name="Header" Grid.Column="1" Padding="10,0,10,0" Grid.Row="0" Grid.RowSpan="2">
                            <ContentPresenter ContentSource="Header" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Border>
                        <ContentPresenter Grid.ColumnSpan="2" Grid.Column="1" Margin="{TemplateBinding Padding}" Grid.Row="2" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  ********************************* StatusBarItem Style  *********************************  -->
    <Style x:Key="StatusBarItemStyle" TargetType="{x:Type StatusBarItem}">
        <Setter Property="Padding" Value="{StaticResource StatusBarItemPadding}"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type StatusBarItem}">
                    <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" 
                            Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{StaticResource StatusBarForegroundBrushDisabled}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  *********************************  StatusBar Separator Style  *********************************  -->
    <Style x:Key="{x:Static StatusBar.SeparatorStyleKey}" TargetType="{x:Type Separator}">
        <Setter Property="Background" Value="{StaticResource StatusBarSeparatorBackgroundBrush}"/>
        <Setter Property="MinWidth" Value="{StaticResource SeparatorMinWidth}"/>
        <Setter Property="MinHeight" Value="{StaticResource SeparatorMinHeight}"/>
        <Setter Property="Margin" Value="{StaticResource SeparatorMargin}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Separator}">
                    <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" 
                            BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  *********************************  StatusBar Style  *********************************  -->
    <Style x:Key="StatusBarStyle" TargetType="{x:Type StatusBar}">
        <Setter Property="ItemContainerStyle" Value="{StaticResource StatusBarItemStyle}"/>
        <Setter Property="Background" Value="{StaticResource StatusBarBackgroundBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource StatusBarBorderBrush}"/>
        <Setter Property="BorderThickness" Value="{StaticResource StatusBarBorderThickness}"/>
        <Setter Property="Foreground" Value="{StaticResource StatusBarForegroundBrush}"/>
        <Setter Property="FontFamily" Value="{StaticResource FontFamily}" />
        <Setter Property="FontSize" Value="{StaticResource FontSize}" />
        <Setter Property="Height" Value="{StaticResource StatusBarMinHeight}"/>
        <Setter Property="VerticalAlignment" Value="{StaticResource StatusBarVerticalAlignment}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type StatusBar}">
                    <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                        <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  ********************** Implicit Styles ***********************  -->
    <Style BasedOn="{StaticResource ButtonStyle}" TargetType="{x:Type Button}">
        <Style.Resources>
            <Style TargetType="{x:Type ContentPresenter}">
                <Setter Property="RecognizesAccessKey" Value="True" />
            </Style>
        </Style.Resources>
    </Style>
    <Style BasedOn="{StaticResource ScrollBarStyle}" TargetType="{x:Type ScrollBar}" />
    <Style BasedOn="{StaticResource ScrollViewerStyle}" TargetType="{x:Type ScrollViewer}" />
    <Style BasedOn="{StaticResource ComboBoxStyle}" TargetType="{x:Type ComboBox}" />
    <Style BasedOn="{StaticResource ComboBoxItemStyle}" TargetType="{x:Type ComboBoxItem}" />
    <Style BasedOn="{StaticResource TextBoxStyle}" TargetType="{x:Type TextBox}" />
    <Style BasedOn="{StaticResource ListBoxStyle}" TargetType="{x:Type ListBox}" />
    <Style BasedOn="{StaticResource ListBoxItemStyle}" TargetType="{x:Type ListBoxItem}" />
    <Style BasedOn="{StaticResource CheckBoxStyle}" TargetType="CheckBox">
        <!--  Adding setter for VerticalContentAlignment to target default behavior of MS check box.  -->
        <Setter Property="VerticalContentAlignment" Value="Top" />
    </Style>
    <Style BasedOn="{StaticResource RadioButtonStyle}" TargetType="{x:Type RadioButton}" />
    <Style BasedOn="{StaticResource LabelStyle}" TargetType="{x:Type Label}" />
    <Style BasedOn="{StaticResource SliderStyle}" TargetType="{x:Type Slider}" />
    <Style BasedOn="{StaticResource RepeatButtonStyle}" TargetType="{x:Type RepeatButton}" />
    <Style BasedOn="{StaticResource GridSplitterStyle}" TargetType="{x:Type GridSplitter}" />
    <Style BasedOn="{StaticResource ProgressBarStyle}" TargetType="{x:Type ProgressBar}" />
    <Style BasedOn="{StaticResource PasswordBoxStyle}" TargetType="{x:Type PasswordBox}" />
    <Style BasedOn="{StaticResource ExpanderStyle}" TargetType="{x:Type Expander}" />
    <Style BasedOn="{StaticResource ToggleButtonStyle}" TargetType="{x:Type ToggleButton}" />
    <Style BasedOn="{StaticResource GroupBoxStyle}" TargetType="{x:Type GroupBox}" />
    <Style BasedOn="{StaticResource StatusBarItemStyle}" TargetType="{x:Type StatusBarItem}" />
    <Style BasedOn="{StaticResource {x:Static StatusBar.SeparatorStyleKey}}" TargetType="{x:Type Separator}" />
    <Style BasedOn="{StaticResource StatusBarStyle}" TargetType="{x:Type StatusBar}" />
</ResourceDictionary>