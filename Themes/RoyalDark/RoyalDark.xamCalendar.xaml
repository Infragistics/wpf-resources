<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:PresentationOptions="http://schemas.microsoft.com/winfx/2006/xaml/presentation/options"
                    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                    xmlns:ig="http://schemas.infragistics.com/xaml"
                    xmlns:igEditors="http://schemas.infragistics.com/xaml"
                    xmlns:igEditorsPrim="http://schemas.infragistics.com/xaml/primitives"
                    xmlns:igPrim="http://schemas.infragistics.com/xaml/primitives"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib"
                    mc:Ignorable="PresentationOptions d">
  
    <!--  *********************************  RESOURCES  *********************************  -->
    <ResourceDictionary.MergedDictionaries>    
        <ResourceDictionary Source="RoyalDark.Styles.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <!--SS 08/02/16 TFS222433 - Add vertical scrolling-->

    <!-- ======================== -->
    <!-- ValueConverters          -->
    <!-- ======================== -->

    <igPrim:ValueConverterGroup x:Key="scrollDirectionToTransformConverter" >
      <igPrim:FixedValueConverter>
        <igPrim:FixedValueConverter.SourceValue>
          <Orientation>Vertical</Orientation>
        </igPrim:FixedValueConverter.SourceValue>
        <igPrim:FixedValueConverter.DestinationValue>
          <RotateTransform Angle="90" CenterX="0.5" CenterY="0.5"/>
        </igPrim:FixedValueConverter.DestinationValue>
      </igPrim:FixedValueConverter>
    </igPrim:ValueConverterGroup>

    <!--  *********************************  COMMON ATTRIBUTES  *********************************  -->
    <Thickness x:Key="TodayButtonPadding">20 6 20 6</Thickness>
    <Thickness x:Key="GroupTitlePadding">10 0 10 2</Thickness>
    <Thickness x:Key="DayBasePadding">4 1 4 1</Thickness>
    <Thickness x:Key="ItemBasePadding">4 1 4 1</Thickness>
    <Thickness x:Key="WeekNumberPadding">4 0 4 0</Thickness>
    <Thickness x:Key="DayOfWeekPanelMargin">0 2 0 2</Thickness>
    <Thickness x:Key="RepeatButtonArrowMargin">4 4 4 4</Thickness>

    <!--  *********************************  BRUSHES  *********************************  -->
    <SolidColorBrush x:Key="ForegroundBrush" Color="{StaticResource Color_001}" />
    <SolidColorBrush x:Key="TransparentBrush" Color="{StaticResource Color_046}" />

    <!--  RepeatButton Brushes  -->
    <SolidColorBrush x:Key="ScrollRepeatButtonBackgroundBrush" Color="{StaticResource Color_004}" />
    <SolidColorBrush x:Key="ScrollRepeatButtonHoverBackgroundBrush" Color="{StaticResource Color_001}" />
    <SolidColorBrush x:Key="ScrollRepeatButtonPressedBackgroundBrush" Color="{StaticResource Color_013}" />

    <!--  Calendar Brushes  -->
    <SolidColorBrush x:Key="CalendarBackgroundBrush" Color="{StaticResource Color_009}" />
    <SolidColorBrush x:Key="CalendarBorderBrush" Color="{StaticResource Color_014}" />
    <SolidColorBrush x:Key="CalendarOtherMonthForegroundBrush" Color="{StaticResource Color_015}" />
    <SolidColorBrush x:Key="CalendarDayForegroundBrush" Color="{StaticResource Color_001}" />
    <SolidColorBrush x:Key="CalendarTodayButtonContainerBackgroundBrush" Color="{StaticResource Color_009}" />
    <SolidColorBrush x:Key="CalendarHeaderForegroundBrush" Color="{StaticResource Color_004}" />

    <!--  CalendarDayOfWeek Brushes  -->
    <SolidColorBrush x:Key="CalendarDayOfWeekBackgroundBrush" Color="{StaticResource Color_009}" />
    <SolidColorBrush x:Key="CalendarDayOfWeekForegroundBrush" Color="{StaticResource Color_017}" />

    <!--  CalendarItem Brushes  -->
    <SolidColorBrush x:Key="CalendarItemForegroundBrush" Color="{StaticResource Color_001}" />
    <SolidColorBrush x:Key="CalendarItemGroupTitleBackgroundBrush" Color="{StaticResource Color_009}" />
    <SolidColorBrush x:Key="CalendarItemMouseOverBackgroundBrush" Color="{StaticResource Color_010}" />
    <SolidColorBrush x:Key="CalendarItemSelectedBackgroundBrush" Color="{StaticResource Color_011}" />
    <SolidColorBrush x:Key="CalendarItemSelectedForegroundBrush" Color="{StaticResource Color_001}" />

    <!--  Leading Or trailing Brushes  -->
    <SolidColorBrush x:Key="LeadingOrTrailingItemForegroundBrush" Color="{StaticResource Color_003}" />
    <SolidColorBrush x:Key="LeadingOrTrailingTodayForegroundBrush" Color="{StaticResource Color_001}" />
    <SolidColorBrush x:Key="LeadingOrTrailingSelectedItemForegroundBrush" Color="{StaticResource Color_001}" />
    <SolidColorBrush x:Key="LeadingOrTrailingMouseOverItemForegroundBrush" Color="{StaticResource Color_001}" />

    <!--  CalendarWeekNumber Brushes  -->
    <SolidColorBrush x:Key="CalendarWeekNumberBaseBackgroundBrush" Color="{StaticResource Color_009}" />
    <SolidColorBrush x:Key="CalendarWeekNumberBaseForegroundBrush" Color="{StaticResource Color_017}" />

    <!--  Today Brushes  -->
    <SolidColorBrush x:Key="TodayForegroundBrush" Color="{StaticResource Color_001}" />
    <SolidColorBrush x:Key="TodayBackgroundBrush" Color="{StaticResource Color_002}" />
    <SolidColorBrush x:Key="TodayBorderBrush" Color="{StaticResource Color_013}" />

    <!--  CalendarItemAreaWeekNumber Brushes  -->
    <SolidColorBrush x:Key="CalendarItemAreaWeekNumberBaseBackgroundBrush" Color="{StaticResource Color_009}" />
    <SolidColorBrush x:Key="CalendarItemAreaWeekNumberBaseBorderBrush" Color="{StaticResource Color_014}" />


    <igPrim:CalendarResourceString x:Key="todayText" ResourceName="Today" />

    <!--  *********************************  ScrollPreviousRepeatButton Style  *********************************  -->
    <Style x:Key="ScrollPreviousRepeatButtonStyle" TargetType="RepeatButton">
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RepeatButton">
                    <Grid igPrim:XamlHelper.SnapsToDevicePixels="{TemplateBinding igPrim:XamlHelper.SnapsToDevicePixels}">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="Arrow" Storyboard.TargetProperty="Fill">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ScrollRepeatButtonHoverBackgroundBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="Arrow" Storyboard.TargetProperty="Fill">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ScrollRepeatButtonPressedBackgroundBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" Storyboard.TargetName="Arrow" Storyboard.TargetProperty="(UIElement.Opacity)" To="0.3" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Rectangle Width="10"
                                   Height="10"
                                   Margin="{StaticResource RepeatButtonArrowMargin}"
                                   Fill="{StaticResource TransparentBrush}" />
                        <Path x:Name="Arrow"
                              Width="6"
                              Height="10"
                              Margin="{StaticResource RepeatButtonArrowMargin}"
                              Data="{StaticResource VArrowLeft}"
                              Fill="{StaticResource ScrollRepeatButtonBackgroundBrush}"
                              Stretch="Fill" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  *********************************  ScrollNextRepeatButton Style  *********************************  -->
    <Style x:Key="ScrollNextRepeatButtonStyle" TargetType="RepeatButton">
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RepeatButton">
                    <Grid igPrim:XamlHelper.SnapsToDevicePixels="{TemplateBinding igPrim:XamlHelper.SnapsToDevicePixels}">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="Arrow" Storyboard.TargetProperty="Fill">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ScrollRepeatButtonHoverBackgroundBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="Arrow" Storyboard.TargetProperty="Fill">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ScrollRepeatButtonPressedBackgroundBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" Storyboard.TargetName="Arrow" Storyboard.TargetProperty="(UIElement.Opacity)" To="0.3" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Rectangle Width="10"
                                   Height="10"
                                   Margin="{StaticResource RepeatButtonArrowMargin}"
                                   Fill="{StaticResource TransparentBrush}" />
                        <Path x:Name="Arrow"
                              Width="6"
                              Height="10"
                              Margin="{StaticResource RepeatButtonArrowMargin}"
                              Data="{StaticResource VArrowRight}"
                              Fill="{StaticResource ScrollRepeatButtonBackgroundBrush}"
                              Stretch="Fill" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  *********************************  TodayButton Style  *********************************  -->
    <Style x:Key="TodayButtonStyle" BasedOn="{StaticResource ButtonStyle}" TargetType="Button">
        <Setter Property="Padding" Value="{StaticResource TodayButtonPadding}" />
        <Setter Property="Focusable" Value="False" />
    </Style>

    <!--  *********************************  CalendarItemGroupTitleButton Style  *********************************  -->
    <Style x:Key="CalendarItemGroupTitleButtonStyle" TargetType="Button">
        <Setter Property="Foreground" Value="{StaticResource CalendarHeaderForegroundBrush}" />
        <Setter Property="Padding" Value="{StaticResource GroupTitlePadding}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                      <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0" Storyboard.TargetName="contentPresenter" Storyboard.TargetProperty="(TextElement.Foreground)">
                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ForegroundBrush}" />
                                      </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                              <VisualState x:Name="MouseOver" >
                                <Storyboard>
                                  <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0" Storyboard.TargetName="contentPresenter" Storyboard.TargetProperty="(TextElement.Foreground)">
                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ForegroundBrush}" />
                                  </ObjectAnimationUsingKeyFrames>
                                </Storyboard>
                              </VisualState>
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="Disabled" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Rectangle Height="19" Fill="{StaticResource TransparentBrush}" />
                        <ContentPresenter x:Name="contentPresenter"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          TextElement.Foreground="{TemplateBinding Foreground}" 
                                          igPrim:XamlHelper.SnapsToDevicePixels="True"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  *********************************  Value Converters  *********************************  -->
    <igPrim:ValueConverterGroup x:Key="boolToFontBold">
        <!--  if true sets FontWeight to Bold  -->
        <igPrim:FixedValueConverter>
            <igPrim:FixedValueConverter.SourceValue>
                <sys:Boolean>True</sys:Boolean>
            </igPrim:FixedValueConverter.SourceValue>
            <igPrim:FixedValueConverter.DestinationValue>
                <FontWeight>Bold</FontWeight>
            </igPrim:FixedValueConverter.DestinationValue>
        </igPrim:FixedValueConverter>
    </igPrim:ValueConverterGroup>

    <!--  Visibility to '52'  -->
    <igPrim:ValueConverterGroup x:Key="visibilityTo52Converter">
        <igPrim:FixedValueConverter>
            <igPrim:FixedValueConverter.SourceValue>
                <Visibility>Visible</Visibility>
            </igPrim:FixedValueConverter.SourceValue>
            <igPrim:FixedValueConverter.DestinationValue>
                <sys:Int32>52</sys:Int32>
            </igPrim:FixedValueConverter.DestinationValue>
        </igPrim:FixedValueConverter>

        <igPrim:FixedValueConverter DestinationValue="{x:Null}">
            <igPrim:FixedValueConverter.SourceValue>
                <Visibility>Collapsed</Visibility>
            </igPrim:FixedValueConverter.SourceValue>
        </igPrim:FixedValueConverter>

    </igPrim:ValueConverterGroup>

    <!--  *********************************  CalendarItem Template  *********************************  -->
 <ControlTemplate x:Key="CalendarItemInnerTemplate" TargetType="igEditorsPrim:CalendarItem">
  <Grid>
   <VisualStateManager.VisualStateGroups>
    <VisualStateGroup x:Name="FocusStates">
     <VisualState x:Name="Unfocused" />
     <VisualState x:Name="Focused">
      <Storyboard>
       <ObjectAnimationUsingKeyFrames Storyboard.TargetName="FocusedItem" Storyboard.TargetProperty="(UIElement.Visibility)">
        <DiscreteObjectKeyFrame KeyTime="0">
         <DiscreteObjectKeyFrame.Value>
          <Visibility>Visible</Visibility>
         </DiscreteObjectKeyFrame.Value>
        </DiscreteObjectKeyFrame>
       </ObjectAnimationUsingKeyFrames>
      </Storyboard>
     </VisualState>
    </VisualStateGroup>
    <VisualStateGroup x:Name="CommonStates">
     <VisualState x:Name="Normal" />
     <VisualState x:Name="MouseOver">
      <Storyboard>
       <ObjectAnimationUsingKeyFrames Storyboard.TargetName="MouseOverItem" Storyboard.TargetProperty="(UIElement.Visibility)">
        <DiscreteObjectKeyFrame KeyTime="0">
         <DiscreteObjectKeyFrame.Value>
          <Visibility>Visible</Visibility>
         </DiscreteObjectKeyFrame.Value>
        </DiscreteObjectKeyFrame>
       </ObjectAnimationUsingKeyFrames>
      </Storyboard>
     </VisualState>
     <VisualState x:Name="Disabled">
      <Storyboard>
       <DoubleAnimation Duration="0" Storyboard.TargetName="textBlock" Storyboard.TargetProperty="(UIElement.Opacity)" To="0.3" />
       <Storyboard>
        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="OtherMonthDay" Storyboard.TargetProperty="Foreground">
         <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ForegroundBrush}" />
        </ObjectAnimationUsingKeyFrames>
       </Storyboard>
      </Storyboard>
     </VisualState>
    </VisualStateGroup>
    <VisualStateGroup x:Name="DayStates">
     <VisualState x:Name="Today">
      <Storyboard>
       <ObjectAnimationUsingKeyFrames Storyboard.TargetName="textBlock" Storyboard.TargetProperty="Foreground">
        <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource TodayForegroundBrush}" />
       </ObjectAnimationUsingKeyFrames>
      </Storyboard>
     </VisualState>
     <VisualState x:Name="RegularDay" />
    </VisualStateGroup>
    <VisualStateGroup x:Name="LeadingOrTrailingStates">
     <VisualState x:Name="IsNotLeadingOrTrailing" />
     <VisualState x:Name="IsLeadingOrTrailing">
      <Storyboard>
       <DoubleAnimation d:IsOptimized="True" Duration="0" Storyboard.TargetName="textBlock" Storyboard.TargetProperty="(UIElement.Opacity)" To="0" />
       <ObjectAnimationUsingKeyFrames Storyboard.TargetName="OtherMonthDay" Storyboard.TargetProperty="(UIElement.Visibility)">
        <DiscreteObjectKeyFrame KeyTime="0">
         <DiscreteObjectKeyFrame.Value>
          <Visibility>Visible</Visibility>
         </DiscreteObjectKeyFrame.Value>
        </DiscreteObjectKeyFrame>
       </ObjectAnimationUsingKeyFrames>
       <ObjectAnimationUsingKeyFrames Storyboard.TargetName="textBlock" Storyboard.TargetProperty="(UIElement.Visibility)">
        <DiscreteObjectKeyFrame KeyTime="0">
         <DiscreteObjectKeyFrame.Value>
          <Visibility>Collapsed</Visibility>
         </DiscreteObjectKeyFrame.Value>
        </DiscreteObjectKeyFrame>
       </ObjectAnimationUsingKeyFrames>
      </Storyboard>
     </VisualState>
    </VisualStateGroup>
    <VisualStateGroup x:Name="ActiveStates">
     <VisualState x:Name="Inactive" />
     <VisualState x:Name="Active" >
      <Storyboard>
       <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="FocusedItem">
        <DiscreteObjectKeyFrame KeyTime="0">
         <DiscreteObjectKeyFrame.Value>
          <Visibility>Visible</Visibility>
         </DiscreteObjectKeyFrame.Value>
        </DiscreteObjectKeyFrame>
       </ObjectAnimationUsingKeyFrames>
      </Storyboard>
     </VisualState>
    </VisualStateGroup>
    <VisualStateGroup x:Name="SelectionStates">
     <VisualState x:Name="Selected">
      <Storyboard>
       <ObjectAnimationUsingKeyFrames Storyboard.TargetName="SelectedItem" Storyboard.TargetProperty="(UIElement.Visibility)">
        <DiscreteObjectKeyFrame KeyTime="0">
         <DiscreteObjectKeyFrame.Value>
          <Visibility>Visible</Visibility>
         </DiscreteObjectKeyFrame.Value>
        </DiscreteObjectKeyFrame>
       </ObjectAnimationUsingKeyFrames>
      </Storyboard>
     </VisualState>
     <VisualState x:Name="Unselected" />
    </VisualStateGroup>
    <VisualStateGroup x:Name="HighlightStates">
     <VisualState x:Name="IsHighlighted" />
     <VisualState x:Name="IsNotHighlighted" />
    </VisualStateGroup>
   </VisualStateManager.VisualStateGroups>
   <Rectangle Fill="{StaticResource TransparentBrush}" />
   <Rectangle x:Name="MouseOverItem" 
              Fill="{StaticResource CalendarItemMouseOverBackgroundBrush}" 
              Visibility="Collapsed" />
   <Rectangle x:Name="SelectedItem" 
              Fill="{StaticResource CalendarItemSelectedBackgroundBrush}" 
              Visibility="Collapsed" />
   <Rectangle x:Name="FocusedItem" 
              Fill="{StaticResource CalendarItemSelectedBackgroundBrush}" 
              Visibility="Collapsed" />
   <Border x:Name="InnerBorder" 
           HorizontalAlignment="{TemplateBinding HorizontalAlignment}" 
           VerticalAlignment="{TemplateBinding VerticalAlignment}" 
           igPrim:XamlHelper.SnapsToDevicePixels="True" 
           Background="{TemplateBinding Background}" 
           BorderBrush="{TemplateBinding BorderBrush}" 
           BorderThickness="0">
    <Grid Margin="{TemplateBinding Padding}">
     <TextBlock x:Name="textBlock" 
                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
                igPrim:XamlHelper.SnapsToDevicePixels="{TemplateBinding igPrim:XamlHelper.SnapsToDevicePixels}" 
                Foreground="{TemplateBinding Foreground}" 
                Text="{TemplateBinding Content}" />
     <TextBlock x:Name="SelectedItem1" 
                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
                igPrim:XamlHelper.SnapsToDevicePixels="{TemplateBinding igPrim:XamlHelper.SnapsToDevicePixels}" 
                Foreground="{StaticResource CalendarItemSelectedForegroundBrush}" 
                Text="{TemplateBinding Content}" 
                Visibility="Collapsed" />
     <TextBlock x:Name="OtherMonthDay" 
                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
                igPrim:XamlHelper.SnapsToDevicePixels="{TemplateBinding igPrim:XamlHelper.SnapsToDevicePixels}" 
                Foreground="{TemplateBinding ComputedForeground}" 
                Text="{TemplateBinding Content}" 
                Visibility="Collapsed" />
    </Grid>
   </Border>
  </Grid>
 </ControlTemplate>

 <!--  *********************************  CalendarItem Style  *********************************  -->
    <Style x:Key="CalendarItemBaseStyle" TargetType="igEditorsPrim:CalendarItem">
        <Setter Property="BorderThickness" Value="{StaticResource DefaultBorderThickness}" />
        <Setter Property="Foreground" Value="{StaticResource CalendarItemForegroundBrush}" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Padding" Value="{StaticResource ItemBasePadding}" />
        <Setter Property="Template" Value="{StaticResource CalendarItemInnerTemplate}" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
    </Style>

    <Style BasedOn="{StaticResource CalendarItemBaseStyle}" TargetType="igEditorsPrim:CalendarItem">
        <Setter Property="Margin" Value="0,0,.5,.5" />
    </Style>

    <!--  *********************************  CalendarDay Style  *********************************  -->
    <Style x:Key="CalendarDayBaseStyle" TargetType="igEditorsPrim:CalendarDay">
        <Setter Property="BorderThickness" Value="{StaticResource DefaultBorderThickness}" />
        <Setter Property="Foreground" Value="{StaticResource CalendarDayForegroundBrush}" />
        <Setter Property="Height" Value="{StaticResource DefaultSize}" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Padding" Value="{StaticResource DayBasePadding}" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Width" Value="{StaticResource DefaultSize}" />
        <Setter Property="Template">
        <Setter.Value>
                <ControlTemplate TargetType="igEditorsPrim:CalendarDay">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="WorkDayStates">
                                <VisualState x:Name="WorkDay" />
                                <VisualState x:Name="NonWorkday" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Unfocused" />
                                <VisualState x:Name="Focused" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="MouseOverItem" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="TodayDay" Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource CalendarDayForegroundBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="OtherMonthDay" Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource CalendarDayForegroundBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" Storyboard.TargetName="textBlock" Storyboard.TargetProperty="(UIElement.Opacity)" To="0.3" />
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="OtherMonthDay" Storyboard.TargetProperty="Foreground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ForegroundBrush}" />
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="DayStates">
                                <VisualState x:Name="Today">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="InnerBorder" Storyboard.TargetProperty="Stroke">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource TodayBorderBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="InnerBorder" Storyboard.TargetProperty="Fill">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource TodayBackgroundBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="TodayDay" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="OtherMonthDay" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="textBlock" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="RegularDay" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="LeadingOrTrailingStates">
                                <VisualState x:Name="IsNotLeadingOrTrailing" />
                                <VisualState x:Name="IsLeadingOrTrailing">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="OtherMonthDay" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="textBlock" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ActiveStates">
                                <VisualState x:Name="Inactive" />
                                <VisualState x:Name="Active" >
                                     <Storyboard>
                                         <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ActiveItem" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>      
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="SelectionStates">
                                <VisualState x:Name="Selected">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="SelectedItem" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="OtherMonthDay" Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource CalendarDayForegroundBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="SelectedUnfocused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="SelectedItem" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unselected" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="HighlightStates">
                                <VisualState x:Name="IsHighlighted" />
                                <VisualState x:Name="IsNotHighlighted" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Ellipse Width="{StaticResource DefaultSize}"
                                 Height="{StaticResource DefaultSize}"
                                 Fill="{StaticResource TransparentBrush}" />
                        <Ellipse x:Name="ActiveItem" 
                                 Width="{StaticResource DefaultSize}" 
                                 Height="{StaticResource DefaultSize}" 
                                 Fill="{StaticResource CalendarItemSelectedBackgroundBrush}" 
                                 Visibility="Collapsed" />
                      <Ellipse x:Name="SelectedItem"
                               Width="{StaticResource DefaultSize}"
                               Height="{StaticResource DefaultSize}"
                               Fill="{StaticResource CalendarItemSelectedBackgroundBrush}"
                               Visibility="Collapsed" />
                      <Ellipse x:Name="InnerBorder"
                                Width="{StaticResource DefaultSize}"
                                Height="{StaticResource DefaultSize}"
                                Fill="{TemplateBinding Background}"
                                Stroke="{TemplateBinding BorderBrush}" />
                      <Ellipse x:Name="MouseOverItem"
                               Width="{StaticResource DefaultSize}"
                               Height="{StaticResource DefaultSize}"
                               Fill="{StaticResource CalendarItemMouseOverBackgroundBrush}"
                               Visibility="Collapsed" />
                        <Border HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalAlignment}"
                                igPrim:XamlHelper.SnapsToDevicePixels="True">
                            <Grid Margin="{TemplateBinding Padding}">
                                <TextBlock x:Name="textBlock"
                                           HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                           VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                           igPrim:XamlHelper.SnapsToDevicePixels="{TemplateBinding igPrim:XamlHelper.SnapsToDevicePixels}"
                                           FontWeight="{Binding IsHighlighted, Converter={StaticResource boolToFontBold}, RelativeSource={RelativeSource TemplatedParent}}"
                                           Foreground="{TemplateBinding Foreground}"
                                           Text="{TemplateBinding Content}" />
                                <TextBlock x:Name="OtherMonthDay"
                                           HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                           VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                           igPrim:XamlHelper.SnapsToDevicePixels="{TemplateBinding igPrim:XamlHelper.SnapsToDevicePixels}"
                                           FontWeight="{Binding IsHighlighted, Converter={StaticResource boolToFontBold}, RelativeSource={RelativeSource TemplatedParent}}"
                                           Foreground="{StaticResource CalendarOtherMonthForegroundBrush}"
                                           Text="{TemplateBinding Content}"
                                           Visibility="Collapsed" />
                                <TextBlock x:Name="TodayDay"
                                           HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                           VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                           igPrim:XamlHelper.SnapsToDevicePixels="{TemplateBinding igPrim:XamlHelper.SnapsToDevicePixels}"
                                           FontWeight="{Binding IsHighlighted, Converter={StaticResource boolToFontBold}, RelativeSource={RelativeSource TemplatedParent}}"
                                           Foreground="{StaticResource TodayForegroundBrush}"
                                           Text="{TemplateBinding Content}"
                                           Visibility="Collapsed" />
                            </Grid>
                        </Border>
                    </Grid>
                     <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="True" />
                                <Condition Property="IsLeadingOrTrailingItem" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="OtherMonthDay" Property="Foreground" Value="{StaticResource CalendarDayForegroundBrush}" />
                        </MultiTrigger>     
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style BasedOn="{StaticResource CalendarDayBaseStyle}" TargetType="igEditorsPrim:CalendarDay" />

    <!--  *********************************  CalendarDayOfWeek Style  *********************************  -->
    <Style x:Key="CalendarDayOfWeekBaseStyle" TargetType="igEditorsPrim:CalendarDayOfWeek">
        <Setter Property="Background" Value="{Binding Path=ComputedBackground, RelativeSource={RelativeSource Self}}" />
        <Setter Property="BorderBrush" Value="{x:Null}" />
        <Setter Property="BorderThickness" Value="{StaticResource DefaultBorderThickness}" />
        <Setter Property="Foreground" Value="{StaticResource CalendarDayOfWeekForegroundBrush}" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="igEditorsPrim:CalendarDayOfWeek">
                    <Border HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalAlignment}"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="0"
                            Padding="{TemplateBinding Padding}">
                        <TextBlock HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                   VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                   igPrim:XamlHelper.SnapsToDevicePixels="{TemplateBinding igPrim:XamlHelper.SnapsToDevicePixels}"
                                   Text="{TemplateBinding DisplayText}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="igPrim:XamlHelper.Focusable" Value="False" />
    </Style>
    <Style BasedOn="{StaticResource CalendarDayOfWeekBaseStyle}" TargetType="igEditorsPrim:CalendarDayOfWeek" />

    <!--  *********************************  CalendarWeekNumber Style  *********************************  -->
    <Style x:Key="CalendarWeekNumberBaseStyle" TargetType="igEditorsPrim:CalendarWeekNumber">
        <Setter Property="BorderBrush" Value="{x:Null}" />
        <Setter Property="BorderThickness" Value="{StaticResource DefaultBorderThickness}" />
        <Setter Property="Foreground" Value="{StaticResource CalendarWeekNumberBaseForegroundBrush}" />
        <Setter Property="Height" Value="{StaticResource DefaultSize}" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="MinWidth" Value="4" />
        <Setter Property="Padding" Value="{StaticResource WeekNumberPadding}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="igEditorsPrim:CalendarWeekNumber">
                    <Border x:Name="OuterBorder"
                            HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalAlignment}"
                            Background="Transparent"
                            BorderBrush="Transparent"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="0">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="SelectionStates">
                                <VisualState x:Name="Selected">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="OuterBorder" Storyboard.TargetProperty="Background">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource CalendarWeekNumberBaseBackgroundBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="SelectedUnfocused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="OuterBorder" Storyboard.TargetProperty="Background">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource CalendarWeekNumberBaseBackgroundBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unselected" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <TextBlock Margin="{TemplateBinding Padding}"
                                   HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                   VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                   igPrim:XamlHelper.SnapsToDevicePixels="{TemplateBinding igPrim:XamlHelper.SnapsToDevicePixels}"
                                   Foreground="{TemplateBinding Foreground}"
                                   Text="{Binding}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="igPrim:XamlHelper.Focusable" Value="False" />
    </Style>
    <Style BasedOn="{StaticResource CalendarWeekNumberBaseStyle}" TargetType="igEditorsPrim:CalendarWeekNumber" />

    <!--  *********************************  CalendarItemGroupTitle Style  *********************************  -->
    <Style x:Key="CalendarItemGroupTitleBaseStyle" TargetType="igPrim:CalendarItemGroupTitle">
        <Setter Property="FontWeight" Value="{StaticResource FontSemiBold}" />
        <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="{StaticResource GroupTitlePadding}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="igPrim:CalendarItemGroupTitle">
                    <Grid x:Name="ItemGroupContainer"
                          HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                          VerticalAlignment="{TemplateBinding VerticalAlignment}"
                          Background="{StaticResource CalendarItemGroupTitleBackgroundBrush}"
                          igPrim:XamlHelper.SnapsToDevicePixels="True"
                          TextOptions.TextFormattingMode="Ideal">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver" />
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" Storyboard.TargetName="ItemGroupContainer" Storyboard.TargetProperty="(UIElement.Opacity)" To="0.5" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Button x:Name="headerContent"
                                Grid.Column="0"
                                Grid.ColumnSpan="3"
                                Margin="{TemplateBinding Padding}"
                                HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                igPrim:XamlHelper.Focusable="False"
                                igPrim:XamlHelper.SnapsToDevicePixels="{TemplateBinding igPrim:XamlHelper.SnapsToDevicePixels}"
                                UseLayoutRounding="True"
                                Content="{TemplateBinding Content}"
                                ContentTemplate="{TemplateBinding ContentTemplate}"
                                IsTabStop="False"
                                Style="{StaticResource CalendarItemGroupTitleButtonStyle}">
                            <igEditors:Commanding.Command>
                                <igPrim:CalendarCommandSource CommandType="ZoomOutCalendarMode"
                                                              EventName="Click"
                                                              ParameterBinding="{Binding Group, RelativeSource={RelativeSource TemplatedParent}}" />
                            </igEditors:Commanding.Command>
                        </Button>
                        <RepeatButton x:Name="previousMonth"
                                      Grid.Column="0"
                                      igPrim:XamlHelper.Focusable="False"
                                      Foreground="{TemplateBinding ComputedForeground}"
                                      IsTabStop="False"
                                      Style="{StaticResource ScrollPreviousRepeatButtonStyle}"
                                      Visibility="{Binding Group.ScrollPreviousButtonVisibility, RelativeSource={RelativeSource TemplatedParent}}"
                                      RenderTransform="{Binding Path=(igEditors:CalendarBase.Calendar).ScrollDirection, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource scrollDirectionToTransformConverter}}"
                                      RenderTransformOrigin="0.5,0.5">
                            <igEditors:Commanding.Command>
                                <igPrim:CalendarCommandSource CommandType="ScrollPreviousGroup" EventName="Click" />
                            </igEditors:Commanding.Command>
                        </RepeatButton>
                        <RepeatButton x:Name="nextMonth"
                                      Grid.Column="2"
                                      igPrim:XamlHelper.Focusable="False"
                                      Foreground="{TemplateBinding ComputedForeground}"
                                      IsTabStop="False"
                                      Style="{StaticResource ScrollNextRepeatButtonStyle}"
                                      Visibility="{Binding Group.ScrollNextButtonVisibility, RelativeSource={RelativeSource TemplatedParent}}"
                                      RenderTransform="{Binding Path=(igEditors:CalendarBase.Calendar).ScrollDirection, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource scrollDirectionToTransformConverter}}"
                                      RenderTransformOrigin="0.5,0.5">
                            <igEditors:Commanding.Command>
                                <igPrim:CalendarCommandSource CommandType="ScrollNextGroup" EventName="Click" />
                            </igEditors:Commanding.Command>
                        </RepeatButton>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="igPrim:XamlHelper.Focusable" Value="False" />
    </Style>
    <Style BasedOn="{StaticResource CalendarItemGroupTitleBaseStyle}" TargetType="igPrim:CalendarItemGroupTitle" />

    <!--  *********************************  CalendarItemGroup Style  *********************************  -->
    <Style TargetType="igEditorsPrim:CalendarItemGroup">
        <Setter Property="Background" Value="{StaticResource TransparentBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="igEditorsPrim:CalendarItemGroup">
                    <Border igPrim:XamlHelper.SnapsToDevicePixels="True"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Padding="{TemplateBinding Padding}">
                        <Grid igPrim:XamlHelper.SnapsToDevicePixels="{TemplateBinding igPrim:XamlHelper.SnapsToDevicePixels}">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>
                            <!--  Title  -->
                            <igPrim:CalendarItemGroupTitle x:Name="groupTitle" Content="{TemplateBinding Title}" />
                            <igPrim:CalendarItemAreaPanel Grid.Row="1" />
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="igPrim:XamlHelper.Focusable" Value="False" />
    </Style>

    <!--  *********************************  CalendarItemArea Style  *********************************  -->
    <Style x:Key="CalendarItemAreaBaseStyle" TargetType="igEditorsPrim:CalendarItemArea">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="igEditorsPrim:CalendarItemArea">
                    <Border igPrim:XamlHelper.SnapsToDevicePixels="True"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Padding="{TemplateBinding Padding}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <!--  week numbers  -->
                                <ColumnDefinition Width="*" />
                                <!--  Calendar  -->
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <!--  Days of Week  -->
                                <RowDefinition />
                                <!--  Calendar  -->
                            </Grid.RowDefinitions>
                            <!--  Day Of Week Header  -->
                            <igPrim:CalendarDayOfWeekPanel x:Name="DayOfWeekPanel"
                                                           Grid.Column="1"
                                                           Margin="{StaticResource DayOfWeekPanelMargin}"
                                                           igPrim:XamlHelper.Focusable="False"
                                                           Background="{StaticResource CalendarDayOfWeekBackgroundBrush}"
                                                           Visibility="{TemplateBinding DayOfWeekHeaderVisibility}" />
                            <!--  Week Numbers  -->
                            <Grid x:Name="weekNumbers"
                                  Grid.Row="1"
                                  Grid.Column="0"
                                  Margin="1,0"
                                  Visibility="{TemplateBinding WeekNumberVisibility}">
                                <!--  This is there to ensure the column is wide enough  -->
                                <igPrim:CalendarWeekNumber DataContext="{Binding Path=(igEditors:CalendarBase.Calendar).WeekNumberVisibility, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource visibilityTo52Converter}}"
                                                           IsHitTestVisible="False"
                                                           Opacity="0" />
                                <igPrim:CalendarWeekNumberPanel x:Name="WeekNumberPanel" FirstRow="{TemplateBinding Property=FirstItemRowOffset}" />
                            </Grid>
                            <!--  Items of Group - e.g. Days Of Month  -->
                            <Border x:Name="itemsList"
                                    Grid.Row="1"
                                    Grid.Column="1">
                                <igPrim:UniformGrid x:Name="ItemPanel"
                                                    igPrim:XamlHelper.Focusable="False"
                                                    Columns="{TemplateBinding ItemColumns}"
                                                    FirstColumn="{TemplateBinding FirstItemColumnOffset}"
                                                    FirstRow="{TemplateBinding FirstItemRowOffset}"
                                                    Rows="{TemplateBinding ItemRows}" />
                            </Border>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="igPrim:XamlHelper.Focusable" Value="False" />
    </Style>
    <Style BasedOn="{StaticResource CalendarItemAreaBaseStyle}" TargetType="igEditorsPrim:CalendarItemArea">
        <Setter Property="Margin" Value="0,5,0,0" />
    </Style>

    <!--  *********************************  XamCalendar Style  *********************************  -->
    <Style TargetType="igEditors:XamCalendar">
      <Setter Property="FontFamily" Value="{StaticResource FontFamily}" />
      <Setter Property="FontSize" Value="{StaticResource FontSize}" />
      <Setter Property="FontWeight" Value="{StaticResource FontNormal}" />
      <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="igEditors:XamCalendar">
                    <Border igPrim:XamlHelper.SnapsToDevicePixels="True"
                            Background="{StaticResource CalendarBackgroundBrush}"
                            BorderBrush="{StaticResource CalendarBorderBrush}"
                            BorderThickness="1"
                            Padding="{TemplateBinding Padding}">
                        <Grid x:Name="RootPanel" igPrim:XamlHelper.SnapsToDevicePixels="{TemplateBinding igPrim:XamlHelper.SnapsToDevicePixels}">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*" />
                                <RowDefinition Height="5" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <!--  Months  -->
                            <igPrim:CalendarItemGroupPanel HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />

                            <!--  Today button  -->
                            <Border Grid.Row="2" Background="{StaticResource CalendarTodayButtonContainerBackgroundBrush}">
                                <Button Margin="10"
                                        HorizontalAlignment="Center"
                                        Content="{Binding Source={StaticResource todayText}, Path=Value}"
                                        IsTabStop="False"
                                        Style="{StaticResource TodayButtonStyle}"
                                        Visibility="{TemplateBinding TodayButtonVisibility}">
                                    <igEditors:Commanding.Command>
                                        <igPrim:CalendarCommandSource CommandType="Today" EventName="Click" />
                                    </igEditors:Commanding.Command>
                                </Button>
                            </Border>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
        <Setter Property="Workdays" Value="None" />
        <Setter Property="igPrim:XamlHelper.Focusable" Value="True" />
    </Style>
</ResourceDictionary>