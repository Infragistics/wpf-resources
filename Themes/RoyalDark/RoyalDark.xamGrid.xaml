<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:System="clr-namespace:System;assembly=mscorlib"
                    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                    xmlns:ig="http://schemas.infragistics.com/xaml"
                    xmlns:igBase="http://schemas.infragistics.com/xaml"
                    xmlns:igPrim="http://schemas.infragistics.com/xaml/primitives"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    mc:Ignorable="d">

  <!--  *********************************  RESOURCES  *********************************  -->

  <ResourceDictionary.MergedDictionaries>   
    <ResourceDictionary Source="RoyalDark.Styles.xaml" />
  </ResourceDictionary.MergedDictionaries>

  <!--  *********************************  COMMON GLYPHS  *********************************  -->
  <Geometry x:Key="DatePickerIcon">M 14 1 L 14 11 L 1 11 L 1 1 L 14 1 ZM 15 0 L 0 0 L 0 12 L 15 12 L 15 0 ZM 8 8 L 8 10 L 10 10 L 10 8 L 8 8 ZM 5 8 L 5 10 L 7 10 L 7 8 L 5 8 ZM 2 8 L 2 10 L 4 10 L 4 8 L 2 8 ZM 11 5 L 11 7 L 13 7 L 13 5 L 11 5 ZM 8 5 L 8 7 L 10 7 L 10 5 L 8 5 ZM 5 5 L 5 7 L 7 7 L 7 5 L 5 5 ZM 2 5 L 2 7 L 4 7 L 4 5 L 2 5 ZM 11 2 L 11 4 L 13 4 L 13 2 L 11 2 ZM 8 2 L 8 4 L 10 4 L 10 2 L 8 2 ZM 5 2 L 5 4 L 7 4 L 7 2 L 5 2 Z</Geometry>
  <Geometry x:Key="PinnedIndicatorIcon">M 696 723 L 696 728 L 695 728 L 695 729 L 696 729 L 698 729 L 698 732 L 699 732 L 699 729 L 701 729 L 702 729 L 702 728 L 701 728 L 701 723 L 696 723 Z</Geometry>
  <Geometry x:Key="UnpinnedIndicatorIcon">M 517 725 L 512 725 L 512 724 L 511 724 L 511 725 L 511 727 L 508 727 L 508 728 L 511 728 L 511 730 L 511 731 L 512 731 L 512 730 L 517 730 L 517 725 Z</Geometry>
  <Geometry x:Key="SummarySigmaIcon">M 496.4063 730.2 L 498.375 727.5 L 496.4063 724.8 L 499.6394 724.8 L 499.8334 725.7 L 501 725.7 L 501 724.8 L 501 723 L 499.25 723 L 494 723 L 494 723.9 L 496.625 727.5 L 494 731.1 L 494 732 L 499.25 732 L 501 732 L 501 730.2 L 501 729.3 L 499.8334 729.3 L 499.6394 730.2 L 496.4063 730.2 Z</Geometry>
  <Geometry x:Key="SortIcon">M 1838 567 L 1842 572 L 1846 567 L 1838 567 Z</Geometry>
  <Geometry x:Key="ColumnVisibilityToggleIcon">M 687 729.7106 L 684.3186 726.9803 L 686.9437 724.1912 L 685.8187 723 L 682 727 L 685.8187 731 L 687 729.7106 ZM 682 729.7106 L 679.3186 726.9803 L 681.9437 724.1912 L 680.8187 723 L 677 727 L 680.8187 731 L 682 729.7106 Z</Geometry>
  <Geometry x:Key="FilterIcon">M 524 723 L 534 723 L 530 728 L 530 731 L 528 731 L 528 728 L 524 723 Z</Geometry>
  <Geometry x:Key="RemoveFilterIcon">M 8 5.1428 L 10.8572 8 L 8 10.8572 L 9.1429 12 L 12 9.1428 L 14.8571 12 L 16 10.8572 L 13.1428 8 L 16 5.1428 L 14.8571 4 L 12 6.8572 L 9.1429 4 L 8 5.1428 ZM 0 0 L 4 5 L 4 8 L 6 8 L 6 5 L 10 0 L 0 0 Z</Geometry>
  <Geometry x:Key="ActiveFilterIcon">M 0.3787 6 L 3.5 9.1213 L 6.6213 6 L 0.3787 6 ZM 5 0 L 9 5 L 9 8 L 11 8 L 11 5 L 15 0 L 5 0 Z</Geometry>
  <Geometry x:Key="SearchIcon">M 557.1584 877.0364 L 557.9227 877.8347 C 558.1339 878.0551 558.476 878.0551 558.6871 877.8347 L 562.3103 874.0475 C 562.8701 874.3259 563.7684 874.7371 564.4791 874.7371 C 567.0318 874.7371 569 872.321 569 869.6548 C 569 866.9888 567.0318 865 564.4791 865 C 561.9262 865 559.6127 866.9888 559.6127 869.6548 C 559.6127 870.7601 560.1873 871.9658 560.7441 872.7229 L 557.1584 876.238 C 556.9472 876.4586 556.9472 876.816 557.1584 877.0364 ZM 564.2796 866.5693 C 566.0098 866.5693 567.4125 868.0343 567.4125 869.8412 C 567.4125 871.6484 566.0098 873.1132 564.2796 873.1132 C 562.5494 873.1132 561.1467 871.6484 561.1467 869.8412 C 561.1467 868.0343 562.5494 866.5693 564.2796 866.5693 Z</Geometry>
  <Geometry x:Key="EditIndicatorIcon">M 528.7222 752.5668 L 530 751.2506 L 527.7499 749 L 526.4721 750.3162 L 528.7222 752.5668 ZM 523.2518 758 L 527.875 753.4688 L 525.625 751.2182 L 521 755.76 L 521.0124 758 L 523.2518 758 Z</Geometry>
  <Geometry x:Key="ColumnChooserIcon">M 15.25 9 L 16 9 L 16 7 L 13.75 7 L 15.25 9 ZM 7 7 L 7 9 L 8.75 9 L 10.25 7 L 7 7 ZM 7 13 L 7 15 L 13 15 L 13 11 L 15 11 L 12 7 L 9 11 L 11 11 L 11 13 L 7 13 ZM 3 1 L 3 3 L 16 3 L 16 1 L 3 1 ZM 3 4 L 3 5 L 7 5 L 7 6 L 16 6 L 16 4 L 3 4 ZM 0 12 L 0 14 L 6 14 L 6 12 L 0 12 ZM 0 9 L 0 11 L 6 11 L 6 9 L 0 9 ZM 0 6 L 0 8 L 6 8 L 6 6 L 0 6 Z</Geometry>
  <Geometry x:Key="DragHandleIcon">M 17 535.5 C 17 536.3284 17.6716 537 18.5 537 C 19.3284 537 20 536.3284 20 535.5 C 20 534.6716 19.3284 534 18.5 534 C 17.6716 534 17 534.6716 17 535.5 ZM 17 530.5 C 17 531.3284 17.6716 532 18.5 532 C 19.3284 532 20 531.3284 20 530.5 C 20 529.6716 19.3284 529 18.5 529 C 17.6716 529 17 529.6716 17 530.5 ZM 17 525.5 C 17 526.3284 17.6716 527 18.5 527 C 19.3284 527 20 526.3284 20 525.5 C 20 524.6716 19.3284 524 18.5 524 C 17.6716 524 17 524.6716 17 525.5 ZM 17 520.5 C 17 521.3284 17.6716 522 18.5 522 C 19.3284 522 20 521.3284 20 520.5 C 20 519.6716 19.3284 519 18.5 519 C 17.6716 519 17 519.6716 17 520.5 ZM 24 535.5 C 24 536.3284 24.6716 537 25.5 537 C 26.3284 537 27 536.3284 27 535.5 C 27 534.6716 26.3284 534 25.5 534 C 24.6716 534 24 534.6716 24 535.5 ZM 24 530.5 C 24 531.3284 24.6716 532 25.5 532 C 26.3284 532 27 531.3284 27 530.5 C 27 529.6716 26.3284 529 25.5 529 C 24.6716 529 24 529.6716 24 530.5 ZM 24 525.5 C 24 526.3284 24.6716 527 25.5 527 C 26.3284 527 27 526.3284 27 525.5 C 27 524.6716 26.3284 524 25.5 524 C 24.6716 524 24 524.6716 24 525.5 ZM 24 520.5 C 24 521.3284 24.6716 522 25.5 522 C 26.3284 522 27 521.3284 27 520.5 C 27 519.6716 26.3284 519 25.5 519 C 24.6716 519 24 519.6716 24 520.5 Z</Geometry>
  <Geometry x:Key="MovingIndicatorIcon">M 3,0 C3,0 3,4 3,4 3,4 0,4 0,4 0,4 0,5 0,5 0,5 1,5 1,5 1,5 1,6 1,6 1,6 2,6 2,6 2,6 2,7 2,7 2,7 3,7 3,7 3,7 3,8 3,8 3,8 4,8 4,8 4,8 4,9 4,9 4,9 5,9 5,9 5,9 5,8 5,8 5,8 6,8 6,8 6,8 6,7 6,7 6,7 7,7 7,7 7,7 7,6 7,6 7,6 8,6 8,6 8,6 8,5 8,5 8,5 9,5 9,5 9,5 9,4 9,4 9,4 6,4 6,4 6,4 6,0 6,0 6,0 3,0 3,0 z</Geometry>

  <!--Pager Icons -->
  <Geometry x:Key="FirstPageIcon">M 1101 178.3882 L 1099.5825 180 L 1095 175 L 1099.5825 170 L 1100.9325 171.489 L 1097.7823 174.9755 L 1101 178.3882 ZM 1092 170 L 1094 170 L 1094 180 L 1092 180 L 1092 170 Z</Geometry>
  <Geometry x:Key="LastPageIcon">M 1288 178.3882 L 1289.4175 180 L 1294 175 L 1289.4175 170 L 1288.0675 171.489 L 1291.2177 174.9755 L 1288 178.3882 ZM 1297 170 L 1295 170 L 1295 180 L 1297 180 L 1297 170 Z</Geometry>

  <!--Compound Filter Dialog Icons -->
  <Geometry x:Key="CreateAndGroup">M10.00,6 L10.00,10 L6,10 L6,12 L12,12 L12,6 z M2,2 L2,8 L4,8 L4.00,4 L8,4 L8,2 z M0,0 L10,0 L10,2 L10,4 L14,4 L14,5 L14,6 L14,12 L14,14 L12,14 L6,14 L4,14 L4,12 L4,10 L2,10 L0,10 L0,8 L0,2 L0,0.99 z</Geometry>
  <Geometry x:Key="CreateOrGroup">M2,2 L2,8 L4,8 L6,8 L6,10 L6,12 L12,12 L12,6 L10,6 L8,6 L8,4 L8,2 z M0,0 L10,0 L10,2 L10,4 L14,4 L14,5 L14,6 L14,12 L14,14 L12,14 L6,14 L4,14 L4,12 L4,10 L2,10 L0,10 L0,8 L0,2 L0,1 z</Geometry>
  <Geometry x:Key="Ungroup">M12,12 L14,12 L14,14 L12,14 z M9,12 L11,12 L11,14 L9,14 z M6,12 L8,12 L8,14 L6,14 z M3.00,12 L5,12 L5,14 L3.00,14 z M12,9 L14,9 L14,11 L12,11 z M0,9 L1.99,9 L1.99,11 L0,11 z M12,6 L14,6 L14,8 L12,8 z M0,6 L1.99,6 L1.99,8 L0,8 z M9,3.00 L11,3.00 L11,5 L10,5 L10,10 L5,10 L5,11 L3,11 L3,9 L4,9 L4,4 L9,4 z M0,3.00 L1.99,3.00 L1.99,5 L0,5 z M12,3 L14,3 L14,5 L12,5 z M9,0 L11,0 L11,1.99 L9,1.99 z M6,0 L8,0 L8,1.99 L6,1.99 z M3,0 L5,0 L5,1.99 L3,1.99 z M0,0 L1.99,0 L1.99,1.99 L0,1.99 z</Geometry>
  <Geometry x:Key="ToggleGroup">M10.81,3.13 C10.81,3.13 6.35,3.15 6.35,3.15 6.35,3.15 7.12,3.92 7.83,4.63 L7.90,4.70 6.29,6.27 6.29,6.27 6.31,6.25 7.66,7.60 9.24,6.04 9.31,6.11 C10.02,6.82 10.79,7.59 10.79,7.59 10.79,7.59 10.81,3.13 10.81,3.13 z M2.00,1.99 L2.00,12 12,12 7.63,7.63 6.05,9.17 6.12,9.24 C6.83,9.95 7.59,10.72 7.59,10.72 7.59,10.72 3.13,10.74 3.13,10.74 3.13,10.74 3.16,6.29 3.16,6.29 3.16,6.29 3.93,7.05 4.64,7.76 L4.70,7.83 6.28,6.28 z M6.25E-07,0 L2.00,0 12,0 13.99,0 14,1.99 14,13.99 0,14 0,12 6.25E-07,1.99 z</Geometry>

  <!--  Filtering Icons  -->
  <Geometry x:Key="DateIcon">M8,5 L10.999999,5 L11.999999,5 L11.999999,6 L11.999999,7 L11.999999,7.9999995 L11.999999,9 L11.999999,10 L10.999999,10 L8,10 L8,9 L10.999999,9 L10.999999,7.9999995 L8.999999,7.9999995 L8.999999,7 L10.999999,7 L10.999999,6 L8,6 z M2.9999993,4.9999995 L6.999999,4.9999995 L7,7 L7,7.9999995 L6,7.9999995 L4,7.9999995 L4,9 L7,9 L7,10 L4,10 L3,10 L3,9 L3,7.9999995 L3,7 L4,7 L6,7 L6,5.9999995 L2.9999993,5.9999995 z M1.0000006,2.9999983 L1.0000006,12 L14.000001,12 L14.000001,2.9999983 z M9.0000019,1.0000007 L9.0000019,2.0000005 L10.000002,2.0000005 L10.000002,1.0000007 z M7.0000019,1.0000007 L7.0000019,2.0000005 L8.0000019,2.0000005 L8.0000019,1.0000007 z M5.0000019,1.0000007 L5.0000019,2.0000005 L6.0000019,2.0000005 L6.0000019,1.0000007 z M0,0 L15,0 L15,13 L0,13 z</Geometry>
  <Geometry x:Key="EqualsIcon">M 0,3 C0,3 0,5 0,5 0,5 8,5 8,5 8,5 8,3 8,3 8,3 0,3 0,3 zM 0,0 C0,0 0,2 0,2 0,2 8,2 8,2 8,2 8,0 8,0 8,0 0,0 0,0 z</Geometry>
  <Geometry x:Key="NotEqualsIcon">M 0,3 C0,3 0,5 0,5 0,5 3,5 3,5 3,5 2,6 2,6 2,6 0,6 0,6 0,6 0,8 0,8 0,8 1.7,8 1.7,8 1.7,8 0,11 0,11 0,11 2,11 2,11 2,11 3.7,8 3.7,8 3.7,8 8,8 8,8 8,8 8,6 8,6 8,6 4,6 4,6 4,6 5.275,5 5.275,5 5.275,5 8,5 8,5 8,5 8,3 8,3 8,3 6.365,3 6.365,3 6.365,3 8,0 8,0 8,0 6,0 6,0 6,0 4.365,3 4.365,3 4.365,3 0,3 0,3 z</Geometry>
  <Geometry x:Key="DoesnotIcon">M 0,11 C0,11 2,11 2,11 2,11 8,0 8,0 8,0 6,0 6,0 6,0 0,11 0,11 z</Geometry>
  <Geometry x:Key="GreaterThanIcon">M 1,0 C1,0 0,1 0,1 0,1 5,4 5,4 5,4 0,7 0,7 0,7 1,8 1,8 1,8 8,4 8,4 8,4 1,0 1,0 z</Geometry>
  <Geometry x:Key="LessThanIcon">M 7,0 C7,0 8,1 8,1 8,1 3,4 3,4 3,4 8,7 8,7 8,7 7,8 7,8 7,8 0,4 0,4 0,4 7,0 7,0 z</Geometry>
  <Geometry x:Key="FilterArrowIcon">M 0,0 C0,0 0,7 0,7 0,7 3.5,3.5 3.5,3.5 3.5,3.5 0,0 0,0 z</Geometry>

  <!--  *********************************  COMMON ATTRIBUTES  *********************************  -->
  <Thickness x:Key="CellFooterBorderThickness">0 1 0 0</Thickness>
  <Thickness x:Key="CellBorderThickness">0 0 0 1</Thickness>
  <Thickness x:Key="HeaderCellBorderThickness">0 0 0 2</Thickness>
  <Thickness x:Key="CellPadding">6 2 6 5</Thickness>
  <Thickness x:Key="GroupHeaderCellPadding">0 2 0 3</Thickness>

  <!--  ********************************** BRUSHES **********************************  -->
  <!--  XamGrid Brushes  -->
  <SolidColorBrush x:Key="XamGridBackgroundBrush" Color="{StaticResource Color_018}" />
  <SolidColorBrush x:Key="XamGridBorderBrush" Color="{StaticResource Color_014}" />
  <SolidColorBrush x:Key="FilterOperatorGlyphBrush" Color="{StaticResource Color_004}" />
  <SolidColorBrush x:Key="FixedRowSeparatorBackgroundBrush" Color="{StaticResource Color_012}" />
  <SolidColorBrush x:Key="DefaultDeferredScrollingTemplateBackgroundBrush" Color="{StaticResource Color_014}" />
  <SolidColorBrush x:Key="DefaultDeferredScrollingTemplateBorderBrush" Color="{StaticResource Color_005}" />
  <SolidColorBrush x:Key="XamGridReadOnlyBackgroundBrush" Color="{StaticResource Color_052}" />
  <SolidColorBrush x:Key="SeparatorBrush" Color="{StaticResource Color_014}" />

  <!--  ColumnChooserDialogButton Brushes  -->
  <SolidColorBrush x:Key="ColumnChooserDialogButtonBackgroundBrush" Color="{StaticResource Color_046}" />
  <SolidColorBrush x:Key="ColumnChooserDialogButtonBorderBrush" Color="{StaticResource Color_046}" />
  <SolidColorBrush x:Key="ColumnChooserDialogButtonHoverBackgroundBrush" Color="{StaticResource Color_011}" />
  <SolidColorBrush x:Key="ColumnChooserDialogButtonHoverBorderBrush" Color="{StaticResource Color_011}" />

  <!--  ColumnChooserDialog Brushes  -->
  <SolidColorBrush x:Key="ColumnChooserDialogBackgroundBrush" Color="{StaticResource Color_018}" />
  <SolidColorBrush x:Key="ColumnChooserDialogBorderBrush" Color="{StaticResource Color_014}" />
  <SolidColorBrush x:Key="ColumnChooserPopupVSeparatorBackgroundBrush" Color="{StaticResource Color_046}" />

  <!--  PopupResizer Brushes  -->
  <SolidColorBrush x:Key="PopupResizerBackgroundBrush" Color="{StaticResource Color_009}" />
  <SolidColorBrush x:Key="PopupResizerBorderBrush" Color="{StaticResource Color_014}" />

  <!--  HeaderCell Brushes  -->
  <SolidColorBrush x:Key="HeaderCellBackgroundBrush" Color="{StaticResource Color_018}" />
  <SolidColorBrush x:Key="HeaderCellBorderBrush" Color="{StaticResource Color_003}" />
  <SolidColorBrush x:Key="HeaderCellHoverBorderBrush" Color="{StaticResource Color_006}" />
  <SolidColorBrush x:Key="HeaderCellSelectedBorderBrush" Color="{StaticResource Color_013}" />
  <SolidColorBrush x:Key="HeaderCellHoverBackgroundBrush" Color="{StaticResource Color_018}" />
  <SolidColorBrush x:Key="HeaderCellMovingBorderBrush" Color="{StaticResource Color_010}" />
  <SolidColorBrush x:Key="HeaderCellMovingBackgroundBrush" Color="{StaticResource Color_010}" />
  <SolidColorBrush x:Key="HeaderCellForegroundBrush" Color="{StaticResource Color_016}" />
  <SolidColorBrush x:Key="HeaderCellHoverForegroundBrush" Color="{StaticResource Color_001}" />
  <SolidColorBrush x:Key="HeaderCellActiveFilterGlyphBackgroundBrush" Color="{StaticResource Color_011}" />
  <!--  ???  -->

  <!--  ExpansionCell Brushes  -->
  <SolidColorBrush x:Key="ExpansionCellBackgroundBrush" Color="{StaticResource Color_018}" />
  <SolidColorBrush x:Key="ExpansionCellBorderBrush" Color="{StaticResource Color_008}" />
  <SolidColorBrush x:Key="ExpansionCellHoverBackgroundBrush" Color="{StaticResource Color_014}" />
  <SolidColorBrush x:Key="ExpansionCellHoverBorderBrush" Color="{StaticResource Color_008}" />

  <!--  AddNewRow Brushes  -->
  <SolidColorBrush x:Key="AddNewRowSelectorCellBackgroundBrush" Color="{StaticResource Color_018}" />
  <SolidColorBrush x:Key="AddNewRowSelectorCellBorderBrush" Color="{StaticResource Color_008}" />

  <SolidColorBrush x:Key="AddNewRowCellBackgroundBrush" Color="{StaticResource Color_018}" />
  <SolidColorBrush x:Key="AddNewRowCellBorderBrush" Color="{StaticResource Color_008}" />

  <!--  RowSelectorCell Brushes  -->
  <SolidColorBrush x:Key="RowSelectorCellHoverBackgroundBrush" Color="{StaticResource Color_014}" />
  <SolidColorBrush x:Key="RowSelectorCellHoverBorderBrush" Color="{StaticResource Color_008}" />
  <SolidColorBrush x:Key="RowSelectorCellActiveBackgroundBrush" Color="{StaticResource Color_011}" />

  <!--  Cell Brushes  -->
  <SolidColorBrush x:Key="CellItemBackgroundBrush" Color="{StaticResource Color_018}" />
  <SolidColorBrush x:Key="CellItemBorderBrush" Color="{StaticResource Color_008}" />
  <SolidColorBrush x:Key="CellItemAltBackgroundBrush" Color="{StaticResource Color_014}" Opacity="0.2"/>
  <SolidColorBrush x:Key="CellItemHoverBackgroundBrush" Color="{StaticResource Color_014}" />
  <SolidColorBrush x:Key="CellItemHoverBorderBrush" Color="{StaticResource Color_008}" />
  <SolidColorBrush x:Key="CellItemSelectedBackgroundBrush" Color="{StaticResource Color_011}" />
  <SolidColorBrush x:Key="CellItemSelectedBorderBrush" Color="{StaticResource Color_011}" />
  <SolidColorBrush x:Key="CellItemForegroundBrush" Color="{StaticResource Color_016}" />

  <!--  FilterRowSelectorCell Brushes  -->
  <SolidColorBrush x:Key="FilterRowSelectorCellBackgroundBrush" Color="{StaticResource Color_018}" />
  <SolidColorBrush x:Key="FilterRowSelectorCellBorderBrush" Color="{StaticResource Color_008}" />
  <SolidColorBrush x:Key="FilterRowCellBackgroundBrush" Color="{StaticResource Color_018}" />
  <SolidColorBrush x:Key="FilterRowCellBorderBrush" Color="{StaticResource Color_008}" />

  <!--  SummaryRow Brushes  -->
  <SolidColorBrush x:Key="SummaryRowSelectorCellBackgroundBrush" Color="{StaticResource Color_018}" />
  <SolidColorBrush x:Key="SummaryRowSelectorCellBorderBrush" Color="{StaticResource Color_008}" />
  <SolidColorBrush x:Key="SummaryRowCellBackgroundBrush" Color="{StaticResource Color_018}" />
  <SolidColorBrush x:Key="SummaryRowCellBorderBrush" Color="{StaticResource Color_008}" />

  <!--  FooterCell Brushes  -->
  <SolidColorBrush x:Key="FooterCellBackgroundBrush" Color="{StaticResource Color_018}" />
  <SolidColorBrush x:Key="FooterCellBorderBrush" Color="{StaticResource Color_008}" />
  <SolidColorBrush x:Key="FooterCellForegroundBrush" Color="{StaticResource Color_004}" />

  <!--  PagerItem Brushes  -->
  <SolidColorBrush x:Key="PagerItemBackgroundBrush" Color="{StaticResource Color_046}" />
  <SolidColorBrush x:Key="PagerItemBorderBrush" Color="{StaticResource Color_046}" />

  <!--  Pager Brushes  -->
  <SolidColorBrush x:Key="PagerAreaBackgroundBrush" Color="{StaticResource Color_018}" />
  <SolidColorBrush x:Key="PagerAreaBorderBrush" Color="{StaticResource Color_008}" />

  <!--  Indicator Brushes  -->
  <SolidColorBrush x:Key="EditingIndicatorBackgroundBrush" Color="{StaticResource Color_004}" />
  <SolidColorBrush x:Key="DropAreaIndicatorBackgroundBrush" Color="{StaticResource Color_011}" />
  <SolidColorBrush x:Key="MovingIndicatorBackgroundBrush" Color="{StaticResource Color_004}" />
  <SolidColorBrush x:Key="ResizingIndicatorBackgroundBrush" Color="{StaticResource Color_055}" />

  <LinearGradientBrush x:Key="HiddenColumnIndicatorBrush" MappingMode="Absolute" Opacity="0.35" SpreadMethod="Repeat" StartPoint="-7,12" EndPoint="-2,17">
    <GradientStop Offset="0.499" Color="{StaticResource Color_009}" />
    <GradientStop Offset="0.500" Color="{StaticResource Color_001}" />
  </LinearGradientBrush>

  <!--  GroupByArea ExpansionIndicator Brushes  -->
  <SolidColorBrush x:Key="GroupByAreaExpansionIndicatorBackgroundBrush" Color="{StaticResource Color_014}" />
  <SolidColorBrush x:Key="GroupByAreaExpansionIndicatorBorderBrush" Color="{StaticResource Color_014}" />
  <SolidColorBrush x:Key="GroupByAreaExpansionIndicatorHoverBackgroundBrush" Color="{StaticResource Color_010}" />
  <SolidColorBrush x:Key="GroupByAreaExpansionIndicatorHoverBorderBrush" Color="{StaticResource Color_010}" />
  <SolidColorBrush x:Key="GroupByAreaExpansionIndicatorPressedBackgroundBrush" Color="{StaticResource Color_011}" />
  <SolidColorBrush x:Key="GroupByAreaExpansionIndicatorPressedBorderBrush" Color="{StaticResource Color_011}" />

  <!--  GroupByAreaCell Brushes  -->
  <SolidColorBrush x:Key="GroupByAreaCellBackgroundBrush" Color="{StaticResource Color_007}" />
  <SolidColorBrush x:Key="GroupByAreaCellBorderBrush" Color="{StaticResource Color_008}" />
  <SolidColorBrush x:Key="GroupByAreaWaterMarkForegroundBrush" Color="{StaticResource Color_004}" />

  <!--  GroupByHeaderCell Brushes  -->
  <SolidColorBrush x:Key="GroupByHeaderCellBackgroundBrush"  Color="{StaticResource Color_003}" />
  <SolidColorBrush x:Key="GroupByHeaderCellBorderBrush" Color="{StaticResource Color_003}" />
  <SolidColorBrush x:Key="CellConnectorBackgroundBrush" Color="{StaticResource Color_003}" />

  <!--  GroupByColumnLayoutHeaderCell Brushes  -->
  <SolidColorBrush x:Key="GroupByColumnLayoutHeaderCellBackgroundBrush" Color="{StaticResource Color_013}" />
  <SolidColorBrush x:Key="GroupByColumnLayoutHeaderCellBorderBrush" Color="{StaticResource Color_013}" />

  <!--  GroupByCell Brushes  -->
  <SolidColorBrush x:Key="GroupByCellBackgroundBrush" Color="{StaticResource Color_018}" />
  <SolidColorBrush x:Key="GroupByCellBorderBrush" Color="{StaticResource Color_008}" />

  <!--  FixedBorder Brushes  -->
  <SolidColorBrush x:Key="FixedBorderBackgroundBrush" Color="{StaticResource Color_013}" />

  <!--  Menu Brushes  -->
  <SolidColorBrush x:Key="FilterMenuBackgroundBrush" Color="{StaticResource Color_018}" />
  <SolidColorBrush x:Key="MenuItemHoverBackgroundBrush" Color="{StaticResource Color_014}" />
  <SolidColorBrush x:Key="MenuItemHoverBorderBrush" Color="{StaticResource Color_014}" />
  <SolidColorBrush x:Key="MenuItemHighlightedBackgroundBrush" Color="{StaticResource Color_011}" />
  <SolidColorBrush x:Key="MenuItemHighlightedBorderBrush" Color="{StaticResource Color_011}" />
  <SolidColorBrush x:Key="MenuIconColumnBackgroundBrush" Color="{StaticResource Color_046}" />

  <!--  FilterSelectionItem Brushes  -->
  <SolidColorBrush x:Key="FilterSelectionItemBackgroundBrush" Color="{StaticResource Color_046}" />
  <SolidColorBrush x:Key="FilterSelectionItemBorderBrush" Color="{StaticResource Color_046}" />

  <!--  Watermark Brushes  -->
  <SolidColorBrush x:Key="WatermarkForegroundBrush" Color="{StaticResource Color_015}" />
  <SolidColorBrush x:Key="ItemsBoxWatermarkForegroundBrush" Color="{StaticResource Color_005}" />

  <!--  FilterControl Brushes  -->
  <SolidColorBrush x:Key="FilterMenuBusyIndicatorBackgroundBrush" Color="{StaticResource Color_009}" />
  <SolidColorBrush x:Key="FilterMenuBusyIndicatorPathBackgroundBrush" Color="{StaticResource Color_003}" />
  <SolidColorBrush x:Key="FilterMenuNotAllItemsShowingForegroundBrush" Color="{StaticResource Color_020}" />

  <!--  DateFilterTreeViewItem Brushes  -->
  <SolidColorBrush x:Key="DateFilterTreeViewItemBackgroundBrush" Color="{StaticResource Color_046}" />
  <SolidColorBrush x:Key="DateFilterTreeViewItemBorderBrush" Color="{StaticResource Color_046}" />
  <SolidColorBrush x:Key="DateFilterTreeViewItemHoverBackgroundBrush" Color="{StaticResource Color_006}" />
  <SolidColorBrush x:Key="DateFilterTreeViewItemHoverBorderBrush" Color="{StaticResource Color_011}" />
  <SolidColorBrush x:Key="DateFilterTreeViewItemSelectedBackgroundBrush" Color="{StaticResource Color_011}" />
  <SolidColorBrush x:Key="DateFilterTreeViewItemSelectedBorderBrush" Color="{StaticResource Color_011}" />

  <!--  DateFilterTreeView Brushes  -->
  <SolidColorBrush x:Key="DateFilterTreeViewBackgroundBrush" Color="{StaticResource Color_046}" />
  <SolidColorBrush x:Key="DateFilterTreeViewBorderBrush" Color="{StaticResource Color_005}" />

  <!--  ConditionalFormattingCell Brushes  -->
  <SolidColorBrush x:Key="ConditionalFormattingCellPositiveBarBrush" Color="{StaticResource Color_020}" />
  <SolidColorBrush x:Key="ConditionalFormattingCellNegativeBarBrush" Color="{StaticResource Color_014}" />

  <!--  GridSortableListBoxItem Brushes  -->
  <SolidColorBrush x:Key="GridSortableListBoxItemBackgroundBrush" Color="{StaticResource Color_018}" />
  <SolidColorBrush x:Key="GridSortableListBoxItemBorderBrush" Color="{StaticResource Color_014}" />
  <SolidColorBrush x:Key="DragHandleBackgroundBrush" Color="{StaticResource Color_018}" />
  <SolidColorBrush x:Key="DragHandleBorderBrush" Color="{StaticResource Color_014}" />

  <!--  GridSortableListBox Brushes  -->
  <SolidColorBrush x:Key="GridSortableListBoxBackgroundBrush" Color="{StaticResource Color_009}" />
  <SolidColorBrush x:Key="GridSortableListBoxBorderBrush" Color="{StaticResource Color_005}" />

  <!--  GroupHeaderCell Brushes  -->
  <SolidColorBrush x:Key="GroupHeaderCellBackgroundBrush" Color="{StaticResource Color_007}" />
  <SolidColorBrush x:Key="GroupHeaderCellBorderBrush" Color="{StaticResource Color_003}" />
  <SolidColorBrush x:Key="GroupHeaderCellHoverBackgroundBrush" Color="{StaticResource Color_007}" />
  <SolidColorBrush x:Key="GroupHeaderCellHoverBorderBrush" Color="{StaticResource Color_006}" />

  <!--  GroupFooterCell Brushes  -->
  <SolidColorBrush x:Key="GroupFooterCellBackgroundBrush" Color="{StaticResource Color_018}" />
  <SolidColorBrush x:Key="GroupFooterCellBorderBrush" Color="{StaticResource Color_008}" />
  <SolidColorBrush x:Key="GroupFooterCellForegroundBrush" Color="{StaticResource Color_016}" />

  <!--  MergedContentControl Brushes  -->
  <SolidColorBrush x:Key="MergedContentCellBackgroundBrush" Color="{StaticResource Color_018}" />
  <SolidColorBrush x:Key="MergedContentCellBorderBrush" Color="{StaticResource Color_008}" />
  <SolidColorBrush x:Key="MergedContentCellForegroundBrush" Color="{StaticResource Color_016}" />

  <!--  MergedSummaryCell Brushes  -->
  <SolidColorBrush x:Key="MergedSummaryCellBackgroundBrush" Color="{StaticResource Color_018}" />
  <SolidColorBrush x:Key="MergedSummaryCellBorderBrush" Color="{StaticResource Color_008}" />

  <!--  CompoundFilterDialog Brushes  -->
  <SolidColorBrush x:Key="CompoundFilterDialogBackgroundBrush" Color="{StaticResource Color_018}" />
  <SolidColorBrush x:Key="CompoundFilterDialogBorderBrush" Color="{StaticResource Color_014}" />

  <SolidColorBrush x:Key="FilterDescriptionBackgroundBrush" Color="{StaticResource Color_014}" />
  <SolidColorBrush x:Key="FilterGridBackgroundBrush" Color="{StaticResource Color_018}" />
  <SolidColorBrush x:Key="LogicalAndOperatorBackgroundBrush" igPrim:XamlHelper.IsExcludedFromWash="True" Color="{StaticResource Color_020}" />
  <SolidColorBrush x:Key="LogicalOrOperatorBackgroundBrush" igPrim:XamlHelper.IsExcludedFromWash="True" Color="{StaticResource Color_021}" />

  <!--  DatePicker Brushes  -->
  <SolidColorBrush x:Key="DatePickerButtonHoverBackgroundBrush" Color="{StaticResource Color_010}" />
  <SolidColorBrush x:Key="DatePickerBackgroundBrush" Color="{StaticResource Color_046}" />
  <SolidColorBrush x:Key="DatePickerBorderBrush" Color="{StaticResource Color_046}" />
  <SolidColorBrush x:Key="DatePickerIconBackgroundBrush" Color="{StaticResource Color_006}" />
  <SolidColorBrush x:Key="DatePickerIconHoverBackgroundBrush" Color="{StaticResource Color_001}" />

  <!--  Calendar Brushes  -->
  <SolidColorBrush x:Key="CalendarBackgroundBrush" Color="{StaticResource Color_009}" />
  <SolidColorBrush x:Key="CalendarBorderBrush" Color="{StaticResource Color_014}" />
  <SolidColorBrush x:Key="CalendarOtherMonthForegroundBrush" Color="{StaticResource Color_015}" />
  <SolidColorBrush x:Key="CalendarTodayForegroundBrush" Color="{StaticResource Color_001}" />
  <SolidColorBrush x:Key="CalendarTodayBackgroundBrush" Color="{StaticResource Color_002}" />
  <SolidColorBrush x:Key="CalendarTodayBorderBrush" Color="{StaticResource Color_013}" />
  <SolidColorBrush x:Key="CalendarItemMouseOverBackgroundBrush" Color="{StaticResource Color_010}" />
  <SolidColorBrush x:Key="CalendarItemSelectedBackgroundBrush" Color="{StaticResource Color_011}" />
  <SolidColorBrush x:Key="CalendarItemGroupTitleBackgroundBrush" Color="{StaticResource Color_009}" />
  <SolidColorBrush x:Key="CalendarDayOfWeekForegroundBrush" Color="{StaticResource Color_017}" />
  <SolidColorBrush x:Key="CalendarItemMouseOverBorderBrush" Color="{StaticResource Color_010}" />
  <SolidColorBrush x:Key="CalendarItemSelectedFocusedBorderBrush" Color="{StaticResource Color_011}" />
  <SolidColorBrush x:Key="CalendarItemSelectedBorderBrush" Color="{StaticResource Color_011}" />

  <!--  ********************************** Converters **********************************  -->
  <igPrim:CultureValueConverter x:Key="CultureConverter" />
  <igPrim:SummaryResultFormatStringValueConverter x:Key="SDFormatStringConverter" />
  <igPrim:VisibilityToBoolValueConverter x:Key="VisToBool" />

  <!--  ********************************** Grid Combo Style **********************************  -->
  <Style x:Key="ColumnComboBoxStyle" TargetType="{x:Type ComboBox}" BasedOn="{StaticResource ComboBoxStyle}">
    <Setter Property="Margin" Value="-6 -2" />
    <Setter Property="Padding" Value="6 4 24 2" />
    <Setter Property="Background" Value="{StaticResource TransparentBrush}" />
    <Setter Property="BorderBrush" Value="{StaticResource TransparentBrush}" />
  </Style>

  <!--  ********************************** CalendarDayButton Style **********************************  -->
  <Style x:Key="CalendarDayButtonStyle" TargetType="CalendarDayButton">
    <Setter Property="Background" Value="{StaticResource TransparentBrush}" />
    <Setter Property="FontFamily" Value="{StaticResource FontFamily}" />
    <Setter Property="FontSize" Value="{StaticResource FontSize}" />
    <Setter Property="HorizontalContentAlignment" Value="Center" />
    <Setter Property="MinHeight" Value="5" />
    <Setter Property="MinWidth" Value="5" />
    <Setter Property="Padding" Value="4,1,4,1" />
    <Setter Property="VerticalContentAlignment" Value="Center" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="CalendarDayButton">
          <Grid>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup Name="CommonStates">
                <VisualStateGroup.Transitions>
                  <VisualTransition GeneratedDuration="0:0:0.1" />
                </VisualStateGroup.Transitions>
                <VisualState Name="Normal" />
                <VisualState Name="MouseOver">
                  <Storyboard>
                    <DoubleAnimation Duration="0" Storyboard.TargetName="HighlightBackground" Storyboard.TargetProperty="Opacity" To="1" />
                  </Storyboard>
                </VisualState>
                <VisualState Name="Pressed">
                  <Storyboard>
                    <DoubleAnimation Duration="0" Storyboard.TargetName="SelectedBackground" Storyboard.TargetProperty="Opacity" To="1" />
                  </Storyboard>
                </VisualState>
                <VisualState Name="Disabled">
                  <Storyboard>
                    <DoubleAnimation Duration="0" Storyboard.TargetName="NormalText" Storyboard.TargetProperty="Opacity" To=".35" />
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup Name="SelectionStates">
                <VisualStateGroup.Transitions>
                  <VisualTransition GeneratedDuration="0" />
                </VisualStateGroup.Transitions>
                <VisualState Name="Unselected" />
                <VisualState Name="Selected">
                  <Storyboard>
                    <DoubleAnimation Duration="0" Storyboard.TargetName="SelectedBackground" Storyboard.TargetProperty="Opacity" To="1" />
                    <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="NormalText" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Collapsed</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="SelectedText" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup Name="CalendarButtonFocusStates">
                <VisualStateGroup.Transitions>
                  <VisualTransition GeneratedDuration="0" />
                </VisualStateGroup.Transitions>
                <VisualState Name="CalendarButtonFocused">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="DayButtonFocusVisual" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState Name="CalendarButtonUnfocused">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="DayButtonFocusVisual" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Collapsed</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup Name="ActiveStates">
                <VisualStateGroup.Transitions>
                  <VisualTransition GeneratedDuration="0" />
                </VisualStateGroup.Transitions>
                <VisualState Name="Active" />
                <VisualState Name="Inactive">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="NormalText" Storyboard.TargetProperty="(TextElement.Foreground)">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource CalendarOtherMonthForegroundBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup Name="DayStates">
                <VisualStateGroup.Transitions>
                  <VisualTransition GeneratedDuration="0" />
                </VisualStateGroup.Transitions>
                <VisualState Name="RegularDay" />
                <VisualState Name="Today">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="NormalText" Storyboard.TargetProperty="(TextBlock.Foreground)">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource CalendarTodayForegroundBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                    <DoubleAnimation Duration="0" Storyboard.TargetName="TodayBackground" Storyboard.TargetProperty="Opacity" To="1" />
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup Name="BlackoutDayStates">
                <VisualStateGroup.Transitions>
                  <VisualTransition GeneratedDuration="0" />
                </VisualStateGroup.Transitions>
                <VisualState Name="NormalDay" />
                <VisualState Name="BlackoutDay">
                  <Storyboard>
                    <DoubleAnimation Duration="0" Storyboard.TargetName="Blackout" Storyboard.TargetProperty="Opacity" To=".2" />
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Ellipse x:Name="TodayBackground"
                     Width="{StaticResource DefaultSize}"
                     Height="{StaticResource DefaultSize}"
                     Fill="{StaticResource CalendarTodayBackgroundBrush}"
                     Opacity="0"
                     Stroke="{StaticResource CalendarTodayBorderBrush}"
                     StrokeThickness="{StaticResource DefaultStrokeThickness}" />
            <Border Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}" />
            <Ellipse x:Name="HighlightBackground"
                     Width="{StaticResource DefaultSize}"
                     Height="{StaticResource DefaultSize}"
                     Fill="{StaticResource CalendarItemMouseOverBackgroundBrush}"
                     Opacity="0" />
            <Ellipse x:Name="SelectedBackground"
                     Width="{StaticResource DefaultSize}"
                     Height="{StaticResource DefaultSize}"
                     Fill="{StaticResource CalendarItemSelectedBackgroundBrush}"
                     Opacity="0" />
            <ContentPresenter x:Name="NormalText"
                              Margin="5,1,5,1"
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                              TextElement.FontSize="{TemplateBinding FontSize}"
                              TextElement.Foreground="{StaticResource ForegroundBrush}" />
            <ContentPresenter x:Name="SelectedText"
                              Margin="5,1,5,1"
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                              TextElement.FontSize="{TemplateBinding FontSize}"
                              TextElement.Foreground="{StaticResource ForegroundBrush}"
                              Visibility="Collapsed" />
            <Path x:Name="Blackout"
                  Margin="3"
                  HorizontalAlignment="Stretch"
                  VerticalAlignment="Stretch"
                  Data="M8.1772461,11.029181 L10.433105,11.029181 L11.700684,12.801641 L12.973633,11.029181 L15.191895,11.029181 L12.844727,13.999395 L15.21875,17.060919 L12.962891,17.060919 L11.673828,15.256231 L10.352539,17.060919 L8.1396484,17.060919 L10.519043,14.042364 z"
                  Fill="{StaticResource ForegroundBrush}"
                  Opacity="0"
                  RenderTransformOrigin="0.5,0.5"
                  Stretch="Fill" />
            <Ellipse x:Name="DayButtonFocusVisual"
                     Width="{StaticResource DefaultSize}"
                     Height="{StaticResource DefaultSize}"
                     IsHitTestVisible="false"
                     Stroke="{StaticResource CalendarItemSelectedFocusedBorderBrush}"
                     StrokeThickness="{StaticResource DefaultStrokeThickness}"
                     Visibility="Collapsed" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!--  ********************************** CalendarButton Style **********************************  -->
  <Style x:Key="CalendarButtonStyle" TargetType="CalendarButton">
    <Setter Property="Background" Value="{StaticResource TransparentBrush}" />
    <Setter Property="FontSize" Value="{StaticResource FontSize}" />
    <Setter Property="HorizontalContentAlignment" Value="Center" />
    <Setter Property="MinHeight" Value="46" />
    <Setter Property="MinWidth" Value="46" />
    <Setter Property="VerticalContentAlignment" Value="Center" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="CalendarButton">
          <Grid>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup Name="CommonStates">
                <VisualStateGroup.Transitions>
                  <VisualTransition GeneratedDuration="0:0:0.1" />
                </VisualStateGroup.Transitions>
                <VisualState Name="Normal" />
                <VisualState Name="MouseOver">
                  <Storyboard>
                    <DoubleAnimation Duration="0" Storyboard.TargetName="MouseOverItem" Storyboard.TargetProperty="Opacity" To="1" />
                  </Storyboard>
                </VisualState>
                <VisualState Name="Pressed">
                  <Storyboard>
                    <DoubleAnimation Duration="0" Storyboard.TargetName="Background" Storyboard.TargetProperty="Opacity" To="1" />
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup Name="SelectionStates">
                <VisualStateGroup.Transitions>
                  <VisualTransition GeneratedDuration="0" />
                </VisualStateGroup.Transitions>
                <VisualState Name="Unselected" />
                <VisualState Name="Selected">
                  <Storyboard>
                    <DoubleAnimation Duration="0" Storyboard.TargetName="SelectedBackground" Storyboard.TargetProperty="Opacity" To="1" />
                    <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="NormalText" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Collapsed</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="SelectedText" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup Name="ActiveStates">
                <VisualStateGroup.Transitions>
                  <VisualTransition GeneratedDuration="0" />
                </VisualStateGroup.Transitions>
                <VisualState Name="Active" />
                <VisualState Name="Inactive">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="NormalText" Storyboard.TargetProperty="(TextElement.Foreground)">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource CalendarOtherMonthForegroundBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup Name="CalendarButtonFocusStates">
                <VisualStateGroup.Transitions>
                  <VisualTransition GeneratedDuration="0" />
                </VisualStateGroup.Transitions>
                <VisualState Name="CalendarButtonFocused">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="CalendarButtonFocusVisual" Storyboard.TargetProperty="(UIElement.Visibility)">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="CalendarButtonUnfocused" />
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Rectangle x:Name="MouseOverItem"
                       Fill="{StaticResource CalendarItemMouseOverBackgroundBrush}"
                       Opacity="0"
                       Stroke="{StaticResource CalendarItemMouseOverBorderBrush}"
                       StrokeThickness="{StaticResource DefaultStrokeThickness}" />
            <Rectangle x:Name="SelectedBackground"
                       Fill="{StaticResource CalendarItemSelectedBackgroundBrush}"
                       Opacity="0"
                       Stroke="{StaticResource CalendarItemSelectedBorderBrush}"
                       StrokeThickness="{StaticResource DefaultStrokeThickness}" />
            <Rectangle x:Name="Background"
                       Fill="{StaticResource CalendarItemSelectedBackgroundBrush}"
                       Opacity="0"
                       Stroke="{StaticResource CalendarItemSelectedBorderBrush}"
                       StrokeThickness="{StaticResource DefaultStrokeThickness}" />
            <ContentPresenter x:Name="NormalText"
                              Margin="5,1,5,1"
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                              TextElement.FontSize="{TemplateBinding FontSize}"
                              TextElement.Foreground="{StaticResource ForegroundBrush}" />
            <ContentPresenter x:Name="SelectedText"
                              Margin="5,1,5,1"
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                              TextElement.FontSize="{TemplateBinding FontSize}"
                              TextElement.Foreground="{StaticResource ForegroundBrush}"
                              Visibility="Collapsed" />
            <Rectangle x:Name="CalendarButtonFocusVisual"
                       IsHitTestVisible="false"
                       Stroke="{StaticResource CalendarItemSelectedFocusedBorderBrush}"
                       StrokeThickness="{StaticResource DefaultStrokeThickness}"
                       Visibility="Collapsed" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!--  ********************************** CalendarItem Style **********************************  -->
  <Style x:Key="CalendarItemStyle" TargetType="{x:Type CalendarItem}">
    <Setter Property="Margin" Value="0,3,0,3" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type CalendarItem}">
          <ControlTemplate.Resources>
            <DataTemplate x:Key="{x:Static CalendarItem.DayTitleTemplateResourceKey}">
              <TextBlock Margin="0,5,0,5"
                         HorizontalAlignment="Center"
                         VerticalAlignment="Center"
                         FontFamily="{StaticResource FontFamily}"
                         FontSize="{StaticResource FontSize}"
                         Text="{Binding}"
                         Foreground="{StaticResource CalendarDayOfWeekForegroundBrush}"/>
            </DataTemplate>

            <ControlTemplate x:Key="PreviousButtonTemplate" TargetType="{x:Type Button}">
              <Grid Cursor="Hand">
                <VisualStateManager.VisualStateGroups>
                  <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal" />
                    <VisualState x:Name="MouseOver">
                      <Storyboard>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="path" Storyboard.TargetProperty="Fill">
                          <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource GlyphHoverBackgroundBrush}" />
                        </ObjectAnimationUsingKeyFrames>
                      </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Disabled">
                      <Storyboard>
                        <DoubleAnimation Duration="0" Storyboard.TargetName="path" Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Opacity)" To=".5" />
                      </Storyboard>
                    </VisualState>
                  </VisualStateGroup>
                </VisualStateManager.VisualStateGroups>
                <Grid Background="Transparent">
                  <Path x:Name="path"
                        Width="6"
                        Height="10"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        Data="{StaticResource VArrowLeft}"
                        Fill="{StaticResource GlyphBackgroundBrush}"
                        Stretch="Fill"
                        UseLayoutRounding="False" />
                </Grid>
              </Grid>
            </ControlTemplate>

            <ControlTemplate x:Key="NextButtonTemplate" TargetType="{x:Type Button}">
              <Grid Cursor="Hand">
                <VisualStateManager.VisualStateGroups>
                  <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal" />
                    <VisualState x:Name="MouseOver">
                      <Storyboard>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="path" Storyboard.TargetProperty="Fill">
                          <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource GlyphHoverBackgroundBrush}" />
                        </ObjectAnimationUsingKeyFrames>
                      </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Disabled">
                      <Storyboard>
                        <DoubleAnimation Duration="0" Storyboard.TargetName="path" Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Opacity)" To=".5" />
                      </Storyboard>
                    </VisualState>
                  </VisualStateGroup>
                </VisualStateManager.VisualStateGroups>
                <Grid Background="Transparent">
                  <Path x:Name="path"
                        Width="6"
                        Height="10"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        Data="{StaticResource VArrowRight}"
                        Fill="{StaticResource GlyphBackgroundBrush}"
                        Stretch="Fill"
                        UseLayoutRounding="False" />
                </Grid>
              </Grid>
            </ControlTemplate>

            <ControlTemplate x:Key="HeaderButtonTemplate" TargetType="{x:Type Button}">
              <Grid Cursor="Hand">
                <VisualStateManager.VisualStateGroups>
                  <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal" />
                    <VisualState x:Name="MouseOver">
                      <Storyboard>
                        <!--<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="buttonContent" d:IsOptimized="True" />-->
                      </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Disabled">
                      <Storyboard>
                        <DoubleAnimation Duration="0" Storyboard.TargetName="buttonContent" Storyboard.TargetProperty="Opacity" To=".5" />
                      </Storyboard>
                    </VisualState>
                  </VisualStateGroup>
                </VisualStateManager.VisualStateGroups>
                <ContentControl x:Name="buttonContent"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                Content="{TemplateBinding Content}"
                                ContentTemplate="{TemplateBinding ContentTemplate}"
                                Foreground="{StaticResource ForegroundBrush}"
                                FontSize="{StaticResource FontSize}"
                                IsTabStop="False"/>
              </Grid>
            </ControlTemplate>
          </ControlTemplate.Resources>
          <Grid x:Name="PART_Root">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="Disabled">
                  <Storyboard>
                    <DoubleAnimation Duration="0" To="0.3" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_Root" />
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Border Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}">
              <Border>
                <Grid>
                  <Grid.Resources />
                  <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                  </Grid.ColumnDefinitions>
                  <Grid.RowDefinitions>
                    <RowDefinition Height="20" />
                    <RowDefinition Height="*" />
                  </Grid.RowDefinitions>
                  <Rectangle Grid.ColumnSpan="3" Fill="{StaticResource CalendarItemGroupTitleBackgroundBrush}" />
                  <Button x:Name="PART_PreviousButton"
                          Grid.Row="0"
                          Grid.Column="0"
                          Width="20"
                          Height="20"
                          HorizontalAlignment="Left"
                          Focusable="False"
                          Template="{StaticResource PreviousButtonTemplate}" />
                  <Button x:Name="PART_HeaderButton"
                          Grid.Row="0"
                          Grid.Column="1"
                          HorizontalAlignment="Center"
                          VerticalAlignment="Center"
                          Focusable="False"
                          FontSize="14"
                          Template="{StaticResource HeaderButtonTemplate}" />
                  <Button x:Name="PART_NextButton"
                          Grid.Row="0"
                          Grid.Column="2"
                          Width="20"
                          Height="20"
                          HorizontalAlignment="Right"
                          Focusable="False"
                          Template="{StaticResource NextButtonTemplate}" />
                  <Grid x:Name="PART_MonthView"
                        Grid.Row="1"
                        Grid.ColumnSpan="3"
                        Margin="6,-1,6,6"
                        HorizontalAlignment="Center"
                        Visibility="Visible">
                    <Grid.ColumnDefinitions>
                      <ColumnDefinition Width="Auto" />
                      <ColumnDefinition Width="Auto" />
                      <ColumnDefinition Width="Auto" />
                      <ColumnDefinition Width="Auto" />
                      <ColumnDefinition Width="Auto" />
                      <ColumnDefinition Width="Auto" />
                      <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                      <RowDefinition Height="Auto" />
                      <RowDefinition Height="Auto" />
                      <RowDefinition Height="Auto" />
                      <RowDefinition Height="Auto" />
                      <RowDefinition Height="Auto" />
                      <RowDefinition Height="Auto" />
                      <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                  </Grid>
                  <Grid x:Name="PART_YearView"
                        Grid.Row="1"
                        Grid.ColumnSpan="3"
                        Margin="6"
                        HorizontalAlignment="Center"
                        Visibility="Hidden">
                    <Grid.ColumnDefinitions>
                      <ColumnDefinition Width="Auto" />
                      <ColumnDefinition Width="Auto" />
                      <ColumnDefinition Width="Auto" />
                      <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                      <RowDefinition Height="Auto" />
                      <RowDefinition Height="Auto" />
                      <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                  </Grid>
                </Grid>
              </Border>
            </Border>
          </Grid>
          <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding DisplayMode, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Calendar}}}" Value="Year">
              <Setter TargetName="PART_MonthView" Property="Visibility" Value="Hidden" />
              <Setter TargetName="PART_YearView" Property="Visibility" Value="Visible" />
            </DataTrigger>
            <DataTrigger Binding="{Binding DisplayMode, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Calendar}}}" Value="Decade">
              <Setter TargetName="PART_MonthView" Property="Visibility" Value="Hidden" />
              <Setter TargetName="PART_YearView" Property="Visibility" Value="Visible" />
            </DataTrigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!--  ********************************** Calendar Style **********************************  -->
  <Style x:Key="DatePickerCalendarStyle" TargetType="{x:Type Calendar}">
    <Setter Property="Background" Value="{StaticResource CalendarBackgroundBrush}" />
    <Setter Property="BorderBrush" Value="{StaticResource CalendarBorderBrush}" />
    <Setter Property="BorderThickness" Value="{StaticResource DefaultBorderThickness}" />
    <Setter Property="CalendarButtonStyle" Value="{StaticResource CalendarButtonStyle}" />
    <Setter Property="CalendarDayButtonStyle" Value="{StaticResource CalendarDayButtonStyle}" />
    <Setter Property="CalendarItemStyle" Value="{StaticResource CalendarItemStyle}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Calendar}">
          <StackPanel x:Name="PART_Root" HorizontalAlignment="Center">
            <CalendarItem x:Name="PART_CalendarItem"
                          Background="{TemplateBinding Background}"
                          BorderBrush="{TemplateBinding BorderBrush}"
                          BorderThickness="{TemplateBinding BorderThickness}"
                          Style="{TemplateBinding CalendarItemStyle}" />
          </StackPanel>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!--  ********************************** DatePickerDropDownButton Style **********************************  -->
  <Style x:Key="DropDownButtonStyle" TargetType="Button">
    <Setter Property="Foreground" Value="{StaticResource DatePickerIconBackgroundBrush}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Button}">
          <Grid x:Name="main" FlowDirection="LeftToRight">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualStateGroup.Transitions>
                  <VisualTransition GeneratedDuration="0" />
                  <VisualTransition GeneratedDuration="0:0:0.1" To="MouseOver" />
                  <VisualTransition GeneratedDuration="0:0:0.1" To="Pressed" />
                </VisualStateGroup.Transitions>
                <VisualState x:Name="Normal" />
                <VisualState x:Name="MouseOver">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="contentPresenter" Storyboard.TargetProperty="(TextElement.Foreground)">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource DatePickerIconHoverBackgroundBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="background" Storyboard.TargetProperty="Background">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource DatePickerButtonHoverBackgroundBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Pressed">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="contentPresenter" Storyboard.TargetProperty="(TextElement.Foreground)">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource DatePickerIconHoverBackgroundBrush}" />
                    </ObjectAnimationUsingKeyFrames>

                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Disabled">
                  <Storyboard>
                    <DoubleAnimation Duration="0" Storyboard.TargetName="main" Storyboard.TargetProperty="Opacity" To=".3" />
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Focused">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="contentPresenter" Storyboard.TargetProperty="(TextElement.Foreground)">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource DatePickerIconHoverBackgroundBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Border x:Name="background"
                    Grid.Row="1"
                    Grid.RowSpan="3"
                    Grid.ColumnSpan="4"
                    Margin="-5"
                    Background="{StaticResource TransparentBrush}"/>
            <ContentPresenter x:Name="contentPresenter"
                              HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                              VerticalAlignment="{TemplateBinding VerticalAlignment}"
                              TextElement.Foreground="{TemplateBinding Foreground}" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!--  ********************************** DatePicker Style **********************************  -->
  <Style TargetType="{x:Type DatePicker}">
    <Setter Property="Background" Value="{StaticResource DatePickerBackgroundBrush}" />
    <Setter Property="BorderBrush" Value="{StaticResource DatePickerBorderBrush}" />
    <Setter Property="BorderThickness" Value="{StaticResource DefaultBorderThickness}" />
    <Setter Property="CalendarStyle" Value="{DynamicResource DatePickerCalendarStyle}" />
    <Setter Property="FontFamily" Value="{StaticResource FontFamily}" />
    <Setter Property="FontSize" Value="{StaticResource FontSize}" />
    <Setter Property="Foreground" Value="{StaticResource CellItemForegroundBrush}" />
    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
    <Setter Property="Padding" Value="8,4,8,0" />
    <!-- Negative Margin to match CellControl Padding and make the datepicker reach the borders of the cell-->
    <Setter Property="Margin" Value="-6 -2" />
    <Setter Property="VerticalContentAlignment" Value="Center" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type DatePicker}">
          <Border>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="MouseOver"/>
                <VisualState x:Name="Disabled">
                  <Storyboard>
                    <DoubleAnimation Duration="0" Storyboard.TargetName="PART_Root" Storyboard.TargetProperty="Opacity" To="0.3" />
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid x:Name="PART_Root"
                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
              </Grid.ColumnDefinitions>
              <DatePickerTextBox x:Name="PART_TextBox"
                                 Grid.Row="0"
                                 Grid.Column="0"                               
                                 HorizontalContentAlignment="Stretch"
                                 VerticalContentAlignment="Stretch"
                                 Focusable="{TemplateBinding Focusable}"
                                 Style="{StaticResource DatePickerTextBoxStyle}"
                                 Foreground="{TemplateBinding Foreground}"
                                 Background="{TemplateBinding Background}"
                                 BorderBrush="{TemplateBinding BorderBrush}"/>
              <Grid x:Name="PART_DisabledVisual"
                    Grid.Row="0"
                    Grid.Column="0"
                    Grid.ColumnSpan="2"
                    IsHitTestVisible="False"
                    Opacity="0">
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="*" />
                  <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <Popup x:Name="PART_Popup"
                       AllowsTransparency="True"
                       Placement="Bottom"
                       PlacementTarget="{Binding ElementName=PART_TextBox}"
                       StaysOpen="False" />
              </Grid>
              <Button x:Name="PART_Button"
                      Grid.Row="0"
                      Grid.Column="1"
                      Margin="3,0,6,0"
                      HorizontalAlignment="Left"
                      VerticalAlignment="Center"
                      Focusable="False"
                      Style="{StaticResource DropDownButtonStyle}" >
                <Path  x:Name="icon"
                   Width="15"
                   Height="12"
                   Data="{StaticResource DatePickerIcon}"
                   Fill="{StaticResource GlyphBackgroundBrush}"
                   Stretch="Fill" />
              </Button>
            </Grid>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger  Property="IsKeyboardFocusWithin" Value="True">
              <Setter TargetName="icon" Property="Fill" Value="{StaticResource GlyphHoverBackgroundBrush}" />
              <Setter TargetName="PART_TextBox" Property="Foreground" Value="{StaticResource ForegroundBrush}" />
              <Setter TargetName="PART_TextBox" Property="Background" Value="{StaticResource TextBoxBackgroundBrush}" />
            </Trigger>
            <DataTrigger Binding="{Binding Visibility, ElementName=rowSelected}" Value="Visible" >
              <Setter TargetName="icon" Property="Fill" Value="{StaticResource GlyphHoverBackgroundBrush}" />
              <Setter TargetName="PART_TextBox" Property="Foreground" Value="{StaticResource ForegroundBrush}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Visibility, ElementName=cellSelected}" Value="Visible" >
              <Setter TargetName="icon" Property="Fill" Value="{StaticResource GlyphHoverBackgroundBrush}" />
              <Setter TargetName="PART_TextBox" Property="Foreground" Value="{StaticResource ForegroundBrush}" />
            </DataTrigger>
            <Trigger  Property="IsDropDownOpen" Value="True">
              <Setter TargetName="icon" Property="Fill" Value="{StaticResource GlyphHoverBackgroundBrush}" />
              <Setter TargetName="PART_TextBox" Property="BorderBrush" Value="{StaticResource TextBoxFocusedBrush}" />
            </Trigger>
          </ControlTemplate.Triggers>

        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!--  ********************************** Hyperlink Style **********************************  -->
  <Style TargetType="Hyperlink">
    <Setter Property="FontFamily" Value="{StaticResource FontFamily}" />
    <Setter Property="FontSize" Value="{StaticResource FontSize}" />
    <Setter Property="Foreground" Value="{StaticResource HyperlinkForegroundBrush}" />
    <Setter Property="TextBlock.TextDecorations" Value="{x:Null}" />
    <Style.Triggers>
      <Trigger Property="IsMouseOver" Value="True">
        <Setter Property="Foreground" Value="{StaticResource HyperlinkHoverForegroundBrush}"/>
      </Trigger>
      <DataTrigger Binding="{Binding Visibility, ElementName=rowSelected}" Value="Visible" >
        <Setter Property="Foreground" Value="{StaticResource HyperlinkHoverForegroundBrush}" />
      </DataTrigger>
      <DataTrigger Binding="{Binding Visibility, ElementName=cellSelected}" Value="Visible" >
        <Setter Property="Foreground" Value="{StaticResource HyperlinkHoverForegroundBrush}" />
      </DataTrigger>
    </Style.Triggers>
  </Style>

  <!--  ********************************** SearchBox Style **********************************  -->
  <Style x:Key="SearchTextBoxStyle" TargetType="TextBox" BasedOn="{StaticResource TextBoxStyle}">
    <Setter Property="Background" Value="{StaticResource TransparentBrush}" />
    <Setter Property="BorderBrush" Value="{StaticResource TextBoxBorderBrush}" />
    <Setter Property="BorderThickness" Value="{StaticResource DefaultBorderThickness}" />
    <Setter Property="CaretBrush" Value="{StaticResource CaretForegroundBrush}" />
    <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
    <Setter Property="FontFamily" Value="{StaticResource FontFamily}" />
    <Setter Property="FontSize" Value="{StaticResource FontSize}" />
    <Setter Property="FontWeight" Value="{StaticResource FontNormal}" />
    <Setter Property="MinHeight" Value="{StaticResource DefaultMinHeight}" />
    <Setter Property="Padding" Value="{StaticResource TextBoxPadding}" />
    <Setter Property="SelectionBrush" Value="{StaticResource TextBoxFocusedBrush}" />
    <Setter Property="Validation.ErrorTemplate" Value="{StaticResource TextBoxValidationToolTipTemplate}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="TextBox">
          <Grid x:Name="RootElement" SnapsToDevicePixels="True">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="MouseOver">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="Border" Storyboard.TargetProperty="BorderBrush">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource TextBoxHoverBorderBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Disabled">
                  <Storyboard>
                    <DoubleAnimation Duration="0" Storyboard.TargetName="RootElement" Storyboard.TargetProperty="Opacity" To="0.3" />
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="ReadOnly">
                  <Storyboard>
                    <DoubleAnimation Duration="0" Storyboard.TargetName="ReadOnlyVisualElement" Storyboard.TargetProperty="Opacity" To="1" />
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="FocusStates">
                <VisualState x:Name="Focused">
                  <Storyboard>
                    <DoubleAnimation Duration="0" Storyboard.TargetName="FocusVisualElement" Storyboard.TargetProperty="Opacity" To="1" />
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Unfocused">
                  <Storyboard>
                    <DoubleAnimation Duration="0" Storyboard.TargetName="FocusVisualElement" Storyboard.TargetProperty="Opacity" To="0" />
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="ValidationStates">
                <VisualState x:Name="Valid" />
                <VisualState x:Name="InvalidUnfocused">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ValidationErrorElement" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="InvalidFocused">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ValidationErrorElement" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="validationTooltip" Storyboard.TargetProperty="IsOpen">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <System:Boolean>True</System:Boolean>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid>
              <Border x:Name="Border"
                      Background="{TemplateBinding Background}"
                      BorderBrush="{TemplateBinding BorderBrush}"
                      BorderThickness="{TemplateBinding BorderThickness}"
                      CornerRadius="{StaticResource CornerRadius}"
                      Opacity="1" />
              <Border x:Name="ReadOnlyVisualElement"
                      Background="{StaticResource TextBoxReadOnlyBackgroundBrush}"
                      BorderBrush="{StaticResource TextBoxReadOnlyBorderBrush}"
                      Opacity="0"
                      CornerRadius="{StaticResource CornerRadius}"/>
              <ScrollViewer x:Name="PART_ContentHost"
                            BorderThickness="0"
                            IsTabStop="False"
                            Padding="{TemplateBinding Padding}" />
            </Grid>
            <Border x:Name="FocusVisualElement"
                    BorderBrush="{StaticResource TextBoxFocusedBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    IsHitTestVisible="False"
                    Opacity="0"
                    CornerRadius="{StaticResource CornerRadius}"/>
            <Border x:Name="ValidationErrorElement"
                    BorderBrush="{StaticResource ValidationErrorElement}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    Visibility="Collapsed">
              <ToolTipService.ToolTip>
                <ToolTip x:Name="validationTooltip"
                         DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                         Placement="Right"
                         PlacementTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                         Template="{StaticResource TextBoxValidationToolTipTemplate}" />
              </ToolTipService.ToolTip>
              <Grid Width="12"
                    Height="12"
                    Margin="1,-4,-4,0"
                    HorizontalAlignment="Right"
                    VerticalAlignment="Top"
                    Background="Transparent">
                <Path Margin="1,3,0,0"
                      Data="M 1,0 L6,0 A 2,2 90 0 1 8,2 L8,7 z"
                      Fill="{StaticResource ValidationErrorElement}" />
                <Path Margin="1,3,0,0"
                      Data="M 0,0 L2,0 L 8,6 L8,8"
                      Fill="{StaticResource ForegroundBrush}" />
              </Grid>
            </Border>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!--  *********************************  TextBlocks  *********************************  -->
  <Style x:Key="TextBlockStyle" TargetType="TextBlock">
    <Setter Property="FontFamily" Value="{StaticResource FontFamily}" />
    <Setter Property="FontSize" Value="{StaticResource FontSize}" />
    <Setter Property="Foreground" Value="{StaticResource CellItemForegroundBrush}" />
  </Style>

  <Style x:Key="ErrorMessageTextBlockStyle" BasedOn="{StaticResource TextBlockStyle}" TargetType="TextBlock">
    <Setter Property="Foreground" Value="{StaticResource ValidationErrorElement}" />
  </Style>

  <Style x:Key="LabelStyle" TargetType="TextBlock">
    <Setter Property="FontFamily"  Value="{StaticResource FontFamily}" />
    <Setter Property="FontSize" Value="{StaticResource FontSize}" />
    <Setter Property="Foreground" Value="{StaticResource CellItemForegroundBrush}" />
  </Style>

  <!--  *********************************  FixedRowSeparator Style  *********************************  -->
  <Style x:Key="FixedRowSeparatorStyle" TargetType="igPrim:FixedRowSeparator">
    <Setter Property="Background" Value="{StaticResource FixedRowSeparatorBackgroundBrush}" />
    <Setter Property="Height" Value="0" />
    <Setter Property="Margin" Value="0,-1,0,0" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igPrim:FixedRowSeparator">
          <Rectangle Fill="{TemplateBinding Background}" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style BasedOn="{StaticResource FixedRowSeparatorStyle}" TargetType="igPrim:FixedRowSeparator" />

  <!--  *********************************  XamGrid Style  *********************************  -->
  <Style x:Key="XamGridStyle" TargetType="ig:XamGrid">
    <Setter Property="Background" Value="{StaticResource XamGridBackgroundBrush}" />
    <Setter Property="BorderBrush" Value="{StaticResource XamGridBorderBrush}" />
    <Setter Property="BorderThickness" Value="{StaticResource DefaultBorderThickness}" />
    <Setter Property="FixedRowSeparatorStyle" Value="{StaticResource FixedRowSeparatorStyle}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="ig:XamGrid">
          <Border x:Name="Root"
                  BorderBrush="{TemplateBinding BorderBrush}"
                  BorderThickness="{TemplateBinding BorderThickness}">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="ReadOnlyStates">
                <VisualState x:Name="Active" />
                <VisualState x:Name="ReadOnly">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ReadOnlyBorder" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Border.Resources>
              <Style BasedOn="{StaticResource TextBoxStyle}" TargetType="TextBox" />
              <Style BasedOn="{StaticResource ComboBoxStyle}" TargetType="ComboBox" >
                <Setter Property="Margin" Value="-6 -2" />
              </Style>
              <Style BasedOn="{StaticResource CheckBoxStyle}" TargetType="CheckBox" />
              <DataTemplate x:Key="DefaultDeferredScrollingTemplate">
                <Grid Margin="0,20,0,0">
                  <Border HorizontalAlignment="Right"
                          VerticalAlignment="Top"
                          Background="{StaticResource DefaultDeferredScrollingTemplateBackgroundBrush}"
                          BorderBrush="{StaticResource DefaultDeferredScrollingTemplateBorderBrush}"
                          BorderThickness="{StaticResource DefaultBorderThickness}">
                    <TextBlock Margin="5"
                               Foreground="{StaticResource ForegroundBrush}"
                               Text="{Binding FirstColumnValue, Converter={StaticResource CultureConverter}}" />
                  </Border>
                </Grid>
              </DataTemplate>
              <DataTemplate x:Key="DefaultGroupByDeferredScrollingTemplate">
                <Grid Margin="0,20,0,0">
                  <Border HorizontalAlignment="Right"
                          VerticalAlignment="Top"
                          Background="{StaticResource DefaultDeferredScrollingTemplateBackgroundBrush}"
                          BorderBrush="{StaticResource DefaultDeferredScrollingTemplateBorderBrush}"
                          BorderThickness="{StaticResource DefaultBorderThickness}">
                    <TextBlock Margin="5"
                               Foreground="{StaticResource ForegroundBrush}"
                               Text="{Binding Row.Data, Converter={StaticResource CultureConverter}}" />
                  </Border>
                </Grid>
              </DataTemplate>
              <!--  Filtering Icons  -->
              <DataTemplate x:Key="TodayOperand">
                <Path Width="12"
                      Height="13"
                      Data="{StaticResource DateIcon}"
                      Fill="{StaticResource FilterOperatorGlyphBrush}"
                      Stretch="Fill" />
              </DataTemplate>

              <DataTemplate x:Key="DateAfterOperand">
                <Path Width="12"
                      Height="13"
                      Data="{StaticResource DateIcon}"
                      Fill="{StaticResource FilterOperatorGlyphBrush}"
                      Stretch="Fill" />
              </DataTemplate>

              <DataTemplate x:Key="DateBeforeOperand">
                <Path Width="12"
                      Height="13"
                      Data="{StaticResource DateIcon}"
                      Fill="{StaticResource FilterOperatorGlyphBrush}"
                      Stretch="Fill" />
              </DataTemplate>

              <DataTemplate x:Key="TomorrowOperand">
                <Path Width="12"
                      Height="13"
                      Data="{StaticResource DateIcon}"
                      Fill="{StaticResource FilterOperatorGlyphBrush}"
                      Stretch="Fill" />
              </DataTemplate>
              <DataTemplate x:Key="YesterdayOperand">
                <Path Width="12"
                      Height="13"
                      Data="{StaticResource DateIcon}"
                      Fill="{StaticResource FilterOperatorGlyphBrush}"
                      Stretch="Fill" />
              </DataTemplate>
              <DataTemplate x:Key="YearToDateOperand">
                <Path Width="12"
                      Height="13"
                      Data="{StaticResource DateIcon}"
                      Fill="{StaticResource FilterOperatorGlyphBrush}"
                      Stretch="Fill" />
              </DataTemplate>

              <DataTemplate x:Key="NextMonthOperand">
                <Path Width="12"
                      Height="13"
                      Data="{StaticResource DateIcon}"
                      Fill="{StaticResource FilterOperatorGlyphBrush}"
                      Stretch="Fill" />
              </DataTemplate>
              <DataTemplate x:Key="ThisMonthOperand">
                <Path Width="12"
                      Height="13"
                      Data="{StaticResource DateIcon}"
                      Fill="{StaticResource FilterOperatorGlyphBrush}"
                      Stretch="Fill" />
              </DataTemplate>
              <DataTemplate x:Key="LastMonthOperand">
                <Path Width="12"
                      Height="13"
                      Data="{StaticResource DateIcon}"
                      Fill="{StaticResource FilterOperatorGlyphBrush}"
                      Stretch="Fill" />
              </DataTemplate>

              <DataTemplate x:Key="NextWeekOperand">
                <Path Width="12"
                      Height="13"
                      Data="{StaticResource DateIcon}"
                      Fill="{StaticResource FilterOperatorGlyphBrush}"
                      Stretch="Fill" />
              </DataTemplate>
              <DataTemplate x:Key="ThisWeekOperand">
                <Path Width="12"
                      Height="13"
                      Data="{StaticResource DateIcon}"
                      Fill="{StaticResource FilterOperatorGlyphBrush}"
                      Stretch="Fill" />
              </DataTemplate>
              <DataTemplate x:Key="LastWeekOperand">
                <Path Width="12"
                      Height="13"
                      Data="{StaticResource DateIcon}"
                      Fill="{StaticResource FilterOperatorGlyphBrush}"
                      Stretch="Fill" />
              </DataTemplate>

              <DataTemplate x:Key="NextQuarterOperand">
                <Path Width="12"
                      Height="13"
                      Data="{StaticResource DateIcon}"
                      Fill="{StaticResource FilterOperatorGlyphBrush}"
                      Stretch="Fill" />
              </DataTemplate>
              <DataTemplate x:Key="ThisQuarterOperand">
                <Path Width="12"
                      Height="13"
                      Data="{StaticResource DateIcon}"
                      Fill="{StaticResource FilterOperatorGlyphBrush}"
                      Stretch="Fill" />
              </DataTemplate>
              <DataTemplate x:Key="LastQuarterOperand">
                <Path Width="12"
                      Height="13"
                      Data="{StaticResource DateIcon}"
                      Fill="{StaticResource FilterOperatorGlyphBrush}"
                      Stretch="Fill" />
              </DataTemplate>

              <DataTemplate x:Key="NextYearOperand">
                <Path Width="12"
                      Height="13"
                      Data="{StaticResource DateIcon}"
                      Fill="{StaticResource FilterOperatorGlyphBrush}"
                      Stretch="Fill" />
              </DataTemplate>
              <DataTemplate x:Key="ThisYearOperand">
                <Path Width="12"
                      Height="13"
                      Data="{StaticResource DateIcon}"
                      Fill="{StaticResource FilterOperatorGlyphBrush}"
                      Stretch="Fill" />
              </DataTemplate>
              <DataTemplate x:Key="LastYearOperand">
                <Path Width="12"
                      Height="13"
                      Data="{StaticResource DateIcon}"
                      Fill="{StaticResource FilterOperatorGlyphBrush}"
                      Stretch="Fill" />
              </DataTemplate>

              <DataTemplate x:Key="Quarter1Operand">
                <Path Width="12"
                      Height="13"
                      Data="{StaticResource DateIcon}"
                      Fill="{StaticResource FilterOperatorGlyphBrush}"
                      Stretch="Fill" />
              </DataTemplate>
              <DataTemplate x:Key="Quarter2Operand">
                <Path Width="12"
                      Height="13"
                      Data="{StaticResource DateIcon}"
                      Fill="{StaticResource FilterOperatorGlyphBrush}"
                      Stretch="Fill" />
              </DataTemplate>
              <DataTemplate x:Key="Quarter3Operand">
                <Path Width="12"
                      Height="13"
                      Data="{StaticResource DateIcon}"
                      Fill="{StaticResource FilterOperatorGlyphBrush}"
                      Stretch="Fill" />
              </DataTemplate>
              <DataTemplate x:Key="Quarter4Operand">
                <Path Width="12"
                      Height="13"
                      Data="{StaticResource DateIcon}"
                      Fill="{StaticResource FilterOperatorGlyphBrush}"
                      Stretch="Fill" />
              </DataTemplate>

              <DataTemplate x:Key="JanuaryOperand">
                <Path Width="12"
                      Height="13"
                      Data="{StaticResource DateIcon}"
                      Fill="{StaticResource FilterOperatorGlyphBrush}"
                      Stretch="Fill" />
              </DataTemplate>
              <DataTemplate x:Key="FebruaryOperand">
                <Path Width="12"
                      Height="13"
                      Data="{StaticResource DateIcon}"
                      Fill="{StaticResource FilterOperatorGlyphBrush}"
                      Stretch="Fill" />
              </DataTemplate>
              <DataTemplate x:Key="MarchOperand">
                <Path Width="12"
                      Height="13"
                      Data="{StaticResource DateIcon}"
                      Fill="{StaticResource FilterOperatorGlyphBrush}"
                      Stretch="Fill" />
              </DataTemplate>
              <DataTemplate x:Key="AprilOperand">
                <Path Width="12"
                      Height="13"
                      Data="{StaticResource DateIcon}"
                      Fill="{StaticResource FilterOperatorGlyphBrush}"
                      Stretch="Fill" />
              </DataTemplate>
              <DataTemplate x:Key="MayOperand">
                <Path Width="12"
                      Height="13"
                      Data="{StaticResource DateIcon}"
                      Fill="{StaticResource FilterOperatorGlyphBrush}"
                      Stretch="Fill" />
              </DataTemplate>
              <DataTemplate x:Key="JuneOperand">
                <Path Width="12"
                      Height="13"
                      Data="{StaticResource DateIcon}"
                      Fill="{StaticResource FilterOperatorGlyphBrush}"
                      Stretch="Fill" />
              </DataTemplate>
              <DataTemplate x:Key="JulyOperand">
                <Path Width="12"
                      Height="13"
                      Data="{StaticResource DateIcon}"
                      Fill="{StaticResource FilterOperatorGlyphBrush}"
                      Stretch="Fill" />
              </DataTemplate>
              <DataTemplate x:Key="AugustOperand">
                <Path Width="12"
                      Height="13"
                      Data="{StaticResource DateIcon}"
                      Fill="{StaticResource FilterOperatorGlyphBrush}"
                      Stretch="Fill" />
              </DataTemplate>
              <DataTemplate x:Key="SeptemberOperand">
                <Path Width="12"
                      Height="13"
                      Data="{StaticResource DateIcon}"
                      Fill="{StaticResource FilterOperatorGlyphBrush}"
                      Stretch="Fill" />
              </DataTemplate>
              <DataTemplate x:Key="OctoberOperand">
                <Path Width="12"
                      Height="13"
                      Data="{StaticResource DateIcon}"
                      Fill="{StaticResource FilterOperatorGlyphBrush}"
                      Stretch="Fill" />
              </DataTemplate>
              <DataTemplate x:Key="NovemberOperand">
                <Path Width="12"
                      Height="13"
                      Data="{StaticResource DateIcon}"
                      Fill="{StaticResource FilterOperatorGlyphBrush}"
                      Stretch="Fill" />
              </DataTemplate>
              <DataTemplate x:Key="DecemberOperand">
                <Path Width="12"
                      Height="13"
                      Data="{StaticResource DateIcon}"
                      Fill="{StaticResource FilterOperatorGlyphBrush}"
                      Stretch="Fill" />
              </DataTemplate>
              <DataTemplate x:Key="EqualsOperand">
                <Path Width="8"
                      Height="5"
                      VerticalAlignment="Center"
                      Data="{StaticResource EqualsIcon}"
                      Fill="{StaticResource FilterOperatorGlyphBrush}" />
              </DataTemplate>
              <DataTemplate x:Key="NotEqualsOperand">
                <Path Width="8"
                      Height="11"
                      Data="{StaticResource NotEqualsIcon}"
                      Fill="{StaticResource FilterOperatorGlyphBrush}" />
              </DataTemplate>
              <DataTemplate x:Key="StartsWithOperand">
                <StackPanel x:Name="BeginsWith"
                            HorizontalAlignment="Center"
                            Orientation="Horizontal">
                  <TextBlock FontSize="10"
                             Foreground="{StaticResource FilterOperatorGlyphBrush}"
                             Text="A"
                             TextDecorations="Underline" />
                  <TextBlock FontSize="10"
                             Foreground="{StaticResource FilterOperatorGlyphBrush}"
                             Text="a" />
                </StackPanel>
              </DataTemplate>
              <DataTemplate x:Key="EndsWithOperand">
                <StackPanel x:Name="EndsWith"
                            HorizontalAlignment="Center"
                            Orientation="Horizontal">
                  <TextBlock FontSize="10"
                             Foreground="{StaticResource FilterOperatorGlyphBrush}"
                             Text="a" />
                  <TextBlock FontSize="10"
                             Foreground="{StaticResource FilterOperatorGlyphBrush}"
                             Text="A"
                             TextDecorations="Underline" />
                </StackPanel>
              </DataTemplate>
              <DataTemplate x:Key="DoesNotStartWithOperand">
                <Grid x:Name="DoesnotBeginWith">
                  <StackPanel HorizontalAlignment="Center" Orientation="Horizontal">
                    <TextBlock FontSize="10"
                               Foreground="{StaticResource FilterOperatorGlyphBrush}"
                               Text="A"
                               TextDecorations="Underline" />
                    <TextBlock FontSize="10"
                               Foreground="{StaticResource FilterOperatorGlyphBrush}"
                               Text="a" />
                  </StackPanel>
                  <Grid>
                    <Path Width="8"
                          Height="11"
                          Margin="-4,0,0,0"
                          HorizontalAlignment="Center"
                          Data="{StaticResource DoesnotIcon}"
                          Fill="{StaticResource FilterOperatorGlyphBrush}"
                          Stretch="Fill" />
                  </Grid>
                </Grid>
              </DataTemplate>
              <DataTemplate x:Key="DoesNotEndWithOperand">
                <Grid x:Name="DoesnotendWith">
                  <StackPanel HorizontalAlignment="Center" Orientation="Horizontal">
                    <TextBlock FontSize="10"
                               Foreground="{StaticResource FilterOperatorGlyphBrush}"
                               Text="a" />
                    <TextBlock FontSize="10"
                               Foreground="{StaticResource FilterOperatorGlyphBrush}"
                               Text="A"
                               TextDecorations="Underline" />
                  </StackPanel>
                  <Grid>
                    <Path Width="8"
                          Height="11"
                          Margin="0,0,-4,0"
                          HorizontalAlignment="Center"
                          Data="{StaticResource DoesnotIcon}"
                          Fill="{StaticResource FilterOperatorGlyphBrush}"
                          Stretch="Fill" />
                  </Grid>
                </Grid>
              </DataTemplate>
              <DataTemplate x:Key="ContainsOperand">
                <Border Width="11"
                        Height="11"
                        Margin="0,1,0,0"
                        Background="{StaticResource TransparentBrush}"
                        BorderBrush="{StaticResource FilterOperatorGlyphBrush}"
                        BorderThickness="{StaticResource DefaultBorderThickness}">
                  <Rectangle Margin="3" Fill="{StaticResource FilterOperatorGlyphBrush}" />
                </Border>
              </DataTemplate>
              <DataTemplate x:Key="DoesNotContainOperand">
                <Grid x:Name="DoesNotContains" Margin="0,1,0,0">
                  <Border Width="11"
                          Height="11"
                          Background="{StaticResource TransparentBrush}"
                          BorderBrush="{StaticResource FilterOperatorGlyphBrush}"
                          BorderThickness="{StaticResource DefaultBorderThickness}">
                    <Grid>
                      <Rectangle Margin="3" Fill="{StaticResource FilterOperatorGlyphBrush}" />
                      <Line RenderOptions.EdgeMode="Aliased"
                            Stroke="{StaticResource FilterOperatorGlyphBrush}"
                            StrokeThickness="{StaticResource DefaultStrokeThickness}"
                            X1="0"
                            X2="9"
                            Y1="9"
                            Y2="0" />
                    </Grid>
                  </Border>
                </Grid>
              </DataTemplate>
              <DataTemplate x:Key="GreaterThanOperand">
                <Path Width="8"
                      Height="8"
                      HorizontalAlignment="Center"
                      Data="{StaticResource GreaterThanIcon}"
                      Fill="{StaticResource FilterOperatorGlyphBrush}" />
              </DataTemplate>
              <DataTemplate x:Key="GreaterThanOrEqualOperand">
                <StackPanel x:Name="GreaterThanOrEqual">
                  <Path Width="8"
                        Height="8"
                        HorizontalAlignment="Center"
                        Data="{StaticResource GreaterThanIcon}"
                        Fill="{StaticResource FilterOperatorGlyphBrush}" />
                  <Rectangle Width="8"
                             Height="1"
                             Margin="0,1,0,0"
                             Fill="{StaticResource FilterOperatorGlyphBrush}" />
                </StackPanel>
              </DataTemplate>
              <DataTemplate x:Key="LessThanOperand">
                <Path Width="8"
                      Height="8"
                      HorizontalAlignment="Center"
                      Data="{StaticResource LessThanIcon}"
                      Fill="{StaticResource FilterOperatorGlyphBrush}" />
              </DataTemplate>
              <DataTemplate x:Key="LessThanOrEqualOperand">
                <StackPanel x:Name="LessThanOrEqual">
                  <Path Width="8"
                        Height="8"
                        HorizontalAlignment="Center"
                        Data="{StaticResource LessThanIcon}"
                        Fill="{StaticResource FilterOperatorGlyphBrush}" />
                  <Rectangle Width="8"
                             Height="1"
                             Margin="0,1,0,0"
                             Fill="{StaticResource FilterOperatorGlyphBrush}" />
                </StackPanel>
              </DataTemplate>
              <DataTemplate x:Key="DefaultFilterIcon">
                <Grid>
                  <Path Width="10"
                        Height="8"
                        Data="{StaticResource FilterIcon}"
                        Fill="{StaticResource GlyphBackgroundBrush}"
                        Stretch="Fill" />
                  <Path Width="3.5"
                        Height="7"
                        Margin="11,7,0,0"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        Data="{StaticResource FilterArrowIcon}"
                        Fill="{StaticResource GlyphBackgroundBrush}"
                        Stretch="Fill" />
                </Grid>
              </DataTemplate>
            </Border.Resources>
            <Grid>
              <Grid Background="{TemplateBinding Background}">
                <Grid.RowDefinitions>
                  <RowDefinition Height="*" />
                  <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="*" />
                  <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <igPrim:RowsPanel x:Name="RowsPanel" />
                <ScrollBar x:Name="VerticalScrollBar"
                           Grid.Row="0"
                           Grid.Column="1"
                           Style="{StaticResource ScrollBarStyle}" />
                <ScrollBar x:Name="HorizontalScrollBar"
                           Grid.Row="2"
                           Style="{StaticResource ScrollBarStyle}" />
              </Grid>
              <Border x:Name="ReadOnlyBorder"
                      Background="{StaticResource XamGridReadOnlyBackgroundBrush}"
                      Visibility="Collapsed" />
            </Grid>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style BasedOn="{StaticResource XamGridStyle}" TargetType="ig:XamGrid" />

  <!--  *********************************  SimpleClickableContainer Style  *********************************  -->
  <Style x:Key="SimpleClickableContainerStyle" TargetType="igPrim:SimpleClickableContainer">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igPrim:SimpleClickableContainer">
          <Border x:Name="Border"
                  Background="{TemplateBinding Background}"
                  BorderBrush="{TemplateBinding BorderBrush}"
                  BorderThickness="{TemplateBinding BorderThickness}" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style BasedOn="{StaticResource SimpleClickableContainerStyle}" TargetType="igPrim:SimpleClickableContainer" />

  <!--  *********************************  NoChromeButton Style  *********************************  -->
  <Style x:Key="NoChromeButtonStyle" TargetType="Button">
    <Setter Property="Foreground" Value="{StaticResource GlyphBackgroundBrush}"/>
    <Setter Property="Background" Value="{StaticResource TransparentBrush}" />
    <Setter Property="BorderThickness" Value="0" />
    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
    <Setter Property="MinHeight" Value="24" />
    <Setter Property="MinWidth" Value="24" />
    <Setter Property="Padding" Value="0" />
    <Setter Property="VerticalContentAlignment" Value="Stretch" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="Button">
          <Grid Background="{StaticResource TransparentBrush}">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="MouseOver" />
                <VisualState x:Name="Pressed" />
                <VisualState x:Name="Disabled">
                  <Storyboard>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="contentPresenter" Storyboard.TargetProperty="Opacity">
                      <SplineDoubleKeyFrame KeyTime="0" Value=".3" />
                    </DoubleAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="FocusStates">
                <VisualState x:Name="Focused" />
                <VisualState x:Name="Unfocused" />
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Rectangle Fill="{StaticResource TransparentBrush}" />
            <Border Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}" />
            <ContentPresenter x:Name="contentPresenter"
                              Margin="{TemplateBinding Padding}"
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                              Content="{TemplateBinding Content}"
                              ContentTemplate="{TemplateBinding ContentTemplate}"
                              TextElement.Foreground="{TemplateBinding Foreground}"/>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
              <Setter Property="Foreground" Value="{StaticResource GlyphHoverBackgroundBrush}"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!--  *********************************  GridSortableListBoxItem Style  *********************************  -->
  <Style x:Key="GridSortableListBoxItemStyle" TargetType="igPrim:GridSortableListBoxItem">
    <Setter Property="Background" Value="{StaticResource GridSortableListBoxItemBackgroundBrush}" />
    <Setter Property="BorderBrush" Value="{StaticResource GridSortableListBoxItemBorderBrush}" />
    <Setter Property="BorderThickness" Value="{StaticResource CellBorderThickness}" />
    <Setter Property="FontFamily" Value="{StaticResource FontFamily}" />
    <Setter Property="FontSize" Value="{StaticResource FontSize}" />
    <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
    <Setter Property="HorizontalContentAlignment" Value="Left" />
    <Setter Property="Padding" Value="6,4,20,4" />
    <Setter Property="VerticalContentAlignment" Value="Top" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igPrim:GridSortableListBoxItem">
          <Border x:Name="Bd"
                  Background="{TemplateBinding Background}"
                  BorderBrush="{TemplateBinding BorderBrush}"
                  BorderThickness="{TemplateBinding BorderThickness}">
            <Grid igPrim:XamlHelper.SnapsToDevicePixels="True">
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="24" />
                <!--  This column width is equal width to the "labels" grid column "dragHandleColumn"  -->
                <ColumnDefinition Width="*" />
              </Grid.ColumnDefinitions>
              <Border x:Name="DragHandle"
                      Background="{StaticResource DragHandleBackgroundBrush}"
                      BorderBrush="{StaticResource DragHandleBorderBrush}"
                      BorderThickness="0,0,0,0"
                      Cursor="Hand">
                <Grid>
                  <Path Width="10"
                        Height="18"
                        Data="{StaticResource DragHandleIcon}"
                        Fill="{StaticResource GlyphBackgroundBrush}"
                        Stretch="Fill"
                        UseLayoutRounding="False" />
                </Grid>
              </Border>
              <Popup x:Name="Popup" />
              <Grid Grid.Column="1">
                <ContentPresenter x:Name="contentPresenter"
                                  Margin="{TemplateBinding Padding}"
                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                  Content="{TemplateBinding Content}"
                                  ContentTemplate="{TemplateBinding ContentTemplate}" />
              </Grid>
            </Grid>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style BasedOn="{StaticResource GridSortableListBoxItemStyle}" TargetType="igPrim:GridSortableListBoxItem" />

  <!--  *********************************  GridSortableListBox Style  *********************************  -->
  <Style x:Key="GridSortableListBoxStyle" TargetType="igPrim:GridSortableListBox">
    <Setter Property="Background" Value="{StaticResource GridSortableListBoxBackgroundBrush}" />
    <Setter Property="BorderBrush" Value="{StaticResource GridSortableListBoxBorderBrush}" />
    <Setter Property="BorderThickness" Value="{StaticResource DefaultBorderThickness}" />
    <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
    <Setter Property="HorizontalContentAlignment" Value="Left" />
    <Setter Property="IsTabStop" Value="False" />
    <Setter Property="Padding" Value="1" />
    <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
    <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
    <Setter Property="VerticalContentAlignment" Value="Top" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igPrim:GridSortableListBox">
          <Grid>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="ValidationStates">
                <VisualState x:Name="Valid" />
                <VisualState x:Name="InvalidUnfocused">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ValidationErrorElement" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>
                            Visible
                          </Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="InvalidFocused">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ValidationErrorElement" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>
                            Visible
                          </Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="validationTooltip" Storyboard.TargetProperty="IsOpen">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <System:Boolean>
                            True
                          </System:Boolean>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
              <ScrollViewer x:Name="ScrollViewer"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{StaticResource TransparentBrush}"
                            BorderThickness="0"
                            Padding="{TemplateBinding Padding}"
                            Style="{StaticResource ScrollViewerStyle}">
                <ItemsPresenter />
              </ScrollViewer>
            </Border>
            <Border x:Name="ValidationErrorElement"
                    BorderBrush="{StaticResource ValidationErrorElement}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    Visibility="Collapsed">
              <ToolTipService.ToolTip>
                <ToolTip x:Name="validationTooltip"
                         DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                         Placement="Right"
                         PlacementTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}">
                  <ToolTip.Triggers>
                    <EventTrigger RoutedEvent="Canvas.Loaded">
                      <EventTrigger.Actions>
                        <BeginStoryboard>
                          <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="validationTooltip" Storyboard.TargetProperty="IsHitTestVisible">
                              <DiscreteObjectKeyFrame KeyTime="0">
                                <DiscreteObjectKeyFrame.Value>
                                  <System:Boolean>
                                    true
                                  </System:Boolean>
                                </DiscreteObjectKeyFrame.Value>
                              </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                          </Storyboard>
                        </BeginStoryboard>
                      </EventTrigger.Actions>
                    </EventTrigger>
                  </ToolTip.Triggers>
                </ToolTip>
              </ToolTipService.ToolTip>
              <Grid Width="10"
                    Height="10"
                    Margin="0,-4,-4,0"
                    HorizontalAlignment="Right"
                    VerticalAlignment="Top"
                    Background="{StaticResource TransparentBrush}">
                <Path Margin="-1,3,0,0"
                      Data="M 1,0 L6,0 A 2,2 90 0 1 8,2 L8,7 z"
                      Fill="{StaticResource ValidationErrorElement}" />
              </Grid>
            </Border>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style BasedOn="{StaticResource GridSortableListBoxStyle}" TargetType="igPrim:GridSortableListBox" />

  <!--  *********************************  ColumnChooserListBoxItem Style  *********************************  -->
  <Style x:Key="ColumnChooserListBoxItemStyle" TargetType="ListBoxItem">
    <Setter Property="Background" Value="{StaticResource ListBoxItemBackgroundBrush}" />
    <Setter Property="FontFamily" Value="{StaticResource FontFamily}" />
    <Setter Property="FontSize" Value="{StaticResource FontSize}" />
    <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
    <Setter Property="HorizontalContentAlignment" Value="Left" />
    <Setter Property="Padding" Value="{StaticResource DefaultPadding}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="ListBoxItem">
          <Grid Background="{StaticResource TransparentBrush}" x:Name="Main">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="MouseOver">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Bd" Storyboard.TargetProperty="Background">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ListBoxItemHoverBackgroundBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Pressed" />
                <VisualState x:Name="Disabled">
                  <Storyboard>
                    <DoubleAnimation Duration="0" Storyboard.TargetName="Main" Storyboard.TargetProperty="Opacity" To="0.3" />
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="SelectionStates">
                <VisualState x:Name="Unselected" />
                <VisualState x:Name="Selected">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BgSelected" Storyboard.TargetProperty="(UIElement.Visibility)">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="FocusStates">
                <VisualState x:Name="Focused">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="FocusedVisualElement" Storyboard.TargetProperty="(UIElement.Visibility)">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Unfocused" />
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="24" />
              <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <Border x:Name="Bd"
                    Grid.ColumnSpan="2"
                    Background="{TemplateBinding Background}"
                    BorderThickness="{StaticResource DefaultBorderThickness}" />
            <Rectangle x:Name="BgSelected"
                       Grid.ColumnSpan="2"
                       Fill="{StaticResource ListBoxItemSelectedBackgroundBrush}"
                       Visibility="Collapsed" />
            <Rectangle x:Name="FocusedVisualElement"
                       Grid.ColumnSpan="2"
                       IsHitTestVisible="False"
                       Visibility="Collapsed" />
            <ContentControl x:Name="contentControl"
                            Grid.Column="1"
                            Foreground="{TemplateBinding Foreground}">
              <ContentPresenter x:Name="contentPresenter"
                                Margin="{TemplateBinding Padding}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                Content="{TemplateBinding Content}"
                                ContentTemplate="{TemplateBinding ContentTemplate}" />
            </ContentControl>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!--  *********************************  ColumnChooserDialogButton Style  *********************************  -->
  <Style x:Key="ColumnChooserDialogButtonStyle" TargetType="Button">
    <Setter Property="Background" Value="{StaticResource ColumnChooserDialogButtonBackgroundBrush}" />
    <Setter Property="BorderBrush" Value="{StaticResource ColumnChooserDialogButtonBorderBrush}" />
    <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
    <Setter Property="HorizontalContentAlignment" Value="Left" />
    <Setter Property="Padding" Value="8,3" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="Button">
          <Grid Background="{StaticResource TransparentBrush}">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="MouseOver">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BaseShape" Storyboard.TargetProperty="Background">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ColumnChooserDialogButtonHoverBackgroundBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BaseShape" Storyboard.TargetProperty="BorderBrush">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ColumnChooserDialogButtonHoverBorderBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="chooserIcon" Storyboard.TargetProperty="Fill">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource GlyphHoverBackgroundBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Pressed" />
                <VisualState x:Name="Disabled">
                  <Storyboard>
                    <DoubleAnimation Storyboard.TargetName="contentControl" Storyboard.TargetProperty="Opacity" To=".3" />
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="FocusStates">
                <VisualState x:Name="Focused" />
                <VisualState x:Name="Unfocused" />
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="24" />
              <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <Border x:Name="BaseShape"
                    Grid.ColumnSpan="2"
                    Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}" />
            <Grid x:Name="columnChooserIcon"
                  Width="16"
                  Height="14"
                  HorizontalAlignment="Center"
                  VerticalAlignment="Center">
              <Path x:Name="chooserIcon"
                    Width="16"
                    Height="14"
                    VerticalAlignment="Top"
                    Data="{StaticResource ColumnChooserIcon}"
                    Fill="{StaticResource GlyphBackgroundBrush}"
                    Stretch="Fill" />

            </Grid>
            <ContentControl x:Name="contentControl" Grid.Column="1">
              <ContentPresenter x:Name="contentPresenter"
                                Margin="{TemplateBinding Padding}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                Content="{TemplateBinding Content}"
                                ContentTemplate="{TemplateBinding ContentTemplate}" />
            </ContentControl>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!--  ********************************** ColumnChooserDialogCloseButton Style **********************************  -->
  <Style x:Key="ColumnChooserDialogCloseButtonStyle" TargetType="Button">
    <Setter Property="FontFamily" Value="{StaticResource FontFamily}" />
    <Setter Property="FontSize" Value="{StaticResource FontSize}" />
    <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
    <Setter Property="Height" Value="22" />
    <Setter Property="Padding" Value="10,0" />
    <Setter Property="Width" Value="28" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="Button">
          <Grid igPrim:XamlHelper.SnapsToDevicePixels="True" Background="Transparent">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="MouseOver">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="CloseShape" Storyboard.TargetProperty="Fill">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource GlyphHoverBackgroundBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Pressed">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="CloseShape" Storyboard.TargetProperty="Fill">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource GlyphHoverBackgroundBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Disabled" />
              </VisualStateGroup>
              <VisualStateGroup x:Name="FocusStates">
                <VisualState x:Name="Focused" />
                <VisualState x:Name="Unfocused" />
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Rectangle Fill="{StaticResource TransparentBrush}" />
            <Path x:Name="CloseShape"
                  Width="10"
                  Height="10"
                  igPrim:XamlHelper.SnapsToDevicePixels="True"
                  Data="{StaticResource CloseIcon}"
                  Fill="{StaticResource GlyphBackgroundBrush}"
                  Stretch="Fill" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!--  *********************************  ColumnChooserDialog Style  *********************************  -->
  <Style x:Key="ColumnChooserDialogStyle" TargetType="igPrim:ColumnChooserDialog">
    <Setter Property="Background" Value="{StaticResource ColumnChooserDialogBackgroundBrush}" />
    <Setter Property="BorderBrush" Value="{StaticResource ColumnChooserDialogBorderBrush}" />
    <Setter Property="BorderThickness" Value="{StaticResource DefaultBorderThickness}" />
    <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
    <Setter Property="MaxHeight" Value="225" />
    <Setter Property="Padding" Value="0,0,0,5" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igPrim:ColumnChooserDialog">
          <Grid>
            <Popup x:Name="Popup">
              <Grid x:Name="RootElement" MaxHeight="{TemplateBinding MaxHeight}">
                <Border Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}">
                  <Grid>
                    <Grid.RowDefinitions>
                      <RowDefinition Height="22" />
                      <RowDefinition Height="22" />
                      <RowDefinition />
                    </Grid.RowDefinitions>
                    <!--  HEADER CAPTION  -->
                    <Grid>
                      <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                      </Grid.ColumnDefinitions>
                      <Border x:Name="HeaderElem"
                              Grid.ColumnSpan="2"
                              Height="26"
                              Background="{StaticResource ColumnChooserDialogBackgroundBrush}"
                              BorderThickness="0,0,0,1">
                        <TextBlock Margin="6,4"
                                   FontFamily="{StaticResource FontFamily}"
                                   FontSize="{StaticResource FontSize}"
                                   FontWeight="{StaticResource FontSemiBold}"
                                   Foreground="{StaticResource ForegroundBrush}"
                                   Text="{Binding ColumnLayout.Grid.ColumnChooserSettings.ColumnChooserDisplayText, RelativeSource={RelativeSource TemplatedParent}}" />
                      </Border>
                      <Button Grid.Column="1"
                              Margin="5,0,0,0"
                              HorizontalAlignment="Right"
                              VerticalAlignment="Center"
                              Cursor="Hand"
                              Style="{StaticResource ColumnChooserDialogCloseButtonStyle}">
                        <igBase:Commanding.Command>
                          <igBase:XamGridColumnChooserCommandSource CommandType="Close" EventName="Click" />
                        </igBase:Commanding.Command>
                      </Button>
                    </Grid>
                    <!--  LABELS  -->
                    <Grid x:Name="labels" Grid.Row="1">
                      <Grid.ColumnDefinitions>
                        <ColumnDefinition x:Name="dragHandleColumn" Width="25" />
                        <ColumnDefinition x:Name="viewLabel" Width="35" />
                        <ColumnDefinition x:Name="columnLabel" Width="*" />
                      </Grid.ColumnDefinitions>
                      <Rectangle x:Name="labelAreaSeparator"
                                 Grid.Row="1"
                                 Grid.ColumnSpan="3"
                                 Height="1"
                                 VerticalAlignment="Bottom"
                                 Fill="{StaticResource SeparatorBrush}" />
                      <TextBlock Grid.Row="1"
                                 Grid.Column="1"
                                 HorizontalAlignment="Center"
                                 VerticalAlignment="Center"
                                 Foreground="{TemplateBinding Foreground}"
                                 Style="{StaticResource LabelStyle}"
                                 Text="{TemplateBinding ViewLabelText}" />
                      <TextBlock Grid.Row="1"
                                 Grid.Column="2"
                                 Margin="9,0"
                                 VerticalAlignment="Center"
                                 Foreground="{TemplateBinding Foreground}"
                                 Style="{StaticResource LabelStyle}"
                                 Text="{TemplateBinding ColumnLabelText}" />
                    </Grid>
                    <!--  ITEMS  -->
                    <Grid Grid.Row="2">
                      <igPrim:GridSortableListBox Margin="{TemplateBinding Padding}"
                                                  Background="{TemplateBinding Background}"
                                                  BorderThickness="0"
                                                  IsSortable="{Binding IsSortable, RelativeSource={RelativeSource TemplatedParent}}"
                                                  ItemsSource="{Binding Columns, RelativeSource={RelativeSource TemplatedParent}}"
                                                  Style="{StaticResource GridSortableListBoxStyle}">
                        <igPrim:GridSortableListBox.ItemTemplate>
                          <DataTemplate>
                            <Grid>
                              <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="35" />
                                <!--  This column width is equal width to the "labels" grid column "viewLabel"  -->
                                <ColumnDefinition Width="*" />
                              </Grid.ColumnDefinitions>
                              <CheckBox HorizontalAlignment="Center"
                                        IsChecked="{Binding Visibility, Mode=TwoWay, Converter={StaticResource VisToBool}}"
                                        IsEnabled="{Binding IsHideable}"
                                        Style="{StaticResource CheckBoxStyle}" />
                              <TextBlock Grid.Column="1"
                                         Margin="6,4"
                                         Style="{StaticResource TextBlockStyle}"
                                         Text="{Binding DisplayNameResolved}" />
                            </Grid>
                          </DataTemplate>
                        </igPrim:GridSortableListBox.ItemTemplate>
                        <igPrim:GridSortableListBox.ItemsPanel>
                          <ItemsPanelTemplate>
                            <StackPanel Orientation="Vertical" />
                          </ItemsPanelTemplate>
                        </igPrim:GridSortableListBox.ItemsPanel>
                      </igPrim:GridSortableListBox>
                    </Grid>
                  </Grid>
                </Border>
              </Grid>
            </Popup>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style BasedOn="{StaticResource ColumnChooserDialogStyle}" TargetType="igPrim:ColumnChooserDialog" />

  <!--  ******************************************* PopupResizer Style   *************************************  -->
  <Style x:Key="PopupResizerStyle" TargetType="igPrim:PopupResizer">
    <Setter Property="Background" Value="{StaticResource PopupResizerBackgroundBrush}" />
    <Setter Property="BorderBrush" Value="{StaticResource PopupResizerBorderBrush}" />
    <Setter Property="Height" Value="20" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igPrim:PopupResizer">
          <Border Height="{TemplateBinding Height}">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="FlowDirections">
                <VisualState x:Name="LTR" />
                <VisualState x:Name="RTL">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ResizeElem" Storyboard.TargetProperty="Cursor">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Cursor>SizeNESW</Cursor>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="AboveLTR">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ResizeElem" Storyboard.TargetProperty="Cursor">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Cursor>SizeNESW</Cursor>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="AboveRTL">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ResizeElem" Storyboard.TargetProperty="Cursor">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Cursor>SizeNWSE</Cursor>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="Position">
                <VisualState x:Name="Below" />
                <VisualState x:Name="Above">
                  <Storyboard>
                    <PointAnimationUsingKeyFrames Storyboard.TargetName="BelowPosition" Storyboard.TargetProperty="(UIElement.RenderTransformOrigin)">
                      <EasingPointKeyFrame KeyTime="0" Value="0.5,0.5" />
                    </PointAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="BelowPosition" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)">
                      <EasingDoubleKeyFrame KeyTime="0" Value="-1" />
                    </DoubleAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid>
              <Grid x:Name="BelowPosition" Margin="0">
                <Grid.RenderTransform>
                  <TransformGroup>
                    <ScaleTransform />
                    <SkewTransform />
                    <RotateTransform />
                    <TranslateTransform />
                  </TransformGroup>
                </Grid.RenderTransform>
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="*" />
                  <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <Border Grid.ColumnSpan="2"
                        Margin="0 -2 0 0"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{StaticResource DefaultBorderThickness}" />
                <Border x:Name="ResizeElem"
                        Grid.Column="1"
                        VerticalAlignment="Bottom"
                        Background="{StaticResource TransparentBrush}"
                        BorderThickness="{StaticResource DefaultBorderThickness}"
                        Cursor="SizeNWSE">
                  <Grid x:Name="BelowDots"
                        Width="7"
                        Height="7"
                        Margin="0,0,4,4"
                        VerticalAlignment="Bottom">
                    <Rectangle Width="2"
                               Height="2"
                               Margin="0,0,4,0"
                               HorizontalAlignment="Right"
                               VerticalAlignment="Bottom"
                               Fill="{StaticResource GlyphBackgroundBrush}" />
                    <Rectangle Width="2"
                               Height="2"
                               HorizontalAlignment="Right"
                               VerticalAlignment="Bottom"
                               Fill="{StaticResource GlyphBackgroundBrush}" />
                    <Rectangle Width="2"
                               Height="2"
                               Margin="0,0,0,4"
                               HorizontalAlignment="Right"
                               VerticalAlignment="Bottom"
                               Fill="{StaticResource GlyphBackgroundBrush}" />
                    <Rectangle x:Name="TouchableZone"
                               Grid.Column="1"
                               Margin="-20 -12 -12 -12"
                               Fill="{StaticResource TransparentBrush}" />
                  </Grid>
                </Border>
              </Grid>
            </Grid>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!--  *********************************  HeaderDropDownControl Style  *********************************  -->
  <Style x:Key="HeaderDropDownControlStyle" TargetType="igPrim:HeaderDropDownControl">
    <Setter Property="Cursor" Value="Hand" />
    <Setter Property="Padding" Value="0" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igPrim:HeaderDropDownControl">
          <Grid>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="ResizeStates">
                <VisualState x:Name="NotResizable" />
                <VisualState x:Name="Resizable">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames BeginTime="0" Storyboard.TargetName="Resizer" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>
                            Visible
                          </Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid.RowDefinitions>
              <RowDefinition />
              <RowDefinition Height="0" />
            </Grid.RowDefinitions>
            <Button x:Name="OpenButton"
                    VerticalContentAlignment="Stretch"
                    Content="{TemplateBinding OpenButtonContent}"
                    Padding="{TemplateBinding Padding}"
                    Style="{StaticResource NoChromeButtonStyle}">
              <igBase:Commanding.Command>
                <igPrim:XamGridPopupCommandSource CommandType="TogglePopup" EventName="Click" />
              </igBase:Commanding.Command>
            </Button>
            <Popup x:Name="Popup" Grid.Row="1">
              <Grid>
                <Grid.RowDefinitions>
                  <RowDefinition Height="*" />
                  <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <ContentPresenter x:Name="cp" />
                <igPrim:PopupResizer x:Name="Resizer"
                                     Grid.Row="1"
                                     ResizeElement="{Binding ElementName=cp, Path=Content}"
                                     Style="{StaticResource PopupResizerStyle}"
                                     Visibility="Collapsed" />
              </Grid>
            </Popup>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style BasedOn="{StaticResource HeaderDropDownControlStyle}" TargetType="igPrim:HeaderDropDownControl" />

  <!--  *********************************  HeaderDropDownButton Style  *********************************  -->
  <Style x:Key="HeaderDropDownButtonStyle" TargetType="Button">
    <Setter Property="Foreground" Value="{StaticResource GlyphBackgroundBrush}" />
    <Setter Property="Cursor" Value="Hand" />
    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
    <Setter Property="MinWidth" Value="10" />
    <Setter Property="Padding" Value="0" />
    <Setter Property="VerticalContentAlignment" Value="Stretch" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="Button">
          <Grid Background="{StaticResource TransparentBrush}">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="MouseOver" />
                <VisualState x:Name="Pressed" />
                <VisualState x:Name="Disabled">
                  <Storyboard>

                    <DoubleAnimation d:IsOptimized="True" Duration="0" Storyboard.TargetName="contentPresenter" Storyboard.TargetProperty="(UIElement.Opacity)" To="0.3" />
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="FocusStates">
                <VisualState x:Name="Focused" />
                <VisualState x:Name="Unfocused" />
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Rectangle x:Name="rectangle" Fill="{StaticResource TransparentBrush}" />
            <ContentPresenter x:Name="contentPresenter"
                              Margin="{TemplateBinding Padding}"
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                              Content="{TemplateBinding Content}"
                              ContentTemplate="{TemplateBinding ContentTemplate}"
                              TextElement.Foreground="{TemplateBinding Foreground}"/>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
              <Setter Property="Foreground" Value="{StaticResource GlyphHoverBackgroundBrush}"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!--  *********************************  HeaderCellControl Style  *********************************  -->
  <Style x:Key="HeaderCellControlStyle" TargetType="igPrim:HeaderCellControl">
    <Setter Property="Background" Value="{StaticResource HeaderCellBackgroundBrush}" />
    <Setter Property="BorderBrush" Value="{StaticResource HeaderCellBorderBrush}" />
    <Setter Property="BorderThickness" Value="{StaticResource HeaderCellBorderThickness}" />
    <Setter Property="FontFamily" Value="{StaticResource FontFamily}" />
    <Setter Property="FontSize" Value="{StaticResource FontSize}" />
    <Setter Property="FontWeight" Value="{StaticResource FontSemiBold}" />
    <Setter Property="Foreground" Value="{StaticResource HeaderCellForegroundBrush}" />
    <Setter Property="HorizontalContentAlignment" Value="Left" />
    <Setter Property="MinHeight" Value="26" />
    <Setter Property="Padding" Value="6,4" />
    <Setter Property="ResizingThreshold" Value="2" />
    <Setter Property="VerticalContentAlignment" Value="Center" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igPrim:HeaderCellControl">
          <igPrim:SimpleClickableContainer x:Name="NormalFill"
                                           Background="{TemplateBinding Background}"
                                           BorderBrush="{TemplateBinding BorderBrush}"
                                           BorderThickness="{TemplateBinding BorderThickness}">
            <igBase:Commanding.Commands>
              <igBase:CommandSourceCollection>
                <igBase:XamGridColumnCommandSource CommandType="Select" EventName="SimpleClick" />
                <igBase:XamGridColumnCommandSource CommandType="SortToggle" EventName="SimpleClick" />
              </igBase:CommandSourceCollection>
            </igBase:Commanding.Commands>
            <Grid x:Name="Bd">
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
              </Grid.ColumnDefinitions>
              <igPrim:HeaderDropDownControl x:Name="HiddenLeftAdjacentColumnsElement"
                                            Width="Auto"
                                            Padding="0"
                                            Visibility="Collapsed">
                <ToolTipService.ToolTip>
                  <ToolTip Content="{Binding Cell.Column.ColumnLayout.Grid.ColumnChooserSettings.HiddenColumnIndicatorToolTipText, RelativeSource={RelativeSource TemplatedParent}}" />
                </ToolTipService.ToolTip>
                <igPrim:HeaderDropDownControl.OpenButtonContent>
                  <Grid HorizontalAlignment="Left" VerticalAlignment="Stretch">
                    <Rectangle Width="24"
                               Margin="-5,0"
                               HorizontalAlignment="Stretch"
                               Fill="{StaticResource TransparentBrush}" />
                    <Rectangle Width="10"
                               HorizontalAlignment="Left"
                               Fill="{StaticResource HiddenColumnIndicatorBrush}" />
                  </Grid>
                </igPrim:HeaderDropDownControl.OpenButtonContent>
                <Grid>
                  <Border x:Name="ColumnChooserBd"
                          MaxHeight="200"
                          Background="{StaticResource PopupBackgroundBrush}"
                          BorderBrush="{StaticResource PopupBorderBrush}"
                          BorderThickness="{StaticResource DefaultBorderThickness}"
                          Padding="1">
                    <Grid>
                      <Grid.ColumnDefinitions>
                        <ColumnDefinition MinWidth="26" MaxWidth="26" />
                        <ColumnDefinition />
                      </Grid.ColumnDefinitions>
                      <Grid.RowDefinitions>
                        <RowDefinition />
                        <RowDefinition Height="Auto" />
                      </Grid.RowDefinitions>
                      <Border Grid.RowSpan="2" Background="{StaticResource ColumnChooserPopupVSeparatorBackgroundBrush}" />
                      <ListBox Grid.ColumnSpan="2"
                               Margin="0"
                               Background="{StaticResource TransparentBrush}"
                               BorderThickness="0"
                               DataContext="{x:Null}"
                               ItemContainerStyle="{StaticResource ColumnChooserListBoxItemStyle}"
                               ItemsSource="{Binding Cell.ColumnsHiddenToLeft, RelativeSource={RelativeSource TemplatedParent}}"
                               Padding="0"
                               Style="{StaticResource ListBoxStyle}">
                        <ListBox.ItemTemplate>
                          <DataTemplate>
                            <TextBlock Text="{Binding DisplayNameResolved}" />
                          </DataTemplate>
                        </ListBox.ItemTemplate>
                        <igBase:Commanding.Commands>
                          <igBase:CommandSourceCollection>
                            <igBase:XamGridColumnCommandSource CommandType="Show"
                                                               EventName="SelectionChanged"
                                                               ParameterBinding="{Binding SelectedItem}" />
                            <igPrim:XamGridPopupCommandSource CommandType="ClosePopup" EventName="SelectionChanged" />
                          </igBase:CommandSourceCollection>
                        </igBase:Commanding.Commands>
                      </ListBox>
                      <StackPanel Grid.Row="1"
                                  Grid.ColumnSpan="2"
                                  Background="{StaticResource TransparentBrush}">
                        <igBase:XamMenuSeparator Background="{StaticResource SeparatorBrush}" />
                        <Button Margin="0,1,0,0" Style="{StaticResource ColumnChooserDialogButtonStyle}">
                          <igBase:Commanding.Commands>
                            <igBase:CommandSourceCollection>
                              <igBase:XamGridColumnChooserCommandSource CommandType="Open" EventName="Click" />
                              <igPrim:XamGridPopupCommandSource CommandType="ClosePopup" EventName="Click" />
                            </igBase:CommandSourceCollection>
                          </igBase:Commanding.Commands>
                          <TextBlock FontSize="{StaticResource FontSize}"
                                     Foreground="{StaticResource ForegroundBrush}"
                                     Text="{Binding Cell.Column.ColumnLayout.Grid.ColumnChooserSettings.ColumnChooserDisplayText, RelativeSource={RelativeSource TemplatedParent}}" />
                        </Button>
                      </StackPanel>
                    </Grid>
                  </Border>
                </Grid>
              </igPrim:HeaderDropDownControl>
              <ContentPresenter x:Name="headerContent"
                                Grid.Column="1"
                                Margin="{TemplateBinding Padding}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
              <Grid x:Name="SortAndPinIndicators"
                    Grid.Column="2"
                    Margin="0,0,10,0"
                    HorizontalAlignment="Right"
                    Background="{TemplateBinding Background}">
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="Auto" />
                  <ColumnDefinition Width="Auto" />
                  <ColumnDefinition Width="Auto" />
                  <ColumnDefinition Width="Auto" />
                  <ColumnDefinition Width="Auto" />
                  <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <Grid Height="24">
                  <Path x:Name="SortedDescending"
                        Width="8"
                        Height="5"                      
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        Data="{StaticResource SortIcon}"
                        Fill="{StaticResource GlyphPressedBackgroundBrush}"
                        Stretch="Fill"
                        UseLayoutRounding="False"
                        Visibility="Collapsed"
                        RenderTransformOrigin="0.5,0.5"/>
                </Grid>
                <Grid Height="24">
                  <Path x:Name="SortedAscending"
                        Width="8"
                        Height="5"                      
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        Data="{StaticResource SortIcon}"
                        Fill="{StaticResource GlyphPressedBackgroundBrush}"
                        Stretch="Fill"
                        UseLayoutRounding="False"
                        Visibility="Collapsed"
                        RenderTransformOrigin="0.5,0.5">
                    <Path.RenderTransform>
                      <RotateTransform Angle="180"/>
                    </Path.RenderTransform>
                  </Path>
                </Grid>
                <igPrim:HeaderDropDownControl x:Name="SummaryHeaderDropDownControl"
                                              Grid.Column="1"
                                              Background="{StaticResource TransparentBrush}"
                                              Visibility="Collapsed">
                  <igPrim:HeaderDropDownControl.OpenButtonContent>
                      <Path x:Name="summarySigmaIcon"
                            Width="7"
                            Height="9"
                            Margin="0"
                            Data="{StaticResource SummarySigmaIcon}"
                            Fill="{Binding Path=(TextElement.Foreground), RelativeSource={RelativeSource AncestorType=ContentPresenter}}"
                            Stretch="Fill"
                            StrokeThickness="0"
                            UseLayoutRounding="False" />
                  </igPrim:HeaderDropDownControl.OpenButtonContent>
                  <igPrim:SummarySelectionControl Cell="{Binding Cell, RelativeSource={RelativeSource TemplatedParent}}" />
                </igPrim:HeaderDropDownControl>
                <igPrim:HeaderDropDownControl x:Name="FilterHeaderDropDownControl"
                                              Grid.Column="2"
                                              AllowResizing="true"
                                              Background="{StaticResource TransparentBrush}"
                                              Visibility="Collapsed">
                  <igPrim:HeaderDropDownControl.OpenButtonContent>
                    <Grid>
                      <Path x:Name="clearFilterGlyphFill"
                            Width="10"
                            Height="8"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Data="{StaticResource FilterIcon}"
                            Fill="{Binding Path=(TextElement.Foreground), RelativeSource={RelativeSource AncestorType=ContentPresenter}}"
                            Stretch="Fill" />
                      <Path x:Name="activeFilterGlyphFill"
                            Width="10"
                            Height="8"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Data="{StaticResource FilterIcon}"
                            Fill="{StaticResource HeaderCellActiveFilterGlyphBackgroundBrush}"
                            Stretch="Fill"
                            Visibility="Collapsed" />
                    </Grid>
                  </igPrim:HeaderDropDownControl.OpenButtonContent>
                  <igPrim:FilterSelectorControl Width="250"
                                                Height="370"
                                                MinWidth="300"
                                                MinHeight="370"
                                                MaxWidth="800"
                                                MaxHeight="800"
                                                HorizontalContentAlignment="Stretch"
                                                VerticalContentAlignment="Stretch"
                                                Cell="{Binding Cell, RelativeSource={RelativeSource TemplatedParent}}" />
                </igPrim:HeaderDropDownControl>
                <Button x:Name="PinnedIndicator"
                        Grid.Column="3"
                        Width="24"
                        Style="{StaticResource HeaderDropDownButtonStyle}"
                        Visibility="Collapsed">
                  <Grid Background="{StaticResource TransparentBrush}">
                    <igBase:Commanding.Command>
                      <igBase:XamGridColumnCommandSource CommandType="Unfix" EventName="MouseLeftButtonDown" />
                    </igBase:Commanding.Command>
                    <Path Width="7"
                          Height="9"
                          Data="{StaticResource PinnedIndicatorIcon}"
                          Fill="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType=ContentControl}}"
                          Stretch="Fill" />
                  </Grid>
                </Button>
                <Button x:Name="UnpinnedIndicator"
                        Grid.Column="3"
                        Width="24"
                        Style="{StaticResource HeaderDropDownButtonStyle}"
                        Visibility="Collapsed">
                  <Grid Background="{StaticResource TransparentBrush}">
                    <igBase:Commanding.Command>
                      <igBase:XamGridColumnCommandSource CommandType="Fix" EventName="MouseLeftButtonDown" />
                    </igBase:Commanding.Command>
                    <Path Width="9"
                          Height="7"
                          Data="{StaticResource UnpinnedIndicatorIcon}"
                          Fill="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType=ContentControl}}"
                          Stretch="Fill" />
                  </Grid>
                </Button>
                <Button x:Name="VisibilityToggleButton"
                        Grid.Column="4"
                        Width="24"
                        Style="{StaticResource HeaderDropDownButtonStyle}"
                        Visibility="Collapsed">
                  <Grid Background="{StaticResource TransparentBrush}">
                    <igBase:Commanding.Command>
                      <igBase:XamGridColumnCommandSource CommandType="Hide" EventName="MouseLeftButtonDown" />
                    </igBase:Commanding.Command>
                    <Path Width="10"
                          Height="8"
                          Data="{StaticResource ColumnVisibilityToggleIcon}"
                          Fill="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType=ContentControl}}"
                          Stretch="Fill"
                          UseLayoutRounding="False" />
                  </Grid>
                </Button>
              </Grid>
              <igPrim:HeaderDropDownControl x:Name="HiddenRightAdjacentColumnsElement"
                                            Grid.Column="4"
                                            Width="Auto"
                                            VerticalAlignment="Stretch"
                                            Padding="0"
                                            Visibility="Collapsed">
                <ToolTipService.ToolTip>
                  <ToolTip Content="{Binding Cell.Column.ColumnLayout.Grid.ColumnChooserSettings.HiddenColumnIndicatorToolTipText, RelativeSource={RelativeSource TemplatedParent}}" />
                </ToolTipService.ToolTip>
                <igPrim:HeaderDropDownControl.OpenButtonContent>
                  <Grid>
                    <Rectangle Width="24"
                               Margin="-5,0"
                               HorizontalAlignment="Stretch"
                               Fill="{StaticResource TransparentBrush}" />
                    <Rectangle Width="10"
                               HorizontalAlignment="Right"
                               Fill="{StaticResource HiddenColumnIndicatorBrush}" />
                  </Grid>
                </igPrim:HeaderDropDownControl.OpenButtonContent>
                <Grid>
                  <Border x:Name="ColumnChooserBdRight"
                          MaxHeight="200"
                          Background="{StaticResource PopupBackgroundBrush}"
                          BorderBrush="{StaticResource PopupBorderBrush}"
                          BorderThickness="{StaticResource DefaultBorderThickness}"
                          Padding="1">
                    <Grid>
                      <Grid.ColumnDefinitions>
                        <ColumnDefinition MinWidth="24" MaxWidth="24" />
                        <ColumnDefinition Width="*" />
                      </Grid.ColumnDefinitions>
                      <Grid.RowDefinitions>
                        <RowDefinition />
                        <RowDefinition Height="Auto" />
                      </Grid.RowDefinitions>
                      <Border Grid.RowSpan="2" Background="{StaticResource ColumnChooserPopupVSeparatorBackgroundBrush}" />
                      <ListBox Grid.ColumnSpan="2"
                               Margin="0"
                               Background="{StaticResource TransparentBrush}"
                               BorderThickness="0"
                               DataContext="{x:Null}"
                               ItemContainerStyle="{StaticResource ColumnChooserListBoxItemStyle}"
                               ItemsSource="{Binding Cell.ColumnsHiddenToRight, RelativeSource={RelativeSource TemplatedParent}}"
                               Padding="0"
                               Style="{StaticResource ListBoxStyle}">
                        <ListBox.ItemTemplate>
                          <DataTemplate>
                            <TextBlock Text="{Binding DisplayNameResolved}" />
                          </DataTemplate>
                        </ListBox.ItemTemplate>
                        <igBase:Commanding.Commands>
                          <igBase:CommandSourceCollection>
                            <igBase:XamGridColumnCommandSource CommandType="Show"
                                                               EventName="SelectionChanged"
                                                               ParameterBinding="{Binding SelectedItem}" />
                            <igPrim:XamGridPopupCommandSource CommandType="ClosePopup" EventName="SelectionChanged" />
                          </igBase:CommandSourceCollection>
                        </igBase:Commanding.Commands>
                      </ListBox>
                      <StackPanel Grid.Row="1"
                                  Grid.ColumnSpan="2"
                                  Background="{StaticResource TransparentBrush}">
                        <igBase:XamMenuSeparator Background="{StaticResource SeparatorBrush}" />
                        <Button Margin="0,1,0,0" Style="{StaticResource ColumnChooserDialogButtonStyle}">
                          <igBase:Commanding.Commands>
                            <igBase:CommandSourceCollection>
                              <igBase:XamGridColumnChooserCommandSource CommandType="Open" EventName="Click" />
                              <igPrim:XamGridPopupCommandSource CommandType="ClosePopup" EventName="Click" />
                            </igBase:CommandSourceCollection>
                          </igBase:Commanding.Commands>
                          <TextBlock Foreground="{StaticResource ForegroundBrush}" Text="{Binding Cell.Column.ColumnLayout.Grid.ColumnChooserSettings.ColumnChooserDisplayText, RelativeSource={RelativeSource TemplatedParent}}" />
                        </Button>
                      </StackPanel>
                    </Grid>
                  </Border>
                </Grid>
              </igPrim:HeaderDropDownControl>
            </Grid>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="MouseOver">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames BeginTime="0" Storyboard.TargetName="NormalFill" Storyboard.TargetProperty="BorderBrush">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource HeaderCellHoverBorderBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames BeginTime="0" Storyboard.TargetName="headerContent" Storyboard.TargetProperty="(TextElement.Foreground)">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource HeaderCellHoverForegroundBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Moving">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames BeginTime="0" Storyboard.TargetName="NormalFill" Storyboard.TargetProperty="Background">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource HeaderCellMovingBackgroundBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames BeginTime="0" Storyboard.TargetName="NormalFill" Storyboard.TargetProperty="BorderBrush">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource HeaderCellMovingBorderBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames BeginTime="0" Storyboard.TargetName="NormalFill" Storyboard.TargetProperty="BorderThickness">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Thickness>
                            1
                          </Thickness>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="SortAndPinIndicators" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>
                            Collapsed
                          </Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="FixedIndicatorStates">
                <VisualState x:Name="NotFixable" />
                <VisualState x:Name="Pinned">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames BeginTime="0" Storyboard.TargetName="PinnedIndicator" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>
                            Visible
                          </Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Unpinned">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames BeginTime="0" Storyboard.TargetName="UnpinnedIndicator" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>
                            Visible
                          </Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="SummaryStates">
                <VisualState x:Name="Summable">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames BeginTime="0" Storyboard.TargetName="SummaryHeaderDropDownControl" Storyboard.TargetProperty="(UIElement.Visibility)">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>
                            Visible
                          </Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Unsummable" />
              </VisualStateGroup>
              <VisualStateGroup x:Name="SortedStates">
                <VisualState x:Name="NotSorted" />
                <VisualState x:Name="Ascending">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames BeginTime="0" Storyboard.TargetName="SortedAscending" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>
                            Visible
                          </Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames BeginTime="0" Storyboard.TargetName="NormalFill" Storyboard.TargetProperty="BorderBrush">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource HeaderCellSelectedBorderBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames BeginTime="0" Storyboard.TargetName="headerContent" Storyboard.TargetProperty="(TextElement.Foreground)">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource HeaderCellHoverForegroundBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Descending">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames BeginTime="0" Storyboard.TargetName="SortedDescending" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>
                            Visible
                          </Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames BeginTime="0" Storyboard.TargetName="NormalFill" Storyboard.TargetProperty="BorderBrush">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource HeaderCellSelectedBorderBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames BeginTime="0" Storyboard.TargetName="headerContent" Storyboard.TargetProperty="(TextElement.Foreground)">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource HeaderCellHoverForegroundBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="HeaderFilterStates">
                <VisualState x:Name="NoIcon">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames BeginTime="0" Storyboard.TargetName="FilterHeaderDropDownControl" Storyboard.TargetProperty="(UIElement.Visibility)">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>
                            Collapsed
                          </Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="FilterIcon">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames BeginTime="0" Storyboard.TargetName="FilterHeaderDropDownControl" Storyboard.TargetProperty="(UIElement.Visibility)">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>
                            Visible
                          </Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="HeaderFilterAppliedStates">
                <VisualState x:Name="NotFiltered">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="clearFilterGlyphFill" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>
                            Visible
                          </Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="activeFilterGlyphFill" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>
                            Collapsed
                          </Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Filtered">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="clearFilterGlyphFill" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>
                            Collapsed
                          </Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="activeFilterGlyphFill" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>
                            Visible
                          </Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="VisibilityIconStates">
                <VisualState x:Name="VisibilityIconHidden" />
                <VisualState x:Name="VisibilityIconVisible">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames BeginTime="0" Storyboard.TargetName="VisibilityToggleButton" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>
                            Visible
                          </Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="LeftAdjacentColumnHiddenStates">
                <VisualState x:Name="NoHiddenLeftAdjacentColumns" />
                <VisualState x:Name="HiddenLeftAdjacentColumns">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames BeginTime="0" Storyboard.TargetName="HiddenLeftAdjacentColumnsElement" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>
                            Visible
                          </Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="RightAdjacentColumnHiddenStates">
                <VisualState x:Name="NoHiddenRightAdjacentColumns" />
                <VisualState x:Name="LastVisibleColumnWithHiddenRightAdjacentColumns">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames BeginTime="0" Storyboard.TargetName="HiddenRightAdjacentColumnsElement" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>
                            Visible
                          </Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
          </igPrim:SimpleClickableContainer>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style BasedOn="{StaticResource HeaderCellControlStyle}" TargetType="igPrim:HeaderCellControl" />

  <!--  *********************************  ExpansionIndicatorHeaderCellControl Style  *********************************  -->
  <Style x:Key="ExpansionIndicatorHeaderCellControlStyle" TargetType="igPrim:ExpansionIndicatorHeaderCellControl">
    <Setter Property="Background" Value="{StaticResource HeaderCellBackgroundBrush}" />
    <Setter Property="BorderBrush" Value="{StaticResource HeaderCellBorderBrush}" />
    <Setter Property="BorderThickness" Value="{StaticResource HeaderCellBorderThickness}" />
    <Setter Property="FontFamily" Value="{StaticResource FontFamily}" />
    <Setter Property="FontSize" Value="{StaticResource FontSize14}" />
    <Setter Property="Foreground" Value="{StaticResource HeaderCellForegroundBrush}" />
    <Setter Property="HorizontalContentAlignment" Value="Left" />
    <Setter Property="MinHeight" Value="26" />
    <Setter Property="Padding" Value="{StaticResource DefaultPadding}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igPrim:ExpansionIndicatorHeaderCellControl">
          <Grid>
            <Border x:Name="NormalFill"
                    Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}" />
            <Rectangle Grid.ColumnSpan="4"
                       Width="1"
                       HorizontalAlignment="Left"
                       Fill="{StaticResource TransparentBrush}" />
            <ContentPresenter Margin="{TemplateBinding Padding}"
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style BasedOn="{StaticResource ExpansionIndicatorHeaderCellControlStyle}" TargetType="igPrim:ExpansionIndicatorHeaderCellControl" />

  <!--  *********************************  RowSelectorHeaderCellControl Style  *********************************  -->
  <Style x:Key="RowSelectorHeaderCellControlStyle" TargetType="igPrim:RowSelectorHeaderCellControl">
    <Setter Property="Background" Value="{StaticResource HeaderCellBackgroundBrush}" />
    <Setter Property="BorderBrush" Value="{StaticResource HeaderCellBorderBrush}" />
    <Setter Property="BorderThickness" Value="{StaticResource HeaderCellBorderThickness}" />
    <Setter Property="FontFamily" Value="{StaticResource FontFamily}" />
    <Setter Property="FontSize" Value="{StaticResource FontSize14}" />
    <Setter Property="Foreground" Value="{StaticResource HeaderCellForegroundBrush}" />
    <Setter Property="HorizontalContentAlignment" Value="Left" />
    <Setter Property="MinHeight" Value="26" />
    <Setter Property="Padding" Value="{StaticResource DefaultPadding}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igPrim:RowSelectorHeaderCellControl">
          <Grid>
            <Border x:Name="NormalFill"
                    Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}" />
            <Rectangle Grid.ColumnSpan="4"
                       Width="1"
                       HorizontalAlignment="Left"
                       Fill="{StaticResource TransparentBrush}" />
            <ContentPresenter Margin="{TemplateBinding Padding}"
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style BasedOn="{StaticResource RowSelectorHeaderCellControlStyle}" TargetType="igPrim:RowSelectorHeaderCellControl" />

  <!--  *********************************  AddNewRowExpansionIndicatorCellControl Style  *********************************  -->
  <Style x:Key="AddNewRowExpansionIndicatorCellControlStyle" TargetType="igPrim:AddNewRowExpansionIndicatorCellControl">
    <Setter Property="Background" Value="{StaticResource ExpansionCellBackgroundBrush}" />
    <Setter Property="BorderBrush" Value="{StaticResource ExpansionCellBorderBrush}" />
    <Setter Property="BorderThickness" Value="{StaticResource CellBorderThickness}" />
    <Setter Property="FontFamily" Value="{StaticResource FontFamily}" />
    <Setter Property="FontSize" Value="{StaticResource FontSize}" />
    <Setter Property="Foreground" Value="{StaticResource CellItemForegroundBrush}" />
    <Setter Property="HorizontalContentAlignment" Value="Center" />
    <Setter Property="MinHeight" Value="26" />
    <Setter Property="Padding" Value="{StaticResource DefaultPadding}" />
    <Setter Property="VerticalContentAlignment" Value="Center" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igPrim:AddNewRowExpansionIndicatorCellControl">
          <Grid Background="{StaticResource TransparentBrush}">
            <Border x:Name="border"
                    Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}" />
            <ContentPresenter Margin="{TemplateBinding Padding}"
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style BasedOn="{StaticResource AddNewRowExpansionIndicatorCellControlStyle}" TargetType="igPrim:AddNewRowExpansionIndicatorCellControl" />

  <!--  *********************************  AddNewRowSelectorCellControl Style  *********************************  -->
  <Style x:Key="AddNewRowSelectorCellControlStyle" TargetType="igPrim:AddNewRowSelectorCellControl">
    <Setter Property="Background" Value="{StaticResource AddNewRowSelectorCellBackgroundBrush}" />
    <Setter Property="BorderBrush" Value="{StaticResource AddNewRowSelectorCellBorderBrush}" />
    <Setter Property="BorderThickness" Value="{StaticResource CellBorderThickness}" />
    <Setter Property="Foreground" Value="{StaticResource CellItemForegroundBrush}" />
    <Setter Property="HorizontalContentAlignment" Value="Center" />
    <Setter Property="MinHeight" Value="26" />
    <Setter Property="MinWidth" Value="26" />
    <Setter Property="VerticalContentAlignment" Value="Center" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igPrim:AddNewRowSelectorCellControl">
          <Grid>
            <Border x:Name="border"
                    Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}" />
            <Path Width="8"
                  Height="8"
                  Data="{StaticResource PlusIcon}"
                  Fill="{StaticResource GlyphBackgroundBrush}"
                  Stretch="Fill" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style BasedOn="{StaticResource AddNewRowSelectorCellControlStyle}" TargetType="igPrim:AddNewRowSelectorCellControl" />

  <!--  *********************************  AddNewRowCellControl Style  *********************************  -->
  <Style x:Key="AddNewRowCellControlStyle" TargetType="igPrim:AddNewRowCellControl">
    <Setter Property="Background" Value="{StaticResource AddNewRowCellBackgroundBrush}" />
    <Setter Property="BorderBrush" Value="{StaticResource AddNewRowCellBorderBrush}" />
    <Setter Property="BorderThickness" Value="{StaticResource CellBorderThickness}" />
    <Setter Property="FontFamily" Value="{StaticResource FontFamily}" />
    <Setter Property="FontSize" Value="{StaticResource FontSize}" />
    <Setter Property="Foreground" Value="{StaticResource CellItemForegroundBrush}" />
    <Setter Property="HorizontalContentAlignment" Value="Left" />
    <Setter Property="MinHeight" Value="26" />
    <Setter Property="Padding" Value="{StaticResource DefaultPadding}" />
    <Setter Property="VerticalContentAlignment" Value="Center" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igPrim:AddNewRowCellControl">
          <Grid>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="MouseOver">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="MouseOver1" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>
                            Visible
                          </Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Alternate" />
              </VisualStateGroup>
              <VisualStateGroup x:Name="SelectedStates">
                <VisualState x:Name="NotSelected" />
                <VisualState x:Name="Selected" />
              </VisualStateGroup>
              <VisualStateGroup x:Name="ActiveStates">
                <VisualState x:Name="InActive" />
                <VisualState x:Name="Active">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="ActiveRect" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>
                            Visible
                          </Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="FixedStates">
                <VisualState x:Name="Fixed" />
                <VisualState x:Name="Unfixed" />
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Border x:Name="AddNewRowElem"
                    Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}" />
            <Rectangle x:Name="MouseOver1"
                       Margin="{TemplateBinding BorderThickness}"
                       Fill="{StaticResource CellItemHoverBackgroundBrush}"
                       Visibility="Collapsed" />
            <Rectangle x:Name="ActiveRect"
                       Fill="{StaticResource TransparentBrush}"
                       Stroke="{StaticResource CellItemSelectedBorderBrush}"
                       StrokeThickness="{StaticResource DefaultStrokeThickness}"
                       Visibility="Collapsed" />
            <ContentPresenter Margin="{TemplateBinding Padding}"
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}" >
              <ContentPresenter.Resources>
                <Style  TargetType="ComboBox" BasedOn="{StaticResource ColumnComboBoxStyle}"/>
                <!-- To avoid Text jump when editing values-->
                <Style  TargetType="TextBox" BasedOn="{StaticResource TextBoxStyle}">
                  <Setter Property="Padding" Value="4 5 6 2" />
                </Style>
              </ContentPresenter.Resources>
            </ContentPresenter>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style BasedOn="{StaticResource AddNewRowCellControlStyle}" TargetType="igPrim:AddNewRowCellControl" />

  <!--  *********************************  ExpansionIndicatorCellControl Style  *********************************  -->
  <Style x:Key="ExpansionIndicatorCellControlStyle" TargetType="igPrim:ExpansionIndicatorCellControl">
    <Setter Property="Background" Value="{StaticResource ExpansionCellBackgroundBrush}" />
    <Setter Property="BorderBrush" Value="{StaticResource ExpansionCellBorderBrush}" />
    <Setter Property="BorderThickness" Value="{StaticResource CellBorderThickness}" />
    <Setter Property="FontFamily" Value="{StaticResource FontFamily}" />
    <Setter Property="FontSize" Value="{StaticResource FontSize}" />
    <Setter Property="Foreground" Value="{StaticResource CellItemForegroundBrush}" />
    <Setter Property="HorizontalContentAlignment" Value="Center" />
    <Setter Property="Padding" Value="6,0" />
    <Setter Property="VerticalContentAlignment" Value="Center" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igPrim:ExpansionIndicatorCellControl">
          <Grid Background="{StaticResource TransparentBrush}">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="MouseOver">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames BeginTime="0" Storyboard.TargetName="hoverElem" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>
                            Visible
                          </Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames BeginTime="0" Storyboard.TargetName="Indicator" Storyboard.TargetProperty="Foreground">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ForegroundBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Alternate">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames BeginTime="0" Storyboard.TargetName="altElem" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>
                            Visible
                          </Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Border x:Name="border"
                    Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}" />
            <Border x:Name="altElem"
                    Background="{StaticResource CellItemAltBackgroundBrush}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    Visibility="Collapsed" />
            <Border x:Name="hoverElem"
                    Background="{StaticResource ExpansionCellHoverBackgroundBrush}"
                    BorderBrush="{StaticResource ExpansionCellHoverBorderBrush}"
                    BorderThickness="{StaticResource DefaultBorderThickness}"
                    Visibility="Collapsed" />
            <ContentPresenter Margin="{TemplateBinding Padding}"
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
            <igPrim:ExpansionIndicator x:Name="Indicator"
                                       Margin="{TemplateBinding Padding}"
                                       HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                       VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                       Cursor="Hand">
              <igPrim:ExpansionIndicator.Style>
                <Style TargetType="igPrim:ExpansionIndicator">
                  <Setter Property="Foreground" Value="{StaticResource GlyphBackgroundBrush}" />
                  <Setter Property="Height" Value="14" />
                  <Setter Property="HorizontalAlignment" Value="Center" />
                  <Setter Property="IsTabStop" Value="False" />
                  <Setter Property="Margin" Value="0,0,6,0" />
                  <Setter Property="Padding" Value="1" />
                  <Setter Property="VerticalAlignment" Value="Center" />
                  <Setter Property="Width" Value="14" />
                  <Setter Property="igPrim:XamlHelper.Focusable" Value="False" />
                  <Setter Property="igPrim:XamlHelper.SnapsToDevicePixels" Value="True" />
                  <Setter Property="Template">
                    <Setter.Value>
                      <ControlTemplate TargetType="igPrim:ExpansionIndicator">
                        <Grid Background="{StaticResource TransparentBrush}" x:Name="mainroot">
                          <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                              <VisualState x:Name="Normal" />
                              <VisualState x:Name="MouseOver">
                                <Storyboard>
                                  <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ExpansionIndicatorCollapsed" Storyboard.TargetProperty="Fill">
                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource GlyphHoverBackgroundBrush}" />
                                  </ObjectAnimationUsingKeyFrames>

                                  <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ExpansionIndicatorExpanded" Storyboard.TargetProperty="Fill">
                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource GlyphHoverBackgroundBrush}" />
                                  </ObjectAnimationUsingKeyFrames>
                                </Storyboard>
                              </VisualState>
                              <VisualState x:Name="Selected" />
                              <VisualState x:Name="Disabled">
                                <Storyboard>
                                  <DoubleAnimation Duration="0" Storyboard.TargetName="mainroot" Storyboard.TargetProperty="(UIElement.Opacity)" To="0.3" />
                                </Storyboard>
                              </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ExpansionStates">
                              <VisualState x:Name="Expanded">
                                <Storyboard>
                                  <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ExpansionIndicatorExpanded" Storyboard.TargetProperty="(UIElement.Visibility)">
                                    <DiscreteObjectKeyFrame KeyTime="0">
                                      <DiscreteObjectKeyFrame.Value>
                                        <Visibility>Visible</Visibility>
                                      </DiscreteObjectKeyFrame.Value>
                                    </DiscreteObjectKeyFrame>
                                  </ObjectAnimationUsingKeyFrames>
                                  <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ExpansionIndicatorCollapsed" Storyboard.TargetProperty="(UIElement.Visibility)">
                                    <DiscreteObjectKeyFrame KeyTime="0">
                                      <DiscreteObjectKeyFrame.Value>
                                        <Visibility>Collapsed</Visibility>
                                      </DiscreteObjectKeyFrame.Value>
                                    </DiscreteObjectKeyFrame>
                                  </ObjectAnimationUsingKeyFrames>
                                </Storyboard>
                              </VisualState>
                              <VisualState x:Name="Collapsed" />
                            </VisualStateGroup>
                          </VisualStateManager.VisualStateGroups>
                          <Grid x:Name="ExpansionIndicator" Background="{StaticResource TransparentBrush}">
                            <Path x:Name="ExpansionIndicatorCollapsed"
                                  Width="6"
                                  Height="10"
                                  HorizontalAlignment="Center"
                                  VerticalAlignment="Center"
                                  Data="{StaticResource VArrowRight}"
                                  Fill="{TemplateBinding Foreground}"
                                  RenderTransformOrigin="0.5,0.5"
                                  Stretch="Fill"
                                  UseLayoutRounding="False" />
                            <Path x:Name="ExpansionIndicatorExpanded"
                                  Width="10"
                                  Height="6"
                                  HorizontalAlignment="Center"
                                  VerticalAlignment="Center"
                                  Data="{StaticResource VArrowDown}"
                                  Fill="{TemplateBinding Foreground}"
                                  RenderTransformOrigin="0.5,0.5"
                                  Stretch="Fill"
                                  UseLayoutRounding="False"
                                  Visibility="Collapsed" />
                          </Grid>
                        </Grid>
                      </ControlTemplate>
                    </Setter.Value>
                  </Setter>
                </Style>
              </igPrim:ExpansionIndicator.Style>
            </igPrim:ExpansionIndicator>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style BasedOn="{StaticResource ExpansionIndicatorCellControlStyle}" TargetType="igPrim:ExpansionIndicatorCellControl" />

  <!--  *********************************  RowSelectorCellControl Style  *********************************  -->
  <Style x:Key="RowSelectorCellControlStyle" TargetType="igPrim:RowSelectorCellControl">
    <Setter Property="Background" Value="{StaticResource CellItemBackgroundBrush}" />
    <Setter Property="BorderBrush" Value="{StaticResource CellItemBorderBrush}" />
    <Setter Property="BorderThickness" Value="{StaticResource CellBorderThickness}" />
    <Setter Property="FontFamily" Value="{StaticResource FontFamily}" />
    <Setter Property="FontSize" Value="{StaticResource FontSize}" />
    <Setter Property="Foreground" Value="{StaticResource CellItemForegroundBrush}" />
    <Setter Property="HorizontalContentAlignment" Value="Center" />
    <Setter Property="MinHeight" Value="26" />
    <Setter Property="Padding" Value="{StaticResource DefaultPadding}" />
    <Setter Property="VerticalContentAlignment" Value="Center" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igPrim:RowSelectorCellControl">
          <Grid>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="MouseOver">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="hoverElem" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>
                            Visible
                          </Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="hoverBdAdorner" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>
                            Visible
                          </Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Alternate">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="altElem" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>
                            Visible
                          </Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="ActiveStates">
                <VisualState x:Name="InActive" />
                <VisualState x:Name="Active">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="hoverBdAdorner" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>
                            Visible
                          </Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Editing">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0" Storyboard.TargetName="EditingIndicator" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>
                            Visible
                          </Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="hoverBdAdorner" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>
                            Visible
                          </Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="SelectedStates">
                <VisualState x:Name="NotSelected" />
                <VisualState x:Name="Selected">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="selectedBd" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>
                            Visible
                          </Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="selectedBdAdorner" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>
                            Visible
                          </Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Border x:Name="Root"
                    Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}" />
            <Border x:Name="altElem"
                    Background="{StaticResource CellItemAltBackgroundBrush}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    Visibility="Collapsed" />
            <Border x:Name="selectedBd"
                    Background="{StaticResource RowSelectorCellActiveBackgroundBrush}"
                    Visibility="Collapsed" />
            <Border x:Name="hoverElem"
                    Background="{StaticResource RowSelectorCellHoverBackgroundBrush}"
                    BorderBrush="{StaticResource RowSelectorCellHoverBorderBrush}"
                    BorderThickness="{StaticResource DefaultBorderThickness}"
                    Visibility="Collapsed" />
            <Border x:Name="hoverBdAdorner"
                    Background="{StaticResource TransparentBrush}"
                    BorderBrush="{StaticResource GlyphBackgroundBrush}"
                    BorderThickness="0 0 2 0"
                    Visibility="Collapsed" />
            <Border x:Name="selectedBdAdorner"
                    Background="{StaticResource TransparentBrush}"
                    BorderBrush="{StaticResource GlyphBackgroundBrush}"
                    BorderThickness="0 0 2 0"
                    Visibility="Collapsed" />
            <Path x:Name="EditingIndicator"
                  Width="9"
                  Height="9"
                  Margin="8,4,4,4"
                  HorizontalAlignment="Left"
                  Data="{StaticResource EditIndicatorIcon}"
                  Fill="{StaticResource EditingIndicatorBackgroundBrush}"
                  Stretch="Fill"
                  Visibility="Collapsed" />
            <ContentPresenter x:Name="contentpresenter"
                              Margin="22,4,10,4"
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>

          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style BasedOn="{StaticResource RowSelectorCellControlStyle}" TargetType="igPrim:RowSelectorCellControl" />

  <!--  *********************************  CellControl Style  *********************************  -->
  <Style x:Key="CellControlStyle" TargetType="ig:CellControl">
    <Setter Property="Background" Value="{StaticResource CellItemBackgroundBrush}" />
    <Setter Property="BorderBrush" Value="{StaticResource CellItemBorderBrush}" />
    <Setter Property="BorderThickness" Value="{StaticResource CellBorderThickness}" />
    <Setter Property="FontFamily" Value="{StaticResource FontFamily}" />
    <Setter Property="FontSize" Value="{StaticResource FontSize}" />
    <Setter Property="Foreground" Value="{StaticResource CellItemForegroundBrush}" />
    <Setter Property="HorizontalContentAlignment" Value="Left" />
    <Setter Property="MinHeight" Value="26" />
    <Setter Property="Padding" Value="{StaticResource DefaultPadding}" />
    <Setter Property="ResizingThreshold" Value="2" />
    <Setter Property="VerticalContentAlignment" Value="Center" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="ig:CellControl">
          <Grid>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="MouseOver">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="hoverElem" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0" Storyboard.TargetName="contentpresenter" Storyboard.TargetProperty="(TextElement.Foreground)">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ForegroundBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Alternate">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="altElem" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="SelectedStates">
                <VisualState x:Name="NotSelected" />
                <VisualState x:Name="Selected">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="rowSelected" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0" Storyboard.TargetName="contentpresenter" Storyboard.TargetProperty="(TextElement.Foreground)">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ForegroundBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="ActiveStates">
                <VisualState x:Name="InActive" />
                <VisualState x:Name="Active">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ActiveSelected" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0" Storyboard.TargetName="contentpresenter" Storyboard.TargetProperty="(TextElement.Foreground)">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ForegroundBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="EditingStates">
                <VisualState x:Name="NotEditing" />
                <VisualState x:Name="Editing" />
              </VisualStateGroup>
              <VisualStateGroup x:Name="FixedStates">
                <VisualState x:Name="UnFixed" />
                <VisualState x:Name="Fixed" />
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Border x:Name="Root"
                    Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}" />
            <Border x:Name="altElem"
                    Background="{StaticResource CellItemAltBackgroundBrush}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    Visibility="Collapsed" />
            <Border x:Name="rowSelected"
                    Margin="{TemplateBinding BorderThickness}"
                    Background="{StaticResource CellItemSelectedBackgroundBrush}"
                    Visibility="Collapsed" />
            <Border x:Name="ActiveSelected"
                    BorderBrush="{StaticResource CellItemSelectedBorderBrush}"
                    BorderThickness="{StaticResource DefaultBorderThickness}"
                    Visibility="Collapsed" />
            <Border x:Name="hoverElem"
                    Background="{StaticResource CellItemHoverBackgroundBrush}"
                    BorderBrush="{StaticResource CellItemHoverBorderBrush}"
                    BorderThickness="{StaticResource DefaultBorderThickness}"
                    Visibility="Collapsed" />
            <ContentPresenter x:Name="contentpresenter"
                              Margin="{TemplateBinding Padding}"
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}" >
              <ContentPresenter.Resources>
                <Style  TargetType="ComboBox" BasedOn="{StaticResource ColumnComboBoxStyle}"/>
                <!-- To avoid Text jump when editing values-->
                <Style BasedOn="{StaticResource TextBoxStyle}" TargetType="TextBox">
                  <Setter Property="Padding" Value="4 5 6 2" />
                </Style>
              </ContentPresenter.Resources>
            </ContentPresenter>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style BasedOn="{StaticResource CellControlStyle}" TargetType="ig:CellControl" />

  <!--  *********************************  ChildBandCellControl Style  *********************************  -->
  <Style x:Key="ChildBandCellControlStyle" TargetType="igPrim:ChildBandCellControl">
    <Setter Property="Background" Value="{StaticResource HeaderCellBackgroundBrush}" />
    <Setter Property="BorderBrush" Value="{StaticResource HeaderCellBorderBrush}" />
    <Setter Property="BorderThickness" Value="{StaticResource CellBorderThickness}" />
    <Setter Property="FontFamily" Value="{StaticResource FontFamily}" />
    <Setter Property="FontSize" Value="{StaticResource FontSize}" />
    <Setter Property="Foreground" Value="{StaticResource HeaderCellForegroundBrush}" />
    <Setter Property="HorizontalContentAlignment" Value="Left" />
    <Setter Property="MinHeight" Value="26" />
    <Setter Property="Padding" Value="6" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igPrim:ChildBandCellControl">
          <Grid>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="MouseOver">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0" Storyboard.TargetName="MouseOver1" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>
                            Visible
                          </Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="ActiveStates">
                <VisualState x:Name="InActive" />
                <VisualState x:Name="Active">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0" Storyboard.TargetName="ActiveRect" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>
                            Visible
                          </Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0" Storyboard.TargetName="contentControl" Storyboard.TargetProperty="Foreground">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ForegroundBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Border x:Name="NormalFill"
                    Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}" />
            <Rectangle x:Name="MouseOver1"
                       Margin="{TemplateBinding BorderThickness}"
                       Fill="{StaticResource HeaderCellHoverBackgroundBrush}"
                       Visibility="Collapsed" />
            <Rectangle x:Name="ActiveRect"
                       Fill="{StaticResource CellItemSelectedBackgroundBrush}"
                       Stroke="{StaticResource CellItemSelectedBorderBrush}"
                       Visibility="Collapsed" />
            <ContentControl x:Name="contentControl" Foreground="{StaticResource HeaderCellForegroundBrush}">
              <ContentPresenter Margin="{TemplateBinding Padding}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
            </ContentControl>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style BasedOn="{StaticResource ChildBandCellControlStyle}" TargetType="igPrim:ChildBandCellControl" />

  <!--  *********************************  FilterRowExpansionIndicatorCellControl Style  *********************************  -->
  <Style x:Key="FilterRowExpansionIndicatorCellControlStyle" TargetType="igPrim:FilterRowExpansionIndicatorCellControl">
    <Setter Property="Background" Value="{StaticResource ExpansionCellBackgroundBrush}" />
    <Setter Property="BorderBrush" Value="{StaticResource ExpansionCellBorderBrush}" />
    <Setter Property="BorderThickness" Value="{StaticResource CellBorderThickness}" />
    <Setter Property="FontFamily" Value="{StaticResource FontFamily}" />
    <Setter Property="FontSize" Value="{StaticResource FontSize}" />
    <Setter Property="Foreground" Value="{StaticResource CellItemForegroundBrush}" />
    <Setter Property="HorizontalContentAlignment" Value="Center" />
    <Setter Property="Padding" Value="{StaticResource DefaultPadding}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igPrim:FilterRowExpansionIndicatorCellControl">
          <Grid Background="{StaticResource TransparentBrush}">
            <Border x:Name="border"
                    Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}" />
            <ContentPresenter Margin="{TemplateBinding Padding}"
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="VerticalContentAlignment" Value="Center" />
  </Style>
  <Style BasedOn="{StaticResource FilterRowExpansionIndicatorCellControlStyle}" TargetType="igPrim:FilterRowExpansionIndicatorCellControl" />

  <!--  *********************************  FilterRowSelectorCellControl Style  *********************************  -->
  <Style x:Key="FilterRowSelectorCellControlStyle" TargetType="igPrim:FilterRowSelectorCellControl">
    <Setter Property="Background" Value="{StaticResource FilterRowSelectorCellBackgroundBrush}" />
    <Setter Property="BorderBrush" Value="{StaticResource FilterRowSelectorCellBorderBrush}" />
    <Setter Property="BorderThickness" Value="{StaticResource CellBorderThickness}" />
    <Setter Property="Foreground" Value="{StaticResource CellItemForegroundBrush}" />
    <Setter Property="HorizontalContentAlignment" Value="Center" />
    <Setter Property="VerticalContentAlignment" Value="Center" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igPrim:FilterRowSelectorCellControl">
          <Grid>
            <Border x:Name="border"
                    Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}" />
            <Grid Width="18" Height="18" igPrim:XamlHelper.SnapsToDevicePixels="True">
              <Path Width="15"
                    Height="9"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Data="{StaticResource ActiveFilterIcon}"
                    Fill="{StaticResource GlyphBackgroundBrush}"
                    Stretch="Fill"/>
            </Grid>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style BasedOn="{StaticResource FilterRowSelectorCellControlStyle}" TargetType="igPrim:FilterRowSelectorCellControl" />

  <!--  *********************************  FilterRowCellControl Style  *********************************  -->
  <Style x:Key="FilterRowCellControlStyle" TargetType="igPrim:FilterRowCellControl">
    <Setter Property="Background" Value="{StaticResource FilterRowCellBackgroundBrush}" />
    <Setter Property="BorderBrush" Value="{StaticResource FilterRowCellBorderBrush}" />
    <Setter Property="BorderThickness" Value="{StaticResource CellBorderThickness}" />
    <Setter Property="FontFamily" Value="{StaticResource FontFamily}" />
    <Setter Property="FontSize" Value="{StaticResource FontSize}" />
    <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
    <Setter Property="HorizontalContentAlignment" Value="Left" />
    <Setter Property="Padding" Value="{StaticResource DefaultPadding}" />
    <Setter Property="VerticalContentAlignment" Value="Center" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igPrim:FilterRowCellControl">
          <Grid x:Name="FilterUIArea">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="MouseOver">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="MouseOver1" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>
                            Visible
                          </Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Alternate" />
              </VisualStateGroup>
              <VisualStateGroup x:Name="SelectedStates">
                <VisualState x:Name="NotSelected" />
                <VisualState x:Name="Selected" />
              </VisualStateGroup>
              <VisualStateGroup x:Name="ActiveStates">
                <VisualState x:Name="InActive" />
                <VisualState x:Name="Active">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="ActiveRect" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>
                            Visible
                          </Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="FixedStates">
                <VisualState x:Name="Fixed" />
                <VisualState x:Name="Unfixed" />
              </VisualStateGroup>
              <VisualStateGroup x:Name="AllowFiltering">
                <VisualState x:Name="ShowFilterUIWithCancelButton">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="00:00:00" Storyboard.TargetName="ClearFilters" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>
                            Visible
                          </Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="ShowFilterUI" />
                <VisualState x:Name="HideFilterUI">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0" Storyboard.TargetName="ClearFilters" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>
                            Collapsed
                          </Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0" Storyboard.TargetName="OperatorControl" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>
                            Collapsed
                          </Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="FilterCellValueVisibility">
                <VisualState x:Name="ShowFilterCellValue" />
                <VisualState x:Name="HideFilterCellValue">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0" Storyboard.TargetName="FilterCellValueContent" Storyboard.TargetProperty="(UIElement.Visibility)">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>
                            Collapsed
                          </Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="FilterLabel" Storyboard.TargetProperty="(UIElement.Visibility)">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="EditingStates">
                <VisualState x:Name="Editing" />
                <VisualState x:Name="NotEditing" />
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Border x:Name="FilterRowElem"
                    Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}" />
            <Rectangle x:Name="MouseOver1"
                       Margin="{TemplateBinding BorderThickness}"
                       Fill="{StaticResource CellItemHoverBackgroundBrush}"
                       Stroke="{StaticResource CellItemHoverBorderBrush}"
                        StrokeThickness="{StaticResource DefaultStrokeThickness}"
                       Visibility="Collapsed" />
            <Rectangle x:Name="ActiveRect"
                       Fill="{StaticResource TransparentBrush}"
                       Stroke="{StaticResource CellItemSelectedBorderBrush}"
                        StrokeThickness="{StaticResource DefaultStrokeThickness}"
                       Visibility="Collapsed" />
            <Grid>
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
              </Grid.ColumnDefinitions>
              <igPrim:FilterControl x:Name="OperatorControl" Grid.Column="0" />
              <ContentPresenter x:Name="FilterCellValueContent"
                                Grid.Column="1"
                                Margin="{TemplateBinding Padding}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              >
                <ContentPresenter.Resources>
                  <Style  TargetType="ComboBox" BasedOn="{StaticResource ColumnComboBoxStyle}"/>
                  <!-- To avoid Text jump when editing values-->
                  <Style  TargetType="TextBox" BasedOn="{StaticResource TextBoxStyle}">
                    <Setter Property="Padding" Value="4 5 6 2" />
                  </Style>
                </ContentPresenter.Resources>
              </ContentPresenter>
              <TextBlock x:Name="FilterLabel"
                         Grid.Column="1"
                         Margin="{TemplateBinding Padding}"
                         HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                         VerticalAlignment="Center"
                         Text="{Binding Cell.FilteringOperandResolved.DisplayName, RelativeSource={RelativeSource TemplatedParent}}"
                         Visibility="Collapsed" />
              <ContentControl x:Name="ClearFilters"
                              Grid.Column="2"
                              HorizontalAlignment="Center"
                              VerticalAlignment="Center"
                              Visibility="Collapsed">
                <igBase:Commanding.Command>
                  <igBase:XamGridFilteringCommandSource CommandType="ClearFilters" EventName="MouseLeftButtonDown" />
                </igBase:Commanding.Command>
                <Grid Width="24" Height="24">
                  <Rectangle Fill="{StaticResource TransparentBrush}"/>
                  <Path x:Name="clearFilterGlyphStroke"
                            Width="16"
                            Height="12"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Data="{StaticResource RemoveFilterIcon}"
                            Fill="{StaticResource GlyphPressedBackgroundBrush}"
                            Stretch="Fill" />
                </Grid>
              </ContentControl>
            </Grid>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style BasedOn="{StaticResource FilterRowCellControlStyle}" TargetType="igPrim:FilterRowCellControl" />

  <!--  *********************************  FilterDropdownToggleButotn Style  *********************************  -->
  <Style x:Key="FilterDropdownToggleButtonStyle" TargetType="ToggleButton">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="ToggleButton">
          <Grid Background="{StaticResource TransparentBrush}">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="MouseOver" />
                <VisualState x:Name="Pressed" />
                <VisualState x:Name="Disabled" />
              </VisualStateGroup>
              <VisualStateGroup x:Name="CheckStates">
                <VisualState x:Name="Checked" />
                <VisualState x:Name="Unchecked" />
              </VisualStateGroup>
              <VisualStateGroup x:Name="FocusStates">
                <VisualState x:Name="Focused" />
                <VisualState x:Name="Unfocused" />
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Rectangle Fill="{StaticResource TransparentBrush}" />
            <ContentPresenter x:Name="contentPresenter"
                              Margin="{TemplateBinding Padding}"
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                              Content="{TemplateBinding Content}"
                              ContentTemplate="{TemplateBinding ContentTemplate}" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!--  *********************************  FilterDropdown Style  *********************************  -->
  <Style x:Key="FilterDropdownStyle" TargetType="ComboBox">
    <Setter Property="Background" Value="{StaticResource PopupBackgroundBrush}" />
    <Setter Property="BorderBrush" Value="{StaticResource PopupBorderBrush}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="ComboBox">
          <Grid>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="MouseOver" />
                <VisualState x:Name="Disabled" />
              </VisualStateGroup>
              <VisualStateGroup x:Name="FocusStates">
                <VisualState x:Name="Focused" />
                <VisualState x:Name="Unfocused" />
                <VisualState x:Name="FocusedDropDown">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Duration="00:00:00" Storyboard.TargetName="PopupBorder" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>
                            Visible
                          </Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="ValidationStates">
                <VisualState x:Name="Valid" />
                <VisualState x:Name="InvalidUnfocused" />
                <VisualState x:Name="InvalidFocused" />
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Border x:Name="ContentPresenterBorder">
              <Grid>
                <ToggleButton x:Name="DropDownToggle"
                              Margin="0"
                              HorizontalAlignment="Stretch"
                              HorizontalContentAlignment="Right"
                              Background="{StaticResource TransparentBrush}"
                              BorderBrush="{TemplateBinding BorderBrush}"
                              BorderThickness="{TemplateBinding BorderThickness}"
                              IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                              Style="{StaticResource FilterDropdownToggleButtonStyle}" />
                <ContentPresenter x:Name="ContentPresenter"
                                  Margin="{TemplateBinding Padding}"
                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
              </Grid>
            </Border>
            <Popup x:Name="Popup" IsOpen="{TemplateBinding IsDropDownOpen}">
              <Border x:Name="PopupBorder"
                      Background="{StaticResource PopupBackgroundBrush}"
                      BorderBrush="{StaticResource PopupBorderBrush}"
                      BorderThickness="{TemplateBinding BorderThickness}">
                <ScrollViewer x:Name="ScrollViewer"
                              Background="{StaticResource TransparentBrush}"
                              BorderThickness="0"
                              Padding="1"
                              Style="{StaticResource ScrollViewerStyle}">
                  <ItemsPresenter />
                </ScrollViewer>
              </Border>
            </Popup>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!--  *********************************  FilterControl Style  *********************************  -->
  <Style x:Key="FilterControlStyle" TargetType="igPrim:FilterControl">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igPrim:FilterControl">
          <Grid>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="FilterImage">
                <VisualState x:Name="Equals">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0" Storyboard.TargetName="FilterComparisonButton" Storyboard.TargetProperty="(Content)">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="=" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="StartsWith">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0" Storyboard.TargetName="FilterComparisonButton" Storyboard.TargetProperty="(Content)">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="ABc" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="EndsWith">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0" Storyboard.TargetName="FilterComparisonButton" Storyboard.TargetProperty="(Content)">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="aBC" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="GreaterThan">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0" Storyboard.TargetName="FilterComparisonButton" Storyboard.TargetProperty="(Content)">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="&gt;" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Button x:Name="FilterOperandButton"
                    HorizontalAlignment="Left"
                    HorizontalContentAlignment="Center"
                    VerticalContentAlignment="Center"
                    ContentTemplate="{TemplateBinding SelectedItemIcon}"
                    Style="{StaticResource NoChromeButtonStyle}" />
            <ComboBox x:Name="FilterOperands"
                      Width="24"
                      ItemContainerStyle="{StaticResource ComboBoxItemStyle}"
                      Style="{StaticResource FilterDropdownStyle}">
              <ComboBox.ItemTemplate>
                <DataTemplate>
                  <Grid>
                    <Grid.ColumnDefinitions>
                      <ColumnDefinition Width="24" />
                      <ColumnDefinition />
                    </Grid.ColumnDefinitions>
                    <ContentControl HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    ContentTemplate="{Binding IconResolved}" />
                    <TextBlock Grid.Column="1"
                               Margin="5,0,0,0"
                               Text="{Binding DisplayName}" />
                  </Grid>
                </DataTemplate>
              </ComboBox.ItemTemplate>
            </ComboBox>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style BasedOn="{StaticResource FilterControlStyle}" TargetType="igPrim:FilterControl" />

  <!--  *********************************  SummaryRowExpansionIndicatorCellControl Style  *********************************  -->
  <Style x:Key="SummaryRowExpansionIndicatorCellControlStyle" TargetType="igPrim:SummaryRowExpansionIndicatorCellControl">
    <Setter Property="Background" Value="{StaticResource ExpansionCellBackgroundBrush}" />
    <Setter Property="BorderBrush" Value="{StaticResource ExpansionCellBorderBrush}" />
    <Setter Property="BorderThickness" Value="{StaticResource CellBorderThickness}" />
    <Setter Property="FontFamily" Value="{StaticResource FontFamily}" />
    <Setter Property="FontSize" Value="{StaticResource FontSize}" />
    <Setter Property="Foreground" Value="{StaticResource CellItemForegroundBrush}" />
    <Setter Property="HorizontalContentAlignment" Value="Center" />
    <Setter Property="Padding" Value="{StaticResource DefaultPadding}" />
    <Setter Property="VerticalContentAlignment" Value="Center" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igPrim:SummaryRowExpansionIndicatorCellControl">
          <Grid Background="{StaticResource TransparentBrush}">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="MouseOver" />
                <VisualState x:Name="Alternate" />
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Border x:Name="border"
                    Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}" />
            <ContentPresenter Margin="{TemplateBinding Padding}"
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style BasedOn="{StaticResource SummaryRowExpansionIndicatorCellControlStyle}" TargetType="igPrim:SummaryRowExpansionIndicatorCellControl" />

  <!--  *********************************  SummaryRowSelectorCellControl Style  *********************************  -->
  <Style x:Key="SummaryRowSelectorCellControlStyle" TargetType="igPrim:SummaryRowSelectorCellControl">
    <Setter Property="Background" Value="{StaticResource SummaryRowSelectorCellBackgroundBrush}" />
    <Setter Property="BorderBrush" Value="{StaticResource SummaryRowSelectorCellBorderBrush}" />
    <Setter Property="BorderThickness" Value="{StaticResource CellBorderThickness}" />
    <Setter Property="Foreground" Value="{StaticResource CellItemForegroundBrush}" />
    <Setter Property="HorizontalContentAlignment" Value="Center" />
    <Setter Property="VerticalContentAlignment" Value="Center" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igPrim:SummaryRowSelectorCellControl">
          <Grid igPrim:XamlHelper.SnapsToDevicePixels="True">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="MouseOver" />
                <VisualState x:Name="Alternate" />
              </VisualStateGroup>
              <VisualStateGroup x:Name="ActiveStates">
                <VisualState x:Name="InActive" />
                <VisualState x:Name="Active" />
                <VisualState x:Name="Editing" />
              </VisualStateGroup>
              <VisualStateGroup x:Name="SelectedStates">
                <VisualState x:Name="NotSelected" />
                <VisualState x:Name="Selected" />
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Border x:Name="border"
                    Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}" />
            <Path x:Name="summarySigmaIcon"
                  Width="7"
                  Height="9"
                  Data="{StaticResource SummarySigmaIcon}"
                  Fill="{StaticResource GlyphBackgroundBrush}"
                  RenderTransformOrigin="0.5, 0.5"
                  Stretch="Fill"
                  StrokeThickness="0"
                  UseLayoutRounding="False" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style BasedOn="{StaticResource SummaryRowSelectorCellControlStyle}" TargetType="igPrim:SummaryRowSelectorCellControl" />

  <!--  *********************************  SummaryRowCellControl Style  *********************************  -->
  <Style x:Key="SummaryRowCellControlStyle" TargetType="igPrim:SummaryRowCellControl">
    <Setter Property="Background" Value="{StaticResource SummaryRowCellBackgroundBrush}" />
    <Setter Property="BorderBrush" Value="{StaticResource SummaryRowCellBorderBrush}" />
    <Setter Property="BorderThickness" Value="{StaticResource CellBorderThickness}" />
    <Setter Property="FontFamily" Value="{StaticResource FontFamily}" />
    <Setter Property="FontSize" Value="{StaticResource FontSize}" />
    <Setter Property="Foreground" Value="{StaticResource CellItemForegroundBrush}" />
    <Setter Property="HorizontalContentAlignment" Value="Right" />
    <Setter Property="MinHeight" Value="26" />
    <Setter Property="Padding" Value="7,3" />
    <Setter Property="VerticalContentAlignment" Value="Center" />
    <Setter Property="SummaryDisplayTemplate">
      <Setter.Value>
        <DataTemplate>
          <StackPanel HorizontalAlignment="Right" Orientation="Horizontal">
            <TextBlock Text="{Binding SummaryDefinition.SummaryOperand.RowDisplayLabelResolved}" />
            <TextBlock Text=" = " />
            <TextBlock Text="{Binding Converter={StaticResource SDFormatStringConverter}}" />
          </StackPanel>
        </DataTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igPrim:SummaryRowCellControl">
          <Grid>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="MouseOver" />
                <VisualState x:Name="Alternate" />
              </VisualStateGroup>
              <VisualStateGroup x:Name="SelectedStates">
                <VisualState x:Name="NotSelected" />
                <VisualState x:Name="Selected" />
              </VisualStateGroup>
              <VisualStateGroup x:Name="ActiveStates">
                <VisualState x:Name="InActive" />
                <VisualState x:Name="Active">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00" Storyboard.TargetName="ActiveRect" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>
                            Visible
                          </Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="FixedStates">
                <VisualState x:Name="Fixed" />
                <VisualState x:Name="Unfixed" />
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Border x:Name="AddNewRowElem"
                    Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}">
              <Rectangle Height="1"
                         VerticalAlignment="Top"
                         Fill="{StaticResource TransparentBrush}" />
            </Border>
            <Rectangle x:Name="ActiveRect"
                       Fill="{StaticResource TransparentBrush}"
                       Stroke="{StaticResource CellItemSelectedBorderBrush}"
                        StrokeThickness="{StaticResource DefaultStrokeThickness}"
                       Visibility="Collapsed" />
            <StackPanel x:Name="SummaryDisplay"
                        Margin="{TemplateBinding Padding}"
                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style BasedOn="{StaticResource SummaryRowCellControlStyle}" TargetType="igPrim:SummaryRowCellControl" />

  <!--  *********************************  SummarySelectionControl Style  *********************************  -->
  <Style x:Key="SummarySelectionControlStyle" TargetType="igPrim:SummarySelectionControl">
    <Setter Property="Background" Value="{StaticResource PopupBackgroundBrush}" />
    <Setter Property="BorderBrush" Value="{StaticResource PopupBorderBrush}" />
    <Setter Property="BorderThickness" Value="{StaticResource DefaultBorderThickness}" />
    <Setter Property="CheckBoxStyle" Value="{StaticResource CheckBoxStyle}" />
    <Setter Property="Margin" Value="0" />
    <Setter Property="Padding" Value="0 5 0 10 " />
    <Setter Property="CheckBoxStyle">
      <Setter.Value>
        <Style TargetType="CheckBox" BasedOn="{StaticResource CheckBoxStyle}">
          <Setter Property="Padding" Value="10,0,0,0"/>
          <Setter Property="Margin" Value="0,5"/>
        </Style>
      </Setter.Value>
    </Setter>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igPrim:SummarySelectionControl">
          <Border x:Name="Bd"
                  Background="{TemplateBinding Background}"
                  BorderBrush="{TemplateBinding BorderBrush}"
                  BorderThickness="{TemplateBinding BorderThickness}"
                  Padding="1">
            <Grid Margin="12,0">
              <Grid.RowDefinitions>
                <RowDefinition />
                <RowDefinition Height="Auto" />
              </Grid.RowDefinitions>
              <Border Width="24"
                      Margin="0,-1,0,0"
                      HorizontalAlignment="Left"
                      Background="{StaticResource MenuIconColumnBackgroundBrush}" />
              <StackPanel x:Name="Panel" Margin="{TemplateBinding Padding}" />
              <StackPanel x:Name="selectionButtons"
                      Grid.Row="1"
                      Margin="{TemplateBinding Padding}"
                      HorizontalAlignment="Right"
                      Orientation="Horizontal">
                <Button x:Name="AcceptButton"
                        Width="80"
                        Margin="0,0,8,0"
                        Content="{Binding OKCaption, RelativeSource={RelativeSource TemplatedParent}}"
                        Cursor="Hand"
                        Style="{StaticResource ButtonStyle}">
                  <igBase:Commanding.Commands>
                    <igBase:CommandSourceCollection>
                      <igBase:SummarySelectionControlCommandSource CommandType="AcceptChanges" EventName="Click" />
                      <igPrim:XamGridPopupCommandSource CommandType="ClosePopup" EventName="Click" />
                    </igBase:CommandSourceCollection>
                  </igBase:Commanding.Commands>
                </Button>
                <Button x:Name="CancelButton"
                        Width="80"
                        Content="{Binding CancelCaption, RelativeSource={RelativeSource TemplatedParent}}"
                        Cursor="Hand"
                        Style="{StaticResource ButtonStyle}">
                  <igBase:Commanding.Command>
                    <igPrim:XamGridPopupCommandSource CommandType="ClosePopup" EventName="Click" />
                  </igBase:Commanding.Command>
                </Button>
              </StackPanel>
            </Grid>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style BasedOn="{StaticResource SummarySelectionControlStyle}" TargetType="igPrim:SummarySelectionControl" />

  <!--  *********************************  ExpansionIndicatorFooterCellControl Style  *********************************  -->
  <Style x:Key="ExpansionIndicatorFooterCellControlStyle" TargetType="igPrim:ExpansionIndicatorFooterCellControl">
    <Setter Property="Background" Value="{StaticResource FooterCellBackgroundBrush}" />
    <Setter Property="BorderBrush" Value="{StaticResource FooterCellBorderBrush}" />
    <Setter Property="BorderThickness" Value="{StaticResource CellFooterBorderThickness}" />
    <Setter Property="FontFamily" Value="{StaticResource FontFamily}" />
    <Setter Property="FontSize" Value="{StaticResource FontSize}" />
    <Setter Property="Foreground" Value="{StaticResource FooterCellForegroundBrush}" />
    <Setter Property="HorizontalContentAlignment" Value="Left" />
    <Setter Property="Padding" Value="{StaticResource DefaultPadding}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igPrim:ExpansionIndicatorFooterCellControl">
          <Grid>
            <Border x:Name="NormalFill"
                    Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}" />
            <ContentPresenter Margin="{TemplateBinding Padding}"
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style BasedOn="{StaticResource ExpansionIndicatorFooterCellControlStyle}" TargetType="igPrim:ExpansionIndicatorFooterCellControl" />

  <!--  *********************************  RowSelectorFooterCellControl Style  *********************************  -->
  <Style x:Key="RowSelectorFooterCellControlStyle" TargetType="igPrim:RowSelectorFooterCellControl">
    <Setter Property="Background" Value="{StaticResource FooterCellBackgroundBrush}" />
    <Setter Property="BorderBrush" Value="{StaticResource FooterCellBorderBrush}" />
    <Setter Property="BorderThickness" Value="{StaticResource CellFooterBorderThickness}" />
    <Setter Property="FontFamily" Value="{StaticResource FontFamily}" />
    <Setter Property="FontSize" Value="{StaticResource FontSize}" />
    <Setter Property="Foreground" Value="{StaticResource FooterCellForegroundBrush}" />
    <Setter Property="HorizontalContentAlignment" Value="Left" />
    <Setter Property="Padding" Value="{StaticResource DefaultPadding}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igPrim:RowSelectorFooterCellControl">
          <Grid>
            <Border x:Name="NormalFill"
                    Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}" />
            <ContentPresenter Margin="{TemplateBinding Padding}"
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style BasedOn="{StaticResource RowSelectorFooterCellControlStyle}" TargetType="igPrim:RowSelectorFooterCellControl" />

  <!--  *********************************  FooterCellControl Style  *********************************  -->
  <Style x:Key="FooterCellControlStyle" TargetType="igPrim:FooterCellControl">
    <Setter Property="Background" Value="{StaticResource FooterCellBackgroundBrush}" />
    <Setter Property="BorderBrush" Value="{StaticResource FooterCellBorderBrush}" />
    <Setter Property="BorderThickness" Value="{StaticResource CellFooterBorderThickness}" />
    <Setter Property="FontFamily" Value="{StaticResource FontFamily}" />
    <Setter Property="FontSize" Value="{StaticResource FontSize}" />
    <Setter Property="Foreground" Value="{StaticResource FooterCellForegroundBrush}" />
    <Setter Property="HorizontalContentAlignment" Value="Left" />
    <Setter Property="Padding" Value="{StaticResource DefaultPadding}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igPrim:FooterCellControl">
          <Grid>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="MouseOver" />
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Border x:Name="NormalFill"
                    Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}" />
            <ContentPresenter Margin="{TemplateBinding Padding}"
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style BasedOn="{StaticResource FooterCellControlStyle}" TargetType="igPrim:FooterCellControl" />

  <!--  *********************************  PagerButton Style  *********************************  -->
  <Style x:Key="PagerButtonStyle" TargetType="Button">
    <Setter Property="BorderThickness" Value="{StaticResource DefaultBorderThickness}" />
    <Setter Property="Foreground" Value="{StaticResource GlyphBackgroundBrush}" />
    <Setter Property="Height" Value="24" />
    <Setter Property="Width" Value="24" />
    <Setter Property="Padding" Value="0" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="Button">
          <Grid x:Name="layoutRoot" Background="{StaticResource TransparentBrush}">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="MouseOver">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0" Storyboard.TargetName="contentPresenter" Storyboard.TargetProperty="(TextElement.Foreground)">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource GlyphHoverBackgroundBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                    <DoubleAnimation d:IsOptimized="True" Duration="0" Storyboard.TargetName="hover" Storyboard.TargetProperty="(UIElement.Opacity)" To="1" />
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Pressed">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0" Storyboard.TargetName="contentPresenter" Storyboard.TargetProperty="(TextElement.Foreground)">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource GlyphHoverBackgroundBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                    <DoubleAnimation d:IsOptimized="True" Duration="0" Storyboard.TargetName="pressed" Storyboard.TargetProperty="(UIElement.Opacity)" To="1" />
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Disabled">
                  <Storyboard>
                    <DoubleAnimation d:IsOptimized="True" Duration="0" Storyboard.TargetName="layoutRoot" Storyboard.TargetProperty="(UIElement.Opacity)" To="0.3" />
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="FocusStates">
                <VisualState x:Name="Focused" />
                <VisualState x:Name="Unfocused" />
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Ellipse x:Name="hover"
                     Height="24"
                     Width="24"
                     Fill="{StaticResource ButtonHoverBackgroundBrush}"
                     Stroke="{StaticResource ButtonHoverBorderBrush}"
                     StrokeThickness="{StaticResource DefaultStrokeThickness}"
                     Opacity="0" />
            <Ellipse x:Name="pressed"
                     Height="24"
                     Width="24"
                     Fill="{StaticResource ButtonPressedBackgroundBrush}"
                     Stroke="{StaticResource ButtonPressedBorderBrush}"
                     StrokeThickness="{StaticResource DefaultStrokeThickness}"
                     Opacity="0" />
            <ContentPresenter x:Name="contentPresenter"
                              Margin="{TemplateBinding Padding}"
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                              Content="{TemplateBinding Content}"
                              ContentTemplate="{TemplateBinding ContentTemplate}"
                              TextElement.Foreground="{TemplateBinding Foreground}" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!--  *********************************  PagerItem Style  *********************************  -->
  <Style x:Key="PagerItemStyle" TargetType="ListBoxItem">
    <Setter Property="Background" Value="{StaticResource PagerItemBackgroundBrush}" />
    <Setter Property="BorderBrush" Value="{StaticResource PagerItemBorderBrush}" />
    <Setter Property="BorderThickness" Value="{StaticResource DefaultBorderThickness}" />
    <Setter Property="FontFamily" Value="{StaticResource FontFamily}" />
    <Setter Property="FontSize" Value="{StaticResource FontSize}" />
    <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
    <Setter Property="HorizontalAlignment" Value="Stretch" />
    <Setter Property="Margin" Value="3" />
    <Setter Property="MinHeight" Value="26" />
    <Setter Property="MinWidth" Value="26" />
    <Setter Property="Padding" Value="5,1" />
    <Setter Property="VerticalAlignment" Value="Stretch" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="ListBoxItem">
          <Grid x:Name="mainroot"
                HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                VerticalAlignment="{TemplateBinding VerticalAlignment}"
                Background="{TemplateBinding Background}">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="MouseOver">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="itemFill" Storyboard.TargetProperty="Fill">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonHoverBackgroundBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="itemFill" Storyboard.TargetProperty="Stroke">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonHoverBorderBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Disabled">
                  <Storyboard>
                    <DoubleAnimation  Duration="0" Storyboard.TargetName="mainroot" Storyboard.TargetProperty="(UIElement.Opacity)" To="0.3" />
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="SelectionStates">
                <VisualState x:Name="Unselected" />
                <VisualState x:Name="Selected">
                  <Storyboard>
                    <DoubleAnimation  Duration="0" Storyboard.TargetName="itemFillSelected" Storyboard.TargetProperty="(UIElement.Opacity)" To="1" />
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="FocusStates">
                <VisualState x:Name="Focused" />
                <VisualState x:Name="Unfocused" />
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid>
              <Ellipse x:Name="itemFill"
                       Fill="{StaticResource TransparentBrush}"
                       StrokeThickness="{StaticResource DefaultStrokeThickness}"
                       Stroke="{StaticResource TransparentBrush}"/>
              <ContentControl x:Name="pagerItem"
                              HorizontalContentAlignment="Center"
                              VerticalContentAlignment="Center"
                              Foreground="{TemplateBinding Foreground}">
                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"  />
              </ContentControl>
              <Grid x:Name="itemFillSelected" Opacity="0">
                <Ellipse
                       Fill="{StaticResource ButtonPressedBackgroundBrush}"
                       StrokeThickness="{StaticResource DefaultStrokeThickness}"
                       Stroke="{StaticResource ButtonPressedBorderBrush}"/>
                <ContentControl x:Name="pagerItemSelected"
                                HorizontalContentAlignment="Center"
                                VerticalContentAlignment="Center"
                                Foreground="{TemplateBinding Foreground}">
                  <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"  />
                </ContentControl>
              </Grid>
            </Grid>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!--  *********************************  PagerControl Style  *********************************  -->
  <Style x:Key="PagerControlStyle" TargetType="igPrim:PagerControl">
    <Setter Property="Margin" Value="0" />
    <Setter Property="MaximumAvailablePagerValues" Value="10" />
    <Setter Property="Padding" Value="8,0" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igPrim:PagerControl">
          <StackPanel HorizontalAlignment="Right"
                      Background="{TemplateBinding Background}"
                      Orientation="Horizontal"
                      igPrim:XamlHelper.SnapsToDevicePixels="True">
            <Button x:Name="FirstPageButton" Style="{StaticResource PagerButtonStyle}">
              <Path Width="9"
                    Height="10"
                    Data="{StaticResource FirstPageIcon}"
                    Fill="{Binding Path=(TextElement.Foreground), RelativeSource={RelativeSource AncestorType=ContentPresenter}}"
                    Stretch="Fill"
                    UseLayoutRounding="False" />
              <igBase:Commanding.Command>
                <igBase:XamGridPagingControlsCommandSource CommandType="FirstPage" EventName="Click" />
              </igBase:Commanding.Command>
            </Button>
            <Button x:Name="PreviousPageButton" Style="{StaticResource PagerButtonStyle}">
              <Path Width="6"
                    Height="10"
                    Margin="0 0 2 0"
                    Data="{StaticResource VArrowLeft}"
                    Fill="{Binding Path=(TextElement.Foreground), RelativeSource={RelativeSource AncestorType=ContentPresenter}}"
                    Stretch="Fill"
                    UseLayoutRounding="False" />
              <igBase:Commanding.Command>
                <igBase:XamGridPagingControlsCommandSource CommandType="PreviousPage" EventName="Click" />
              </igBase:Commanding.Command>
            </Button>
            <igPrim:PagerItemsControl x:Name="PagerItems"
                                      Background="{StaticResource TransparentBrush}"
                                      BorderThickness="0"
                                      ItemContainerStyle="{StaticResource PagerItemStyle}"
                                      Style="{StaticResource ListBoxStyle}">
              <!--<igPrim:PagerItemsControl.Resources>
                                <Style TargetType="{x:Type Border}" >
                                    <Setter Property="Background" Value="{StaticResource TransParentBrush}"/>
                                 </Style>
                            </igPrim:PagerItemsControl.Resources>-->
              <igBase:Commanding.Command>
                <igBase:XamGridPagingControlsCommandSource CommandType="GoToPage" EventName="SelectionChanged" />
              </igBase:Commanding.Command>
              <igPrim:PagerItemsControl.ItemsPanel>
                <ItemsPanelTemplate>
                  <StackPanel Orientation="Horizontal" />
                </ItemsPanelTemplate>
              </igPrim:PagerItemsControl.ItemsPanel>
            </igPrim:PagerItemsControl>
            <Button x:Name="NextPageButton" Style="{StaticResource PagerButtonStyle}">
              <Path Width="6"
                    Height="10"
                    Margin="2 0 0 0"
                    Data="{StaticResource VArrowRight}"
                    Fill="{Binding Path=(TextElement.Foreground), RelativeSource={RelativeSource AncestorType=ContentPresenter}}"
                    Stretch="Fill"
                    UseLayoutRounding="False" />
              <igBase:Commanding.Command>
                <igBase:XamGridPagingControlsCommandSource CommandType="NextPage" EventName="Click" />
              </igBase:Commanding.Command>
            </Button>
            <Button x:Name="LastPageButton" Style="{StaticResource PagerButtonStyle}">
              <Path Width="9"
                    Height="10"
                    Data="{StaticResource LastPageIcon}"
                    Fill="{Binding Path=(TextElement.Foreground), RelativeSource={RelativeSource AncestorType=ContentPresenter}}"
                    Stretch="Fill"
                    UseLayoutRounding="False" />
              <igBase:Commanding.Command>
                <igBase:XamGridPagingControlsCommandSource CommandType="LastPage" EventName="Click" />
              </igBase:Commanding.Command>
            </Button>
          </StackPanel>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style BasedOn="{StaticResource PagerControlStyle}" TargetType="igPrim:PagerControl" />

  <!--  *********************************  PagerCellControl Style  *********************************  -->
  <Style x:Key="PagerCellControlStyle" TargetType="igPrim:PagerCellControl">
    <Setter Property="Background" Value="{StaticResource PagerAreaBackgroundBrush}" />
    <Setter Property="BorderBrush" Value="{StaticResource PagerAreaBorderBrush}" />
    <Setter Property="MinHeight" Value="26" />
    <Setter Property="Padding" Value="4" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igPrim:PagerCellControl">
          <Grid Background="{TemplateBinding Background}">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="Orientation">
                <VisualState x:Name="Top">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="pagerStroke" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>
                            Visible
                          </Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0" Storyboard.TargetName="pagerStroke" Storyboard.TargetProperty="VerticalAlignment">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <VerticalAlignment>
                            Bottom
                          </VerticalAlignment>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Bottom">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="pagerStroke" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>
                            Visible
                          </Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Border x:Name="pagerStroke"
                    Height="1"
                    VerticalAlignment="Top"
                    Background="{TemplateBinding BorderBrush}"
                    Visibility="Collapsed" />
            <igPrim:PagerControl x:Name="PagerItemControl" Margin="{TemplateBinding Padding}">
              <igBase:Commanding.Commands>
                <igBase:CommandSourceCollection>
                  <igBase:XamGridPagingCommandSource CommandType="FirstPage" EventName="FirstPage" />
                  <igBase:XamGridPagingCommandSource CommandType="LastPage" EventName="LastPage" />
                  <igBase:XamGridPagingCommandSource CommandType="PreviousPage" EventName="PreviousPage" />
                  <igBase:XamGridPagingCommandSource CommandType="NextPage" EventName="NextPage" />
                  <igBase:XamGridPagingCommandSource CommandType="GoToPage" EventName="GoToPage" />
                </igBase:CommandSourceCollection>
              </igBase:Commanding.Commands>
            </igPrim:PagerControl>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style BasedOn="{StaticResource PagerCellControlStyle}" TargetType="igPrim:PagerCellControl" />

  <!--  *********************************  DropAreaIndicator Style  *********************************  -->
  <Style x:Key="DropAreaIndicatorStyle" TargetType="igPrim:DropAreaIndicator">
    <Setter Property="Background" Value="{StaticResource DropAreaIndicatorBackgroundBrush}" />
    <Setter Property="Opacity" Value="0.5" />
    <Setter Property="Width" Value="15" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igPrim:DropAreaIndicator">
          <Border x:Name="Root"
                  Background="{TemplateBinding Background}"
                  BorderBrush="{TemplateBinding BorderBrush}"
                  BorderThickness="{TemplateBinding BorderThickness}"
                  Opacity="{TemplateBinding Opacity}"
                  RenderTransformOrigin="0,0">
            <Border.RenderTransform>
              <ScaleTransform x:Name="rootScale" ScaleX="0" />
            </Border.RenderTransform>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="DisplayStates">
                <VisualState x:Name="Hidden" />
                <VisualState x:Name="MouseOver">
                  <Storyboard>
                    <DoubleAnimation Storyboard.TargetName="rootScale" Storyboard.TargetProperty="ScaleX" To="1" />
                    <DoubleAnimation From="1" Storyboard.TargetName="Root" Storyboard.TargetProperty="Opacity" To="1" />
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="DisplayFromLeft">
                  <Storyboard>
                    <PointAnimationUsingKeyFrames BeginTime="0"
                                                  Storyboard.TargetName="Root"
                                                  Storyboard.TargetProperty="RenderTransformOrigin">
                      <EasingPointKeyFrame KeyTime="0" Value="0,0" />
                    </PointAnimationUsingKeyFrames>
                    <DoubleAnimation Duration="00:00:00.3" Storyboard.TargetName="rootScale" Storyboard.TargetProperty="ScaleX" To="1">
                      <DoubleAnimation.EasingFunction>
                        <CubicEase EasingMode="EaseOut" />
                      </DoubleAnimation.EasingFunction>
                    </DoubleAnimation>
                    <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="00:00:00" Storyboard.TargetName="Root" Storyboard.TargetProperty="Margin">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Thickness>
                            1,0,0,0
                          </Thickness>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="DisplayFromRight">
                  <Storyboard>
                    <PointAnimationUsingKeyFrames Storyboard.TargetName="Root" Storyboard.TargetProperty="RenderTransformOrigin">
                      <EasingPointKeyFrame KeyTime="0" Value="1,0" />
                    </PointAnimationUsingKeyFrames>
                    <!--  Leave Ease  -->
                    <DoubleAnimation Duration="00:00:00.3" Storyboard.TargetName="rootScale" Storyboard.TargetProperty="ScaleX" To="1">
                      <DoubleAnimation.EasingFunction>
                        <CubicEase EasingMode="EaseOut" />
                      </DoubleAnimation.EasingFunction>
                    </DoubleAnimation>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style BasedOn="{StaticResource DropAreaIndicatorStyle}" TargetType="igPrim:DropAreaIndicator" />

  <!--  *********************************  GroupByMovingIndicator Style  *********************************  -->
  <Style x:Key="GroupByMovingIndicatorStyle" TargetType="igPrim:GroupByMovingIndicator">
    <Setter Property="Background" Value="{StaticResource MovingIndicatorBackgroundBrush}" />
    <Setter Property="Height" Value="9" />
    <!--  Offset value for SL theme  -->
    <Setter Property="HorizontalOffset" Value="-10" />
    <Setter Property="Width" Value="9" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igPrim:GroupByMovingIndicator">
          <Canvas>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Path Width="{TemplateBinding Width}"
                  Height="{TemplateBinding Height}"
                  Margin="0"
                  Data="{StaticResource MovingIndicatorIcon}"
                  Fill="{TemplateBinding Background}" />
            <Path Width="{TemplateBinding Width}"
                  Height="{TemplateBinding Height}"
                  Margin="0,0,0,17"
                  Data="{StaticResource MovingIndicatorIcon}"
                  Fill="{TemplateBinding Background}"
                  RenderTransformOrigin="0.5,0.5">
              <Path.RenderTransform>
                <RotateTransform Angle="180"/>
              </Path.RenderTransform>
            </Path>
          </Canvas>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style BasedOn="{StaticResource GroupByMovingIndicatorStyle}" TargetType="igPrim:GroupByMovingIndicator" />

  <!--  *********************************  MovingIndicator Style  *********************************  -->
  <Style x:Key="MovingIndicatorStyle" TargetType="igPrim:MovingIndicator">
    <Setter Property="Background" Value="{StaticResource MovingIndicatorBackgroundBrush}" />
    <Setter Property="Width" Value="9" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igPrim:MovingIndicator">
          <Canvas>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Path x:Name="TopIndicator"
                  Width="{TemplateBinding Width}"
                  Height="9"
                  Data="{StaticResource MovingIndicatorIcon}"
                  Fill="{TemplateBinding Background}" />
            <Path x:Name="BottomIndicator"
                  Width="{TemplateBinding Width}"
                  Height="9"
                  Data="{StaticResource MovingIndicatorIcon}"
                  Fill="{TemplateBinding Background}"
                  RenderTransformOrigin="0.5,0.5">
              <Path.RenderTransform>
                <RotateTransform Angle="180"/>
              </Path.RenderTransform>
            </Path>
          </Canvas>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style BasedOn="{StaticResource MovingIndicatorStyle}" TargetType="igPrim:MovingIndicator" />

  <!--  *********************************  ResizingIndicator Style  *********************************  -->
  <Style x:Key="ResizingIndicatorStyle" TargetType="igPrim:ResizingIndicator">
    <Setter Property="Background" Value="{StaticResource ResizingIndicatorBackgroundBrush}" />
    <Setter Property="Width" Value="4" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igPrim:ResizingIndicator">
          <Canvas>
            <Rectangle x:Name="FillIndicator"
                       Width="{TemplateBinding Width}"
                       Height="{Binding Path=Height, RelativeSource={RelativeSource TemplatedParent}}"
                       Fill="{TemplateBinding Background}" />
          </Canvas>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style BasedOn="{StaticResource ResizingIndicatorStyle}" TargetType="igPrim:ResizingIndicator" />

  <!--  *********************************  GroupByAreaExpansionIndicator Style  *********************************  -->
  <Style x:Key="GroupByAreaExpansionIndicatorStyle" TargetType="ToggleButton">
    <Setter Property="Background" Value="{StaticResource GroupByAreaExpansionIndicatorBackgroundBrush}" />
    <Setter Property="BorderBrush" Value="{StaticResource GroupByAreaExpansionIndicatorBorderBrush}" />
    <Setter Property="BorderThickness" Value="{StaticResource DefaultBorderThickness}" />
    <Setter Property="Cursor" Value="Hand" />
    <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
    <Setter Property="Padding" Value="0" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="ToggleButton">
          <Grid Background="{TemplateBinding Background}" x:Name="root_grid">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="MouseOver">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="Bg" Storyboard.TargetProperty="Background">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource GroupByAreaExpansionIndicatorHoverBackgroundBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="Bg" Storyboard.TargetProperty="BorderBrush">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource GroupByAreaExpansionIndicatorHoverBorderBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="contentPresenter" Storyboard.TargetProperty="(TextElement.Foreground)">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource GlyphHoverBackgroundBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Pressed">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="Bg" Storyboard.TargetProperty="Background">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource GroupByAreaExpansionIndicatorPressedBackgroundBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="Bg" Storyboard.TargetProperty="BorderBrush">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource GroupByAreaExpansionIndicatorPressedBorderBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="contentPresenter" Storyboard.TargetProperty="(TextElement.Foreground)">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource GlyphHoverBackgroundBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Disabled">
                  <Storyboard>
                    <DoubleAnimation  Duration="0" Storyboard.TargetName="root_grid" Storyboard.TargetProperty="(UIElement.Opacity)" To="0.3" />
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="CheckStates">
                <VisualState x:Name="Checked" />
                <VisualState x:Name="Unchecked" />
              </VisualStateGroup>
              <VisualStateGroup x:Name="FocusStates">
                <VisualState x:Name="Focused" />
                <VisualState x:Name="Unfocused" />
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Border x:Name="Bg"
                    Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}" />
            <ContentPresenter x:Name="contentPresenter"
                              Margin="{TemplateBinding Padding}"
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                              Content="{TemplateBinding Content}"
                              ContentTemplate="{TemplateBinding ContentTemplate}"
                              TextElement.Foreground="{StaticResource GlyphBackgroundBrush}"/>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!--  *********************************  GroupByAreaCellControl Style  *********************************  -->
  <Style x:Key="GroupByAreaCellControlStyle" TargetType="igPrim:GroupByAreaCellControl">
    <Setter Property="Background" Value="{StaticResource GroupByAreaCellBackgroundBrush}" />
    <Setter Property="BorderBrush" Value="{StaticResource GroupByAreaCellBorderBrush}" />
    <Setter Property="BorderThickness" Value="{StaticResource DefaultBorderThickness}" />
    <Setter Property="FontFamily" Value="{StaticResource FontFamily}" />
    <Setter Property="FontSize" Value="{StaticResource FontSize}" />
    <Setter Property="Foreground" Value="{StaticResource GroupByAreaWaterMarkForegroundBrush}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igPrim:GroupByAreaCellControl">
          <Grid>
            <Grid.RowDefinitions>
              <RowDefinition />
              <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="MouseOver"/>
              </VisualStateGroup>
              <VisualStateGroup x:Name="ExpansionVisibilityStates">
                <VisualState x:Name="ExpansionVisible" />
                <VisualState x:Name="ExpansionHidden">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0" Storyboard.TargetName="ExpansionIndicator" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>
                            Collapsed
                          </Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="ExpandedStates">
                <VisualState x:Name="Expanded">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="00:00:00" Storyboard.TargetName="bottomCollapseGlyph" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>
                            Visible
                          </Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="00:00:00" Storyboard.TargetName="topCollapseGlyph" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>
                            Visible
                          </Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Collapsed">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="00:00:00" Storyboard.TargetName="panelContainer" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>
                            Collapsed
                          </Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="00:00:00" Storyboard.TargetName="bottomExpandGlyph" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>
                            Visible
                          </Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="00:00:00" Storyboard.TargetName="topExpandGlyph" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>
                            Visible
                          </Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="DisplayStates">
                <VisualState x:Name="Empty" />
                <VisualState x:Name="NonEmpty">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames BeginTime="0" Storyboard.TargetName="EmptyContentControl" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>
                            Collapsed
                          </Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="DraggingStates">
                <VisualState x:Name="NotDragging" />
                <VisualState x:Name="Dragging" />
                <VisualState x:Name="DraggingOver" />
              </VisualStateGroup>
              <VisualStateGroup x:Name="GroupByAreaLocation">
                <VisualState x:Name="Top">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames BeginTime="0" Storyboard.TargetName="topGlyphSet" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>
                            Visible
                          </Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Bottom">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0" Storyboard.TargetName="panelContainer" Storyboard.TargetProperty="(Grid.Row)">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <System:Int32>
                            0
                          </System:Int32>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0" Storyboard.TargetName="ExpansionIndicator" Storyboard.TargetProperty="(Grid.Row)">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <System:Int32>
                            1
                          </System:Int32>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0" Storyboard.TargetName="ExpansionIndicator" Storyboard.TargetProperty="(Control.BorderThickness)">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Thickness>
                            0,1,0,0
                          </Thickness>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames BeginTime="0" Storyboard.TargetName="bottomGlyphSet" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>
                            Visible
                          </Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <ToggleButton x:Name="ExpansionIndicator"
                          Height="16"
                          VerticalAlignment="Top"
                          Foreground="{StaticResource ForegroundBrush}"
                          IsChecked="{TemplateBinding IsExpanded}"
                          Style="{StaticResource GroupByAreaExpansionIndicatorStyle}">
              <igBase:Commanding.Commands>
                <igBase:CommandSourceCollection>
                  <igBase:XamGroupByAreaCommandSource CommandType="Expand" EventName="Checked" />
                  <igBase:XamGroupByAreaCommandSource CommandType="Collapse" EventName="Unchecked" />
                </igBase:CommandSourceCollection>
              </igBase:Commanding.Commands>
              <Grid>
                <Grid x:Name="topGlyphSet" Visibility="Collapsed">
                  <Path x:Name="topExpandGlyph"
                        Width="10"
                        Height="6"
                        Margin="0,0,0,2"
                        Data="{StaticResource VArrowDown}"
                        Fill="{Binding Path=(TextElement.Foreground), RelativeSource={RelativeSource AncestorType=ContentPresenter}}"
                        Stretch="Fill"
                        Visibility="Collapsed" />
                  <Path x:Name="topCollapseGlyph"
                        Width="10"
                        Height="6"
                        Margin="0,0,0,2"
                        Data="{StaticResource VArrowTop}"
                        Fill="{Binding Path=(TextElement.Foreground), RelativeSource={RelativeSource AncestorType=ContentPresenter}}"
                        Stretch="Fill"
                        Visibility="Collapsed" />
                </Grid>
                <Grid x:Name="bottomGlyphSet" Visibility="Collapsed">
                  <Path x:Name="bottomCollapseGlyph"
                        Width="10"
                        Height="6"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        Data="{StaticResource VArrowDown}"
                        Fill="{Binding Path=(TextElement.Foreground), RelativeSource={RelativeSource AncestorType=ContentPresenter}}"
                        Stretch="Fill"
                        UseLayoutRounding="False"
                        Visibility="Collapsed" />
                  <Path x:Name="bottomExpandGlyph"
                        Width="10"
                        Height="6"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        Data="{StaticResource VArrowTop}"
                        Fill="{Binding Path=(TextElement.Foreground), RelativeSource={RelativeSource AncestorType=ContentPresenter}}"
                        Stretch="Fill"
                        UseLayoutRounding="False"
                        Visibility="Collapsed" />
                </Grid>
              </Grid>
            </ToggleButton>
            <Border x:Name="panelContainer"
                    Grid.Row="1"
                    Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}">
              <Grid x:Name="PanelArea"
                    Grid.Row="1"
                    MinHeight="24">
                <ContentControl x:Name="EmptyContentControl"
                                Margin="12"
                                VerticalAlignment="Center"
                                Content="{TemplateBinding EmptyContent}"
                                FontFamily="{TemplateBinding FontFamily}"
                                FontSize="{TemplateBinding FontSize}"
                                Foreground="{TemplateBinding Foreground}" />
                <ScrollViewer Background="{StaticResource TransparentBrush}"
                              BorderThickness="0"
                              HorizontalScrollBarVisibility="Auto"
                              Style="{StaticResource ScrollViewerStyle}"
                              VerticalScrollBarVisibility="Hidden">
                  <igPrim:GroupByAreaPanel x:Name="Panel" Margin="10" />
                </ScrollViewer>
              </Grid>
            </Border>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style BasedOn="{StaticResource GroupByAreaCellControlStyle}" TargetType="igPrim:GroupByAreaCellControl" />

  <!--  *********************************  GroupByHeaderCloseButton Style  *********************************  -->
  <Style x:Key="GroupByHeaderCloseButtonStyle" TargetType="Button">
    <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
    <Setter Property="Height" Value="24" />
    <Setter Property="Padding" Value="10,0" />
    <Setter Property="Width" Value="28" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="Button">
          <Grid igPrim:XamlHelper.SnapsToDevicePixels="True" Background="Transparent">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="MouseOver">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="CloseShape" Storyboard.TargetProperty="Fill">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource GlyphHoverBackgroundBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Pressed">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="CloseShape" Storyboard.TargetProperty="Fill">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource GlyphHoverBackgroundBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Disabled" />
              </VisualStateGroup>
              <VisualStateGroup x:Name="FocusStates">
                <VisualState x:Name="Focused" />
                <VisualState x:Name="Unfocused" />
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Rectangle Fill="{StaticResource TransparentBrush}" />
            <Path x:Name="CloseShape"
                  Width="8"
                  Height="8"
                  igPrim:XamlHelper.SnapsToDevicePixels="True"
                  Data="{StaticResource ClearFilterIcon}"
                  Fill="{StaticResource GlyphBackgroundBrush}"
                  Stretch="Fill" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!--  *********************************  GroupByHeaderCellControl Style  *********************************  -->
  <Style x:Key="GroupByHeaderCellControlStyle" TargetType="igPrim:GroupByHeaderCellControl">
    <Setter Property="Background" Value="{StaticResource GroupByHeaderCellBackgroundBrush}" />
    <Setter Property="BorderBrush" Value="{StaticResource GroupByHeaderCellBorderBrush}" />
    <Setter Property="BorderThickness" Value="{StaticResource DefaultBorderThickness}" />
    <Setter Property="FontFamily" Value="{StaticResource FontFamily}" />
    <Setter Property="FontSize" Value="{StaticResource FontSize}" />
    <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
    <Setter Property="HorizontalContentAlignment" Value="Left" />
    <Setter Property="MinHeight" Value="26" />
    <Setter Property="Padding" Value="{StaticResource CellPadding}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igPrim:GroupByHeaderCellControl">
          <igPrim:SimpleClickableContainer>
            <igBase:Commanding.Command>
              <igBase:XamGridColumnCommandSource CommandType="SortToggle" EventName="SimpleClick" />
            </igBase:Commanding.Command>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="MouseOver">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="SortedDescending" Storyboard.TargetProperty="Fill">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource GlyphHoverBackgroundBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="SortedAscending" Storyboard.TargetProperty="Fill">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource GlyphHoverBackgroundBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Moving">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames BeginTime="0" Storyboard.TargetName="fillMoving" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames BeginTime="0" Storyboard.TargetName="fill" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Collapsed</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="connectorRec" Storyboard.TargetProperty="(UIElement.Visibility)">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Collapsed</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="FirstStates">
                <VisualState x:Name="NotFirst" />
                <VisualState x:Name="First" />
              </VisualStateGroup>
              <VisualStateGroup x:Name="LastStates">
                <VisualState x:Name="NotLast" />
                <VisualState x:Name="Last">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="connectorRec" Storyboard.TargetProperty="(UIElement.Visibility)">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Collapsed</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="SortedStates">
                <VisualState x:Name="NotSorted" />
                <VisualState x:Name="Ascending">
                  <Storyboard>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="SortedAscending" Storyboard.TargetProperty="Opacity">
                      <SplineDoubleKeyFrame KeyTime="0" Value="1" />
                    </DoubleAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Descending">
                  <Storyboard>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="SortedDescending" Storyboard.TargetProperty="Opacity">
                      <SplineDoubleKeyFrame KeyTime="0" Value="1" />
                    </DoubleAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="FixedStates">
                <VisualState x:Name="Fixed" />
                <VisualState x:Name="Unfixed" />
              </VisualStateGroup>
              <VisualStateGroup x:Name="FixedIndicatorStates">
                <VisualState x:Name="NotFixable" />
                <VisualState x:Name="Pinned" />
                <VisualState x:Name="Unpinned" />
              </VisualStateGroup>
              <VisualStateGroup x:Name="SelectedStates">
                <VisualState x:Name="NotSelected" />
                <VisualState x:Name="Selected" />
              </VisualStateGroup>
              <VisualStateGroup x:Name="HeaderFilterStates">
                <VisualState x:Name="FilterIcon" />
                <VisualState x:Name="NoIcon" />
              </VisualStateGroup>
              <VisualStateGroup x:Name="FilteredStates">
                <VisualState x:Name="NoFiltering" />
                <VisualState x:Name="NotFiltered" />
                <VisualState x:Name="Filtered" />
              </VisualStateGroup>
              <VisualStateGroup x:Name="SummableStates">
                <VisualState x:Name="Summable" />
                <VisualState x:Name="NotSummable" />
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid x:Name="Root">
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="11" />
              </Grid.ColumnDefinitions>
              <Border x:Name="fill"
                      Background="{TemplateBinding Background}"
                      BorderBrush="{TemplateBinding BorderBrush}"
                      BorderThickness="{TemplateBinding BorderThickness}" />
              <Border x:Name="fillMoving"
                      Background="{StaticResource HeaderCellMovingBackgroundBrush}"
                      BorderBrush="{StaticResource HeaderCellMovingBorderBrush}"
                      BorderThickness="0,1"
                      Visibility="Collapsed" />
              <Grid>
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="Auto" />
                  <ColumnDefinition Width="Auto" MinWidth="24" />
                  <ColumnDefinition Width="Auto" MinWidth="24" />
                </Grid.ColumnDefinitions>
                <ContentPresenter Grid.Column="0"
                                  Margin="{TemplateBinding Padding}"
                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                <Path x:Name="SortedDescending"
                      Grid.Column="1"
                      Width="8"
                      Height="5"
                      HorizontalAlignment="Center"
                      VerticalAlignment="Center"
                      Data="{StaticResource SortIcon}"
                      Fill="{StaticResource GlyphBackgroundBrush}"
                      Opacity="0"
                      Stretch="Fill"
                      UseLayoutRounding="False" />
                <Path x:Name="SortedAscending"
                      Grid.Column="1"
                      Width="8"
                      Height="5"
                      HorizontalAlignment="Center"
                      VerticalAlignment="Center"
                      Data="{StaticResource SortIcon}"
                      Fill="{StaticResource GlyphBackgroundBrush}"
                      Opacity="0"
                      Stretch="Fill"
                      RenderTransformOrigin="0.5,0.5">
                  <Path.RenderTransform>
                    <RotateTransform Angle="180"/>
                  </Path.RenderTransform>
                </Path>
                <Button x:Name="closeButton"
                        Grid.Column="2"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        Style="{StaticResource GroupByHeaderCloseButtonStyle}">
                  <igBase:Commanding.Command>
                    <igBase:XamGridColumnCommandSource CommandType="RemoveGroupBy" EventName="Click" />
                  </igBase:Commanding.Command>
                  <Path Width="8"
                        Height="8"
                        Data="{StaticResource ClearFilterIcon}"
                        Fill="{StaticResource GlyphBackgroundBrush}"
                        Stretch="Fill"
                        UseLayoutRounding="False" />
                </Button>
              </Grid>
              <Rectangle x:Name="connectorRec"
                         Grid.Column="1"
                         Height="4"
                         Fill="{StaticResource CellConnectorBackgroundBrush}" />
            </Grid>
          </igPrim:SimpleClickableContainer>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style BasedOn="{StaticResource GroupByHeaderCellControlStyle}" TargetType="igPrim:GroupByHeaderCellControl" />

  <!--  *********************************  GroupByColumnLayoutHeaderCellControl Style  *********************************  -->
  <Style x:Key="GroupByColumnLayoutHeaderCellControlStyle" TargetType="igPrim:GroupByColumnLayoutHeaderCellControl">
    <Setter Property="Background" Value="{StaticResource GroupByColumnLayoutHeaderCellBackgroundBrush}" />
    <Setter Property="BorderBrush" Value="{StaticResource GroupByColumnLayoutHeaderCellBorderBrush}" />
    <Setter Property="BorderThickness" Value="{StaticResource DefaultBorderThickness}" />
    <Setter Property="FontFamily" Value="{StaticResource FontFamily}" />
    <Setter Property="FontSize" Value="{StaticResource FontSize14}" />
    <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
    <Setter Property="HorizontalContentAlignment" Value="Left" />
    <Setter Property="Margin" Value="20,0,0,0" />
    <Setter Property="MinHeight" Value="26" />
    <Setter Property="Padding" Value="10,0" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igPrim:GroupByColumnLayoutHeaderCellControl">
          <Border x:Name="NormalFill"
                  Background="{TemplateBinding Background}"
                  BorderBrush="{TemplateBinding BorderBrush}"
                  BorderThickness="{TemplateBinding BorderThickness}">
            <Grid>
              <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                  <VisualState x:Name="Normal" />
                  <VisualState x:Name="MouseOver" />
                </VisualStateGroup>
              </VisualStateManager.VisualStateGroups>
              <ContentPresenter Margin="{TemplateBinding Padding}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
            </Grid>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style BasedOn="{StaticResource GroupByColumnLayoutHeaderCellControlStyle}" TargetType="igPrim:GroupByColumnLayoutHeaderCellControl" />

  <!--  *********************************  GroupByCellControl Style  *********************************  -->
  <Style x:Key="GroupByCellControlStyle" TargetType="igPrim:GroupByCellControl">
    <Setter Property="Background" Value="{StaticResource GroupByCellBackgroundBrush}" />
    <Setter Property="BorderBrush" Value="{StaticResource GroupByCellBorderBrush}" />
    <Setter Property="BorderThickness" Value="{StaticResource CellBorderThickness}" />
    <Setter Property="FontFamily" Value="{StaticResource FontFamily}" />
    <Setter Property="FontSize" Value="{StaticResource FontSize}" />
    <Setter Property="FontWeight" Value="{StaticResource FontSemiBold}" />
    <Setter Property="HorizontalContentAlignment" Value="Left" />
    <Setter Property="VerticalContentAlignment" Value="Center" />
    <Setter Property="MinHeight" Value="26" />
    <Setter Property="Padding" Value="{StaticResource CellPadding}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igPrim:GroupByCellControl">
          <Grid>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="MouseOver">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames BeginTime="0" Storyboard.TargetName="MouseOver1" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>
                            Visible
                          </Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="ActiveStates">
                <VisualState x:Name="InActive" />
                <VisualState x:Name="Active">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames BeginTime="0" Storyboard.TargetName="ActiveRect" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>
                            Visible
                          </Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames BeginTime="0" Storyboard.TargetName="contentControl" Storyboard.TargetProperty="Foreground">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{StaticResource ForegroundBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Border x:Name="NormalFill"
                    Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}" />
            <Rectangle x:Name="MouseOver1"
                       Margin="{TemplateBinding BorderThickness}"
                       Fill="{StaticResource HeaderCellHoverBackgroundBrush}"
                       Visibility="Collapsed" />
            <Rectangle x:Name="ActiveRect"
                       Fill="{StaticResource CellItemSelectedBackgroundBrush}"
                       Stroke="{StaticResource CellItemSelectedBorderBrush}"
                        StrokeThickness="{StaticResource DefaultStrokeThickness}"
                       Visibility="Collapsed" />
            <ContentControl x:Name="contentControl" Foreground="{StaticResource HeaderCellForegroundBrush}">
              <ContentPresenter Margin="{TemplateBinding Padding}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
            </ContentControl>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style BasedOn="{StaticResource GroupByCellControlStyle}" TargetType="igPrim:GroupByCellControl" />

  <!--  *********************************  FixedBorderHeaderCellControl Style  *********************************  -->
  <Style x:Key="FixedBorderHeaderCellControlStyle" TargetType="igPrim:FixedBorderHeaderCellControl">
    <Setter Property="Background" Value="{StaticResource FixedBorderBackgroundBrush}" />
    <Setter Property="BorderThickness" Value="0,0,2,0" />
    <Setter Property="Margin" Value="0" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igPrim:FixedBorderHeaderCellControl">
          <Border x:Name="Border"
                  Background="{TemplateBinding Background}"
                  BorderBrush="{TemplateBinding Background}"
                  BorderThickness="{TemplateBinding BorderThickness}" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style BasedOn="{StaticResource FixedBorderHeaderCellControlStyle}" TargetType="igPrim:FixedBorderHeaderCellControl" />

  <!--  *********************************  FixedBorderCellControl Style  *********************************  -->
  <Style x:Key="FixedBorderCellControlStyle" TargetType="igPrim:FixedBorderCellControl">
    <Setter Property="Background" Value="{StaticResource FixedBorderBackgroundBrush}" />
    <Setter Property="BorderThickness" Value="0,0,2,0" />
    <Setter Property="Margin" Value="0" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igPrim:FixedBorderCellControl">
          <Border x:Name="Border"
                  Background="{TemplateBinding Background}"
                  BorderBrush="{TemplateBinding Background}"
                  BorderThickness="{TemplateBinding BorderThickness}" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style BasedOn="{StaticResource FixedBorderCellControlStyle}" TargetType="igPrim:FixedBorderCellControl" />

  <!--  *********************************  FixedBorderFooterCellControl Style  *********************************  -->
  <Style x:Key="FixedBorderFooterCellControlStyle" TargetType="igPrim:FixedBorderFooterCellControl">
    <Setter Property="Background" Value="{StaticResource FixedBorderBackgroundBrush}" />
    <Setter Property="BorderThickness" Value="0,0,2,0" />
    <Setter Property="Margin" Value="0" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igPrim:FixedBorderFooterCellControl">
          <Border x:Name="Border"
                  Background="{TemplateBinding Background}"
                  BorderBrush="{TemplateBinding Background}"
                  BorderThickness="{TemplateBinding BorderThickness}" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style BasedOn="{StaticResource FixedBorderFooterCellControlStyle}" TargetType="igPrim:FixedBorderFooterCellControl" />

  <!--  *********************************  CustomFilterDialogContentControl Style  *********************************  -->
  <Style x:Key="CustomFilterDialogContentControlStyle" TargetType="igPrim:CustomFilterDialogContentControl">
    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
    <Setter Property="VerticalContentAlignment" Value="Center" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igPrim:CustomFilterDialogContentControl">
          <Border Background="{TemplateBinding Background}"
                  BorderBrush="{TemplateBinding BorderBrush}"
                  BorderThickness="{TemplateBinding BorderThickness}">
            <ContentPresenter x:Name="contentPresenter"
                              Margin="{TemplateBinding Padding}"
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style BasedOn="{StaticResource CustomFilterDialogContentControlStyle}" TargetType="igPrim:CustomFilterDialogContentControl" />

  <!--  *********************************  ColumnFilterDialogControl Style  *********************************  -->
  <Style x:Key="ColumnFilterDialogControlStyle" TargetType="igPrim:ColumnFilterDialogControl">
    <Setter Property="Background" Value="{StaticResource PopupBackgroundBrush}" />
    <Setter Property="BorderBrush" Value="{StaticResource PopupBorderBrush}" />
    <Setter Property="BorderThickness" Value="{StaticResource DefaultBorderThickness}" />
    <Setter Property="HorizontalAlignment" Value="Center" />
    <Setter Property="Margin" Value="1" />
    <Setter Property="Padding" Value="12" />
    <Setter Property="VerticalAlignment" Value="Center" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igPrim:ColumnFilterDialogControl">
          <Grid HorizontalAlignment="{TemplateBinding HorizontalAlignment}" VerticalAlignment="{TemplateBinding VerticalAlignment}">
            <Border Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    Padding="{TemplateBinding Padding}">
              <Grid>
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="*" MinWidth="175" />
                  <ColumnDefinition Width="*" MinWidth="175" />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                  <RowDefinition Height="Auto" />
                  <RowDefinition MinHeight="26" />
                  <RowDefinition Height="Auto" />
                  <RowDefinition MinHeight="26" />
                  <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <ComboBox x:Name="Operator1"
                          Grid.Row="1"
                          Style="{StaticResource ComboBoxStyle}">
                  <ComboBox.ItemTemplate>
                    <DataTemplate>
                      <Grid>
                        <Grid.ColumnDefinitions>
                          <ColumnDefinition Width="24" />
                          <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <ContentControl HorizontalAlignment="Center"
                                        VerticalAlignment="Center"
                                        ContentTemplate="{Binding IconResolved}"
                                        IsTabStop="False" />
                        <TextBlock Grid.Column="1"
                                   Margin="5,0,0,0"
                                   Text="{Binding DisplayName}" />
                      </Grid>
                    </DataTemplate>
                  </ComboBox.ItemTemplate>
                </ComboBox>
                <igPrim:CustomFilterDialogContentControl x:Name="Operand1"
                                                         Grid.Row="1"
                                                         Grid.Column="1"
                                                         Width="200"
                                                         Margin="5"
                                                         HorizontalContentAlignment="Stretch"
                                                         IsTabStop="False" />
                <StackPanel Grid.Row="2"
                            Grid.ColumnSpan="2"
                            Orientation="Horizontal">
                  <RadioButton x:Name="And"
                               Margin="0,0,8,0"
                               Content="{TemplateBinding AndRadioButtonText}"
                               GroupName="AndOr"
                               IsChecked="true"
                               Style="{StaticResource RadioButtonStyle}" />
                  <RadioButton x:Name="Or"
                               Margin="10,0,0,0"
                               Content="{TemplateBinding OrRadioButtonText}"
                               GroupName="AndOr"
                               Style="{StaticResource RadioButtonStyle}" />
                </StackPanel>
                <ComboBox x:Name="Operator2"
                          Grid.Row="3"
                          Style="{StaticResource ComboBoxStyle}">
                  <ComboBox.ItemTemplate>
                    <DataTemplate>
                      <Grid>
                        <Grid.ColumnDefinitions>
                          <ColumnDefinition Width="24" />
                          <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <ContentControl HorizontalAlignment="Center"
                                        VerticalAlignment="Center"
                                        ContentTemplate="{Binding IconResolved}"
                                        IsTabStop="False" />
                        <TextBlock Grid.Column="1"
                                   Margin="5,0,0,0"
                                   Text="{Binding DisplayName}" />
                      </Grid>
                    </DataTemplate>
                  </ComboBox.ItemTemplate>
                </ComboBox>
                <igPrim:CustomFilterDialogContentControl x:Name="Operand2"
                                                         Grid.Row="3"
                                                         Grid.Column="1"
                                                         Width="200"
                                                         Margin="5"
                                                         HorizontalContentAlignment="Stretch"
                                                         IsTabStop="False" />
                <StackPanel Grid.Row="4"
                            Grid.ColumnSpan="4"
                            Margin="0,12,0,0"
                            HorizontalAlignment="Right"
                            Orientation="Horizontal">
                  <Button Width="74"
                          Margin="0,0,8,0"
                          Content="{TemplateBinding OKButtonText}"
                          Style="{StaticResource ButtonStyle}">
                    <igBase:Commanding.Commands>
                      <igBase:CommandSourceCollection>
                        <igPrim:CustomFilteringDialogControlCommandSource CommandType="Accept" EventName="Click" />
                        <igPrim:CustomFilteringDialogControlCommandSource CommandType="Close" EventName="Click" />
                      </igBase:CommandSourceCollection>
                    </igBase:Commanding.Commands>
                  </Button>
                  <Button Width="74"
                          Content="{TemplateBinding CancelButtonText}"
                          Style="{StaticResource ButtonStyle}">
                    <igBase:Commanding.Command>
                      <igPrim:CustomFilteringDialogControlCommandSource CommandType="Close" EventName="Click" />
                    </igBase:Commanding.Command>
                  </Button>
                </StackPanel>
              </Grid>
            </Border>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style BasedOn="{StaticResource ColumnFilterDialogControlStyle}" TargetType="igPrim:ColumnFilterDialogControl" />

  <!--  *********************************  FilterCheckBox Style  *********************************  -->
  <Style x:Key="FilterCheckBoxStyle" TargetType="CheckBox">
    <Setter Property="BorderThickness" Value="{StaticResource DefaultBorderThickness}" />
    <Setter Property="HorizontalAlignment" Value="Center" />
    <Setter Property="IsHitTestVisible" Value="False" />
    <Setter Property="Padding" Value="0" />
    <Setter Property="VerticalAlignment" Value="Center" />
    <Setter Property="igPrim:XamlHelper.Focusable" Value="False" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="CheckBox">
          <Grid x:Name="grid1" Opacity="0">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CheckStates">
                <VisualState x:Name="Checked">
                  <Storyboard>
                    <DoubleAnimation d:IsOptimized="True" Duration="0" Storyboard.TargetName="grid1" Storyboard.TargetProperty="(UIElement.Opacity)" To="1" />
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Unchecked" />
                <VisualState x:Name="Indeterminate" />
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid>
              <Path Width="10"
                    Height="8"
                    Data="{StaticResource FilterIcon}"
                    Fill="{StaticResource GlyphBackgroundBrush}"
                    Stretch="Fill" />
            </Grid>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!--  *********************************  RootFilterXamMenuItem Style  *********************************  -->
  <Style x:Key="RootFilterXamMenuItemStyle" TargetType="igPrim:FilterMenuXamMenuItem">
    <Setter Property="Background" Value="{StaticResource TransparentBrush}" />
    <Setter Property="BorderThickness" Value="0" />
    <Setter Property="FontFamily" Value="{StaticResource FontFamily}" />
    <Setter Property="FontSize" Value="{StaticResource FontSize}" />
    <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
    <Setter Property="IsEnabled" Value="True" />
    <Setter Property="IsTabStop" Value="True" />
    <Setter Property="ItemsPanel">
      <Setter.Value>
        <ItemsPanelTemplate>
          <StackPanel Orientation="Vertical" />
        </ItemsPanelTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="MinHeight" Value="24" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igPrim:FilterMenuXamMenuItem">
          <Grid Background="{TemplateBinding Background}">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="MouseOver">
                  <Storyboard x:Name="MouseOverStoryboard">
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="MenuItemOver" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>
                            Visible
                          </Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Highlighted">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="MenuItemHighlighted" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>
                            Visible
                          </Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Disabled">
                  <Storyboard>
                    <DoubleAnimation Duration="0" From="1" Storyboard.TargetName="MenuItemPresenter" Storyboard.TargetProperty="Opacity" To=".3" />
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="SubmenuState">
                <VisualState x:Name="SubmenuOpen">
                  <Storyboard>
                    <DoubleAnimation BeginTime="0:0:0" Duration="0:0:0.15" Storyboard.TargetName="PopupBorder" Storyboard.TargetProperty="Opacity" To="1.0" />
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="SubmenuOpenImmediately">
                  <Storyboard>
                    <DoubleAnimation BeginTime="0:0:0" Duration="0:0:0.15" Storyboard.TargetName="PopupBorder" Storyboard.TargetProperty="Opacity" To="1.0" />
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="SubmenuClose">
                  <Storyboard>
                    <DoubleAnimation BeginTime="0:0:0" Duration="0:0:0.1" Storyboard.TargetName="PopupBorder" Storyboard.TargetProperty="Opacity" To="0.01" />
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="SubmenuCloseImmediately">
                  <Storyboard>
                    <DoubleAnimation BeginTime="0:0:0" Duration="0:0:0.1" Storyboard.TargetName="PopupBorder" Storyboard.TargetProperty="Opacity" To="0.01" />
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="MenuItemRole">
                <VisualState x:Name="TopLevelHeader">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="IconPlace" Storyboard.TargetProperty="Width">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <GridLength>
                            Auto
                          </GridLength>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="ChildIndicatorPlace" Storyboard.TargetProperty="Width">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <GridLength>
                            0
                          </GridLength>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0" Storyboard.TargetName="HeaderPresenter" Storyboard.TargetProperty="(FrameworkElement.Margin)">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Thickness>
                            10,3,0,3
                          </Thickness>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0" Storyboard.TargetName="HeaderCheckboxPresenter" Storyboard.TargetProperty="(FrameworkElement.Margin)">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Thickness>
                            4,3,0,3
                          </Thickness>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="TopLevelHeaderWithIcon">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="IconPlace" Storyboard.TargetProperty="Width">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <GridLength>
                            Auto
                          </GridLength>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="ChildIndicatorPlace" Storyboard.TargetProperty="Width">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <GridLength>
                            0
                          </GridLength>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0" Storyboard.TargetName="HeaderPresenter" Storyboard.TargetProperty="(FrameworkElement.Margin)">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Thickness>
                            0,3,0,3
                          </Thickness>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0" Storyboard.TargetName="HeaderCheckboxPresenter" Storyboard.TargetProperty="(FrameworkElement.Margin)">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Thickness>
                            4,3,0,3
                          </Thickness>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="TopLevelItem">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="IconPlace" Storyboard.TargetProperty="Width">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <GridLength>
                            Auto
                          </GridLength>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="ChildIndicatorPlace" Storyboard.TargetProperty="Width">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <GridLength>
                            0
                          </GridLength>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0" Storyboard.TargetName="HeaderPresenter" Storyboard.TargetProperty="(FrameworkElement.Margin)">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Thickness>
                            10,3,0,3
                          </Thickness>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0" Storyboard.TargetName="HeaderCheckboxPresenter" Storyboard.TargetProperty="(FrameworkElement.Margin)">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Thickness>
                            4,3,0,3
                          </Thickness>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="TopLevelItemWithIcon">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="IconPlace" Storyboard.TargetProperty="Width">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <GridLength>
                            Auto
                          </GridLength>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="ChildIndicatorPlace" Storyboard.TargetProperty="Width">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <GridLength>
                            0
                          </GridLength>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0" Storyboard.TargetName="HeaderPresenter" Storyboard.TargetProperty="(FrameworkElement.Margin)">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Thickness>
                            0,3,0,3
                          </Thickness>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0" Storyboard.TargetName="HeaderCheckboxPresenter" Storyboard.TargetProperty="(FrameworkElement.Margin)">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Thickness>
                            4,3,0,3
                          </Thickness>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="SubmenuHeader">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="ArrowPanel" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>
                            Visible
                          </Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="HeaderPresenter" Storyboard.TargetProperty="(FrameworkElement.Margin)">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Thickness>
                            5,3,25,3
                          </Thickness>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="SubmenuItem">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="HeaderPresenter" Storyboard.TargetProperty="(FrameworkElement.Margin)">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Thickness>
                            5,3,25,3
                          </Thickness>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="IsSeperatorItem">
                <VisualState x:Name="IsNotSeperator" />
                <VisualState x:Name="IsSeperator">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Seperator" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>
                            Visible
                          </Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="MenuItem" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>
                            Collapsed
                          </Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid x:Name="Seperator" Visibility="Collapsed">
              <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="OrientationState">
                  <VisualState x:Name="Horizontal" />
                  <VisualState x:Name="Vertical">
                    <Storyboard>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HorizontalContainer" Storyboard.TargetProperty="Visibility">
                        <DiscreteObjectKeyFrame KeyTime="0">
                          <DiscreteObjectKeyFrame.Value>
                            <Visibility>
                              Collapsed
                            </Visibility>
                          </DiscreteObjectKeyFrame.Value>
                        </DiscreteObjectKeyFrame>
                      </ObjectAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="VertitalContainer" Storyboard.TargetProperty="Visibility">
                        <DiscreteObjectKeyFrame KeyTime="0">
                          <DiscreteObjectKeyFrame.Value>
                            <Visibility>
                              Visible
                            </Visibility>
                          </DiscreteObjectKeyFrame.Value>
                        </DiscreteObjectKeyFrame>
                      </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualState>
                </VisualStateGroup>
              </VisualStateManager.VisualStateGroups>
              <Border Name="HorizontalContainer"
                      Height="1"
                      Margin="30,2,2,2"
                      Background="{TemplateBinding Background}"
                      BorderBrush="{StaticResource SeparatorBrush}"
                      BorderThickness="{TemplateBinding BorderThickness}" />
              <Border Name="VertitalContainer"
                      Width="1"
                      Margin="2"
                      Background="{TemplateBinding Background}"
                      BorderBrush="{StaticResource SeparatorBrush}"
                      BorderThickness="{TemplateBinding BorderThickness}"
                      Visibility="Collapsed" />
            </Grid>
            <Grid x:Name="MenuItem">
              <Rectangle x:Name="MenuItemOver"
                         Grid.ColumnSpan="3"
                         Margin="1"
                         HorizontalAlignment="Stretch"
                         Fill="{StaticResource MenuItemHoverBackgroundBrush}"
                         Stroke="{StaticResource MenuItemHoverBorderBrush}"
                         Visibility="Collapsed" />
              <Rectangle x:Name="MenuItemHighlighted"
                         Grid.ColumnSpan="3"
                         Margin="1"
                         HorizontalAlignment="Stretch"
                         Fill="{StaticResource MenuItemHighlightedBackgroundBrush}"
                         Stroke="{StaticResource MenuItemHighlightedBorderBrush}"
                         Visibility="Collapsed" />
              <!--  MenuItemPresenter - presentes the content of the menu item.  -->
              <ContentPresenter x:Name="MenuItemPresenter"
                                Margin="30,0,0,0"
                                Opacity="1"
                                Visibility="Visible">
                <ContentPresenter.Content>
                  <Grid>
                    <Grid.ColumnDefinitions>
                      <ColumnDefinition x:Name="IconPlace" />
                      <ColumnDefinition Width="*" />
                      <ColumnDefinition x:Name="ChildIndicatorPlace" Width="24" />
                    </Grid.ColumnDefinitions>
                    <!--  Icon presenter  -->
                    <ContentControl x:Name="HeaderIconPresenter"
                                    Width="16"
                                    Height="16"
                                    Margin="4,3,4,3"
                                    Content="{TemplateBinding Icon}"
                                    Visibility="{TemplateBinding IconVisibilityResolved}" />
                    <!--  Checkbox presenter  -->
                    <ContentPresenter x:Name="HeaderCheckboxPresenter"
                                      HorizontalAlignment="Right"
                                      VerticalAlignment="Center"
                                      Visibility="{TemplateBinding CheckBoxVisibilityResolved}">
                      <ContentPresenter.Content>
                        <CheckBox IsChecked="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsChecked, Mode=TwoWay}"
                                  IsHitTestVisible="False"
                                  IsTabStop="False"
                                  Style="{StaticResource CheckBoxStyle}" />
                      </ContentPresenter.Content>
                    </ContentPresenter>
                    <!--  Header presenter  -->
                    <Grid Grid.Column="1">
                      <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="24" />
                      </Grid.ColumnDefinitions>
                      <ContentPresenter x:Name="HeaderPresenter"
                                        Grid.Column="0"
                                        Margin="5,3,5,3"
                                        VerticalAlignment="Center"
                                        Content="{TemplateBinding Header}"
                                        ContentTemplate="{TemplateBinding HeaderTemplate}" />
                      <TextBlock Grid.Column="1"
                                 Margin="5,3,2,3"
                                 VerticalAlignment="Center"
                                 Foreground="{StaticResource ForegroundBrush}"
                                 Text="{TemplateBinding InputGestureText}" />
                    </Grid>
                    <!--  Arrow indicator presenter  -->
                    <Grid x:Name="ArrowPanel"
                          Grid.Column="2"
                          HorizontalAlignment="Center"
                          VerticalAlignment="Center"
                          Visibility="Collapsed">
                      <Path x:Name="ArrowPanelPath"
                            Width="6"
                            Height="10"
                            Margin="7,0,7,0"
                            VerticalAlignment="Center"
                            Data="{StaticResource VArrowRight}"
                            Fill="{StaticResource GlyphBackgroundBrush}" />
                    </Grid>
                  </Grid>
                </ContentPresenter.Content>
              </ContentPresenter>
            </Grid>
            <Popup x:Name="Popup">
              <Grid>
                <Border x:Name="PopupBorder"
                        Background="{StaticResource PopupBackgroundBrush}"
                        BorderBrush="{StaticResource PopupBorderBrush}"
                        BorderThickness="{StaticResource DefaultBorderThickness}"
                        Opacity="0.01">
                  <Grid>
                    <Grid.ColumnDefinitions>
                      <ColumnDefinition Width="32" />
                      <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <ScrollViewer x:Name="ScrollViewer"
                                  Grid.ColumnSpan="2"
                                  HorizontalScrollBarVisibility="Auto"
                                  Style="{StaticResource ScrollViewerStyle}"
                                  VerticalScrollBarVisibility="Auto">
                      <ItemsPresenter Grid.ColumnSpan="2" />
                    </ScrollViewer>
                  </Grid>
                </Border>
              </Grid>
            </Popup>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!--  *********************************  FilterXamMenuItem Style  *********************************  -->
  <Style x:Key="FilterXamMenuItemStyle" TargetType="igPrim:FilterMenuXamMenuItem">
    <Setter Property="Background" Value="{StaticResource TransparentBrush}" />
    <Setter Property="BorderThickness" Value="{StaticResource DefaultBorderThickness}" />
    <Setter Property="FontFamily" Value="{StaticResource FontFamily}" />
    <Setter Property="FontSize" Value="{StaticResource FontSize}" />
    <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
    <Setter Property="IsEnabled" Value="True" />
    <Setter Property="IsTabStop" Value="True" />
    <Setter Property="ItemsPanel">
      <Setter.Value>
        <ItemsPanelTemplate>
          <StackPanel Orientation="Vertical" />
        </ItemsPanelTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="MinHeight" Value="24" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igPrim:FilterMenuXamMenuItem">
          <Grid Background="{TemplateBinding Background}">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="MouseOver">
                  <Storyboard x:Name="MouseOverStoryboard">
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="MenuItemOver" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Highlighted">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="MenuItemHighlighted" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Disabled">
                  <Storyboard>
                    <DoubleAnimation Duration="0" From="1" Storyboard.TargetName="MenuItemPresenter" Storyboard.TargetProperty="Opacity" To=".3" />
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="SubmenuState">
                <VisualState x:Name="SubmenuOpen">
                  <Storyboard>
                    <DoubleAnimation BeginTime="0:0:0" Duration="0:0:0.15" Storyboard.TargetName="PopupBorder" Storyboard.TargetProperty="Opacity" To="1.0" />
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="SubmenuOpenImmediately">
                  <Storyboard>
                    <DoubleAnimation BeginTime="0:0:0" Duration="0:0:0.15" Storyboard.TargetName="PopupBorder" Storyboard.TargetProperty="Opacity" To="1.0" />
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="SubmenuClose">
                  <Storyboard>
                    <DoubleAnimation BeginTime="0:0:0" Duration="0:0:0.1" Storyboard.TargetName="PopupBorder" Storyboard.TargetProperty="Opacity" To="0.01" />
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="SubmenuCloseImmediately">
                  <Storyboard>
                    <DoubleAnimation BeginTime="0:0:0" Duration="0:0:0.1" Storyboard.TargetName="PopupBorder" Storyboard.TargetProperty="Opacity" To="0.01" />
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="MenuItemRole">
                <VisualState x:Name="TopLevelHeader">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="IconPlace" Storyboard.TargetProperty="Width">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <GridLength>
                            Auto
                          </GridLength>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="ChildIndicatorPlace" Storyboard.TargetProperty="Width">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <GridLength>
                            0
                          </GridLength>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0" Storyboard.TargetName="HeaderPresenter" Storyboard.TargetProperty="(FrameworkElement.Margin)">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Thickness>
                            10,3,0,3
                          </Thickness>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0" Storyboard.TargetName="HeaderCheckboxPresenter" Storyboard.TargetProperty="(FrameworkElement.Margin)">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Thickness>
                            4,3,0,3
                          </Thickness>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="TopLevelHeaderWithIcon">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="IconPlace" Storyboard.TargetProperty="Width">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <GridLength>
                            Auto
                          </GridLength>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="ChildIndicatorPlace" Storyboard.TargetProperty="Width">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <GridLength>
                            0
                          </GridLength>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0" Storyboard.TargetName="HeaderPresenter" Storyboard.TargetProperty="(FrameworkElement.Margin)">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Thickness>
                            0,3,0,3
                          </Thickness>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0" Storyboard.TargetName="HeaderCheckboxPresenter" Storyboard.TargetProperty="(FrameworkElement.Margin)">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Thickness>
                            4,3,0,3
                          </Thickness>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="TopLevelItem">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="IconPlace" Storyboard.TargetProperty="Width">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <GridLength>
                            Auto
                          </GridLength>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="ChildIndicatorPlace" Storyboard.TargetProperty="Width">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <GridLength>
                            0
                          </GridLength>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0" Storyboard.TargetName="HeaderPresenter" Storyboard.TargetProperty="(FrameworkElement.Margin)">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Thickness>
                            10,3,0,3
                          </Thickness>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0" Storyboard.TargetName="HeaderCheckboxPresenter" Storyboard.TargetProperty="(FrameworkElement.Margin)">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Thickness>
                            4,3,0,3
                          </Thickness>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="TopLevelItemWithIcon">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="IconPlace" Storyboard.TargetProperty="Width">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <GridLength>
                            Auto
                          </GridLength>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="ChildIndicatorPlace" Storyboard.TargetProperty="Width">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <GridLength>
                            0
                          </GridLength>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0" Storyboard.TargetName="HeaderPresenter" Storyboard.TargetProperty="(FrameworkElement.Margin)">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Thickness>
                            0,3,0,3
                          </Thickness>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0" Storyboard.TargetName="HeaderCheckboxPresenter" Storyboard.TargetProperty="(FrameworkElement.Margin)">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Thickness>
                            4,3,0,3
                          </Thickness>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="SubmenuHeader">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="ArrowPanel" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>
                            Visible
                          </Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="HeaderPresenter" Storyboard.TargetProperty="(FrameworkElement.Margin)">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Thickness>
                            5,3,25,3
                          </Thickness>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="SubmenuItem">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="HeaderPresenter" Storyboard.TargetProperty="(FrameworkElement.Margin)">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Thickness>
                            5,3,25,3
                          </Thickness>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="IsSeperatorItem">
                <VisualState x:Name="IsNotSeperator" />
                <VisualState x:Name="IsSeperator">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Seperator" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="MenuItem" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Collapsed</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid x:Name="Seperator" Visibility="Collapsed">
              <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="OrientationState">
                  <VisualState x:Name="Horizontal" />
                  <VisualState x:Name="Vertical">
                    <Storyboard>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HorizontalContainer" Storyboard.TargetProperty="Visibility">
                        <DiscreteObjectKeyFrame KeyTime="0">
                          <DiscreteObjectKeyFrame.Value>
                            <Visibility>
                              Collapsed
                            </Visibility>
                          </DiscreteObjectKeyFrame.Value>
                        </DiscreteObjectKeyFrame>
                      </ObjectAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="VertitalContainer" Storyboard.TargetProperty="Visibility">
                        <DiscreteObjectKeyFrame KeyTime="0">
                          <DiscreteObjectKeyFrame.Value>
                            <Visibility>
                              Visible
                            </Visibility>
                          </DiscreteObjectKeyFrame.Value>
                        </DiscreteObjectKeyFrame>
                      </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualState>
                </VisualStateGroup>
              </VisualStateManager.VisualStateGroups>
              <Border Name="HorizontalContainer"
                      Height="1"
                      Margin="2"
                      Background="{TemplateBinding Background}"
                      BorderBrush="{StaticResource SeparatorBrush}"
                      BorderThickness="{TemplateBinding BorderThickness}" />
              <Border Name="VertitalContainer"
                      Width="1"
                      Margin="2"
                      Background="{TemplateBinding Background}"
                      BorderBrush="{StaticResource SeparatorBrush}"
                      BorderThickness="{TemplateBinding BorderThickness}"
                      Visibility="Collapsed" />
            </Grid>
            <Grid x:Name="MenuItem">
              <Rectangle x:Name="MenuItemOver"
                         Grid.ColumnSpan="3"
                         Margin="1"
                         HorizontalAlignment="Stretch"
                         Fill="{StaticResource MenuItemHoverBackgroundBrush}"
                         Stroke="{StaticResource MenuItemHoverBorderBrush}"
                         Visibility="Collapsed" />
              <Rectangle x:Name="MenuItemHighlighted"
                         Grid.ColumnSpan="3"
                         Margin="1"
                         HorizontalAlignment="Stretch"
                         Fill="{StaticResource MenuItemHighlightedBackgroundBrush}"
                         Stroke="{StaticResource MenuItemHighlightedBorderBrush}"
                         Visibility="Collapsed" />
              <!--  MenuItemPresenter - presentes the content of the menu item.  -->
              <ContentPresenter x:Name="MenuItemPresenter"
                                Opacity="1"
                                Visibility="Visible">
                <ContentPresenter.Content>
                  <Grid>
                    <Grid.ColumnDefinitions>
                      <ColumnDefinition x:Name="IconPlace" Width="24" />
                      <ColumnDefinition Width="*" />
                      <ColumnDefinition x:Name="ChildIndicatorPlace" Width="24" />
                    </Grid.ColumnDefinitions>
                    <!--  Icon presenter  -->
                    <ContentControl x:Name="HeaderIconPresenter"
                                    Width="16"
                                    Height="16"
                                    Margin="4,3,4,3"
                                    Content="{TemplateBinding Icon}"
                                    Visibility="{TemplateBinding IconVisibilityResolved}" />
                    <!--  Checkbox presenter  -->
                    <ContentPresenter x:Name="HeaderCheckboxPresenter"
                                      HorizontalAlignment="Right"
                                      VerticalAlignment="Center"
                                      Visibility="{TemplateBinding CheckBoxVisibilityResolved}">
                      <ContentPresenter.Content>
                        <CheckBox IsChecked="{Binding IsChecked, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                  IsHitTestVisible="False"
                                  IsTabStop="False"
                                  Style="{StaticResource FilterCheckBoxStyle}" />
                      </ContentPresenter.Content>
                    </ContentPresenter>
                    <!--  Header presenter  -->
                    <Grid Grid.Column="1">
                      <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                      </Grid.ColumnDefinitions>
                      <ContentPresenter x:Name="HeaderPresenter"
                                        Grid.Column="0"
                                        Margin="6,4"
                                        VerticalAlignment="Center"
                                        Content="{TemplateBinding Header}"
                                        ContentTemplate="{TemplateBinding HeaderTemplate}" />
                      <TextBlock Grid.Column="1"
                                 Margin="6,4"
                                 VerticalAlignment="Center"
                                 Foreground="{StaticResource ForegroundBrush}"
                                 Text="{TemplateBinding InputGestureText}" />
                    </Grid>
                    <!--  Arrow indicator presenter  -->
                    <Grid x:Name="ArrowPanel"
                          Grid.Column="2"
                          Width="24"
                          Height="24"
                          Visibility="Collapsed">
                      <Path x:Name="ArrowPanelPath"
                            Width="6"
                            Height="10"
                            VerticalAlignment="Center"
                            Data="M0,0 L0,8 L4,4 z"
                            Fill="{StaticResource GlyphBackgroundBrush}"
                            Stretch="Fill"
                            UseLayoutRounding="False" />
                    </Grid>
                  </Grid>
                </ContentPresenter.Content>
              </ContentPresenter>
            </Grid>
            <Popup x:Name="Popup">
              <Grid>
                <Border x:Name="PopupBorder"
                        Background="{StaticResource PopupBackgroundBrush}"
                        BorderBrush="{StaticResource PopupBorderBrush}"
                        BorderThickness="{StaticResource DefaultBorderThickness}"
                        Opacity="0.01">
                  <Grid>
                    <Grid.ColumnDefinitions>
                      <ColumnDefinition Width="24" />
                      <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <ScrollViewer x:Name="ScrollViewer"
                                  Grid.ColumnSpan="2"
                                  HorizontalScrollBarVisibility="Auto"
                                  Style="{StaticResource ScrollViewerStyle}"
                                  VerticalScrollBarVisibility="Auto">
                      <ItemsPresenter Grid.ColumnSpan="2" />
                    </ScrollViewer>
                  </Grid>
                </Border>
              </Grid>
            </Popup>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style BasedOn="{StaticResource FilterXamMenuItemStyle}" TargetType="igPrim:FilterMenuXamMenuItem" />

  <!--  *********************************  FilterMenuCustom Template  *********************************  -->
  <DataTemplate x:Key="FilterMenuCustomTemplate">
    <igPrim:FilterMenuXamMenuItem HorizontalAlignment="Stretch"
                                  Header="{Binding Label}"
                                  IsCheckable="{Binding IsCheckable}"
                                  IsChecked="{Binding IsChecked, Mode=TwoWay}"
                                  IsSeparator="{Binding IsSeparator}"
                                  ItemsSource="{Binding Children}"
                                  SubmenuPreferredLocation="Right">
      <igBase:Commanding.Commands>
        <igBase:CommandSourceCollection>
          <igBase:XamGridFilterMenuCommandSource CommandType="{Binding Path=SourceElement.DataContext.FilterOperands, RelativeSource={RelativeSource Self}}" EventName="Click" />
          <igPrim:CompoundFilteringDialogFilterMenuCommandSource CommandType="ShowCompoundFilterDialog"
                                                                 ConditionalCommandParameter="{Binding Path=SourceElement.DataContext.FilterOperands, RelativeSource={RelativeSource Self}}"
                                                                 EventName="Click" />
          <igPrim:XamGridPopupFilterMenuConditionalCommandSource CommandType="ClosePopup"
                                                                 ConditionalCommandParameter="{Binding Path=SourceElement.DataContext.FilterOperands, RelativeSource={RelativeSource Self}}"
                                                                 EventName="Click" />
        </igBase:CommandSourceCollection>
      </igBase:Commanding.Commands>
    </igPrim:FilterMenuXamMenuItem>
  </DataTemplate>

  <!--  *********************************  RootFilterMenuCustom Template  *********************************  -->
  <DataTemplate x:Key="RootFilterMenuCustomTemplate">
    <igPrim:FilterMenuXamMenuItem Margin="-24,0,0,0"
                                  HorizontalAlignment="Stretch"
                                  Header="{Binding Label}"
                                  IsCheckable="{Binding IsCheckable}"
                                  IsChecked="{Binding IsChecked, Mode=TwoWay}"
                                  IsSeparator="{Binding IsSeparator}"
                                  ItemsSource="{Binding Children}"
                                  Style="{StaticResource RootFilterXamMenuItemStyle}"
                                  SubmenuPreferredLocation="Right">
      <igBase:Commanding.Commands>
        <igBase:CommandSourceCollection>
          <igBase:XamGridFilterMenuCommandSource CommandType="{Binding Path=SourceElement.DataContext.FilterOperands, RelativeSource={RelativeSource Self}}" EventName="Click" />
          <igPrim:CompoundFilteringDialogFilterMenuCommandSource CommandType="ShowCompoundFilterDialog"
                                                                 ConditionalCommandParameter="{Binding Path=SourceElement.DataContext.FilterOperands, RelativeSource={RelativeSource Self}}"
                                                                 EventName="Click" />
          <igPrim:XamGridPopupFilterMenuConditionalCommandSource CommandType="ClosePopup"
                                                                 ConditionalCommandParameter="{Binding Path=SourceElement.DataContext.FilterOperands, RelativeSource={RelativeSource Self}}"
                                                                 EventName="Click" />
        </igBase:CommandSourceCollection>
      </igBase:Commanding.Commands>
    </igPrim:FilterMenuXamMenuItem>
  </DataTemplate>

  <!--  *********************************  FilterMenu Style  *********************************  -->
  <Style x:Key="FilterMenuStyle" TargetType="igBase:XamMenu">
    <Setter Property="Background" Value="{StaticResource FilterMenuBackgroundBrush}" />
    <Setter Property="HierarchicalItemTemplate">
      <Setter.Value>
        <igBase:HierarchicalDataTemplate DefaultItemsContainer="{StaticResource FilterMenuCustomTemplate}" ItemsSource="{Binding Children}">
          <igBase:HierarchicalDataTemplate.HierarchicalItemTemplate>
            <igBase:HierarchicalDataTemplate DefaultItemsContainer="{StaticResource FilterMenuCustomTemplate}" ItemsSource="{Binding Children}" />
          </igBase:HierarchicalDataTemplate.HierarchicalItemTemplate>
        </igBase:HierarchicalDataTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="HorizontalAlignment" Value="Stretch" />
    <Setter Property="Margin" Value="0,1" />
    <Setter Property="MenuOrientation" Value="Vertical" />
  </Style>

  <!--  *********************************  FilterSelectionItem Style  *********************************  -->
  <Style x:Key="FilterSelectionItemStyle" TargetType="Button">
    <Setter Property="Background" Value="{StaticResource FilterSelectionItemBackgroundBrush}" />
    <Setter Property="BorderBrush" Value="{StaticResource FilterSelectionItemBorderBrush}" />
    <Setter Property="BorderThickness" Value="{StaticResource DefaultBorderThickness}" />
    <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
    <Setter Property="Margin" Value="1" />
    <Setter Property="MinHeight" Value="26" />
    <Setter Property="MinWidth" Value="30" />
    <Setter Property="Padding" Value="0" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="Button">
          <Border x:Name="Bd"
                  Background="{TemplateBinding Background}"
                  BorderBrush="{TemplateBinding BorderBrush}"
                  BorderThickness="{StaticResource DefaultBorderThickness}">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="MouseOver">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Bd" Storyboard.TargetProperty="Background">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonHoverBackgroundBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Bd" Storyboard.TargetProperty="BorderBrush">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonHoverBorderBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Pressed">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Bd" Storyboard.TargetProperty="Background">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonPressedBackgroundBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Bd" Storyboard.TargetProperty="BorderBrush">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonPressedBorderBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Disabled">
                  <Storyboard>
                    <DoubleAnimation  Duration="0" Storyboard.TargetName="Bd" Storyboard.TargetProperty="(UIElement.Opacity)" To="0.3" />
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="FocusStates">
                <VisualState x:Name="Focused" />
                <VisualState x:Name="Unfocused" />
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid>
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="24" />
                <ColumnDefinition Width="Auto" />
              </Grid.ColumnDefinitions>
              <Rectangle Grid.ColumnSpan="2" Fill="{StaticResource TransparentBrush}" />
              <Path x:Name="clearFilterGlyphStroke"
                    Width="16"
                    Height="12"
                    Margin="-4,0,0,0"
                    Data="{StaticResource RemoveFilterIcon}"
                    Fill="{StaticResource GlyphBackgroundBrush}"
                    Stretch="Fill"
                    UseLayoutRounding="False" />
              <ContentControl x:Name="contentControl"
                              Grid.Column="1"
                              Margin="-2,0,0,0"
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                              Foreground="{TemplateBinding Foreground}">
                <ContentPresenter x:Name="contentPresenter"
                                  Content="{TemplateBinding Content}"
                                  ContentTemplate="{TemplateBinding ContentTemplate}" />
              </ContentControl>
            </Grid>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!--  *********************************  FilterSelectionListBoxItem Style  *********************************  -->
  <Style x:Key="FilterSelectionListBoxItemStyle" TargetType="ListBoxItem">
    <Setter Property="Background" Value="{StaticResource TransparentBrush}" />
    <Setter Property="FontFamily" Value="{StaticResource FontFamily}" />
    <Setter Property="FontSize" Value="{StaticResource FontSize}" />
    <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
    <Setter Property="MinHeight" Value="26" />
    <Setter Property="Padding" Value="{StaticResource DefaultPadding}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="ListBoxItem">
          <Grid Background="{TemplateBinding Background}">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="MouseOver" />
                <VisualState x:Name="Disabled" />
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <ContentPresenter x:Name="contentPresenter"
                              Margin="{TemplateBinding Padding}"
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                              Content="{TemplateBinding Content}"
                              ContentTemplate="{TemplateBinding ContentTemplate}" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="VerticalContentAlignment" Value="Stretch" />
  </Style>

  <!--  *********************************  ClearFilterTextboxWatermarkButton Style  *********************************  -->
  <Style x:Key="ClearFilterTextboxWatermarkButtonStyle" TargetType="Button">
    <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
    <Setter Property="Padding" Value="3" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="Button">
          <Grid>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="MouseOver">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="CloseIcon" Storyboard.TargetProperty="Fill">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource GlyphHoverBackgroundBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Pressed">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="CloseIcon" Storyboard.TargetProperty="Fill">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource GlyphPressedBackgroundBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Disabled">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="CloseIcon" Storyboard.TargetProperty="Fill">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource GlyphDisabledBackgroundBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="FocusStates">
                <VisualState x:Name="Focused" />
                <VisualState x:Name="Unfocused" />
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Border Background="{StaticResource TransparentBrush}" />
            <Path x:Name="CloseIcon"
                  Width="8"
                  Height="8"
                  Data="{StaticResource ClearFilterIcon}"
                  Fill="{StaticResource GlyphBackgroundBrush}"
                  Stretch="Fill"
                  UseLayoutRounding="False" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!--  *********************************  FilterTextBoxWatermarked Style  *********************************  -->
  <Style x:Key="FilterTextBoxWatermarkedStyle" TargetType="igPrim:FilterTextBoxWatermarked">
    <Setter Property="FontFamily" Value="{StaticResource FontFamily}" />
    <Setter Property="FontSize" Value="{StaticResource FontSize}" />
    <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
    <Setter Property="MaxWidth" Value="Infinity" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igPrim:FilterTextBoxWatermarked">
          <Grid>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="WaterMarks">
                <VisualState x:Name="ShowWaterMark" />
                <VisualState x:Name="HideWaterMark">
                  <Storyboard>
                    <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="Watermark" Storyboard.TargetProperty="(UIElement.Opacity)">
                      <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0" />
                    </DoubleAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="border" Storyboard.TargetProperty="(UIElement.Visibility)">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Collapsed</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="ClearButtonStates">
                <VisualState x:Name="ShowClearButton">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="ClearButton" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="HideClearButton" />
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Rectangle x:Name="Bg"
                       Margin="0"
                       Fill="{StaticResource TextBoxBackgroundBrush}"
                       Stroke="{StaticResource TextBoxBorderBrush}"
                       StrokeThickness="{StaticResource DefaultStrokeThickness}"
                       RadiusX="{StaticResource RadiusXY}"
                       RadiusY="{StaticResource RadiusXY}"/>
            <Border x:Name="border"
                    Width="24"
                    Height="24"
                    HorizontalAlignment="Right"
                    VerticalAlignment="Center">
              <Path Width="12"
                    Height="13"
                    Data="{StaticResource SearchIcon}"
                    Fill="{StaticResource GlyphBackgroundBrush}"
                    Stretch="Fill"
                    UseLayoutRounding="False" />
            </Border>
            <Border Margin="0,0,30,0"
                    BorderThickness="{StaticResource DefaultBorderThickness}"
                    Padding="6,4"
                    CornerRadius="{StaticResource CornerRadius}">
              <TextBlock x:Name="Watermark"
                         Grid.Row="0"
                         VerticalAlignment="Center"
                         Foreground="{StaticResource WatermarkForegroundBrush}"
                         Text="{TemplateBinding Watermark}"
                         Style="{StaticResource TextBlockStyle}"/>
            </Border>
            <igPrim:FilterTextBox x:Name="FilterTextBox"
                                  Grid.Row="0"
                                  HorizontalAlignment="Stretch"
                                  DataContext="{Binding FilterSelectionControl, RelativeSource={RelativeSource TemplatedParent}}"
                                  Foreground="{TemplateBinding Foreground}"
                                  Padding="6,2,2,2"
                                  Text="{Binding FilterSelectionControl.FilterText, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                  Style="{StaticResource SearchTextBoxStyle}">
              <igBase:Commanding.Command>
                <igBase:XamGridFilterMenuFilterTextBoxCommandSource CommandType="Filter"
                                                                    EventName="TextChanged"
                                                                    FilterSelectionControl="{Binding SourceElement.DataContext, RelativeSource={RelativeSource Self}}" />
              </igBase:Commanding.Command>
            </igPrim:FilterTextBox>
            <Border Width="Auto"
               Height="Auto"
               Margin="0"
               HorizontalAlignment="Right"
               VerticalAlignment="Stretch"
               Padding="0">
              <Button x:Name="ClearButton"
                      Width="24"
                      Margin="2"
                      BorderThickness="{StaticResource DefaultBorderThickness}"
                      DataContext="{Binding FilterSelectionControl, RelativeSource={RelativeSource TemplatedParent}}"
                      Style="{StaticResource ClearFilterTextboxWatermarkButtonStyle}"
                      Visibility="Collapsed">
                <igBase:Commanding.Command>
                  <igBase:XamGridFilterMenuFilterTextBoxCommandSource CommandType="ClearFilterText"
                                                                      EventName="Click"
                                                                      FilterSelectionControl="{Binding SourceElement.DataContext, RelativeSource={RelativeSource Self}}" />
                </igBase:Commanding.Command>
              </Button>
            </Border>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style BasedOn="{StaticResource FilterTextBoxWatermarkedStyle}" TargetType="igPrim:FilterTextBoxWatermarked" />

  <!--  *********************************  CommonValidationToolTip Template2  *********************************  -->
  <ControlTemplate x:Key="CommonValidationToolTipTemplate2" TargetType="ToolTip">
    <Grid x:Name="Root"
          Margin="5,0"
          Opacity="0"
          RenderTransformOrigin="0,0">
      <Grid.RenderTransform>
        <TranslateTransform x:Name="Translation" X="-25" />
      </Grid.RenderTransform>
      <VisualStateManager.VisualStateGroups>
        <VisualStateGroup x:Name="OpenStates">
          <VisualStateGroup.Transitions>
            <VisualTransition GeneratedDuration="0" />
            <VisualTransition GeneratedDuration="0:0:0.2" To="Open">
              <Storyboard>
                <DoubleAnimation Duration="0:0:0.2" Storyboard.TargetName="Translation" Storyboard.TargetProperty="X" To="0">
                  <DoubleAnimation.EasingFunction>
                    <BackEase Amplitude=".3" EasingMode="EaseOut" />
                  </DoubleAnimation.EasingFunction>
                </DoubleAnimation>
                <DoubleAnimation Duration="0:0:0.2" Storyboard.TargetName="Root" Storyboard.TargetProperty="Opacity" To="1" />
              </Storyboard>
            </VisualTransition>
          </VisualStateGroup.Transitions>
          <VisualState x:Name="Closed">
            <Storyboard>
              <DoubleAnimation Duration="0" Storyboard.TargetName="Root" Storyboard.TargetProperty="Opacity" To="0" />
            </Storyboard>
          </VisualState>
          <VisualState x:Name="Open">
            <Storyboard>
              <DoubleAnimation Duration="0" Storyboard.TargetName="Translation" Storyboard.TargetProperty="X" To="0" />
              <DoubleAnimation Duration="0" Storyboard.TargetName="Root" Storyboard.TargetProperty="Opacity" To="1" />
            </Storyboard>
          </VisualState>
        </VisualStateGroup>
      </VisualStateManager.VisualStateGroups>
      <Border Margin="4,4,-4,-4"
              Background="{StaticResource ValidationToolTipTemplateShadowBrush}"
              CornerRadius="5"
              Opacity="0.02" />
      <Border Margin="3,3,-3,-3"
              Background="{StaticResource ValidationToolTipTemplateShadowBrush}"
              CornerRadius="4"
              Opacity="0.08" />
      <Border Margin="2,2,-2,-2"
              Background="{StaticResource ValidationToolTipTemplateShadowBrush}"
              CornerRadius="3"
              Opacity="0.15" />
      <Border Margin="1,1,-1,-1"
              Background="{StaticResource ValidationToolTipTemplateShadowBrush}"
              CornerRadius="2"
              Opacity="0.21" />
      <Border Background="{StaticResource ValidationErrorElement}" CornerRadius="0">
        <TextBlock MaxWidth="250"
                   Margin="8,4,8,4"
                   Foreground="{StaticResource ForegroundBrush}"
                   Text="{Binding (Validation.Errors)[0].ErrorContent}"
                   TextWrapping="Wrap"
                   UseLayoutRounding="false" />
      </Border>
    </Grid>
  </ControlTemplate>

  <!--  *********************************  FilterSelectionControl Style  *********************************  -->
  <Style x:Key="FilterSelectionControlStyle" TargetType="igPrim:FilterSelectionControl">
    <Setter Property="Background" Value="{StaticResource PopupBackgroundBrush}" />
    <Setter Property="BorderBrush" Value="{StaticResource PopupBorderBrush}" />
    <Setter Property="BorderThickness" Value="{StaticResource DefaultBorderThickness}" />
    <Setter Property="CheckBoxStyle" Value="{StaticResource CheckBoxStyle}" />
    <Setter Property="Margin" Value="0" />
    <Setter Property="Padding" Value="11,0,0,0" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igPrim:FilterSelectionControl">
          <Grid>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="SelectionBoxStates">
                <VisualState x:Name="ShowSelectionBox" />
                <VisualState x:Name="HideSelectionBox">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames BeginTime="0" Storyboard.TargetName="SelectAllCheckBox" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>
                            Collapsed
                          </Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames BeginTime="0" Storyboard.TargetName="SelectAllCheckBoxSeperator" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>
                            Collapsed
                          </Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames BeginTime="0" Storyboard.TargetName="itemsBox" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>
                            Collapsed
                          </Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="SelectionBoxWaterMark">
                <VisualState x:Name="ShowSelectionBoxWaterMark" />
                <VisualState x:Name="HideSelectionBoxWaterMark">
                  <Storyboard>
                    <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="ItemsBoxWatermark" Storyboard.TargetProperty="(UIElement.Opacity)">
                      <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0" />
                    </DoubleAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="AppendButtonVisibility">
                <VisualState x:Name="ShowAppendFilterButton" />
                <VisualState x:Name="HideAppendFilterButton">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="AppendFiltersCheckBox" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>
                            Collapsed
                          </Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="BusyStatus">
                <VisualState x:Name="Idle" />
                <VisualState x:Name="Busy">
                  <Storyboard RepeatBehavior="Forever">
                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="busyIndicator" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <DoubleAnimation d:IsOptimized="True" Duration="0:0:0.7" Storyboard.TargetName="busyIndicatorPath" Storyboard.TargetProperty="(UIElement.RenderTransform).(RotateTransform.Angle)" To="180" />
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="LimitItemsStatus">
                <VisualState x:Name="NotLimited" />
                <VisualState x:Name="Limited">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="limitedListIndicator" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Border x:Name="Bd"
                    Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}">
              <Grid>
                <Grid.RowDefinitions>
                  <!--  ClearFilters  -->
                  <RowDefinition Height="Auto" />
                  <!--  CustomFilterDialog  -->
                  <RowDefinition Height="Auto" />
                  <!--  The filter text box  -->
                  <RowDefinition Height="Auto" />
                  <!--  HorizontalRule  -->
                  <RowDefinition Height="Auto" />
                  <!--  SelectAll Checkbox  -->
                  <RowDefinition Height="Auto" />
                  <!--  Append filter checkbox  -->
                  <RowDefinition Height="Auto" />
                  <!--  FilterSelectionValues  -->
                  <RowDefinition Height="*" MinHeight="100" />
                  <!--  LimitedListIndicator  -->
                  <RowDefinition Height="Auto" />
                  <!--  SelectionButtons  -->
                  <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                  <!--  LeftVerticalBackground  -->
                  <ColumnDefinition MinWidth="24" MaxWidth="24" />
                  <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <!--  LeftVerticalBackground  -->
                <Border Grid.RowSpan="8"
                        Width="24"
                        HorizontalAlignment="Left"
                        VerticalAlignment="Stretch"
                        Background="{StaticResource MenuIconColumnBackgroundBrush}" />
                <!--  ClearFilters Control  -->
                <Button x:Name="clearButton"
                        Grid.ColumnSpan="2"
                        Padding="0"
                        Style="{StaticResource FilterSelectionItemStyle}">
                  <igBase:Commanding.Commands>
                    <igBase:CommandSourceCollection>
                      <igBase:FilterSelectionControlCommandSource CommandType="ClearSelectedItems" EventName="Click" />
                      <igBase:FilterSelectionControlCommandSource CommandType="AcceptChanges" EventName="Click" />
                      <igPrim:XamGridPopupCommandSource CommandType="ClosePopup" EventName="Click" />
                    </igBase:CommandSourceCollection>
                  </igBase:Commanding.Commands>
                  <Grid Background="{StaticResource TransparentBrush}">
                    <TextBlock Grid.Column="1"
                               Margin="0"
                               HorizontalAlignment="Stretch"
                               Style="{StaticResource TextBlockStyle}"
                               Text="{TemplateBinding ClearFiltersTextResolved}" />
                  </Grid>
                </Button>
                <CheckBox x:Name="hasFilterCheckBox"
                          Grid.Row="1"
                          Grid.Column="0"
                          HorizontalAlignment="Center"
                          VerticalAlignment="Center"
                          IsChecked="{Binding Path=HasFilters, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                          Style="{StaticResource FilterCheckBoxStyle}"
                          Visibility="{Binding Path=Cell.Column.FilterColumnSettings.FilterMenuCustomFilteringButtonVisibilityResolved, RelativeSource={RelativeSource TemplatedParent}}" />
                <!--  CustomFilterDialog Control  -->
                <igBase:XamMenu Grid.Row="1"
                                Grid.Column="1"
                                MinHeight="24"
                                HorizontalAlignment="Stretch"
                                IsEnabled="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ItemSourceSet}"
                                ItemsSource="{Binding Path=Cell.Column.FilterColumnSettings.FilterMenuOperands, RelativeSource={RelativeSource TemplatedParent}}"
                                MenuOrientation="Vertical"
                                Style="{StaticResource FilterMenuStyle}"
                                Tag="{Binding Path=Cell, RelativeSource={RelativeSource TemplatedParent}}"
                                Visibility="{Binding Path=Cell.Column.FilterColumnSettings.FilterMenuCustomFilteringButtonVisibilityResolved, RelativeSource={RelativeSource TemplatedParent}}">
                  <igBase:XamMenu.Resources>
                    <Style BasedOn="{StaticResource FilterCheckBoxStyle}" TargetType="CheckBox" />
                  </igBase:XamMenu.Resources>
                  <igBase:XamMenu.DefaultItemsContainer>
                    <StaticResource ResourceKey="RootFilterMenuCustomTemplate" />
                  </igBase:XamMenu.DefaultItemsContainer>
                </igBase:XamMenu>
                <igPrim:FilterTextBoxWatermarked x:Name="PART_FilterTextBoxWatermarked"
                                                 Grid.Row="2"
                                                 Grid.Column="1"
                                                 Margin="0,12,12,1"
                                                 HorizontalAlignment="Stretch"
                                                 FilterSelectionControl="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                                                 IsEnabled="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ItemSourceSet}"
                                                 Style="{StaticResource FilterTextBoxWatermarkedStyle}" />
                <!--  HorizontalRule  -->
                <Rectangle x:Name="SelectAllCheckBoxSeperator"
                           Grid.Row="3"
                           Grid.Column="1"
                           Height="1"
                           Margin="0,12,12,0"
                           VerticalAlignment="Top"
                           Fill="{StaticResource SeparatorBrush}" />
                <!--  SelectAll Checkbox  -->
                <CheckBox x:Name="SelectAllCheckBox"
                          Grid.Row="4"
                          Grid.Column="1"
                          Margin="0,6,12,0"
                          Style="{StaticResource CheckBoxStyle}" />
                <CheckBox x:Name="AppendFiltersCheckBox"
                          Grid.Row="5"
                          Grid.Column="1"
                          Margin="0,6,12,0"
                          Content="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=AppendFilterText}"
                          IsChecked="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=AppendFilters, Mode=TwoWay}"
                          Style="{StaticResource CheckBoxStyle}" />
                <CheckBox Grid.Row="6"
                          Grid.Column="0"
                          Margin="0,8,0,0"
                          HorizontalAlignment="Center"
                          VerticalAlignment="Top"
                          IsChecked="{Binding Path=HasCheckedItems, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                          Style="{StaticResource FilterCheckBoxStyle}" />
                <!--  FilterSelectionValues  -->
                <TextBlock x:Name="ItemsBoxWatermark"
                           Grid.Row="6"
                           Grid.Column="1"
                           Margin="0,-5,0,0"
                           HorizontalAlignment="Center"
                           VerticalAlignment="Center"
                           Opacity="0.15"
                           Padding="0"
                           Style="{StaticResource TextBlockStyle}"
                           Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=FilterBoxNoDataAvailable}" />
                <Grid Grid.Row="6"
                      Grid.Column="1"
                      MinWidth="200"
                      MinHeight="100"
                      Margin="0,12,12,12">
                  <ListBox x:Name="itemsBox"
                           Background="{StaticResource TransparentBrush}"
                           ItemContainerStyle="{StaticResource FilterSelectionListBoxItemStyle}"
                           ItemsSource="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=FilterableUniqueValues}"
                           Padding="0"
                           Style="{StaticResource ListBoxStyle}">
                    <ListBox.ItemTemplate>
                      <DataTemplate>
                        <CheckBox IsChecked="{Binding IsChecked, Mode=TwoWay}"
                                  IsThreeState="False"
                                  Style="{StaticResource CheckBoxStyle}">
                          <TextBlock Text="{Binding ContentString}" />
                        </CheckBox>
                      </DataTemplate>
                    </ListBox.ItemTemplate>
                  </ListBox>
                  <Grid x:Name="busyIndicator"
                        Background="{StaticResource FilterMenuBusyIndicatorBackgroundBrush}"
                        Opacity="0.66"
                        Visibility="Collapsed">
                    <StackPanel Margin="10"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center">
                      <Path x:Name="busyIndicatorPath"
                            Width="25"
                            Height="20"
                            Data="M7.2500005,16.333002 L21,22.582914 C21,22.582914 19.249714,23.58293 14.75,25.832844 C27.5,39.832409 36.5,24.832874 36.5,24.832874 C36.5,24.832874 36.500198,25.083141 43,28.332829 C23.25,53.832478 8,28.332829 8,28.332829 L0.5,31.582787 z M26.973215,0.50051785 C37.27507,0.58836842 44,11.833179 44,11.833179 L51.5,8.5832176 L44.75,23.833004 L31,17.583092 C31,17.583092 32.750286,16.583076 37.25,14.333162 C24.5,0.33359718 15.5,15.333131 15.5,15.333131 C15.5,15.333131 15.499802,15.082864 9,11.833179 C15.634766,3.2668896 21.761688,0.45607567 26.973215,0.50051785 z"
                            Fill="{StaticResource FilterMenuBusyIndicatorPathBackgroundBrush}"
                            RenderTransformOrigin="0.5,0.5"
                            Stretch="Fill"
                            StrokeThickness="0">
                        <Path.RenderTransform>
                          <RotateTransform />
                        </Path.RenderTransform>
                      </Path>
                      <TextBlock Margin="10,8,10,0"
                                 HorizontalAlignment="Center"
                                 VerticalAlignment="Center"
                                 Style="{StaticResource TextBlockStyle}"
                                 Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BusyText}" />
                    </StackPanel>
                  </Grid>
                </Grid>
                <!--  LimiteedListIndicator  -->
                <StackPanel x:Name="limitedListIndicator"
                            Grid.Row="7"
                            Grid.Column="1"
                            Margin="0,-6,6,12"
                            Visibility="Collapsed">
                  <TextBlock Foreground="{StaticResource FilterMenuNotAllItemsShowingForegroundBrush}"
                             Style="{StaticResource TextBlockStyle}"
                             Text="{TemplateBinding NotAllItemsShowingText}"
                             ToolTipService.ToolTip="{TemplateBinding NotAllItemsShowingTooltipText}" />
                </StackPanel>
                <!--  SelectionButtons  -->
                <StackPanel x:Name="selectionButtons"
                            Grid.Row="8"
                            Grid.Column="1"
                            Margin="0,0,12,12"
                            HorizontalAlignment="Right"
                            Orientation="Horizontal">
                  <Button x:Name="AcceptButton"
                          Width="73"
                          Margin="0,0,8,0"
                          Content="{TemplateBinding OKButtonText}"
                          IsEnabled="{Binding Path=CanFilter, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                          Style="{StaticResource ButtonStyle}">
                    <igBase:Commanding.Commands>
                      <igBase:CommandSourceCollection>
                        <igBase:FilterSelectionControlCommandSource CommandType="AcceptChanges" EventName="Click" />
                        <igPrim:XamGridPopupCommandSource CommandType="ClosePopup" EventName="Click" />
                      </igBase:CommandSourceCollection>
                    </igBase:Commanding.Commands>
                  </Button>
                  <Button x:Name="CancelButton"
                          Width="73"
                          Content="{TemplateBinding CancelButtonText}"
                          Style="{StaticResource ButtonStyle}">
                    <igBase:Commanding.Command>
                      <igPrim:XamGridPopupCommandSource CommandType="ClosePopup" EventName="Click" />
                    </igBase:Commanding.Command>
                  </Button>
                </StackPanel>
              </Grid>
            </Border>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style BasedOn="{StaticResource FilterSelectionControlStyle}" TargetType="igPrim:FilterSelectionControl" />

  <!--  *********************************  DateFilter dateTreeDataTemplate  *********************************  -->
  <igPrim:DateFilterHierarchicalDataTemplate x:Key="dateTreeDataTemplate" ItemsSource="{Binding Children}">
    <CheckBox IsChecked="{Binding IsChecked, Mode=TwoWay}" Style="{StaticResource CheckBoxStyle}">
      <TextBlock Text="{Binding ContentString}" />
    </CheckBox>
    <igPrim:DateFilterHierarchicalDataTemplate.ItemTemplate>
      <igPrim:DateFilterHierarchicalDataTemplate ItemsSource="{Binding Children}">
        <CheckBox IsChecked="{Binding IsChecked, Mode=TwoWay}" Style="{StaticResource CheckBoxStyle}">
          <TextBlock Text="{Binding ContentString}" />
        </CheckBox>
        <igPrim:DateFilterHierarchicalDataTemplate.ItemTemplate>
          <igPrim:DateFilterHierarchicalDataTemplate ItemsSource="{Binding Children}">
            <CheckBox IsChecked="{Binding IsChecked, Mode=TwoWay}" Style="{StaticResource CheckBoxStyle}">
              <TextBlock Text="{Binding ContentString}" />
            </CheckBox>
            <igPrim:DateFilterHierarchicalDataTemplate.ItemTemplate>
              <igPrim:DateFilterHierarchicalDataTemplate ItemsSource="{Binding Children}">
                <CheckBox IsChecked="{Binding IsChecked, Mode=TwoWay}" Style="{StaticResource CheckBoxStyle}">
                  <TextBlock Text="{Binding ContentString}" />
                </CheckBox>
                <igPrim:DateFilterHierarchicalDataTemplate.ItemTemplate>
                  <igPrim:DateFilterHierarchicalDataTemplate ItemsSource="{Binding Children}">
                    <CheckBox IsChecked="{Binding IsChecked, Mode=TwoWay}" Style="{StaticResource CheckBoxStyle}">
                      <TextBlock Text="{Binding ContentString}" />
                    </CheckBox>
                  </igPrim:DateFilterHierarchicalDataTemplate>
                </igPrim:DateFilterHierarchicalDataTemplate.ItemTemplate>
              </igPrim:DateFilterHierarchicalDataTemplate>
            </igPrim:DateFilterHierarchicalDataTemplate.ItemTemplate>
          </igPrim:DateFilterHierarchicalDataTemplate>
        </igPrim:DateFilterHierarchicalDataTemplate.ItemTemplate>
      </igPrim:DateFilterHierarchicalDataTemplate>
    </igPrim:DateFilterHierarchicalDataTemplate.ItemTemplate>
  </igPrim:DateFilterHierarchicalDataTemplate>

  <!--  *********************************  DateFilter Converters  *********************************  -->
  <igPrim:DateFilterTypeConverter x:Key="dateFilterTypeConverter" />

  <!--  *********************************  CommonValidationToolTip Template  *********************************  -->
  <ControlTemplate x:Key="CommonValidationToolTipTemplate" TargetType="ToolTip">
    <Grid x:Name="Root"
          Margin="5,0"
          Opacity="0"
          RenderTransformOrigin="0,0">
      <Grid.RenderTransform>
        <TranslateTransform x:Name="Translation" X="-25" />
      </Grid.RenderTransform>
      <VisualStateManager.VisualStateGroups>
        <VisualStateGroup Name="OpenStates">
          <VisualStateGroup.Transitions>
            <VisualTransition GeneratedDuration="0" />
            <VisualTransition GeneratedDuration="0:0:0.2" To="Open">
              <Storyboard>
                <DoubleAnimation Duration="0:0:0.2" Storyboard.TargetName="Translation" Storyboard.TargetProperty="X" To="0">
                  <DoubleAnimation.EasingFunction>
                    <BackEase Amplitude=".3" EasingMode="EaseOut" />
                  </DoubleAnimation.EasingFunction>
                </DoubleAnimation>
                <DoubleAnimation Duration="0:0:0.2" Storyboard.TargetName="Root" Storyboard.TargetProperty="Opacity" To="1" />
              </Storyboard>
            </VisualTransition>
          </VisualStateGroup.Transitions>
          <VisualState x:Name="Closed">
            <Storyboard>
              <DoubleAnimation Duration="0" Storyboard.TargetName="Root" Storyboard.TargetProperty="Opacity" To="0" />
            </Storyboard>
          </VisualState>
          <VisualState x:Name="Open">
            <Storyboard>
              <DoubleAnimation Duration="0" Storyboard.TargetName="Translation" Storyboard.TargetProperty="X" To="0" />
              <DoubleAnimation Duration="0" Storyboard.TargetName="Root" Storyboard.TargetProperty="Opacity" To="1" />
            </Storyboard>
          </VisualState>
        </VisualStateGroup>
      </VisualStateManager.VisualStateGroups>
      <Border Margin="4,4,-4,-4"
              Background="{StaticResource ValidationToolTipTemplateShadowBrush}"
              CornerRadius="5"
              Opacity="0.02" />
      <Border Margin="3,3,-3,-3"
              Background="{StaticResource ValidationToolTipTemplateShadowBrush}"
              CornerRadius="4"
              Opacity="0.08" />
      <Border Margin="2,2,-2,-2"
              Background="{StaticResource ValidationToolTipTemplateShadowBrush}"
              CornerRadius="3"
              Opacity="0.15" />
      <Border Margin="1,1,-1,-1"
              Background="{StaticResource ValidationToolTipTemplateShadowBrush}"
              CornerRadius="2"
              Opacity="0.21" />
      <Border Background="{StaticResource ValidationErrorElement}">
        <TextBlock MaxWidth="250"
                   Margin="8,4,8,4"
                   Foreground="{StaticResource ForegroundBrush}"
                   Text="{Binding (Validation.Errors)[0].ErrorContent}"
                   TextWrapping="Wrap"
                   UseLayoutRounding="false" />
      </Border>
    </Grid>
  </ControlTemplate>

  <!--  *********************************  DateFilterTreeViewItem Style  *********************************  -->
  <Style x:Key="DateFilterTreeViewItemStyle" TargetType="igPrim:DateFilterTreeViewItem">
    <Setter Property="Background" Value="{StaticResource DateFilterTreeViewItemBackgroundBrush}" />
    <Setter Property="BorderBrush" Value="{StaticResource DateFilterTreeViewItemBorderBrush}" />
    <Setter Property="BorderThickness" Value="{StaticResource DefaultBorderThickness}" />
    <Setter Property="Cursor" Value="Arrow" />
    <Setter Property="FontFamily" Value="{StaticResource FontFamily}" />
    <Setter Property="FontSize" Value="{StaticResource FontSize}" />
    <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
    <Setter Property="HorizontalContentAlignment" Value="Left" />
    <Setter Property="IsTabStop" Value="True" />
    <Setter Property="Margin" Value="0 1 0 0" />
    <Setter Property="MinHeight" Value="26" />
    <Setter Property="Padding" Value="3" />
    <Setter Property="VerticalContentAlignment" Value="Top" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igPrim:DateFilterTreeViewItem">
          <Grid Background="{x:Null}">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="MouseOver" />
                <VisualState x:Name="Pressed" />
                <VisualState x:Name="Disabled">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="Header" Storyboard.TargetProperty="Foreground">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource GlyphDisabledBackgroundBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="SelectionStates">
                <VisualState x:Name="Unselected" />
                <VisualState x:Name="Selected">
                  <Storyboard>
                    <DoubleAnimation Duration="0" Storyboard.TargetName="Selection" Storyboard.TargetProperty="Opacity" To="1" />
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="SelectedInactive">
                  <Storyboard>
                    <DoubleAnimation Duration="0" Storyboard.TargetName="Selection" Storyboard.TargetProperty="Opacity" To=".2" />
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="HasItemsStates">
                <VisualState x:Name="HasItems" />
                <VisualState x:Name="NoItems">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ExpanderButton" Storyboard.TargetProperty="(UIElement.Visibility)">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>
                            Collapsed
                          </Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="ExpansionStates">
                <VisualState x:Name="Collapsed" />
                <VisualState x:Name="Expanded">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ItemsHost" Storyboard.TargetProperty="(UIElement.Visibility)">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>
                            Visible
                          </Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="ValidationStates">
                <VisualState x:Name="Valid" />
                <VisualState x:Name="InvalidUnfocused">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Validation" Storyboard.TargetProperty="(UIElement.Visibility)">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>
                            Visible
                          </Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="InvalidFocused">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Validation" Storyboard.TargetProperty="(UIElement.Visibility)">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>
                            Visible
                          </Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ValidationToolTip" Storyboard.TargetProperty="IsOpen">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <System:Boolean>
                            True
                          </System:Boolean>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="FocusStates">
                <VisualState x:Name="Focused" />
                <VisualState x:Name="Unfocused" />
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid.RowDefinitions>
              <RowDefinition Height="Auto" />
              <RowDefinition Height="*" />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="24" />
              <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <ToggleButton x:Name="ExpanderButton"
                          HorizontalAlignment="Stretch"
                          VerticalAlignment="Stretch"
                          IsTabStop="False">
              <ToggleButton.Template>
                <ControlTemplate TargetType="ToggleButton">
                  <Grid x:Name="Root" Background="{StaticResource TransparentBrush}">
                    <VisualStateManager.VisualStateGroups>
                      <VisualStateGroup x:Name="CommonStates">
                        <VisualState x:Name="Normal" />
                        <VisualState x:Name="MouseOver">
                          <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="UncheckedVisual" Storyboard.TargetProperty="Fill">
                              <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource GlyphHoverBackgroundBrush}" />
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="CheckedVisual" Storyboard.TargetProperty="Fill">
                              <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource GlyphHoverBackgroundBrush}" />
                            </ObjectAnimationUsingKeyFrames>
                          </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Disabled">
                          <Storyboard>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ExpansionIndicator" Storyboard.TargetProperty="Opacity">
                              <EasingDoubleKeyFrame KeyTime="0" Value="0.35" />
                            </DoubleAnimationUsingKeyFrames>
                          </Storyboard>
                        </VisualState>
                      </VisualStateGroup>
                      <VisualStateGroup x:Name="CheckStates">
                        <VisualState x:Name="Unchecked" />
                        <VisualState x:Name="Checked">
                          <Storyboard>
                            <DoubleAnimation Duration="0" Storyboard.TargetName="UncheckedVisual" Storyboard.TargetProperty="Opacity" To="0" />
                            <DoubleAnimation Duration="0" Storyboard.TargetName="CheckedVisual" Storyboard.TargetProperty="Opacity" To="1" />
                          </Storyboard>
                        </VisualState>
                      </VisualStateGroup>
                    </VisualStateManager.VisualStateGroups>
                    <Grid x:Name="ExpansionIndicator"
                          Margin="6,10,10,10"
                          HorizontalAlignment="Right">
                      <Rectangle Margin="-3,0" Fill="{StaticResource TransparentBrush}" />
                      <Path x:Name="UncheckedVisual"
                            Width="6"
                            Height="10"
                            HorizontalAlignment="Right"
                            VerticalAlignment="Center"
                            Data="M0,0 L6,5 L0,10 z"
                            Fill="{StaticResource GlyphBackgroundBrush}" />
                      <Path x:Name="CheckedVisual"
                            Width="10"
                            Height="6"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Data="M0,0 L10,0 L5,6 z"
                            Fill="{StaticResource GlyphPressedBackgroundBrush}"
                            Opacity="0"
                            StrokeLineJoin="Miter" />
                    </Grid>
                  </Grid>
                </ControlTemplate>
              </ToggleButton.Template>
            </ToggleButton>
            <Rectangle x:Name="Selection"
                       Grid.Column="1"
                       Fill="{StaticResource DateFilterTreeViewItemSelectedBackgroundBrush}"
                       IsHitTestVisible="False"
                       Opacity="0"
                       Stroke="{StaticResource DateFilterTreeViewItemSelectedBorderBrush}"
                        StrokeThickness="{StaticResource DefaultStrokeThickness}" />
            <Button x:Name="Header"
                    Grid.Column="1"
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                    Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    ClickMode="Hover"
                    Cursor="{TemplateBinding Cursor}"
                    Foreground="{TemplateBinding Foreground}"
                    IsTabStop="False">
              <Button.Template>
                <ControlTemplate TargetType="Button">
                  <Grid Background="{TemplateBinding Background}">
                    <VisualStateManager.VisualStateGroups>
                      <VisualStateGroup x:Name="CommonStates">
                        <VisualState x:Name="Normal" />
                        <VisualState x:Name="Pressed">
                          <Storyboard>
                            <DoubleAnimation Duration="0" Storyboard.TargetName="Selected" Storyboard.TargetProperty="Opacity" To="1" />
                          </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Disabled">
                          <Storyboard>
                            <DoubleAnimation Duration="0" Storyboard.TargetName="Content" Storyboard.TargetProperty="Opacity" To=".55" />
                          </Storyboard>
                        </VisualState>
                        <VisualState x:Name="MouseOver">
                          <Storyboard>
                            <DoubleAnimation Duration="0" Storyboard.TargetName="Hover" Storyboard.TargetProperty="Opacity" To="1" />
                          </Storyboard>
                        </VisualState>
                      </VisualStateGroup>
                    </VisualStateManager.VisualStateGroups>
                    <Border x:Name="Hover"
                            Background="{StaticResource DateFilterTreeViewItemSelectedBackgroundBrush}"
                            BorderBrush="{StaticResource DateFilterTreeViewItemSelectedBorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Opacity="0" />
                    <Border x:Name="Selected"
                            Background="{StaticResource DateFilterTreeViewItemHoverBackgroundBrush}"
                            BorderBrush="{StaticResource DateFilterTreeViewItemHoverBorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Opacity="0" />
                    <ContentPresenter x:Name="Content"
                                      Margin="{TemplateBinding Padding}"
                                      HorizontalAlignment="Left"
                                      Content="{TemplateBinding Content}"
                                      ContentTemplate="{TemplateBinding ContentTemplate}"
                                      Cursor="{TemplateBinding Cursor}" />
                  </Grid>
                </ControlTemplate>
              </Button.Template>
              <ContentPresenter Content="{TemplateBinding Header}" ContentTemplate="{TemplateBinding HeaderTemplate}" />
            </Button>
            <ItemsPresenter x:Name="ItemsHost"
                            Grid.Row="1"
                            Grid.Column="1"
                            Grid.ColumnSpan="2"
                            Visibility="Collapsed" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style BasedOn="{StaticResource DateFilterTreeViewItemStyle}" TargetType="igPrim:DateFilterTreeViewItem" />

  <!--  *********************************  DateFilterTreeView Style  *********************************  -->
  <Style x:Key="DateFilterTreeViewStyle" TargetType="igPrim:DateFilterTreeView">
    <Setter Property="Background" Value="{StaticResource DateFilterTreeViewBackgroundBrush}" />
    <Setter Property="BorderBrush" Value="{StaticResource DateFilterTreeViewBorderBrush}" />
    <Setter Property="BorderThickness" Value="{StaticResource DefaultBorderThickness}" />
    <Setter Property="Cursor" Value="Arrow" />
    <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
    <Setter Property="HorizontalContentAlignment" Value="Left" />
    <Setter Property="IsTabStop" Value="True" />
    <Setter Property="Padding" Value="1" />
    <Setter Property="VerticalContentAlignment" Value="Top" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igPrim:DateFilterTreeView">
          <Grid>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="ValidationStates">
                <VisualState x:Name="Valid" />
                <VisualState x:Name="InvalidUnfocused">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Validation" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="Visible" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="InvalidFocused">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Validation" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="Visible" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ValidationToolTip" Storyboard.TargetProperty="IsOpen">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <System:Boolean>True</System:Boolean>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
              <Border Margin="1"
                      Background="{TemplateBinding Background}"
                      Padding="{TemplateBinding Padding}">
                <ScrollViewer x:Name="ScrollViewer"
                              Background="{x:Null}"
                              BorderBrush="Transparent"
                              BorderThickness="0"
                              HorizontalScrollBarVisibility="Auto"
                              IsTabStop="False"
                              Style="{StaticResource ScrollViewerStyle}"
                              VerticalScrollBarVisibility="Auto">
                  <ItemsPresenter />
                </ScrollViewer>
              </Border>
            </Border>
            <Border x:Name="Validation"
                    Grid.Column="1"
                    BorderBrush="{StaticResource ValidationErrorElement}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    Visibility="Collapsed">
              <ToolTipService.ToolTip>
                <ToolTip x:Name="ValidationToolTip"
                         DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                         IsHitTestVisible="True"
                         Placement="Right"
                         PlacementTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                         Template="{StaticResource CommonValidationToolTipTemplate2}" />
              </ToolTipService.ToolTip>
              <Grid Width="10"
                    Height="10"
                    Margin="0,-4,-4,0"
                    HorizontalAlignment="Right"
                    VerticalAlignment="Top"
                    Background="Transparent">
                <Path Margin="-1,3,0,0"
                      Data="M 1,0 L6,0 A 2,2 90 0 1 8,2 L8,7 Z"
                      Fill="{StaticResource ValidationErrorElement}" />
              </Grid>
            </Border>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!--  *********************************  DateFilter ComboBox Style  *********************************  -->
  <Style x:Key="DateFilterComboBoxStyle" BasedOn="{StaticResource ComboBoxStyle}" TargetType="ComboBox" />

  <!--  *********************************  DateFilterSelectionControl Style  *********************************  -->
  <Style x:Key="DateFilterSelectionControlStyle" TargetType="igPrim:DateFilterSelectionControl">
    <Setter Property="Background" Value="{StaticResource PopupBackgroundBrush}" />
    <Setter Property="BorderBrush" Value="{StaticResource PopupBorderBrush}" />
    <Setter Property="BorderThickness" Value="{StaticResource DefaultBorderThickness}" />
    <Setter Property="CheckBoxStyle" Value="{StaticResource CheckBoxStyle}" />
    <Setter Property="DateFilterHierarchicalDataTemplate" Value="{StaticResource dateTreeDataTemplate}" />
    <Setter Property="Margin" Value="0" />
    <Setter Property="Padding" Value="11,0,0,0" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igPrim:DateFilterSelectionControl">
          <Grid>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="SelectionBoxStates">
                <VisualState x:Name="ShowSelectionBox" />
                <VisualState x:Name="HideSelectionBox">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames BeginTime="0" Storyboard.TargetName="SelectAllCheckBox" Storyboard.TargetProperty="(UIElement.Visibility)">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames BeginTime="0" Storyboard.TargetName="SelectAllCheckBoxSeperator" Storyboard.TargetProperty="(UIElement.Visibility)">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames BeginTime="0" Storyboard.TargetName="ItemsBox" Storyboard.TargetProperty="(UIElement.Visibility)">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="SelectionBoxWaterMark">
                <VisualState x:Name="ShowSelectionBoxWaterMark" />
                <VisualState x:Name="HideSelectionBoxWaterMark">
                  <Storyboard>
                    <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="ItemsBoxWatermark" Storyboard.TargetProperty="(UIElement.Opacity)">
                      <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0" />
                    </DoubleAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="AppendButtonVisibility">
                <VisualState x:Name="ShowAppendFilterButton">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="AppendFiltersCheckBox" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>
                            Visible
                          </Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="HideAppendFilterButton" />
              </VisualStateGroup>
              <VisualStateGroup x:Name="BusyStatus">
                <VisualState x:Name="Idle" />
                <VisualState x:Name="Busy">
                  <Storyboard RepeatBehavior="Forever">
                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="busyIndicator" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <DoubleAnimation d:IsOptimized="True" Duration="0:0:0.7" Storyboard.TargetName="busyIndicatorPath" Storyboard.TargetProperty="(UIElement.RenderTransform).(RotateTransform.Angle)" To="180" />
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="LimitItemsStatus">
                <VisualState x:Name="NotLimited" />
                <VisualState x:Name="Limited">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="limitedListIndicator" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Border x:Name="Bd"
                    Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    Padding="1">
              <Grid>
                <Grid.RowDefinitions>
                  <!--  ClearFilters  -->
                  <RowDefinition Height="Auto" />
                  <!--  CustomFilterDialog  -->
                  <RowDefinition Height="Auto" />
                  <!--  Filter TextBox  -->
                  <RowDefinition Height="Auto" />
                  <!--  HorizontalRule  -->
                  <RowDefinition Height="Auto" />
                  <!--  SelectAll Checkbox  -->
                  <RowDefinition Height="Auto" />
                  <!--  Append filter checkbox  -->
                  <RowDefinition Height="Auto" />
                  <!--  FilterSelectionValues  -->
                  <RowDefinition Height="*" MinHeight="100" />
                  <!--  LimiteedListIndicator  -->
                  <RowDefinition Height="Auto" />
                  <!--  SelectionButtons  -->
                  <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                  <!--  LeftVerticalBackground  -->
                  <ColumnDefinition MinWidth="24" MaxWidth="24" />
                  <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <!--  LeftVerticalBackground  -->
                <Border Grid.RowSpan="8"
                        Width="24"
                        Background="{StaticResource MenuIconColumnBackgroundBrush}" />
                <!--  ClearFilters Control  -->
                <Button x:Name="clearButton"
                        Grid.ColumnSpan="2"
                        HorizontalAlignment="Stretch"
                        Padding="0"
                        Style="{StaticResource FilterSelectionItemStyle}">
                  <igBase:Commanding.Commands>
                    <igBase:CommandSourceCollection>
                      <igBase:FilterSelectionControlCommandSource CommandType="ClearSelectedItems" EventName="Click" />
                      <igBase:FilterSelectionControlCommandSource CommandType="AcceptChanges" EventName="Click" />
                      <igPrim:XamGridPopupCommandSource CommandType="ClosePopup" EventName="Click" />
                    </igBase:CommandSourceCollection>
                  </igBase:Commanding.Commands>
                  <Grid Background="{StaticResource TransparentBrush}">
                    <TextBlock Grid.Column="1"
                               Margin="0"
                               HorizontalAlignment="Stretch"
                               Style="{StaticResource TextBlockStyle}"
                               Text="{TemplateBinding ClearFiltersTextResolved}" />
                  </Grid>
                </Button>
                <CheckBox x:Name="hasFilterCheckBox"
                          Grid.Row="1"
                          Grid.Column="0"
                          HorizontalAlignment="Center"
                          VerticalAlignment="Center"
                          IsChecked="{Binding Path=HasFilters, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                          Style="{StaticResource FilterCheckBoxStyle}"
                          Visibility="{Binding Path=Cell.Column.FilterColumnSettings.FilterMenuCustomFilteringButtonVisibilityResolved, RelativeSource={RelativeSource TemplatedParent}}" />
                <!--  CustomFilterDialog Control  -->
                <igBase:XamMenu x:Name="filtersMenu"
                                Grid.Row="1"
                                Grid.Column="1"
                                MinHeight="24"
                                HorizontalAlignment="Stretch"
                                IsEnabled="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ItemSourceSet}"
                                ItemsSource="{Binding Path=Cell.Column.FilterColumnSettings.FilterMenuOperands, RelativeSource={RelativeSource TemplatedParent}}"
                                MenuOrientation="Vertical"
                                Style="{StaticResource FilterMenuStyle}"
                                Tag="{Binding Path=Cell, RelativeSource={RelativeSource TemplatedParent}}"
                                Visibility="{Binding Path=Cell.Column.FilterColumnSettings.FilterMenuCustomFilteringButtonVisibilityResolved, RelativeSource={RelativeSource TemplatedParent}}">
                  <igBase:XamMenu.Resources>
                    <Style BasedOn="{StaticResource FilterCheckBoxStyle}" TargetType="CheckBox" />
                  </igBase:XamMenu.Resources>
                  <igBase:XamMenu.DefaultItemsContainer>
                    <StaticResource ResourceKey="RootFilterMenuCustomTemplate" />
                  </igBase:XamMenu.DefaultItemsContainer>
                </igBase:XamMenu>
                <Grid Grid.Row="2"
                      Grid.Column="1"
                      Margin="0,12,12,0">
                  <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" MinWidth="150" />
                    <ColumnDefinition Width="Auto" MinWidth="100" />
                  </Grid.ColumnDefinitions>
                  <igPrim:FilterTextBoxWatermarked Margin="0,0,8,0"
                                                   HorizontalAlignment="Stretch"
                                                   FilterSelectionControl="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                                                   IsEnabled="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ItemSourceSet}"
                                                   Style="{StaticResource FilterTextBoxWatermarkedStyle}"
                                                   Watermark="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=DateFilterObjectTypeItem, Converter={StaticResource dateFilterTypeConverter}}" />
                  <ComboBox x:Name="dateFilterType"
                            Grid.Column="1"
                            Margin="0"
                            DisplayMemberPath="Name"
                            IsEnabled="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ItemSourceSet}"
                            ItemsSource="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=DateFilterTypeList}"
                            SelectedItem="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=DateFilterObjectTypeItem, Mode=TwoWay}"
                            Style="{StaticResource DateFilterComboBoxStyle}" />
                </Grid>
                <!--  HorizontalRule  -->
                <Rectangle x:Name="SelectAllCheckBoxSeperator"
                           Grid.Row="3"
                           Grid.Column="1"
                           Height="1"
                           Margin="0,12,12,0"
                           VerticalAlignment="Top"
                           Fill="{StaticResource SeparatorBrush}" />
                <!--  SelectAll Checkbox  -->
                <CheckBox x:Name="SelectAllCheckBox"
                          Grid.Row="4"
                          Grid.Column="1"
                          Margin="0,6,12,0"
                          Style="{StaticResource CheckBoxStyle}" />
                <CheckBox x:Name="AppendFiltersCheckBox"
                          Grid.Row="5"
                          Grid.Column="1"
                          Margin="-6,6,12,0"
                          Content="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=AppendFilterText}"
                          IsChecked="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=AppendFilters, Mode=TwoWay}"
                          Style="{StaticResource CheckBoxStyle}"
                          Visibility="Collapsed" />
                <CheckBox Grid.Row="6"
                          Grid.Column="0"
                          Margin="0,8,0,0"
                          HorizontalAlignment="Center"
                          VerticalAlignment="Top"
                          IsChecked="{Binding Path=HasCheckedItems, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                          Style="{StaticResource FilterCheckBoxStyle}" />
                <TextBlock x:Name="ItemsBoxWatermark"
                           Grid.Row="6"
                           Grid.Column="1"
                           Margin="0,-5,0,0"
                           HorizontalAlignment="Center"
                           VerticalAlignment="Center"
                           Foreground="{StaticResource ItemsBoxWatermarkForegroundBrush}"
                           Opacity="0.15"
                           Padding="0"
                           Style="{StaticResource TextBlockStyle}"
                           Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=FilterBoxNoDataAvailable}" />
                <!--  FilterSelectionValues  -->
                <Grid Grid.Row="6"
                      Grid.Column="1"
                      MinWidth="200"
                      MinHeight="100"
                      Margin="0,12,12,12">
                  <igPrim:DateFilterTreeView x:Name="ItemsBox"
                                             ItemTemplate="{TemplateBinding DateFilterHierarchicalDataTemplate}"
                                             ItemsSource="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=FilterableUniqueValues}"
                                             Padding="0"
                                             Style="{StaticResource DateFilterTreeViewStyle}">
                    <igPrim:DateFilterTreeView.Resources>
                      <Style BasedOn="{StaticResource ScrollViewerStyle}" TargetType="ScrollViewer" />
                    </igPrim:DateFilterTreeView.Resources>
                  </igPrim:DateFilterTreeView>
                  <Grid x:Name="busyIndicator"
                        Background="{StaticResource FilterMenuBusyIndicatorBackgroundBrush}"
                        Opacity="0.66"
                        Visibility="Collapsed">
                    <StackPanel Margin="10"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center">
                      <Path x:Name="busyIndicatorPath"
                            Width="25"
                            Height="20"
                            Data="M7.2500005,16.333002 L21,22.582914 C21,22.582914 19.249714,23.58293 14.75,25.832844 C27.5,39.832409 36.5,24.832874 36.5,24.832874 C36.5,24.832874 36.500198,25.083141 43,28.332829 C23.25,53.832478 8,28.332829 8,28.332829 L0.5,31.582787 z M26.973215,0.50051785 C37.27507,0.58836842 44,11.833179 44,11.833179 L51.5,8.5832176 L44.75,23.833004 L31,17.583092 C31,17.583092 32.750286,16.583076 37.25,14.333162 C24.5,0.33359718 15.5,15.333131 15.5,15.333131 C15.5,15.333131 15.499802,15.082864 9,11.833179 C15.634766,3.2668896 21.761688,0.45607567 26.973215,0.50051785 z"
                            Fill="{StaticResource FilterMenuBusyIndicatorPathBackgroundBrush}"
                            RenderTransformOrigin="0.5,0.5"
                            Stretch="Fill"
                            StrokeThickness="0">
                        <Path.RenderTransform>
                          <RotateTransform />
                        </Path.RenderTransform>
                      </Path>
                      <TextBlock Margin="10,8,10,0"
                                 HorizontalAlignment="Center"
                                 VerticalAlignment="Center"
                                 Style="{StaticResource TextBlockStyle}"
                                 Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BusyText}" />
                    </StackPanel>
                  </Grid>
                </Grid>
                <!--  LimiteedListIndicator  -->
                <StackPanel x:Name="limitedListIndicator"
                            Grid.Row="7"
                            Grid.Column="1"
                            Margin="0,-6,6,12"
                            Visibility="Collapsed">
                  <TextBlock Foreground="{StaticResource FilterMenuNotAllItemsShowingForegroundBrush}"
                             Style="{StaticResource TextBlockStyle}"
                             Text="{TemplateBinding NotAllItemsShowingText}"
                             ToolTipService.ToolTip="{TemplateBinding NotAllItemsShowingTooltipText}" />
                </StackPanel>
                <!--  SelectionButtons  -->
                <StackPanel x:Name="selectionButtons"
                            Grid.Row="8"
                            Grid.Column="1"
                            Margin="0,0,12,12"
                            HorizontalAlignment="Right"
                            Orientation="Horizontal">
                  <Button x:Name="AcceptButton"
                          Width="73"
                          Margin="0,0,8,0"
                          Content="{TemplateBinding OKButtonText}"
                          IsEnabled="{Binding Path=CanFilter, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                          Style="{StaticResource ButtonStyle}">
                    <igBase:Commanding.Commands>
                      <igBase:CommandSourceCollection>
                        <igBase:FilterSelectionControlCommandSource CommandType="AcceptChanges" EventName="Click" />
                        <igPrim:XamGridPopupCommandSource CommandType="ClosePopup" EventName="Click" />
                      </igBase:CommandSourceCollection>
                    </igBase:Commanding.Commands>
                  </Button>
                  <Button x:Name="CancelButton"
                          Width="73"
                          Content="{TemplateBinding CancelButtonText}"
                          Style="{StaticResource ButtonStyle}">
                    <igBase:Commanding.Commands>
                      <igBase:CommandSourceCollection>
                        <igPrim:XamGridPopupCommandSource CommandType="ClosePopup" EventName="Click" />
                      </igBase:CommandSourceCollection>
                    </igBase:Commanding.Commands>
                  </Button>
                </StackPanel>
              </Grid>
            </Border>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style BasedOn="{StaticResource DateFilterSelectionControlStyle}" TargetType="igPrim:DateFilterSelectionControl" />

  <!--  *********************************  DataBarControl Style  *********************************  -->
  <Style x:Key="DataBarControlStyle" TargetType="igPrim:DataBarControl">
    <Setter Property="BarHeight" Value="18" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igPrim:DataBarControl">
          <Grid>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="DataBarDisplay">
                <VisualState x:Name="UnidirectionalBarLeftToRight">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0" Storyboard.TargetName="UnidirectionalDataBar" Storyboard.TargetProperty="(UIElement.Visibility)">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>
                            Visible
                          </Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="UnidirectionalBarRightToLeft">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0" Storyboard.TargetName="UnidirectionalDataBar" Storyboard.TargetProperty="(UIElement.Visibility)">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>
                            Visible
                          </Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0" Storyboard.TargetName="UnidirectionalDataBarRectangle" Storyboard.TargetProperty="(Grid.Column)">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="1" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="BidirectionalBar">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0" Storyboard.TargetName="BidirectionalDataBar" Storyboard.TargetProperty="(UIElement.Visibility)">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>
                            Visible
                          </Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="None" />
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid x:Name="UnidirectionalDataBar"
                  Height="{TemplateBinding BarHeight}"
                  Visibility="Collapsed">
              <Grid.ColumnDefinitions>
                <ColumnDefinition x:Name="UniDataBar" Width="*" />
                <ColumnDefinition x:Name="UniDataBarSpacer" Width="*" />
              </Grid.ColumnDefinitions>
              <Rectangle x:Name="UnidirectionalDataBarRectangle"
                         Grid.Column="0"
                         Fill="{TemplateBinding UnidirectionalDataBarBrush}" />
            </Grid>
            <Grid x:Name="BidirectionalDataBar"
                  Height="{TemplateBinding BarHeight}"
                  Visibility="Collapsed">
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="*" />
              </Grid.ColumnDefinitions>
              <Grid Grid.Column="0">
                <Grid.ColumnDefinitions>
                  <ColumnDefinition x:Name="BiNegativeColumnSpacer" Width="*" />
                  <ColumnDefinition x:Name="BiNegativeColumn" Width="*" />
                </Grid.ColumnDefinitions>
                <Rectangle x:Name="NegativeDataBar"
                           Grid.Column="1"
                           HorizontalAlignment="Stretch"
                           Fill="{TemplateBinding NegativeValueBarBrush}" />
              </Grid>
              <Grid Grid.Column="1">
                <Grid.ColumnDefinitions>
                  <ColumnDefinition x:Name="BiPositiveColumn" Width="*" />
                  <ColumnDefinition x:Name="BiPositiveColumnSpacer" Width="*" />
                </Grid.ColumnDefinitions>
                <Rectangle x:Name="PositiveDataBar"
                           Grid.Column="0"
                           HorizontalAlignment="Stretch"
                           Fill="{TemplateBinding PositiveValueBarBrush}" />
              </Grid>
            </Grid>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style BasedOn="{StaticResource DataBarControlStyle}" TargetType="igPrim:DataBarControl" />

  <!--  *********************************  ConditionalFormattingCellControl Style  *********************************  -->
  <Style x:Key="ConditionalFormattingCellControlStyle" TargetType="ig:ConditionalFormattingCellControl">
    <Setter Property="AltBackground" Value="{StaticResource CellItemAltBackgroundBrush}" />
    <Setter Property="Background" Value="{StaticResource CellItemBackgroundBrush}" />
    <Setter Property="BarBrush" Value="{StaticResource ConditionalFormattingCellPositiveBarBrush}" />
    <Setter Property="BorderBrush" Value="{StaticResource CellItemBorderBrush}" />
    <Setter Property="BorderThickness" Value="{StaticResource CellBorderThickness}" />
    <Setter Property="FontFamily" Value="{StaticResource FontFamily}" />
    <Setter Property="FontSize" Value="{StaticResource FontSize}" />
    <Setter Property="Foreground" Value="{StaticResource CellItemForegroundBrush}" />
    <Setter Property="HorizontalContentAlignment" Value="Left" />
    <Setter Property="MinHeight" Value="26" />
    <Setter Property="NegativeBarBrush" Value="{StaticResource ConditionalFormattingCellNegativeBarBrush}" />
    <Setter Property="Padding" Value="{StaticResource CellPadding}" />
    <Setter Property="VerticalContentAlignment" Value="Center" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="ig:ConditionalFormattingCellControl">
          <Grid>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="MouseOver">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="hoverElem" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="contentControl" Storyboard.TargetProperty="Foreground">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ForegroundBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Alternate">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="AltElem" Storyboard.TargetProperty="(UIElement.Visibility)">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="SelectedStates">
                <VisualState x:Name="NotSelected" />
                <VisualState x:Name="Selected">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="cellSelected" Storyboard.TargetProperty="(UIElement.Visibility)">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="contentControl" Storyboard.TargetProperty="Foreground">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ForegroundBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="ActiveStates">
                <VisualState x:Name="InActive" />
                <VisualState x:Name="Active">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ActiveSelected" Storyboard.TargetProperty="(UIElement.Visibility)">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="ConditionalFormatIcon">
                <VisualState x:Name="ShowConditionalFormattingIcon">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="FormattingIcon" Storyboard.TargetProperty="(UIElement.Visibility)">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="HideConditionalFormattingIcon" />
                <VisualState x:Name="HideIcon" />
                <VisualState x:Name="ShowIcon" />
              </VisualStateGroup>
              <VisualStateGroup x:Name="ConditionalFormatDataDisplay">
                <VisualState x:Name="ShowData" />
                <VisualState x:Name="HideData">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="CellDisplay" Storyboard.TargetProperty="(UIElement.Visibility)">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Collapsed</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="ConditionalFormatDataBar">
                <VisualState x:Name="HideDataBar" />
                <VisualState x:Name="ShowDataBar">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="DataBar" Storyboard.TargetProperty="(UIElement.Visibility)">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="EditingStates">
                <VisualState x:Name="NotEditing" />
                <VisualState x:Name="Editing" />
              </VisualStateGroup>
              <VisualStateGroup x:Name="FixedStates">
                <VisualState x:Name="UnFixed" />
                <VisualState x:Name="Fixed" />
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="Auto" />
              <ColumnDefinition />
            </Grid.ColumnDefinitions>
            <Border x:Name="Root"
                    Grid.ColumnSpan="2"
                    Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}" />
            <Border x:Name="AltElem"
                    Grid.ColumnSpan="2"
                    Background="{TemplateBinding AltBackground}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    Visibility="Collapsed" />
            <Border x:Name="cellSelected"
                    Grid.ColumnSpan="2"
                    Margin="{TemplateBinding BorderThickness}"
                    Background="{StaticResource CellItemSelectedBackgroundBrush}"
                    BorderBrush="{StaticResource CellItemSelectedBorderBrush}"
                    BorderThickness="{StaticResource DefaultBorderThickness}"
                    Visibility="Collapsed" />
            <Border x:Name="ActiveSelected"
                    Grid.ColumnSpan="2"
                    BorderBrush="{StaticResource CellItemSelectedBorderBrush}"
                    BorderThickness="{StaticResource DefaultBorderThickness}"
                    Visibility="Collapsed" />
            <Border x:Name="hoverElem"
                    Grid.ColumnSpan="2"
                    Background="{StaticResource CellItemHoverBackgroundBrush}"
                    BorderBrush="{StaticResource CellItemHoverBorderBrush}"
                    BorderThickness="{StaticResource DefaultBorderThickness}"
                    Visibility="Collapsed" />
            <igPrim:DataBarControl x:Name="DataBar"
                                   Grid.ColumnSpan="2"
                                   Margin="1"
                                   BarPercentage="{TemplateBinding BarPercentage}"
                                   DataBarDirection="{TemplateBinding BarDirection}"
                                   DataBarPositiveNegative="{TemplateBinding BarPositiveOrNegative}"
                                   NegativeValueBarBrush="{TemplateBinding NegativeBarBrush}"
                                   PositiveValueBarBrush="{TemplateBinding BarBrush}"
                                   Visibility="Collapsed" />
            <ContentControl x:Name="FormattingIcon"
                            VerticalAlignment="Center"
                            ContentTemplate="{TemplateBinding Icon}"
                            Visibility="Collapsed" />
            <ContentControl x:Name="contentControl"
                            Grid.Column="1"
                            HorizontalContentAlignment="Stretch"
                            VerticalContentAlignment="Stretch"
                            Foreground="{TemplateBinding Foreground}">
              <ContentPresenter x:Name="CellDisplay"
                                Margin="{TemplateBinding Padding}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}" >
                <ContentPresenter.Resources>
                  <Style  TargetType="ComboBox" BasedOn="{StaticResource ColumnComboBoxStyle}"/>
                  <!-- To avoid Text jump when editing values-->
                  <Style  TargetType="TextBox" BasedOn="{StaticResource TextBoxStyle}">
                    <Setter Property="Padding" Value="4 4 6 5" />
                  </Style>
                </ContentPresenter.Resources>
              </ContentPresenter>
            </ContentControl>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style BasedOn="{StaticResource ConditionalFormattingCellControlStyle}" TargetType="ig:ConditionalFormattingCellControl" />

  <!--  *********************************  GroupHeaderCellControl Style  *********************************  -->
  <Style x:Key="GroupHeaderCellControlStyle" TargetType="igPrim:GroupHeaderCellControl">
    <Setter Property="Background" Value="{StaticResource GroupHeaderCellBackgroundBrush}" />
    <Setter Property="BorderBrush" Value="{StaticResource GroupHeaderCellBorderBrush}" />
    <Setter Property="BorderThickness" Value="{StaticResource HeaderCellBorderThickness}" />
    <Setter Property="FontFamily" Value="{StaticResource FontFamily}" />
    <Setter Property="FontSize" Value="{StaticResource FontSize}" />
    <Setter Property="FontWeight" Value="{StaticResource FontSemiBold}" />
    <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
    <Setter Property="HorizontalContentAlignment" Value="Left" />
    <Setter Property="MinHeight" Value="26" />
    <Setter Property="Padding" Value="{StaticResource DefaultPadding}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igPrim:GroupHeaderCellControl">
          <Grid>
            <Grid.RowDefinitions>
              <RowDefinition />
              <RowDefinition />
            </Grid.RowDefinitions>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="MouseOver">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="00:00:00.001" Storyboard.TargetName="GroupHeaderCell" Storyboard.TargetProperty="BorderBrush">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource GroupHeaderCellHoverBorderBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="00:00:00.001" Storyboard.TargetName="SortAndPinIndicators" Storyboard.TargetProperty="Background">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource GroupHeaderCellHoverBackgroundBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Moving">
                  <Storyboard>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="NormalFill" Storyboard.TargetProperty="Opacity">
                      <SplineDoubleKeyFrame KeyTime="0" Value="0.4" />
                    </DoubleAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="00:00:00.001" Storyboard.TargetName="Bd" Storyboard.TargetProperty="Background">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource HeaderCellMovingBackgroundBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="FixedIndicatorStates">
                <VisualState x:Name="NotFixable" />
                <VisualState x:Name="Pinned">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames BeginTime="0" Storyboard.TargetName="PinnedIndicator" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>
                            Visible
                          </Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Unpinned">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames BeginTime="0" Storyboard.TargetName="UnpinnedIndicator" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>
                            Visible
                          </Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="VisibilityIconStates">
                <VisualState x:Name="VisibilityIconHidden" />
                <VisualState x:Name="VisibilityIconVisible">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames BeginTime="0" Storyboard.TargetName="VisibilityToggleButton" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>
                            Visible
                          </Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="LeftAdjacentColumnHiddenStates">
                <VisualState x:Name="NoHiddenLeftAdjacentColumns" />
                <VisualState x:Name="HiddenLeftAdjacentColumns">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames BeginTime="0" Storyboard.TargetName="HiddenLeftAdjacentColumnsElement" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>
                            Visible
                          </Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="RightAdjacentColumnHiddenStates">
                <VisualState x:Name="NoHiddenRightAdjacentColumns" />
                <VisualState x:Name="LastVisibleColumnWithHiddenRightAdjacentColumns">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames BeginTime="0" Storyboard.TargetName="HiddenRightAdjacentColumnsElement" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>
                            Visible
                          </Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Border x:Name="GroupHeaderCell" 
                    Background="{TemplateBinding Background}" 
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}" 
                    Padding="{StaticResource GroupHeaderCellPadding}">
              <Grid x:Name="Bd">
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="Auto" />
                  <ColumnDefinition />
                  <ColumnDefinition Width="Auto" />
                  <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <igPrim:HeaderDropDownControl x:Name="HiddenLeftAdjacentColumnsElement"
                                              Grid.Column="0"
                                              Width="Auto"
                                              VerticalAlignment="Stretch"
                                              Padding="0"
                                              Visibility="Collapsed">
                  <ToolTipService.ToolTip>
                    <ToolTip Content="{Binding Cell.Column.ColumnLayout.Grid.ColumnChooserSettings.HiddenColumnIndicatorToolTipText, RelativeSource={RelativeSource TemplatedParent}}" />
                  </ToolTipService.ToolTip>
                  <igPrim:HeaderDropDownControl.OpenButtonContent>
                    <Grid>
                      <Rectangle Width="24"
                                 Margin="-5,0"
                                 HorizontalAlignment="Stretch"
                                 Fill="{StaticResource TransparentBrush}" />
                      <Rectangle Width="10"
                                 HorizontalAlignment="Left"
                                 Fill="{StaticResource HiddenColumnIndicatorBrush}" />
                    </Grid>
                  </igPrim:HeaderDropDownControl.OpenButtonContent>
                  <Grid>
                    <Border x:Name="ColumnChooserBd"
                            MaxHeight="200"
                            Background="{StaticResource PopupBackgroundBrush}"
                            BorderBrush="{StaticResource PopupBorderBrush}"
                            BorderThickness="{StaticResource DefaultBorderThickness}"
                            Padding="1">
                      <Grid>
                        <Grid.ColumnDefinitions>
                          <ColumnDefinition MinWidth="25" MaxWidth="25" />
                          <ColumnDefinition />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                          <RowDefinition />
                          <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <Border Grid.RowSpan="2" Background="{StaticResource ColumnChooserPopupVSeparatorBackgroundBrush}" />
                        <ListBox Grid.ColumnSpan="2"
                                 Margin="0"
                                 Background="{StaticResource TransparentBrush}"
                                 BorderThickness="0"
                                 DataContext="{x:Null}"
                                 ItemContainerStyle="{StaticResource ColumnChooserListBoxItemStyle}"
                                 ItemsSource="{Binding Cell.ColumnsHiddenToLeft, RelativeSource={RelativeSource TemplatedParent}}"
                                 Padding="0"
                                 Style="{StaticResource ListBoxStyle}">
                          <ListBox.ItemTemplate>
                            <DataTemplate>
                              <TextBlock Text="{Binding DisplayNameResolved}" />
                            </DataTemplate>
                          </ListBox.ItemTemplate>
                          <igBase:Commanding.Commands>
                            <igBase:CommandSourceCollection>
                              <igBase:XamGridColumnCommandSource CommandType="Show"
                                                                 EventName="SelectionChanged"
                                                                 ParameterBinding="{Binding SelectedItem}" />
                              <igPrim:XamGridPopupCommandSource CommandType="ClosePopup" EventName="SelectionChanged" />
                            </igBase:CommandSourceCollection>
                          </igBase:Commanding.Commands>
                        </ListBox>
                        <StackPanel Grid.Row="1"
                                    Grid.ColumnSpan="2"
                                    Background="{StaticResource TransparentBrush}">
                          <igBase:XamMenuSeparator Background="{StaticResource SeparatorBrush}" />
                          <Button Margin="0,1,0,0" Style="{StaticResource ColumnChooserDialogButtonStyle}">
                            <igBase:Commanding.Commands>
                              <igBase:CommandSourceCollection>
                                <igBase:XamGridColumnChooserCommandSource CommandType="Open" EventName="Click" />
                                <igPrim:XamGridPopupCommandSource CommandType="ClosePopup" EventName="Click" />
                              </igBase:CommandSourceCollection>
                            </igBase:Commanding.Commands>
                            <TextBlock Foreground="{StaticResource ForegroundBrush}" Text="{Binding Cell.Column.ColumnLayout.Grid.ColumnChooserSettings.ColumnChooserDisplayText, RelativeSource={RelativeSource TemplatedParent}}" />
                          </Button>
                        </StackPanel>
                      </Grid>
                    </Border>
                  </Grid>
                </igPrim:HeaderDropDownControl>
                <ContentPresenter Grid.Column="1"
                                  Margin="{TemplateBinding Padding}"
                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                <Grid x:Name="SortAndPinIndicators"
                      Grid.Column="2"
                      Margin="0,0,5,0"
                      HorizontalAlignment="Right"
                      Background="{TemplateBinding Background}">
                  <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                  </Grid.ColumnDefinitions>
                  <igPrim:HeaderDropDownControl x:Name="SummaryHeaderDropDownControl"
                                                Grid.Column="0"
                                                Background="{StaticResource TransparentBrush}"
                                                Visibility="Collapsed">
                    <igPrim:HeaderDropDownControl.OpenButtonContent>
                        <Path x:Name="summarySigmaIcon"
                              Width="7"
                              Height="9"
                              Data="{StaticResource SummarySigmaIcon}"
                              Fill="{Binding Path=(TextElement.Foreground), RelativeSource={RelativeSource AncestorType=ContentPresenter}}"
                              StrokeThickness="0" />
                    </igPrim:HeaderDropDownControl.OpenButtonContent>
                    <igPrim:SummarySelectionControl Cell="{Binding Path=Cell, RelativeSource={RelativeSource TemplatedParent}}" />
                  </igPrim:HeaderDropDownControl>
                  <Button x:Name="PinnedIndicator"
                          Grid.Column="1"
                          Width="20"
                          Style="{StaticResource HeaderDropDownButtonStyle}"
                          Visibility="Collapsed">
                    <Grid Background="{StaticResource TransparentBrush}">
                      <igBase:Commanding.Command>
                        <igBase:XamGridColumnCommandSource CommandType="Unfix" EventName="MouseLeftButtonDown" />
                      </igBase:Commanding.Command>
                      <Path Width="7"
                            Height="9"
                            Data="{StaticResource PinnedIndicatorIcon}"
                            Fill="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType=ContentControl}}"
                            Stretch="Fill" />
                    </Grid>
                  </Button>
                  <Button x:Name="UnpinnedIndicator"
                          Grid.Column="1"
                          Width="20"
                          Style="{StaticResource HeaderDropDownButtonStyle}"
                          Visibility="Collapsed">
                    <Grid Background="{StaticResource TransparentBrush}">
                      <igBase:Commanding.Command>
                        <igBase:XamGridColumnCommandSource CommandType="Fix" EventName="MouseLeftButtonDown" />
                      </igBase:Commanding.Command>
                      <Path Width="9"
                            Height="7"
                            Data="{StaticResource UnpinnedIndicatorIcon}"
                            Fill="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType=ContentControl}}"
                            Stretch="Fill" />
                    </Grid>
                  </Button>
                  <Button x:Name="VisibilityToggleButton"
                          Grid.Column="2"
                          Width="20"
                          Style="{StaticResource HeaderDropDownButtonStyle}"
                          Visibility="Collapsed">
                    <Grid Background="{StaticResource TransparentBrush}">
                      <igBase:Commanding.Command>
                        <igBase:XamGridColumnCommandSource CommandType="Hide" EventName="MouseLeftButtonDown" />
                      </igBase:Commanding.Command>
                      <Path Width="10"
                            Height="8"
                            Data="{StaticResource ColumnVisibilityToggleIcon}"
                            Fill="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType=ContentControl}}"
                            Stretch="Fill"/>
                    </Grid>
                  </Button>
                </Grid>
                <igPrim:HeaderDropDownControl x:Name="HiddenRightAdjacentColumnsElement"
                                              Grid.Column="4"
                                              Width="Auto"
                                              VerticalAlignment="Stretch"
                                              Padding="0"
                                              Visibility="Collapsed">
                  <ToolTipService.ToolTip>
                    <ToolTip Content="{Binding Cell.Column.ColumnLayout.Grid.ColumnChooserSettings.HiddenColumnIndicatorToolTipText, RelativeSource={RelativeSource TemplatedParent}}" />
                  </ToolTipService.ToolTip>
                  <igPrim:HeaderDropDownControl.OpenButtonContent>
                    <Grid>
                      <Rectangle Width="24"
                                 Margin="-5,0"
                                 HorizontalAlignment="Stretch"
                                 Fill="{StaticResource TransparentBrush}" />
                      <Rectangle Width="10"
                                 HorizontalAlignment="Right"
                                 Fill="{StaticResource HiddenColumnIndicatorBrush}" />
                    </Grid>
                  </igPrim:HeaderDropDownControl.OpenButtonContent>
                  <Grid>
                    <Border x:Name="ColumnChooserBdRight"
                            MaxHeight="200"
                            Background="{StaticResource PopupBackgroundBrush}"
                            BorderBrush="{StaticResource PopupBorderBrush}"
                            BorderThickness="{StaticResource DefaultBorderThickness}"
                            Padding="1">
                      <Grid>
                        <Grid.ColumnDefinitions>
                          <ColumnDefinition MinWidth="25" MaxWidth="25" />
                          <ColumnDefinition />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                          <RowDefinition />
                          <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <Border Grid.RowSpan="2" Background="{StaticResource ColumnChooserPopupVSeparatorBackgroundBrush}" />
                        <ListBox Grid.ColumnSpan="2"
                                 Margin="0"
                                 Background="{StaticResource TransparentBrush}"
                                 BorderThickness="0"
                                 DataContext="{x:Null}"
                                 ItemContainerStyle="{StaticResource ColumnChooserListBoxItemStyle}"
                                 ItemsSource="{Binding Cell.ColumnsHiddenToRight, RelativeSource={RelativeSource TemplatedParent}}"
                                 Padding="0"
                                 Style="{StaticResource ListBoxStyle}">
                          <ListBox.ItemTemplate>
                            <DataTemplate>
                              <TextBlock Text="{Binding DisplayNameResolved}" />
                            </DataTemplate>
                          </ListBox.ItemTemplate>
                          <igBase:Commanding.Commands>
                            <igBase:CommandSourceCollection>
                              <igBase:XamGridColumnCommandSource CommandType="Show"
                                                                 EventName="SelectionChanged"
                                                                 ParameterBinding="{Binding SelectedItem}" />
                              <igPrim:XamGridPopupCommandSource CommandType="ClosePopup" EventName="SelectionChanged" />
                            </igBase:CommandSourceCollection>
                          </igBase:Commanding.Commands>
                        </ListBox>
                        <StackPanel Grid.Row="1"
                                    Grid.ColumnSpan="2"
                                    Background="{StaticResource TransparentBrush}">
                          <igBase:XamMenuSeparator Background="{StaticResource SeparatorBrush}" />
                          <Button Margin="0,1,0,0" Style="{StaticResource ColumnChooserDialogButtonStyle}">
                            <igBase:Commanding.Commands>
                              <igBase:CommandSourceCollection>
                                <igBase:XamGridColumnChooserCommandSource CommandType="Open" EventName="Click" />
                                <igPrim:XamGridPopupCommandSource CommandType="ClosePopup" EventName="Click" />
                              </igBase:CommandSourceCollection>
                            </igBase:Commanding.Commands>
                            <TextBlock Foreground="{StaticResource ForegroundBrush}" Text="{Binding Cell.Column.ColumnLayout.Grid.ColumnChooserSettings.ColumnChooserDisplayText, RelativeSource={RelativeSource TemplatedParent}}" />
                          </Button>
                        </StackPanel>
                      </Grid>
                    </Border>
                  </Grid>
                </igPrim:HeaderDropDownControl>
              </Grid>
            </Border>
            <igPrim:GroupColumnPanel x:Name="Panel"
                                     Grid.Row="1"
                                     Cell="{Binding Cell, RelativeSource={RelativeSource TemplatedParent}}" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style BasedOn="{StaticResource GroupHeaderCellControlStyle}" TargetType="igPrim:GroupHeaderCellControl" />

  <!--  *********************************  GroupCellControl Style  *********************************  -->
  <Style x:Key="GroupCellControlStyle" TargetType="igPrim:GroupCellControl">
    <Setter Property="FontFamily" Value="{StaticResource FontFamily}" />
    <Setter Property="FontSize" Value="{StaticResource FontSize}" />
    <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igPrim:GroupCellControl">
          <igPrim:GroupColumnPanel x:Name="Panel" Cell="{Binding Cell, RelativeSource={RelativeSource TemplatedParent}}" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style BasedOn="{StaticResource GroupCellControlStyle}" TargetType="igPrim:GroupCellControl" />

  <!--  *********************************  GroupFooterCellControl Style  *********************************  -->
  <Style x:Key="GroupFooterCellControlStyle" TargetType="igPrim:GroupFooterCellControl">
    <Setter Property="Background" Value="{StaticResource GroupFooterCellBackgroundBrush}" />
    <Setter Property="BorderBrush" Value="{StaticResource GroupFooterCellBorderBrush}" />
    <Setter Property="BorderThickness" Value="{StaticResource CellBorderThickness}" />
    <Setter Property="FontFamily" Value="{StaticResource FontFamily}" />
    <Setter Property="FontSize" Value="{StaticResource FontSize}" />
    <Setter Property="Foreground" Value="{StaticResource GroupFooterCellForegroundBrush}" />
    <Setter Property="HorizontalContentAlignment" Value="Left" />
    <Setter Property="Padding" Value="{StaticResource DefaultPadding}" />
    <Setter Property="VerticalContentAlignment" Value="Center" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igPrim:GroupFooterCellControl">
          <igPrim:GroupColumnPanel x:Name="Panel" Cell="{Binding Cell, RelativeSource={RelativeSource TemplatedParent}}" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style BasedOn="{StaticResource GroupFooterCellControlStyle}" TargetType="igPrim:GroupFooterCellControl" />

  <!--  *********************************  GroupDisplayCellControl Style  *********************************  -->
  <Style x:Key="GroupDisplayCellControlStyle" TargetType="igPrim:GroupDisplayCellControl">
    <Setter Property="Background" Value="{StaticResource CellItemBackgroundBrush}" />
    <Setter Property="BorderBrush" Value="{StaticResource CellItemBorderBrush}" />
    <Setter Property="BorderThickness" Value="{StaticResource CellBorderThickness}" />
    <Setter Property="FontFamily" Value="{StaticResource FontFamily}" />
    <Setter Property="FontSize" Value="{StaticResource FontSize}" />
    <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
    <Setter Property="HorizontalContentAlignment" Value="Left" />
    <Setter Property="InnerControlMargin" Value="0" />
    <Setter Property="Padding" Value="{StaticResource DefaultPadding}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igPrim:GroupDisplayCellControl">
          <Grid>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="MouseOver">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00" Storyboard.TargetName="AltMouseOver" Storyboard.TargetProperty="Fill">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{StaticResource CellItemHoverBackgroundBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Alternate">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00" Storyboard.TargetName="AltMouseOver" Storyboard.TargetProperty="Fill">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{StaticResource CellItemAltBackgroundBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="SelectedStates">
                <VisualState x:Name="NotSelected" />
                <VisualState x:Name="Selected">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00" Storyboard.TargetName="ActiveSelected" Storyboard.TargetProperty="Background">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{StaticResource CellItemSelectedBackgroundBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00" Storyboard.TargetName="ActiveSelected" Storyboard.TargetProperty="BorderThickness">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Thickness>
                            0,0,1,0
                          </Thickness>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="ActiveStates">
                <VisualState x:Name="InActive" />
                <VisualState x:Name="Active">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00" Storyboard.TargetName="ActiveSelected" Storyboard.TargetProperty="BorderThickness">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Thickness>
                            1,1,1,1
                          </Thickness>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="LogicalOperators">
                <VisualState x:Name="NoLogicalOp" />
                <VisualState x:Name="And">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00" Storyboard.TargetName="LogicalOpBorder" Storyboard.TargetProperty="Background">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{StaticResource LogicalAndOperatorBackgroundBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Or">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00" Storyboard.TargetName="LogicalOpBorder" Storyboard.TargetProperty="Background">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{StaticResource LogicalOrOperatorBackgroundBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Border x:Name="Root"
                    Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}" />
            <Rectangle x:Name="AltMouseOver" Margin="{TemplateBinding BorderThickness}" />
            <Border x:Name="ActiveSelected" BorderBrush="{StaticResource CellItemSelectedBorderBrush}" />
            <Border Padding="0,0,1,1">
              <Border x:Name="LogicalOpBorder"
                      Width="10"
                      Margin="{TemplateBinding InnerControlMargin}"
                      Background="Transparent"
                      BorderThickness="0" />
            </Border>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style BasedOn="{StaticResource GroupDisplayCellControlStyle}" TargetType="igPrim:GroupDisplayCellControl" />

  <!--  *********************************  ColumnLayoutTemplateCellControl Style  *********************************  -->
  <Style x:Key="ColumnLayoutTemplateCellControlStyle" TargetType="igPrim:ColumnLayoutTemplateCellControl">
    <Setter Property="Background" Value="{StaticResource CellItemBackgroundBrush}" />
    <Setter Property="BorderBrush" Value="{StaticResource CellItemBorderBrush}" />
    <Setter Property="BorderThickness" Value="0" />
    <Setter Property="FontFamily" Value="{StaticResource FontFamily}" />
    <Setter Property="FontSize" Value="{StaticResource FontSize}" />
    <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
    <Setter Property="HorizontalContentAlignment" Value="Left" />
    <Setter Property="Padding" Value="{StaticResource DefaultPadding}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igPrim:ColumnLayoutTemplateCellControl">
          <Grid>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="MouseOver" />
                <VisualState x:Name="Alternate" />
              </VisualStateGroup>
              <VisualStateGroup x:Name="SelectedStates">
                <VisualState x:Name="NotSelected" />
                <VisualState x:Name="Selected">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="rowSelected" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>
                            Visible
                          </Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="ActiveStates">
                <VisualState x:Name="InActive" />
                <VisualState x:Name="Active">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ActiveSelected" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>
                            Visible
                          </Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Border x:Name="Root"
                    Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}" />
            <Border x:Name="rowSelected"
                    Margin="{TemplateBinding BorderThickness}"
                    Background="{StaticResource CellItemSelectedBackgroundBrush}"
                    Visibility="Collapsed" />
            <Border x:Name="ActiveSelected"
                    BorderBrush="{StaticResource CellItemSelectedBorderBrush}"
                    BorderThickness="{StaticResource DefaultBorderThickness}"
                    Visibility="Collapsed" />
            <ContentPresenter Margin="{TemplateBinding Padding}"
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="VerticalContentAlignment" Value="Center" />
  </Style>
  <Style BasedOn="{StaticResource ColumnLayoutTemplateCellControlStyle}" TargetType="igPrim:ColumnLayoutTemplateCellControl" />

  <!--  *********************************  MergedContentControl Style  *********************************  -->
  <Style TargetType="igPrim:MergedContentControl">
    <Setter Property="Background" Value="{StaticResource MergedContentCellBackgroundBrush}" />
    <Setter Property="BorderBrush" Value="{StaticResource MergedContentCellBorderBrush}" />
    <Setter Property="BorderThickness" Value="{StaticResource CellBorderThickness}" />
    <Setter Property="FontFamily" Value="{StaticResource FontFamily}" />
    <Setter Property="FontSize" Value="{StaticResource FontSize}" />
    <Setter Property="Foreground" Value="{StaticResource MergedContentCellForegroundBrush}" />
    <Setter Property="HorizontalContentAlignment" Value="Left" />
    <Setter Property="Padding" Value="{StaticResource DefaultPadding}" />
    <Setter Property="VerticalContentAlignment" Value="Center" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igPrim:MergedContentControl">
          <Border x:Name="Bd"
                  Background="{TemplateBinding Background}"
                  BorderBrush="{TemplateBinding BorderBrush}"
                  BorderThickness="{TemplateBinding BorderThickness}">
            <Grid>
              <ContentPresenter Margin="{TemplateBinding Padding}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>

            </Grid>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!--  *********************************  MergedSummaryCellControl Style  *********************************  -->
  <Style x:Key="MergedSummaryCellControlStyle" TargetType="igPrim:MergedSummaryCellControl">
    <Setter Property="Background" Value="{StaticResource MergedSummaryCellBackgroundBrush}" />
    <Setter Property="BorderBrush" Value="{StaticResource MergedSummaryCellBorderBrush}" />
    <Setter Property="BorderThickness" Value="0,0,1,0" />
    <Setter Property="FontFamily" Value="{StaticResource FontFamily}" />
    <Setter Property="FontSize" Value="{StaticResource FontSize}" />
    <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
    <Setter Property="HorizontalContentAlignment" Value="Right" />
    <Setter Property="Padding" Value="{StaticResource DefaultPadding}" />
    <Setter Property="VerticalContentAlignment" Value="Center" />
    <Setter Property="SummaryDisplayTemplate">
      <Setter.Value>
        <DataTemplate>
          <StackPanel HorizontalAlignment="Right" Orientation="Horizontal">
            <TextBlock Text="{Binding SummaryDefinition.SummaryOperand.RowDisplayLabelResolved}" />
            <TextBlock Text=" = " />
            <TextBlock Text="{Binding Converter={StaticResource SDFormatStringConverter}}" />
          </StackPanel>
        </DataTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igPrim:MergedSummaryCellControl">
          <Grid>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="MouseOver" />
                <VisualState x:Name="Alternate" />
              </VisualStateGroup>
              <VisualStateGroup x:Name="SelectedStates">
                <VisualState x:Name="NotSelected" />
                <VisualState x:Name="Selected" />
              </VisualStateGroup>
              <VisualStateGroup x:Name="ActiveStates">
                <VisualState x:Name="InActive" />
                <VisualState x:Name="Active">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00" Storyboard.TargetName="ActiveRect" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>
                            Visible
                          </Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="FixedStates">
                <VisualState x:Name="Fixed" />
                <VisualState x:Name="Unfixed" />
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Border x:Name="AddNewRowElem"
                    Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}">
              <Rectangle Height="1"
                         VerticalAlignment="Top"
                         Fill="{StaticResource TransparentBrush}" />
            </Border>
            <Rectangle x:Name="ActiveRect"
                       Fill="{StaticResource TransparentBrush}"
                       Stroke="{StaticResource CellItemSelectedBorderBrush}"
                       StrokeThickness="{StaticResource DefaultStrokeThickness}"
                       Visibility="Collapsed" />
            <StackPanel x:Name="SummaryDisplay"
                        Margin="{TemplateBinding Padding}"
                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style BasedOn="{StaticResource MergedSummaryCellControlStyle}" TargetType="igPrim:MergedSummaryCellControl" />

  <!--  *********************************  CustomFilterButton Style  *********************************  -->
  <Style x:Key="CustomFilterButtonStyle" TargetType="Button">
    <Setter Property="BorderThickness" Value="{StaticResource DefaultBorderThickness}" />
    <Setter Property="Cursor" Value="Hand" />
    <Setter Property="FontFamily" Value="{StaticResource FontFamily}" />
    <Setter Property="FontSize" Value="{StaticResource FontSize}" />
    <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
    <Setter Property="MinHeight" Value="24" />
    <Setter Property="MinWidth" Value="30" />
    <Setter Property="Padding" Value="10,0,10,2" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="Button">
          <Grid x:Name="Grid">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Pressed">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="pressed" Storyboard.TargetProperty="(UIElement.Visibility)">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="MouseOver">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="hover" Storyboard.TargetProperty="(UIElement.Visibility)">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="(TextElement.Foreground)">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource GlyphHoverBackgroundBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Normal" />
                <VisualState x:Name="Disabled">
                  <Storyboard>
                    <DoubleAnimation Duration="0" Storyboard.TargetName="Grid" Storyboard.TargetProperty="Opacity" To=".3" />
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="FocusStates">
                <VisualState x:Name="Unfocused" />
                <VisualState x:Name="Focused">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="focus" Storyboard.TargetProperty="(UIElement.Visibility)">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>
                            Visible
                          </Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid>
              <Rectangle x:Name="normal"
                         Grid.ColumnSpan="2"
                         Fill="{StaticResource ButtonBackgroundBrush}"
                         Stroke="{StaticResource ButtonBorderBrush}"
                         RadiusX="{StaticResource RadiusXY}"
                         RadiusY="{StaticResource RadiusXY}"/>
              <Rectangle x:Name="hover"
                         Grid.ColumnSpan="2"
                         Fill="{StaticResource ButtonHoverBackgroundBrush}"
                         Stroke="{StaticResource ButtonHoverBorderBrush}"
                         RadiusX="{StaticResource RadiusXY}"
                         RadiusY="{StaticResource RadiusXY}"
                         Visibility="Collapsed" />
              <Rectangle x:Name="pressed"
                         Grid.ColumnSpan="2"
                         Fill="{StaticResource ButtonPressedBackgroundBrush}"
                         Stroke="{StaticResource ButtonPressedBorderBrush}"
                         RadiusX="{StaticResource RadiusXY}"
                         RadiusY="{StaticResource RadiusXY}"
                         Visibility="Collapsed" />
              <Rectangle x:Name="focus"
                         Grid.ColumnSpan="2"
                         Stroke="{StaticResource ButtonPressedBorderBrush}"
                         RadiusX="{StaticResource RadiusXY}"
                         RadiusY="{StaticResource RadiusXY}"
                         Visibility="Collapsed" />
              <ContentPresenter x:Name="ContentPresenter"
                                MinWidth="16"
                                MinHeight="16"
                                Margin="{TemplateBinding Padding}"
                                HorizontalAlignment="Stretch"
                                VerticalAlignment="Center"
                                TextElement.Foreground="{StaticResource GlyphBackgroundBrush}"/>
            </Grid>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!--  *********************************  CompoundFilterDialogControl Style  *********************************  -->
  <Style TargetType="igPrim:CompoundFilterDialogControl">
    <Setter Property="Background" Value="{StaticResource CompoundFilterDialogBackgroundBrush}" />
    <Setter Property="BorderBrush" Value="{StaticResource CompoundFilterDialogBorderBrush}" />
    <Setter Property="BorderThickness" Value="{StaticResource DefaultBorderThickness}" />
    <Setter Property="HorizontalAlignment" Value="Center" />
    <Setter Property="Margin" Value="1" />
    <Setter Property="Padding" Value="10" />
    <Setter Property="VerticalAlignment" Value="Center" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igPrim:CompoundFilterDialogControl">
          <Border Width="925"
                  Background="{TemplateBinding Background}"
                  BorderBrush="{StaticResource ColumnChooserDialogBorderBrush}"
                  BorderThickness="{StaticResource DefaultBorderThickness}">
            <Grid>
              <Grid.RowDefinitions>
                <RowDefinition Height="54" />
                <RowDefinition />
                <RowDefinition Height="100" />
                <RowDefinition Height="54" />
              </Grid.RowDefinitions>
              <StackPanel Margin="12" Orientation="Horizontal">
                <Button Margin="0,0,8,0"
                        VerticalAlignment="Center"
                        Style="{StaticResource CustomFilterButtonStyle}">
                  <igBase:Commanding.Command>
                    <igPrim:CompoundFilteringDialogControlCommandSource CommandType="AddToCurrent" EventName="Click" />
                  </igBase:Commanding.Command>
                  <StackPanel Margin="2,0" Orientation="Horizontal">
                    <Path Width="8"
                          Height="8"
                          Data="{StaticResource PlusIcon}"
                          Fill="{Binding Path=(TextElement.Foreground), RelativeSource={RelativeSource AncestorType=ContentPresenter}}"
                          Stretch="Fill" />
                    <TextBlock Margin="6,0,0,0"
                               VerticalAlignment="Center"
                               Text="{TemplateBinding AddConditionButtonText}" />
                  </StackPanel>
                </Button>
                <Button Margin="0,0,5,0"
                        VerticalAlignment="Center"
                        Style="{StaticResource CustomFilterButtonStyle}">
                  <igBase:Commanding.Command>
                    <igPrim:CompoundFilteringDialogControlCommandSource CommandType="DeleteCondition" EventName="Click" />
                  </igBase:Commanding.Command>
                  <StackPanel Margin="2,0" Orientation="Horizontal">
                    <Path Width="8"
                          Height="2"
                          Data="{StaticResource MinusIcon}"
                          Stretch="Fill"
                          VerticalAlignment="Center"
                          Fill="{Binding Path=(TextElement.Foreground), RelativeSource={RelativeSource AncestorType=ContentPresenter}}" />
                    <TextBlock Margin="6,0,0,0"
                               VerticalAlignment="Center"
                               Text="{TemplateBinding RemoveConditionButtonText}" />
                  </StackPanel>
                </Button>
                <TextBlock Margin="8,0"
                           VerticalAlignment="Center"
                           Style="{StaticResource TextBlockStyle}"
                           Text="{TemplateBinding SelectedGroupText}" />
                <Button Margin="0,0,8,0"
                        VerticalAlignment="Center"
                        Style="{StaticResource CustomFilterButtonStyle}">
                  <igBase:Commanding.Command>
                    <igPrim:CompoundFilteringDialogControlCommandSource CommandType="CreateAndGroup" EventName="Click" />
                  </igBase:Commanding.Command>
                  <StackPanel Margin="2,0" Orientation="Horizontal">
                    <Path Width="14"
                          Height="14"
                          Margin="1,0,0,0"
                          Data="{StaticResource CreateAndGroup}"
                          Fill="{Binding Path=(TextElement.Foreground), RelativeSource={RelativeSource AncestorType=ContentPresenter}}"
                          Stretch="Fill"
                          StrokeThickness="2"
                          UseLayoutRounding="False" />
                    <TextBlock Margin="6,0,0,0"
                               VerticalAlignment="Center"
                               Text="{TemplateBinding AndButtonText}" />
                  </StackPanel>
                </Button>
                <Button Margin="0,0,8,0"
                        VerticalAlignment="Center"
                        Style="{StaticResource CustomFilterButtonStyle}">
                  <igBase:Commanding.Command>
                    <igPrim:CompoundFilteringDialogControlCommandSource CommandType="CreateOrGroup" EventName="Click" />
                  </igBase:Commanding.Command>
                  <StackPanel Margin="2,0" Orientation="Horizontal">
                    <Path Width="14"
                          Height="14"
                          Margin="1,0,0,0"
                          Data="{StaticResource CreateOrGroup}"
                          Fill="{Binding Path=(TextElement.Foreground), RelativeSource={RelativeSource AncestorType=ContentPresenter}}"
                          Stretch="Fill"
                          StrokeThickness="2"
                          UseLayoutRounding="False" />
                    <TextBlock Margin="6,0,0,0"
                               VerticalAlignment="Center"
                               Text="{TemplateBinding OrButtonText}" />
                  </StackPanel>
                </Button>
                <Button Margin="0,0,8,0"
                        VerticalAlignment="Center"
                        Style="{StaticResource CustomFilterButtonStyle}">
                  <igBase:Commanding.Command>
                    <igPrim:CompoundFilteringDialogControlCommandSource CommandType="Ungroup" EventName="Click" />
                  </igBase:Commanding.Command>
                  <StackPanel Margin="2,0" Orientation="Horizontal">
                    <Path Width="14"
                          Height="14"
                          Margin="1,0,0,0"
                          Data="{StaticResource Ungroup}"
                          Fill="{Binding Path=(TextElement.Foreground), RelativeSource={RelativeSource AncestorType=ContentPresenter}}"
                          Stretch="Fill"
                          StrokeThickness="1.5"
                          UseLayoutRounding="False" />
                    <TextBlock Margin="6,0,0,0"
                               VerticalAlignment="Center"
                               Text="{TemplateBinding UngroupButtonText}" />
                  </StackPanel>
                </Button>
                <Button Margin="0,0,8,0"
                        VerticalAlignment="Center"
                        Style="{StaticResource CustomFilterButtonStyle}">
                  <igBase:Commanding.Command>
                    <igPrim:CompoundFilteringDialogControlCommandSource CommandType="ToggleGroup" EventName="Click" />
                  </igBase:Commanding.Command>
                  <StackPanel Margin="2,0" Orientation="Horizontal">
                    <Path Width="14"
                          Height="14"
                          Margin="2,0,0,0"
                          HorizontalAlignment="Left"
                          Data="{StaticResource ToggleGroup}"
                          Fill="{Binding Path=(TextElement.Foreground), RelativeSource={RelativeSource AncestorType=ContentPresenter}}"
                          Stretch="Fill"
                          UseLayoutRounding="False" />
                    <TextBlock Margin="6,0,0,0"
                               VerticalAlignment="Center"
                               Text="{TemplateBinding ToggleButtonText}" />
                  </StackPanel>
                </Button>
              </StackPanel>
              <igBase:XamGrid x:Name="FilterGrid"
                              Grid.Row="1"
                              Height="200"
                              AutoGenerateColumns="False"
                              Background="{StaticResource FilterGridBackgroundBrush}"
                              IsAlternateRowsEnabled="False"
                              BorderThickness="0">
                <igBase:XamGrid.EditingSettings>
                  <igBase:EditingSettings AllowEditing="Cell" IsOnCellActiveEditingEnabled="True" />
                </igBase:XamGrid.EditingSettings>
                <igBase:XamGrid.RowSelectorSettings>
                  <igBase:RowSelectorSettings Visibility="Visible" />
                </igBase:XamGrid.RowSelectorSettings>
                <igBase:XamGrid.SortingSettings>
                  <igBase:SortingSettings AllowSorting="False" />
                </igBase:XamGrid.SortingSettings>
                <igBase:XamGrid.SelectionSettings>
                  <igBase:SelectionSettings CellClickAction="SelectRow" RowSelection="Multiple" />
                </igBase:XamGrid.SelectionSettings>
                <igBase:XamGrid.Columns>
                  <igBase:ComboBoxColumn Key="FilterOperand"
                                         DisplayMemberPath="DisplayName"
                                         EditorDisplayBehavior="Always"
                                         EditorStyle="{StaticResource ColumnComboBoxStyle}"
                                         MinimumWidth="10"
                                                           />
                  <igBase:ProxyColumn Key="FilterValue"
                                      MinimumWidth="10"
                                      Width="Auto"
                                      TextBlockStyle="{StaticResource TextBlockStyle}" />
                  <igBase:TextColumn Key="ErrorMessage"
                                     Width="*"
                                     HeaderText=" "
                                     IsReadOnly="True"
                                     MinimumWidth="10"
                                     TextBlockStyle="{StaticResource ErrorMessageTextBlockStyle}" />
                  <igBase:TextColumn Key="Group.LevelName"
                                     IsSorted="Ascending"
                                     TextBlockStyle="{StaticResource TextBlockStyle}"
                                     Visibility="Collapsed" />
                </igBase:XamGrid.Columns>
              </igBase:XamGrid>
              <Border Grid.Row="2" Background="{StaticResource FilterDescriptionBackgroundBrush}">
                <ScrollViewer Style="{StaticResource ScrollViewerStyle}" VerticalScrollBarVisibility="Auto">
                  <TextBlock Margin="12"
                             Style="{StaticResource TextBlockStyle}"
                             Text="{TemplateBinding FilterDescription}"
                             TextWrapping="Wrap" />
                </ScrollViewer>
              </Border>
              <StackPanel Grid.Row="3"
                          Margin="12"
                          Orientation="Horizontal">
                <TextBlock Margin="0,0,8,0"
                           VerticalAlignment="Center"
                           Style="{StaticResource TextBlockStyle}"
                           Text="{TemplateBinding AndColorLabelText}" />
                <Rectangle Width="16"
                           Height="16"
                           Margin="0,0,20,0"
                           VerticalAlignment="Center"
                           Fill="{StaticResource LogicalAndOperatorBackgroundBrush}"
                           Stroke="{StaticResource LogicalAndOperatorBackgroundBrush}"
                           StrokeThickness="{StaticResource DefaultStrokeThickness}" />
                <TextBlock Margin="0,0,8,0"
                           VerticalAlignment="Center"
                           Style="{StaticResource TextBlockStyle}"
                           Text="{TemplateBinding OrColorLabelText}" />
                <Rectangle Width="16"
                           Height="16"
                           Margin="0,0,16,0"
                           VerticalAlignment="Center"
                           Fill="{StaticResource LogicalOrOperatorBackgroundBrush}"
                           Stroke="{StaticResource LogicalOrOperatorBackgroundBrush}"
                           StrokeThickness="{StaticResource DefaultStrokeThickness}" />
              </StackPanel>
              <StackPanel Grid.Row="3"
                          Margin="12"
                          HorizontalAlignment="Right"
                          Orientation="Horizontal">
                <Button Width="74"
                        Margin="0,0,8,0"
                        VerticalAlignment="Center"
                        Content="{TemplateBinding OKButtonText}"
                        Style="{StaticResource ButtonStyle}">
                  <igBase:Commanding.Commands>
                    <igBase:CommandSourceCollection>
                      <igPrim:CompoundFilteringDialogControlCommandSource CommandType="Accept" EventName="Click" />
                      <igPrim:CompoundFilteringDialogControlCommandSource CommandType="Close" EventName="Click" />
                    </igBase:CommandSourceCollection>
                  </igBase:Commanding.Commands>
                </Button>
                <Button Width="74"
                        Margin="0,0,8,0"
                        VerticalAlignment="Center"
                        Content="{TemplateBinding CancelButtonText}"
                        Style="{StaticResource ButtonStyle}">
                  <igBase:Commanding.Command>
                    <igPrim:CompoundFilteringDialogControlCommandSource CommandType="Close" EventName="Click" />
                  </igBase:Commanding.Command>
                </Button>
              </StackPanel>
            </Grid>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
</ResourceDictionary>