<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:PresentationOptions="http://schemas.microsoft.com/winfx/2006/xaml/presentation/options"
                    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                    xmlns:ig="http://schemas.infragistics.com/xaml"
                    xmlns:igPrim="http://schemas.infragistics.com/xaml/primitives"
                    xmlns:local="http://schemas.infragistics.com/xaml"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib"
                    mc:Ignorable="PresentationOptions d">

    <!--  *********************************  TEHEME COLORS  *********************************  -->
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="RoyalDark.Theme.Colors.xaml" />
        <ResourceDictionary Source="RoyalDark.xamCalendar.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <!--  *********************************  BRUSHES  *********************************  -->
    <SolidColorBrush x:Key="ForegroundBrush" Color="{StaticResource Color_001}" />
    <SolidColorBrush x:Key="TransparentBrush" Color="{StaticResource Color_046}" />

    <!--  Button Brushes  -->
    <SolidColorBrush x:Key="ButtonBackgroundBrush" Color="{StaticResource Color_014}" />
    <SolidColorBrush x:Key="ButtonBorderBrush" Color="{StaticResource Color_005}" />

    <!--  Glyph Brushes  -->
    <SolidColorBrush x:Key="GlyphBackgroundBrush" Color="{StaticResource Color_004}" />
    <SolidColorBrush x:Key="GlyphHoverBackgroundBrush" Color="{StaticResource Color_001}" />
    <SolidColorBrush x:Key="GlyphPressedBackgroundBrush" Color="{StaticResource Color_001}" />

    <!--  DateTimeInput Brushes  -->
    <SolidColorBrush x:Key="InputBackgroundBrush" Color="{StaticResource Color_002}" />
    <SolidColorBrush x:Key="InputBorderBrush" Color="{StaticResource Color_005}" />
    <SolidColorBrush x:Key="InputHoverBorderBrush" Color="{StaticResource Color_012}" />
    <SolidColorBrush x:Key="InputFocusedBorderBrush" Color="{StaticResource Color_013}" />
    <SolidColorBrush x:Key="CaretForegroundBrush" Color="{StaticResource Color_001}" />
    <SolidColorBrush x:Key="SelectionBrush" Color="{StaticResource Color_011}" />

    <!--  *********************************  Value Converters  *********************************  -->
    <igPrim:ValueConverterGroup x:Key="HorizontalToTextAlignmentConverter">
        <!--  Left to Left  -->
        <igPrim:FixedValueConverter>
            <igPrim:FixedValueConverter.SourceValue>
                <HorizontalAlignment>Left</HorizontalAlignment>
            </igPrim:FixedValueConverter.SourceValue>
            <igPrim:FixedValueConverter.DestinationValue>
                <TextAlignment>Left</TextAlignment>
            </igPrim:FixedValueConverter.DestinationValue>
        </igPrim:FixedValueConverter>

        <!--  Center to Center  -->
        <igPrim:FixedValueConverter>
            <igPrim:FixedValueConverter.SourceValue>
                <HorizontalAlignment>Center</HorizontalAlignment>
            </igPrim:FixedValueConverter.SourceValue>
            <igPrim:FixedValueConverter.DestinationValue>
                <TextAlignment>Center</TextAlignment>
            </igPrim:FixedValueConverter.DestinationValue>
        </igPrim:FixedValueConverter>

        <!--  Right to Right  -->
        <igPrim:FixedValueConverter>
            <igPrim:FixedValueConverter.SourceValue>
                <HorizontalAlignment>Right</HorizontalAlignment>
            </igPrim:FixedValueConverter.SourceValue>
            <igPrim:FixedValueConverter.DestinationValue>
                <TextAlignment>Right</TextAlignment>
            </igPrim:FixedValueConverter.DestinationValue>
        </igPrim:FixedValueConverter>

        <!--  Stretch to Left  -->
        <igPrim:FixedValueConverter>
            <igPrim:FixedValueConverter.SourceValue>
                <HorizontalAlignment>Stretch</HorizontalAlignment>
            </igPrim:FixedValueConverter.SourceValue>
            <igPrim:FixedValueConverter.DestinationValue>
                <TextAlignment>Left</TextAlignment>
            </igPrim:FixedValueConverter.DestinationValue>
        </igPrim:FixedValueConverter>

    </igPrim:ValueConverterGroup>

    <igPrim:ValueConverterGroup x:Key="ComplementConverter">
        <!--  True to False  -->
        <igPrim:FixedValueConverter>
            <igPrim:FixedValueConverter.SourceValue>
                <sys:Boolean>True</sys:Boolean>
            </igPrim:FixedValueConverter.SourceValue>
            <igPrim:FixedValueConverter.DestinationValue>
                <sys:Boolean>False</sys:Boolean>
            </igPrim:FixedValueConverter.DestinationValue>
        </igPrim:FixedValueConverter>

        <!--  False to True  -->
        <igPrim:FixedValueConverter>
            <igPrim:FixedValueConverter.SourceValue>
                <sys:Boolean>False</sys:Boolean>
            </igPrim:FixedValueConverter.SourceValue>
            <igPrim:FixedValueConverter.DestinationValue>
                <sys:Boolean>True</sys:Boolean>
            </igPrim:FixedValueConverter.DestinationValue>
        </igPrim:FixedValueConverter>

    </igPrim:ValueConverterGroup>

    <!--  *********************************  RepeatButtonTemplates  *********************************  -->
    <!--  *********************************  SpinUP  *********************************  -->
    <ControlTemplate x:Key="SpinUpButtonTemplate" TargetType="RepeatButton">
        <Grid>
            <Rectangle x:Name="Bg" Width="22" Height="22" Fill="{StaticResource TransparentBrush}" />
            <ContentControl x:Name="content" IsTabStop="False" HorizontalAlignment="{TemplateBinding HorizontalAlignment}" VerticalAlignment="{TemplateBinding VerticalAlignment}" Foreground="{StaticResource GlyphBackgroundBrush}" >
                <Path Data="{StaticResource PlusIcon}"
                     Width="8"
                     Height="8"
                     Fill="{Binding Path=(Foreground), RelativeSource={RelativeSource AncestorType=ContentControl}}"
                     Stretch="Fill"/>
            </ContentControl>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="content" Property="Foreground" Value="{StaticResource GlyphHoverBackgroundBrush}" />
                <Setter TargetName="Bg" Property="Fill" Value="{StaticResource ButtonHoverBackgroundBrush}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter TargetName="content" Property="Foreground" Value="{StaticResource GlyphPressedBackgroundBrush}" />
                <Setter TargetName="Bg" Property="Fill" Value="{StaticResource ButtonPressedBackgroundBrush}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="content" Property="Opacity" Value="0.3" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!--  *********************************  SpinDOWN  *********************************  -->
    <ControlTemplate x:Key="SpinDownButtonTemplate" TargetType="RepeatButton">
        <Grid>
            <Rectangle x:Name="Bg" Width="22" Height="22" Fill="{StaticResource TransparentBrush}" />
            <ContentControl x:Name="content" IsTabStop="False" HorizontalAlignment="{TemplateBinding HorizontalAlignment}" VerticalAlignment="{TemplateBinding VerticalAlignment}" Foreground="{StaticResource GlyphBackgroundBrush}" >
                <Path Data="{StaticResource MinusIcon}"
                      Width="8"
                      Height="2"
                      Fill="{Binding Path=(Foreground), RelativeSource={RelativeSource AncestorType=ContentControl}}"
                      Stretch="Fill"/>
            </ContentControl>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="content" Property="Foreground" Value="{StaticResource GlyphHoverBackgroundBrush}" />
                <Setter TargetName="Bg" Property="Fill" Value="{StaticResource ButtonHoverBackgroundBrush}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter TargetName="content" Property="Foreground" Value="{StaticResource GlyphPressedBackgroundBrush}" />
                <Setter TargetName="Bg" Property="Fill" Value="{StaticResource ButtonPressedBackgroundBrush}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="content" Property="Opacity" Value="0.3" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!--  *********************************  SpinButton Style  *********************************  -->
    <Style x:Key="SpinButtonStyle" TargetType="RepeatButton">
        <Setter Property="Padding" Value="3,1" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="igPrim:XamlHelper.Focusable" Value="False" />   
    </Style>

    <!--  *********************************  DateTimeInputTextBox Style  *********************************  -->
    <Style x:Key="DateTimeInputTextBoxStyle" TargetType="TextBox">
        <Setter Property="Background" Value="{StaticResource TransparentBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource TransparentBrush}" />
        <Setter Property="CaretBrush" Value="{StaticResource CaretForegroundBrush}" />
        <Setter Property="SelectionBrush" Value="{StaticResource SelectionBrush}" />
    </Style>

    <!--  *********************************  DropDownButton Style  *********************************  -->
    <Style x:Key="DropDownButtonStyle" TargetType="ToggleButton">
        <Setter Property="Padding" Value="2" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="MinWidth" Value="{StaticResource ToggleMinWidth}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Grid x:Name="Main">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="Arrow" Storyboard.TargetProperty="Fill">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource GlyphHoverBackgroundBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="Bd" Storyboard.TargetProperty="Background">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonHoverBackgroundBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="Arrow" Storyboard.TargetProperty="Fill">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource GlyphHoverBackgroundBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="Bd" Storyboard.TargetProperty="Background">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonPressedBackgroundBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="Main" Storyboard.TargetProperty="Opacity">
                                            <SplineDoubleKeyFrame KeyTime="0" Value="0.3" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CheckStates">
                                <VisualState x:Name="Checked">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="Arrow" Storyboard.TargetProperty="Opacity">
                                            <SplineDoubleKeyFrame KeyTime="0" Value="0" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ArrowSelected" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="Bd" Storyboard.TargetProperty="Background">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonPressedBackgroundBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unchecked" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused" />
                                <VisualState x:Name="Unfocused" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="Bd" Background="{StaticResource TransparentBrush}" CornerRadius="{StaticResource DropDownCornerRadius}" />
                        <Path x:Name="Arrow"
                              Width="7"
                              Height="4"
                              Margin="{TemplateBinding Padding}"
                              Data="{StaticResource DownArrow}"
                              Fill="{StaticResource GlyphBackgroundBrush}"
                              Stretch="Fill" />
                        <Path x:Name="ArrowSelected"
                              Width="7"
                              Height="4"
                              Margin="{TemplateBinding Padding}"
                              Data="{StaticResource DownArrow}"
                              Fill="{StaticResource GlyphHoverBackgroundBrush}"
                              Stretch="Fill"
                              Visibility="Collapsed" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>

    <!--  *********************************  XamDateTimeInput Style  *********************************  -->
    <Style x:Key="XamDateTimeInputStyle" TargetType="local:XamDateTimeInput">
        <Setter Property="Background" Value="{StaticResource InputBackgroundBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource InputBorderBrush}" />
        <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
        <Setter Property="FontFamily" Value="{StaticResource FontFamily}" />
        <Setter Property="FontSize" Value="{StaticResource FontSize}" />
        <Setter Property="FontWeight" Value="{StaticResource FontNormal}" />
        <Setter Property="Padding" Value="8,0" />
        <Setter Property="igPrim:XamlHelper.SnapsToDevicePixels" Value="True" />
        <Setter Property="SpinButtonStyle" Value="{StaticResource SpinButtonStyle}" />
        <Setter Property="DropDownButtonStyle" Value="{StaticResource DropDownButtonStyle}" />
        <Setter Property="BorderThickness" Value="{StaticResource DefaultBorderThickness}" />
        <Setter Property="MinHeight" Value="{StaticResource DefaultMinHeight}" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:XamDateTimeInput">
                    <igPrim:ValidationDecorator x:Name="MainBorder">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="OverBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="MainBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="0.3" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="ReadOnly" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Unfocused" />
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="FocusBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CheckedStates">
                                <VisualState x:Name="Unchecked" />
                                <VisualState x:Name="Checked">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="FocusBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid x:Name="MainGrid" Width="Auto">
                            <Grid Width="Auto" Height="Auto">
                                <Border x:Name="Background"
                                        Background="{TemplateBinding Background}"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        CornerRadius="{StaticResource CornerRadius}">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*" />
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="Auto" />
                                        </Grid.ColumnDefinitions>
                                        <igPrim:MaskedInputTextBox x:Name="PART_InputTextBox"
                                                                   Margin="{TemplateBinding Padding}"
                                                                   HorizontalAlignment="Stretch"
                                                                   VerticalAlignment="Stretch"
                                                                   HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                                   VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                                                   Foreground="{TemplateBinding Foreground}"
                                                                   InputMethod.PreferredImeState="{TemplateBinding InputMethod.PreferredImeState}"
                                                                   Style="{StaticResource DateTimeInputTextBoxStyle}"
                                                                   TextAlignment="{Binding HorizontalContentAlignment, Converter={StaticResource HorizontalToTextAlignmentConverter}, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
                                        <Grid x:Name="PART_SpinButtons" Grid.Column="1" igPrim:XamlHelper.SnapsToDevicePixels="True" Visibility="{TemplateBinding SpinButtonVisibilityResolved}">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="*" />
                                                <ColumnDefinition Width="*" />
                                            </Grid.ColumnDefinitions>
                                            <Border x:Name="SpinButtonsBorder"
                                                    Grid.ColumnSpan="2"
                                                    Margin="0 0 -1 0"
                                                    HorizontalAlignment="Right"
                                                    BorderBrush="{StaticResource ButtonBorderBrush}"
                                                    BorderThickness="0 0 1 0" />
                                            <RepeatButton x:Name="spinDown"
                                                          Grid.Column="0"
                                                          Margin="0 0 1 0"
                                                          VerticalAlignment="Center"
                                                          Style="{TemplateBinding SpinButtonStyle}"                                                         
                                                          Template="{StaticResource SpinDownButtonTemplate}">                                             
                                                <local:Commanding.Command>
                                                    <igPrim:MaskedInputCommandSource CommandId="SpinDown" EventName="Click" />
                                                </local:Commanding.Command>
                                            </RepeatButton>
                                            <RepeatButton x:Name="spinUp"
                                                          Grid.Column="1"
                                                          VerticalAlignment="Center"
                                                          Style="{TemplateBinding SpinButtonStyle}"
                                                          Template="{StaticResource SpinUpButtonTemplate}">                                                
                                                <local:Commanding.Command>
                                                    <igPrim:MaskedInputCommandSource CommandId="SpinUp" EventName="Click" />
                                                </local:Commanding.Command>
                                            </RepeatButton>
                                        </Grid>

                                        <ToggleButton x:Name="PART_DropDownButton"
                                                      Grid.RowSpan="3"
                                                      Grid.Column="2"
                                                      igPrim:XamlHelper.Focusable="False"
                                                      ClickMode="Press"
                                                      IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                                      IsEnabled="{Binding IsReadOnly, Converter={StaticResource ComplementConverter}, RelativeSource={RelativeSource TemplatedParent}}"
                                                      IsTabStop="False"
                                                      Style="{TemplateBinding DropDownButtonStyle}"
                                                      Visibility="{TemplateBinding DropDownButtonVisibility}" />
                                    </Grid>
                                </Border>

                                <Border x:Name="OverBorder"
                                        BorderBrush="{StaticResource InputHoverBorderBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        CornerRadius="{StaticResource CornerRadius}"
                                        Opacity="0" />
                                <Border x:Name="FocusBorder"
                                        BorderBrush="{StaticResource InputFocusedBorderBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        CornerRadius="{StaticResource CornerRadius}"
                                        Opacity="0" />

                                <Popup x:Name="PART_Popup">
                                    <Border Margin="1,1,0,0">
                                        <local:XamCalendar x:Name="PART_Calendar"
                                                           FontFamily="{TemplateBinding FontFamily}"
                                                           FontSize="{TemplateBinding FontSize}"
                                                           FontStretch="{TemplateBinding FontStretch}"
                                                           MaxDate="{TemplateBinding ComputedMaxDate}"
                                                           MinCalendarMode="{TemplateBinding ComputedMinCalendarMode}"
                                                           MinDate="{TemplateBinding ComputedMinDate}"
                                                           ScrollDirection="{TemplateBinding ScrollDirection}"
                                                           SelectedDate="{Binding DateValue, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                                           SelectionMode="SingleDate"
                                                           igPrim:XamlHelper.SnapsToDevicePixels="True"/>
                                    </Border>
                                </Popup>
                            </Grid>
                        </Grid>
                    </igPrim:ValidationDecorator>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style BasedOn="{StaticResource XamDateTimeInputStyle}" TargetType="local:XamDateTimeInput" />

</ResourceDictionary>