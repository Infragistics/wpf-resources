<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
                    xmlns:local="http://schemas.infragistics.com/xaml"
                    xmlns:localPrim="http://schemas.infragistics.com/xaml/primitives"
                    xmlns:ig="http://schemas.infragistics.com/xaml" 
                    xmlns:igBase="http://schemas.infragistics.com/xaml"
                    xmlns:igPrim="http://schemas.infragistics.com/xaml/primitives"
                    xmlns:igPrimLocal="http://schemas.infragistics.com/xaml/primitives"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
                    xmlns:PresentationOptions="http://schemas.microsoft.com/winfx/2006/xaml/presentation/options"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:d="http://schemas.microsoft.com/expression/blend/2008" mc:Ignorable="PresentationOptions d">

  <!-- *********************************  RESOURCES  ********************************* -->
  <ResourceDictionary.MergedDictionaries>
    <ResourceDictionary Source="IG.Theme.Colors.xaml" />
  </ResourceDictionary.MergedDictionaries>

  <igPrim:SystemResourceProvider x:Key="SRP" />

  <!-- *********************************  BRUSHES  ********************************* -->
  <SolidColorBrush x:Key="ForegroundBrush" Color="{StaticResource Color_001}" />
  <SolidColorBrush x:Key="LightForegroundBrush" Color="{StaticResource Color_011}" />

  <!-- Button Brushes -->
  <LinearGradientBrush x:Key="ButtonBackgroundBrush" EndPoint="0.5,1" StartPoint="0.5,0">
    <GradientStop Color="{StaticResource Color_004}" />
    <GradientStop Color="{StaticResource Color_002}" Offset="1" />
  </LinearGradientBrush>

  <LinearGradientBrush x:Key="ButtonArrowHoverBackgroundBrush" EndPoint="0.5,1" StartPoint="0.5,0">
    <GradientStop Color="{StaticResource Color_014}" />
    <GradientStop Color="{StaticResource Color_016}" Offset="1" />
  </LinearGradientBrush>

  <LinearGradientBrush x:Key="ButtonArrowPressedBackgroundBrush" EndPoint="0.5,1" StartPoint="0.5,0">
    <GradientStop Color="{StaticResource Color_014}" Offset="1" />
    <GradientStop Color="{StaticResource Color_016}" />
  </LinearGradientBrush>

  <LinearGradientBrush x:Key="ButtonArrowDisabledBackgroundBrush" EndPoint="0.5,1" StartPoint="0.5,0">
    <GradientStop Color="{StaticResource Color_008}" />
    <GradientStop Color="{StaticResource Color_006}" Offset="1" />
  </LinearGradientBrush>

  <SolidColorBrush x:Key="ButtonArrowHoverBorderBrush" Color="{StaticResource Color_016}" />
  <SolidColorBrush x:Key="ButtonArrowPressedBorderBrush" Color="{StaticResource Color_016}" />
  <SolidColorBrush x:Key="ButtonBorderBrush" Color="{StaticResource Color_002}" />
  <SolidColorBrush x:Key="ButtonArrowDisabledBorderBrush" Color="{StaticResource Color_007}" />
  <SolidColorBrush x:Key="ButtonHoverHighlightBorderBrush" Color="{StaticResource Color_013}" />

  <!-- DropDownButton Brushes -->
  <LinearGradientBrush PresentationOptions:Freeze="true" x:Key="DropDownInnerBorderBrush" StartPoint="0.5,0" EndPoint="0.5,1">
    <GradientStop Offset="0" Color="{StaticResource Color_011}" />
    <GradientStop Offset="0.69" Color="{StaticResource Color_008}" />
    <GradientStop Offset="0.69" Color="{StaticResource Color_008}" />
    <GradientStop Offset="1" Color="{StaticResource Color_008}" />
  </LinearGradientBrush>

  <LinearGradientBrush PresentationOptions:Freeze="true" x:Key="DropDownCenterBackgroundBrush" EndPoint=".7,1" StartPoint=".7,0">
    <GradientStop Color="{StaticResource Color_008}" Offset="0.888" />
    <GradientStop Color="{StaticResource Color_011}" Offset="0.276" />
  </LinearGradientBrush>

  <LinearGradientBrush PresentationOptions:Freeze="true" x:Key="DropDownPressedInnerBorderBrush" StartPoint="0.5,0" EndPoint="0.5,1">
    <GradientStop Color="{StaticResource Color_013}" Offset="0" />
    <GradientStop Color="{StaticResource Color_013}" Offset="0.5" />
    <GradientStop Color="{StaticResource Color_013}" Offset="0.5008999705314636" />
    <GradientStop Color="{StaticResource Color_013}" Offset="0.8999999761581421" />
    <GradientStop Color="{StaticResource Color_013}" Offset="1" />
  </LinearGradientBrush>

  <LinearGradientBrush x:Key="DropDownPressedBackgroundBrush" StartPoint="0,0 " EndPoint="0,1 ">
    <GradientStop Color="{StaticResource Color_014}" Offset="1" />
    <GradientStop Color="{StaticResource Color_016}" />
  </LinearGradientBrush>

  <SolidColorBrush x:Key="DropDownPressedBorderBrush" Color="{StaticResource Color_016}" PresentationOptions:Freeze="true" />
  <SolidColorBrush PresentationOptions:Freeze="true" x:Key="DropDownBorderBrush" Color="{StaticResource Color_002}" />

  <!-- DateTimeInput Brushes -->
  <SolidColorBrush x:Key="InputBorderBrush" Color="{StaticResource Color_006}" />
  <SolidColorBrush x:Key="InputFocusedBorderBrush" Color="{StaticResource Color_015}" />
  <SolidColorBrush x:Key="InputTextBoxBackgroundBrush" Color="{StaticResource Color_021}" />
  <SolidColorBrush x:Key="InputTextBoxBorderBrush" Color="{StaticResource Color_021}" />
  <LinearGradientBrush x:Key="InputBackgroundBrush" StartPoint="0.505,0.469" EndPoint="0.505,-0.023">
    <GradientStop Color="{StaticResource Color_011}" Offset="0.377" />
    <GradientStop Color="{StaticResource Color_009}" Offset="1" />
  </LinearGradientBrush>
  <RadialGradientBrush x:Key="InputInnerShadowBackgroundBrush" RadiusX="0.916" RadiusY="1.667" Center="0.72,0.528" GradientOrigin="0.72,0.528">
    <GradientStop Color="{StaticResource Color_026}" Offset="0.679" />
    <GradientStop Color="{StaticResource Color_027}" Offset="0.913" />
  </RadialGradientBrush>

  <!-- Glyph Brushes -->
  <SolidColorBrush x:Key="GlyphBackgroundBrush" Color="{StaticResource Color_011}" />

  <!-- *********************************  XamCalendar Style  ********************************* -->
  <Style x:Key="XamCalendar" TargetType="ig:XamCalendar">
    <Setter Property="ResourceProvider">
      <Setter.Value>
        <ig:CalendarResourceProvider ResourceSet="IGTheme" />
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="ig:XamCalendar" BasedOn="{StaticResource XamCalendar}" />

  <!-- *********************************  Value Converters  ********************************* -->
  <igPrim:ValueConverterGroup x:Key="horizToTextAlignmentConverter">
    <!-- Left to Left -->
    <igPrim:FixedValueConverter>
      <igPrim:FixedValueConverter.SourceValue>
        <HorizontalAlignment>Left</HorizontalAlignment>
      </igPrim:FixedValueConverter.SourceValue>
      <igPrim:FixedValueConverter.DestinationValue>
        <TextAlignment>Left</TextAlignment>
      </igPrim:FixedValueConverter.DestinationValue>
    </igPrim:FixedValueConverter>

    <!-- Center to Center -->
    <igPrim:FixedValueConverter>
      <igPrim:FixedValueConverter.SourceValue>
        <HorizontalAlignment>Center</HorizontalAlignment>
      </igPrim:FixedValueConverter.SourceValue>
      <igPrim:FixedValueConverter.DestinationValue>
        <TextAlignment>Center</TextAlignment>
      </igPrim:FixedValueConverter.DestinationValue>
    </igPrim:FixedValueConverter>

    <!-- Right to Right -->
    <igPrim:FixedValueConverter>
      <igPrim:FixedValueConverter.SourceValue>
        <HorizontalAlignment>Right</HorizontalAlignment>
      </igPrim:FixedValueConverter.SourceValue>
      <igPrim:FixedValueConverter.DestinationValue>
        <TextAlignment>Right</TextAlignment>
      </igPrim:FixedValueConverter.DestinationValue>
    </igPrim:FixedValueConverter>

    <!-- Stretch to Left -->
    <igPrim:FixedValueConverter>
      <igPrim:FixedValueConverter.SourceValue>
        <HorizontalAlignment>Stretch</HorizontalAlignment>
      </igPrim:FixedValueConverter.SourceValue>
      <igPrim:FixedValueConverter.DestinationValue>
        <TextAlignment>Left</TextAlignment>
      </igPrim:FixedValueConverter.DestinationValue>
    </igPrim:FixedValueConverter>

  </igPrim:ValueConverterGroup>

  <igPrim:ValueConverterGroup x:Key="complementConverter">
    <!-- True to False -->
    <igPrim:FixedValueConverter>
      <igPrim:FixedValueConverter.SourceValue>
        <sys:Boolean>True</sys:Boolean>
      </igPrim:FixedValueConverter.SourceValue>
      <igPrim:FixedValueConverter.DestinationValue>
        <sys:Boolean>False</sys:Boolean>
      </igPrim:FixedValueConverter.DestinationValue>
    </igPrim:FixedValueConverter>

    <!-- False to True -->
    <igPrim:FixedValueConverter>
      <igPrim:FixedValueConverter.SourceValue>
        <sys:Boolean>False</sys:Boolean>
      </igPrim:FixedValueConverter.SourceValue>
      <igPrim:FixedValueConverter.DestinationValue>
        <sys:Boolean>True</sys:Boolean>
      </igPrim:FixedValueConverter.DestinationValue>
    </igPrim:FixedValueConverter>

  </igPrim:ValueConverterGroup>

  <!-- dims the glyph when the control is disabled -->
  <igPrim:FixedValueConverter x:Key="enabledToOpacity">
    <igPrim:FixedValueConverter.SourceValue>
      <sys:Boolean>False</sys:Boolean>
    </igPrim:FixedValueConverter.SourceValue>
    <igPrim:FixedValueConverter.DestinationValue>
      <sys:Double>25e-2</sys:Double>
    </igPrim:FixedValueConverter.DestinationValue>
  </igPrim:FixedValueConverter>

  <igPrim:ValueConverterGroup x:Key="defaultBtnOuterBorderConverter">
    <!-- True (IsChecked}-->
    <igPrim:FixedValueConverter DestinationValue="{StaticResource DropDownPressedBorderBrush}">
      <igPrim:FixedValueConverter.SourceValue>
        <sys:Boolean>True</sys:Boolean>
      </igPrim:FixedValueConverter.SourceValue>
    </igPrim:FixedValueConverter>

    <!-- False (IsChecked}-->
    <igPrim:FixedValueConverter DestinationValue="{StaticResource DropDownBorderBrush}">
      <igPrim:FixedValueConverter.SourceValue>
        <sys:Boolean>False</sys:Boolean>
      </igPrim:FixedValueConverter.SourceValue>
    </igPrim:FixedValueConverter>
  </igPrim:ValueConverterGroup>

  <igPrim:ValueConverterGroup x:Key="defaultBtnInnerBorderConverter">
    <!-- True (IsChecked}-->
    <igPrim:FixedValueConverter DestinationValue="{StaticResource DropDownPressedInnerBorderBrush}">
      <igPrim:FixedValueConverter.SourceValue>
        <sys:Boolean>True</sys:Boolean>
      </igPrim:FixedValueConverter.SourceValue>
    </igPrim:FixedValueConverter>

    <!-- False (IsChecked}-->
    <igPrim:FixedValueConverter DestinationValue="{StaticResource DropDownInnerBorderBrush}">
      <igPrim:FixedValueConverter.SourceValue>
        <sys:Boolean>False</sys:Boolean>
      </igPrim:FixedValueConverter.SourceValue>
    </igPrim:FixedValueConverter>
  </igPrim:ValueConverterGroup>

  <igPrim:ValueConverterGroup x:Key="defaultBtnCenterConverter">
    <!-- True (IsChecked}-->
    <igPrim:FixedValueConverter DestinationValue="{StaticResource DropDownPressedBackgroundBrush}">
      <igPrim:FixedValueConverter.SourceValue>
        <sys:Boolean>True</sys:Boolean>
      </igPrim:FixedValueConverter.SourceValue>
    </igPrim:FixedValueConverter>

    <!-- False (IsChecked}-->
    <igPrim:FixedValueConverter DestinationValue="{StaticResource DropDownCenterBackgroundBrush}">
      <igPrim:FixedValueConverter.SourceValue>
        <sys:Boolean>False</sys:Boolean>
      </igPrim:FixedValueConverter.SourceValue>
    </igPrim:FixedValueConverter>
  </igPrim:ValueConverterGroup>

  <!-- *********************************  Glyph Templates  ********************************* -->
  <DataTemplate x:Key="IncreaseGlyphKey">
    <Path Width="7" Height="4" Data="M 0,3 C0,3 0,4 0,4 0,4 3,4 3,4 3,4 3,3 3,3 3,3 4,3 4,3 4,3 4,4 4,4 4,4 7,4 7,4 7,4 7,3 7,3 7,3 6,3 6,3 6,3 6,2 6,2 6,2 5,2 5,2 5,2 5,1 5,1 5,1 4,1 4,1 4,1 4,0 4,0 4,0 3,0 3,0 3,0 3,1 3,1 3,1 2,1 2,1 2,1 2,2 2,2 2,2 1,2 1,2 1,2 1,3 1,3 1,3 0,3 0,3 z" Fill="{StaticResource GlyphBackgroundBrush}" />
  </DataTemplate>

  <DataTemplate x:Key="DecreaseGlyphKey">
    <Path Width="7" Height="4" Data="M 0,1 C0,1 0,0 0,0 0,0 3,0 3,0 3,0 3,1 3,1 3,1 4,1 4,1 4,1 4,0 4,0 4,0 7,0 7,0 7,0 7,1 7,1 7,1 6,1 6,1 6,1 6,2 6,2 6,2 5,2 5,2 5,2 5,3 5,3 5,3 4,3 4,3 4,3 4,4 4,4 4,4 3,4 3,4 3,4 3,3 3,3 3,3 2,3 2,3 2,3 2,2 2,2 2,2 1,2 1,2 1,2 1,1 1,1 1,1 0,1 0,1 z" Fill="{StaticResource GlyphBackgroundBrush}" />
  </DataTemplate>

  <!-- *********************************  RepeatButton Template  ********************************* -->
  <ControlTemplate x:Key="RepeatButtonTemplate" TargetType="RepeatButton">
    <Grid>
      <VisualStateManager.VisualStateGroups>
        <VisualStateGroup x:Name="CommonStates">
          <VisualState x:Name="Normal" />
          <VisualState x:Name="MouseOver">
            <Storyboard>
              <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Bd" Storyboard.TargetProperty="Fill">
                <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonArrowHoverBackgroundBrush}" />
              </ObjectAnimationUsingKeyFrames>
              <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Bd" Storyboard.TargetProperty="Stroke">
                <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonArrowHoverBorderBrush}" />
              </ObjectAnimationUsingKeyFrames>
            </Storyboard>
          </VisualState>
          <VisualState x:Name="Pressed">
            <Storyboard>
              <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Bd" Storyboard.TargetProperty="Fill">
                <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonArrowPressedBackgroundBrush}" />
              </ObjectAnimationUsingKeyFrames>
              <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Bd" Storyboard.TargetProperty="Stroke">
                <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonArrowPressedBorderBrush}" />
              </ObjectAnimationUsingKeyFrames>
            </Storyboard>
          </VisualState>
          <VisualState x:Name="Disabled">
            <Storyboard>
              <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Bd" Storyboard.TargetProperty="Fill">
                <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonArrowDisabledBackgroundBrush}" />
              </ObjectAnimationUsingKeyFrames>
              <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Bd" Storyboard.TargetProperty="Stroke">
                <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonArrowDisabledBorderBrush}" />
              </ObjectAnimationUsingKeyFrames>
            </Storyboard>
          </VisualState>
        </VisualStateGroup>
        <VisualStateGroup x:Name="FocusStates">
          <VisualState x:Name="Focused" />
          <VisualState x:Name="Unfocused" />
        </VisualStateGroup>
      </VisualStateManager.VisualStateGroups>
      <Rectangle x:Name="Bd" RadiusY="2" RadiusX="2" Stroke="{StaticResource ButtonBorderBrush}" StrokeThickness="1" Fill="{StaticResource ButtonBackgroundBrush}" />
      <ContentControl IsTabStop="{TemplateBinding IsTabStop}" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="{StaticResource LightForegroundBrush}">
        <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
      </ContentControl>
    </Grid>
  </ControlTemplate>

  <!-- *********************************  SpinButton Style  ********************************* -->
  <Style x:Key="spinButtonStyle" TargetType="RepeatButton">
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="Padding" Value="3,1" />
    <Setter Property="IsTabStop" Value="False" />
    <Setter Property="igPrim:XamlHelper.Focusable" Value="False" />
    <Setter Property="Template" Value="{StaticResource RepeatButtonTemplate}" />
  </Style>

  <!-- *********************************  DateTimeInputTextBox Style  ********************************* -->
  <Style x:Key="DateTimeInputTextBoxStyle" TargetType="TextBox">
    <Setter Property="Padding" Value="2"></Setter>
    <Setter Property="Background" Value="{StaticResource InputTextBoxBackgroundBrush}" />
    <Setter Property="BorderBrush" Value="{StaticResource InputTextBoxBorderBrush}" />
    <Setter Property="BorderThickness" Value="0" />
  </Style>

  <!-- *********************************  DropDownButton Style  ********************************* -->
  <Style x:Key="DropDownButtonStyle" TargetType="ToggleButton">
    <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
    <Setter Property="BorderBrush" Value="{StaticResource ButtonBorderBrush}" />
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="Padding" Value="2" />
    <Setter Property="Cursor" Value="Hand" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="ToggleButton">
          <Grid>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="MouseOver">
                  <Storyboard>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="BackgroundHover" Storyboard.TargetProperty="Opacity">
                      <SplineDoubleKeyFrame KeyTime="0" Value="1" />
                    </DoubleAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Pressed">
                  <Storyboard>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="BackgroundPressed" Storyboard.TargetProperty="Opacity">
                      <SplineDoubleKeyFrame KeyTime="0" Value="1" />
                    </DoubleAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Disabled">
                  <Storyboard>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="BackgroundDisabled">
                      <EasingDoubleKeyFrame KeyTime="0" Value="1" />
                    </DoubleAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="CheckStates">
                <VisualState x:Name="Checked" />
                <VisualState x:Name="Unchecked" />
                <VisualState x:Name="Indeterminate" />
              </VisualStateGroup>
              <VisualStateGroup x:Name="FocusStates">
                <VisualState x:Name="Focused" />
                <VisualState x:Name="Unfocused" />
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid>
              <Border x:Name="Background" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="2" />
              <Border x:Name="BackgroundHover" Background="{StaticResource ButtonArrowHoverBackgroundBrush}" BorderBrush="{StaticResource ButtonArrowHoverBorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="2" Opacity="0" />
              <Border x:Name="BackgroundPressed" Background="{StaticResource ButtonArrowPressedBackgroundBrush}" BorderBrush="{StaticResource ButtonArrowPressedBorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="1" Opacity="0" />
              <Border x:Name="BackgroundDisabled" Background="{StaticResource ButtonArrowDisabledBackgroundBrush}" BorderBrush="{StaticResource ButtonArrowDisabledBorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="1" Opacity="0" />
              <Border x:Name="Highlight" BorderBrush="{StaticResource ButtonHoverHighlightBorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="1" Margin="{TemplateBinding BorderThickness}" IsHitTestVisible="false" Opacity="0" />
            </Grid>
            <Grid VerticalAlignment="Center" Margin="0" HorizontalAlignment="Center">
              <Path x:Name="BtnArrowBackground" Stretch="Fill" Height="4" Margin="0,2,0,0" Width="7" Data="M 0,0 C0,0 7,0 7,0 7,0 3.5,3.5 3.5,3.5 3.5,3.5 0,0 0,0 z">
                <Path.Fill>
                  <SolidColorBrush x:Name="BtnArrowColorBackground" Color="{StaticResource Color_011}" />
                </Path.Fill>
              </Path>
              <Path x:Name="BtnArrowForeground" Stretch="Fill" Height="4" Width="7" Data="M 0,0 C0,0 7,0 7,0 7,0 3.5,3.5 3.5,3.5 3.5,3.5 0,0 0,0 z">
                <Path.Fill>
                  <SolidColorBrush x:Name="BtnArrowColorForeground" Color="{StaticResource Color_011}" />
                </Path.Fill>
              </Path>
            </Grid>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="Background" Value="{StaticResource ButtonBackgroundBrush}" />
  </Style>

  <!-- *********************************  XamDateTimeInput Style  ********************************* -->
  <Style x:Key="XamDateTimeInput" TargetType="local:XamDateTimeInput">
    <Setter Property="Background" Value="{StaticResource InputBackgroundBrush}" />
    <Setter Property="igPrim:XamlHelper.SnapsToDevicePixels" Value="True" />
    <Setter Property="SpinButtonStyle" Value="{StaticResource spinButtonStyle}" />
    <Setter Property="DropDownButtonStyle" Value="{StaticResource DropDownButtonStyle}" />
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="MinHeight" Value="22" />
    <Setter Property="Padding" Value="1"></Setter>
    <Setter Property="BorderBrush" Value="{StaticResource InputBorderBrush}" />
    <Setter Property="HorizontalContentAlignment" Value="Left" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="local:XamDateTimeInput">
                    <igPrim:ValidationDecorator x:Name="MainBorder">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="FocusStates">
                <VisualState x:Name="FocusedDropDown" />
                <VisualState x:Name="Unfocused" />
                <VisualState x:Name="Focused">
                  <Storyboard>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="FocusBorder">
                      <EasingDoubleKeyFrame KeyTime="0" Value="1" />
                    </DoubleAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="MouseOver">
                  <Storyboard>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="OverBorder">
                      <EasingDoubleKeyFrame KeyTime="0" Value="1" />
                    </DoubleAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Disabled">
                  <Storyboard>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="PART_InputTextBox">
                      <EasingDoubleKeyFrame KeyTime="0" Value="0.25" />
                    </DoubleAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Normal" />
                <VisualState x:Name="ReadOnly" />
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid x:Name="MainGrid" Width="Auto">
              <Grid Height="Auto" Width="Auto">

                <Border x:Name="BgBorder" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Grid.ColumnSpan="1" Visibility="Visible" CornerRadius="2" Margin="0">
                  <Grid>
                    <Grid.ColumnDefinitions>
                      <ColumnDefinition Width="*" />
                      <ColumnDefinition Width="Auto" />
                      <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <Grid Margin="-1" Grid.ColumnSpan="3">
                      <Border x:Name="OverBorder" BorderThickness="1" CornerRadius="2" Opacity="0" BorderBrush="{StaticResource InputFocusedBorderBrush}" />
                      <Border x:Name="FocusBorder" BorderThickness="1" CornerRadius="2" Opacity="0" BorderBrush="{StaticResource InputFocusedBorderBrush}" />
                      <Rectangle x:Name="innerShadow" Width="20" Fill="{StaticResource InputInnerShadowBackgroundBrush}" StrokeThickness="0" HorizontalAlignment="Left" Margin="1,1,0,1" RadiusX="2" RadiusY="2" />
                    </Grid>
                    <Grid>
                      <igPrim:MaskedInputTextBox x:Name="PART_InputTextBox" Style="{StaticResource DateTimeInputTextBoxStyle}" HorizontalAlignment="Stretch" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" VerticalAlignment="Stretch" Margin="{TemplateBinding Padding}" TextAlignment="{Binding HorizontalContentAlignment, Converter={StaticResource horizToTextAlignmentConverter}, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" Foreground="{TemplateBinding Foreground}" InputMethod.PreferredImeState="{TemplateBinding InputMethod.PreferredImeState}" />
                    </Grid>
                    <Grid x:Name="PART_SpinButtons" Grid.Column="1" Visibility="{TemplateBinding SpinButtonVisibilityResolved}" Margin="0,1,1,1">
                      <Grid.RowDefinitions>
                        <RowDefinition Height="*" />
                        <RowDefinition Height="1" />
                        <RowDefinition Height="*" />
                      </Grid.RowDefinitions>
                      <RepeatButton x:Name="spinUp" Style="{TemplateBinding SpinButtonStyle}" ContentTemplate="{StaticResource IncreaseGlyphKey}">
                        <ig:Commanding.Command>
                          <igPrim:MaskedInputCommandSource EventName="Click" CommandId="SpinUp" />
                        </ig:Commanding.Command>
                      </RepeatButton>
                      <RepeatButton x:Name="spinDown" Style="{TemplateBinding SpinButtonStyle}" Grid.Row="2" ContentTemplate="{StaticResource DecreaseGlyphKey}">
                        <ig:Commanding.Command>
                          <igPrim:MaskedInputCommandSource EventName="Click" CommandId="SpinDown" />
                        </ig:Commanding.Command>
                      </RepeatButton>
                    </Grid>
                    <ToggleButton x:Name="PART_DropDownButton" Grid.Column="2" Grid.RowSpan="3" ClickMode="Press" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" IsEnabled="{Binding IsReadOnly, Converter={StaticResource complementConverter}, RelativeSource={RelativeSource TemplatedParent}}" Style="{TemplateBinding DropDownButtonStyle}" Visibility="{TemplateBinding DropDownButtonVisibility}" igPrim:XamlHelper.Focusable="False" IsTabStop="False" Margin="0,1,1,1" />
                  </Grid>
                </Border>
                <Popup x:Name="PART_Popup">
                  <Border Background="{Binding [WindowBrush], Source={StaticResource SRP}}" BorderBrush="{Binding [WindowFrameBrush], Source={StaticResource SRP}}" BorderThickness="1" Padding="1">
                    <ig:XamCalendar x:Name="PART_Calendar" MinDate="{TemplateBinding ComputedMinDate}" MaxDate="{TemplateBinding ComputedMaxDate}" MinCalendarMode="{TemplateBinding ComputedMinCalendarMode}" SelectedDate="{Binding DateValue, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" SelectionMode="SingleDate" ScrollDirection="{TemplateBinding ScrollDirection}" />
                  </Border>
                </Popup>
              </Grid>
            </Grid>
                    </igPrim:ValidationDecorator>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="local:XamDateTimeInput" BasedOn="{StaticResource XamDateTimeInput}" />
</ResourceDictionary>