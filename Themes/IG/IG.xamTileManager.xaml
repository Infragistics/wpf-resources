<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
                    xmlns:ig="http://schemas.infragistics.com/xaml" 
                    xmlns:igPrim="http://schemas.infragistics.com/xaml/primitives" 
                    xmlns:sys="clr-namespace:System;assembly=mscorlib" 
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
                    xmlns:PresentationOptions="http://schemas.microsoft.com/winfx/2006/xaml/presentation/options" mc:Ignorable="PresentationOptions">

  <!-- *********************************  RESOURCES  ********************************* -->
  <ResourceDictionary.MergedDictionaries> 
    <ResourceDictionary Source="IG.Styles.xaml" />
  </ResourceDictionary.MergedDictionaries>

  <igPrim:SystemResourceProvider x:Key="SRP" />

  <!-- ********************************** BRUSHES **********************************-->
  <!-- Preview Brushes -->
  <SolidColorBrush x:Key="PreviewBackgroundBrush" Color="{StaticResource Color_028}" />

  <!-- Tooltip Brushes -->
  <LinearGradientBrush x:Key="ToolTipBackgroundBrush" StartPoint="0.5,0" EndPoint="0.5,1" PresentationOptions:Freeze="true">
    <GradientStop Color="{StaticResource Color_011}" Offset="0" />
    <GradientStop Color="{StaticResource Color_009}" Offset="1" />
  </LinearGradientBrush>
  <SolidColorBrush x:Key="ToolTipBorderBrush" Color="{StaticResource Color_005}" PresentationOptions:Freeze="true" />

  <!-- TileHeaderPresenter Brushes -->
  <SolidColorBrush x:Key="TileHeaderPresenterBackgroundBrush" Color="{StaticResource Color_026}" />

  <!-- TileAreaSplitter Brushes -->
  <SolidColorBrush x:Key="TileAreaSplitterBorderBrush" Color="{StaticResource Color_005}" PresentationOptions:Freeze="true" />
  <SolidColorBrush x:Key="TileAreaSplitterBackgroundBrush" Color="{StaticResource Color_009}" PresentationOptions:Freeze="true" />

  <!-- Tiles Brushes -->
  <LinearGradientBrush x:Key="TileBackgroundBrush" StartPoint="0,0" EndPoint="0,1" PresentationOptions:Freeze="true">
    <GradientStop Offset="0" Color="{StaticResource Color_009}" />
    <GradientStop Offset="1" Color="{StaticResource Color_008}" />
  </LinearGradientBrush>
  <SolidColorBrush x:Key="TileBorderBrush" Color="{StaticResource Color_003}" />
  <SolidColorBrush x:Key="TileContentBorderBrush" Color="{StaticResource Color_005}" />
  <SolidColorBrush x:Key="TileCaptionButtonGlyphHoverBackgroundBrush" Color="{StaticResource Color_011}" PresentationOptions:Freeze="true" />
  <SolidColorBrush x:Key="TileCaptionButtonGlyphPressedBackgroundBrush" Color="{StaticResource Color_011}" PresentationOptions:Freeze="true" />
  <LinearGradientBrush x:Key="TileSwapTargetBackgroundBrush" StartPoint="0.5,0" EndPoint="0.5,1" PresentationOptions:Freeze="true">
    <GradientStop Color="{StaticResource Color_027}" Offset="0" />
    <GradientStop Color="{StaticResource Color_029}" Offset="1" />
  </LinearGradientBrush>

  <!-- TileManager Brushes -->
  <SolidColorBrush x:Key="TileManagerBackgroundBrush" Color="{StaticResource Color_021}" />
  <SolidColorBrush x:Key="TileManagerBorderBrush" Color="{StaticResource Color_011}" PresentationOptions:Freeze="true" />

  <igPrim:TileManagerResourceString x:Key="CloseButtonToolTipContent" ResourceName="CloseButtonToolTip" />
  <igPrim:TileManagerResourceString x:Key="MaximizeButtonToolTipContent" ResourceName="MaximizeButtonToolTip" />
  <igPrim:TileManagerResourceString x:Key="MinimizeButtonToolTipContent" ResourceName="MinimizeButtonToolTip" />
  <igPrim:TileManagerResourceString x:Key="ExpandButtonToolTipContent" ResourceName="ExpandButtonToolTip" />
  <igPrim:TileManagerResourceString x:Key="CollapseButtonToolTipContent" ResourceName="CollapseButtonToolTip" />

  <!-- *********************************  ValueConverters  ********************************* -->
  <igPrim:ValueConverterGroup x:Key="boolToVisibility">
    <!-- if true sets visibility to Visible -->
    <igPrim:FixedValueConverter>
      <igPrim:FixedValueConverter.SourceValue>
        <sys:Boolean>True</sys:Boolean>
      </igPrim:FixedValueConverter.SourceValue>
      <igPrim:FixedValueConverter.DestinationValue>
        <Visibility>Visible</Visibility>
      </igPrim:FixedValueConverter.DestinationValue>
    </igPrim:FixedValueConverter>
    <!-- if false sets visibility to Collapsed -->
    <igPrim:FixedValueConverter>
      <igPrim:FixedValueConverter.DestinationValue>
        <Visibility>Collapsed</Visibility>
      </igPrim:FixedValueConverter.DestinationValue>
    </igPrim:FixedValueConverter>
  </igPrim:ValueConverterGroup>

  <igPrim:ValueConverterGroup x:Key="closeActionToBool">
    <!-- if DoNothing converts to false -->
    <igPrim:FixedValueConverter>
      <igPrim:FixedValueConverter.SourceValue>
        <ig:TileCloseAction>DoNothing</ig:TileCloseAction>
      </igPrim:FixedValueConverter.SourceValue>
      <igPrim:FixedValueConverter.DestinationValue>
        <sys:Boolean>False</sys:Boolean>
      </igPrim:FixedValueConverter.DestinationValue>
    </igPrim:FixedValueConverter>
    <!-- else converts to true -->
    <igPrim:FixedValueConverter>
      <igPrim:FixedValueConverter.DestinationValue>
        <sys:Boolean>True</sys:Boolean>
      </igPrim:FixedValueConverter.DestinationValue>
    </igPrim:FixedValueConverter>
  </igPrim:ValueConverterGroup>

  <igPrim:ValueConverterGroup x:Key="stateToExpandCollapseTooltipConverter">
    <igPrim:FixedValueConverter DestinationValue="{StaticResource CollapseButtonToolTipContent}">
      <igPrim:FixedValueConverter.SourceValue>
        <ig:TileState>MinimizedExpanded</ig:TileState>
      </igPrim:FixedValueConverter.SourceValue>
    </igPrim:FixedValueConverter>
    <igPrim:FixedValueConverter DestinationValue="{StaticResource ExpandButtonToolTipContent}">
    </igPrim:FixedValueConverter>
  </igPrim:ValueConverterGroup>

  <igPrim:ValueConverterGroup x:Key="stateToMaximizeMinimizeTooltipConverter">
    <igPrim:FixedValueConverter DestinationValue="{StaticResource MinimizeButtonToolTipContent}">
      <igPrim:FixedValueConverter.SourceValue>
        <ig:TileState>Maximized</ig:TileState>
      </igPrim:FixedValueConverter.SourceValue>
    </igPrim:FixedValueConverter>
    <igPrim:FixedValueConverter DestinationValue="{StaticResource MaximizeButtonToolTipContent}">
    </igPrim:FixedValueConverter>
  </igPrim:ValueConverterGroup>

  <igPrim:ValueConverterGroup x:Key="stateToExpandedGlyphVisibilityConverter">
    <igPrim:FixedValueConverter>
      <igPrim:FixedValueConverter.SourceValue>
        <ig:TileState>MinimizedExpanded</ig:TileState>
      </igPrim:FixedValueConverter.SourceValue>
      <igPrim:FixedValueConverter.DestinationValue>
        <Visibility>Collapsed</Visibility>
      </igPrim:FixedValueConverter.DestinationValue>
    </igPrim:FixedValueConverter>
    <igPrim:FixedValueConverter>
      <igPrim:FixedValueConverter.DestinationValue>
        <Visibility>Visible</Visibility>
      </igPrim:FixedValueConverter.DestinationValue>
    </igPrim:FixedValueConverter>
  </igPrim:ValueConverterGroup>

  <igPrim:ValueConverterGroup x:Key="stateToCollapsededGlyphVisibilityConverter">
    <igPrim:FixedValueConverter>
      <igPrim:FixedValueConverter.SourceValue>
        <ig:TileState>Minimized</ig:TileState>
      </igPrim:FixedValueConverter.SourceValue>
      <igPrim:FixedValueConverter.DestinationValue>
        <Visibility>Collapsed</Visibility>
      </igPrim:FixedValueConverter.DestinationValue>
    </igPrim:FixedValueConverter>
    <igPrim:FixedValueConverter>
      <igPrim:FixedValueConverter.DestinationValue>
        <Visibility>Visible</Visibility>
      </igPrim:FixedValueConverter.DestinationValue>
    </igPrim:FixedValueConverter>
  </igPrim:ValueConverterGroup>

  <igPrim:ValueConverterGroup x:Key="stateToMaximizeGlyphVisibilityConverter">
    <igPrim:FixedValueConverter>
      <igPrim:FixedValueConverter.SourceValue>
        <ig:TileState>Maximized</ig:TileState>
      </igPrim:FixedValueConverter.SourceValue>
      <igPrim:FixedValueConverter.DestinationValue>
        <Visibility>Collapsed</Visibility>
      </igPrim:FixedValueConverter.DestinationValue>
    </igPrim:FixedValueConverter>
    <igPrim:FixedValueConverter>
      <igPrim:FixedValueConverter.DestinationValue>
        <Visibility>Visible</Visibility>
      </igPrim:FixedValueConverter.DestinationValue>
    </igPrim:FixedValueConverter>
  </igPrim:ValueConverterGroup>

  <igPrim:ValueConverterGroup x:Key="stateToRestoreGlyphVisibilityConverter">
    <igPrim:FixedValueConverter>
      <igPrim:FixedValueConverter.SourceValue>
        <ig:TileState>Maximized</ig:TileState>
      </igPrim:FixedValueConverter.SourceValue>
      <igPrim:FixedValueConverter.DestinationValue>
        <Visibility>Visible</Visibility>
      </igPrim:FixedValueConverter.DestinationValue>
    </igPrim:FixedValueConverter>
    <igPrim:FixedValueConverter>
      <igPrim:FixedValueConverter.DestinationValue>
        <Visibility>Collapsed</Visibility>
      </igPrim:FixedValueConverter.DestinationValue>
    </igPrim:FixedValueConverter>
  </igPrim:ValueConverterGroup>

  <igPrim:ValueConverterGroup x:Key="isSwappingToFillConverter">
    <igPrim:FixedValueConverter DestinationValue="{StaticResource TileSwapTargetBackgroundBrush}">
      <igPrim:FixedValueConverter.SourceValue>
        <sys:Boolean>True</sys:Boolean>
      </igPrim:FixedValueConverter.SourceValue>
    </igPrim:FixedValueConverter>
    <igPrim:FixedValueConverter>
      <igPrim:FixedValueConverter.DestinationValue>
        <SolidColorBrush Color="{StaticResource Color_021}" />
      </igPrim:FixedValueConverter.DestinationValue>
    </igPrim:FixedValueConverter>
  </igPrim:ValueConverterGroup>

  <igPrim:ValueConverterGroup x:Key="isDraggingToOpacityConverter">
    <igPrim:FixedValueConverter>
      <igPrim:FixedValueConverter.SourceValue>
        <sys:Boolean>True</sys:Boolean>
      </igPrim:FixedValueConverter.SourceValue>
      <igPrim:FixedValueConverter.DestinationValue>
        <sys:Double>75e-2</sys:Double>
      </igPrim:FixedValueConverter.DestinationValue>
    </igPrim:FixedValueConverter>
    <igPrim:FixedValueConverter>
      <igPrim:FixedValueConverter.DestinationValue>
        <sys:Double>1</sys:Double>
      </igPrim:FixedValueConverter.DestinationValue>
    </igPrim:FixedValueConverter>
  </igPrim:ValueConverterGroup>

  <igPrim:ValueConverterGroup x:Key="HorizontalToVisibilityConverter">
    <igPrim:FixedValueConverter>
      <igPrim:FixedValueConverter.SourceValue>
        <Orientation>Horizontal</Orientation>
      </igPrim:FixedValueConverter.SourceValue>
      <igPrim:FixedValueConverter.DestinationValue>
        <Visibility>Visible</Visibility>
      </igPrim:FixedValueConverter.DestinationValue>
    </igPrim:FixedValueConverter>
    <igPrim:FixedValueConverter>
      <igPrim:FixedValueConverter.DestinationValue>
        <Visibility>Collapsed</Visibility>
      </igPrim:FixedValueConverter.DestinationValue>
    </igPrim:FixedValueConverter>
  </igPrim:ValueConverterGroup>

  <igPrim:ValueConverterGroup x:Key="VerticalToVisibilityConverter">
    <igPrim:FixedValueConverter>
      <igPrim:FixedValueConverter.SourceValue>
        <Orientation>Vertical</Orientation>
      </igPrim:FixedValueConverter.SourceValue>
      <igPrim:FixedValueConverter.DestinationValue>
        <Visibility>Visible</Visibility>
      </igPrim:FixedValueConverter.DestinationValue>
    </igPrim:FixedValueConverter>
    <igPrim:FixedValueConverter>
      <igPrim:FixedValueConverter.DestinationValue>
        <Visibility>Collapsed</Visibility>
      </igPrim:FixedValueConverter.DestinationValue>
    </igPrim:FixedValueConverter>
  </igPrim:ValueConverterGroup>

  <igPrim:ValueConverterGroup x:Key="OrientationToMinWidthConverter">
    <igPrim:FixedValueConverter>
      <igPrim:FixedValueConverter.SourceValue>
        <Orientation>Vertical</Orientation>
      </igPrim:FixedValueConverter.SourceValue>
      <igPrim:FixedValueConverter.DestinationValue>
        <sys:Double>6</sys:Double>
      </igPrim:FixedValueConverter.DestinationValue>
    </igPrim:FixedValueConverter>
    <igPrim:FixedValueConverter>
      <igPrim:FixedValueConverter.DestinationValue>
        <sys:Double>0</sys:Double>
      </igPrim:FixedValueConverter.DestinationValue>
    </igPrim:FixedValueConverter>
  </igPrim:ValueConverterGroup>

  <igPrim:ValueConverterGroup x:Key="OrientationToMinHeightConverter">
    <igPrim:FixedValueConverter>
      <igPrim:FixedValueConverter.SourceValue>
        <Orientation>Horizontal</Orientation>
      </igPrim:FixedValueConverter.SourceValue>
      <igPrim:FixedValueConverter.DestinationValue>
        <sys:Double>6</sys:Double>
      </igPrim:FixedValueConverter.DestinationValue>
    </igPrim:FixedValueConverter>
    <igPrim:FixedValueConverter>
      <igPrim:FixedValueConverter.DestinationValue>
        <sys:Double>0</sys:Double>
      </igPrim:FixedValueConverter.DestinationValue>
    </igPrim:FixedValueConverter>
  </igPrim:ValueConverterGroup>

  <!-- *********************************  ToolTip Style  ********************************* -->
  <Style x:Key="ToolTipStyle" TargetType="ToolTip">
    <Setter Property="BorderBrush" Value="{StaticResource ToolTipBorderBrush}" />
    <Setter Property="Background" Value="{StaticResource ToolTipBackgroundBrush}" />
  </Style>

  <!-- ********************************* CaptionButton Style ********************************* -->
  <Style x:Key="CaptionButtonStyle" TargetType="ButtonBase">
    <Setter Property="IsTabStop" Value="False" />
    <Setter Property="Background" Value="{StaticResource TransparentBrush}" />
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="BorderBrush" Value="{StaticResource TransparentBrush}" />
    <Setter Property="Width" Value="16" />
    <Setter Property="Height" Value="15" />
    <Setter Property="Foreground" Value="{StaticResource ThemeForegroundBrush}" />
    <Setter Property="Cursor" Value="Hand" />
  </Style>

  <!-- ********************************* CloseButton Style ********************************* -->
  <Style x:Key="CloseButtonStyle" TargetType="Button" BasedOn="{StaticResource CaptionButtonStyle}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="Button">
          <Border x:Name="Border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" igPrim:XamlHelper.SnapsToDevicePixels="True" Padding="{TemplateBinding Padding}">
            <ToolTipService.ToolTip>
              <ToolTip Style="{StaticResource ToolTipStyle}" Content="{Binding Value, Source={StaticResource CloseButtonToolTipContent}}" />
            </ToolTipService.ToolTip>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Disabled">
                  <Storyboard Storyboard.TargetProperty="Fill" Storyboard.TargetName="CloseGlyph">
                    <ObjectAnimationUsingKeyFrames>
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{Binding [ControlDarkBrush], Source={StaticResource SRP}}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Normal" />
                <VisualState x:Name="Pressed">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="Border">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonPressedBackgroundBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="Border">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonPressedBorderBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="CloseGlyph">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource TileCaptionButtonGlyphPressedBackgroundBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="MouseOver">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="Border">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonHoverBackgroundBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="Border">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonHoverBorderBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="CloseGlyph">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource TileCaptionButtonGlyphHoverBackgroundBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Path x:Name="CloseGlyph" Width="8" Height="7" Data="M 1,1 C1,1 1,2 1,2 1,2 2,2 2,2 2,2 2,3 2,3 2,3 3,3 3,3 3,3 3,4 3,4 3,4 2,4 2,4 2,4 2,5 2,5 2,5 1,5 1,5 1,5 1,6 1,6 1,6 0,6 0,6 0,6 0,7 0,7 0,7 2,7 2,7 2,7 2,6 2,6 2,6 3,6 3,6 3,6 3,5 3,5 3,5 4,5 4,5 4,5 5,5 5,5 5,5 5,6 5,6 5,6 6,6 6,6 6,6 6,7 6,7 6,7 8,7 8,7 8,7 8,6 8,6 8,6 7,6 7,6 7,6 7,5 7,5 7,5 6,5 6,5 6,5 6,4 6,4 6,4 5,4 5,4 5,4 5,3 5,3 5,3 6,3 6,3 6,3 6,2 6,2 6,2 7,2 7,2 7,2 7,1 7,1 7,1 8,1 8,1 8,1 8,0 8,0 8,0 6,0 6,0 6,0 6,1 6,1 6,1 5,1 5,1 5,1 5,2 5,2 5,2 4,2 4,2 4,2 3,2 3,2 3,2 3,1 3,1 3,1 2,1 2,1 2,1 2,0 2,0 2,0 0,0 0,0 0,0 0,1 0,1 0,1 1,1 1,1 z" Fill="{TemplateBinding Foreground}" />
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- ********************************* ExpandButton Style ********************************* -->
  <Style x:Key="ExpandButtonStyle" TargetType="Button" BasedOn="{StaticResource CaptionButtonStyle}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="Button">
          <Border x:Name="Border" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" igPrim:XamlHelper.SnapsToDevicePixels="True" Padding="{TemplateBinding Padding}" CornerRadius="0,0,2,2">
            <ToolTipService.ToolTip>
              <ToolTip Style="{StaticResource ToolTipStyle}" Tag="{Binding Path=Tag.State, Converter={StaticResource stateToExpandCollapseTooltipConverter}, RelativeSource={RelativeSource TemplatedParent}}" Content="{Binding Path=Tag.Value, RelativeSource={RelativeSource Self}}" />
            </ToolTipService.ToolTip>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Disabled">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="CollapsedImage">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{Binding [ControlDarkBrush], Source={StaticResource SRP}}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="NotCollapsedImage">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{Binding [ControlDarkBrush], Source={StaticResource SRP}}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Normal" />
                <VisualState x:Name="Pressed">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="Border">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonPressedBackgroundBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="Border">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonPressedBorderBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="CollapsedImage">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource TileCaptionButtonGlyphPressedBackgroundBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="NotCollapsedImage">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource TileCaptionButtonGlyphPressedBackgroundBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="MouseOver">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="Border">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonHoverBackgroundBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="Border">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonHoverBorderBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="CollapsedImage">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource TileCaptionButtonGlyphHoverBackgroundBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="NotCollapsedImage">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource TileCaptionButtonGlyphHoverBackgroundBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid>
              <Path x:Name="CollapsedImage" Width="7" Height="8" Data="M 0,4 C0,4 0,5 0,5 0,5 1,5 1,5 1,5 1,6 1,6 1,6 2,6 2,6 2,6 2,7 2,7 2,7 3,7 3,7 3,7 3,8 3,8 3,8 4,8 4,8 4,8 4,7 4,7 4,7 5,7 5,7 5,7 5,6 5,6 5,6 6,6 6,6 6,6 6,5 6,5 6,5 7,5 7,5 7,5 7,4 7,4 7,4 5,4 5,4 5,4 5,5 5,5 5,5 4,5 4,5 4,5 4,6 4,6 4,6 3,6 3,6 3,6 3,5 3,5 3,5 2,5 2,5 2,5 2,4 2,4 2,4 0,4 0,4 zM 0,0 C0,0 0,1 0,1 0,1 1,1 1,1 1,1 1,2 1,2 1,2 2,2 2,2 2,2 2,3 2,3 2,3 3,3 3,3 3,3 3,4 3,4 3,4 4,4 4,4 4,4 4,3 4,3 4,3 5,3 5,3 5,3 5,2 5,2 5,2 6,2 6,2 6,2 6,1 6,1 6,1 7,1 7,1 7,1 7,0 7,0 7,0 5,0 5,0 5,0 5,1 5,1 5,1 4,1 4,1 4,1 4,2 4,2 4,2 3,2 3,2 3,2 3,1 3,1 3,1 2,1 2,1 2,1 2,0 2,0 2,0 0,0 0,0 z" Fill="{TemplateBinding Foreground}" Stretch="Fill" Visibility="{Binding Tag.State, Converter={StaticResource stateToCollapsededGlyphVisibilityConverter}, RelativeSource={RelativeSource TemplatedParent}}" HorizontalAlignment="Center" VerticalAlignment="Center" StrokeThickness="0" />
              <Path x:Name="NotCollapsedImage" Width="7" Height="8" Data="M 0,4 C0,4 0,3 0,3 0,3 1,3 1,3 1,3 1,2 1,2 1,2 2,2 2,2 2,2 2,1 2,1 2,1 3,1 3,1 3,1 3,0 3,0 3,0 4,0 4,0 4,0 4,1 4,1 4,1 5,1 5,1 5,1 5,2 5,2 5,2 6,2 6,2 6,2 6,3 6,3 6,3 7,3 7,3 7,3 7,4 7,4 7,4 5,4 5,4 5,4 5,3 5,3 5,3 4,3 4,3 4,3 4,2 4,2 4,2 3,2 3,2 3,2 3,3 3,3 3,3 2,3 2,3 2,3 2,4 2,4 2,4 0,4 0,4 zM 0,8 C0,8 0,7 0,7 0,7 1,7 1,7 1,7 1,6 1,6 1,6 2,6 2,6 2,6 2,5 2,5 2,5 3,5 3,5 3,5 3,4 3,4 3,4 4,4 4,4 4,4 4,5 4,5 4,5 5,5 5,5 5,5 5,6 5,6 5,6 6,6 6,6 6,6 6,7 6,7 6,7 7,7 7,7 7,7 7,8 7,8 7,8 5,8 5,8 5,8 5,7 5,7 5,7 4,7 4,7 4,7 4,6 4,6 4,6 3,6 3,6 3,6 3,7 3,7 3,7 2,7 2,7 2,7 2,8 2,8 2,8 0,8 0,8 z" Fill="{TemplateBinding Foreground}" Stretch="Fill" HorizontalAlignment="Center" Visibility="{Binding Tag.State, Converter={StaticResource stateToExpandedGlyphVisibilityConverter}, RelativeSource={RelativeSource TemplatedParent}}" VerticalAlignment="Center" StrokeThickness="0" />
            </Grid>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- ********************************* MaximizeButton Style ********************************* -->
  <Style x:Key="MaximizeButtonStyle" TargetType="Button" BasedOn="{StaticResource CaptionButtonStyle}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="Button">
          <Border x:Name="Border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" igPrim:XamlHelper.SnapsToDevicePixels="True" Padding="{TemplateBinding Padding}">
            <ToolTipService.ToolTip>
              <ToolTip Style="{StaticResource ToolTipStyle}" Tag="{Binding Path=Tag.State, Converter={StaticResource stateToMaximizeMinimizeTooltipConverter}, RelativeSource={RelativeSource TemplatedParent}}" Content="{Binding Path=Tag.Value, RelativeSource={RelativeSource Self}}" />
            </ToolTipService.ToolTip>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Disabled">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="MaximizeGlyph">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{Binding [ControlDarkBrush], Source={StaticResource SRP}}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="RestoreGlyph">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{Binding [ControlDarkBrush], Source={StaticResource SRP}}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Normal" />
                <VisualState x:Name="Pressed">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="Border">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonPressedBackgroundBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="Border">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonPressedBorderBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="MaximizeGlyph">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource TileCaptionButtonGlyphPressedBackgroundBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="RestoreGlyph">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource TileCaptionButtonGlyphPressedBackgroundBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="MouseOver">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="Border">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonHoverBackgroundBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="Border">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonHoverBorderBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="MaximizeGlyph">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource TileCaptionButtonGlyphHoverBackgroundBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="RestoreGlyph">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource TileCaptionButtonGlyphHoverBackgroundBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid>
              <Path x:Name="MaximizeGlyph" Width="9" Height="9" Visibility="{Binding Tag.State, Converter={StaticResource stateToMaximizeGlyphVisibilityConverter}, RelativeSource={RelativeSource TemplatedParent}}" Data="M 1,3 C1,3 7,3 7,3 7,3 7,6 7,6 7,6 1,6 1,6 1,6 1,3 1,3 zM 0,1 C0,1 0,7 0,7 0,7 8,7 8,7 8,7 8,1 8,1 8,1 8,0.87 8,0.87 8,0.39 7.60,0 7.12,0 7.12,0 0.87,0 0.87,0 0.39,0 0,0.39 0,0.87 0,0.87 0,1 0,1 z" Fill="{TemplateBinding Foreground}" />
              <Path x:Name="RestoreGlyph" Width="9" Height="9" Visibility="{Binding Tag.State, Converter={StaticResource stateToRestoreGlyphVisibilityConverter}, RelativeSource={RelativeSource TemplatedParent}}" Data="M 1,5 C1,5 2,5 2,5 2,5 5,5 5,5 5,5 5,7 5,7 5,7 1,7 1,7 1,7 1,5 1,5 zM 6,4 C6,4 6,3.87 6,3.87 6,3.39 5.60,3 5.12,3 5.12,3 3,3 3,3 3,3 3,2 3,2 3,2 7,2 7,2 7,2 7,4 7,4 7,4 6,4 6,4 zM 0,4 C0,4 0,8 0,8 0,8 6,8 6,8 6,8 6,5 6,5 6,5 8,5 8,5 8,5 8,1 8,1 8,1 8,0.87 8,0.87 8,0.39 7.60,0 7.12,0 7.12,0 2.87,0 2.87,0 2.39,0 2,0.39 2,0.87 2,0.87 2,1 2,1 2,1 2,3 2,3 2,3 0.87,3 0.87,3 0.39,3 0,3.39 0,3.87 0,3.87 0,4 0,4 z" Fill="{TemplateBinding Foreground}" />
            </Grid>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>

  </Style>

  <!-- *********************************  TileHeaderPresenter Style  ********************************* -->
  <Style x:Key="TileHeaderPresenterStyle" TargetType="igPrim:TileHeaderPresenter">
    <Setter Property="HorizontalContentAlignment" Value="Left" />
    <Setter Property="VerticalContentAlignment" Value="Center" />
    <Setter Property="Padding" Value="2" />
    <Setter Property="BorderThickness" Value="0,0,0,0" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igPrim:TileHeaderPresenter">
          <Grid>
            <Border CornerRadius="2,2,0,0" BorderThickness="0" Margin="0">
              <Border CornerRadius="2,2,0,0" Margin="0" BorderThickness="0.5,0.5,0.5,0" Background="{StaticResource TileHeaderPresenterBackgroundBrush}">
                <Grid Margin="{TemplateBinding Padding}">
                  <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                  </Grid.ColumnDefinitions>
                  <Image x:Name="image" Grid.Column="0" Source="{Binding Tile.Image, RelativeSource={RelativeSource TemplatedParent}}" Stretch="None" Visibility="{Binding Tile.HasImage, Converter={StaticResource boolToVisibility}, RelativeSource={RelativeSource TemplatedParent}}" />
                  <ContentPresenter Grid.Column="1" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                  <Button x:Name="ToggleExpandCollapse" AutomationProperties.Name="ToggleExpandCollapse" Grid.Column="2" IsTabStop="False" Visibility="{Binding Tile.ExpandButtonVisibilityResolved, RelativeSource={RelativeSource TemplatedParent}}" CommandParameter="{TemplateBinding Tile}" Style="{StaticResource ExpandButtonStyle}" Opacity="1" Tag="{TemplateBinding Tile}">
                    <ig:Commanding.Command>
                      <igPrim:TileCommandSource EventName="Click" CommandType="ToggleMinimizedExpansion" ParameterBinding="{Binding Tile, RelativeSource={RelativeSource TemplatedParent}}" />
                    </ig:Commanding.Command>
                  </Button>
                  <Button x:Name="ToggleMaximized" IsEnabled="{Binding Path=Tile.AllowMaximizeResolved, RelativeSource={RelativeSource TemplatedParent}}" AutomationProperties.Name="ToggleMaximized" Grid.Column="3" IsTabStop="False" ClickMode="Release" Visibility="{Binding Tile.MaximizeButtonVisibilityResolved, RelativeSource={RelativeSource TemplatedParent}}" CommandParameter="{TemplateBinding Tile}" Style="{StaticResource MaximizeButtonStyle}" Opacity="1" Tag="{TemplateBinding Tile}" Height="16">
                    <ig:Commanding.Command>
                      <igPrim:TileCommandSource EventName="Click" CommandType="ToggleMaximized" ParameterBinding="{Binding Tile, RelativeSource={RelativeSource TemplatedParent}}" />
                    </ig:Commanding.Command>
                  </Button>
                  <Button x:Name="Close" IsEnabled="{Binding Path=Tile.CloseActionResolved, Converter={StaticResource closeActionToBool}, RelativeSource={RelativeSource TemplatedParent}}" AutomationProperties.Name="Close" Grid.Column="4" IsTabStop="False" Visibility="{Binding Tile.CloseButtonVisibilityResolved, RelativeSource={RelativeSource TemplatedParent}}" CommandParameter="{TemplateBinding Tile}" Style="{StaticResource CloseButtonStyle}" Tag="{TemplateBinding Tile}" Opacity="1">
                    <ig:Commanding.Command>
                      <igPrim:TileCommandSource EventName="Click" CommandType="Close" ParameterBinding="{Binding Tile, RelativeSource={RelativeSource TemplatedParent}}" />
                    </ig:Commanding.Command>
                  </Button>
                </Grid>
              </Border>
            </Border>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="HorizontalAlignment" Value="Stretch" />
  </Style>
  <Style TargetType="igPrim:TileHeaderPresenter" BasedOn="{StaticResource TileHeaderPresenterStyle}" />

  <!-- ********************************* Preview Style ********************************* -->
  <Style x:Key="PreviewStyle" TargetType="Control">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="Control">
          <Rectangle Fill="{StaticResource PreviewBackgroundBrush}" igPrim:XamlHelper.SnapsToDevicePixels="True" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- *********************************  TileAreaSplitter Style  ********************************* -->
  <Style x:Key="TileAreaSplitterStyle" TargetType="igPrim:TileAreaSplitter">
    <Setter Property="PreviewStyle" Value="{StaticResource PreviewStyle}" />
    <Setter Property="Foreground" Value="{StaticResource ThemeForegroundBrush}" />
    <Setter Property="Background" Value="{StaticResource TileAreaSplitterBackgroundBrush}" />
    <Setter Property="BorderBrush" Value="{StaticResource TileAreaSplitterBorderBrush}" />
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="Margin" Value="2,0" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igPrim:TileAreaSplitter">
          <Grid>
            <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" MinWidth="{Binding Path=(igPrim:TileAreaSplitter.Orientation), RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource OrientationToMinWidthConverter}}" MinHeight="{Binding Path=(igPrim:TileAreaSplitter.Orientation), RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource OrientationToMinHeightConverter}}" CornerRadius="1">
              <Grid>
                <Grid x:Name="verticalGlyphs" Visibility="{Binding Path=(igPrim:TileAreaSplitter.Orientation), RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource VerticalToVisibilityConverter}}">
                  <Path Width="2" Height="14" Margin="1,2,0,0" Data="M 0,12 C0,12 0,14 0,14 0,14 2,14 2,14 2,14 2,12 2,12 2,12 0,12 0,12 zM 0,8 C0,8 0,10 0,10 0,10 2,10 2,10 2,10 2,8 2,8 2,8 0,8 0,8 zM 0,4 C0,4 0,6 0,6 0,6 2,6 2,6 2,6 2,4 2,4 2,4 0,4 0,4 zM 0,0 C0,0 0,2 0,2 0,2 2,2 2,2 2,2 2,0 2,0 2,0 0,0 0,0 z" Fill="{TemplateBinding Background}" Opacity="1" Stretch="Fill" />
                  <Path Width="2" Height="14" Data="M 0,12 C0,12 0,14 0,14 0,14 2,14 2,14 2,14 2,12 2,12 2,12 0,12 0,12 zM 0,8 C0,8 0,10 0,10 0,10 2,10 2,10 2,10 2,8 2,8 2,8 0,8 0,8 zM 0,4 C0,4 0,6 0,6 0,6 2,6 2,6 2,6 2,4 2,4 2,4 0,4 0,4 zM 0,0 C0,0 0,2 0,2 0,2 2,2 2,2 2,2 2,0 2,0 2,0 0,0 0,0 z" Fill="{TemplateBinding Foreground}" Opacity="1" Stretch="Fill" />
                </Grid>
                <Grid x:Name="horizontalGlyphs" Visibility="{Binding Path=(igPrim:TileAreaSplitter.Orientation), RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource HorizontalToVisibilityConverter}}">
                  <Path Width="14" Height="2" Margin="2,2,0,0" Data="M 2,0 C2,0 0,0 0,0 0,0 0,2 0,2 0,2 2,2 2,2 2,2 2,0 2,0 zM 6,0 C6,0 4,0 4,0 4,0 4,2 4,2 4,2 6,2 6,2 6,2 6,0 6,0 zM 10,0 C10,0 8,0 8,0 8,0 8,2 8,2 8,2 10,2 10,2 10,2 10,0 10,0 zM 14,0 C14,0 12,0 12,0 12,0 12,2 12,2 12,2 14,2 14,2 14,2 14,0 14,0 z" Fill="{TemplateBinding Background}" Stretch="Fill" />
                  <Path Width="14" Height="2" Margin="0,0,0,0" Data="M 2,0 C2,0 0,0 0,0 0,0 0,2 0,2 0,2 2,2 2,2 2,2 2,0 2,0 zM 6,0 C6,0 4,0 4,0 4,0 4,2 4,2 4,2 6,2 6,2 6,2 6,0 6,0 zM 10,0 C10,0 8,0 8,0 8,0 8,2 8,2 8,2 10,2 10,2 10,2 10,0 10,0 zM 14,0 C14,0 12,0 12,0 12,0 12,2 12,2 12,2 14,2 14,2 14,2 14,0 14,0 z" Fill="{TemplateBinding Foreground}" Stretch="Fill" />
                </Grid>
              </Grid>
            </Border>
            <Thumb x:Name="Thumb" Opacity="0" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="igPrim:TileAreaSplitter" BasedOn="{StaticResource TileAreaSplitterStyle}" />

  <!-- *********************************  Tile Style  ********************************* -->
  <Style x:Key="XamTileStyle" TargetType="ig:XamTile">
    <Setter Property="Background" Value="{StaticResource TileBackgroundBrush}" />
    <Setter Property="BorderBrush" Value="{StaticResource TileBorderBrush}" />
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="ig:XamTile">
          <Grid Background="{StaticResource TransparentBrush}" Margin="0">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="MouseOver" />
                <VisualState x:Name="Normal" />
                <VisualState x:Name="Disabled" />
              </VisualStateGroup>
              <VisualStateGroup x:Name="MinimizedStates">
                <VisualState x:Name="NotMinimized" />
                <VisualState x:Name="MinimizedExpanded" />
                <VisualState x:Name="Minimized" />
                <VisualState x:Name="Maximized" />
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Border x:Name="Border" Background="{TemplateBinding Background}" CornerRadius="4,4,0,0" BorderThickness="1" BorderBrush="{TemplateBinding BorderBrush}" Margin="0" Opacity="{Binding Path=(ig:XamTileManager.IsDragging), Converter={StaticResource isDraggingToOpacityConverter}, RelativeSource={RelativeSource TemplatedParent}}">
              <Border x:Name="InnerBorder" Margin="0" CornerRadius="4,4,0,0" BorderBrush="{StaticResource ThemeLightForegroundBrush}" BorderThickness="0.5">
                <Grid Background="{StaticResource TransparentBrush}">
                  <Grid Margin="{TemplateBinding Padding}">
                    <Grid.RowDefinitions>
                      <RowDefinition Height="Auto" />
                      <RowDefinition Height="*" />
                    </Grid.RowDefinitions>
                    <!-- Header area-->
                    <igPrim:TileHeaderPresenter x:Name="TileHeader" AutomationProperties.AutomationId="TileHeader" Content="{TemplateBinding Header}" ContentTemplate="{TemplateBinding HeaderTemplate}" Tile="{Binding RelativeSource={RelativeSource TemplatedParent}}" />
                    <Border Visibility="{TemplateBinding ContentVisibility}" Grid.Row="1" Background="{StaticResource ThemeLightForegroundBrush}" Margin="2,0,2,2" Padding="4" BorderBrush="{StaticResource TileContentBorderBrush}" BorderThickness="1">
                      <!-- Content area-->
                      <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplateResolved}" />
                    </Border>
                    <!-- Content area-->
                  </Grid>
                  <Rectangle x:Name="Overlay" IsHitTestVisible="False" Fill="{Binding Path=(ig:XamTileManager.IsSwapTarget), Converter={StaticResource isSwappingToFillConverter}, RelativeSource={RelativeSource TemplatedParent}}" />
                </Grid>
              </Border>
            </Border>
            <!-- the following Canvas is used while animating state transitions. During an animation it may contain an image element. 
								 The Canvas must be named "TransitionCanvas" and be a sibling of the root Border element. 
								 Otherwise state transitions will not scale properly during the animations. -->
            <Canvas Background="{StaticResource TransparentBrush}" x:Name="TransitionCanvas" IsHitTestVisible="False" Visibility="Collapsed" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="ig:XamTile" BasedOn="{StaticResource XamTileStyle}" />

  <!-- *********************************  TileDragIndicator Style  ********************************* -->
  <Style x:Key="TileDragIndicatorStyle" TargetType="igPrim:TileDragIndicator">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igPrim:TileDragIndicator">
          <Border Background="{TemplateBinding Background}">
            <ContentPresenter />
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="igPrim:TileDragIndicator" BasedOn="{StaticResource TileDragIndicatorStyle}" />

  <!-- *********************************  TileManager Style  ********************************* -->
  <Style x:Key="XamTileManagerStyle" TargetType="ig:XamTileManager">
    <Setter Property="Background" Value="{StaticResource TileManagerBackgroundBrush}" />
    <Setter Property="BorderBrush" Value="{StaticResource TileManagerBorderBrush}" />
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
    <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
    <Setter Property="igPrim:XamlHelper.CanContentScroll" Value="true" />
    <Setter Property="VerticalContentAlignment" Value="Center" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="ig:XamTileManager">
          <Border x:Name="Bd"
                  Background="{TemplateBinding Background}"
                  BorderBrush="{TemplateBinding BorderBrush}"
                  BorderThickness="{TemplateBinding BorderThickness}"
                  igPrim:XamlHelper.SnapsToDevicePixels="true"
                  Padding="{TemplateBinding Padding}"
                                    >
            <ScrollViewer igPrim:XamlHelper.Focusable="false" Margin="0" BorderThickness="0" Padding="0"
													HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"													
													VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}"													
                          Style="{StaticResource ScrollViewerStyle}"
									  >
              <igPrim:TileAreaPanel x:Name="TilePanel" igPrim:XamlHelper.SnapsToDevicePixels="{TemplateBinding igPrim:XamlHelper.SnapsToDevicePixels}" />
            </ScrollViewer>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="ig:XamTileManager" BasedOn="{StaticResource XamTileManagerStyle}" />
</ResourceDictionary>
