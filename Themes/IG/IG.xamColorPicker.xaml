<ResourceDictionary	  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	                  xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
	                  xmlns:ig="http://schemas.infragistics.com/xaml"
	                  xmlns:igCP="http://schemas.infragistics.com/xaml"
	                  xmlns:igPrim="http://schemas.infragistics.com/xaml/primitives"
	                  xmlns:igPrimBase="http://schemas.infragistics.com/xaml/primitives"
	                  xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
	                  xmlns:System="clr-namespace:System;assembly=mscorlib"
	                  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	                  mc:Ignorable="d">

  <!-- *********************************  RESOURCES  ********************************* -->
  <ResourceDictionary.MergedDictionaries>
    <ResourceDictionary Source="IG.Theme.Colors.xaml"/>
  </ResourceDictionary.MergedDictionaries>

  <!-- *********************************  COLOR PICKER (ONLY) COLORS  ********************************* -->
  <Color x:Key="Color_101">#FFFF0018</Color>
  <Color x:Key="Color_102">#ff000000</Color>
  <Color x:Key="Color_103">#ff00ff00</Color>
  <Color x:Key="Color_104">#ff00ffff</Color>
  <Color x:Key="Color_105">#ff0000ff</Color>
  <Color x:Key="Color_106">#FF008000</Color>
  <Color x:Key="Color_107">#FFFF00FF</Color>
  <Color x:Key="Color_108">#FFFFFF00</Color>

  <!-- *********************************  BRUSHES  ********************************* -->
  <SolidColorBrush x:Key="ForegroundBrush" Color="{StaticResource Color_001}"/>
  <SolidColorBrush x:Key="LightForegroundBrush" Color="{StaticResource Color_011}"/>
  <SolidColorBrush x:Key="TransparentBrush" Color="{StaticResource Color_021}"/>
  <SolidColorBrush x:Key="LightBorderBrush" Color="{StaticResource Color_008}"/>
  <SolidColorBrush x:Key="PopupBorderBrush" Color="{StaticResource Color_007}"/>
  <LinearGradientBrush x:Key="PopupBackgroundBrush" EndPoint="0.5,1" StartPoint="0.5,0">
    <GradientStop Color="{StaticResource Color_009}" Offset="1"/>
    <GradientStop Color="{StaticResource Color_011}"/>
  </LinearGradientBrush>

  <!--  TextBox Brushes -->
  <LinearGradientBrush x:Key="TextBoxBackgroundBrush" StartPoint="0.505,0.469" EndPoint="0.505,-0.023">
    <GradientStop Offset="0.377" Color="{StaticResource Color_011}"/>
    <GradientStop Offset="1" Color="{StaticResource Color_008}"/>
  </LinearGradientBrush>
  <SolidColorBrush x:Key="TextBoxBorderBrush" Color="{StaticResource Color_005}"/>

  <!--  Slider Brushes -->
  <SolidColorBrush x:Key="SliderHTrackBorderBrush" Color="{StaticResource Color_005}"/>
  <SolidColorBrush x:Key="SliderVTrackBackgroundBrush" Color="{StaticResource Color_009}"/>
  <SolidColorBrush x:Key="SliderVTrackBorderBrush" Color="{StaticResource Color_005}"/>
  <LinearGradientBrush x:Key="SliderHTrackBackgroundBrush" StartPoint="0.35,1" EndPoint="0.35,0.25">
    <GradientStop Offset="0" Color="{StaticResource Color_005}"/>
    <GradientStop Offset="0.93" Color="{StaticResource Color_008}"/>
    <GradientStop Offset="0.98" Color="{StaticResource Color_008}"/>
  </LinearGradientBrush>

  <!--  Button Brushes -->
  <LinearGradientBrush x:Key="ButtonBackgroundBrush" EndPoint="0.5,1" StartPoint="0.5,0">
    <GradientStop Color="{StaticResource Color_004}"/>
    <GradientStop Color="{StaticResource Color_002}" Offset="1"/>
  </LinearGradientBrush>

  <LinearGradientBrush x:Key="ButtonHoverBackgroundBrush" EndPoint="0.5,1" StartPoint="0.5,0">
    <GradientStop Color="{StaticResource Color_014}"/>
    <GradientStop Color="{StaticResource Color_016}" Offset="1"/>
  </LinearGradientBrush>

  <LinearGradientBrush x:Key="ButtonPressedBackgroundBrush" EndPoint="0.5,1" StartPoint="0.5,0">
    <GradientStop Color="{StaticResource Color_014}" Offset="1"/>
    <GradientStop Color="{StaticResource Color_016}"/>
  </LinearGradientBrush>

  <LinearGradientBrush x:Key="ButtonDisabledBackgroundBrush" EndPoint="0.5,1" StartPoint="0.5,0">
    <GradientStop Color="{StaticResource Color_008}"/>
    <GradientStop Color="{StaticResource Color_006}" Offset="1"/>
  </LinearGradientBrush>

  <SolidColorBrush x:Key="ButtonHoverBorderBrush" Color="{StaticResource Color_016}"/>
  <SolidColorBrush x:Key="ButtonFocusedBorderBrush" Color="{StaticResource Color_014}"/>
  <SolidColorBrush x:Key="ButtonPressedBorderBrush" Color="{StaticResource Color_016}" />
  <SolidColorBrush x:Key="ButtonBorderBrush" Color="{StaticResource Color_002}"/>
  <SolidColorBrush x:Key="ButtonDisabledBorderBrush" Color="{StaticResource Color_007}"/>

  <!--  RadioButton Brushes -->
  <SolidColorBrush x:Key="RadioButtonForegroundBrush" Color="{StaticResource Color_003}"/>
  <SolidColorBrush x:Key="RadioButtonBorderBrush" Color="{StaticResource Color_008}"/>
  <SolidColorBrush x:Key="RadioButtonBackgroundBrush" Color="{StaticResource Color_011}"/>
  <SolidColorBrush x:Key="RadioButtonGradientBackgroundBrush" Color="{StaticResource Color_024}"/>

  <!--  Validation Brushes -->
  <SolidColorBrush x:Key="ValidationErrorElementBackgroundBrush" Color="{StaticResource Color_019}"/>
  <SolidColorBrush x:Key="ValidationToolTipTemplateShadowBrush" Color="{StaticResource Color_001}"/>

  <!--  ColorModes Brushes -->
  <SolidColorBrush x:Key="ColorModeRadioButtonBorderBrush" Color="{StaticResource Color_001}"/>
  <LinearGradientBrush x:Key="ColorModeTabsBackgroundBrush" StartPoint="0.58,0" EndPoint="0.58,1.00">
    <GradientStop Offset="0" Color="{StaticResource Color_003}"/>
    <GradientStop Offset="0.99" Color="{StaticResource Color_001}"/>
  </LinearGradientBrush>

  <!-- ColorPickerDialog Brushes -->
  <SolidColorBrush x:Key="ColorPickerDialogBorderBrush" Color="{StaticResource Color_016}"/>
  <LinearGradientBrush x:Key="ColorPickerDialogHeaderBackgroundBrush" StartPoint="0.66,-0.09" EndPoint="0.66,1.14">
    <GradientStop Offset="0" Color="{StaticResource Color_014}"/>
    <GradientStop Offset="0.94" Color="{StaticResource Color_016}"/>
    <GradientStop Offset="0.99" Color="{StaticResource Color_016}"/>
  </LinearGradientBrush>

  <!--  ColorItem Brushes -->
  <SolidColorBrush x:Key="ColorItemBoxBorderBrush" Color="{StaticResource Color_008}"/>
  <SolidColorBrush x:Key="ColorItemBoxSelectedOuterBorderBrush" Color="{StaticResource Color_040}"/>
  <SolidColorBrush x:Key="ColorItemBoxSelectedInnerBorderBrush" Color="{StaticResource Color_033}"/>
  <SolidColorBrush x:Key="ColorItemBoxHoverOuterBorderBrush" Color="{StaticResource Color_034}"/>
  <SolidColorBrush x:Key="ColorItemBoxHoverInnerBorderBrush" Color="{StaticResource Color_033}"/>

  <!-- AdvancedColorShadePicker Brushes -->
  <LinearGradientBrush x:Key="AdvancedColorShadePickerWhiteBackgroundBrush" StartPoint="0,0" EndPoint="1,0">
    <GradientStop Offset="0" Color="{StaticResource Color_011}"/>
    <GradientStop Offset="1" Color="{StaticResource Color_021}"/>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="AdvancedColorShadePickerBlackBackgroundBrush" StartPoint="0,1" EndPoint="0, 0">
    <GradientStop Offset="0" Color="{StaticResource Color_102}"/>
    <GradientStop Offset="1" Color="{StaticResource Color_026}"/>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="AdvancedColorShadePickerHueBackgroundBrush" StartPoint="0,0" EndPoint="0,1" igPrim:XamlHelper.IsExcludedFromWash="True">
    <GradientStop Offset="0.00" Color="{StaticResource Color_101}"/>
    <GradientStop Offset="0.17" Color="{StaticResource Color_108}"/>
    <GradientStop Offset="0.33" Color="{StaticResource Color_103}"/>
    <GradientStop Offset="0.50" Color="{StaticResource Color_104}"/>
    <GradientStop Offset="0.66" Color="{StaticResource Color_105}"/>
    <GradientStop Offset="0.83" Color="{StaticResource Color_107}"/>
    <GradientStop Offset="1.00" Color="{StaticResource Color_101}"/>
  </LinearGradientBrush>

  <SolidColorBrush x:Key="AdvancedColorShadePickerColorSamplingBackgroundBrush" Color="{StaticResource Color_101}"/>
  <SolidColorBrush x:Key="RedSliderTrackFillBackgroundBrush" Color="{StaticResource Color_101}" igPrim:XamlHelper.IsExcludedFromWash="True" />
  <SolidColorBrush x:Key="GreenSliderTrackFillBackgroundBrush" Color="{StaticResource Color_106}" igPrim:XamlHelper.IsExcludedFromWash="True" />
  <SolidColorBrush x:Key="BlueSliderTrackFillBackgroundBrush" Color="{StaticResource Color_105}" igPrim:XamlHelper.IsExcludedFromWash="True" />
  <SolidColorBrush x:Key="CyanSliderTrackFillBackgroundBrush" Color="{StaticResource Color_104}" igPrim:XamlHelper.IsExcludedFromWash="True" />
  <SolidColorBrush x:Key="MagentaSliderTrackFillBackgroundBrush" Color="{StaticResource Color_107}" igPrim:XamlHelper.IsExcludedFromWash="True" />
  <SolidColorBrush x:Key="YellowSliderTrackFillBackgroundBrush" Color="{StaticResource Color_108}" igPrim:XamlHelper.IsExcludedFromWash="True" />
  <SolidColorBrush x:Key="BlackSliderTrackFillBackgroundBrush" Color="{StaticResource Color_102}" igPrim:XamlHelper.IsExcludedFromWash="True" />

  <!-- ColorPicker Brushes -->
  <SolidColorBrush x:Key="ColorPickerGlyphBackgroundBrush" Color="{StaticResource Color_028}"/>
  <SolidColorBrush x:Key="ColorPickerGlyphBorderBrush" Color="{StaticResource Color_011}"/>
  <SolidColorBrush x:Key="ColorPickerContentPresenterBorderBrush" Color="{StaticResource Color_008}"/>
  <SolidColorBrush x:Key="ColorPickerSelectedOuterBorderBrush" Color="{StaticResource Color_103}"/>
  <SolidColorBrush x:Key="ColorPickerSelectedInnerBorderBrush" Color="{StaticResource Color_103}"/>
  <SolidColorBrush x:Key="ColorPickerHoverInnerBorderBrush" Color="{StaticResource Color_101}"/>
  <SolidColorBrush x:Key="ColorPickerHoverOuterBorderBrush" Color="{StaticResource Color_108}"/>

  <!-- *********************************  Button Style  ********************************* -->
  <Style x:Key="ButtonStyle" TargetType="Button">
    <Setter Property="Foreground" Value="{StaticResource LightForegroundBrush}"/>
    <Setter Property="Padding" Value="8,0,8,2"/>
    <Setter Property="Margin" Value="0"/>
    <Setter Property="MinHeight" Value="22"/>
    <Setter Property="FontFamily" Value="Segoe UI"/>
    <Setter Property="FontSize" Value="12"/>
    <Setter Property="BorderThickness" Value="1"/>
    <Setter Property="HorizontalAlignment" Value="Center"/>
    <Setter Property="VerticalAlignment" Value="Center"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="Button">
          <Grid>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualStateGroup.Transitions>
                  <VisualTransition GeneratedDuration="0:0:0.2"/>
                </VisualStateGroup.Transitions>
                <VisualState x:Name="Normal"/>
                <VisualState x:Name="MouseOver">
                  <Storyboard>
                    <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="hover" d:IsOptimized="True"/>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Pressed">
                  <Storyboard>
                    <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="pressed" d:IsOptimized="True"/>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Disabled">
                  <Storyboard>
                    <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="disabled" d:IsOptimized="True"/>
                    <DoubleAnimation Duration="0" To="0.5" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="contentPresenter" d:IsOptimized="True"/>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="FocusStates">
                <VisualState x:Name="Focused">
                  <Storyboard>
                    <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="focused" d:IsOptimized="True"/>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Unfocused"/>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Rectangle x:Name="normal" Opacity="1" RadiusX="3" RadiusY="3" StrokeThickness="{TemplateBinding BorderThickness}" Stroke="{StaticResource ButtonBorderBrush}" Fill="{StaticResource ButtonBackgroundBrush}"/>
            <Rectangle x:Name="hover" Opacity="0" RadiusX="3" RadiusY="3" StrokeThickness="{TemplateBinding BorderThickness}" Stroke="{StaticResource ButtonHoverBorderBrush}" Fill="{StaticResource ButtonHoverBackgroundBrush}"/>
            <Rectangle x:Name="pressed" Opacity="0" RadiusX="3" RadiusY="3" StrokeThickness="{TemplateBinding BorderThickness}" Stroke="{StaticResource ButtonPressedBorderBrush}" Fill="{StaticResource ButtonPressedBackgroundBrush}"/>
            <Rectangle x:Name="focused" Opacity="0" RadiusX="3" RadiusY="3" StrokeThickness="{TemplateBinding BorderThickness}" Stroke="{StaticResource ButtonFocusedBorderBrush}"/>
            <Rectangle x:Name="disabled" Opacity="0" RadiusX="3" RadiusY="3" StrokeThickness="{TemplateBinding BorderThickness}" Stroke="{StaticResource ButtonDisabledBorderBrush}" Fill="{StaticResource ButtonDisabledBackgroundBrush}"/>
            <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Margin="{TemplateBinding Padding}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- *********************************  RadioButton Style  ********************************* -->
  <Style x:Key="ColorPickerRadioButtonStyle" TargetType="RadioButton">
    <Setter Property="Background" Value="{StaticResource TransparentBrush}"/>
    <Setter Property="Foreground" Value="{StaticResource RadioButtonForegroundBrush}"/>
    <Setter Property="HorizontalContentAlignment" Value="Center"/>
    <Setter Property="VerticalContentAlignment" Value="Center"/>
    <Setter Property="BorderThickness" Value="1,1,1,0"/>
    <Setter Property="BorderBrush" Value="{StaticResource RadioButtonBorderBrush}"/>
    <Setter Property="Padding" Value="15,3"/>
    <Setter Property="Margin" Value="2,5,2,0"/>
    <Setter Property="Cursor" Value="Hand"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="RadioButton">
          <Grid>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal"/>
                <VisualState x:Name="MouseOver">
                  <Storyboard>
                    <DoubleAnimation Duration="0" Storyboard.TargetName="border1" Storyboard.TargetProperty="(UIElement.Opacity)" To="1"/>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Pressed">
                  <Storyboard>
                    <DoubleAnimation Duration="0" Storyboard.TargetName="border1" Storyboard.TargetProperty="(UIElement.Opacity)" To="1"/>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Disabled">
                  <Storyboard>
                    <DoubleAnimation Duration="0" Storyboard.TargetName="contentPresenter" Storyboard.TargetProperty="(UIElement.Opacity)" To=".55"/>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="CheckStates">
                <VisualState x:Name="Checked">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="border">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="contentControl" Storyboard.TargetProperty="Foreground">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ForegroundBrush}">
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Unchecked"/>
                <VisualState x:Name="Indeterminate"/>
              </VisualStateGroup>
              <VisualStateGroup x:Name="FocusStates">
                <VisualState x:Name="Focused"/>
                <VisualState x:Name="Unfocused"/>
              </VisualStateGroup>
              <VisualStateGroup x:Name="ValidationStates">
                <VisualState x:Name="Valid"/>
                <VisualState x:Name="InvalidUnfocused"/>
                <VisualState x:Name="InvalidFocused"/>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Border x:Name="border" Grid.ColumnSpan="2" Margin="0" BorderBrush="{StaticResource LightBorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="2,2,0,0" Background="{StaticResource RadioButtonBackgroundBrush}" Visibility="Collapsed"/>
            <Border x:Name="border1" Margin="0,0,0,1" Background="{StaticResource RadioButtonGradientBackgroundBrush}" CornerRadius="2,2,0,0" Opacity="0"/>
            <ContentControl x:Name="contentControl" Grid.Column="1" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Foreground="{StaticResource LightForegroundBrush}">
              <ContentPresenter x:Name="contentPresenter" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}"/>
            </ContentControl>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- *********************************  TextBlock Style  ********************************* -->
  <Style x:Key="SimpleTextBlockStyle" TargetType="TextBlock">
    <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}"/>
    <Setter Property="FontSize" Value="12"/>
  </Style>

  <!-- *********************************  ValidationToolTip Template  ********************************* -->
  <ControlTemplate x:Key="ValidationToolTipTemplate">
    <Grid x:Name="Root" Margin="5,0" Opacity="0" RenderTransformOrigin="0,0">
      <Grid.RenderTransform>
        <TranslateTransform x:Name="xform" X="-25"/>
      </Grid.RenderTransform>
      <VisualStateManager.VisualStateGroups>
        <VisualStateGroup x:Name="OpenStates">
          <VisualStateGroup.Transitions>
            <VisualTransition GeneratedDuration="0"/>
            <VisualTransition GeneratedDuration="0:0:0.2" To="Open">
              <Storyboard>
                <DoubleAnimation Duration="0:0:0.2" To="0" Storyboard.TargetProperty="X" Storyboard.TargetName="xform">
                  <DoubleAnimation.EasingFunction>
                    <BackEase Amplitude=".3" EasingMode="EaseOut"/>
                  </DoubleAnimation.EasingFunction>
                </DoubleAnimation>
                <DoubleAnimation Duration="0:0:0.2" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Root"/>
              </Storyboard>
            </VisualTransition>
          </VisualStateGroup.Transitions>
          <VisualState x:Name="Closed">
            <Storyboard>
              <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Root"/>
            </Storyboard>
          </VisualState>
          <VisualState x:Name="Open">
            <Storyboard>
              <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="X" Storyboard.TargetName="xform"/>
              <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Root"/>
            </Storyboard>
          </VisualState>
        </VisualStateGroup>
      </VisualStateManager.VisualStateGroups>
      <Border Background="{StaticResource ValidationToolTipTemplateShadowBrush}" CornerRadius="5" Margin="4,4,-4,-4" Opacity="0.02"/>
      <Border Background="{StaticResource ValidationToolTipTemplateShadowBrush}" CornerRadius="4" Margin="3,3,-3,-3" Opacity="0.08"/>
      <Border Background="{StaticResource ValidationToolTipTemplateShadowBrush}" CornerRadius="3" Margin="2,2,-2,-2" Opacity="0.15"/>
      <Border Background="{StaticResource ValidationToolTipTemplateShadowBrush}" CornerRadius="2" Margin="1,1,-1,-1" Opacity="0.21"/>
      <Border Background="{StaticResource ValidationErrorElementBackgroundBrush}" CornerRadius="2"/>
      <Border CornerRadius="2">
        <TextBlock Foreground="White" MaxWidth="250" Margin="8,4,8,4" TextWrapping="Wrap" Text="{Binding (Validation.Errors)[0].ErrorContent}" UseLayoutRounding="false"/>
      </Border>
    </Grid>
  </ControlTemplate>

  <!-- *********************************  TextBox Style  ********************************* -->
  <Style x:Key="SimpleTextBoxStyle" TargetType="TextBox">
    <Setter Property="BorderThickness" Value="1"/>
    <Setter Property="Background" Value="{StaticResource TextBoxBackgroundBrush}"/>
    <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}"/>
    <Setter Property="Padding" Value="2"/>
    <Setter Property="BorderBrush" Value="{StaticResource TextBoxBorderBrush}"/>
  </Style>

  <!-- *********************************  TrackFill Style  ********************************* -->
  <Style x:Key="TrackFillStyle" TargetType="igPrimBase:TrackFill">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igPrimBase:TrackFill">
          <Rectangle Height="4" Fill="{TemplateBinding Background}" RadiusX="2" RadiusY="2"/>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- *********************************  ByteSlider Style  ********************************* -->
  <Style x:Key="ByteSliderStyle" TargetType="igPrimBase:ByteSlider">
    <Setter Property="Orientation" Value="Horizontal"/>
    <Setter Property="IsMouseWheelEnabled" Value="False"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igPrimBase:ByteSlider">
          <Grid x:Name="RootElement" Background="{TemplateBinding Background}">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="OrientationStates">
                <VisualState x:Name="Horizontal"/>
                <VisualState x:Name="Vertical">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HorizontalSlider" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Collapsed</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="VerticalSlider" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid x:Name="HorizontalSlider">
              <Grid x:Name="HorizontalTickMarks" Grid.Column="1" Background="{StaticResource TransparentBrush}"/>
              <Grid x:Name="HorizontalTrack" Height="20" Grid.Column="1" Background="{StaticResource TransparentBrush}">
                <Border Height="4" Background="{StaticResource SliderHTrackBackgroundBrush}" BorderBrush="{StaticResource SliderHTrackBorderBrush}" BorderThickness="1" CornerRadius="2"/>
                <Canvas x:Name="HorizontalTrackFills"/>
                <Canvas x:Name="HorizontalThumbs"/>
              </Grid>
            </Grid>
            <Grid x:Name="VerticalSlider" Visibility="Collapsed">
              <Grid x:Name="VerticalSlidersGrid" Grid.Row="1" Margin="0,5,0,5">
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="*"/>
                  <ColumnDefinition Width="Auto"/>
                  <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
              </Grid>
              <Grid x:Name="VerticalTickMarks" Grid.Row="1" Background="{StaticResource TransparentBrush}"/>
              <Grid x:Name="VerticalTrack" Width="20" Grid.Row="1" Background="{StaticResource TransparentBrush}">
                <Border Width="3" Background="{StaticResource SliderVTrackBackgroundBrush}" BorderBrush="{StaticResource SliderVTrackBorderBrush}" BorderThickness="1,1,1,1" CornerRadius="2"/>
                <Canvas x:Name="VerticalTrackFills"/>
                <Canvas x:Name="VerticalThumbs"/>
              </Grid>
            </Grid>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- *********************************  NumericSlider Style  ********************************* -->
  <Style x:Key="NumericSliderStyle" TargetType="ig:XamSliderBase">
    <Setter Property="Orientation" Value="Horizontal"/>
    <Setter Property="IsMouseWheelEnabled" Value="False"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="ig:XamSliderBase">
          <Grid x:Name="RootElement" Background="{TemplateBinding Background}">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="OrientationStates">
                <VisualState x:Name="Horizontal"/>
                <VisualState x:Name="Vertical">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HorizontalSlider" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Collapsed</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="VerticalSlider" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid x:Name="HorizontalSlider">
              <Grid x:Name="HorizontalTickMarks" Grid.Column="1" Background="{StaticResource TransparentBrush}"/>
              <Grid x:Name="HorizontalTrack" Height="20" Grid.Column="1" Background="{StaticResource TransparentBrush}">
                <Border Height="4" Background="{StaticResource SliderHTrackBackgroundBrush}" BorderBrush="{StaticResource SliderHTrackBorderBrush}" BorderThickness="1" CornerRadius="2"/>
                <Canvas x:Name="HorizontalTrackFills"/>
                <Canvas x:Name="HorizontalThumbs"/>
              </Grid>
            </Grid>
            <Grid x:Name="VerticalSlider" Visibility="Collapsed">
              <Grid x:Name="VerticalSlidersGrid" Grid.Row="1" Margin="0,5,0,5">
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="*"/>
                  <ColumnDefinition Width="Auto"/>
                  <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
              </Grid>
              <Grid x:Name="VerticalTickMarks" Grid.Row="1" Background="{StaticResource TransparentBrush}"/>
              <Grid x:Name="VerticalTrack" Width="20" Grid.Row="1" Background="{StaticResource TransparentBrush}">
                <Border Width="3" Background="{StaticResource SliderVTrackBackgroundBrush}" BorderBrush="{StaticResource SliderVTrackBorderBrush}" BorderThickness="1,1,1,1"/>
                <Canvas x:Name="VerticalTrackFills"/>
                <Canvas x:Name="VerticalThumbs"/>
              </Grid>
            </Grid>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- *********************************  SliderThumb Style  ********************************* -->
  <Style x:Key="SliderThumbStyle" TargetType="ig:XamSliderThumbBase">
    <Setter Property="Cursor" Value="Hand"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="ig:XamSliderThumbBase">
          <Grid x:Name="RootElement">
            <ToolTipService.ToolTip>
              <ToolTip x:Name="ThumbToolTip" ContentTemplate="{TemplateBinding ToolTipTemplate}" Visibility="{TemplateBinding ToolTipVisibility}"/>
            </ToolTipService.ToolTip>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="OrientationStates">
                <VisualState x:Name="Horizontal"/>
                <VisualState x:Name="Vertical">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HorizontalThumb" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Collapsed</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="VerticalThumb" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="FocusStates">
                <VisualState x:Name="Unfocused"/>
                <VisualState x:Name="Focused">
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="ActiveStates">
                <VisualState x:Name="Inactive"/>
                <VisualState x:Name="Active"/>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid x:Name="HorizontalThumb" HorizontalAlignment="Left" Margin="-5,3,0,0">
              <Rectangle Width="8" Height="14" Fill="{StaticResource ButtonBackgroundBrush}" RadiusX="1" RadiusY="1" Stroke="{StaticResource ButtonBorderBrush}"/>
            </Grid>
            <Grid x:Name="VerticalThumb" Visibility="Collapsed"/>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- *********************************  XamColorPickerToggleButton Style  ********************************* -->
  <Style x:Key="XamColorPickerToggleButtonStyle" TargetType="ToggleButton">
    <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}"/>
    <Setter Property="Padding" Value="5"/>
    <Setter Property="BorderThickness" Value="1"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="ToggleButton">
          <Grid>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal"/>
                <VisualState x:Name="MouseOver">
                  <Storyboard>
                    <DoubleAnimation Duration="0" Storyboard.TargetName="hoverElem" Storyboard.TargetProperty="(UIElement.Opacity)" To="1"/>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Pressed"/>
                <VisualState x:Name="Disabled">
                  <Storyboard>
                    <DoubleAnimation Duration="0" Storyboard.TargetName="contentPresenter" Storyboard.TargetProperty="(UIElement.Opacity)" To="0.35"/>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="CheckStates">
                <VisualState x:Name="Checked">
                  <Storyboard>
                    <DoubleAnimation Duration="0" Storyboard.TargetName="pressedElem" Storyboard.TargetProperty="(UIElement.Opacity)" To="1"/>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Unchecked"/>
              </VisualStateGroup>
              <VisualStateGroup x:Name="FocusStates">
                <VisualState x:Name="Focused"/>
                <VisualState x:Name="Unfocused"/>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="*"/>
              <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <igPrim:TransparencyBackgroundControl Grid.ColumnSpan="2" />
            <Border Grid.ColumnSpan="2" Background="{TemplateBinding Background}" CornerRadius="1,3,3,1"/>
            <Border x:Name="Bd" Grid.Column="1" Background="{StaticResource ButtonBackgroundBrush}" BorderBrush="{StaticResource ButtonBorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="1"/>
            <Rectangle x:Name="hoverElem" Grid.Column="1" Fill="{StaticResource ButtonHoverBackgroundBrush}" Opacity="0" RadiusX="1" RadiusY="1" Stroke="{StaticResource ButtonHoverBorderBrush}"/>
            <Rectangle x:Name="pressedElem" Grid.Column="1" Fill="{StaticResource ButtonPressedBackgroundBrush}" Opacity="0" RadiusX="1" RadiusY="1" Stroke="{StaticResource ButtonPressedBorderBrush}"/>
            <ContentPresenter x:Name="contentPresenter" Grid.Column="1" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}"/>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- *********************************  XamColorPicker Style  ********************************* -->
  <Style x:Key="ColorPickerStyle" TargetType="igCP:XamColorPicker">
    <Setter Property="Padding" Value="4,2"/>
    <Setter Property="MinHeight" Value="22"/>
    <Setter Property="BorderThickness" Value="1"/>
    <Setter Property="Background" Value="{StaticResource PopupBackgroundBrush}"/>
    <Setter Property="BorderBrush" Value="{StaticResource PopupBorderBrush}"/>
    <Setter Property="DerivedPaletteColorItemBoxStyle">
      <Setter.Value>
        <Style TargetType="igPrimBase:ColorItemBox">
          <Setter Property="Foreground" Value="{StaticResource TransparentBrush}"/>
          <Setter Property="BorderThickness" Value="0"/>
          <Setter Property="Width" Value="13"/>
          <Setter Property="Height" Value="13"/>
          <Setter Property="Margin" Value="2,0"/>
          <Setter Property="Template">
            <Setter.Value>
              <ControlTemplate TargetType="igPrimBase:ColorItemBox">
                <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                  <VisualStateManager.VisualStateGroups>
                    <VisualStateGroup x:Name="SelectedStates">
                      <VisualState x:Name="Normal"/>
                      <VisualState x:Name="WasSelected">
                        <Storyboard>
                          <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00" Storyboard.TargetName="SelectedBorder1" Storyboard.TargetProperty="BorderBrush">
                            <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{StaticResource ColorPickerSelectedOuterBorderBrush}">
                            </DiscreteObjectKeyFrame>
                          </ObjectAnimationUsingKeyFrames>
                          <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00" Storyboard.TargetName="SelectedBorder2" Storyboard.TargetProperty="BorderBrush">
                            <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{StaticResource ColorPickerSelectedInnerBorderBrush}">
                            </DiscreteObjectKeyFrame>
                          </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                      </VisualState>
                      <VisualState x:Name="Hover">
                        <Storyboard>
                          <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00" Storyboard.TargetName="SelectedBorder1" Storyboard.TargetProperty="BorderBrush">
                            <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{StaticResource ColorPickerHoverInnerBorderBrush}">
                            </DiscreteObjectKeyFrame>
                          </ObjectAnimationUsingKeyFrames>
                          <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00" Storyboard.TargetName="SelectedBorder2" Storyboard.TargetProperty="BorderBrush">
                            <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{StaticResource ColorPickerHoverOuterBorderBrush}">
                            </DiscreteObjectKeyFrame>
                          </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                      </VisualState>
                    </VisualStateGroup>
                  </VisualStateManager.VisualStateGroups>
                  <Grid>
                    <Rectangle Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" Margin="0" Fill="{TemplateBinding ColorItemBrush}"/>
                    <Border x:Name="SelectedBorder1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="{StaticResource TransparentBrush}" BorderBrush="{StaticResource TransparentBrush}" BorderThickness="1">
                      <Border x:Name="SelectedBorder2" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="{StaticResource TransparentBrush}" BorderBrush="{StaticResource TransparentBrush}" BorderThickness="1"/>
                    </Border>
                  </Grid>
                </Border>
              </ControlTemplate>
            </Setter.Value>
          </Setter>
        </Style>
      </Setter.Value>
    </Setter>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igCP:XamColorPicker">
          <Grid x:Name="Root">
            <Grid.Resources>
              <igPrimBase:ColorStripManager x:Key="StripManager"/>
              <igPrimBase:NullableColorConverter x:Key="ColorConverter"/>
            </Grid.Resources>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="DropDownStates">
                <VisualState x:Name="Closed"/>
                <VisualState x:Name="Open">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Popup" Storyboard.TargetProperty="IsOpen">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <System:Boolean>True</System:Boolean>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="DisplayColorPalettesDropdownButton">
                <VisualState x:Name="Hide"/>
                <VisualState x:Name="Show">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ColorPalettesButton" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ColorPalettes" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="ShowAdvancedEditorButton">
                <VisualState x:Name="ShowEditorButton"/>
                <VisualState x:Name="HideEditorButton">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="AdvancedEditorButton" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Collapsed</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="ShowRecentColorPalette">
                <VisualState x:Name="ShowRCPalette"/>
                <VisualState x:Name="HideRCPalette">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="RecentColorCaption" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Collapsed</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="RecentColorStrip" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Collapsed</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="ShowDPalettes">
                <VisualState x:Name="ShowDerivedPalettes"/>
                <VisualState x:Name="HideDerivedPalettes">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="DerivedColorCaption" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Collapsed</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="DerivedPalettes" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Collapsed</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Border x:Name="ContentPresenterBorder" BorderBrush="{StaticResource ColorPickerContentPresenterBorderBrush}" BorderThickness="1" CornerRadius="1">
              <Grid>
                <igPrimBase:ColorPickerDialog x:Name="ColorPickerDialog" ColorPicker="{Binding RelativeSource={RelativeSource TemplatedParent}}"/>
                <ToggleButton x:Name="ToggleButton" Grid.Column="1" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource XamColorPickerToggleButtonStyle}">
                  <ToggleButton.Background>
                    <SolidColorBrush Color="{Binding SelectedColor, Converter={StaticResource ColorConverter}, RelativeSource={RelativeSource TemplatedParent}}"/>
                  </ToggleButton.Background>
                  <Grid Background="{StaticResource TransparentBrush}">
                    <Path Width="10" Height="6" Data="M 0,2 C0,2 1,2 1,2 1,2 1,3 1,3 1,3 2,3 2,3 2,3 2,4 2,4 2,4 3,4 3,4 3,4 3,5 3,5 3,5 4,5 4,5 4,5 4,6 4,6 4,6 6,6 6,6 6,6 6,5 6,5 6,5 7,5 7,5 7,5 7,4 7,4 7,4 8,4 8,4 8,4 8,3 8,3 8,3 9,3 9,3 9,3 9,2 9,2 9,2 10,2 10,2 10,2 10,0 10,0 10,0 0,0 0,0 0,0 0,2 0,2 z" Fill="{StaticResource ColorPickerGlyphBackgroundBrush}" Stretch="Fill"/>
                    <Path Width="8" Height="4" Data="M 0,1 C0,1 1,1 1,1 1,1 1,2 1,2 1,2 2,2 2,2 2,2 2,3 2,3 2,3 3,3 3,3 3,3 3,4 3,4 3,4 5,4 5,4 5,4 5,3 5,3 5,3 6,3 6,3 6,3 6,2 6,2 6,2 7,2 7,2 7,2 7,1 7,1 7,1 8,1 8,1 8,1 8,0 8,0 8,0 0,0 0,0 0,0 0,1 0,1 z" Fill="{StaticResource ColorPickerGlyphBorderBrush}" Stretch="Fill"/>
                  </Grid>
                </ToggleButton>
              </Grid>
            </Border>
            <Popup x:Name="Popup" VerticalAlignment="Bottom" ig:Commanding.CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}" IsOpen="False">
              <Border x:Name="RootPopupElement" Background="{StaticResource PopupBackgroundBrush}" BorderBrush="{StaticResource PopupBorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Padding="10">
                <Border.Effect>
                  <DropShadowEffect BlurRadius="10" Direction="270" Opacity="0.5" ShadowDepth="0"/>
                </Border.Effect>
                <StackPanel Orientation="Vertical">
                  <TextBlock Text="{TemplateBinding CurrentColorCaption}" Style="{StaticResource SimpleTextBlockStyle}"/>
                  <Grid Height="30">
                    <igPrim:TransparencyBackgroundControl />
                    <Rectangle x:Name="SelectedColorRectangle"
                               Stroke="{StaticResource LightBorderBrush}">
                      <Rectangle.Fill>
                        <SolidColorBrush Color="{Binding SelectedColorPreview, Converter={StaticResource ColorConverter}, RelativeSource={RelativeSource TemplatedParent}}" />
                      </Rectangle.Fill>
                    </Rectangle>
                  </Grid>
                  <TextBlock Margin="0,10,0,0" Text="{TemplateBinding CurrentPaletteCaption}" Style="{StaticResource SimpleTextBlockStyle}"/>
                  <Grid>
                    <ComboBox x:Name="ColorPalettes" Height="25" Grid.Column="1" ItemsSource="{Binding ColorPalettes, RelativeSource={RelativeSource TemplatedParent}}" Opacity="0" SelectedItem="{Binding CurrentPalette, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Visibility="Collapsed">
                      <ComboBox.ItemTemplate>
                        <DataTemplate>
                          <igPrimBase:ColorStrip ColorPalette="{Binding}" IsHitTestVisible="False"/>
                        </DataTemplate>
                      </ComboBox.ItemTemplate>
                    </ComboBox>
                    <Grid>
                      <Grid.ColumnDefinitions>
                        <ColumnDefinition x:Name="colorStrip" Width="*"/>
                        <ColumnDefinition x:Name="ColorPalettesBtn" Width="20"/>
                      </Grid.ColumnDefinitions>
                      <Button x:Name="ColorPalettesButton" Grid.Column="1" Margin="0,2" Cursor="Hand" HorizontalContentAlignment="Center" Padding="1" Style="{StaticResource ButtonStyle}" VerticalContentAlignment="Center" Visibility="Collapsed">
                        <Grid Margin="5">
                          <Path Width="5" Height="3" Margin="0,1,0,0" Data="M 0,0 C0,0 0,1 0,1 0,1 1,1 1,1 1,1 1,2 1,2 1,2 2,2 2,2 2,2 2,3 2,3 2,3 3,3 3,3 3,3 3,2 3,2 3,2 4,2 4,2 4,2 4,1 4,1 4,1 5,1 5,1 5,1 5,0 5,0 5,0 0,0 0,0 z" Fill="{StaticResource ButtonBorderBrush}" Stretch="Fill"/>
                          <Path Width="5" Height="3" Data="M 0,0 C0,0 0,1 0,1 0,1 1,1 1,1 1,1 1,2 1,2 1,2 2,2 2,2 2,2 2,3 2,3 2,3 3,3 3,3 3,3 3,2 3,2 3,2 4,2 4,2 4,2 4,1 4,1 4,1 5,1 5,1 5,1 5,0 5,0 5,0 0,0 0,0 z" Fill="{StaticResource LightForegroundBrush}" Stretch="Fill"/>
                        </Grid>
                      </Button>
                      <igPrimBase:ColorStrip x:Name="CurrentColorStrip" ColorPalette="{Binding CurrentPalette, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" igPrimBase:ColorStripManager.Manager="{StaticResource StripManager}"/>
                    </Grid>
                  </Grid>
                  <TextBlock x:Name="DerivedColorCaption" Margin="0,10,0,0" Text="{TemplateBinding DerivedColorPalettesCaption}" Style="{StaticResource SimpleTextBlockStyle}"/>
                  <StackPanel x:Name="DerivedPalettes" Orientation="Vertical"/>
                  <TextBlock x:Name="RecentColorCaption" Margin="0,10,0,0" Text="{TemplateBinding RecentColorPaletteCaption}" Style="{StaticResource SimpleTextBlockStyle}"/>
                  <igPrimBase:ColorStrip x:Name="RecentColorStrip" igPrimBase:ColorStripManager.Manager="{StaticResource StripManager}"/>
                  <Border Height="2" Margin="0,10" Background="{StaticResource LightBorderBrush}" BorderBrush="{StaticResource LightForegroundBrush}" BorderThickness="0,0,0,1"/>
                  <Button x:Name="AdvancedEditorButton" Content="{TemplateBinding AdvancedButtonCaption}" Style="{StaticResource ButtonStyle}" HorizontalAlignment="Stretch">
                    <ig:Commanding.Commands>
                      <ig:CommandSourceCollection>
                        <igCP:XamPickerCommandSource CommandType="Toggle" EventName="Click"/>
                        <igCP:XamPickerCommandSource CommandType="OpenAdvanceEditor" EventName="Click"/>
                      </ig:CommandSourceCollection>
                    </ig:Commanding.Commands>
                  </Button>
                </StackPanel>
              </Border>
            </Popup>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="igCP:XamColorPicker" BasedOn="{StaticResource ColorPickerStyle}" />

  <!-- *********************************  ColorStrip Style  ********************************* -->
  <Style x:Key="ColorStrip" TargetType="igPrimBase:ColorStrip">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igPrimBase:ColorStrip">
          <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
            <StackPanel x:Name="ColorPickerPanel" Background="{TemplateBinding Background}" Orientation="Horizontal"/>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="igPrimBase:ColorStrip" BasedOn="{StaticResource ColorStrip}"/>

  <!-- *********************************  ColorItemBox Style  ********************************* -->
  <Style x:Key="ColorItemBox" TargetType="igPrimBase:ColorItemBox">
    <Setter Property="Foreground" Value="{StaticResource TransparentBrush}"/>
    <Setter Property="BorderBrush" Value="{StaticResource ColorItemBoxBorderBrush}"/>
    <Setter Property="BorderThickness" Value="1"/>
    <Setter Property="Width" Value="13"/>
    <Setter Property="Height" Value="13"/>
    <Setter Property="Margin" Value="2,0"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igPrimBase:ColorItemBox">
          <Border>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="SelectedStates">
                <VisualState x:Name="Normal"/>
                <VisualState x:Name="WasSelected">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00" Storyboard.TargetName="SelectedBorder1" Storyboard.TargetProperty="BorderBrush">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{StaticResource ColorItemBoxSelectedOuterBorderBrush}">
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00" Storyboard.TargetName="SelectedBorder2" Storyboard.TargetProperty="BorderBrush">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{StaticResource ColorItemBoxSelectedInnerBorderBrush}">
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Hover">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00" Storyboard.TargetName="SelectedBorder1" Storyboard.TargetProperty="BorderBrush">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{StaticResource ColorItemBoxHoverOuterBorderBrush}">
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00" Storyboard.TargetName="SelectedBorder2" Storyboard.TargetProperty="BorderBrush">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{StaticResource ColorItemBoxHoverInnerBorderBrush}">
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid>
              <Rectangle Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" Margin="0" Fill="{TemplateBinding ColorItemBrush}"/>
              <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"/>
              <Border x:Name="SelectedBorder1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="{StaticResource TransparentBrush}" BorderBrush="{StaticResource TransparentBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                <Border x:Name="SelectedBorder2" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="{StaticResource TransparentBrush}" BorderBrush="{StaticResource TransparentBrush}" BorderThickness="1"/>
              </Border>
            </Grid>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="igPrimBase:ColorItemBox" BasedOn="{StaticResource ColorItemBox}"/>

  <!-- *********************************  AdvancedColorShadePicker Style  ********************************* -->
  <Style x:Key="AdvancedColorShadePicker" TargetType="igPrimBase:AdvancedColorShadePicker">
    <Setter Property="Background" Value="{StaticResource LightForegroundBrush}"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igPrim:AdvancedColorShadePicker">
          <Grid>
            <Grid.Resources>
              <igPrim:SpecializedTextBoxValueConverter x:Key="TextConverter"></igPrim:SpecializedTextBoxValueConverter>
            </Grid.Resources>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="ColorSliders">
                <VisualState x:Name="RGB">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00" Storyboard.TargetName="RGBSliders" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00" Storyboard.TargetName="HSLSliders" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Collapsed</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00" Storyboard.TargetName="CMYKSliders" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Collapsed</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="HSL">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00" Storyboard.TargetName="RGBSliders" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Collapsed</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00" Storyboard.TargetName="HSLSliders" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00" Storyboard.TargetName="CMYKSliders" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Collapsed</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="CMYK">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00" Storyboard.TargetName="RGBSliders" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Collapsed</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00" Storyboard.TargetName="HSLSliders" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Collapsed</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00" Storyboard.TargetName="CMYKSliders" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid.RowDefinitions>
              <RowDefinition x:Name="colorModeRow"/>
              <RowDefinition x:Name="samplingRow"/>
              <RowDefinition x:Name="colorSliderRow"/>
              <RowDefinition x:Name="alphaRow"/>
              <RowDefinition x:Name="buttonsRow"/>
            </Grid.RowDefinitions>
            <Grid x:Name="colorModes" Margin="0,0,0,5">
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
              </Grid.ColumnDefinitions>
              <Rectangle x:Name="colorModesBackground" Grid.ColumnSpan="5" Fill="{StaticResource ColorModeTabsBackgroundBrush}" Stroke="{StaticResource ColorModeRadioButtonBorderBrush}"/>
              <Rectangle Height="1" Grid.ColumnSpan="5" VerticalAlignment="Bottom" Fill="{StaticResource LightBorderBrush}"/>
              <RadioButton Grid.Column="1" Content="RGB" GroupName="modes" IsChecked="True" Style="{StaticResource ColorPickerRadioButtonStyle}">

                <ig:Commanding.Command>
                  <igCP:ColorStripsCommandSource CommandType="ShowRGBSliders" EventName="Click"/>
                </ig:Commanding.Command>
              </RadioButton>
              <RadioButton Grid.Column="2" Content="HSL" GroupName="modes" Style="{StaticResource ColorPickerRadioButtonStyle}">

                <ig:Commanding.Command>
                  <igCP:ColorStripsCommandSource CommandType="ShowHSLSliders" EventName="Click"/>
                </ig:Commanding.Command>
              </RadioButton>
              <RadioButton Grid.Column="3" Content="CMYK" GroupName="modes" Style="{StaticResource ColorPickerRadioButtonStyle}">

                <ig:Commanding.Command>
                  <igCP:ColorStripsCommandSource CommandType="ShowCMYKSliders" EventName="Click"/>
                </ig:Commanding.Command>
              </RadioButton>
            </Grid>
            <Grid x:Name="samplingArea" Grid.Row="1" Margin="10,5">
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="185"/>
                <ColumnDefinition x:Name="spacerColumn" Width="5"/>
                <ColumnDefinition Width="20"/>
              </Grid.ColumnDefinitions>
              <Grid.RowDefinitions>
                <RowDefinition x:Name="shadingCanvasRow" Height="*"/>
                <RowDefinition x:Name="currentColorRow" Height="20"/>
              </Grid.RowDefinitions>
              <!-- SHADING CANVAS -->
              <Border BorderBrush="{StaticResource LightBorderBrush}" BorderThickness="1,1,1,0"/>
              <Canvas x:Name="ShadingCanvas" Width="183" Height="100">
                <Rectangle x:Name="ColorSamplingRectangle" Width="{Binding Width, ElementName=ShadingCanvas}" Height="{Binding Height, ElementName=ShadingCanvas}" Fill="{StaticResource AdvancedColorShadePickerColorSamplingBackgroundBrush}"/>
                <Rectangle x:Name="rectWhiteGradient" Width="{Binding Width, ElementName=ShadingCanvas}" Height="{Binding Height, ElementName=ShadingCanvas}" Fill="{StaticResource AdvancedColorShadePickerWhiteBackgroundBrush}"/>
                <Rectangle x:Name="rectBlackGradient" Width="{Binding Width, ElementName=ShadingCanvas}" Height="{Binding Height, ElementName=ShadingCanvas}" Fill="{StaticResource AdvancedColorShadePickerBlackBackgroundBrush}"/>
                <Canvas x:Name="LightnessSelector" Width="10" Height="10" Canvas.Left="100" Canvas.Top="96" IsHitTestVisible="False">
                  <Ellipse Width="10" Height="10" IsHitTestVisible="False" Stroke="{StaticResource LightForegroundBrush}" StrokeThickness="3"/>
                  <Ellipse Width="10" Height="10" IsHitTestVisible="False" Stroke="{StaticResource ForegroundBrush}" StrokeThickness="1"/>
                </Canvas>
              </Canvas>
              <!-- PREVIOUS AND CURRENT COLOR -->
              <Border x:Name="currentColor" Grid.Row="1" BorderBrush="{StaticResource LightBorderBrush}" BorderThickness="1,0,1,1">
                <Grid>
                  <Grid.Resources>
                    <igPrimBase:NullableColorConverter x:Key="ColorConverter"/>
                  </Grid.Resources>
                  <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                  </Grid.ColumnDefinitions>
                  <igPrim:TransparencyBackgroundControl Grid.ColumnSpan="2" />
                  <Rectangle>
                    <Rectangle.Fill>
                      <SolidColorBrush Color="{Binding SelectedColor, Converter={StaticResource ColorConverter}, RelativeSource={RelativeSource TemplatedParent}}"/>
                    </Rectangle.Fill>
                  </Rectangle>
                  <Rectangle Grid.Column="1">
                    <Rectangle.Fill>
                      <SolidColorBrush Color="{Binding CurrentColor, Converter={StaticResource ColorConverter}, RelativeSource={RelativeSource TemplatedParent}}"/>
                    </Rectangle.Fill>
                  </Rectangle>
                </Grid>
              </Border>
              <!-- HUE CANVAS -->
              <Canvas x:Name="HueCanvas" Grid.Column="2" Grid.RowSpan="2">
                <Rectangle x:Name="HueRectangle" Width="20" Height="120" HorizontalAlignment="Right" Stroke="{StaticResource LightBorderBrush}" Fill="{StaticResource AdvancedColorShadePickerHueBackgroundBrush}"/>
                <Canvas x:Name="HueSelector" Height="8" Canvas.Left="0" IsHitTestVisible="False">
                  <Path Width="5" Height="8" Data="F1 M 276.761,316L 262.619,307.835L 262.619,324.165L 276.761,316 Z " Fill="{StaticResource ForegroundBrush}" Stretch="Fill" Stroke="{StaticResource ForegroundBrush}" StrokeLineJoin="Round"/>
                  <Path Width="5" Height="8" Canvas.Left="20" Canvas.Top="8" Data="F1 M 276.761,316L 262.619,307.835L 262.619,324.165L 276.761,316 Z " Fill="{StaticResource ForegroundBrush}" Stretch="Fill" Stroke="{StaticResource ForegroundBrush}" StrokeLineJoin="Round">
                    <Path.RenderTransform>
                      <RotateTransform Angle="180"/>
                    </Path.RenderTransform>
                  </Path>
                </Canvas>
              </Canvas>
            </Grid>
            <!-- RGB SLIDERS-->
            <Border x:Name="RGBSliders" Grid.Row="2" Margin="10,5,10,0">
              <Grid>
                <Grid.RowDefinitions>
                  <RowDefinition Height="18"></RowDefinition>
                  <RowDefinition Height="24"></RowDefinition>
                  <RowDefinition Height="18"></RowDefinition>
                  <RowDefinition Height="24"></RowDefinition>
                  <RowDefinition Height="18"></RowDefinition>
                  <RowDefinition Height="24"></RowDefinition>
                  <RowDefinition Height="42"></RowDefinition>
                </Grid.RowDefinitions>
                <TextBlock Text="{Binding Path=RedCaption}" Grid.Row="0" Style="{StaticResource SimpleTextBlockStyle}" />
                <Grid Grid.Row="1">
                  <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="15"/>
                    <ColumnDefinition Width="50"/>
                  </Grid.ColumnDefinitions>
                  <igPrimBase:ByteSlider x:Name="Red" Style="{StaticResource ByteSliderStyle}" ThumbStyle="{StaticResource SliderThumbStyle}" TrackFillBrush="{StaticResource RedSliderTrackFillBackgroundBrush}" TrackFillStyle="{StaticResource TrackFillStyle}" Value="{Binding Red, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                  <TextBox x:Name="RedTextBox" Style="{StaticResource SimpleTextBoxStyle}" Grid.Column="2" Text="{Binding Path=Red, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay, NotifyOnValidationError=True, ValidatesOnDataErrors=True, ValidatesOnExceptions=True }" VerticalAlignment="Center" />
                </Grid>
                <TextBlock Text="{Binding Path=GreenCaption}" Grid.Row="2" Style="{StaticResource SimpleTextBlockStyle}"/>
                <Grid Grid.Row="3">
                  <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="15"/>
                    <ColumnDefinition Width="50"/>
                  </Grid.ColumnDefinitions>
                  <igPrimBase:ByteSlider x:Name="Green" Style="{StaticResource ByteSliderStyle}" ThumbStyle="{StaticResource SliderThumbStyle}" TrackFillBrush="{StaticResource GreenSliderTrackFillBackgroundBrush}" TrackFillStyle="{StaticResource TrackFillStyle}" Value="{Binding Green, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                  <TextBox x:Name="GreenTextBox" Style="{StaticResource SimpleTextBoxStyle}" Grid.Column="2" Text="{Binding Path=Green, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay, NotifyOnValidationError=True, ValidatesOnDataErrors=True, ValidatesOnExceptions=True }" VerticalAlignment="Center"/>
                </Grid>
                <TextBlock Text="{Binding Path=BlueCaption}" Grid.Row="4" Style="{StaticResource SimpleTextBlockStyle}"/>
                <Grid Grid.Row="5">
                  <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="15"/>
                    <ColumnDefinition Width="50"/>
                  </Grid.ColumnDefinitions>
                  <igPrimBase:ByteSlider x:Name="Blue" Style="{StaticResource ByteSliderStyle}" ThumbStyle="{StaticResource SliderThumbStyle}" TrackFillBrush="{StaticResource BlueSliderTrackFillBackgroundBrush}" TrackFillStyle="{StaticResource TrackFillStyle}" Value="{Binding Blue, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                  <TextBox x:Name="BlueTextBox" Style="{StaticResource SimpleTextBoxStyle}" Grid.Column="2" Text="{Binding Path=Blue, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay, NotifyOnValidationError=True, ValidatesOnDataErrors=True, ValidatesOnExceptions=True }" VerticalAlignment="Center"/>
                </Grid>
              </Grid>
            </Border>
            <!-- HSL SLIDERS-->
            <Border x:Name="HSLSliders" Grid.Row="2" Margin="10,5,10,0" Visibility="Collapsed">
              <Grid>
                <Grid.RowDefinitions>
                  <RowDefinition Height="18"></RowDefinition>
                  <RowDefinition Height="24"></RowDefinition>
                  <RowDefinition Height="18"></RowDefinition>
                  <RowDefinition Height="24"></RowDefinition>
                  <RowDefinition Height="18"></RowDefinition>
                  <RowDefinition Height="24"></RowDefinition>
                  <RowDefinition Height="42"></RowDefinition>
                </Grid.RowDefinitions>
                <TextBlock Text="{Binding Path=HueCaption}" Grid.Row="0" Style="{StaticResource SimpleTextBlockStyle}"/>
                <Grid Grid.Row="1">
                  <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="15"/>
                    <ColumnDefinition Width="50"/>
                  </Grid.ColumnDefinitions>
                  <ig:XamNumericSlider x:Name="Hue" MaxValue="360.0" MinValue="0.0" Style="{StaticResource NumericSliderStyle}" ThumbStyle="{StaticResource SliderThumbStyle}" Value="{Binding H, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                  <TextBox x:Name="HTextBox" Style="{StaticResource SimpleTextBoxStyle}" Grid.Column="2" Text="{Binding Path=H, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay, Converter={StaticResource TextConverter}, NotifyOnValidationError=True, ValidatesOnDataErrors=True, ValidatesOnExceptions=True }" VerticalAlignment="Center"  />
                </Grid>
                <TextBlock Text="{Binding Path=SaturationCaption}" Grid.Row="2" Style="{StaticResource SimpleTextBlockStyle}"/>
                <Grid Grid.Row="3">
                  <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="15"/>
                    <ColumnDefinition Width="50"/>
                  </Grid.ColumnDefinitions>
                  <ig:XamNumericSlider x:Name="Saturation" MaxValue="100.0" MinValue="0.0" Style="{StaticResource NumericSliderStyle}" ThumbStyle="{StaticResource SliderThumbStyle}" Value="{Binding S, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                  <TextBox x:Name="STextBox" Style="{StaticResource SimpleTextBoxStyle}" Grid.Column="2" Text="{Binding Path=S, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay, Converter={StaticResource TextConverter}, NotifyOnValidationError=True, ValidatesOnDataErrors=True, ValidatesOnExceptions=True }" VerticalAlignment="Center"/>
                </Grid>
                <TextBlock Text="{Binding Path=LightnessCaption}" Grid.Row="4" Style="{StaticResource SimpleTextBlockStyle}"/>
                <Grid Grid.Row="5">
                  <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="15"/>
                    <ColumnDefinition Width="50"/>
                  </Grid.ColumnDefinitions>
                  <ig:XamNumericSlider x:Name="Lightness" MaxValue="100.0" MinValue="0.0" Style="{StaticResource NumericSliderStyle}" ThumbStyle="{StaticResource SliderThumbStyle}" Value="{Binding L, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                  <TextBox x:Name="LTextBox" Style="{StaticResource SimpleTextBoxStyle}" Grid.Column="2" Text="{Binding Path=L, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay, Converter={StaticResource TextConverter}, NotifyOnValidationError=True, ValidatesOnDataErrors=True, ValidatesOnExceptions=True }" VerticalAlignment="Center"/>
                </Grid>
              </Grid>
            </Border>
            <!-- CMYK SLIDERS-->
            <Border x:Name="CMYKSliders" Grid.Row="2" Margin="10,5,10,0" Visibility="Collapsed">
              <Grid>
                <Grid.RowDefinitions>
                  <RowDefinition Height="18"></RowDefinition>
                  <RowDefinition Height="24"></RowDefinition>
                  <RowDefinition Height="18"></RowDefinition>
                  <RowDefinition Height="24"></RowDefinition>
                  <RowDefinition Height="18"></RowDefinition>
                  <RowDefinition Height="24"></RowDefinition>
                  <RowDefinition Height="18"></RowDefinition>
                  <RowDefinition Height="24"></RowDefinition>
                </Grid.RowDefinitions>
                <TextBlock Text="{Binding Path=CyanCaption}" Grid.Row="0" Style="{StaticResource SimpleTextBlockStyle}"/>
                <Grid Grid.Row="1">
                  <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="15"/>
                    <ColumnDefinition Width="50"/>
                  </Grid.ColumnDefinitions>
                  <ig:XamNumericSlider x:Name="C" MaxValue="100.0" MinValue="0.0" Style="{StaticResource NumericSliderStyle}" ThumbStyle="{StaticResource SliderThumbStyle}" TrackFillBrush="{StaticResource CyanSliderTrackFillBackgroundBrush}" TrackFillStyle="{StaticResource TrackFillStyle}" Value="{Binding C, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                  <TextBox x:Name="CTextBox" Style="{StaticResource SimpleTextBoxStyle}" Grid.Column="2" Text="{Binding Path=C, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay, Converter={StaticResource TextConverter}, NotifyOnValidationError=True, ValidatesOnDataErrors=True, ValidatesOnExceptions=True}" />
                </Grid>

                <TextBlock Text="{Binding Path=MagentaCaption}" Grid.Row="2" Style="{StaticResource SimpleTextBlockStyle}"/>
                <Grid Grid.Row="3">
                  <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="15"/>
                    <ColumnDefinition Width="50"/>
                  </Grid.ColumnDefinitions>
                  <ig:XamNumericSlider x:Name="M" MaxValue="100.0" MinValue="0.0" Style="{StaticResource NumericSliderStyle}" ThumbStyle="{StaticResource SliderThumbStyle}" TrackFillBrush="{StaticResource MagentaSliderTrackFillBackgroundBrush}" TrackFillStyle="{StaticResource TrackFillStyle}" Value="{Binding M, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                  <TextBox x:Name="MTextBox" Style="{StaticResource SimpleTextBoxStyle}" Grid.Column="2" Text="{Binding Path=M, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay, Converter={StaticResource TextConverter}, NotifyOnValidationError=True, ValidatesOnDataErrors=True, ValidatesOnExceptions=True}" />
                </Grid>

                <TextBlock Text="{Binding Path=YellowCaption}" Grid.Row="4" Style="{StaticResource SimpleTextBlockStyle}"/>
                <Grid Grid.Row="5">
                  <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="15"/>
                    <ColumnDefinition Width="50"/>
                  </Grid.ColumnDefinitions>
                  <ig:XamNumericSlider x:Name="Y" MaxValue="100.0" MinValue="0.0" Style="{StaticResource NumericSliderStyle}" ThumbStyle="{StaticResource SliderThumbStyle}" TrackFillBrush="{StaticResource YellowSliderTrackFillBackgroundBrush}" TrackFillStyle="{StaticResource TrackFillStyle}" Value="{Binding Y, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                  <TextBox x:Name="YTextBox" Style="{StaticResource SimpleTextBoxStyle}" Grid.Column="2" Text="{Binding Path=Y, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay, Converter={StaticResource TextConverter}, NotifyOnValidationError=True, ValidatesOnDataErrors=True, ValidatesOnExceptions=True }" />
                </Grid>

                <TextBlock Text="{Binding Path=BlackCaption}" Grid.Row="6" Style="{StaticResource SimpleTextBlockStyle}"/>
                <Grid Grid.Row="7">
                  <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="15"/>
                    <ColumnDefinition Width="50"/>
                  </Grid.ColumnDefinitions>
                  <ig:XamNumericSlider x:Name="K" MaxValue="100.0" MinValue="0.0" Style="{StaticResource NumericSliderStyle}" ThumbStyle="{StaticResource SliderThumbStyle}" TrackFillBrush="{StaticResource BlackSliderTrackFillBackgroundBrush}" TrackFillStyle="{StaticResource TrackFillStyle}" Value="{Binding K, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                  <TextBox x:Name="KTextBox" Style="{StaticResource SimpleTextBoxStyle}" Grid.Column="2" Text="{Binding Path=K, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay, Converter={StaticResource TextConverter}, NotifyOnValidationError=True, ValidatesOnDataErrors=True, ValidatesOnExceptions=True}" />
                </Grid>
              </Grid>
            </Border>
            <!-- ALPHA SLIDER -->
            <Border x:Name="alphaSlider" Grid.Row="3" Margin="10,0,10,5">
              <StackPanel>
                <TextBlock Text="{Binding Path=AlphaCaption}" Style="{StaticResource SimpleTextBlockStyle}"/>
                <Grid>
                  <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="15"/>
                    <ColumnDefinition Width="50"/>
                  </Grid.ColumnDefinitions>
                  <igPrimBase:ByteSlider x:Name="Alpha" Style="{StaticResource ByteSliderStyle}" ThumbStyle="{StaticResource SliderThumbStyle}" TrackFillStyle="{StaticResource TrackFillStyle}" Value="{Binding Alpha, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                  <TextBox x:Name="AlphaTextBox" Style="{StaticResource SimpleTextBoxStyle}" Grid.Column="2" Text="{Binding Path=Alpha, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay, NotifyOnValidationError=True, ValidatesOnDataErrors=True, ValidatesOnExceptions=True }" VerticalAlignment="Center"/>
                </Grid>
              </StackPanel>
            </Border>

            <Grid Grid.Row="4" Margin="10,5">
              <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition Width="10"/>
                <ColumnDefinition/>
              </Grid.ColumnDefinitions>
              <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
              </Grid.RowDefinitions>
              <Border Height="2" Grid.ColumnSpan="3" Margin="0,0,0,10" VerticalAlignment="Top" Background="{StaticResource LightBorderBrush}" BorderBrush="{StaticResource LightForegroundBrush}" BorderThickness="0,0,0,1"/>
              <Button Grid.Row="1" Content="{Binding Path=OKCaption}" Style="{StaticResource ButtonStyle}" HorizontalAlignment="Stretch">

                <ig:Commanding.Commands>
                  <ig:CommandSourceCollection>
                    <igCP:ColorStripsCommandSource CommandType="Accept" EventName="Click"/>
                    <igCP:ColorPickerDialogCommandSource CommandType="Close" EventName="Click"/>
                  </ig:CommandSourceCollection>
                </ig:Commanding.Commands>
              </Button>
              <Button Grid.Column="2" Grid.Row="1" Content="{Binding Path=CancelCaption}" Style="{StaticResource ButtonStyle}" HorizontalAlignment="Stretch">

                <ig:Commanding.Commands>
                  <ig:CommandSourceCollection>
                    <igCP:ColorStripsCommandSource CommandType="Cancel" EventName="Click"/>
                    <igCP:ColorPickerDialogCommandSource CommandType="Close" EventName="Click"/>
                  </ig:CommandSourceCollection>
                </ig:Commanding.Commands>
              </Button>
            </Grid>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="igPrimBase:AdvancedColorShadePicker" BasedOn="{StaticResource AdvancedColorShadePicker}"/>

  <!-- *********************************  ColorPickerDialog Style  ********************************* -->
  <Style x:Key="ColorPickerDialog" TargetType="igPrimBase:ColorPickerDialog">
    <Setter Property="BorderThickness" Value="1"/>
    <Setter Property="BorderBrush" Value="{StaticResource PopupBorderBrush}"/>
    <Setter Property="Background" Value="{StaticResource PopupBackgroundBrush}"/>
    <Setter Property="Padding" Value="0,0,0,10"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igPrimBase:ColorPickerDialog">
          <Grid>
            <Popup x:Name="Popup">
              <Border x:Name="RootElement" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                <Border.Effect>
                  <DropShadowEffect BlurRadius="10" Direction="270" Opacity="0.5" ShadowDepth="0"/>
                </Border.Effect>
                <Grid>
                  <Grid.RowDefinitions>
                    <RowDefinition Height="19"/>
                    <RowDefinition/>
                  </Grid.RowDefinitions>
                  <Border Background="{StaticResource ColorPickerDialogHeaderBackgroundBrush}" BorderBrush="{StaticResource ColorPickerDialogBorderBrush}" BorderThickness="1">
                    <Grid>
                      <Grid x:Name="HeaderElem" Background="{StaticResource TransparentBrush}">
                        <TextBlock Margin="10,0,33,0" VerticalAlignment="Center" Foreground="{StaticResource LightForegroundBrush}" Text="{Binding DialogCaption, RelativeSource={RelativeSource TemplatedParent}}"/>
                      </Grid>
                    </Grid>
                  </Border>
                  <Grid Grid.Row="1" Margin="{TemplateBinding Padding}">
                    <igPrimBase:AdvancedColorShadePicker CurrentColor="{Binding Path=ColorPicker.SelectedColorPreview, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay }"
                                                         SelectedColor="{Binding ColorPicker.SelectedColor, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                  </Grid>
                </Grid>
              </Border>
            </Popup>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="igPrimBase:ColorPickerDialog" BasedOn="{StaticResource ColorPickerDialog}"/>

  <!-- *********************************  TransparencyBackgroundControl Style  ********************************* -->
  <Style TargetType="igPrim:TransparencyBackgroundControl">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igPrim:TransparencyBackgroundControl">
          <Grid x:Name="Root" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
</ResourceDictionary>