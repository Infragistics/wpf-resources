<ResourceDictionary
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
  xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
  xmlns:ig="http://schemas.infragistics.com/xaml"
  xmlns:NetworkNode="http://schemas.infragistics.com/xaml" mc:Ignorable="d">
  
    <!-- *********************************  RESOURCES  ********************************* -->
    <ResourceDictionary.MergedDictionaries>      
        <ResourceDictionary Source="IG.Styles.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <!-- ********************************** BRUSHES **********************************-->
    <!-- NetworkNode Brushes -->
    <SolidColorBrush x:Key="NetworkNodeBackgroundBrush" Color="{StaticResource Color_021}"/>
    <SolidColorBrush x:Key="NetworkNodeBorderBrush" Color="{StaticResource Color_021}"/>
    <SolidColorBrush x:Key="NetworkNodeChartPreviewBrush" Color="{StaticResource Color_027}"/>
    <SolidColorBrush x:Key="NetworkNodeConnectorLineBrush" Color="{StaticResource Color_002}"/>
    <SolidColorBrush x:Key="NetworkNodeDragStrokeBorderBrush" Color="{StaticResource Color_003}"/>
  
    <!-- NetworkNode NodeControl Brushes -->
    <LinearGradientBrush x:Key="NetworkNodeNodeControlBackgroundBrush" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="{StaticResource Color_004}"/>
        <GradientStop Color="{StaticResource Color_002}" Offset="1"/>
    </LinearGradientBrush>
      <SolidColorBrush x:Key="NetworkNodeNodeControlBorderBrush" Color="{StaticResource Color_002}"/>
    <LinearGradientBrush x:Key="NetworkNodeNodeControlHoverBackgroundBrush" EndPoint="0.5,1" MappingMode="RelativeToBoundingBox" StartPoint="0.5,0">
        <GradientStop Color="{StaticResource Color_014}"/>
        <GradientStop Color="{StaticResource Color_016}" Offset="1"/>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="NetworkNodeNodeControlHoverBorderBrush" Color="{StaticResource Color_016}"/>
    <LinearGradientBrush x:Key="NetworkNodeNodeControlSelectedBackgroundBrush" EndPoint="0.5,1" MappingMode="RelativeToBoundingBox" StartPoint="0.5,0">
        <GradientStop Color="{StaticResource Color_000}"/>
        <GradientStop Color="{StaticResource Color_001}" Offset="1"/>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="NetworkNodeNodeControlSelectedBorderBrush" Color="{StaticResource Color_000}"/>
    <LinearGradientBrush x:Key="NetworkNodeNodeControlFocusedBackgroundBrush" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="{StaticResource Color_003}"/>
        <GradientStop Color="{StaticResource Color_001}" Offset="1"/>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="NetworkNodeNodeControlFocusedBorderBrush" Color="{StaticResource Color_014}"/>
    <LinearGradientBrush x:Key="NetworkNodeNodeControlReadOnlyBackgroundBrush" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="{StaticResource Color_003}" Offset="1"/>
        <GradientStop Color="{StaticResource Color_007}"/>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="NetworkNodeNodeControlReadOnlyBorderBrush" Color="{StaticResource Color_007}"/>
    <LinearGradientBrush x:Key="NetworkNodeNodeControlEditingBorderBrush" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="{StaticResource Color_033}" Offset="0.5"/>
        <GradientStop Color="{StaticResource Color_034}" Offset="1"/>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="NetworkNodeNodeDisabledBackgroundBrush" Color="{StaticResource Color_022}" />

    <!-- NetworkNode ToggleButton Brushes -->
    <LinearGradientBrush x:Key="NetworkNodeToggleButtonBackgroundBrush" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="{StaticResource Color_004}"/>
        <GradientStop Color="{StaticResource Color_002}" Offset="1"/>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="NetworkNodeToggleButtonBorderBrush" Color="{StaticResource Color_002}" />
    <LinearGradientBrush x:Key="NetworkNodeToggleButtonHoverBackgroundBrush" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="{StaticResource Color_014}"/>
        <GradientStop Color="{StaticResource Color_016}" Offset="1"/>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="NetworkNodeToggleButtonHoverBorderBrush" Color="{StaticResource Color_016}"/>
    <LinearGradientBrush x:Key="NetworkNodeToggleButtonPressedBackgroundBrush"  EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="{StaticResource Color_014}" Offset="1"/>
        <GradientStop Color="{StaticResource Color_016}"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="NetworkNodeToggleButtonFocusedBackgroundBrush"  EndPoint="0.5,1" StartPoint="0.5,0">
      <GradientStop Color="{StaticResource Color_003}"/>
      <GradientStop Color="{StaticResource Color_001}" Offset="1"/>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="NetworkNodeToggleButtonFocusedBorderBrush" Color="{StaticResource Color_014}" />
    <SolidColorBrush x:Key="NetworkNodeToggleButtonExpanIconBackgroundBrush" Color="{StaticResource Color_011}" />
    <SolidColorBrush x:Key="NetworkNodeToggleButtonCollapseIconBackgroundBrush" Color="{StaticResource Color_011}" />

    <!-- Tooltip Brushes -->
    <LinearGradientBrush x:Key="TooltipBackgroundBrush" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="{StaticResource Color_047}" Offset="1"/>
        <GradientStop Color="{StaticResource Color_025}"/>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="TooltipBorderBrush" Color="{StaticResource Color_007}"/>

    <!-- *********************************  ToolTipStyle  ********************************* -->
    <Style x:Key="ToolTipStyle" TargetType="ContentControl">
        <Setter Property="Foreground" Value="{StaticResource ThemeForegroundBrush}"/>
        <Setter Property="Background" Value="{StaticResource TooltipBackgroundBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource TooltipBorderBrush}"/>
        <Setter Property="Padding" Value="6,2,6,2"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ContentControl">
                    <Border>
                        <Border.Effect>
                            <DropShadowEffect BlurRadius="15" Direction="270" ShadowDepth="1" Opacity="0.26" Color="{StaticResource Color_000}"/>
                        </Border.Effect>
                        <Grid>
                            <Rectangle Stroke="{TemplateBinding BorderBrush}" Fill="{TemplateBinding Background}" StrokeThickness="{TemplateBinding BorderThickness}"/>
                            <ContentPresenter Margin="{TemplateBinding Padding}" HorizontalAlignment="{TemplateBinding HorizontalAlignment}" VerticalAlignment="{TemplateBinding VerticalAlignment}"/>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- *********************************  XamNetworkNode Style ********************************* -->
    <Style x:Key="XamNetworkNodeStyle" TargetType="NetworkNode:XamNetworkNode" >
        <Setter Property="Background" Value="{StaticResource NetworkNodeBackgroundBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource NetworkNodeBorderBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Padding" Value="2"/>
        <Setter Property="DragStroke" Value="{StaticResource NetworkNodeDragStrokeBorderBrush}"/>
        <Setter Property="DragStrokeThickness" Value="1"/>
        <Setter Property="PreviewBrush" Value="{StaticResource NetworkNodeChartPreviewBrush}"/>
        <Setter Property="ToolTipStyle" Value="{StaticResource ToolTipStyle}"/>
        <!-- Connector properties -->
        <Setter Property="Line" Value="{StaticResource NetworkNodeConnectorLineBrush}"/>
        <Setter Property="LineThickness" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="NetworkNode:XamNetworkNode">
                    <Border Margin="{TemplateBinding Padding}" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid>
                            <ContentPresenter x:Name="ContentPresenter"/>
                            <NetworkNode:NetworkNodeNodesPanel x:Name="NodesPanel" Background="{StaticResource NetworkNodeBackgroundBrush}">
                            </NetworkNode:NetworkNodeNodesPanel>
                            <Canvas x:Name="Overlay"/>
                            <ig:XamOverviewPlusDetailPane x:Name="Thumbnail" IsZoomable="True"  Visibility="{TemplateBinding OverviewPlusDetailPaneVisibility}" HorizontalAlignment="{TemplateBinding HorizontalOverviewPlusDetailPaneAlignment}" VerticalAlignment="{TemplateBinding VerticalOverviewPlusDetailPaneAlignment}"/>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="NetworkNode:XamNetworkNode" BasedOn="{StaticResource XamNetworkNodeStyle}" />

    <!-- *********************************  NodeToggleButton Style  ********************************* -->
    <Style x:Key="NodeToggleButtonStyle" TargetType="ToggleButton">
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="over" d:IsOptimized="True"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="pressed" d:IsOptimized="True"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="0.3" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="grid" d:IsOptimized="True"/>
                                        <DoubleAnimation Duration="0" To="0.5" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="DisabledFill" d:IsOptimized="True"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CheckStates">
                                <VisualState x:Name="Checked">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="expand">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible
                                                    </Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unchecked"/>
                                <VisualState x:Name="Indeterminate"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="focused" d:IsOptimized="True"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid>
                            <Rectangle x:Name="normal" RadiusX="3" RadiusY="3" Fill="{StaticResource NetworkNodeToggleButtonBackgroundBrush}" Stroke="{StaticResource NetworkNodeToggleButtonBorderBrush}" StrokeThickness="1"/>
                            <Rectangle x:Name="over" RadiusX="3" RadiusY="3" Fill="{StaticResource NetworkNodeToggleButtonHoverBackgroundBrush}" Opacity="0" StrokeThickness="1" Stroke="{StaticResource NetworkNodeToggleButtonHoverBorderBrush}"/>
                            <Rectangle x:Name="pressed" RadiusX="3" RadiusY="3" Fill="{StaticResource NetworkNodeToggleButtonPressedBackgroundBrush}" Opacity="0" StrokeThickness="1" Stroke="{StaticResource NetworkNodeToggleButtonHoverBorderBrush}"/>
                            <Rectangle x:Name="focused" RadiusX="3" RadiusY="3" Fill="{StaticResource NetworkNodeToggleButtonFocusedBackgroundBrush}" StrokeThickness="1" Opacity="0" Stroke="{StaticResource NetworkNodeToggleButtonFocusedBorderBrush}"/>
                            <Rectangle x:Name="DisabledFill" Fill="{StaticResource NetworkNodeNodeControlBackgroundBrush}" Grid.RowSpan="2" RadiusX="3" RadiusY="3" Opacity="0"/>
                        </Grid>
                        <Grid x:Name="grid" HorizontalAlignment="Center" VerticalAlignment="Center" Width="8" Height="8">
                            <Path x:Name="expand" Data="M3,0 L5,0 L5,3 L8,3 L8,5 L5,5 L5,8 L3,8 L3,5 L0,5 L0,3 L3,3 z" Fill="{StaticResource NetworkNodeToggleButtonExpanIconBackgroundBrush}" Stretch="Fill" UseLayoutRounding="False" HorizontalAlignment="Left" VerticalAlignment="Top" Visibility="Collapsed"/>
                            <Path x:Name="collapse" Data="M0,0 L8,0 L8,2 L0,2 z" Fill="{StaticResource NetworkNodeToggleButtonCollapseIconBackgroundBrush}" Height="2" Stretch="Fill" UseLayoutRounding="False"/>
                        </Grid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- *********************************  NetworkNode NodeControl Style  ********************************* -->
    <Style x:Key="NetworkNodeNodeControlStyle" TargetType="NetworkNode:NetworkNodeNodeControl">
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="VerticalAlignment" Value="Top"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="CornerRadius" Value="4"/>
        <Setter Property="MinWidth" Value="24"/>
        <Setter Property="MinHeight" Value="24"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="Padding" Value="6,0,6,0"/>
        <Setter Property="BorderBrush" Value="{StaticResource NetworkNodeNodeControlBorderBrush}"/>
        <Setter Property="Background" Value="{StaticResource NetworkNodeNodeControlBackgroundBrush}"/>
        <Setter Property="Foreground" Value="{StaticResource ThemeLightForegroundBrush}"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="NetworkNode:NetworkNodeNodeControl">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="over" d:IsOptimized="True"/>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="ExpanderButton" d:IsOptimized="True"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="DisabledFill">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <DoubleAnimation Duration="0" To="0.5" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="NodePresenter" d:IsOptimized="True"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="ExpanderButton" d:IsOptimized="True"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="ReadOnly">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="overlay" Storyboard.TargetProperty="Background">
                                            <DiscreteObjectKeyFrame Value="{StaticResource NetworkNodeNodeControlReadOnlyBackgroundBrush}" KeyTime="0"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="overlay" Storyboard.TargetProperty="BorderBrush">
                                            <DiscreteObjectKeyFrame Value="{StaticResource NetworkNodeNodeControlReadOnlyBorderBrush}" KeyTime="0"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="focused" d:IsOptimized="True"/>
                                        <DoubleAnimation Duration="0" To="0.975" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="focusedStroke" d:IsOptimized="True"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="SelectedStates">
                                <VisualState x:Name="Unselected">
                                </VisualState>
                                <VisualState x:Name="Selected">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="selected" d:IsOptimized="True"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="EditStates">
                                <VisualState x:Name="NotEditing"/>
                                <VisualState x:Name="Editing">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="editing" d:IsOptimized="True"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="overlay" BorderBrush="{TemplateBinding BorderBrush}" CornerRadius="{TemplateBinding CornerRadius}" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}"/>
                        <Border x:Name="over" BorderBrush="{StaticResource NetworkNodeNodeControlHoverBorderBrush}" Background="{StaticResource NetworkNodeNodeControlHoverBackgroundBrush}" CornerRadius="{TemplateBinding CornerRadius}" Opacity="0" BorderThickness="{TemplateBinding BorderThickness}"/>
                        <Border x:Name="focused" BorderBrush="{StaticResource NetworkNodeNodeControlFocusedBorderBrush}" Background="{StaticResource NetworkNodeNodeControlFocusedBackgroundBrush}" CornerRadius="{TemplateBinding CornerRadius}" Opacity="0" BorderThickness="2"/>
                        <Border x:Name="selected" Background="{StaticResource NetworkNodeNodeControlSelectedBackgroundBrush}" CornerRadius="{TemplateBinding CornerRadius}" BorderThickness="{TemplateBinding BorderThickness}" Opacity="0" BorderBrush="{StaticResource NetworkNodeNodeControlSelectedBorderBrush}"/>
                        <Border x:Name="focusedStroke" BorderBrush="{StaticResource NetworkNodeNodeControlFocusedBorderBrush}" CornerRadius="3" Opacity="0" BorderThickness="2"/>
                        <Border x:Name="editing" BorderBrush="{StaticResource NetworkNodeNodeControlEditingBorderBrush}" CornerRadius="{TemplateBinding CornerRadius}" Opacity="0" BorderThickness="2"/>
                        <ContentControl x:Name="NodeContainer" Margin="{TemplateBinding Padding}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Foreground="{TemplateBinding Foreground}">
                            <ContentPresenter x:Name="NodePresenter"/>
                        </ContentControl>
                        <Rectangle x:Name="DisabledFill" Fill="{StaticResource NetworkNodeNodeDisabledBackgroundBrush}" RadiusX="4" RadiusY="4" Visibility="Collapsed"/>
                        <ToggleButton x:Name="ExpanderButton" Margin="-7,-7,0,0" Width="14" Height="14" HorizontalAlignment="Left" VerticalAlignment="Top" Style="{StaticResource NodeToggleButtonStyle}" Opacity="0.5"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="NetworkNode:NetworkNodeNodeControl" BasedOn="{StaticResource NetworkNodeNodeControlStyle}" />
</ResourceDictionary>