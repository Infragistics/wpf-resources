<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                    xmlns:ig="http://schemas.infragistics.com/xaml"
                    xmlns:igPrim="http://schemas.infragistics.com/xaml/primitives"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
                    xmlns:System="clr-namespace:System;assembly=mscorlib"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" mc:Ignorable="d">

  <!-- *********************************  RESOURCES  ********************************* -->
  <ResourceDictionary.MergedDictionaries>  
    <ResourceDictionary Source="IG.Styles.xaml" />
  </ResourceDictionary.MergedDictionaries>

  <!-- *********************************  BRUSHES  ********************************* -->
  <!--  Popup Resizer Brushes -->
  <SolidColorBrush x:Key="PopupResizerBorderBrush" Color="{StaticResource Color_007}" />

  <!-- *********************************  Converters  ********************************* -->
  <igPrim:ValueConverterGroup x:Key="boolToVisibility">
    <!-- if true sets visibility to Visible -->
    <igPrim:FixedValueConverter>
      <igPrim:FixedValueConverter.SourceValue>
        <System:Boolean>True</System:Boolean>
      </igPrim:FixedValueConverter.SourceValue>
      <igPrim:FixedValueConverter.DestinationValue>
        <Visibility>Visible</Visibility>
      </igPrim:FixedValueConverter.DestinationValue>
    </igPrim:FixedValueConverter>
    <!-- if false sets visibility to Collapsed -->
    <igPrim:FixedValueConverter>
      <igPrim:FixedValueConverter.DestinationValue>
        <Visibility>Collapsed</Visibility>
      </igPrim:FixedValueConverter.DestinationValue>
    </igPrim:FixedValueConverter>
  </igPrim:ValueConverterGroup>
    
    <!--  *********************************  TextBlock Style  *********************************  -->
    <Style x:Key="TextBlockStyle" TargetType="TextBlock">
        <Setter Property="Foreground" Value="{StaticResource ThemeForegroundBrush}" />
      <Setter Property="TextTrimming" Value="CharacterEllipsis" />
    </Style>

  <!-- *********************************  ComboEditorItemControl Style  ********************************* -->
  <Style x:Key="igComboEditorItemControlStyle" TargetType="ig:ComboEditorItemControl">
    <Setter Property="Padding" Value="5,1,5,0" />
	<Setter Property="MinHeight" Value="22" />
	<Setter Property="Background" Value="{StaticResource TransparentBrush}" />
    <Setter Property="Foreground" Value="{StaticResource ThemeForegroundBrush}" />
    <Setter Property="HorizontalContentAlignment" Value="Left" />
    <Setter Property="VerticalContentAlignment" Value="Center" />
    <Setter Property="BorderThickness" Value="0" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="ig:ComboEditorItemControl">
          <Grid>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="MouseOver">
                  <Storyboard>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="mouseOverRectangle" Storyboard.TargetProperty="Opacity">
                      <SplineDoubleKeyFrame KeyTime="0" Value="1" />
                    </DoubleAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="contentControl" Storyboard.TargetProperty="Foreground">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ThemeLightForegroundBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Disabled">
                  <Storyboard>
                    <DoubleAnimation Duration="0" Storyboard.TargetName="content" Storyboard.TargetProperty="(UIElement.Opacity)" To="0.35" />
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="SelectionStates">
                <VisualState x:Name="Unselected" />
                <VisualState x:Name="Selected">
                  <Storyboard>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="selectedRectangle" Storyboard.TargetProperty="Opacity">
                      <SplineDoubleKeyFrame KeyTime="0" Value="1" />
                    </DoubleAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="FocusStates">
                <VisualState x:Name="Focused">
                  <Storyboard>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="FocusedRectangle">
                      <EasingDoubleKeyFrame KeyTime="0" Value="1" />
                    </DoubleAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.StrokeThickness)" Storyboard.TargetName="FocusedRectangle">
                      <EasingDoubleKeyFrame KeyTime="0" Value="1" />
                    </DoubleAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Unfocused" />
              </VisualStateGroup>
              <VisualStateGroup x:Name="SelectionModeStates">
                <VisualState x:Name="CheckBox">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="SelectedCheckbox" Storyboard.TargetProperty="(UIElement.Visibility)">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Standard" />
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Border x:Name="Bd" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}"/>
            <Rectangle x:Name="selectedRectangle" Fill="{StaticResource ComboBoxItemSelectedBackgroundBrush}" IsHitTestVisible="False" Opacity="0" Stroke="{StaticResource ComboBoxItemHoverBorderBrush}"/>
            <Rectangle x:Name="mouseOverRectangle" Fill="{StaticResource ComboBoxItemHoverBackgroundBrush}" IsHitTestVisible="False" Opacity="0" Stroke="{StaticResource ComboBoxItemHoverBorderBrush}" />
            <Rectangle x:Name="FocusedRectangle" IsHitTestVisible="False" Opacity="0" Stroke="{StaticResource ComboBoxHoverBorderBrush}" StrokeThickness="1" />
            <Grid x:Name="content">
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
              </Grid.ColumnDefinitions>
              <CheckBox x:Name="SelectedCheckbox" VerticalAlignment="Center" IsHitTestVisible="False" Visibility="Collapsed" Style="{StaticResource CheckBoxStyle}" />
              <ContentControl x:Name="contentControl" Foreground="{TemplateBinding Foreground}" Grid.Column="1">
                <ContentPresenter x:Name="contentPresenter" Margin="{TemplateBinding Padding}" VerticalAlignment="Center" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" />
              </ContentControl>
            </Grid>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="ig:ComboEditorItemControl" BasedOn="{StaticResource igComboEditorItemControlStyle}" />
  
  <!-- ********************************** XamComboEditor Style **********************************-->
	<Style x:Key="igXamComboEditorStyle" TargetType="ig:XamComboEditor">
		<Setter Property="Padding" Value="6,1,2,2" />
		<Setter Property="MinHeight" Value="22" />
		<Setter Property="MinDropDownHeight" Value="20" />
		<Setter Property="HorizontalContentAlignment" Value="Left" />
		<Setter Property="VerticalContentAlignment" Value="Center" />
		<Setter Property="BorderThickness" Value="1" />
		<Setter Property="Background" Value="{StaticResource ComboBoxBackgroundBrush}" />
		<Setter Property="BorderBrush" Value="{StaticResource ComboBoxBorderBrush}" />
		<Setter Property="Foreground" Value="{StaticResource ThemeForegroundBrush}" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="ig:XamComboEditor">
                    <Grid SnapsToDevicePixels="true">
						<VisualStateManager.VisualStateGroups>
						  <VisualStateGroup x:Name="CommonStates">
							<VisualState x:Name="Normal" />
							<VisualState x:Name="MouseOver">
								<Storyboard>
									<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.BorderBrush)" Storyboard.TargetName="ContentPresenterBorder">
										<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ComboBoxHoverBorderBrush}" />
									</ObjectAnimationUsingKeyFrames>
								</Storyboard>
							</VisualState>                 
							<VisualState x:Name="Disabled">
							  <Storyboard>
								<DoubleAnimationUsingKeyFrames Storyboard.TargetName="DisabledVisualElement" Storyboard.TargetProperty="(UIElement.Opacity)">
								  <SplineDoubleKeyFrame KeyTime="00:00:00" Value=".6" />
								</DoubleAnimationUsingKeyFrames>
								<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="WaterMark">
									<EasingDoubleKeyFrame KeyTime="0" Value="0.3" />
								</DoubleAnimationUsingKeyFrames>     
								<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="TextBoxPresenter">
									<EasingDoubleKeyFrame KeyTime="0" Value="0.5" />
								</DoubleAnimationUsingKeyFrames>     															
							  </Storyboard>
							</VisualState>
						  </VisualStateGroup>
						  <VisualStateGroup x:Name="FocusStates">
							<VisualState x:Name="Focused">
							  <Storyboard>							
								<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.BorderBrush)" Storyboard.TargetName="ContentPresenterBorder">
									<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ComboBoxHoverBorderBrush}" />
								</ObjectAnimationUsingKeyFrames>    
                              </Storyboard>
							</VisualState>
							<VisualState x:Name="Unfocused" />
						  </VisualStateGroup>
						  <VisualStateGroup x:Name="ModeStates">
							<VisualState x:Name="Selectable">
							  <Storyboard>
								<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="contentControl">
								  <DiscreteObjectKeyFrame KeyTime="0">
									<DiscreteObjectKeyFrame.Value>
									  <Visibility>Visible</Visibility>
									</DiscreteObjectKeyFrame.Value>
								  </DiscreteObjectKeyFrame>
								</ObjectAnimationUsingKeyFrames>
							  </Storyboard>
							</VisualState>
							<VisualState x:Name="Editable"/>
						  </VisualStateGroup>
						  <VisualStateGroup x:Name="WaterMarkStates">
							<VisualState x:Name="WaterMarkHidden" />
							<VisualState x:Name="WaterMarkVisible">
							  <Storyboard>
								<ObjectAnimationUsingKeyFrames Storyboard.TargetName="WaterMark" Storyboard.TargetProperty="(UIElement.Visibility)">
								  <DiscreteObjectKeyFrame KeyTime="0">
									<DiscreteObjectKeyFrame.Value>
									  <Visibility>Visible</Visibility>
									</DiscreteObjectKeyFrame.Value>
								  </DiscreteObjectKeyFrame>
								</ObjectAnimationUsingKeyFrames>
							  </Storyboard>
							</VisualState>
						  </VisualStateGroup>
						  <VisualStateGroup x:Name="DropDownStates">
							<VisualState x:Name="Closed" />
							<VisualState x:Name="Open">
							  <Storyboard>
								<ObjectAnimationUsingKeyFrames Storyboard.TargetName="Popup" Storyboard.TargetProperty="IsOpen">
								  <DiscreteObjectKeyFrame KeyTime="00:00:00">
									<DiscreteObjectKeyFrame.Value>
									  <System:Boolean>True</System:Boolean>
									</DiscreteObjectKeyFrame.Value>
								  </DiscreteObjectKeyFrame>
								</ObjectAnimationUsingKeyFrames>
							  </Storyboard>
							</VisualState>
						  </VisualStateGroup>
                            <VisualStateGroup x:Name="ValidationStates">
                                <VisualState x:Name="Valid"/>
                                <VisualState x:Name="InvalidUnfocused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="ValidationErrorElement">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="InvalidFocused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="ValidationErrorElement">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <!--<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="IsOpen" Storyboard.TargetName="validationTooltip">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <System:Boolean>True</System:Boolean>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>-->
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="InvalidMouseOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="ValidationErrorElement">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="IsOpen" Storyboard.TargetName="validationTooltip">
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0.001">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <System:Boolean>True</System:Boolean>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="PositionStates">
							<VisualState x:Name="Below"/>
							<VisualState x:Name="Above">
							  <Storyboard>
								<ObjectAnimationUsingKeyFrames Storyboard.TargetName="Resizer" Storyboard.TargetProperty="Position">
								  <DiscreteObjectKeyFrame KeyTime="0">
									<DiscreteObjectKeyFrame.Value>
									  <igPrim:ResizerPosition>Above</igPrim:ResizerPosition>
									</DiscreteObjectKeyFrame.Value>
								  </DiscreteObjectKeyFrame>
								</ObjectAnimationUsingKeyFrames>
								<ObjectAnimationUsingKeyFrames Storyboard.TargetName="Resizer" Storyboard.TargetProperty="(Grid.Row)">
								  <DiscreteObjectKeyFrame KeyTime="00:00:00">
									<DiscreteObjectKeyFrame.Value>
									  <System:Int32>0</System:Int32>
									</DiscreteObjectKeyFrame.Value>
								  </DiscreteObjectKeyFrame>
								</ObjectAnimationUsingKeyFrames>
							  </Storyboard>
							</VisualState>
						  </VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<Border x:Name="ContentPresenterBorder" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="3" >
							<Grid x:Name="gridLayout" ShowGridLines="False">
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="*" />
									<ColumnDefinition Width="22" />
								</Grid.ColumnDefinitions>
								<Popup x:Name="Popup" Grid.ColumnSpan="2" VerticalAlignment="Bottom" IsOpen="False">
								  <Grid Background="{TemplateBinding BorderBrush}">
									<Grid.RowDefinitions>
									  <RowDefinition Height="Auto" />
									  <RowDefinition Height="*" />
									  <RowDefinition Height="Auto" />
									</Grid.RowDefinitions>
									<Border x:Name="RootPopupElement" Grid.Row="1" Height="Auto" MinHeight="{TemplateBinding MinDropDownHeight}" MaxHeight="{TemplateBinding MaxDropDownHeight}" MaxWidth="{TemplateBinding MaxDropDownWidth}" HorizontalAlignment="Stretch" VerticalAlignment="Top" Background="{StaticResource PopupBackgroundBrush}" BorderBrush="{StaticResource PopupBorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
									  <Grid>
										<Grid.ColumnDefinitions>
										  <ColumnDefinition Width="*" />
										  <ColumnDefinition Width="Auto" />
										</Grid.ColumnDefinitions>
										<Grid.RowDefinitions>
										  <RowDefinition Height="*" />
										  <RowDefinition Height="Auto" />
										</Grid.RowDefinitions>
										<igPrim:ItemsPanel x:Name="ItemsPanel" VerticalAlignment="Top"/>
										<ScrollBar x:Name="VerticalScrollBar" Width="20" Grid.Column="1" Grid.Row="0" Style="{StaticResource ScrollbarStyle}" />
										<ScrollBar x:Name="HorizontalScrollBar" Height="20" Grid.Column="0" Grid.Row="1" Style="{StaticResource ScrollbarStyle}" />
									  </Grid>
									</Border>
									<igPrim:PopupResizer x:Name="Resizer" Popup="{Binding ElementName=Popup}" Visibility="{Binding Path=AllowDropDownResizing, Converter={StaticResource boolToVisibility}, RelativeSource={RelativeSource TemplatedParent}}" Grid.Row="2" Grid.ColumnSpan="2" ResizeElement="{Binding ElementName=RootPopupElement}" BorderBrush="{StaticResource PopupResizerBorderBrush}">
									  <igPrim:PopupResizer.RenderTransform>
										<TransformGroup>
										  <ScaleTransform />
										  <SkewTransform />
										  <RotateTransform />
										  <TranslateTransform />
										</TransformGroup>
									  </igPrim:PopupResizer.RenderTransform>
									</igPrim:PopupResizer>
								  </Grid>
								</Popup>
								<Rectangle Fill="{StaticResource ComboBoxInnerShadowBackgroundBrush}" Opacity="0.65" IsHitTestVisible="False" Height="22" VerticalAlignment="Top" RadiusY="3" RadiusX="3" Grid.ColumnSpan="2" StrokeThickness="0" Stroke="{StaticResource TransparentBrush}" />
								<ToggleButton x:Name="ToggleButton" Margin="-1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" HorizontalContentAlignment="Right" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" IsTabStop="False" Style="{StaticResource ComboToggleStyle}" Grid.ColumnSpan="2" />
                                <TextBlock x:Name="WaterMark" Style="{StaticResource TextBlockStyle}" HorizontalAlignment="Stretch" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" IsHitTestVisible="False" Padding="6,1,2,2" Visibility="Collapsed" Text="{TemplateBinding EmptyText}" />
								<igPrim:SpecializedTextBox x:Name="TextBoxPresenter" HorizontalAlignment="Stretch" Margin="-2,0,0,0" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" Background="{StaticResource TransparentBrush}" BorderThickness="0" Padding="{TemplateBinding Padding}" Visibility="Collapsed" Foreground="{StaticResource ThemeForegroundBrush}" IsTabStop="{TemplateBinding IsTabStop}" SelectionBrush="{StaticResource TextBoxFocusedBrush}" />
                                <ContentControl x:Name="contentControl" Foreground="{TemplateBinding Foreground}" HorizontalAlignment="Stretch" VerticalAlignment="Center" Margin="{TemplateBinding Padding}" >
                                    <Grid>
                                        <StackPanel x:Name="MultiSelectContentPanel" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Orientation="Horizontal" />
                                    </Grid>
								</ContentControl>                               
                                <Rectangle x:Name="DisabledVisualElement" Margin="-1" Grid.ColumnSpan="2" Fill="{StaticResource ThemeLightForegroundBrush}" IsHitTestVisible="false" Opacity="0" RadiusX="3" RadiusY="3" />
                                <Border x:Name="ValidationErrorElement" Margin="-1" Grid.ColumnSpan="2" BorderBrush="#FFDB000C" BorderThickness="1" CornerRadius="3" Visibility="Collapsed">
									<ToolTipService.ToolTip>
										<ToolTip x:Name="validationTooltip" DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}" Placement="Right" PlacementTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}" Template="{StaticResource ValidationToolTipTemplate}"/>
									</ToolTipService.ToolTip>
									<Grid Background="Transparent" HorizontalAlignment="Right" Height="12" Margin="1,-4,-4,0" VerticalAlignment="Top" Width="12">
										<Path Data="M 1,0 L6,0 A 2,2 90 0 1 8,2 L8,7 z" Fill="#FFDC000C" Margin="1,3,0,0"/>
										<Path Data="M 0,0 L2,0 L 8,6 L8,8" Fill="#ffffff" Margin="1,3,0,0"/>
									</Grid>
								</Border>	
							</Grid>
						</Border>
					</Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="IsEditableResolved" Value="True">
              <Setter TargetName="TextBoxPresenter" Property="Visibility" Value="Visible" />
              <Setter TargetName="MultiSelectContentPanel" Property="Visibility" Value="Collapsed" />
              <Setter TargetName="ToggleButton" Property="Grid.Column" Value="1" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style TargetType="ig:XamComboEditor" BasedOn="{StaticResource igXamComboEditorStyle}" />
</ResourceDictionary>