<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:igBase="http://schemas.infragistics.com/xaml"
                    xmlns:ig="http://schemas.infragistics.com/xaml"
                    xmlns:igPrim="http://schemas.infragistics.com/xaml/primitives"
                    xmlns:System="clr-namespace:System;assembly=mscorlib"
                    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    mc:Ignorable="d">

  <!-- *********************************  RESOURCES  ********************************* -->
  <ResourceDictionary.MergedDictionaries> 
    <ResourceDictionary Source="Office2010Blue.Styles.xaml" />
  </ResourceDictionary.MergedDictionaries>

  <!-- ********************************** BRUSHES ********************************** -->
  <!--  XamGrid Brushes -->
  <SolidColorBrush x:Key="XamGridBackgroundBrush" Color="{StaticResource Color_005}" />
  <SolidColorBrush x:Key="XamGridBorderBrush" Color="{StaticResource Color_027}" />

  <SolidColorBrush x:Key="FixedRowSeparatorBackgroundBrush" Color="{StaticResource Color_027}" />

  <LinearGradientBrush x:Key="DefaultDeferredScrollingTemplateBackgroundBrush" EndPoint="0.5,1" StartPoint="0.5,0" Opacity="0.9">
    <GradientStop Color="{StaticResource Color_030}" Offset="1" />
    <GradientStop Color="{StaticResource Color_005}" />
  </LinearGradientBrush>
  <SolidColorBrush x:Key="DefaultDeferredScrollingTemplateBorderBrush" Color="{StaticResource Color_027}" Opacity="0.9" />

  <SolidColorBrush x:Key="XamGridReadOnlyBackgroundBrush" Color="{StaticResource Color_039}" />
  <SolidColorBrush x:Key="HyperlinkForegroundBrush" Color="{StaticResource Color_026}" />
  <SolidColorBrush x:Key="SeparatorBrush" Color="{StaticResource Color_028}" />

  <SolidColorBrush x:Key="GlyphInnerBackgroundBrush" Color="{StaticResource Color_030}" />

  <!--  ColumnChooserDialogButton Brushes -->
  <SolidColorBrush x:Key="ColumnChooserDialogButtonBackgroundBrush" Color="{StaticResource Color_033}" />
  <SolidColorBrush x:Key="ColumnChooserDialogButtonBorderBrush" Color="{StaticResource Color_033}" />

  <!--  ColumnChooserDialogCloseButton Brushes -->
  <SolidColorBrush x:Key="DialogCloseButtonBackgroundBrush" Color="{StaticResource Color_033}" />
  <SolidColorBrush x:Key="DialogCloseButtonBorderBrush" Color="{StaticResource Color_033}" />

  <LinearGradientBrush x:Key="DialogCloseButtonHoverBackgroundBrush" StartPoint="0.5,0" EndPoint="0.5,1">
    <GradientStop Offset="0" Color="{StaticResource Color_011}" />
    <GradientStop Offset="1" Color="{StaticResource Color_010}" />
  </LinearGradientBrush>
  <SolidColorBrush x:Key="DialogCloseButtonHoverBorderBrush" Color="{StaticResource Color_008}" />
  <LinearGradientBrush x:Key="DialogCloseButtoneffectBrush" EndPoint="0.5,1" StartPoint="0.5,0">
    <GradientStop Color="{StaticResource Color_034}" Offset="0" />
    <GradientStop Color="{StaticResource Color_035}" Offset="0.5" />
  </LinearGradientBrush>

  <LinearGradientBrush x:Key="DialogCloseButtonPressedBackgroundBrush" StartPoint="0.5,0" EndPoint="0.5,1">
    <GradientStop Offset="0" Color="{StaticResource Color_009}" />
    <GradientStop Offset="0.15" Color="{StaticResource Color_011}" />
    <GradientStop Offset="0.85" Color="{StaticResource Color_011}" />
    <GradientStop Offset="1" Color="{StaticResource Color_009}" />
  </LinearGradientBrush>
  <SolidColorBrush x:Key="DialogCloseButtonPressedBorderBrush" Color="{StaticResource Color_008}" />
  <LinearGradientBrush x:Key="DialogCloseButtonPressedInnerBackgroundBrush" StartPoint="0,0" EndPoint="1,0">
    <GradientStop Offset="0" Color="{StaticResource Color_010}" />
    <GradientStop Offset="0.15" Color="{StaticResource Color_039}" />
    <GradientStop Offset="0.85" Color="{StaticResource Color_039}" />
    <GradientStop Offset="1" Color="{StaticResource Color_010}" />
  </LinearGradientBrush>

  <!--  ColumnChooserDialog Brushes -->
  <LinearGradientBrush x:Key="ColumnChooserDialogBackgroundBrush" StartPoint="0,0" EndPoint="0,1">
    <GradientStop Offset="0" Color="{StaticResource Color_029}" />
    <GradientStop Offset="1" Color="{StaticResource Color_028}" />
  </LinearGradientBrush>
  <SolidColorBrush x:Key="ColumnChooserDialogBorderBrush" Color="{StaticResource Color_027}" />
  <SolidColorBrush x:Key="ColumnChooserDialogLabelsBackground" Color="{StaticResource Color_032}" />

  <SolidColorBrush x:Key="ColumnChooserIconBackgroundBrush" Color="{StaticResource Color_027}" />
  <SolidColorBrush x:Key="ColumnChooserIconBorderBrush" Color="{StaticResource Color_030}" />
  <SolidColorBrush x:Key="ColumnChooserIconGlyphBrush" Color="{StaticResource Color_025}" />

  <!--  HeaderCell Brushes -->
  <SolidColorBrush x:Key="HeaderCellBackgroundBrush" Color="{StaticResource Color_031}" />
  <SolidColorBrush x:Key="HeaderCellBorderBrush" Color="{StaticResource Color_027}" />

  <LinearGradientBrush x:Key="HeaderCellHoverBackgroundBrush" StartPoint="0,0" EndPoint="0,1">
    <GradientStop Offset="0" Color="{StaticResource Color_017}" />
    <GradientStop Offset="1" Color="{StaticResource Color_019}" />
  </LinearGradientBrush>
  <SolidColorBrush x:Key="HeaderCellHoverBorderBrush" Color="{StaticResource Color_014}" />

  <SolidColorBrush x:Key="HeaderCellMovingBackgroundBrush" Color="{StaticResource Color_031}" Opacity="0.75" />
  <SolidColorBrush x:Key="HeaderCellMovingBorderBrush" Color="{StaticResource Color_028}" Opacity="0.85" />

  <SolidColorBrush x:Key="HeaderCellForegroundBrush" Color="{StaticResource Color_024}" />

  <!--  ExpansionCell Brushes -->
  <SolidColorBrush x:Key="ExpansionCellBackgroundBrush" Color="{StaticResource Color_031}" />
  <SolidColorBrush x:Key="ExpansionCellBorderBrush" Color="{StaticResource Color_027}" />

  <SolidColorBrush x:Key="ExpansionCellHoverBackgroundBrush" Color="{StaticResource Color_017}" />
  <SolidColorBrush x:Key="ExpansionCellHoverBorderBrush" Color="{StaticResource Color_014}" />

  <SolidColorBrush x:Key="ExpansionIndicatorForegroundBrush" Color="{StaticResource Color_025}" />

  <!--  AddNewRow Brushes -->
  <SolidColorBrush x:Key="AddNewRowSelectorCellBackgroundBrush" Color="{StaticResource Color_005}" />
  <SolidColorBrush x:Key="AddNewRowSelectorCellBorderBrush" Color="{StaticResource Color_004}" />

  <SolidColorBrush x:Key="AddNewRowCellBackgroundBrush" Color="{StaticResource Color_005}" />
  <SolidColorBrush x:Key="AddNewRowCellBorderBrush" Color="{StaticResource Color_004}" />

  <!--  RowSelectorCell Brushes -->
  <SolidColorBrush x:Key="RowSelectorCellHoverBackgroundBrush" Color="{StaticResource Color_017}" />
  <SolidColorBrush x:Key="RowSelectorCellHoverBorderBrush" Color="{StaticResource Color_014}" />

  <SolidColorBrush x:Key="RowSelectorCellActiveBackgroundBrush" Color="{StaticResource Color_031}" />
  <SolidColorBrush x:Key="RowSelectorCellActiveBorderBrush" Color="{StaticResource Color_026}" />

  <!--  Cell Brushes -->
  <SolidColorBrush x:Key="CellItemBackgroundBrush" Color="{StaticResource Color_005}" />
  <SolidColorBrush x:Key="CellItemBorderBrush" Color="{StaticResource Color_004}" />
  <SolidColorBrush x:Key="CellItemInnerBorderBrush" Color="{StaticResource Color_033}" />
  <SolidColorBrush x:Key="CellItemAltBackgroundBrush" Color="{StaticResource Color_032}" />

  <SolidColorBrush x:Key="CellItemHoverBackgroundBrush" Color="{StaticResource Color_033}" />

  <SolidColorBrush x:Key="CellItemSelectedBackgroundBrush" Color="{StaticResource Color_029}" />
  <SolidColorBrush x:Key="CellItemSelectedBorderBrush" Color="{StaticResource Color_033}" />

  <SolidColorBrush x:Key="CellItemActiveBackgroundBrush" Color="{StaticResource Color_005}" />
  <SolidColorBrush x:Key="CellItemActiveBorderBrush" Color="{StaticResource Color_001}" />

  <SolidColorBrush x:Key="CellItemForegroundBrush" Color="{StaticResource Color_001}" />
  <SolidColorBrush x:Key="CellItemHoverForegroundBrush" Color="{StaticResource Color_001}" />

  <!--  FilterRowSelectorCell Brushes -->
  <SolidColorBrush x:Key="FilterRowSelectorCellBackgroundBrush" Color="{StaticResource Color_005}" />
  <SolidColorBrush x:Key="FilterRowSelectorCellBorderBrush" Color="{StaticResource Color_004}" />

  <SolidColorBrush x:Key="FilterRowCellBackgroundBrush" Color="{StaticResource Color_005}" />
  <SolidColorBrush x:Key="FilterRowCellBorderBrush" Color="{StaticResource Color_004}" />

  <!--  SummaryRow Brushes -->
  <SolidColorBrush x:Key="SummaryRowSelectorCellBackgroundBrush" Color="{StaticResource Color_005}" />
  <SolidColorBrush x:Key="SummaryRowSelectorCellBorderBrush" Color="{StaticResource Color_004}" />

  <SolidColorBrush x:Key="SummaryRowCellBackgroundBrush" Color="{StaticResource Color_005}" />
  <SolidColorBrush x:Key="SummaryRowCellBorderBrush" Color="{StaticResource Color_004}" />

  <!--  FooterCell Brushes -->
  <SolidColorBrush x:Key="FooterCellBackgroundBrush" Color="{StaticResource Color_031}" />
  <SolidColorBrush x:Key="FooterCellBorderBrush" Color="{StaticResource Color_027}" />

  <SolidColorBrush x:Key="FooterCellForegroundBrush" Color="{StaticResource Color_024}" />

  <!--  PagerButton Brushes -->
  <SolidColorBrush x:Key="PagerButtonBackgroundBrush" Color="{StaticResource Color_033}" />
  <SolidColorBrush x:Key="PagerButtonBorderBrush" Color="{StaticResource Color_033}" />

  <LinearGradientBrush x:Key="PagerButtonHoverBackgroundBrush" StartPoint="0,0" EndPoint="0,1">
    <GradientStop Offset="0" Color="{StaticResource Color_018}" />
    <GradientStop Offset="0.23" Color="{StaticResource Color_017}" />
    <GradientStop Offset="0.75" Color="{StaticResource Color_017}" />
    <GradientStop Offset="1" Color="{StaticResource Color_019}" />
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="PagerButtonHoverBorderBrush" StartPoint="0.5,0" EndPoint="0.5,1">
    <GradientStop Offset="1" Color="{StaticResource Color_014}" />
    <GradientStop Color="{StaticResource Color_015}" Offset="0.05" />
  </LinearGradientBrush>

  <LinearGradientBrush x:Key="PagerButtonPressedBackgroundBrush" StartPoint="0,0" EndPoint="0,1">
    <GradientStop Offset="0" Color="{StaticResource Color_018}" />
    <GradientStop Offset="0.23" Color="{StaticResource Color_017}" />
    <GradientStop Offset="0.75" Color="{StaticResource Color_017}" />
    <GradientStop Offset="1" Color="{StaticResource Color_019}" />
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="PagerButtonPressedBorderBrush" StartPoint="0.5,0" EndPoint="0.5,1">
    <GradientStop Offset="1" Color="{StaticResource Color_014}" />
    <GradientStop Color="{StaticResource Color_015}" Offset="0.05" />
  </LinearGradientBrush>

  <!--  PagerItem Brushes -->
  <SolidColorBrush x:Key="PagerItemBackgroundBrush" Color="{StaticResource Color_033}" />

  <LinearGradientBrush x:Key="PagerItemHoverBackgroundBrush" StartPoint="0,0" EndPoint="0,1">
    <GradientStop Offset="0" Color="{StaticResource Color_018}" />
    <GradientStop Offset="0.23" Color="{StaticResource Color_017}" />
    <GradientStop Offset="0.75" Color="{StaticResource Color_017}" />
    <GradientStop Offset="1" Color="{StaticResource Color_019}" />
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="PagerItemHoverBorderBrush" StartPoint="0.5,0" EndPoint="0.5,1">
    <GradientStop Offset="1" Color="{StaticResource Color_014}" />
    <GradientStop Color="{StaticResource Color_015}" Offset="0.05" />
  </LinearGradientBrush>

  <LinearGradientBrush x:Key="PagerItemSelectedBackgroundBrush" StartPoint="0,0 " EndPoint="0,1 ">
    <GradientStop Offset="1" Color="{StaticResource Color_015}" />
    <GradientStop Color="{StaticResource Color_014}" />
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="PagerItemSelectedBorderBrush" StartPoint="0.5,0" EndPoint="0.5,1">
    <GradientStop Offset="0" Color="{StaticResource Color_012}" />
    <GradientStop Offset="1" Color="{StaticResource Color_013}" />
  </LinearGradientBrush>

  <!--  Pager Brushes -->
  <SolidColorBrush x:Key="PagerAreaBackgroundBrush" Color="{StaticResource Color_029}" />
  <SolidColorBrush x:Key="PagerAreaBorderBrush" Color="{StaticResource Color_027}" />

  <!--  Indicator Brushes -->
  <LinearGradientBrush x:Key="EditingIndicatorBackgroundBrush" StartPoint="0.666,-0.043" EndPoint="-0.066,0.949">
    <GradientStop Offset="0.751" Color="{StaticResource Color_026}" />
    <GradientStop Offset="0.754" Color="{StaticResource Color_029}" />
    <GradientStop Offset="0.896" Color="{StaticResource Color_029}" />
    <GradientStop Offset="0.896" Color="{StaticResource Color_026}" />
  </LinearGradientBrush>

  <SolidColorBrush x:Key="DropAreaIndicatorBackgroundBrush" Color="{StaticResource Color_035}" />
  <SolidColorBrush x:Key="MovingIndicatorBackgroundBrush" Color="{StaticResource Color_025}" />

  <LinearGradientBrush x:Key="HiddenColumnIndicatorBackgroundBrush" EndPoint="-2,17" StartPoint="-7,12" SpreadMethod="Repeat" MappingMode="Absolute">
    <GradientStop Color="{StaticResource Color_027}" Offset="0.499" />
    <GradientStop Color="{StaticResource Color_030}" Offset="0.500" />
  </LinearGradientBrush>

  <!--  GroupByArea ExpansionIndicator Brushes -->
  <LinearGradientBrush x:Key="GroupByAreaExpansionIndicatorBackgroundBrush" StartPoint="0,0" EndPoint="0,1">
    <GradientStop Offset="0" Color="{StaticResource Color_030}" />
    <GradientStop Offset="1" Color="{StaticResource Color_029}" />
  </LinearGradientBrush>
  <SolidColorBrush x:Key="GroupByAreaExpansionIndicatorBorderBrush" Color="{StaticResource Color_028}" />

  <LinearGradientBrush x:Key="GroupByAreaExpansionIndicatorHoverBackgroundBrush" StartPoint="0,0" EndPoint="0,1">
    <GradientStop Offset="0" Color="{StaticResource Color_018}" />
    <GradientStop Offset="0.23" Color="{StaticResource Color_017}" />
    <GradientStop Offset="0.75" Color="{StaticResource Color_017}" />
    <GradientStop Offset="1" Color="{StaticResource Color_019}" />
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="GroupByAreaExpansionIndicatorHoverBorderBrush" StartPoint="0.5,0" EndPoint="0.5,1">
    <GradientStop Offset="1" Color="{StaticResource Color_014}" />
    <GradientStop Color="{StaticResource Color_015}" Offset="0.05" />
  </LinearGradientBrush>

  <LinearGradientBrush x:Key="GroupByAreaExpansionIndicatorPressedBackgroundBrush" StartPoint="0.684,-0.039" EndPoint="0.684,0.977">
    <GradientStop Offset="1" Color="{StaticResource Color_017}" />
    <GradientStop Color="{StaticResource Color_016}" />
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="GroupByAreaExpansionIndicatorPressedBorderBrush" StartPoint="0.5,0" EndPoint="0.5,1">
    <GradientStop Offset="0" Color="{StaticResource Color_012}" />
    <GradientStop Offset="1" Color="{StaticResource Color_013}" />
  </LinearGradientBrush>

  <!--  GroupByAreaCell Brushes -->
  <SolidColorBrush x:Key="GroupByAreaCellBackgroundBrush" Color="{StaticResource Color_031}" />
  <SolidColorBrush x:Key="GroupByAreaCellBorderBrush" Color="{StaticResource Color_027}" />
  <SolidColorBrush x:Key="GroupByAreaCellDraggingBackgroundBrush" Color="{StaticResource Color_028}" Opacity="0.8" />

  <!--  GroupByHeader CloseButton Brushes -->
  <LinearGradientBrush x:Key="GroupByHeaderCloseButtonBackgroundBrush" StartPoint="0.5,0" EndPoint="0.5,1">
    <GradientStop Color="{StaticResource Color_030}" />
    <GradientStop Color="{StaticResource Color_028}" Offset="1" />
  </LinearGradientBrush>
  <SolidColorBrush x:Key="GroupByHeaderCloseButtonBorderBrush" Color="{StaticResource Color_027}" />

  <!--  GroupByHeaderCell Brushes -->
  <LinearGradientBrush x:Key="GroupByHeaderCellBackgroundBrush" StartPoint="0.5,0" EndPoint="0.5,1">
    <GradientStop Color="{StaticResource Color_032}" />
    <GradientStop Color="{StaticResource Color_029}" Offset="1" />
  </LinearGradientBrush>
  <SolidColorBrush x:Key="GroupByHeaderCellBorderBrush" Color="{StaticResource Color_026}" />

  <SolidColorBrush x:Key="CellConnectorBackgroundBrush" Color="{StaticResource Color_025}" />

  <!--  GroupByColumnLayoutHeaderCell Brushes -->
  <SolidColorBrush x:Key="GroupByColumnLayoutHeaderCellBackgroundBrush" Color="{StaticResource Color_026}" />
  <SolidColorBrush x:Key="GroupByColumnLayoutHeaderCellBorderBrush" Color="{StaticResource Color_026}" />

  <!--  GroupByCell Brushes -->
  <SolidColorBrush x:Key="GroupByCellBackgroundBrush" Color="{StaticResource Color_031}" />
  <SolidColorBrush x:Key="GroupByCellBorderBrush" Color="{StaticResource Color_027}" />
  <SolidColorBrush x:Key="GroupByCellForegroundBrush" Color="{StaticResource Color_024}" />

  <!--  FixedBorder Brushes -->
  <SolidColorBrush x:Key="FixedBorderBackgroundBrush" Color="{StaticResource Color_026}" />

  <!--  Menu Brushes -->
  <SolidColorBrush x:Key="FilterMenuBackgroundBrush" Color="{StaticResource Color_033}" />

  <LinearGradientBrush x:Key="MenuItemHoverBackgroundBrush" StartPoint="0,0" EndPoint="0,1">
    <GradientStop Offset="0" Color="{StaticResource Color_018}" />
    <GradientStop Offset="0.23" Color="{StaticResource Color_017}" />
    <GradientStop Offset="0.75" Color="{StaticResource Color_017}" />
    <GradientStop Offset="1" Color="{StaticResource Color_019}" />
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="MenuItemHoverBorderBrush" StartPoint="0.5,0" EndPoint="0.5,1">
    <GradientStop Offset="1" Color="{StaticResource Color_014}" />
    <GradientStop Color="{StaticResource Color_015}" Offset="0.05" />
  </LinearGradientBrush>

  <LinearGradientBrush x:Key="MenuItemHighlightedBackgroundBrush" StartPoint="0,0" EndPoint="0,1">
    <GradientStop Offset="0" Color="{StaticResource Color_018}" />
    <GradientStop Offset="0.23" Color="{StaticResource Color_017}" />
    <GradientStop Offset="0.75" Color="{StaticResource Color_017}" />
    <GradientStop Offset="1" Color="{StaticResource Color_019}" />
  </LinearGradientBrush>
  <SolidColorBrush x:Key="MenuItemHighlightedBorderBrush" Color="{StaticResource Color_015}" />

  <SolidColorBrush x:Key="MenuIconColumnBackgroundBrush" Color="{StaticResource Color_027}" />

  <!--  FilterSelectionItem Brushes -->
  <LinearGradientBrush x:Key="FilterSelectionItemBackgroundBrush" StartPoint="0.5,0" EndPoint="0.5,1">
    <GradientStop Offset="0" Color="{StaticResource Color_018}" />
    <GradientStop Offset="0.23" Color="{StaticResource Color_017}" />
    <GradientStop Offset="0.75" Color="{StaticResource Color_017}" />
    <GradientStop Offset="1" Color="{StaticResource Color_019}" />
  </LinearGradientBrush>
  <SolidColorBrush x:Key="FilterSelectionItemBorderBrush" Color="{StaticResource Color_014}" />

  <SolidColorBrush x:Key="FilterSelectionItemHighlightBorderBrush" Color="{StaticResource Color_019}" />

  <!--  FilterSelectionListBox Brushes -->
  <SolidColorBrush x:Key="FilterSelectionListBoxBackgroundBrush" Color="{StaticResource Color_005}" />
  <SolidColorBrush x:Key="FilterSelectionListBoxBorderBrush" Color="{StaticResource Color_027}" />

  <!--  Watermark Brushes -->
  <SolidColorBrush x:Key="WatermarkForegroundBrush" Color="{StaticResource Color_002}" />
  <SolidColorBrush x:Key="ItemsBoxWatermarkForegroundBrush" Color="{StaticResource Color_003}" />

  <!--  FilterControl Brushes -->
  <SolidColorBrush x:Key="FilterMenuBusyIndicatorBackgroundBrush" Color="{StaticResource Color_030}" />
  <SolidColorBrush x:Key="FilterMenuBusyIndicatorPathBackgroundBrush" Color="{StaticResource Color_025}" />

  <SolidColorBrush x:Key="FilterMenuNotAllItemsShowingForegroundBrush" Color="{StaticResource Color_025}" />

  <!--  DateFilterTreeViewItem Brushes -->
  <SolidColorBrush x:Key="DateFilterTreeViewItemBackgroundBrush" Color="{StaticResource Color_033}" />
  <SolidColorBrush x:Key="DateFilterTreeViewItemBorderBrush" Color="{StaticResource Color_033}" />

  <SolidColorBrush x:Key="DateFilterTreeViewItemHoverBackgroundBrush" Color="{StaticResource Color_030}" />
  <SolidColorBrush x:Key="DateFilterTreeViewItemHoverBorderBrush" Color="{StaticResource Color_027}" />

  <LinearGradientBrush x:Key="DateFilterTreeViewItemSelectedBackgroundBrush" StartPoint="0,0 " EndPoint="0,1 ">
    <GradientStop Offset="1" Color="{StaticResource Color_015}" />
    <GradientStop Color="{StaticResource Color_014}" />
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="DateFilterTreeViewItemSelectedBorderBrush" StartPoint="0.5,0" EndPoint="0.5,1">
    <GradientStop Offset="0" Color="{StaticResource Color_012}" />
    <GradientStop Offset="1" Color="{StaticResource Color_013}" />
  </LinearGradientBrush>

  <!--  ConditionalFormattingCell Brushes -->
  <SolidColorBrush x:Key="ConditionalFormattingCellPositiveBarBrush" Color="{StaticResource Color_022}" />
  <SolidColorBrush x:Key="ConditionalFormattingCellNegativeBarBrush" Color="{StaticResource Color_007}" />

  <!--  GridSortableListBoxItem Brushes -->
  <SolidColorBrush x:Key="GridSortableListBoxItemBackgroundBrush" Color="{StaticResource Color_033}" />
  <SolidColorBrush x:Key="GridSortableListBoxItemBorderBrush" Color="{StaticResource Color_004}" />
  <SolidColorBrush x:Key="DragHandleBackgroundBrush" Color="{StaticResource Color_033}" />
  <SolidColorBrush x:Key="DragHandleBorderBrush" Color="{StaticResource Color_027}" />
  <SolidColorBrush x:Key="DragHandleGlyphBrush" Color="{StaticResource Color_027}" />
  <SolidColorBrush x:Key="GridSortableListBoxItemDividerBackgroundBrush" Color="{StaticResource Color_036}" />

  <!--  GridSortableListBox Brushes -->
  <SolidColorBrush x:Key="GridSortableListBoxBackgroundBrush" Color="{StaticResource Color_005}" />
  <SolidColorBrush x:Key="GridSortableListBoxBorderBrush" Color="{StaticResource Color_027}" />

  <!--  GroupHeaderCell Brushes -->
  <SolidColorBrush x:Key="GroupHeaderCellBackgroundBrush" Color="{StaticResource Color_031}" />
  <SolidColorBrush x:Key="GroupHeaderCellBorderBrush" Color="{StaticResource Color_027}" />

  <!--  GroupFooterCell Brushes -->
  <SolidColorBrush x:Key="GroupFooterCellBackgroundBrush" Color="{StaticResource Color_031}" />
  <SolidColorBrush x:Key="GroupFooterCellBorderBrush" Color="{StaticResource Color_027}" />
  <SolidColorBrush x:Key="GroupFooterCellForegroundBrush" Color="{StaticResource Color_024}" />

  <!--  MergedContentControl Brushes -->
  <SolidColorBrush x:Key="MergedContentCellBackgroundBrush" Color="{StaticResource Color_032}" />
  <SolidColorBrush x:Key="MergedContentCellBorderBrush" Color="{StaticResource Color_033}" />
  <SolidColorBrush x:Key="MergedContentCellForegroundBrush" Color="{StaticResource Color_001}" />

  <!--  MergedSummaryCell Brushes -->
  <SolidColorBrush x:Key="MergedSummaryCellBackgroundBrush" Color="{StaticResource Color_005}" />
  <SolidColorBrush x:Key="MergedSummaryCellBorderBrush" Color="{StaticResource Color_004}" />

  <!--  CompoundFilterDialog Brushes -->
  <SolidColorBrush x:Key="CompoundFilterDialogBackgroundBrush" Color="{StaticResource Color_030}" />
  <LinearGradientBrush x:Key="CompoundFilterDialogBorderBrush" StartPoint="0,0" EndPoint="0,1">
    <GradientStop Offset="0" Color="{StaticResource Color_028}" />
    <GradientStop Offset="1" Color="{StaticResource Color_027}" />
  </LinearGradientBrush>
  <SolidColorBrush x:Key="CompoundFilterGlyphBackgroundBrush" Color="{StaticResource Color_025}" />

  <LinearGradientBrush x:Key="FilterDescriptionBackgroundBrush" EndPoint="0.5,1" StartPoint="0.5,0">
    <GradientStop Color="{StaticResource Color_031}" Offset="0" />
    <GradientStop Color="{StaticResource Color_032}" Offset="1" />
  </LinearGradientBrush>
  <SolidColorBrush x:Key="FilterGridBackgroundBrush" Color="{StaticResource Color_005}" />

  <SolidColorBrush x:Key="LogicalAndOperatorBackgroundBrush" Color="{StaticResource Color_021}" igPrim:XamlHelper.IsExcludedFromWash="True" />
  <SolidColorBrush x:Key="LogicalOrOperatorBackgroundBrush" Color="{StaticResource Color_026}" igPrim:XamlHelper.IsExcludedFromWash="True" />
  <SolidColorBrush x:Key="OperatorsItemBorderBrush" Color="{StaticResource Color_027}" />

  <!-- DatePicker Brushes -->
  <SolidColorBrush x:Key="DatePickerButtonBackgroundBrush" Color="{StaticResource Color_005}" />
  <SolidColorBrush x:Key="DatePickerButtonBorderBrush" Color="{StaticResource Color_027}" />
  <SolidColorBrush x:Key="DatePickerButtonHeaderBackgroundBrush" Color="{StaticResource Color_027}" />
  <LinearGradientBrush x:Key="DatePickerButtonPressedBackgroundBrush" StartPoint="0,0 " EndPoint="0,1 ">
    <GradientStop Offset="1" Color="{StaticResource Color_017}" />
    <GradientStop Color="{StaticResource Color_016}" />
  </LinearGradientBrush>
  <SolidColorBrush x:Key="DatePickerButtonHeaderBorderBrush" Color="{StaticResource Color_006}" />
  <SolidColorBrush x:Key="DatePickerGlyphBackgroundBrush" Color="{StaticResource Color_001}" />

  <SolidColorBrush x:Key="CalendarBackgroundBrush" Color="{StaticResource Color_005}" />
  <SolidColorBrush x:Key="CalendarBorderBrush" Color="{StaticResource Color_027}" />
  <SolidColorBrush x:Key="CalendarOtherMonthForegroundBrush" Color="{StaticResource Color_002}" />
  <LinearGradientBrush x:Key="CalendarItemPressedBackgroundBrush" StartPoint="0,0 " EndPoint="0,1 ">
    <GradientStop Offset="1" Color="{StaticResource Color_017}" />
    <GradientStop Color="{StaticResource Color_016}" />
  </LinearGradientBrush>
  <SolidColorBrush x:Key="CalendarItemSelectedFocusedBorderBrush" Color="{StaticResource Color_013}" />
  <LinearGradientBrush x:Key="CalendarItemSelectedBackgroundBrush" StartPoint="0,0 " EndPoint="0,1 ">
    <GradientStop Offset="1" Color="{StaticResource Color_017}" />
    <GradientStop Color="{StaticResource Color_016}" />
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="CalendarItemSelectedBorderBrush" StartPoint="0.5,0" EndPoint="0.5,1">
    <GradientStop Offset="0" Color="{StaticResource Color_012}" />
    <GradientStop Offset="1" Color="{StaticResource Color_013}" />
  </LinearGradientBrush>
  <SolidColorBrush x:Key="ScrollPreviousRepeatButtonBackgroundBrush" Color="{StaticResource Color_001}" />
  <SolidColorBrush x:Key="ScrollNextRepeatButtonBackgroundBrush" Color="{StaticResource Color_001}" />
  <SolidColorBrush x:Key="DisabledBorderBrush" Color="{StaticResource Color_030}" />

  <!-- ********************************** CalendarDayButton Style **********************************-->
  <Style TargetType="CalendarDayButton" x:Key="CalendarDayButtonStyle">
    <Setter Property="Background" Value="{StaticResource TransparentBrush}" />
    <Setter Property="HorizontalContentAlignment" Value="Center" />
    <Setter Property="VerticalContentAlignment" Value="Center" />
    <Setter Property="MinWidth" Value="5" />
    <Setter Property="MinHeight" Value="5" />
    <Setter Property="FontSize" Value="11" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="CalendarDayButton">
          <Grid>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup Name="CommonStates">
                <VisualState Name="Normal" />
                <VisualState Name="MouseOver" />
                <VisualState x:Name="Pressed">
                  <Storyboard>
                    <DoubleAnimation Storyboard.TargetName="Background" Storyboard.TargetProperty="Opacity" To="1" Duration="0" />
                  </Storyboard>
                </VisualState>
                <VisualState Name="Disabled">
                  <Storyboard>
                    <DoubleAnimation Storyboard.TargetName="NormalText" Storyboard.TargetProperty="Opacity" To=".35" Duration="0" />
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup Name="SelectionStates">
                <VisualState Name="Unselected" />
                <VisualState Name="Selected">
                  <Storyboard>
                    <DoubleAnimation Storyboard.TargetName="SelectedBackground" Storyboard.TargetProperty="Opacity" To="1" Duration="0" />
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup Name="CalendarButtonFocusStates">
                <VisualState Name="CalendarButtonFocused">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="DayButtonFocusVisual" Storyboard.TargetProperty="Visibility" Duration="0">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState Name="CalendarButtonUnfocused">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="DayButtonFocusVisual" Storyboard.TargetProperty="Visibility" Duration="0">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Collapsed</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup Name="ActiveStates">
                <VisualState Name="Active" />
                <VisualState Name="Inactive">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="NormalText" Storyboard.TargetProperty="(TextElement.Foreground)">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource CalendarOtherMonthForegroundBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup Name="DayStates">
                <VisualState Name="RegularDay" />
                <VisualState Name="Today">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(TextBlock.FontWeight)" Storyboard.TargetName="NormalText">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <FontWeight>Bold</FontWeight>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup Name="BlackoutDayStates">
                <VisualState Name="NormalDay" />
                <VisualState Name="BlackoutDay">
                  <Storyboard>
                    <DoubleAnimation Duration="0" Storyboard.TargetName="Blackout" Storyboard.TargetProperty="Opacity" To=".2" />
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Rectangle x:Name="TodayBackground" Opacity="0" />
            <Rectangle x:Name="HighlightBackground" Opacity="0" />
            <Rectangle x:Name="SelectedBackground" Opacity="0" Stroke="{StaticResource CalendarItemSelectedBorderBrush}" StrokeThickness="1" Fill="{StaticResource CalendarItemSelectedBackgroundBrush}" />
            <Border x:Name="Background" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" />
            <ContentPresenter x:Name="NormalText" TextElement.Foreground="{StaticResource ForegroundBrush}" TextElement.FontSize="{TemplateBinding FontSize}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="5,1,5,1" />
            <Path x:Name="Blackout" Opacity="0" Margin="3" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" RenderTransformOrigin="0.5,0.5" Fill="{StaticResource LightForegroundBrush}" Stretch="Fill" Data="M8.1772461,11.029181 L10.433105,11.029181 L11.700684,12.801641 L12.973633,11.029181 L15.191895,11.029181 L12.844727,13.999395 L15.21875,17.060919 L12.962891,17.060919 L11.673828,15.256231 L10.352539,17.060919 L8.1396484,17.060919 L10.519043,14.042364 z" />
            <Rectangle x:Name="DayButtonFocusVisual" Visibility="Collapsed" IsHitTestVisible="false" Stroke="{StaticResource CalendarItemSelectedFocusedBorderBrush}" StrokeThickness="1" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- ********************************** CalendarButton Style **********************************-->
  <Style TargetType="CalendarButton" x:Key="CalendarButtonStyle">
    <Setter Property="Background" Value="{StaticResource TransparentBrush}" />
    <Setter Property="HorizontalContentAlignment" Value="Center" />
    <Setter Property="VerticalContentAlignment" Value="Center" />
    <Setter Property="MinWidth" Value="46" />
    <Setter Property="MinHeight" Value="46" />
    <Setter Property="FontSize" Value="11" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="CalendarButton">
          <Grid>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup Name="CommonStates">
                <VisualState Name="Normal" />
                <VisualState Name="MouseOver" />
                <VisualState x:Name="Pressed">
                  <Storyboard>
                    <DoubleAnimation Storyboard.TargetName="Background" Storyboard.TargetProperty="Opacity" To="1" Duration="0" />
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup Name="SelectionStates">
                <VisualState Name="Unselected" />
                <VisualState Name="Selected">
                  <Storyboard>
                    <DoubleAnimation Storyboard.TargetName="SelectedBackground" Storyboard.TargetProperty="Opacity" To="1" Duration="0" />
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup Name="ActiveStates">
                <VisualState Name="Active" />
                <VisualState Name="Inactive">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="NormalText" Storyboard.TargetProperty="(TextElement.Foreground)">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource CalendarOtherMonthForegroundBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup Name="CalendarButtonFocusStates">
                <VisualState Name="CalendarButtonFocused">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="CalendarButtonFocusVisual">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="CalendarButtonUnfocused">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="CalendarButtonFocusVisual">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Collapsed</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Rectangle x:Name="MouseOverItem" Opacity="0" />
            <Rectangle x:Name="SelectedBackground" Opacity="0" Stroke="{StaticResource CalendarItemSelectedBorderBrush}" StrokeThickness="1" Fill="{StaticResource CalendarItemSelectedBackgroundBrush}" />
            <Rectangle x:Name="Background" Opacity="0" Stroke="{StaticResource CalendarItemSelectedBorderBrush}" StrokeThickness="1" Fill="{StaticResource CalendarItemSelectedBackgroundBrush}" />
            <ContentPresenter x:Name="NormalText" TextElement.Foreground="{StaticResource ForegroundBrush}" TextElement.FontSize="{TemplateBinding FontSize}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="5,1,5,1" />
            <Rectangle x:Name="CalendarButtonFocusVisual" Visibility="Collapsed" IsHitTestVisible="false" Stroke="{StaticResource CalendarItemSelectedFocusedBorderBrush}" StrokeThickness="1" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- ********************************** CalendarItem Style **********************************-->
  <Style x:Key="CalendarItemStyle" TargetType="{x:Type CalendarItem}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type CalendarItem}">
          <ControlTemplate.Resources>
            <DataTemplate x:Key="{x:Static CalendarItem.DayTitleTemplateResourceKey}">
              <TextBlock Text="{Binding}" FontWeight="Bold" Margin="0,4,0,4" HorizontalAlignment="Center" VerticalAlignment="Center" />
            </DataTemplate>

            <ControlTemplate x:Key="PreviousButtonTemplate" TargetType="{x:Type Button}">
              <Grid Cursor="Hand">
                <VisualStateManager.VisualStateGroups>
                  <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal" />
                    <VisualState x:Name="MouseOver">
                      <Storyboard>
                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="path" d:IsOptimized="True" />
                      </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Disabled">
                      <Storyboard>
                        <DoubleAnimation Storyboard.TargetName="path" Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Opacity)" To=".5" Duration="0" />
                      </Storyboard>
                    </VisualState>
                  </VisualStateGroup>
                </VisualStateManager.VisualStateGroups>
                <Grid Background="Transparent">
                  <Path x:Name="path" Opacity="0.9" Height="8" Stretch="Fill" Fill="{StaticResource ScrollPreviousRepeatButtonBackgroundBrush}" Data="M 6,10 C6,10 6,0 6,0 6,0 4,0 4,0 4,0 4,1 4,1 4,1 3,1 3,1 3,1 3,2 3,2 3,2 2,2 2,2 2,2 2,3 2,3 2,3 1,3 1,3 1,3 1,4 1,4 1,4 0,4 0,4 0,4 0,6 0,6 0,6 1,6 1,6 1,6 1,7 1,7 1,7 2,7 2,7 2,7 2,8 2,8 2,8 3,8 3,8 3,8 3,9 3,9 3,9 4,9 4,9 4,9 4,10 4,10 4,10 6,10 6,10 z" UseLayoutRounding="False" VerticalAlignment="Center" Width="4" HorizontalAlignment="Left" />
                </Grid>
              </Grid>
            </ControlTemplate>

            <ControlTemplate x:Key="NextButtonTemplate" TargetType="{x:Type Button}">
              <Grid Cursor="Hand">
                <VisualStateManager.VisualStateGroups>
                  <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal" />
                    <VisualState x:Name="MouseOver">
                      <Storyboard>
                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="path" d:IsOptimized="True" />
                      </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Disabled">
                      <Storyboard>
                        <DoubleAnimation Storyboard.TargetName="path" Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Opacity)" To=".5" Duration="0" />
                      </Storyboard>
                    </VisualState>
                  </VisualStateGroup>
                </VisualStateManager.VisualStateGroups>
                <Grid Background="Transparent">
                  <Path x:Name="path" Opacity="0.9" Width="4" Height="8" Stretch="Fill" Fill="{StaticResource ScrollNextRepeatButtonBackgroundBrush}" Data="M 0,10 C0,10 0,0 0,0 0,0 2,0 2,0 2,0 2,1 2,1 2,1 3,1 3,1 3,1 3,2 3,2 3,2 4,2 4,2 4,2 4,3 4,3 4,3 5,3 5,3 5,3 5,4 5,4 5,4 6,4 6,4 6,4 6,6 6,6 6,6 5,6 5,6 5,6 5,7 5,7 5,7 4,7 4,7 4,7 4,8 4,8 4,8 3,8 3,8 3,8 3,9 3,9 3,9 2,9 2,9 2,9 2,10 2,10 2,10 0,10 0,10 z" UseLayoutRounding="False" VerticalAlignment="Center" HorizontalAlignment="Right" />
                </Grid>
              </Grid>
            </ControlTemplate>

            <ControlTemplate x:Key="HeaderButtonTemplate" TargetType="{x:Type Button}">
              <Grid Cursor="Hand">
                <VisualStateManager.VisualStateGroups>
                  <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal" />
                    <VisualState x:Name="MouseOver">
                      <Storyboard>
                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="buttonContent" d:IsOptimized="True" />
                      </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Disabled">
                      <Storyboard>
                        <DoubleAnimation Storyboard.TargetName="buttonContent" Storyboard.TargetProperty="Opacity" To=".5" Duration="0" />
                      </Storyboard>
                    </VisualState>
                  </VisualStateGroup>
                </VisualStateManager.VisualStateGroups>
                <ContentControl x:Name="buttonContent" IsTabStop="False" Foreground="{StaticResource ForegroundBrush}" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Opacity="0.9" />
              </Grid>
            </ControlTemplate>
          </ControlTemplate.Resources>
          <Grid x:Name="PART_Root">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="Disabled">
                  <Storyboard>
                    <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_DisabledVisual" />
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
              <Border>
                <Grid>
                  <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                  </Grid.RowDefinitions>
                  <Grid Height="20" HorizontalAlignment="Stretch">
                    <Grid.ColumnDefinitions>
                      <ColumnDefinition Width="Auto" />
                      <ColumnDefinition Width="*" />
                      <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <Button x:Name="PART_PreviousButton" Height="15" Width="28" Margin="8,0,0,0" Template="{StaticResource PreviousButtonTemplate}" Focusable="False" HorizontalAlignment="Left" />
                    <Button x:Name="PART_HeaderButton" Grid.Column="1" FontSize="11" Focusable="False" HorizontalAlignment="Center" VerticalAlignment="Center" Template="{StaticResource HeaderButtonTemplate}" />
                    <Button x:Name="PART_NextButton" Grid.Column="2" Height="15" Width="28" Margin="0,0,8,0" Focusable="False" HorizontalAlignment="Right" Template="{StaticResource NextButtonTemplate}" />
                  </Grid>
                  <Grid x:Name="PART_MonthView" Visibility="Visible" Grid.Row="1" Margin="6,0,6,6">
                    <Grid.ColumnDefinitions>
                      <ColumnDefinition Width="Auto" />
                      <ColumnDefinition Width="Auto" />
                      <ColumnDefinition Width="Auto" />
                      <ColumnDefinition Width="Auto" />
                      <ColumnDefinition Width="Auto" />
                      <ColumnDefinition Width="Auto" />
                      <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                      <RowDefinition Height="Auto" />
                      <RowDefinition Height="Auto" />
                      <RowDefinition Height="Auto" />
                      <RowDefinition Height="Auto" />
                      <RowDefinition Height="Auto" />
                      <RowDefinition Height="Auto" />
                      <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                  </Grid>
                  <Grid x:Name="PART_YearView" Visibility="Collapsed" Grid.Row="1" Margin="6">
                    <Grid.ColumnDefinitions>
                      <ColumnDefinition Width="Auto" />
                      <ColumnDefinition Width="Auto" />
                      <ColumnDefinition Width="Auto" />
                      <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                      <RowDefinition Height="Auto" />
                      <RowDefinition Height="Auto" />
                      <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                  </Grid>
                </Grid>
              </Border>
            </Border>
            <Rectangle x:Name="PART_DisabledVisual" Fill="{StaticResource DisabledBackgroundBrush}" Opacity="0" Stretch="Fill" Stroke="{StaticResource DisabledBorderBrush}" StrokeThickness="1" Visibility="Collapsed" />
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="False">
              <Setter Property="Visibility" TargetName="PART_DisabledVisual" Value="Visible" />
            </Trigger>
            <DataTrigger Binding="{Binding DisplayMode, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Calendar}}}" Value="Year">
              <Setter Property="Visibility" TargetName="PART_MonthView" Value="Hidden" />
              <Setter Property="Visibility" TargetName="PART_YearView" Value="Visible" />
            </DataTrigger>
            <DataTrigger Binding="{Binding DisplayMode, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Calendar}}}" Value="Decade">
              <Setter Property="Visibility" TargetName="PART_MonthView" Value="Hidden" />
              <Setter Property="Visibility" TargetName="PART_YearView" Value="Visible" />
            </DataTrigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- ********************************** Calendar Style **********************************-->
  <Style x:Key="DatePickerCalendarStyle" TargetType="{x:Type Calendar}">
    <Setter Property="CalendarButtonStyle" Value="{StaticResource CalendarButtonStyle}" />
    <Setter Property="CalendarDayButtonStyle" Value="{StaticResource CalendarDayButtonStyle}" />
    <Setter Property="CalendarItemStyle" Value="{StaticResource CalendarItemStyle}" />
    <Setter Property="Background" Value="{StaticResource CalendarBackgroundBrush}" />
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="BorderBrush" Value="{StaticResource CalendarBorderBrush}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Calendar}">
          <StackPanel x:Name="PART_Root" HorizontalAlignment="Center">
            <CalendarItem x:Name="PART_CalendarItem" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Style="{TemplateBinding CalendarItemStyle}" />
          </StackPanel>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- ********************************** DatePickerDropDownButton Style **********************************-->
  <Style x:Key="DropDownButtonStyle" TargetType="Button">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Button}">
          <Grid FlowDirection="LeftToRight">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="MouseOver" />
                <VisualState x:Name="Pressed">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Background" Storyboard.TargetProperty="Background">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource DatePickerButtonPressedBackgroundBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Disabled">
                  <Storyboard>
                    <DoubleAnimationUsingKeyFrames BeginTime="0" Duration="00:00:00.001" Storyboard.TargetName="DisabledVisual" Storyboard.TargetProperty="(UIElement.Opacity)">
                      <SplineDoubleKeyFrame KeyTime="0" Value="1" />
                    </DoubleAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid Height="18" Width="19" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0">
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="20*" />
                <ColumnDefinition Width="20*" />
                <ColumnDefinition Width="20*" />
                <ColumnDefinition Width="20*" />
              </Grid.ColumnDefinitions>
              <Grid.RowDefinitions>
                <RowDefinition Height="23*" />
                <RowDefinition Height="19*" />
                <RowDefinition Height="19*" />
                <RowDefinition Height="19*" />
              </Grid.RowDefinitions>
              <Border x:Name="Background" Margin="0,-1,0,0" Grid.ColumnSpan="4" Grid.Row="1" Grid.RowSpan="3" BorderThickness="1" BorderBrush="{StaticResource DatePickerButtonBorderBrush}" Background="{StaticResource DatePickerButtonBackgroundBrush}" Opacity="1" />
              <Rectangle Grid.ColumnSpan="4" Grid.RowSpan="1" StrokeThickness="1" Fill="{StaticResource DatePickerButtonHeaderBackgroundBrush}" Stroke="{StaticResource DatePickerButtonHeaderBorderBrush}" />
              <Path x:Name="path" HorizontalAlignment="Center" Margin="4,3,4,3" VerticalAlignment="Center" RenderTransformOrigin="0.5,0.5" Grid.Column="0" Grid.Row="1" Fill="{StaticResource ForegroundBrush}" Stretch="Fill" Data="M11.426758,8.4305077 L11.749023,8.4305077 L11.749023,16.331387 L10.674805,16.331387 L10.674805,10.299648 L9.0742188,11.298672 L9.0742188,10.294277 C9.4788408,10.090176 9.9094238,9.8090878 10.365967,9.4510155 C10.82251,9.0929432 11.176106,8.7527733 11.426758,8.4305077 z M14.65086,8.4305077 L18.566387,8.4305077 L18.566387,9.3435936 L15.671368,9.3435936 L15.671368,11.255703 C15.936341,11.058764 16.27293,10.960293 16.681133,10.960293 C17.411602,10.960293 17.969301,11.178717 18.354229,11.615566 C18.739157,12.052416 18.931622,12.673672 18.931622,13.479336 C18.931622,15.452317 18.052553,16.438808 16.294415,16.438808 C15.560365,16.438808 14.951641,16.234707 14.468243,15.826504 L14.881817,14.929531 C15.368796,15.326992 15.837872,15.525723 16.289043,15.525723 C17.298809,15.525723 17.803692,14.895514 17.803692,13.635098 C17.803692,12.460618 17.305971,11.873379 16.310528,11.873379 C15.83071,11.873379 15.399232,12.079271 15.016094,12.491055 L14.65086,12.238613 z" Grid.ColumnSpan="4" Grid.RowSpan="3" />
              <Ellipse HorizontalAlignment="Center" VerticalAlignment="Center" Fill="{StaticResource LightForegroundBrush}" StrokeThickness="0" Grid.ColumnSpan="4" Width="3" Height="3" />
              <Border x:Name="DisabledVisual" Grid.ColumnSpan="4" Grid.Row="0" Grid.RowSpan="4" BorderThickness="1" BorderBrush="{StaticResource DisabledBorderBrush}" Opacity="0" />
            </Grid>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- ********************************** DatePicker Style **********************************-->
  <Style TargetType="{x:Type DatePicker}">
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="Padding" Value="8,2,8,0" />
    <Setter Property="MinHeight" Value="22" />
    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
    <Setter Property="VerticalContentAlignment" Value="Center" />
    <Setter Property="CalendarStyle" Value="{DynamicResource DatePickerCalendarStyle}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type DatePicker}">
          <Border>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="Disabled">
                  <Storyboard>
                    <DoubleAnimation Duration="0" To="0.6" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_DisabledVisual" />
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid x:Name="PART_Root" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
              </Grid.ColumnDefinitions>
              <Button x:Name="PART_Button" Grid.Column="1" Foreground="{TemplateBinding Foreground}" Focusable="False" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="2,0,2,0" Grid.Row="0" Style="{StaticResource DropDownButtonStyle}" />
              <DatePickerTextBox x:Name="PART_TextBox" Grid.Column="0" Focusable="{TemplateBinding Focusable}" HorizontalContentAlignment="Stretch" Grid.Row="0" VerticalContentAlignment="Stretch" Style="{StaticResource DatePickerTextBoxStyle}" />
              <Grid x:Name="PART_DisabledVisual" Grid.ColumnSpan="2" Grid.Column="0" IsHitTestVisible="False" Opacity="0" Grid.Row="0">
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="*" />
                  <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <Rectangle Grid.Column="0" Fill="{StaticResource DisabledBackgroundBrush}" Grid.Row="0" />
                <Rectangle Grid.Column="1" Fill="{StaticResource DisabledBackgroundBrush}" Height="18" Margin="2,0,2,0" Width="19" />
                <Popup x:Name="PART_Popup" AllowsTransparency="True" Placement="Bottom" PlacementTarget="{Binding ElementName=PART_TextBox}" StaysOpen="False" />
              </Grid>
            </Grid>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- ********************************** Hyperlink Style **********************************-->
  <Style TargetType="Hyperlink">
    <Setter Property="Foreground" Value="{StaticResource HyperlinkForegroundBrush}" />
    <Setter Property="TextBlock.TextDecorations" Value="{x:Null}" />
  </Style>

  <!-- ********************************** Converters **********************************-->
  <igPrim:CultureValueConverter x:Key="CultureConverter" />
  <igPrim:SummaryResultFormatStringValueConverter x:Key="SDFormatStringConverter" />
  <igPrim:VisibilityToBoolValueConverter x:Key="VisToBool" />

  <!-- *********************************  FixedRowSeparator Style  ********************************* -->
  <Style x:Key="FixedRowSeparatorStyle" TargetType="igPrim:FixedRowSeparator">
    <Setter Property="Background" Value="{StaticResource FixedRowSeparatorBackgroundBrush}" />
    <Setter Property="Height" Value="0" />
    <Setter Property="Margin" Value="0,-1,0,0" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igPrim:FixedRowSeparator">
          <Rectangle Fill="{TemplateBinding Background}" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="igPrim:FixedRowSeparator" BasedOn="{StaticResource FixedRowSeparatorStyle}" />

  <!-- *********************************  XamGrid Style  ********************************* -->
  <Style x:Key="XamGridStyle" TargetType="ig:XamGrid">
    <Setter Property="Background" Value="{StaticResource XamGridBackgroundBrush}" />
    <Setter Property="BorderBrush" Value="{StaticResource XamGridBorderBrush}" />
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="FixedRowSeparatorStyle" Value="{StaticResource FixedRowSeparatorStyle}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="ig:XamGrid">
          <Border x:Name="Root" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="ReadOnlyStates">
                <VisualState x:Name="Active">
                </VisualState>
                <VisualState x:Name="ReadOnly">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ReadOnlyBorder" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Border.Resources>
              <Style TargetType="TextBox" BasedOn="{StaticResource TextBoxStyle}" />
              <Style TargetType="ComboBox" BasedOn="{StaticResource ComboBoxStyle}" />
              <Style TargetType="CheckBox" BasedOn="{StaticResource CheckBoxStyle}" />
              <DataTemplate x:Key="DefaultDeferredScrollingTemplate">
                <Grid Margin="0,20,0,0">
                  <Border Background="{StaticResource DefaultDeferredScrollingTemplateBackgroundBrush}" BorderBrush="{StaticResource DefaultDeferredScrollingTemplateBorderBrush}" CornerRadius="2" BorderThickness="1" HorizontalAlignment="Right" VerticalAlignment="Top">
                    <TextBlock Foreground="{StaticResource ThemeForegroundBrush}" Text="{Binding FirstColumnValue, Converter={StaticResource CultureConverter}}" Margin="5" />
                  </Border>
                </Grid>
              </DataTemplate>
              <DataTemplate x:Key="DefaultGroupByDeferredScrollingTemplate">
                <Grid Margin="0,20,0,0">
                  <Border Background="{StaticResource DefaultDeferredScrollingTemplateBackgroundBrush}" BorderBrush="{StaticResource DefaultDeferredScrollingTemplateBorderBrush}" CornerRadius="2" BorderThickness="1" HorizontalAlignment="Right" VerticalAlignment="Top">
                    <TextBlock Foreground="{StaticResource ThemeForegroundBrush}" Text="{Binding Row.Data, Converter={StaticResource CultureConverter}}" Margin="5" />
                  </Border>
                </Grid>
              </DataTemplate>
              <!-- Filtering Icons -->
              <DataTemplate x:Key="TodayOperand">
                <Path Data="M8,5 L10.999999,5 L11.999999,5 L11.999999,6 L11.999999,7 L11.999999,7.9999995 L11.999999,9 L11.999999,10 L10.999999,10 L8,10 L8,9 L10.999999,9 L10.999999,7.9999995 L8.999999,7.9999995 L8.999999,7 L10.999999,7 L10.999999,6 L8,6 z M2.9999993,4.9999995 L6.999999,4.9999995 L7,7 L7,7.9999995 L6,7.9999995 L4,7.9999995 L4,9 L7,9 L7,10 L4,10 L3,10 L3,9 L3,7.9999995 L3,7 L4,7 L6,7 L6,5.9999995 L2.9999993,5.9999995 z M1.0000006,2.9999983 L1.0000006,12 L14.000001,12 L14.000001,2.9999983 z M9.0000019,1.0000007 L9.0000019,2.0000005 L10.000002,2.0000005 L10.000002,1.0000007 z M7.0000019,1.0000007 L7.0000019,2.0000005 L8.0000019,2.0000005 L8.0000019,1.0000007 z M5.0000019,1.0000007 L5.0000019,2.0000005 L6.0000019,2.0000005 L6.0000019,1.0000007 z M0,0 L15,0 L15,13 L0,13 z" Fill="{StaticResource GlyphBorderBrush}" Stretch="Fill" Width="12" Height="13" />
              </DataTemplate>

              <DataTemplate x:Key="DateAfterOperand">
                <Path Data="M8,5 L10.999999,5 L11.999999,5 L11.999999,6 L11.999999,7 L11.999999,7.9999995 L11.999999,9 L11.999999,10 L10.999999,10 L8,10 L8,9 L10.999999,9 L10.999999,7.9999995 L8.999999,7.9999995 L8.999999,7 L10.999999,7 L10.999999,6 L8,6 z M2.9999993,4.9999995 L6.999999,4.9999995 L7,7 L7,7.9999995 L6,7.9999995 L4,7.9999995 L4,9 L7,9 L7,10 L4,10 L3,10 L3,9 L3,7.9999995 L3,7 L4,7 L6,7 L6,5.9999995 L2.9999993,5.9999995 z M1.0000006,2.9999983 L1.0000006,12 L14.000001,12 L14.000001,2.9999983 z M9.0000019,1.0000007 L9.0000019,2.0000005 L10.000002,2.0000005 L10.000002,1.0000007 z M7.0000019,1.0000007 L7.0000019,2.0000005 L8.0000019,2.0000005 L8.0000019,1.0000007 z M5.0000019,1.0000007 L5.0000019,2.0000005 L6.0000019,2.0000005 L6.0000019,1.0000007 z M0,0 L15,0 L15,13 L0,13 z" Fill="{StaticResource GlyphBorderBrush}" Stretch="Fill" Width="12" Height="13" />
              </DataTemplate>

              <DataTemplate x:Key="DateBeforeOperand">
                <Path Data="M8,5 L10.999999,5 L11.999999,5 L11.999999,6 L11.999999,7 L11.999999,7.9999995 L11.999999,9 L11.999999,10 L10.999999,10 L8,10 L8,9 L10.999999,9 L10.999999,7.9999995 L8.999999,7.9999995 L8.999999,7 L10.999999,7 L10.999999,6 L8,6 z M2.9999993,4.9999995 L6.999999,4.9999995 L7,7 L7,7.9999995 L6,7.9999995 L4,7.9999995 L4,9 L7,9 L7,10 L4,10 L3,10 L3,9 L3,7.9999995 L3,7 L4,7 L6,7 L6,5.9999995 L2.9999993,5.9999995 z M1.0000006,2.9999983 L1.0000006,12 L14.000001,12 L14.000001,2.9999983 z M9.0000019,1.0000007 L9.0000019,2.0000005 L10.000002,2.0000005 L10.000002,1.0000007 z M7.0000019,1.0000007 L7.0000019,2.0000005 L8.0000019,2.0000005 L8.0000019,1.0000007 z M5.0000019,1.0000007 L5.0000019,2.0000005 L6.0000019,2.0000005 L6.0000019,1.0000007 z M0,0 L15,0 L15,13 L0,13 z" Fill="{StaticResource GlyphBorderBrush}" Stretch="Fill" Width="12" Height="13" />
              </DataTemplate>

              <DataTemplate x:Key="TomorrowOperand">
                <Path Data="M8,5 L10.999999,5 L11.999999,5 L11.999999,6 L11.999999,7 L11.999999,7.9999995 L11.999999,9 L11.999999,10 L10.999999,10 L8,10 L8,9 L10.999999,9 L10.999999,7.9999995 L8.999999,7.9999995 L8.999999,7 L10.999999,7 L10.999999,6 L8,6 z M2.9999993,4.9999995 L6.999999,4.9999995 L7,7 L7,7.9999995 L6,7.9999995 L4,7.9999995 L4,9 L7,9 L7,10 L4,10 L3,10 L3,9 L3,7.9999995 L3,7 L4,7 L6,7 L6,5.9999995 L2.9999993,5.9999995 z M1.0000006,2.9999983 L1.0000006,12 L14.000001,12 L14.000001,2.9999983 z M9.0000019,1.0000007 L9.0000019,2.0000005 L10.000002,2.0000005 L10.000002,1.0000007 z M7.0000019,1.0000007 L7.0000019,2.0000005 L8.0000019,2.0000005 L8.0000019,1.0000007 z M5.0000019,1.0000007 L5.0000019,2.0000005 L6.0000019,2.0000005 L6.0000019,1.0000007 z M0,0 L15,0 L15,13 L0,13 z" Fill="{StaticResource GlyphBorderBrush}" Stretch="Fill" Width="12" Height="13" />
              </DataTemplate>
              <DataTemplate x:Key="YesterdayOperand">
                <Path Data="M8,5 L10.999999,5 L11.999999,5 L11.999999,6 L11.999999,7 L11.999999,7.9999995 L11.999999,9 L11.999999,10 L10.999999,10 L8,10 L8,9 L10.999999,9 L10.999999,7.9999995 L8.999999,7.9999995 L8.999999,7 L10.999999,7 L10.999999,6 L8,6 z M2.9999993,4.9999995 L6.999999,4.9999995 L7,7 L7,7.9999995 L6,7.9999995 L4,7.9999995 L4,9 L7,9 L7,10 L4,10 L3,10 L3,9 L3,7.9999995 L3,7 L4,7 L6,7 L6,5.9999995 L2.9999993,5.9999995 z M1.0000006,2.9999983 L1.0000006,12 L14.000001,12 L14.000001,2.9999983 z M9.0000019,1.0000007 L9.0000019,2.0000005 L10.000002,2.0000005 L10.000002,1.0000007 z M7.0000019,1.0000007 L7.0000019,2.0000005 L8.0000019,2.0000005 L8.0000019,1.0000007 z M5.0000019,1.0000007 L5.0000019,2.0000005 L6.0000019,2.0000005 L6.0000019,1.0000007 z M0,0 L15,0 L15,13 L0,13 z" Fill="{StaticResource GlyphBorderBrush}" Stretch="Fill" Width="12" Height="13" />
              </DataTemplate>
              <DataTemplate x:Key="YearToDateOperand">
                <Path Data="M8,5 L10.999999,5 L11.999999,5 L11.999999,6 L11.999999,7 L11.999999,7.9999995 L11.999999,9 L11.999999,10 L10.999999,10 L8,10 L8,9 L10.999999,9 L10.999999,7.9999995 L8.999999,7.9999995 L8.999999,7 L10.999999,7 L10.999999,6 L8,6 z M2.9999993,4.9999995 L6.999999,4.9999995 L7,7 L7,7.9999995 L6,7.9999995 L4,7.9999995 L4,9 L7,9 L7,10 L4,10 L3,10 L3,9 L3,7.9999995 L3,7 L4,7 L6,7 L6,5.9999995 L2.9999993,5.9999995 z M1.0000006,2.9999983 L1.0000006,12 L14.000001,12 L14.000001,2.9999983 z M9.0000019,1.0000007 L9.0000019,2.0000005 L10.000002,2.0000005 L10.000002,1.0000007 z M7.0000019,1.0000007 L7.0000019,2.0000005 L8.0000019,2.0000005 L8.0000019,1.0000007 z M5.0000019,1.0000007 L5.0000019,2.0000005 L6.0000019,2.0000005 L6.0000019,1.0000007 z M0,0 L15,0 L15,13 L0,13 z" Fill="{StaticResource GlyphBorderBrush}" Stretch="Fill" Width="12" Height="13" />
              </DataTemplate>

              <DataTemplate x:Key="NextMonthOperand">
                <Path Data="M8,5 L10.999999,5 L11.999999,5 L11.999999,6 L11.999999,7 L11.999999,7.9999995 L11.999999,9 L11.999999,10 L10.999999,10 L8,10 L8,9 L10.999999,9 L10.999999,7.9999995 L8.999999,7.9999995 L8.999999,7 L10.999999,7 L10.999999,6 L8,6 z M2.9999993,4.9999995 L6.999999,4.9999995 L7,7 L7,7.9999995 L6,7.9999995 L4,7.9999995 L4,9 L7,9 L7,10 L4,10 L3,10 L3,9 L3,7.9999995 L3,7 L4,7 L6,7 L6,5.9999995 L2.9999993,5.9999995 z M1.0000006,2.9999983 L1.0000006,12 L14.000001,12 L14.000001,2.9999983 z M9.0000019,1.0000007 L9.0000019,2.0000005 L10.000002,2.0000005 L10.000002,1.0000007 z M7.0000019,1.0000007 L7.0000019,2.0000005 L8.0000019,2.0000005 L8.0000019,1.0000007 z M5.0000019,1.0000007 L5.0000019,2.0000005 L6.0000019,2.0000005 L6.0000019,1.0000007 z M0,0 L15,0 L15,13 L0,13 z" Fill="{StaticResource GlyphBorderBrush}" Stretch="Fill" Width="12" Height="13" />
              </DataTemplate>
              <DataTemplate x:Key="ThisMonthOperand">
                <Path Data="M8,5 L10.999999,5 L11.999999,5 L11.999999,6 L11.999999,7 L11.999999,7.9999995 L11.999999,9 L11.999999,10 L10.999999,10 L8,10 L8,9 L10.999999,9 L10.999999,7.9999995 L8.999999,7.9999995 L8.999999,7 L10.999999,7 L10.999999,6 L8,6 z M2.9999993,4.9999995 L6.999999,4.9999995 L7,7 L7,7.9999995 L6,7.9999995 L4,7.9999995 L4,9 L7,9 L7,10 L4,10 L3,10 L3,9 L3,7.9999995 L3,7 L4,7 L6,7 L6,5.9999995 L2.9999993,5.9999995 z M1.0000006,2.9999983 L1.0000006,12 L14.000001,12 L14.000001,2.9999983 z M9.0000019,1.0000007 L9.0000019,2.0000005 L10.000002,2.0000005 L10.000002,1.0000007 z M7.0000019,1.0000007 L7.0000019,2.0000005 L8.0000019,2.0000005 L8.0000019,1.0000007 z M5.0000019,1.0000007 L5.0000019,2.0000005 L6.0000019,2.0000005 L6.0000019,1.0000007 z M0,0 L15,0 L15,13 L0,13 z" Fill="{StaticResource GlyphBorderBrush}" Stretch="Fill" Width="12" Height="13" />
              </DataTemplate>
              <DataTemplate x:Key="LastMonthOperand">
                <Path Data="M8,5 L10.999999,5 L11.999999,5 L11.999999,6 L11.999999,7 L11.999999,7.9999995 L11.999999,9 L11.999999,10 L10.999999,10 L8,10 L8,9 L10.999999,9 L10.999999,7.9999995 L8.999999,7.9999995 L8.999999,7 L10.999999,7 L10.999999,6 L8,6 z M2.9999993,4.9999995 L6.999999,4.9999995 L7,7 L7,7.9999995 L6,7.9999995 L4,7.9999995 L4,9 L7,9 L7,10 L4,10 L3,10 L3,9 L3,7.9999995 L3,7 L4,7 L6,7 L6,5.9999995 L2.9999993,5.9999995 z M1.0000006,2.9999983 L1.0000006,12 L14.000001,12 L14.000001,2.9999983 z M9.0000019,1.0000007 L9.0000019,2.0000005 L10.000002,2.0000005 L10.000002,1.0000007 z M7.0000019,1.0000007 L7.0000019,2.0000005 L8.0000019,2.0000005 L8.0000019,1.0000007 z M5.0000019,1.0000007 L5.0000019,2.0000005 L6.0000019,2.0000005 L6.0000019,1.0000007 z M0,0 L15,0 L15,13 L0,13 z" Fill="{StaticResource GlyphBorderBrush}" Stretch="Fill" Width="12" Height="13" />
              </DataTemplate>

              <DataTemplate x:Key="NextWeekOperand">
                <Path Data="M8,5 L10.999999,5 L11.999999,5 L11.999999,6 L11.999999,7 L11.999999,7.9999995 L11.999999,9 L11.999999,10 L10.999999,10 L8,10 L8,9 L10.999999,9 L10.999999,7.9999995 L8.999999,7.9999995 L8.999999,7 L10.999999,7 L10.999999,6 L8,6 z M2.9999993,4.9999995 L6.999999,4.9999995 L7,7 L7,7.9999995 L6,7.9999995 L4,7.9999995 L4,9 L7,9 L7,10 L4,10 L3,10 L3,9 L3,7.9999995 L3,7 L4,7 L6,7 L6,5.9999995 L2.9999993,5.9999995 z M1.0000006,2.9999983 L1.0000006,12 L14.000001,12 L14.000001,2.9999983 z M9.0000019,1.0000007 L9.0000019,2.0000005 L10.000002,2.0000005 L10.000002,1.0000007 z M7.0000019,1.0000007 L7.0000019,2.0000005 L8.0000019,2.0000005 L8.0000019,1.0000007 z M5.0000019,1.0000007 L5.0000019,2.0000005 L6.0000019,2.0000005 L6.0000019,1.0000007 z M0,0 L15,0 L15,13 L0,13 z" Fill="{StaticResource GlyphBorderBrush}" Stretch="Fill" Width="12" Height="13" />
              </DataTemplate>
              <DataTemplate x:Key="ThisWeekOperand">
                <Path Data="M8,5 L10.999999,5 L11.999999,5 L11.999999,6 L11.999999,7 L11.999999,7.9999995 L11.999999,9 L11.999999,10 L10.999999,10 L8,10 L8,9 L10.999999,9 L10.999999,7.9999995 L8.999999,7.9999995 L8.999999,7 L10.999999,7 L10.999999,6 L8,6 z M2.9999993,4.9999995 L6.999999,4.9999995 L7,7 L7,7.9999995 L6,7.9999995 L4,7.9999995 L4,9 L7,9 L7,10 L4,10 L3,10 L3,9 L3,7.9999995 L3,7 L4,7 L6,7 L6,5.9999995 L2.9999993,5.9999995 z M1.0000006,2.9999983 L1.0000006,12 L14.000001,12 L14.000001,2.9999983 z M9.0000019,1.0000007 L9.0000019,2.0000005 L10.000002,2.0000005 L10.000002,1.0000007 z M7.0000019,1.0000007 L7.0000019,2.0000005 L8.0000019,2.0000005 L8.0000019,1.0000007 z M5.0000019,1.0000007 L5.0000019,2.0000005 L6.0000019,2.0000005 L6.0000019,1.0000007 z M0,0 L15,0 L15,13 L0,13 z" Fill="{StaticResource GlyphBorderBrush}" Stretch="Fill" Width="12" Height="13" />
              </DataTemplate>
              <DataTemplate x:Key="LastWeekOperand">
                <Path Data="M8,5 L10.999999,5 L11.999999,5 L11.999999,6 L11.999999,7 L11.999999,7.9999995 L11.999999,9 L11.999999,10 L10.999999,10 L8,10 L8,9 L10.999999,9 L10.999999,7.9999995 L8.999999,7.9999995 L8.999999,7 L10.999999,7 L10.999999,6 L8,6 z M2.9999993,4.9999995 L6.999999,4.9999995 L7,7 L7,7.9999995 L6,7.9999995 L4,7.9999995 L4,9 L7,9 L7,10 L4,10 L3,10 L3,9 L3,7.9999995 L3,7 L4,7 L6,7 L6,5.9999995 L2.9999993,5.9999995 z M1.0000006,2.9999983 L1.0000006,12 L14.000001,12 L14.000001,2.9999983 z M9.0000019,1.0000007 L9.0000019,2.0000005 L10.000002,2.0000005 L10.000002,1.0000007 z M7.0000019,1.0000007 L7.0000019,2.0000005 L8.0000019,2.0000005 L8.0000019,1.0000007 z M5.0000019,1.0000007 L5.0000019,2.0000005 L6.0000019,2.0000005 L6.0000019,1.0000007 z M0,0 L15,0 L15,13 L0,13 z" Fill="{StaticResource GlyphBorderBrush}" Stretch="Fill" Width="12" Height="13" />
              </DataTemplate>

              <DataTemplate x:Key="NextQuarterOperand">
                <Path Data="M8,5 L10.999999,5 L11.999999,5 L11.999999,6 L11.999999,7 L11.999999,7.9999995 L11.999999,9 L11.999999,10 L10.999999,10 L8,10 L8,9 L10.999999,9 L10.999999,7.9999995 L8.999999,7.9999995 L8.999999,7 L10.999999,7 L10.999999,6 L8,6 z M2.9999993,4.9999995 L6.999999,4.9999995 L7,7 L7,7.9999995 L6,7.9999995 L4,7.9999995 L4,9 L7,9 L7,10 L4,10 L3,10 L3,9 L3,7.9999995 L3,7 L4,7 L6,7 L6,5.9999995 L2.9999993,5.9999995 z M1.0000006,2.9999983 L1.0000006,12 L14.000001,12 L14.000001,2.9999983 z M9.0000019,1.0000007 L9.0000019,2.0000005 L10.000002,2.0000005 L10.000002,1.0000007 z M7.0000019,1.0000007 L7.0000019,2.0000005 L8.0000019,2.0000005 L8.0000019,1.0000007 z M5.0000019,1.0000007 L5.0000019,2.0000005 L6.0000019,2.0000005 L6.0000019,1.0000007 z M0,0 L15,0 L15,13 L0,13 z" Fill="{StaticResource GlyphBorderBrush}" Stretch="Fill" Width="12" Height="13" />
              </DataTemplate>
              <DataTemplate x:Key="ThisQuarterOperand">
                <Path Data="M8,5 L10.999999,5 L11.999999,5 L11.999999,6 L11.999999,7 L11.999999,7.9999995 L11.999999,9 L11.999999,10 L10.999999,10 L8,10 L8,9 L10.999999,9 L10.999999,7.9999995 L8.999999,7.9999995 L8.999999,7 L10.999999,7 L10.999999,6 L8,6 z M2.9999993,4.9999995 L6.999999,4.9999995 L7,7 L7,7.9999995 L6,7.9999995 L4,7.9999995 L4,9 L7,9 L7,10 L4,10 L3,10 L3,9 L3,7.9999995 L3,7 L4,7 L6,7 L6,5.9999995 L2.9999993,5.9999995 z M1.0000006,2.9999983 L1.0000006,12 L14.000001,12 L14.000001,2.9999983 z M9.0000019,1.0000007 L9.0000019,2.0000005 L10.000002,2.0000005 L10.000002,1.0000007 z M7.0000019,1.0000007 L7.0000019,2.0000005 L8.0000019,2.0000005 L8.0000019,1.0000007 z M5.0000019,1.0000007 L5.0000019,2.0000005 L6.0000019,2.0000005 L6.0000019,1.0000007 z M0,0 L15,0 L15,13 L0,13 z" Fill="{StaticResource GlyphBorderBrush}" Stretch="Fill" Width="12" Height="13" />
              </DataTemplate>
              <DataTemplate x:Key="LastQuarterOperand">
                <Path Data="M8,5 L10.999999,5 L11.999999,5 L11.999999,6 L11.999999,7 L11.999999,7.9999995 L11.999999,9 L11.999999,10 L10.999999,10 L8,10 L8,9 L10.999999,9 L10.999999,7.9999995 L8.999999,7.9999995 L8.999999,7 L10.999999,7 L10.999999,6 L8,6 z M2.9999993,4.9999995 L6.999999,4.9999995 L7,7 L7,7.9999995 L6,7.9999995 L4,7.9999995 L4,9 L7,9 L7,10 L4,10 L3,10 L3,9 L3,7.9999995 L3,7 L4,7 L6,7 L6,5.9999995 L2.9999993,5.9999995 z M1.0000006,2.9999983 L1.0000006,12 L14.000001,12 L14.000001,2.9999983 z M9.0000019,1.0000007 L9.0000019,2.0000005 L10.000002,2.0000005 L10.000002,1.0000007 z M7.0000019,1.0000007 L7.0000019,2.0000005 L8.0000019,2.0000005 L8.0000019,1.0000007 z M5.0000019,1.0000007 L5.0000019,2.0000005 L6.0000019,2.0000005 L6.0000019,1.0000007 z M0,0 L15,0 L15,13 L0,13 z" Fill="{StaticResource GlyphBorderBrush}" Stretch="Fill" Width="12" Height="13" />
              </DataTemplate>

              <DataTemplate x:Key="NextYearOperand">
                <Path Data="M8,5 L10.999999,5 L11.999999,5 L11.999999,6 L11.999999,7 L11.999999,7.9999995 L11.999999,9 L11.999999,10 L10.999999,10 L8,10 L8,9 L10.999999,9 L10.999999,7.9999995 L8.999999,7.9999995 L8.999999,7 L10.999999,7 L10.999999,6 L8,6 z M2.9999993,4.9999995 L6.999999,4.9999995 L7,7 L7,7.9999995 L6,7.9999995 L4,7.9999995 L4,9 L7,9 L7,10 L4,10 L3,10 L3,9 L3,7.9999995 L3,7 L4,7 L6,7 L6,5.9999995 L2.9999993,5.9999995 z M1.0000006,2.9999983 L1.0000006,12 L14.000001,12 L14.000001,2.9999983 z M9.0000019,1.0000007 L9.0000019,2.0000005 L10.000002,2.0000005 L10.000002,1.0000007 z M7.0000019,1.0000007 L7.0000019,2.0000005 L8.0000019,2.0000005 L8.0000019,1.0000007 z M5.0000019,1.0000007 L5.0000019,2.0000005 L6.0000019,2.0000005 L6.0000019,1.0000007 z M0,0 L15,0 L15,13 L0,13 z" Fill="{StaticResource GlyphBorderBrush}" Stretch="Fill" Width="12" Height="13" />
              </DataTemplate>
              <DataTemplate x:Key="ThisYearOperand">
                <Path Data="M8,5 L10.999999,5 L11.999999,5 L11.999999,6 L11.999999,7 L11.999999,7.9999995 L11.999999,9 L11.999999,10 L10.999999,10 L8,10 L8,9 L10.999999,9 L10.999999,7.9999995 L8.999999,7.9999995 L8.999999,7 L10.999999,7 L10.999999,6 L8,6 z M2.9999993,4.9999995 L6.999999,4.9999995 L7,7 L7,7.9999995 L6,7.9999995 L4,7.9999995 L4,9 L7,9 L7,10 L4,10 L3,10 L3,9 L3,7.9999995 L3,7 L4,7 L6,7 L6,5.9999995 L2.9999993,5.9999995 z M1.0000006,2.9999983 L1.0000006,12 L14.000001,12 L14.000001,2.9999983 z M9.0000019,1.0000007 L9.0000019,2.0000005 L10.000002,2.0000005 L10.000002,1.0000007 z M7.0000019,1.0000007 L7.0000019,2.0000005 L8.0000019,2.0000005 L8.0000019,1.0000007 z M5.0000019,1.0000007 L5.0000019,2.0000005 L6.0000019,2.0000005 L6.0000019,1.0000007 z M0,0 L15,0 L15,13 L0,13 z" Fill="{StaticResource GlyphBorderBrush}" Stretch="Fill" Width="12" Height="13" />
              </DataTemplate>
              <DataTemplate x:Key="LastYearOperand">
                <Path Data="M8,5 L10.999999,5 L11.999999,5 L11.999999,6 L11.999999,7 L11.999999,7.9999995 L11.999999,9 L11.999999,10 L10.999999,10 L8,10 L8,9 L10.999999,9 L10.999999,7.9999995 L8.999999,7.9999995 L8.999999,7 L10.999999,7 L10.999999,6 L8,6 z M2.9999993,4.9999995 L6.999999,4.9999995 L7,7 L7,7.9999995 L6,7.9999995 L4,7.9999995 L4,9 L7,9 L7,10 L4,10 L3,10 L3,9 L3,7.9999995 L3,7 L4,7 L6,7 L6,5.9999995 L2.9999993,5.9999995 z M1.0000006,2.9999983 L1.0000006,12 L14.000001,12 L14.000001,2.9999983 z M9.0000019,1.0000007 L9.0000019,2.0000005 L10.000002,2.0000005 L10.000002,1.0000007 z M7.0000019,1.0000007 L7.0000019,2.0000005 L8.0000019,2.0000005 L8.0000019,1.0000007 z M5.0000019,1.0000007 L5.0000019,2.0000005 L6.0000019,2.0000005 L6.0000019,1.0000007 z M0,0 L15,0 L15,13 L0,13 z" Fill="{StaticResource GlyphBorderBrush}" Stretch="Fill" Width="12" Height="13" />
              </DataTemplate>

              <DataTemplate x:Key="Quarter1Operand">
                <Path Data="M8,5 L10.999999,5 L11.999999,5 L11.999999,6 L11.999999,7 L11.999999,7.9999995 L11.999999,9 L11.999999,10 L10.999999,10 L8,10 L8,9 L10.999999,9 L10.999999,7.9999995 L8.999999,7.9999995 L8.999999,7 L10.999999,7 L10.999999,6 L8,6 z M2.9999993,4.9999995 L6.999999,4.9999995 L7,7 L7,7.9999995 L6,7.9999995 L4,7.9999995 L4,9 L7,9 L7,10 L4,10 L3,10 L3,9 L3,7.9999995 L3,7 L4,7 L6,7 L6,5.9999995 L2.9999993,5.9999995 z M1.0000006,2.9999983 L1.0000006,12 L14.000001,12 L14.000001,2.9999983 z M9.0000019,1.0000007 L9.0000019,2.0000005 L10.000002,2.0000005 L10.000002,1.0000007 z M7.0000019,1.0000007 L7.0000019,2.0000005 L8.0000019,2.0000005 L8.0000019,1.0000007 z M5.0000019,1.0000007 L5.0000019,2.0000005 L6.0000019,2.0000005 L6.0000019,1.0000007 z M0,0 L15,0 L15,13 L0,13 z" Fill="{StaticResource GlyphBorderBrush}" Stretch="Fill" Width="12" Height="13" />
              </DataTemplate>
              <DataTemplate x:Key="Quarter2Operand">
                <Path Data="M8,5 L10.999999,5 L11.999999,5 L11.999999,6 L11.999999,7 L11.999999,7.9999995 L11.999999,9 L11.999999,10 L10.999999,10 L8,10 L8,9 L10.999999,9 L10.999999,7.9999995 L8.999999,7.9999995 L8.999999,7 L10.999999,7 L10.999999,6 L8,6 z M2.9999993,4.9999995 L6.999999,4.9999995 L7,7 L7,7.9999995 L6,7.9999995 L4,7.9999995 L4,9 L7,9 L7,10 L4,10 L3,10 L3,9 L3,7.9999995 L3,7 L4,7 L6,7 L6,5.9999995 L2.9999993,5.9999995 z M1.0000006,2.9999983 L1.0000006,12 L14.000001,12 L14.000001,2.9999983 z M9.0000019,1.0000007 L9.0000019,2.0000005 L10.000002,2.0000005 L10.000002,1.0000007 z M7.0000019,1.0000007 L7.0000019,2.0000005 L8.0000019,2.0000005 L8.0000019,1.0000007 z M5.0000019,1.0000007 L5.0000019,2.0000005 L6.0000019,2.0000005 L6.0000019,1.0000007 z M0,0 L15,0 L15,13 L0,13 z" Fill="{StaticResource GlyphBorderBrush}" Stretch="Fill" Width="12" Height="13" />
              </DataTemplate>
              <DataTemplate x:Key="Quarter3Operand">
                <Path Data="M8,5 L10.999999,5 L11.999999,5 L11.999999,6 L11.999999,7 L11.999999,7.9999995 L11.999999,9 L11.999999,10 L10.999999,10 L8,10 L8,9 L10.999999,9 L10.999999,7.9999995 L8.999999,7.9999995 L8.999999,7 L10.999999,7 L10.999999,6 L8,6 z M2.9999993,4.9999995 L6.999999,4.9999995 L7,7 L7,7.9999995 L6,7.9999995 L4,7.9999995 L4,9 L7,9 L7,10 L4,10 L3,10 L3,9 L3,7.9999995 L3,7 L4,7 L6,7 L6,5.9999995 L2.9999993,5.9999995 z M1.0000006,2.9999983 L1.0000006,12 L14.000001,12 L14.000001,2.9999983 z M9.0000019,1.0000007 L9.0000019,2.0000005 L10.000002,2.0000005 L10.000002,1.0000007 z M7.0000019,1.0000007 L7.0000019,2.0000005 L8.0000019,2.0000005 L8.0000019,1.0000007 z M5.0000019,1.0000007 L5.0000019,2.0000005 L6.0000019,2.0000005 L6.0000019,1.0000007 z M0,0 L15,0 L15,13 L0,13 z" Fill="{StaticResource GlyphBorderBrush}" Stretch="Fill" Width="12" Height="13" />
              </DataTemplate>
              <DataTemplate x:Key="Quarter4Operand">
                <Path Data="M8,5 L10.999999,5 L11.999999,5 L11.999999,6 L11.999999,7 L11.999999,7.9999995 L11.999999,9 L11.999999,10 L10.999999,10 L8,10 L8,9 L10.999999,9 L10.999999,7.9999995 L8.999999,7.9999995 L8.999999,7 L10.999999,7 L10.999999,6 L8,6 z M2.9999993,4.9999995 L6.999999,4.9999995 L7,7 L7,7.9999995 L6,7.9999995 L4,7.9999995 L4,9 L7,9 L7,10 L4,10 L3,10 L3,9 L3,7.9999995 L3,7 L4,7 L6,7 L6,5.9999995 L2.9999993,5.9999995 z M1.0000006,2.9999983 L1.0000006,12 L14.000001,12 L14.000001,2.9999983 z M9.0000019,1.0000007 L9.0000019,2.0000005 L10.000002,2.0000005 L10.000002,1.0000007 z M7.0000019,1.0000007 L7.0000019,2.0000005 L8.0000019,2.0000005 L8.0000019,1.0000007 z M5.0000019,1.0000007 L5.0000019,2.0000005 L6.0000019,2.0000005 L6.0000019,1.0000007 z M0,0 L15,0 L15,13 L0,13 z" Fill="{StaticResource GlyphBorderBrush}" Stretch="Fill" Width="12" Height="13" />
              </DataTemplate>

              <DataTemplate x:Key="JanuaryOperand">
                <Path Data="M8,5 L10.999999,5 L11.999999,5 L11.999999,6 L11.999999,7 L11.999999,7.9999995 L11.999999,9 L11.999999,10 L10.999999,10 L8,10 L8,9 L10.999999,9 L10.999999,7.9999995 L8.999999,7.9999995 L8.999999,7 L10.999999,7 L10.999999,6 L8,6 z M2.9999993,4.9999995 L6.999999,4.9999995 L7,7 L7,7.9999995 L6,7.9999995 L4,7.9999995 L4,9 L7,9 L7,10 L4,10 L3,10 L3,9 L3,7.9999995 L3,7 L4,7 L6,7 L6,5.9999995 L2.9999993,5.9999995 z M1.0000006,2.9999983 L1.0000006,12 L14.000001,12 L14.000001,2.9999983 z M9.0000019,1.0000007 L9.0000019,2.0000005 L10.000002,2.0000005 L10.000002,1.0000007 z M7.0000019,1.0000007 L7.0000019,2.0000005 L8.0000019,2.0000005 L8.0000019,1.0000007 z M5.0000019,1.0000007 L5.0000019,2.0000005 L6.0000019,2.0000005 L6.0000019,1.0000007 z M0,0 L15,0 L15,13 L0,13 z" Fill="{StaticResource GlyphBorderBrush}" Stretch="Fill" Width="12" Height="13" />
              </DataTemplate>
              <DataTemplate x:Key="FebruaryOperand">
                <Path Data="M8,5 L10.999999,5 L11.999999,5 L11.999999,6 L11.999999,7 L11.999999,7.9999995 L11.999999,9 L11.999999,10 L10.999999,10 L8,10 L8,9 L10.999999,9 L10.999999,7.9999995 L8.999999,7.9999995 L8.999999,7 L10.999999,7 L10.999999,6 L8,6 z M2.9999993,4.9999995 L6.999999,4.9999995 L7,7 L7,7.9999995 L6,7.9999995 L4,7.9999995 L4,9 L7,9 L7,10 L4,10 L3,10 L3,9 L3,7.9999995 L3,7 L4,7 L6,7 L6,5.9999995 L2.9999993,5.9999995 z M1.0000006,2.9999983 L1.0000006,12 L14.000001,12 L14.000001,2.9999983 z M9.0000019,1.0000007 L9.0000019,2.0000005 L10.000002,2.0000005 L10.000002,1.0000007 z M7.0000019,1.0000007 L7.0000019,2.0000005 L8.0000019,2.0000005 L8.0000019,1.0000007 z M5.0000019,1.0000007 L5.0000019,2.0000005 L6.0000019,2.0000005 L6.0000019,1.0000007 z M0,0 L15,0 L15,13 L0,13 z" Fill="{StaticResource GlyphBorderBrush}" Stretch="Fill" Width="12" Height="13" />
              </DataTemplate>
              <DataTemplate x:Key="MarchOperand">
                <Path Data="M8,5 L10.999999,5 L11.999999,5 L11.999999,6 L11.999999,7 L11.999999,7.9999995 L11.999999,9 L11.999999,10 L10.999999,10 L8,10 L8,9 L10.999999,9 L10.999999,7.9999995 L8.999999,7.9999995 L8.999999,7 L10.999999,7 L10.999999,6 L8,6 z M2.9999993,4.9999995 L6.999999,4.9999995 L7,7 L7,7.9999995 L6,7.9999995 L4,7.9999995 L4,9 L7,9 L7,10 L4,10 L3,10 L3,9 L3,7.9999995 L3,7 L4,7 L6,7 L6,5.9999995 L2.9999993,5.9999995 z M1.0000006,2.9999983 L1.0000006,12 L14.000001,12 L14.000001,2.9999983 z M9.0000019,1.0000007 L9.0000019,2.0000005 L10.000002,2.0000005 L10.000002,1.0000007 z M7.0000019,1.0000007 L7.0000019,2.0000005 L8.0000019,2.0000005 L8.0000019,1.0000007 z M5.0000019,1.0000007 L5.0000019,2.0000005 L6.0000019,2.0000005 L6.0000019,1.0000007 z M0,0 L15,0 L15,13 L0,13 z" Fill="{StaticResource GlyphBorderBrush}" Stretch="Fill" Width="12" Height="13" />
              </DataTemplate>
              <DataTemplate x:Key="AprilOperand">
                <Path Data="M8,5 L10.999999,5 L11.999999,5 L11.999999,6 L11.999999,7 L11.999999,7.9999995 L11.999999,9 L11.999999,10 L10.999999,10 L8,10 L8,9 L10.999999,9 L10.999999,7.9999995 L8.999999,7.9999995 L8.999999,7 L10.999999,7 L10.999999,6 L8,6 z M2.9999993,4.9999995 L6.999999,4.9999995 L7,7 L7,7.9999995 L6,7.9999995 L4,7.9999995 L4,9 L7,9 L7,10 L4,10 L3,10 L3,9 L3,7.9999995 L3,7 L4,7 L6,7 L6,5.9999995 L2.9999993,5.9999995 z M1.0000006,2.9999983 L1.0000006,12 L14.000001,12 L14.000001,2.9999983 z M9.0000019,1.0000007 L9.0000019,2.0000005 L10.000002,2.0000005 L10.000002,1.0000007 z M7.0000019,1.0000007 L7.0000019,2.0000005 L8.0000019,2.0000005 L8.0000019,1.0000007 z M5.0000019,1.0000007 L5.0000019,2.0000005 L6.0000019,2.0000005 L6.0000019,1.0000007 z M0,0 L15,0 L15,13 L0,13 z" Fill="{StaticResource GlyphBorderBrush}" Stretch="Fill" Width="12" Height="13" />
              </DataTemplate>
              <DataTemplate x:Key="MayOperand">
                <Path Data="M8,5 L10.999999,5 L11.999999,5 L11.999999,6 L11.999999,7 L11.999999,7.9999995 L11.999999,9 L11.999999,10 L10.999999,10 L8,10 L8,9 L10.999999,9 L10.999999,7.9999995 L8.999999,7.9999995 L8.999999,7 L10.999999,7 L10.999999,6 L8,6 z M2.9999993,4.9999995 L6.999999,4.9999995 L7,7 L7,7.9999995 L6,7.9999995 L4,7.9999995 L4,9 L7,9 L7,10 L4,10 L3,10 L3,9 L3,7.9999995 L3,7 L4,7 L6,7 L6,5.9999995 L2.9999993,5.9999995 z M1.0000006,2.9999983 L1.0000006,12 L14.000001,12 L14.000001,2.9999983 z M9.0000019,1.0000007 L9.0000019,2.0000005 L10.000002,2.0000005 L10.000002,1.0000007 z M7.0000019,1.0000007 L7.0000019,2.0000005 L8.0000019,2.0000005 L8.0000019,1.0000007 z M5.0000019,1.0000007 L5.0000019,2.0000005 L6.0000019,2.0000005 L6.0000019,1.0000007 z M0,0 L15,0 L15,13 L0,13 z" Fill="{StaticResource GlyphBorderBrush}" Stretch="Fill" Width="12" Height="13" />
              </DataTemplate>
              <DataTemplate x:Key="JuneOperand">
                <Path Data="M8,5 L10.999999,5 L11.999999,5 L11.999999,6 L11.999999,7 L11.999999,7.9999995 L11.999999,9 L11.999999,10 L10.999999,10 L8,10 L8,9 L10.999999,9 L10.999999,7.9999995 L8.999999,7.9999995 L8.999999,7 L10.999999,7 L10.999999,6 L8,6 z M2.9999993,4.9999995 L6.999999,4.9999995 L7,7 L7,7.9999995 L6,7.9999995 L4,7.9999995 L4,9 L7,9 L7,10 L4,10 L3,10 L3,9 L3,7.9999995 L3,7 L4,7 L6,7 L6,5.9999995 L2.9999993,5.9999995 z M1.0000006,2.9999983 L1.0000006,12 L14.000001,12 L14.000001,2.9999983 z M9.0000019,1.0000007 L9.0000019,2.0000005 L10.000002,2.0000005 L10.000002,1.0000007 z M7.0000019,1.0000007 L7.0000019,2.0000005 L8.0000019,2.0000005 L8.0000019,1.0000007 z M5.0000019,1.0000007 L5.0000019,2.0000005 L6.0000019,2.0000005 L6.0000019,1.0000007 z M0,0 L15,0 L15,13 L0,13 z" Fill="{StaticResource GlyphBorderBrush}" Stretch="Fill" Width="12" Height="13" />
              </DataTemplate>
              <DataTemplate x:Key="JulyOperand">
                <Path Data="M8,5 L10.999999,5 L11.999999,5 L11.999999,6 L11.999999,7 L11.999999,7.9999995 L11.999999,9 L11.999999,10 L10.999999,10 L8,10 L8,9 L10.999999,9 L10.999999,7.9999995 L8.999999,7.9999995 L8.999999,7 L10.999999,7 L10.999999,6 L8,6 z M2.9999993,4.9999995 L6.999999,4.9999995 L7,7 L7,7.9999995 L6,7.9999995 L4,7.9999995 L4,9 L7,9 L7,10 L4,10 L3,10 L3,9 L3,7.9999995 L3,7 L4,7 L6,7 L6,5.9999995 L2.9999993,5.9999995 z M1.0000006,2.9999983 L1.0000006,12 L14.000001,12 L14.000001,2.9999983 z M9.0000019,1.0000007 L9.0000019,2.0000005 L10.000002,2.0000005 L10.000002,1.0000007 z M7.0000019,1.0000007 L7.0000019,2.0000005 L8.0000019,2.0000005 L8.0000019,1.0000007 z M5.0000019,1.0000007 L5.0000019,2.0000005 L6.0000019,2.0000005 L6.0000019,1.0000007 z M0,0 L15,0 L15,13 L0,13 z" Fill="{StaticResource GlyphBorderBrush}" Stretch="Fill" Width="12" Height="13" />
              </DataTemplate>
              <DataTemplate x:Key="AugustOperand">
                <Path Data="M8,5 L10.999999,5 L11.999999,5 L11.999999,6 L11.999999,7 L11.999999,7.9999995 L11.999999,9 L11.999999,10 L10.999999,10 L8,10 L8,9 L10.999999,9 L10.999999,7.9999995 L8.999999,7.9999995 L8.999999,7 L10.999999,7 L10.999999,6 L8,6 z M2.9999993,4.9999995 L6.999999,4.9999995 L7,7 L7,7.9999995 L6,7.9999995 L4,7.9999995 L4,9 L7,9 L7,10 L4,10 L3,10 L3,9 L3,7.9999995 L3,7 L4,7 L6,7 L6,5.9999995 L2.9999993,5.9999995 z M1.0000006,2.9999983 L1.0000006,12 L14.000001,12 L14.000001,2.9999983 z M9.0000019,1.0000007 L9.0000019,2.0000005 L10.000002,2.0000005 L10.000002,1.0000007 z M7.0000019,1.0000007 L7.0000019,2.0000005 L8.0000019,2.0000005 L8.0000019,1.0000007 z M5.0000019,1.0000007 L5.0000019,2.0000005 L6.0000019,2.0000005 L6.0000019,1.0000007 z M0,0 L15,0 L15,13 L0,13 z" Fill="{StaticResource GlyphBorderBrush}" Stretch="Fill" Width="12" Height="13" />
              </DataTemplate>
              <DataTemplate x:Key="SeptemberOperand">
                <Path Data="M8,5 L10.999999,5 L11.999999,5 L11.999999,6 L11.999999,7 L11.999999,7.9999995 L11.999999,9 L11.999999,10 L10.999999,10 L8,10 L8,9 L10.999999,9 L10.999999,7.9999995 L8.999999,7.9999995 L8.999999,7 L10.999999,7 L10.999999,6 L8,6 z M2.9999993,4.9999995 L6.999999,4.9999995 L7,7 L7,7.9999995 L6,7.9999995 L4,7.9999995 L4,9 L7,9 L7,10 L4,10 L3,10 L3,9 L3,7.9999995 L3,7 L4,7 L6,7 L6,5.9999995 L2.9999993,5.9999995 z M1.0000006,2.9999983 L1.0000006,12 L14.000001,12 L14.000001,2.9999983 z M9.0000019,1.0000007 L9.0000019,2.0000005 L10.000002,2.0000005 L10.000002,1.0000007 z M7.0000019,1.0000007 L7.0000019,2.0000005 L8.0000019,2.0000005 L8.0000019,1.0000007 z M5.0000019,1.0000007 L5.0000019,2.0000005 L6.0000019,2.0000005 L6.0000019,1.0000007 z M0,0 L15,0 L15,13 L0,13 z" Fill="{StaticResource GlyphBorderBrush}" Stretch="Fill" Width="12" Height="13" />
              </DataTemplate>
              <DataTemplate x:Key="OctoberOperand">
                <Path Data="M8,5 L10.999999,5 L11.999999,5 L11.999999,6 L11.999999,7 L11.999999,7.9999995 L11.999999,9 L11.999999,10 L10.999999,10 L8,10 L8,9 L10.999999,9 L10.999999,7.9999995 L8.999999,7.9999995 L8.999999,7 L10.999999,7 L10.999999,6 L8,6 z M2.9999993,4.9999995 L6.999999,4.9999995 L7,7 L7,7.9999995 L6,7.9999995 L4,7.9999995 L4,9 L7,9 L7,10 L4,10 L3,10 L3,9 L3,7.9999995 L3,7 L4,7 L6,7 L6,5.9999995 L2.9999993,5.9999995 z M1.0000006,2.9999983 L1.0000006,12 L14.000001,12 L14.000001,2.9999983 z M9.0000019,1.0000007 L9.0000019,2.0000005 L10.000002,2.0000005 L10.000002,1.0000007 z M7.0000019,1.0000007 L7.0000019,2.0000005 L8.0000019,2.0000005 L8.0000019,1.0000007 z M5.0000019,1.0000007 L5.0000019,2.0000005 L6.0000019,2.0000005 L6.0000019,1.0000007 z M0,0 L15,0 L15,13 L0,13 z" Fill="{StaticResource GlyphBorderBrush}" Stretch="Fill" Width="12" Height="13" />
              </DataTemplate>
              <DataTemplate x:Key="NovemberOperand">
                <Path Data="M8,5 L10.999999,5 L11.999999,5 L11.999999,6 L11.999999,7 L11.999999,7.9999995 L11.999999,9 L11.999999,10 L10.999999,10 L8,10 L8,9 L10.999999,9 L10.999999,7.9999995 L8.999999,7.9999995 L8.999999,7 L10.999999,7 L10.999999,6 L8,6 z M2.9999993,4.9999995 L6.999999,4.9999995 L7,7 L7,7.9999995 L6,7.9999995 L4,7.9999995 L4,9 L7,9 L7,10 L4,10 L3,10 L3,9 L3,7.9999995 L3,7 L4,7 L6,7 L6,5.9999995 L2.9999993,5.9999995 z M1.0000006,2.9999983 L1.0000006,12 L14.000001,12 L14.000001,2.9999983 z M9.0000019,1.0000007 L9.0000019,2.0000005 L10.000002,2.0000005 L10.000002,1.0000007 z M7.0000019,1.0000007 L7.0000019,2.0000005 L8.0000019,2.0000005 L8.0000019,1.0000007 z M5.0000019,1.0000007 L5.0000019,2.0000005 L6.0000019,2.0000005 L6.0000019,1.0000007 z M0,0 L15,0 L15,13 L0,13 z" Fill="{StaticResource GlyphBorderBrush}" Stretch="Fill" Width="12" Height="13" />
              </DataTemplate>
              <DataTemplate x:Key="DecemberOperand">
                <Path Data="M8,5 L10.999999,5 L11.999999,5 L11.999999,6 L11.999999,7 L11.999999,7.9999995 L11.999999,9 L11.999999,10 L10.999999,10 L8,10 L8,9 L10.999999,9 L10.999999,7.9999995 L8.999999,7.9999995 L8.999999,7 L10.999999,7 L10.999999,6 L8,6 z M2.9999993,4.9999995 L6.999999,4.9999995 L7,7 L7,7.9999995 L6,7.9999995 L4,7.9999995 L4,9 L7,9 L7,10 L4,10 L3,10 L3,9 L3,7.9999995 L3,7 L4,7 L6,7 L6,5.9999995 L2.9999993,5.9999995 z M1.0000006,2.9999983 L1.0000006,12 L14.000001,12 L14.000001,2.9999983 z M9.0000019,1.0000007 L9.0000019,2.0000005 L10.000002,2.0000005 L10.000002,1.0000007 z M7.0000019,1.0000007 L7.0000019,2.0000005 L8.0000019,2.0000005 L8.0000019,1.0000007 z M5.0000019,1.0000007 L5.0000019,2.0000005 L6.0000019,2.0000005 L6.0000019,1.0000007 z M0,0 L15,0 L15,13 L0,13 z" Fill="{StaticResource GlyphBorderBrush}" Stretch="Fill" Width="12" Height="13" />
              </DataTemplate>
              <DataTemplate x:Key="EqualsOperand">
                <Path Width="8" Height="5" Data="M 0,3 C0,3 0,5 0,5 0,5 8,5 8,5 8,5 8,3 8,3 8,3 0,3 0,3 zM 0,0 C0,0 0,2 0,2 0,2 8,2 8,2 8,2 8,0 8,0 8,0 0,0 0,0 z" Fill="{StaticResource GlyphBorderBrush}" VerticalAlignment="Center" />
              </DataTemplate>
              <DataTemplate x:Key="NotEqualsOperand">
                <Path Width="8" Height="11" Data="M 0,3 C0,3 0,5 0,5 0,5 3,5 3,5 3,5 2,6 2,6 2,6 0,6 0,6 0,6 0,8 0,8 0,8 1.7,8 1.7,8 1.7,8 0,11 0,11 0,11 2,11 2,11 2,11 3.7,8 3.7,8 3.7,8 8,8 8,8 8,8 8,6 8,6 8,6 4,6 4,6 4,6 5.275,5 5.275,5 5.275,5 8,5 8,5 8,5 8,3 8,3 8,3 6.365,3 6.365,3 6.365,3 8,0 8,0 8,0 6,0 6,0 6,0 4.365,3 4.365,3 4.365,3 0,3 0,3 z" Fill="{StaticResource GlyphBorderBrush}" />
              </DataTemplate>
              <DataTemplate x:Key="StartsWithOperand">
                <StackPanel x:Name="BeginsWith" HorizontalAlignment="Center" Orientation="Horizontal">
                  <TextBlock FontSize="10" Text="A" TextDecorations="Underline" Foreground="{StaticResource GlyphBorderBrush}" />
                  <TextBlock FontSize="10" Text="a" Foreground="{StaticResource GlyphBorderBrush}" />
                </StackPanel>
              </DataTemplate>
              <DataTemplate x:Key="EndsWithOperand">
                <StackPanel x:Name="EndsWith" HorizontalAlignment="Center" Orientation="Horizontal">
                  <TextBlock FontSize="10" Text="a" Foreground="{StaticResource GlyphBorderBrush}" />
                  <TextBlock FontSize="10" Text="A" TextDecorations="Underline" Foreground="{StaticResource GlyphBorderBrush}" />
                </StackPanel>
              </DataTemplate>
              <DataTemplate x:Key="DoesNotStartWithOperand">
                <Grid x:Name="DoesnotBeginWith">
                  <StackPanel HorizontalAlignment="Center" Orientation="Horizontal">
                    <TextBlock FontSize="10" Text="A" TextDecorations="Underline" Foreground="{StaticResource GlyphBorderBrush}" />
                    <TextBlock FontSize="10" Text="a" Foreground="{StaticResource GlyphBorderBrush}" />
                  </StackPanel>
                  <Grid>
                    <Path Width="8" Height="11" HorizontalAlignment="Center" Margin="-4,0,0,0" Data="M 0,11 C0,11 2,11 2,11 2,11 8,0 8,0 8,0 6,0 6,0 6,0 0,11 0,11 z" Fill="{StaticResource GlyphBorderBrush}" Stretch="Fill" />
                  </Grid>
                </Grid>
              </DataTemplate>
              <DataTemplate x:Key="DoesNotEndWithOperand">
                <Grid x:Name="DoesnotendWith">
                  <StackPanel HorizontalAlignment="Center" Orientation="Horizontal">
                    <TextBlock FontSize="10" Text="a" Foreground="{StaticResource GlyphBorderBrush}" />
                    <TextBlock FontSize="10" Text="A" TextDecorations="Underline" Foreground="{StaticResource GlyphBorderBrush}" />
                  </StackPanel>
                  <Grid>
                    <Path Width="8" Height="11" HorizontalAlignment="Center" Margin="0,0,-4,0" Data="M 0,11 C0,11 2,11 2,11 2,11 8,0 8,0 8,0 6,0 6,0 6,0 0,11 0,11 z" Fill="{StaticResource GlyphBorderBrush}" Stretch="Fill" />
                  </Grid>
                </Grid>
              </DataTemplate>
              <DataTemplate x:Key="ContainsOperand">
                <Border Margin="0,1,0,0" Width="10" Height="10" Background="{StaticResource GlyphBackgroundBrush}" BorderBrush="{StaticResource GlyphBorderBrush}" BorderThickness="1">
                  <Rectangle Margin="3" Fill="{StaticResource GlyphBorderBrush}" />
                </Border>
              </DataTemplate>
              <DataTemplate x:Key="DoesNotContainOperand">
                <Grid x:Name="DoesNotContains" Margin="0,1,0,0">
                  <Border Width="10" Height="10" Background="{StaticResource GlyphBackgroundBrush}" BorderBrush="{StaticResource GlyphBorderBrush}" BorderThickness="1">
                    <Grid>
                      <Rectangle Margin="3" Fill="{StaticResource GlyphBorderBrush}" />
                      <Line X1="0" X2="8" Y1="8" Y2="0" Stroke="{StaticResource GlyphBorderBrush}" StrokeThickness="1" RenderOptions.EdgeMode="Aliased"  />
                    </Grid>
                  </Border>
                </Grid>
              </DataTemplate>
              <DataTemplate x:Key="GreaterThanOperand">
                <Path Width="8" Height="8" HorizontalAlignment="Center" Data="M 1,0 C1,0 0,1 0,1 0,1 5,4 5,4 5,4 0,7 0,7 0,7 1,8 1,8 1,8 8,4 8,4 8,4 1,0 1,0 z" Fill="{StaticResource GlyphBorderBrush}" />
              </DataTemplate>
              <DataTemplate x:Key="GreaterThanOrEqualOperand">
                <StackPanel x:Name="GreaterThanOrEqual">
                  <Path Width="8" Height="8" HorizontalAlignment="Center" Data="M 1,0 C1,0 0,1 0,1 0,1 5,4 5,4 5,4 0,7 0,7 0,7 1,8 1,8 1,8 8,4 8,4 8,4 1,0 1,0 z" Fill="{StaticResource GlyphBorderBrush}" />
                  <Rectangle Width="8" Height="1" Margin="0,1,0,0" Fill="{StaticResource GlyphBorderBrush}" />
                </StackPanel>
              </DataTemplate>
              <DataTemplate x:Key="LessThanOperand">
                <Path Width="8" Height="8" HorizontalAlignment="Center" Data="M 7,0 C7,0 8,1 8,1 8,1 3,4 3,4 3,4 8,7 8,7 8,7 7,8 7,8 7,8 0,4 0,4 0,4 7,0 7,0 z" Fill="{StaticResource GlyphBorderBrush}" />
              </DataTemplate>
              <DataTemplate x:Key="LessThanOrEqualOperand">
                <StackPanel x:Name="LessThanOrEqual">
                  <Path Width="8" Height="8" HorizontalAlignment="Center" Data="M 7,0 C7,0 8,1 8,1 8,1 3,4 3,4 3,4 8,7 8,7 8,7 7,8 7,8 7,8 0,4 0,4 0,4 7,0 7,0 z" Fill="{StaticResource GlyphBorderBrush}" />
                  <Rectangle Width="8" Height="1" Margin="0,1,0,0" Fill="{StaticResource GlyphBorderBrush}" />
                </StackPanel>
              </DataTemplate>
              <DataTemplate x:Key="DefaultFilterIcon">
                <Grid>
                  <Path Width="11" Height="8" Data="M 0,0 C0,0 11,0 11,0 11,0 7,4 7,4 7,4 7,8 7,8 7,8 4,8 4,8 4,8 4,4 4,4 4,4 0,0 0,0 z" Fill="{StaticResource GlyphBorderBrush}" Stretch="Fill" />
                  <Path Width="7" Height="6" Data="M 2,1 C2,1 9,1 9,1 9,1 6,4 6,4 6,4 6,7 6,7 6,7 5,7 5,7 5,7 5,4 5,4 5,4 2,1 2,1 z" Fill="{StaticResource GlyphBackgroundBrush}" Stretch="Fill" />
                  <Path Width="3.5" Height="7" HorizontalAlignment="Center" Margin="11,7,0,0" VerticalAlignment="Center" Data="M 0,0 C0,0 0,7 0,7 0,7 3.5,3.5 3.5,3.5 3.5,3.5 0,0 0,0 z" Fill="{StaticResource GlyphBorderBrush}" Stretch="Fill" />
                </Grid>
              </DataTemplate>
            </Border.Resources>
            <Grid>
              <Grid Background="{TemplateBinding Background}">
                <Grid.RowDefinitions>
                  <RowDefinition Height="*" />
                  <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="*" />
                  <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <igPrim:RowsPanel x:Name="RowsPanel" />
                <ScrollBar x:Name="VerticalScrollBar" Width="17" Grid.Row="0" Grid.Column="1" Style="{StaticResource ScrollBarStyle}" />
                <ScrollBar x:Name="HorizontalScrollBar" Height="16" Grid.Row="2" Style="{StaticResource ScrollBarStyle}" />
              </Grid>
              <Border x:Name="ReadOnlyBorder" Background="{StaticResource XamGridReadOnlyBackgroundBrush}" Visibility="Collapsed" />
            </Grid>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="ig:XamGrid" BasedOn="{StaticResource XamGridStyle}" />

  <!-- *********************************  SimpleClickableContainer Style  ********************************* -->
  <Style x:Key="SimpleClickableContainerStyle" TargetType="igPrim:SimpleClickableContainer">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igPrim:SimpleClickableContainer">
          <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="igPrim:SimpleClickableContainer" BasedOn="{StaticResource SimpleClickableContainerStyle}" />

  <!-- *********************************  NoChromeButton Style  ********************************* -->
  <Style x:Key="NoChromeButtonStyle" TargetType="Button">
    <Setter Property="Background" Value="{StaticResource TransparentBrush}" />
    <Setter Property="BorderThickness" Value="0" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="Button">
          <Grid Background="{StaticResource TransparentBrush}">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="MouseOver" />
                <VisualState x:Name="Pressed" />
                <VisualState x:Name="Disabled">
                  <Storyboard>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="contentPresenter" Storyboard.TargetProperty="Opacity">
                      <SplineDoubleKeyFrame KeyTime="0" Value=".3" />
                    </DoubleAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="FocusStates">
                <VisualState x:Name="Focused" />
                <VisualState x:Name="Unfocused" />
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" />
            <ContentPresenter x:Name="contentPresenter" Margin="{TemplateBinding Padding}" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- *********************************  GridSortableListBoxItem Style  ********************************* -->
  <Style x:Key="GridSortableListBoxItemStyle" TargetType="igPrim:GridSortableListBoxItem">
    <Setter Property="Foreground" Value="{StaticResource HeaderCellForegroundBrush}" />
    <Setter Property="Background" Value="{StaticResource GridSortableListBoxItemBackgroundBrush}" />
    <Setter Property="BorderBrush" Value="{StaticResource GridSortableListBoxItemBorderBrush}" />
    <Setter Property="BorderThickness" Value="0,0,0,1" />
    <Setter Property="Padding" Value="4,4,20,4" />
    <Setter Property="HorizontalContentAlignment" Value="Left" />
    <Setter Property="VerticalContentAlignment" Value="Top" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igPrim:GridSortableListBoxItem">
          <Border x:Name="Bd" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
            <Grid>
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="25" />
                <!-- This column width is equal width to the "labels" grid column "dragHandleColumn" -->
                <ColumnDefinition Width="*" />
              </Grid.ColumnDefinitions>
              <Border x:Name="DragHandle" Background="{StaticResource DragHandleBackgroundBrush}" BorderBrush="{StaticResource DragHandleBorderBrush}" BorderThickness="0,0,1,0" Cursor="Hand">
                <Grid>
                  <Rectangle Width="1" Fill="{StaticResource GridSortableListBoxItemDividerBackgroundBrush}" HorizontalAlignment="Right" />
                  <Path Height="11" Width="6" Data="M 4,9 C4,9 4,11 4,11 4,11 6,11 6,11 6,11 6,9 6,9 6,9 4,9 4,9 zM 0,9 C0,9 0,11 0,11 0,11 2,11 2,11 2,11 2,9 2,9 2,9 0,9 0,9 zM 4,6 C4,6 4,8 4,8 4,8 6,8 6,8 6,8 6,6 6,6 6,6 4,6 4,6 zM 0,6 C0,6 0,8 0,8 0,8 2,8 2,8 2,8 2,6 2,6 2,6 0,6 0,6 zM 4,0 C4,0 4,2 4,2 4,2 6,2 6,2 6,2 6,0 6,0 6,0 4,0 4,0 zM 4,3 C4,3 4,5 4,5 4,5 6,5 6,5 6,5 6,3 6,3 6,3 4,3 4,3 zM 0,3 C0,3 0,5 0,5 0,5 2,5 2,5 2,5 2,3 2,3 2,3 0,3 0,3 zM 0,0 C0,0 0,2 0,2 0,2 2,2 2,2 2,2 2,0 2,0 2,0 0,0 0,0 z" Fill="{StaticResource DragHandleGlyphBrush}" />
                </Grid>
              </Border>
              <Grid Grid.Column="1">
                <ContentPresenter x:Name="contentPresenter" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" />
              </Grid>
              <Popup x:Name="Popup" />
            </Grid>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="igPrim:GridSortableListBoxItem" BasedOn="{StaticResource GridSortableListBoxItemStyle}" />

  <!-- *********************************  GridSortableListBox Style  ********************************* -->
  <Style x:Key="GridSortableListBoxStyle" TargetType="igPrim:GridSortableListBox">
    <Setter Property="Padding" Value="1" />
    <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
    <Setter Property="Background" Value="{StaticResource GridSortableListBoxBackgroundBrush}" />
    <Setter Property="BorderBrush" Value="{StaticResource GridSortableListBoxBorderBrush}" />
    <Setter Property="HorizontalContentAlignment" Value="Left" />
    <Setter Property="VerticalContentAlignment" Value="Top" />
    <Setter Property="IsTabStop" Value="False" />
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
    <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igPrim:GridSortableListBox">
          <Grid>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="ValidationStates">
                <VisualState x:Name="Valid" />
                <VisualState x:Name="InvalidUnfocused">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ValidationErrorElement" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>
                            Visible
                          </Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="InvalidFocused">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ValidationErrorElement" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>
                            Visible
                          </Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="validationTooltip" Storyboard.TargetProperty="IsOpen">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <System:Boolean>
                            True
                          </System:Boolean>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
              <ScrollViewer x:Name="ScrollViewer" Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}" BorderBrush="{StaticResource TransparentBrush}" BorderThickness="0" Style="{StaticResource ScrollViewerStyle}">
                <ItemsPresenter />
              </ScrollViewer>
            </Border>
            <Border x:Name="ValidationErrorElement" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="2" BorderBrush="{StaticResource ValidationErrorBrush}" Visibility="Collapsed">
              <ToolTipService.ToolTip>
                <ToolTip x:Name="validationTooltip" Placement="Right" PlacementTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}" DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}">
                  <ToolTip.Triggers>
                    <EventTrigger RoutedEvent="Canvas.Loaded">
                      <EventTrigger.Actions>
                        <BeginStoryboard>
                          <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="validationTooltip" Storyboard.TargetProperty="IsHitTestVisible">
                              <DiscreteObjectKeyFrame KeyTime="0">
                                <DiscreteObjectKeyFrame.Value>
                                  <System:Boolean>
                                    true
                                  </System:Boolean>
                                </DiscreteObjectKeyFrame.Value>
                              </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                          </Storyboard>
                        </BeginStoryboard>
                      </EventTrigger.Actions>
                    </EventTrigger>
                  </ToolTip.Triggers>
                </ToolTip>
              </ToolTipService.ToolTip>
              <Grid Width="10" Height="10" HorizontalAlignment="Right" Margin="0,-4,-4,0" VerticalAlignment="Top" Background="{StaticResource TransparentBrush}">
                <Path Margin="-1,3,0,0" Data="M 1,0 L6,0 A 2,2 90 0 1 8,2 L8,7 z" Fill="{StaticResource ValidationErrorBrush}" />
              </Grid>
            </Border>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="igPrim:GridSortableListBox" BasedOn="{StaticResource GridSortableListBoxStyle}" />

  <!-- *********************************  ColumnChooserListBoxItem Style  ********************************* -->
  <Style x:Key="ColumnChooserListBoxItemStyle" TargetType="ListBoxItem">
    <Setter Property="Foreground" Value="{StaticResource ThemeForegroundBrush}" />
    <Setter Property="Background" Value="{StaticResource ListBoxItemBackgroundBrush}" />
    <Setter Property="BorderBrush" Value="{StaticResource ListBoxItemBorderBrush}" />
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="HorizontalContentAlignment" Value="Left" />
    <Setter Property="Padding" Value="8,3" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="ListBoxItem">
          <Grid Background="{StaticResource TransparentBrush}">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="MouseOver">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BaseShape" Storyboard.TargetProperty="Background">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ListBoxItemHoverBackgroundBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BaseShape" Storyboard.TargetProperty="BorderBrush">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ListBoxItemHoverBorderBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="Highlight">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Pressed" />
                <VisualState x:Name="Disabled">
                  <Storyboard>
                    <DoubleAnimation Duration="0" To="0.5" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="contentPresenter" d:IsOptimized="True" />
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="SelectionStates">
                <VisualState x:Name="Unselected" />
                <VisualState x:Name="Selected" />
              </VisualStateGroup>
              <VisualStateGroup x:Name="FocusStates">
                <VisualState x:Name="Focused" />
                <VisualState x:Name="Unfocused" />
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="24" />
              <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <Border x:Name="BaseShape" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Grid.ColumnSpan="2">
              <Rectangle x:Name="Highlight" StrokeThickness="1" Stroke="{StaticResource ListBoxItemHoverHighlightBorderBrush}" Visibility="Collapsed" />
            </Border>
            <ContentPresenter x:Name="contentPresenter" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" Grid.Column="1" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- *********************************  ColumnChooserDialogButton Style  ********************************* -->
  <Style x:Key="ColumnChooserDialogButtonStyle" TargetType="Button">
    <Setter Property="Foreground" Value="{StaticResource HeaderCellForegroundBrush}" />
    <Setter Property="Background" Value="{StaticResource ColumnChooserDialogButtonBackgroundBrush}" />
    <Setter Property="BorderBrush" Value="{StaticResource ColumnChooserDialogButtonBorderBrush}" />
    <Setter Property="HorizontalContentAlignment" Value="Left" />
    <Setter Property="Padding" Value="8,3" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="Button">
          <Grid Background="{StaticResource TransparentBrush}">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="MouseOver">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BaseShape" Storyboard.TargetProperty="Background">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonHoverBackgroundBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BaseShape" Storyboard.TargetProperty="BorderBrush">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonHoverBorderBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ButtonHighlight" Storyboard.TargetProperty="Opacity">
                      <SplineDoubleKeyFrame KeyTime="0" Value="1" />
                    </DoubleAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Pressed" />
                <VisualState x:Name="Disabled" />
              </VisualStateGroup>
              <VisualStateGroup x:Name="FocusStates">
                <VisualState x:Name="Focused" />
                <VisualState x:Name="Unfocused" />
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="24" />
              <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <Border x:Name="BaseShape" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="2" Grid.ColumnSpan="2">
              <Rectangle x:Name="ButtonHighlight" StrokeThickness="1" Stroke="{StaticResource ButtonHoverHighlightBorderBrush}" RadiusY="1" RadiusX="1" Opacity="0" />
            </Border>
            <Grid x:Name="columnChooserIcon" Width="14" Height="14" VerticalAlignment="Center" HorizontalAlignment="Center">
              <Path Fill="{StaticResource ColumnChooserIconBorderBrush}" Data="M 3,0 C3,0 3,4 3,4 3,4 0,4 0,4 0,4 0,14 0,14 0,14 7,14 7,14 7,14 7,10 7,10 7,10 14,10 14,10 14,10 14,0 14,0 14,0 3,0 3,0 z" />
              <Path Fill="{StaticResource ColumnChooserIconBackgroundBrush}" Data="M 1,5 C1,5 6,5 6,5 6,5 6,7 6,7 6,7 1,7 1,7 1,7 1,5 1,5 zM 1,8 C1,8 6,8 6,8 6,8 6,10 6,10 6,10 1,10 1,10 1,10 1,8 1,8 zM 1,11 C1,11 6,11 6,11 6,11 6,13 6,13 6,13 1,13 1,13 1,13 1,11 1,11 zM 7,7 C7,7 13,7 13,7 13,7 13,9 13,9 13,9 7,9 7,9 7,9 7,7 7,7 zM 7,4 C7,4 13,4 13,4 13,4 13,6 13,6 13,6 7,6 7,6 7,6 7,4 7,4 zM 4,1 C4,1 13,1 13,1 13,1 13,3 13,3 13,3 4,3 4,3 4,3 4,1 4,1 zM 3,0 C3,0 3,4 3,4 3,4 0,4 0,4 0,4 0,14 0,14 0,14 7,14 7,14 7,14 7,10 7,10 7,10 14,10 14,10 14,10 14,0 14,0 14,0 3,0 3,0 z" />
              <Grid Margin="0,0,0,1">
                <Border Width="6" Height="3" Margin="0,0,2,2" BorderBrush="{StaticResource ColumnChooserIconGlyphBrush}" BorderThickness="0,0,1,1" CornerRadius="0,0,2,0" />
                <Path Width="5" Height="3" Margin="3,1,0,0" VerticalAlignment="Top" Data="M 0,2 C0,2 0,3 0,3 0,3 5,3 5,3 5,3 5,2 5,2 5,2 4,2 4,2 4,2 4,1 4,1 4,1 3,1 3,1 3,1 3,0 3,0 3,0 2,0 2,0 2,0 2,1 2,1 2,1 1,1 1,1 1,1 1,2 1,2 1,2 0,2 0,2 z" Fill="{StaticResource ColumnChooserIconGlyphBrush}" Stretch="Fill" />
              </Grid>
            </Grid>
            <ContentPresenter x:Name="contentPresenter" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" Grid.Column="1" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- *********************************  ColumnChooserDialogCloseButton Style  ********************************* -->
  <Style x:Key="ColumnChooserDialogCloseButtonStyle" TargetType="Button">
    <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
    <Setter Property="Background" Value="{StaticResource DialogCloseButtonBackgroundBrush}" />
    <Setter Property="BorderBrush" Value="{StaticResource DialogCloseButtonBorderBrush}" />
    <Setter Property="Padding" Value="0" />
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="Width" Value="25" />
    <Setter Property="Height" Value="23" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="Button">
          <Grid Background="{StaticResource TransparentBrush}">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="MouseOver">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="Background" Storyboard.TargetProperty="Background">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource DialogCloseButtonHoverBackgroundBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="Background" Storyboard.TargetProperty="BorderBrush">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource DialogCloseButtonHoverBorderBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="HoverInnerBackground">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Pressed">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="PressedInnerHighlight">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>
                            Visible
                          </Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="Background" Storyboard.TargetProperty="Background">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource DialogCloseButtonPressedBackgroundBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="Background" Storyboard.TargetProperty="BorderBrush">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource DialogCloseButtonPressedBorderBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Disabled">
                  <Storyboard>
                    <DoubleAnimation Duration="0" To="0.5" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="contentPresenter" />
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="FocusStates">
                <VisualState x:Name="Focused" />
                <VisualState x:Name="Unfocused" />
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Border x:Name="Background" CornerRadius="2" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1">
              <Grid>
                <Rectangle x:Name="HoverInnerBackground" Fill="{StaticResource DialogCloseButtoneffectBrush}" Visibility="Collapsed" Margin="1" />
                <Rectangle x:Name="PressedInnerHighlight" RadiusY="2" RadiusX="2" Fill="{StaticResource DialogCloseButtonPressedInnerBackgroundBrush}" Visibility="Collapsed" />
              </Grid>
            </Border>
            <ContentPresenter x:Name="contentPresenter" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- *********************************  ColumnChooserDialog Style  ********************************* -->
  <Style x:Key="ColumnChooserDialogStyle" TargetType="igPrim:ColumnChooserDialog">
    <Setter Property="Foreground" Value="{StaticResource HeaderCellForegroundBrush}" />
    <Setter Property="Background" Value="{StaticResource ColumnChooserDialogBackgroundBrush}" />
    <Setter Property="BorderBrush" Value="{StaticResource ColumnChooserDialogBorderBrush}" />
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="MaxHeight" Value="225" />
    <Setter Property="Padding" Value="0,0,0,5" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igPrim:ColumnChooserDialog">
          <Grid>
            <Popup x:Name="Popup">
              <Grid MaxHeight="{TemplateBinding MaxHeight}" x:Name="RootElement">
                <Border BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" CornerRadius="1">
                </Border>
                <Border BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" BorderBrush="{StaticResource TransparentBrush}" CornerRadius="1">
                  <Grid>
                    <Grid.RowDefinitions>
                      <RowDefinition Height="25" />
                      <RowDefinition Height="25" />
                      <RowDefinition />
                    </Grid.RowDefinitions>
                    <!-- HEADER CAPTION -->
                    <Grid>
                      <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                      </Grid.ColumnDefinitions>
                      <Border x:Name="HeaderElem" Background="{TemplateBinding Background}" BorderBrush="{StaticResource HeaderCellBorderBrush}" BorderThickness="0,0,0,1" Grid.ColumnSpan="2" CornerRadius="2,2,0,0">
                        <TextBlock Foreground="{TemplateBinding Foreground}" Text="{Binding ColumnLayout.Grid.ColumnChooserSettings.ColumnChooserDisplayText, RelativeSource={RelativeSource TemplatedParent}}" VerticalAlignment="Center" Margin="5,0" />
                      </Border>

                      <Button Grid.Column="1" HorizontalAlignment="Right" Style="{StaticResource ColumnChooserDialogCloseButtonStyle}" VerticalAlignment="Center" Margin="5,0" Cursor="Hand">
                        <Path Height="10" Width="12" Stretch="Fill" HorizontalAlignment="Center" VerticalAlignment="Center" Fill="{StaticResource GlyphBackgroundBrush}" Stroke="{StaticResource GlyphBorderBrush}" Data="M0.5,0.5 L4.5178828,0.5 L6.0620003,3.125 L7.4936447,0.5 L11.5,0.5 L11.5,1.5476431 L8.7425003,6.1201854 L11.5,10.359666 L11.5,11.5 L7.4941902,11.5 L6.0620003,8.8740005 L4.5172949,11.5 L0.5,11.5 L0.5,10.43379 L3.3059995,6.1201582 L0.5,1.4676378 L0.5,0.5 z" />
                        <igBase:Commanding.Command>
                          <ig:XamGridColumnChooserCommandSource EventName="Click" CommandType="Close" />
                        </igBase:Commanding.Command>
                      </Button>
                    </Grid>
                    <!-- LABELS -->
                    <Grid x:Name="labels" Grid.Row="1" Background="{StaticResource ColumnChooserDialogLabelsBackground}">
                      <Grid.ColumnDefinitions>
                        <ColumnDefinition x:Name="dragHandleColumn" Width="25" />
                        <ColumnDefinition x:Name="viewLabel" Width="35" />
                        <ColumnDefinition x:Name="columnLabel" Width="*" />
                      </Grid.ColumnDefinitions>
                      <TextBlock Text="{TemplateBinding ViewLabelText}" Foreground="{TemplateBinding Foreground}" Grid.Row="1" Grid.Column="1" HorizontalAlignment="Center" VerticalAlignment="Center" />
                      <TextBlock Text="{TemplateBinding ColumnLabelText}" Foreground="{TemplateBinding Foreground}" Grid.Row="1" Grid.Column="2" VerticalAlignment="Center" Margin="9,0" />
                      <Rectangle x:Name="labelAreaSeparator" Height="1" Fill="{StaticResource SeparatorBrush}" VerticalAlignment="Bottom" Grid.Row="1" Grid.ColumnSpan="3" />
                    </Grid>
                    <!-- ITEMS -->
                    <Grid Grid.Row="2">
                      <igPrim:GridSortableListBox IsSortable="{Binding IsSortable, RelativeSource={RelativeSource TemplatedParent}}" ItemsSource="{Binding Columns, RelativeSource={RelativeSource TemplatedParent}}" BorderThickness="0" Margin="{TemplateBinding Padding}" Style="{StaticResource GridSortableListBoxStyle}" Background="{StaticResource GridSortableListBoxBackgroundBrush}">
                        <igPrim:GridSortableListBox.ItemTemplate>
                          <DataTemplate>
                            <Grid>
                              <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="35" />
                                <!-- This column width is equal width to the "labels" grid column "viewLabel" -->
                                <ColumnDefinition Width="*" />
                              </Grid.ColumnDefinitions>
                              <CheckBox IsEnabled="{Binding IsHideable}" IsChecked="{Binding Visibility, Mode=TwoWay, Converter={StaticResource VisToBool}}" HorizontalAlignment="Center" Style="{StaticResource CheckBoxStyle}" />
                              <TextBlock Grid.Column="1" Text="{Binding DisplayNameResolved}" Margin="6,0" />
                            </Grid>
                          </DataTemplate>
                        </igPrim:GridSortableListBox.ItemTemplate>
                        <igPrim:GridSortableListBox.ItemsPanel>
                          <ItemsPanelTemplate>
                            <StackPanel Orientation="Vertical">
                            </StackPanel>
                          </ItemsPanelTemplate>
                        </igPrim:GridSortableListBox.ItemsPanel>
                      </igPrim:GridSortableListBox>
                    </Grid>
                  </Grid>
                </Border>
              </Grid>
            </Popup>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="igPrim:ColumnChooserDialog" BasedOn="{StaticResource ColumnChooserDialogStyle}" />

  <!-- *********************************  HeaderDropDownControl Style  ********************************* -->
  <Style x:Key="HeaderDropDownControlStyle" TargetType="igPrim:HeaderDropDownControl">
    <Setter Property="Cursor" Value="Hand" />
    <Setter Property="Padding" Value="3" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igPrim:HeaderDropDownControl">
          <Grid>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="ResizeStates">
                <VisualState x:Name="NotResizable" />
                <VisualState x:Name="Resizable">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames BeginTime="0" Storyboard.TargetName="Resizer" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>
                            Visible
                          </Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid.RowDefinitions>
              <RowDefinition>
              </RowDefinition>
              <RowDefinition Height="0">
              </RowDefinition>
            </Grid.RowDefinitions>
            <Button x:Name="OpenButton" Padding="{TemplateBinding Padding}" VerticalContentAlignment="Stretch" Content="{TemplateBinding OpenButtonContent}" Style="{StaticResource NoChromeButtonStyle}">
              <igBase:Commanding.Command>
                <igPrim:XamGridPopupCommandSource CommandType="TogglePopup" EventName="Click">
                </igPrim:XamGridPopupCommandSource>
              </igBase:Commanding.Command>
            </Button>
            <Popup x:Name="Popup" Grid.Row="1">
              <Grid>
                <Grid.RowDefinitions>
                  <RowDefinition Height="*" />
                  <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <ContentPresenter x:Name="cp" />
                <igPrim:PopupResizer x:Name="Resizer" Visibility="Collapsed" Grid.Row="1" ResizeElement="{Binding ElementName=cp, Path=Content}" Background="{StaticResource PopupBackgroundBrush}" BorderBrush="{StaticResource PopupBorderBrush}" />
              </Grid>
            </Popup>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="igPrim:HeaderDropDownControl" BasedOn="{StaticResource HeaderDropDownControlStyle}" />

  <!-- *********************************  HeaderCellControl Style  ********************************* -->
  <Style x:Key="HeaderCellControlStyle" TargetType="igPrim:HeaderCellControl">
    <Setter Property="FontSize" Value="11" />
    <Setter Property="Foreground" Value="{StaticResource HeaderCellForegroundBrush}" />
    <Setter Property="Background" Value="{StaticResource HeaderCellBackgroundBrush}" />
    <Setter Property="BorderBrush" Value="{StaticResource HeaderCellBorderBrush}" />
    <Setter Property="BorderThickness" Value="0,1,1,1" />
    <Setter Property="HorizontalContentAlignment" Value="Left" />
    <Setter Property="Padding" Value="8,4" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igPrim:HeaderCellControl">
          <igPrim:SimpleClickableContainer x:Name="NormalFill" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
            <igBase:Commanding.Commands>
              <igBase:CommandSourceCollection>
                <ig:XamGridColumnCommandSource CommandType="Select" EventName="SimpleClick" />
                <ig:XamGridColumnCommandSource CommandType="SortToggle" EventName="SimpleClick" />
              </igBase:CommandSourceCollection>
            </igBase:Commanding.Commands>
            <Grid x:Name="Bd">
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition>
                </ColumnDefinition>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
              </Grid.ColumnDefinitions>
              <igPrim:HeaderDropDownControl Padding="0" x:Name="HiddenLeftAdjacentColumnsElement" Visibility="Collapsed">
                <ToolTipService.ToolTip>
                  <ToolTip Content="{Binding Cell.Column.ColumnLayout.Grid.ColumnChooserSettings.HiddenColumnIndicatorToolTipText, RelativeSource={RelativeSource TemplatedParent}}" />
                </ToolTipService.ToolTip>
                <igPrim:HeaderDropDownControl.OpenButtonContent>
                  <Rectangle x:Name="hiddenColumnIndicator" Fill="{StaticResource HiddenColumnIndicatorBackgroundBrush}" Width="10" HorizontalAlignment="Left" />
                </igPrim:HeaderDropDownControl.OpenButtonContent>
                <Grid>
                  <Border x:Name="ColumnChooserBd" MaxHeight="200" Background="{StaticResource PopupBackgroundBrush}" BorderBrush="{StaticResource PopupBorderBrush}" BorderThickness="1" CornerRadius="3" Padding="1">
                    <Grid>
                      <Grid.ColumnDefinitions>
                        <ColumnDefinition MinWidth="25" MaxWidth="25" />
                        <ColumnDefinition />
                      </Grid.ColumnDefinitions>
                      <Grid.RowDefinitions>
                        <RowDefinition />
                        <RowDefinition Height="Auto" />
                      </Grid.RowDefinitions>
                      <Border Grid.RowSpan="2" BorderBrush="{StaticResource SeparatorBrush}" BorderThickness="0,0,1,0" />
                      <ListBox DataContext="{x:Null}" ItemsSource="{Binding Cell.ColumnsHiddenToLeft, RelativeSource={RelativeSource TemplatedParent}}" Background="{StaticResource TransparentBrush}" BorderThickness="0" Padding="0" Margin="0" Grid.ColumnSpan="2">
                        <ListBox.ItemTemplate>
                          <DataTemplate>
                            <TextBlock Text="{Binding DisplayNameResolved}" />
                          </DataTemplate>
                        </ListBox.ItemTemplate>
                        <igBase:Commanding.Commands>
                          <igBase:CommandSourceCollection>
                            <ig:XamGridColumnCommandSource ParameterBinding="{Binding SelectedItem}" EventName="SelectionChanged" CommandType="Show" />
                            <igPrim:XamGridPopupCommandSource CommandType="ClosePopup" EventName="SelectionChanged" />
                          </igBase:CommandSourceCollection>
                        </igBase:Commanding.Commands>
                        <ListBox.Resources>
                          <Style TargetType="ScrollViewer" BasedOn="{StaticResource ScrollViewerStyle}" />
                        </ListBox.Resources>
                        <ListBox.ItemContainerStyle>
                          <StaticResource ResourceKey="ColumnChooserListBoxItemStyle" />
                        </ListBox.ItemContainerStyle>
                      </ListBox>
                      <StackPanel Background="{StaticResource TransparentBrush}" Grid.Row="1" Grid.ColumnSpan="2">
                        <ig:XamMenuSeparator Background="{StaticResource SeparatorBrush}" />
                        <Button Margin="0,1,0,0" Style="{StaticResource ColumnChooserDialogButtonStyle}">
                          <igBase:Commanding.Commands>
                            <igBase:CommandSourceCollection>
                              <ig:XamGridColumnChooserCommandSource CommandType="Open" EventName="Click" />
                              <igPrim:XamGridPopupCommandSource CommandType="ClosePopup" EventName="Click" />
                            </igBase:CommandSourceCollection>
                          </igBase:Commanding.Commands>
                          <TextBlock Text="{Binding Cell.Column.ColumnLayout.Grid.ColumnChooserSettings.ColumnChooserDisplayText, RelativeSource={RelativeSource TemplatedParent}}" Foreground="{StaticResource HeaderCellForegroundBrush}" />
                        </Button>
                      </StackPanel>
                    </Grid>
                  </Border>
                </Grid>
              </igPrim:HeaderDropDownControl>
              <ContentPresenter Grid.Column="1" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
              <Grid Grid.Column="2" x:Name="SortAndPinIndicators" HorizontalAlignment="Right" Margin="0,0,5,0" Background="{TemplateBinding Background}">
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="Auto" />
                  <ColumnDefinition Width="Auto" />
                  <ColumnDefinition Width="Auto" />
                  <ColumnDefinition Width="Auto" />
                  <ColumnDefinition Width="Auto" />
                  <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <Path x:Name="SortedDescending" HorizontalAlignment="Right" Margin="3,0" VerticalAlignment="Center" Data="M 0 0 L 4 4 L 8 0 Z" Fill="{StaticResource GlyphBorderBrush}" Visibility="Collapsed" />
                <Path x:Name="SortedAscending" HorizontalAlignment="Right" Margin="3,0" VerticalAlignment="Center" Data="M0,4 L8,4 L4,0 z" Fill="{StaticResource GlyphBorderBrush}" Visibility="Collapsed" />
                <Grid x:Name="PinnedIndicator" Grid.Column="3" Background="{StaticResource TransparentBrush}" Cursor="Hand" Visibility="Collapsed">
                  <Path Width="7" Height="10" Margin="3,0" Data="M 6,4 C6,4 8,4 8,4 8,4 8,9 8,9 8,9 6,9 6,9 6,9 6,4 6,4 zM 5,3 C5,3 5,9 5,9 5,9 4,9 4,9 4,9 4,10 4,10 4,10 7,10 7,10 7,10 7,13 7,13 7,13 8,13 8,13 8,13 8,10 8,10 8,10 11,10 11,10 11,10 11,9 11,9 11,9 10,9 10,9 10,9 10,3 10,3 10,3 5,3 5,3 z" Fill="{StaticResource GlyphBorderBrush}" Stretch="Fill" />
                  <igBase:Commanding.Command>
                    <ig:XamGridColumnCommandSource CommandType="Unfix" EventName="MouseLeftButtonDown">
                    </ig:XamGridColumnCommandSource>
                  </igBase:Commanding.Command>
                </Grid>
                <Grid x:Name="UnpinnedIndicator" Grid.Column="3" Background="{StaticResource TransparentBrush}" Cursor="Hand" Visibility="Collapsed">
                  <Path Width="10" Height="7" Margin="3,0" Data="M 12,7 C12,7 12,9 12,9 12,9 7,9 7,9 7,9 7,7 7,7 7,7 12,7 12,7 zM 13,6 C13,6 7,6 7,6 7,6 7,5 7,5 7,5 6,5 6,5 6,5 6,8 6,8 6,8 3,8 3,8 3,8 3,9 3,9 3,9 6,9 6,9 6,9 6,12 6,12 6,12 7,12 7,12 7,12 7,11 7,11 7,11 13,11 13,11 13,11 13,6 13,6 z" Fill="{StaticResource GlyphBorderBrush}" Stretch="Fill" />
                  <igBase:Commanding.Command>
                    <ig:XamGridColumnCommandSource CommandType="Fix" EventName="MouseLeftButtonDown">
                    </ig:XamGridColumnCommandSource>
                  </igBase:Commanding.Command>
                </Grid>
                <igPrim:HeaderDropDownControl x:Name="SummaryHeaderDropDownControl" Background="{StaticResource TransparentBrush}" Visibility="Collapsed" Grid.Column="1">
                  <igPrim:HeaderDropDownControl.OpenButtonContent>
                    <Path Data="M 0,0 C0,0 5,0 5,0 5,0 5,1 5,1 5,1 2,1 2,1 2,1 4,3.5 4,3.5 4,3.5 2,6 2,6 2,6 5,6 5,6 5,6 5,7 5,7 5,7 0,7 0,7 0,7 0,6 0,6 0,6 2,3.5625 2,3.5625 2,3.5625 0,1 0,1 0,1 0,0 0,0 z" Fill="{StaticResource GlyphBorderBrush}" Width="5" Height="7" x:Name="summarySigmaIcon" StrokeThickness="0" />
                  </igPrim:HeaderDropDownControl.OpenButtonContent>
                  <igPrim:SummarySelectionControl Cell="{Binding Path=Cell,RelativeSource={RelativeSource TemplatedParent}}">
                  </igPrim:SummarySelectionControl>
                </igPrim:HeaderDropDownControl>
                <igPrim:HeaderDropDownControl AllowResizing="true" x:Name="FilterHeaderDropDownControl" Visibility="Collapsed" Background="{StaticResource TransparentBrush}" Grid.Column="2">
                  <igPrim:HeaderDropDownControl.OpenButtonContent>
                    <Grid Width="11" Height="8">
                      <Path x:Name="clearFilterGlyphStroke" Width="11" Height="8" Data="M 0,0 C0,0 11,0 11,0 11,0 7,4 7,4 7,4 7,8 7,8 7,8 4,8 4,8 4,8 4,4 4,4 4,4 0,0 0,0 z" Stretch="Fill" Fill="{StaticResource GlyphBorderBrush}" />
                      <Path x:Name="clearFilterGlyphFill" Width="7" Height="6" HorizontalAlignment="Center" VerticalAlignment="Center" Stretch="Fill" Data="M 0,0 C0,0 7,0 7,0 7,0 4,3 4,3 4,3 4,6 4,6 4,6 3,6 3,6 3,6 3,3 3,3 3,3 0,0 0,0 z" Fill="{StaticResource GlyphInnerBackgroundBrush}" />
                      <Path x:Name="redFilterGlyphFill" Width="7" Height="6" HorizontalAlignment="Center" VerticalAlignment="Center" Stretch="Fill" Data="M 0,0 C0,0 7,0 7,0 7,0 4,3 4,3 4,3 4,6 4,6 4,6 3,6 3,6 3,6 3,3 3,3 3,3 0,0 0,0 z" Fill="{StaticResource GlyphBorderBrush}" />
                    </Grid>
                  </igPrim:HeaderDropDownControl.OpenButtonContent>
                  <igPrim:FilterSelectorControl Height="370" Width="250" MinWidth="250" MinHeight="370" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch" Cell="{Binding Path=Cell,RelativeSource={RelativeSource TemplatedParent}}">
                  </igPrim:FilterSelectorControl>
                </igPrim:HeaderDropDownControl>
                <Grid x:Name="VisibilityToggleButton" Background="{StaticResource TransparentBrush}" Width="14" Visibility="Collapsed" Grid.Column="4" Cursor="Hand">
                  <Path Width="8" Height="7" Data="M 7,0 C7,0 7,1 7,1 7,1 6,1 6,1 6,1 6,2 6,2 6,2 5,2 5,2 5,2 5,3 5,3 5,3 4,3 4,3 4,3 4,4 4,4 4,4 5,4 5,4 5,4 5,5 5,5 5,5 6,5 6,5 6,5 6,6 6,6 6,6 7,6 7,6 7,6 7,7 7,7 7,7 8,7 8,7 8,7 8,5 8,5 8,5 7,5 7,5 7,5 7,4 7,4 7,4 6,4 6,4 6,4 6,3 6,3 6,3 7,3 7,3 7,3 7,2 7,2 7,2 8,2 8,2 8,2 8,0 8,0 8,0 7,0 7,0 zM 0,3 C0,3 0,4 0,4 0,4 1,4 1,4 1,4 1,5 1,5 1,5 2,5 2,5 2,5 2,6 2,6 2,6 3,6 3,6 3,6 3,7 3,7 3,7 4,7 4,7 4,7 4,6 4,6 4,6 4,5 4,5 4,5 3,5 3,5 3,5 3,4 3,4 3,4 2,4 2,4 2,4 2,3 2,3 2,3 3,3 3,3 3,3 3,2 3,2 3,2 4,2 4,2 4,2 4,1 4,1 4,1 4,0 4,0 4,0 3,0 3,0 3,0 3,1 3,1 3,1 2,1 2,1 2,1 2,2 2,2 2,2 1,2 1,2 1,2 1,3 1,3 1,3 0,3 0,3 z" Fill="{StaticResource GlyphBorderBrush}" />
                  <igBase:Commanding.Command>
                    <ig:XamGridColumnCommandSource CommandType="Hide" EventName="MouseLeftButtonDown" />
                  </igBase:Commanding.Command>
                </Grid>
              </Grid>
              <igPrim:HeaderDropDownControl Padding="0" Visibility="Collapsed" x:Name="HiddenRightAdjacentColumnsElement" Grid.Column="4">
                <ToolTipService.ToolTip>
                  <ToolTip Content="{Binding Cell.Column.ColumnLayout.Grid.ColumnChooserSettings.HiddenColumnIndicatorToolTipText, RelativeSource={RelativeSource TemplatedParent}}" />
                </ToolTipService.ToolTip>
                <igPrim:HeaderDropDownControl.OpenButtonContent>
                  <Rectangle Fill="{StaticResource HiddenColumnIndicatorBackgroundBrush}" Width="10" HorizontalAlignment="Right" />
                </igPrim:HeaderDropDownControl.OpenButtonContent>
                <Grid>
                  <Border x:Name="ColumnChooserBdRight" MaxHeight="200" Background="{StaticResource PopupBackgroundBrush}" BorderBrush="{StaticResource PopupBorderBrush}" BorderThickness="1" CornerRadius="3" Padding="1">
                    <Grid>
                      <Grid.ColumnDefinitions>
                        <ColumnDefinition MinWidth="24" MaxWidth="24" />
                        <ColumnDefinition />
                      </Grid.ColumnDefinitions>
                      <Grid.RowDefinitions>
                        <RowDefinition />
                        <RowDefinition Height="Auto" />
                      </Grid.RowDefinitions>
                      <Border Grid.RowSpan="2" BorderBrush="{StaticResource SeparatorBrush}" BorderThickness="0,0,1,0" />
                      <ListBox DataContext="{x:Null}" ItemsSource="{Binding Cell.ColumnsHiddenToRight, RelativeSource={RelativeSource TemplatedParent}}" Background="{StaticResource TransparentBrush}" BorderThickness="0" Padding="0" Margin="0" Grid.ColumnSpan="2">
                        <ListBox.ItemTemplate>
                          <DataTemplate>
                            <TextBlock Text="{Binding DisplayNameResolved}" />
                          </DataTemplate>
                        </ListBox.ItemTemplate>
                        <igBase:Commanding.Commands>
                          <igBase:CommandSourceCollection>
                            <ig:XamGridColumnCommandSource ParameterBinding="{Binding SelectedItem}" EventName="SelectionChanged" CommandType="Show" />
                            <igPrim:XamGridPopupCommandSource CommandType="ClosePopup" EventName="SelectionChanged" />
                          </igBase:CommandSourceCollection>
                        </igBase:Commanding.Commands>
                        <ListBox.Resources>
                          <Style TargetType="ScrollViewer" BasedOn="{StaticResource ScrollViewerStyle}" />
                        </ListBox.Resources>
                        <ListBox.ItemContainerStyle>
                          <StaticResource ResourceKey="ColumnChooserListBoxItemStyle" />
                        </ListBox.ItemContainerStyle>
                      </ListBox>
                      <StackPanel Background="{StaticResource TransparentBrush}" Grid.Row="1" Grid.ColumnSpan="2">
                        <Button Margin="0,1,0,0" Style="{StaticResource ColumnChooserDialogButtonStyle}">
                          <igBase:Commanding.Commands>
                            <igBase:CommandSourceCollection>
                              <ig:XamGridColumnChooserCommandSource CommandType="Open" EventName="Click" />
                              <igPrim:XamGridPopupCommandSource CommandType="ClosePopup" EventName="Click" />
                            </igBase:CommandSourceCollection>
                          </igBase:Commanding.Commands>
                          <TextBlock Text="{Binding Cell.Column.ColumnLayout.Grid.ColumnChooserSettings.ColumnChooserDisplayText, RelativeSource={RelativeSource TemplatedParent}}" Foreground="{StaticResource HeaderCellForegroundBrush}" />
                        </Button>
                      </StackPanel>
                    </Grid>
                  </Border>
                </Grid>
              </igPrim:HeaderDropDownControl>
            </Grid>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="MouseOver">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.001" Storyboard.TargetName="Bd" Storyboard.TargetProperty="Background">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{StaticResource HeaderCellHoverBackgroundBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames BeginTime="0" Storyboard.TargetName="NormalFill" Storyboard.TargetProperty="BorderBrush">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{StaticResource HeaderCellHoverBorderBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.001" Storyboard.TargetName="SortAndPinIndicators" Storyboard.TargetProperty="Background">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{StaticResource HeaderCellHoverBackgroundBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Moving">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames BeginTime="0" Storyboard.TargetName="NormalFill" Storyboard.TargetProperty="Background">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{StaticResource HeaderCellMovingBackgroundBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames BeginTime="0" Storyboard.TargetName="NormalFill" Storyboard.TargetProperty="BorderBrush">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{StaticResource HeaderCellMovingBorderBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames BeginTime="0" Storyboard.TargetName="NormalFill" Storyboard.TargetProperty="BorderThickness">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Thickness>
                            0,1
                          </Thickness>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="FixedIndicatorStates">
                <VisualState x:Name="NotFixable" />
                <VisualState x:Name="Pinned">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="PinnedIndicator" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>
                            Visible
                          </Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Unpinned">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="UnpinnedIndicator" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>
                            Visible
                          </Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="SummaryStates">
                <VisualState x:Name="Summable">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="SummaryHeaderDropDownControl" Storyboard.TargetProperty="(UIElement.Visibility)">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>
                            Visible
                          </Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Unsummable">
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="SortedStates">
                <VisualState x:Name="NotSorted">
                </VisualState>
                <VisualState x:Name="Ascending">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="SortedAscending" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>
                            Visible
                          </Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Descending">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="SortedDescending" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>
                            Visible
                          </Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="HeaderFilterStates">
                <VisualState x:Name="NoIcon">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="FilterHeaderDropDownControl" Storyboard.TargetProperty="(UIElement.Visibility)">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>
                            Collapsed
                          </Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="FilterIcon">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="FilterHeaderDropDownControl" Storyboard.TargetProperty="(UIElement.Visibility)">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>
                            Visible
                          </Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="HeaderFilterAppliedStates">
                <VisualState x:Name="NotFiltered">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="clearFilterGlyphFill" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>
                            Visible
                          </Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="redFilterGlyphFill" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>
                            Collapsed
                          </Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Filtered">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="clearFilterGlyphFill" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>
                            Collapsed
                          </Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="redFilterGlyphFill" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>
                            Visible
                          </Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="VisibilityIconStates">
                <VisualState x:Name="VisibilityIconHidden" />
                <VisualState x:Name="VisibilityIconVisible">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="VisibilityToggleButton" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>
                            Visible
                          </Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="LeftAdjacentColumnHiddenStates">
                <VisualState x:Name="NoHiddenLeftAdjacentColumns" />
                <VisualState x:Name="HiddenLeftAdjacentColumns">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HiddenLeftAdjacentColumnsElement" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>
                            Visible
                          </Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="RightAdjacentColumnHiddenStates">
                <VisualState x:Name="NoHiddenRightAdjacentColumns" />
                <VisualState x:Name="LastVisibleColumnWithHiddenRightAdjacentColumns">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HiddenRightAdjacentColumnsElement" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>
                            Visible
                          </Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
          </igPrim:SimpleClickableContainer>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="igPrim:HeaderCellControl" BasedOn="{StaticResource HeaderCellControlStyle}" />

  <!-- *********************************  ExpansionIndicatorHeaderCellControl Style  ********************************* -->
  <Style x:Key="ExpansionIndicatorHeaderCellControlStyle" TargetType="igPrim:ExpansionIndicatorHeaderCellControl">
    <Setter Property="FontSize" Value="11" />
    <Setter Property="Foreground" Value="{StaticResource HeaderCellForegroundBrush}" />
    <Setter Property="Background" Value="{StaticResource HeaderCellBackgroundBrush}" />
    <Setter Property="BorderBrush" Value="{StaticResource HeaderCellBorderBrush}" />
    <Setter Property="BorderThickness" Value="0,1,1,1" />
    <Setter Property="HorizontalContentAlignment" Value="Left" />
    <Setter Property="Padding" Value="4,0" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igPrim:ExpansionIndicatorHeaderCellControl">
          <Grid>
            <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" x:Name="NormalFill" />
            <ContentPresenter VerticalAlignment="{TemplateBinding VerticalContentAlignment}" d:LayoutOverrides="Width" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="igPrim:ExpansionIndicatorHeaderCellControl" BasedOn="{StaticResource ExpansionIndicatorHeaderCellControlStyle}" />

  <!-- *********************************  RowSelectorHeaderCellControl Style  ********************************* -->
  <Style x:Key="RowSelectorHeaderCellControlStyle" TargetType="igPrim:RowSelectorHeaderCellControl">
    <Setter Property="FontSize" Value="11" />
    <Setter Property="Foreground" Value="{StaticResource HeaderCellForegroundBrush}" />
    <Setter Property="Background" Value="{StaticResource HeaderCellBackgroundBrush}" />
    <Setter Property="BorderBrush" Value="{StaticResource HeaderCellBorderBrush}" />
    <Setter Property="BorderThickness" Value="0,1,1,1" />
    <Setter Property="HorizontalContentAlignment" Value="Left" />
    <Setter Property="Padding" Value="4,0" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igPrim:RowSelectorHeaderCellControl">
          <Grid>
            <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" x:Name="NormalFill" />
            <ContentPresenter VerticalAlignment="{TemplateBinding VerticalContentAlignment}" d:LayoutOverrides="Width" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="igPrim:RowSelectorHeaderCellControl" BasedOn="{StaticResource RowSelectorHeaderCellControlStyle}" />

  <!-- *********************************  AddNewRowExpansionIndicatorCellControl Style  ********************************* -->
  <Style x:Key="AddNewRowExpansionIndicatorCellControlStyle" TargetType="igPrim:AddNewRowExpansionIndicatorCellControl">
    <Setter Property="Background" Value="{StaticResource ExpansionCellBackgroundBrush}" />
    <Setter Property="BorderBrush" Value="{StaticResource ExpansionCellBorderBrush}" />
    <Setter Property="HorizontalContentAlignment" Value="Center" />
    <Setter Property="VerticalContentAlignment" Value="Center" />
    <Setter Property="BorderThickness" Value="0,1,1,1" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igPrim:AddNewRowExpansionIndicatorCellControl">
          <Grid Background="{StaticResource TransparentBrush}">
            <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" />
            <ContentPresenter Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" d:LayoutOverrides="Width" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="igPrim:AddNewRowExpansionIndicatorCellControl" BasedOn="{StaticResource AddNewRowExpansionIndicatorCellControlStyle}" />

  <!-- *********************************  AddNewRowSelectorCellControl Style  ********************************* -->
  <Style x:Key="AddNewRowSelectorCellControlStyle" TargetType="igPrim:AddNewRowSelectorCellControl">
    <Setter Property="Foreground" Value="{StaticResource GlyphBorderBrush}" />
    <Setter Property="Background" Value="{StaticResource AddNewRowSelectorCellBackgroundBrush}" />
    <Setter Property="BorderBrush" Value="{StaticResource AddNewRowSelectorCellBorderBrush}" />
    <Setter Property="BorderThickness" Value="0,1,1,1" />
    <Setter Property="HorizontalContentAlignment" Value="Center" />
    <Setter Property="VerticalContentAlignment" Value="Center" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igPrim:AddNewRowSelectorCellControl">
          <Grid>
            <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" />
            <Path Fill="{TemplateBinding Foreground}" Stretch="Fill" Data="M3.5,0.5 L6.5,0.5 L6.5,3.5 L9.5,3.5 L9.5,6.5 L6.5,6.5 L6.5,9.5 L3.5,9.5 L3.5,6.5 L0.5,6.5 L0.5,3.5 L3.5,3.5 z" Width="10" Height="10" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="igPrim:AddNewRowSelectorCellControl" BasedOn="{StaticResource AddNewRowSelectorCellControlStyle}" />

  <!-- *********************************  AddNewRowCellControl Style  ********************************* -->
  <Style x:Key="AddNewRowCellControlStyle" TargetType="igPrim:AddNewRowCellControl">
    <Setter Property="FontSize" Value="11" />
    <Setter Property="Background" Value="{StaticResource AddNewRowCellBackgroundBrush}" />
    <Setter Property="BorderBrush" Value="{StaticResource AddNewRowCellBorderBrush}" />
    <Setter Property="BorderThickness" Value="0,1,1,1" />
    <Setter Property="HorizontalContentAlignment" Value="Left" />
    <Setter Property="VerticalContentAlignment" Value="Center" />
    <Setter Property="Padding" Value="5" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igPrim:AddNewRowCellControl">
          <Grid>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="MouseOver">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="MouseOver1" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>
                            Visible
                          </Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Alternate" />
              </VisualStateGroup>
              <VisualStateGroup x:Name="SelectedStates">
                <VisualState x:Name="NotSelected" />
                <VisualState x:Name="Selected" />
              </VisualStateGroup>
              <VisualStateGroup x:Name="ActiveStates">
                <VisualState x:Name="InActive" />
                <VisualState x:Name="Active">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="ActiveSelected" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>
                            Visible
                          </Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="FixedStates">
                <VisualState x:Name="Fixed" />
                <VisualState x:Name="Unfixed" />
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Border x:Name="AddNewRowElem" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" />
            <Rectangle Fill="{StaticResource CellItemHoverBackgroundBrush}" x:Name="MouseOver1" Visibility="Collapsed" Margin="{TemplateBinding BorderThickness}" />
            <Border x:Name="ActiveSelected" Background="{StaticResource CellItemActiveBackgroundBrush}" BorderBrush="{StaticResource CellItemActiveBorderBrush}" BorderThickness="2" Visibility="Collapsed" />
            <ContentPresenter VerticalAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="igPrim:AddNewRowCellControl" BasedOn="{StaticResource AddNewRowCellControlStyle}" />

  <!-- *********************************  ExpansionIndicatorCellControl Style  ********************************* -->
  <Style x:Key="ExpansionIndicatorCellControlStyle" TargetType="igPrim:ExpansionIndicatorCellControl">
    <Setter Property="Background" Value="{StaticResource ExpansionCellBackgroundBrush}" />
    <Setter Property="BorderBrush" Value="{StaticResource ExpansionCellBorderBrush}" />
    <Setter Property="BorderThickness" Value="0,0,1,1" />
    <Setter Property="HorizontalContentAlignment" Value="Center" />
    <Setter Property="VerticalContentAlignment" Value="Center" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igPrim:ExpansionIndicatorCellControl">
          <Grid Background="{StaticResource TransparentBrush}">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="MouseOver">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames BeginTime="0" Storyboard.TargetName="hoverBd" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>
                            Visible
                          </Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Alternate">
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" />
            <Border x:Name="hoverBd" BorderBrush="{StaticResource ExpansionCellHoverBorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{StaticResource ExpansionCellHoverBackgroundBrush}" Visibility="Collapsed" />
            <ContentPresenter Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" d:LayoutOverrides="Width" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" />
            <igPrim:ExpansionIndicator x:Name="Indicator" Visibility="Collapsed" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" d:LayoutOverrides="Width" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Cursor="Hand">
              <igPrim:ExpansionIndicator.Style>
                <Style TargetType="igPrim:ExpansionIndicator">
                  <Setter Property="Foreground" Value="{StaticResource ExpansionIndicatorForegroundBrush}" />
                  <Setter Property="Width" Value="20" />
                  <Setter Property="Height" Value="20" />
                  <Setter Property="Template">
                    <Setter.Value>
                      <ControlTemplate TargetType="igPrim:ExpansionIndicator">
                        <Grid Background="{StaticResource TransparentBrush}">
                          <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="ExpansionStates">
                              <VisualStateGroup.Transitions>
                                <VisualTransition From="Collapsed" To="Expanded" GeneratedDuration="00:00:00.2000000">
                                </VisualTransition>
                                <VisualTransition From="Expanded" To="Collapsed" GeneratedDuration="00:00:00.2000000">
                                </VisualTransition>
                              </VisualStateGroup.Transitions>
                              <VisualState x:Name="Expanded">
                                <Storyboard>
                                  <DoubleAnimation Duration="0" To="90" Storyboard.TargetName="ExpansionIndicatorGlyph" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)">
                                  </DoubleAnimation>
                                </Storyboard>
                              </VisualState>
                              <VisualState x:Name="Collapsed">
                                <Storyboard>
                                  <DoubleAnimation Duration="0" To="0" Storyboard.TargetName="ExpansionIndicatorGlyph" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)">
                                  </DoubleAnimation>
                                </Storyboard>
                              </VisualState>
                            </VisualStateGroup>
                          </VisualStateManager.VisualStateGroups>
                          <Grid x:Name="ExpansionIndicator" HorizontalAlignment="Center" VerticalAlignment="Center">
                            <Rectangle Fill="{StaticResource TransparentBrush}" />
                            <Path Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" Data="M8,5 L8,14 L14,9.5 z" x:Name="ExpansionIndicatorGlyph" HorizontalAlignment="Center" VerticalAlignment="Center" Fill="{TemplateBinding Foreground}" RenderTransformOrigin="0.5,0.5">
                              <Path.RenderTransform>
                                <TransformGroup>
                                  <ScaleTransform />
                                  <SkewTransform />
                                  <RotateTransform />
                                  <TranslateTransform />
                                </TransformGroup>
                              </Path.RenderTransform>
                            </Path>
                          </Grid>
                        </Grid>
                      </ControlTemplate>
                    </Setter.Value>
                  </Setter>
                </Style>
              </igPrim:ExpansionIndicator.Style>
            </igPrim:ExpansionIndicator>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="igPrim:ExpansionIndicatorCellControl" BasedOn="{StaticResource ExpansionIndicatorCellControlStyle}" />

  <!-- *********************************  RowSelectorCellControl Style  ********************************* -->
  <Style x:Key="RowSelectorCellControlStyle" TargetType="igPrim:RowSelectorCellControl">
    <Setter Property="Foreground" Value="{StaticResource CellItemForegroundBrush}" />
    <Setter Property="Background" Value="{StaticResource CellItemBackgroundBrush}" />
    <Setter Property="BorderBrush" Value="{StaticResource CellItemBorderBrush}" />
    <Setter Property="BorderThickness" Value="0,0,1,1" />
    <Setter Property="HorizontalContentAlignment" Value="Center" />
    <Setter Property="VerticalContentAlignment" Value="Center" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igPrim:RowSelectorCellControl">
          <Grid>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="MouseOver">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="hoverBd" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>
                            Visible
                          </Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Alternate" />
              </VisualStateGroup>
              <VisualStateGroup x:Name="ActiveStates">
                <VisualState x:Name="InActive" />
                <VisualState x:Name="Active" />
                <VisualState x:Name="Editing">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="EditingIndicator" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>
                            Visible
                          </Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="SelectedStates">
                <VisualState x:Name="NotSelected" />
                <VisualState x:Name="Selected">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="selectedBd" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>
                            Visible
                          </Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Border x:Name="Root" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" />
            <Border x:Name="hoverBd" Background="{StaticResource RowSelectorCellHoverBackgroundBrush}" BorderBrush="{StaticResource RowSelectorCellHoverBorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Visibility="Collapsed" />
            <Border x:Name="selectedBd" Background="{StaticResource RowSelectorCellActiveBackgroundBrush}" BorderBrush="{StaticResource RowSelectorCellActiveBorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Visibility="Collapsed" />
            <Path x:Name="EditingIndicator" Visibility="Collapsed" Width="6" Height="12" Data="M 2.284,10.299 C2.284,10.299 2.5,10.434 2.5,10.434 2.5,10.434 2.699,9.991 2.699,9.991 2.699,9.991 3.5,9.391 3.5,9.391 3.5,9.391 3.054,9.193 3.054,9.193 3.054,9.193 6,2.608 6,2.608 6,2.608 6,0.521 6,0.521 6,0.521 3.5,0 3.5,0 3.5,0 3,1.565 3,1.565 3,1.565 0.360,7.987 0.360,7.987 0.360,7.987 0,7.826 0,7.826 0,7.826 0,8.869 0,8.869 0,8.869 0,12 0,12 0,12 2.284,10.299 2.284,10.299 z" Margin="3,0,0,0" Stretch="Fill" HorizontalAlignment="Left" Fill="{StaticResource EditingIndicatorBackgroundBrush}" />
            <ContentPresenter VerticalAlignment="{TemplateBinding VerticalContentAlignment}" d:LayoutOverrides="Width" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="igPrim:RowSelectorCellControl" BasedOn="{StaticResource RowSelectorCellControlStyle}" />

  <!-- *********************************  CellControl Style  ********************************* -->
  <Style x:Key="CellControlStyle" TargetType="ig:CellControl">
    <Setter Property="FontSize" Value="11" />
    <Setter Property="Foreground" Value="{StaticResource CellItemForegroundBrush}" />
    <Setter Property="Background" Value="{StaticResource CellItemBackgroundBrush}" />
    <Setter Property="BorderBrush" Value="{StaticResource CellItemBorderBrush}" />
    <Setter Property="BorderThickness" Value="0,0,1,1" />
    <Setter Property="Padding" Value="4" />
    <Setter Property="HorizontalContentAlignment" Value="Left" />
    <Setter Property="VerticalContentAlignment" Value="Center" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="ig:CellControl">
          <Grid>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="MouseOver" />
                <VisualState x:Name="Alternate" />
              </VisualStateGroup>
              <VisualStateGroup x:Name="SelectedStates">
                <VisualState x:Name="NotSelected" />
                <VisualState x:Name="Selected">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="rowSelected" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>
                            Visible
                          </Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="ActiveStates">
                <VisualState x:Name="InActive" />
                <VisualState x:Name="Active">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ActiveSelected" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>
                            Visible
                          </Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" x:Name="Root" />
            <Border x:Name="rowSelected" Background="{StaticResource CellItemSelectedBackgroundBrush}" BorderBrush="{StaticResource CellItemSelectedBorderBrush}" Visibility="Collapsed" Margin="{TemplateBinding BorderThickness}" />
            <Border x:Name="ActiveSelected" Background="{StaticResource CellItemActiveBackgroundBrush}" BorderBrush="{StaticResource CellItemActiveBorderBrush}" BorderThickness="2" Visibility="Collapsed" />
            <ContentPresenter VerticalAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="ig:CellControl" BasedOn="{StaticResource CellControlStyle}" />

  <!-- *********************************  ChildBandCellControl Style  ********************************* -->
  <Style x:Key="ChildBandCellControlStyle" TargetType="igPrim:ChildBandCellControl">
    <Setter Property="FontSize" Value="11" />
    <Setter Property="Foreground" Value="{StaticResource HeaderCellForegroundBrush}" />
    <Setter Property="Background" Value="{StaticResource HeaderCellBackgroundBrush}" />
    <Setter Property="BorderBrush" Value="{StaticResource HeaderCellBorderBrush}" />
    <Setter Property="BorderThickness" Value="0,0,1,1" />
    <Setter Property="HorizontalContentAlignment" Value="Left" />
    <Setter Property="Padding" Value="4" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igPrim:ChildBandCellControl">
          <Grid>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="MouseOver">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="MouseOver1" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>
                            Visible
                          </Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="ActiveStates">
                <VisualState x:Name="InActive" />
                <VisualState x:Name="Active">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="ActiveRect" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>
                            Visible
                          </Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" x:Name="NormalFill" />
            <Rectangle Fill="{StaticResource CellItemSelectedBackgroundBrush}" x:Name="ActiveRect" Visibility="Collapsed" Margin="{TemplateBinding BorderThickness}" />
            <Rectangle Fill="{StaticResource HeaderCellHoverBackgroundBrush}" x:Name="MouseOver1" Visibility="Collapsed" Margin="{TemplateBinding BorderThickness}" />
            <ContentPresenter VerticalAlignment="{TemplateBinding VerticalContentAlignment}" d:LayoutOverrides="Width" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="igPrim:ChildBandCellControl" BasedOn="{StaticResource ChildBandCellControlStyle}" />

  <!-- *********************************  FilterRowExpansionIndicatorCellControl Style  ********************************* -->
  <Style x:Key="FilterRowExpansionIndicatorCellControlStyle" TargetType="igPrim:FilterRowExpansionIndicatorCellControl">
    <Setter Property="Background" Value="{StaticResource ExpansionCellBackgroundBrush}" />
    <Setter Property="BorderBrush" Value="{StaticResource ExpansionCellBorderBrush}" />
    <Setter Property="BorderThickness" Value="0,1,1,1" />
    <Setter Property="HorizontalContentAlignment" Value="Center" />
    <Setter Property="VerticalContentAlignment" Value="Center" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igPrim:FilterRowExpansionIndicatorCellControl">
          <Grid Background="{StaticResource TransparentBrush}">
            <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" />
            <ContentPresenter Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" d:LayoutOverrides="Width" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="igPrim:FilterRowExpansionIndicatorCellControl" BasedOn="{StaticResource FilterRowExpansionIndicatorCellControlStyle}" />

  <!-- *********************************  FilterRowSelectorCellControl Style  ********************************* -->
  <Style x:Key="FilterRowSelectorCellControlStyle" TargetType="igPrim:FilterRowSelectorCellControl">
    <Setter Property="Foreground" Value="{StaticResource CellItemForegroundBrush}" />
    <Setter Property="Background" Value="{StaticResource FilterRowSelectorCellBackgroundBrush}" />
    <Setter Property="BorderBrush" Value="{StaticResource FilterRowSelectorCellBorderBrush}" />
    <Setter Property="BorderThickness" Value="0,1,1,1" />
    <Setter Property="HorizontalContentAlignment" Value="Center" />
    <Setter Property="VerticalContentAlignment" Value="Center" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igPrim:FilterRowSelectorCellControl">
          <Grid>
            <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" />
            <Grid Width="15" Height="9">
              <Path Width="11" Height="9" Data="M 0,0 C0,0 0,1 0,1 0,1 1,1 1,1 1,1 1,2 1,2 1,2 2,2 2,2 2,2 2,3 2,3 2,3 3,3 3,3 3,3 3,4 3,4 3,4 4,4 4,4 4,4 4,9 4,9 4,9 7,9 7,9 7,9 7,4 7,4 7,4 8,4 8,4 8,4 8,3 8,3 8,3 9,3 9,3 9,3 9,2 9,2 9,2 10,2 10,2 10,2 10,1 10,1 10,1 11,1 11,1 11,1 11,0 11,0 11,0 0,0 0,0 z" Stretch="Fill" Fill="{StaticResource GlyphBorderBrush}" />
              <Path Width="5" Height="3" HorizontalAlignment="Left" VerticalAlignment="Bottom" Data="M 0,0 C0,0 0,1 0,1 0,1 1,1 1,1 1,1 1,2 1,2 1,2 2,2 2,2 2,2 2,3 2,3 2,3 3,3 3,3 3,3 3,2 3,2 3,2 4,2 4,2 4,2 4,1 4,1 4,1 5,1 5,1 5,1 5,0 5,0 5,0 0,0 0,0 z" Fill="{StaticResource GlyphBorderBrush}" Stretch="Fill" />
            </Grid>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="igPrim:FilterRowSelectorCellControl" BasedOn="{StaticResource FilterRowSelectorCellControlStyle}" />

  <!-- *********************************  FilterRowCellControl Style  ********************************* -->
  <Style x:Key="FilterRowCellControlStyle" TargetType="igPrim:FilterRowCellControl">
    <Setter Property="FontSize" Value="11" />
    <Setter Property="Background" Value="{StaticResource FilterRowCellBackgroundBrush}" />
    <Setter Property="BorderBrush" Value="{StaticResource FilterRowCellBorderBrush}" />
    <Setter Property="BorderThickness" Value="0,1,1,1" />
    <Setter Property="Padding" Value="4" />
    <Setter Property="HorizontalContentAlignment" Value="Left" />
    <Setter Property="VerticalContentAlignment" Value="Center" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igPrim:FilterRowCellControl">
          <Grid x:Name="FilterUIArea">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="MouseOver">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="MouseOver1" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>
                            Visible
                          </Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Alternate" />
              </VisualStateGroup>
              <VisualStateGroup x:Name="SelectedStates">
                <VisualState x:Name="NotSelected" />
                <VisualState x:Name="Selected" />
              </VisualStateGroup>
              <VisualStateGroup x:Name="ActiveStates">
                <VisualState x:Name="InActive" />
                <VisualState x:Name="Active" />
              </VisualStateGroup>
              <VisualStateGroup x:Name="FixedStates">
                <VisualState x:Name="Fixed" />
                <VisualState x:Name="Unfixed" />
              </VisualStateGroup>
              <VisualStateGroup x:Name="AllowFiltering">
                <VisualState x:Name="ShowFilterUIWithCancelButton">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00" Storyboard.TargetName="ClearFilters" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>
                            Visible
                          </Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="ShowFilterUI" />
                <VisualState x:Name="HideFilterUI">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="ClearFilters" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>
                            Collapsed
                          </Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="OperatorControl" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>
                            Collapsed
                          </Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="FilterCellValueVisibility">
                <VisualState x:Name="ShowFilterCellValue">
                </VisualState>
                <VisualState x:Name="HideFilterCellValue">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="FilterCellValueContent" Storyboard.TargetProperty="(UIElement.Visibility)">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>
                            Collapsed
                          </Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="FilterLabel" Storyboard.TargetProperty="(UIElement.Visibility)">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Border x:Name="FilterRowElem" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" />
            <Rectangle Fill="{StaticResource CellItemHoverBackgroundBrush}" x:Name="MouseOver1" Visibility="Collapsed" Margin="{TemplateBinding BorderThickness}" />
            <Grid>
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto">
                </ColumnDefinition>
                <ColumnDefinition Width="*">
                </ColumnDefinition>
                <ColumnDefinition Width="Auto">
                </ColumnDefinition>
              </Grid.ColumnDefinitions>
              <igPrim:FilterControl x:Name="OperatorControl" Grid.Column="0" />
              <ContentPresenter x:Name="FilterCellValueContent" Grid.Column="1" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="0,3,3,3" />
              <TextBlock Visibility="Collapsed" x:Name="FilterLabel" Grid.Column="1" Text="{Binding Cell.FilteringOperandResolved.DisplayName, RelativeSource={RelativeSource TemplatedParent}}" VerticalAlignment="Center" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" />
              <ContentControl x:Name="ClearFilters" Grid.Column="2" Padding="0,0,5,0" Visibility="Collapsed" HorizontalAlignment="Center" VerticalAlignment="Center">
                <igBase:Commanding.Command>
                  <ig:XamGridFilteringCommandSource EventName="MouseLeftButtonDown" CommandType="ClearFilters">
                  </ig:XamGridFilteringCommandSource>
                </igBase:Commanding.Command>
                <Grid Width="15" Height="10" Background="{StaticResource TransparentBrush}" Cursor="Hand">
                  <Path Width="11" Height="8" Data="M 0,0 C0,0 11,0 11,0 11,0 7,4 7,4 7,4 7,8 7,8 7,8 4,8 4,8 4,8 4,4 4,4 4,4 0,0 0,0 z" Stretch="Fill" Fill="{StaticResource GlyphBorderBrush}" />
                  <Path Width="7" Height="6" HorizontalAlignment="Center" VerticalAlignment="Center" Stretch="Fill" Data="M 0,0 C0,0 7,0 7,0 7,0 4,3 4,3 4,3 4,6 4,6 4,6 3,6 3,6 3,6 3,3 3,3 3,3 0,0 0,0 z" Fill="{StaticResource GlyphInnerBackgroundBrush}" />
                  <Path x:Name="clearFilterGlyphAdorner" HorizontalAlignment="Center" VerticalAlignment="Bottom" Height="4" Width="5" Stretch="Fill" Opacity="1" Data="M 0,0 C0,0 0,1 0,1 0,1 1,1 1,1 1,1 1,3 1,3 1,3 0,3 0,3 0,3 0,4 0,4 0,4 2,4 2,4 2,4 2,3 2,3 2,3 3,3 3,3 3,3 3,4 3,4 3,4 5,4 5,4 5,4 5,3 5,3 5,3 4,3 4,3 4,3 4,1 4,1 4,1 5,1 5,1 5,1 5,0 5,0 5,0 3,0 3,0 3,0 3,1 3,1 3,1 2,1 2,1 2,1 2,0 2,0 2,0 0,0 0,0 z" Fill="{StaticResource GlyphBorderBrush}" Margin="10,4,0,0" />
                </Grid>
              </ContentControl>
            </Grid>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="igPrim:FilterRowCellControl" BasedOn="{StaticResource FilterRowCellControlStyle}" />

  <!-- *********************************  FilterDropdownToggleButotn Style  ********************************* -->
  <Style x:Key="FilterDropdownToggleButtonStyle" TargetType="ToggleButton">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="ToggleButton">
          <Grid Background="{StaticResource TransparentBrush}">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="MouseOver" />
                <VisualState x:Name="Pressed" />
                <VisualState x:Name="Disabled" />
              </VisualStateGroup>
              <VisualStateGroup x:Name="CheckStates">
                <VisualState x:Name="Checked" />
                <VisualState x:Name="Unchecked" />
              </VisualStateGroup>
              <VisualStateGroup x:Name="FocusStates">
                <VisualState x:Name="Focused" />
                <VisualState x:Name="Unfocused" />
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <ContentPresenter x:Name="contentPresenter" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- *********************************  FilterDropdown Style  ********************************* -->
  <Style x:Key="FilterDropdownStyle" TargetType="ComboBox">
    <Setter Property="Background" Value="{StaticResource PopupBackgroundBrush}" />
    <Setter Property="BorderBrush" Value="{StaticResource PopupBorderBrush}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="ComboBox">
          <Grid>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="MouseOver" />
                <VisualState x:Name="Disabled" />
              </VisualStateGroup>
              <VisualStateGroup x:Name="FocusStates">
                <VisualState x:Name="Focused" />
                <VisualState x:Name="Unfocused" />
                <VisualState x:Name="FocusedDropDown">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Duration="00:00:00" Storyboard.TargetName="PopupBorder" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>
                            Visible
                          </Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="ValidationStates">
                <VisualState x:Name="Valid" />
                <VisualState x:Name="InvalidUnfocused" />
                <VisualState x:Name="InvalidFocused" />
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Border x:Name="ContentPresenterBorder">
              <Grid>
                <ToggleButton x:Name="DropDownToggle" Background="{StaticResource TransparentBrush}" HorizontalAlignment="Stretch" Margin="0" Style="{StaticResource FilterDropdownToggleButtonStyle}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" HorizontalContentAlignment="Right" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay,               RelativeSource={RelativeSource TemplatedParent}}" />
                <ContentPresenter x:Name="ContentPresenter" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
              </Grid>
            </Border>
            <Popup x:Name="Popup" IsOpen="{TemplateBinding IsDropDownOpen}">
              <Border x:Name="PopupBorder" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="3">
                <ScrollViewer x:Name="ScrollViewer" BorderThickness="0" Padding="1" Background="{StaticResource TransparentBrush}" Style="{StaticResource ScrollViewerStyle}">
                  <ItemsPresenter />
                </ScrollViewer>
              </Border>
            </Popup>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- *********************************  FilterControl Style  ********************************* -->
  <Style x:Key="FilterControlStyle" TargetType="igPrim:FilterControl">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igPrim:FilterControl">
          <Grid>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="FilterImage">
                <VisualState x:Name="Equals">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="FilterComparisonButton" Storyboard.TargetProperty="(Content)">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="=">
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="StartsWith">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="FilterComparisonButton" Storyboard.TargetProperty="(Content)">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="ABc">
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="EndsWith">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="FilterComparisonButton" Storyboard.TargetProperty="(Content)">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="aBC">
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="GreaterThan">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="FilterComparisonButton" Storyboard.TargetProperty="(Content)">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00" Value=">">
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Button x:Name="FilterOperandButton" Width="20" HorizontalAlignment="Left" ContentTemplate="{TemplateBinding SelectedItemIcon}" VerticalContentAlignment="Center" HorizontalContentAlignment="Center" Style="{StaticResource NoChromeButtonStyle}" />
            <ComboBox x:Name="FilterOperands" Width="16" Style="{StaticResource FilterDropdownStyle}" Cursor="Hand" ItemContainerStyle="{StaticResource ComboBoxItemStyle}">
              <ComboBox.ItemTemplate>
                <DataTemplate>
                  <Grid>
                    <Grid.ColumnDefinitions>
                      <ColumnDefinition Width="16" />
                      <ColumnDefinition />
                    </Grid.ColumnDefinitions>
                    <ContentControl ContentTemplate="{Binding IconResolved}" VerticalAlignment="Center" HorizontalAlignment="Center">
                    </ContentControl>
                    <TextBlock Text="{Binding DisplayName}" Grid.Column="1" Margin="5,0,0,0">
                    </TextBlock>
                  </Grid>
                </DataTemplate>
              </ComboBox.ItemTemplate>
            </ComboBox>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="igPrim:FilterControl" BasedOn="{StaticResource FilterControlStyle}" />

  <!-- *********************************  SummaryRowExpansionIndicatorCellControl Style  ********************************* -->
  <Style x:Key="SummaryRowExpansionIndicatorCellControlStyle" TargetType="igPrim:SummaryRowExpansionIndicatorCellControl">
    <Setter Property="Background" Value="{StaticResource ExpansionCellBackgroundBrush}" />
    <Setter Property="BorderBrush" Value="{StaticResource ExpansionCellBorderBrush}" />
    <Setter Property="BorderThickness" Value="0,1,1,1" />
    <Setter Property="HorizontalContentAlignment" Value="Center" />
    <Setter Property="VerticalContentAlignment" Value="Center" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igPrim:SummaryRowExpansionIndicatorCellControl">
          <Grid Background="{StaticResource TransparentBrush}">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="MouseOver" />
                <VisualState x:Name="Alternate" />
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" />
            <ContentPresenter Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" d:LayoutOverrides="Width" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="igPrim:SummaryRowExpansionIndicatorCellControl" BasedOn="{StaticResource SummaryRowExpansionIndicatorCellControlStyle}" />

  <!-- *********************************  SummaryRowSelectorCellControl Style  ********************************* -->
  <Style x:Key="SummaryRowSelectorCellControlStyle" TargetType="igPrim:SummaryRowSelectorCellControl">
    <Setter Property="Foreground" Value="{StaticResource CellItemForegroundBrush}" />
    <Setter Property="Background" Value="{StaticResource SummaryRowSelectorCellBackgroundBrush}" />
    <Setter Property="BorderBrush" Value="{StaticResource SummaryRowSelectorCellBorderBrush}" />
    <Setter Property="BorderThickness" Value="0,1,1,1" />
    <Setter Property="HorizontalContentAlignment" Value="Center" />
    <Setter Property="VerticalContentAlignment" Value="Center" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igPrim:SummaryRowSelectorCellControl">
          <Grid>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="MouseOver" />
                <VisualState x:Name="Alternate" />
              </VisualStateGroup>
              <VisualStateGroup x:Name="ActiveStates">
                <VisualState x:Name="InActive" />
                <VisualState x:Name="Active" />
              </VisualStateGroup>
              <VisualStateGroup x:Name="SelectedStates">
                <VisualState x:Name="NotSelected" />
                <VisualState x:Name="Selected" />
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" />
            <Path x:Name="summarySigmaIcon" Data="M 5.5,-0.5 C5.5,-0.5 5.5,0.5 5.5,0.5 5.5,0.5 1.5,0.5 1.5,0.5 1.5,0.5 4.5,3.5 4.5,3.5 4.5,3.5 1.5,6.5 1.5,6.5 1.5,6.5 5.5,6.5 5.5,6.5 5.5,6.5 5.5,7.5 5.5,7.5 5.5,7.5 -0.5,7.5 -0.5,7.5 -0.5,7.5 -0.5,6.5 -0.5,6.5 -0.5,6.5 2.5,3.5 2.5,3.5 2.5,3.5 -0.5,0.5 -0.5,0.5 -0.5,0.5 -0.5,-0.5 -0.5,-0.5 -0.5,-0.5 5.5,-0.5 5.5,-0.5 z" Fill="{StaticResource GlyphBorderBrush}" Width="6" Height="8" Stretch="Fill" StrokeThickness="0" RenderTransformOrigin="0.5, 0.5" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="igPrim:SummaryRowSelectorCellControl" BasedOn="{StaticResource SummaryRowSelectorCellControlStyle}" />

  <!-- *********************************  SummaryRowCellControl Style  ********************************* -->
  <Style x:Key="SummaryRowCellControlStyle" TargetType="igPrim:SummaryRowCellControl">
    <Setter Property="FontSize" Value="11" />
    <Setter Property="Background" Value="{StaticResource SummaryRowCellBackgroundBrush}" />
    <Setter Property="BorderBrush" Value="{StaticResource SummaryRowCellBorderBrush}" />
    <Setter Property="BorderThickness" Value="0,1,1,1" />
    <Setter Property="Padding" Value="7,3" />
    <Setter Property="HorizontalContentAlignment" Value="Right" />
    <Setter Property="VerticalContentAlignment" Value="Center" />
    <Setter Property="SummaryDisplayTemplate">
      <Setter.Value>
        <DataTemplate>
          <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
            <TextBlock Text="{Binding SummaryDefinition.SummaryOperand.RowDisplayLabelResolved}" />
            <TextBlock Text=" = " />
            <TextBlock Text="{Binding Converter={StaticResource SDFormatStringConverter}}" />
          </StackPanel>
        </DataTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igPrim:SummaryRowCellControl">
          <Grid>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="MouseOver" />
                <VisualState x:Name="Alternate" />
              </VisualStateGroup>
              <VisualStateGroup x:Name="SelectedStates">
                <VisualState x:Name="NotSelected" />
                <VisualState x:Name="Selected" />
              </VisualStateGroup>
              <VisualStateGroup x:Name="ActiveStates">
                <VisualState x:Name="InActive" />
                <VisualState x:Name="Active">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00" Storyboard.TargetName="ActiveRect" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>
                            Visible
                          </Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="FixedStates">
                <VisualState x:Name="Fixed" />
                <VisualState x:Name="Unfixed" />
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Border x:Name="AddNewRowElem" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}">
              <Rectangle Height="1" VerticalAlignment="Top" Fill="{StaticResource CellItemInnerBorderBrush}" />
            </Border>
            <Rectangle Fill="{StaticResource CellItemActiveBackgroundBrush}" Stroke="{StaticResource CellItemActiveBorderBrush}" StrokeThickness="2" x:Name="ActiveRect" Visibility="Collapsed">
            </Rectangle>
            <StackPanel x:Name="SummaryDisplay" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="{TemplateBinding Padding}" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="igPrim:SummaryRowCellControl" BasedOn="{StaticResource SummaryRowCellControlStyle}" />

  <!-- *********************************  SummarySelectionControl Style  ********************************* -->
  <Style x:Key="SummarySelectionControlStyle" TargetType="igPrim:SummarySelectionControl">
    <Setter Property="Background" Value="{StaticResource PopupBackgroundBrush}" />
    <Setter Property="BorderBrush" Value="{StaticResource PopupBorderBrush}" />
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="Padding" Value="6" />
    <Setter Property="Margin" Value="0" />
    <Setter Property="CheckBoxStyle" Value="{StaticResource CheckBoxStyle}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igPrim:SummarySelectionControl">
          <Border x:Name="Bd" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="3" Padding="1">
            <Grid>
              <Grid.RowDefinitions>
                <RowDefinition />
                <RowDefinition Height="Auto" />
              </Grid.RowDefinitions>
              <Border BorderBrush="{StaticResource SeparatorBrush}" BorderThickness="0,0,1,0" Width="24" HorizontalAlignment="Left" Margin="0,-1,0,0" />
              <StackPanel x:Name="Panel" Margin="{TemplateBinding Padding}" />
              <Rectangle Height="1" Fill="{StaticResource SeparatorBrush}" VerticalAlignment="Top" Margin="1,0" Grid.Row="1" />
              <StackPanel x:Name="selectionButtons" Orientation="Horizontal" HorizontalAlignment="Right" Grid.Row="1" Margin="{TemplateBinding Padding}">
                <Button x:Name="AcceptButton" Margin="0,0,5,0" Cursor="Hand" Content="{Binding OKCaption, RelativeSource={RelativeSource TemplatedParent}}" Width="80" Style="{StaticResource ButtonStyle}">
                  <igBase:Commanding.Commands>
                    <igBase:CommandSourceCollection>
                      <ig:SummarySelectionControlCommandSource CommandType="AcceptChanges" EventName="Click">
                      </ig:SummarySelectionControlCommandSource>
                      <igPrim:XamGridPopupCommandSource CommandType="ClosePopup" EventName="Click">
                      </igPrim:XamGridPopupCommandSource>
                    </igBase:CommandSourceCollection>
                  </igBase:Commanding.Commands>
                </Button>
                <Button x:Name="CancelButton" Cursor="Hand" Content="{Binding CancelCaption, RelativeSource={RelativeSource TemplatedParent}}" Width="80" Style="{StaticResource ButtonStyle}">
                  <igBase:Commanding.Command>
                    <igPrim:XamGridPopupCommandSource CommandType="ClosePopup" EventName="Click">
                    </igPrim:XamGridPopupCommandSource>
                  </igBase:Commanding.Command>
                </Button>
              </StackPanel>
            </Grid>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="igPrim:SummarySelectionControl" BasedOn="{StaticResource SummarySelectionControlStyle}" />

  <!-- *********************************  ExpansionIndicatorFooterCellControl Style  ********************************* -->
  <Style x:Key="ExpansionIndicatorFooterCellControlStyle" TargetType="igPrim:ExpansionIndicatorFooterCellControl">
    <Setter Property="FontSize" Value="11" />
    <Setter Property="Foreground" Value="{StaticResource FooterCellForegroundBrush}" />
    <Setter Property="Background" Value="{StaticResource FooterCellBackgroundBrush}" />
    <Setter Property="BorderBrush" Value="{StaticResource FooterCellBorderBrush}" />
    <Setter Property="BorderThickness" Value="0,1,1,0" />
    <Setter Property="HorizontalContentAlignment" Value="Left" />
    <Setter Property="Padding" Value="4" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igPrim:ExpansionIndicatorFooterCellControl">
          <Grid>
            <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" x:Name="NormalFill" />
            <ContentPresenter VerticalAlignment="{TemplateBinding VerticalContentAlignment}" d:LayoutOverrides="Width" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="igPrim:ExpansionIndicatorFooterCellControl" BasedOn="{StaticResource ExpansionIndicatorFooterCellControlStyle}" />

  <!-- *********************************  RowSelectorFooterCellControl Style  ********************************* -->
  <Style x:Key="RowSelectorFooterCellControlStyle" TargetType="igPrim:RowSelectorFooterCellControl">
    <Setter Property="FontSize" Value="11" />
    <Setter Property="Foreground" Value="{StaticResource FooterCellForegroundBrush}" />
    <Setter Property="Background" Value="{StaticResource FooterCellBackgroundBrush}" />
    <Setter Property="BorderBrush" Value="{StaticResource FooterCellBorderBrush}" />
    <Setter Property="BorderThickness" Value="0,1,1,0" />
    <Setter Property="HorizontalContentAlignment" Value="Left" />
    <Setter Property="Padding" Value="4" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igPrim:RowSelectorFooterCellControl">
          <Grid>
            <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" x:Name="NormalFill" />
            <ContentPresenter VerticalAlignment="{TemplateBinding VerticalContentAlignment}" d:LayoutOverrides="Width" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="igPrim:RowSelectorFooterCellControl" BasedOn="{StaticResource RowSelectorFooterCellControlStyle}" />

  <!-- *********************************  FooterCellControl Style  ********************************* -->
  <Style x:Key="FooterCellControlStyle" TargetType="igPrim:FooterCellControl">
    <Setter Property="FontSize" Value="11" />
    <Setter Property="Foreground" Value="{StaticResource FooterCellForegroundBrush}" />
    <Setter Property="Background" Value="{StaticResource FooterCellBackgroundBrush}" />
    <Setter Property="BorderBrush" Value="{StaticResource FooterCellBorderBrush}" />
    <Setter Property="BorderThickness" Value="0,1,1,0" />
    <Setter Property="HorizontalContentAlignment" Value="Left" />
    <Setter Property="Padding" Value="4" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igPrim:FooterCellControl">
          <Grid>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="MouseOver" />
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" x:Name="NormalFill" />
            <ContentPresenter VerticalAlignment="{TemplateBinding VerticalContentAlignment}" d:LayoutOverrides="Width" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="igPrim:FooterCellControl" BasedOn="{StaticResource FooterCellControlStyle}" />

  <!-- *********************************  PagerButton Style  ********************************* -->
  <Style x:Key="PagerButtonStyle" TargetType="Button">
    <Setter Property="Background" Value="{StaticResource PagerButtonBackgroundBrush}" />
    <Setter Property="BorderBrush" Value="{StaticResource PagerButtonBorderBrush}" />
    <Setter Property="BorderThickness" Value="0" />
    <Setter Property="Width" Value="14" />
    <Setter Property="Height" Value="14" />
    <Setter Property="Padding" Value="0,0,0,1" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="Button">
          <Grid Background="{StaticResource TransparentBrush}">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="MouseOver">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="hoverRec" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>
                            Visible
                          </Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Pressed">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="pressedRec" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>
                            Visible
                          </Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Disabled">
                  <Storyboard>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="contentPresenter" Storyboard.TargetProperty="Opacity">
                      <SplineDoubleKeyFrame KeyTime="0" Value=".3" />
                    </DoubleAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="FocusStates">
                <VisualState x:Name="Focused" />
                <VisualState x:Name="Unfocused" />
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" />
            <Rectangle x:Name="hoverRec" Stroke="{StaticResource PagerButtonHoverBorderBrush}" Fill="{StaticResource PagerButtonHoverBackgroundBrush}" Visibility="Collapsed" StrokeThickness="1" />
            <Rectangle x:Name="pressedRec" Stroke="{StaticResource PagerButtonPressedBorderBrush}" Fill="{StaticResource PagerButtonPressedBackgroundBrush}" Visibility="Collapsed" StrokeThickness="1" />
            <ContentPresenter x:Name="contentPresenter" Margin="{TemplateBinding Padding}" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- *********************************  PagerItem Style  ********************************* -->
  <Style x:Key="PagerItemStyle" TargetType="ListBoxItem">
    <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
    <Setter Property="Background" Value="{StaticResource PagerItemBackgroundBrush}" />
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="Margin" Value="3" />
    <Setter Property="Padding" Value="5,1,5,1" />
    <Setter Property="HorizontalAlignment" Value="Center" />
    <Setter Property="VerticalAlignment" Value="Center" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="ListBoxItem">
          <Grid Background="{TemplateBinding Background}" VerticalAlignment="{TemplateBinding VerticalAlignment}" HorizontalAlignment="{TemplateBinding HorizontalAlignment}">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="MouseOver">
                  <Storyboard>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="Hovertem" Storyboard.TargetProperty="Opacity">
                      <SplineDoubleKeyFrame KeyTime="0" Value="1" />
                    </DoubleAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Disabled">
                  <Storyboard>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="pagerItem" Storyboard.TargetProperty="Opacity">
                      <SplineDoubleKeyFrame KeyTime="0" Value=".55" />
                    </DoubleAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="SelectionStates">
                <VisualState x:Name="Unselected" />
                <VisualState x:Name="Selected">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="itemFill" Storyboard.TargetProperty="Background">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource PagerItemSelectedBackgroundBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="itemFill" Storyboard.TargetProperty="BorderBrush">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource PagerItemSelectedBorderBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="FocusStates">
                <VisualState x:Name="Focused" />
                <VisualState x:Name="Unfocused" />
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Rectangle x:Name="Hovertem" Fill="{StaticResource PagerItemHoverBackgroundBrush}" Stroke="{StaticResource PagerItemHoverBorderBrush}" IsHitTestVisible="False" Opacity="0" />
            <Grid>
              <Border x:Name="itemFill" Background="{StaticResource TransparentBrush}" BorderThickness="1" HorizontalAlignment="Center" VerticalAlignment="Center">
                <TextBlock x:Name="pagerItem" Foreground="{TemplateBinding Foreground}" TextAlignment="Center" VerticalAlignment="Center" Text="{Binding}" Margin="{TemplateBinding Padding}">
                </TextBlock>
              </Border>
            </Grid>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- *********************************  PagerControl Style  ********************************* -->
  <Style x:Key="PagerControlStyle" TargetType="igPrim:PagerControl">
    <Setter Property="MaximumAvailablePagerValues" Value="10" />
    <Setter Property="Margin" Value="10,2" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igPrim:PagerControl">
          <StackPanel Orientation="Horizontal" Background="{TemplateBinding Background}" HorizontalAlignment="Right">
            <Button x:Name="FirstPageButton" Style="{StaticResource PagerButtonStyle}">
              <Path Width="6" Height="7" Data="M 2,3 C2,3 2,4 2,4 2,4 3,4 3,4 3,4 3,5 3,5 3,5 4,5 4,5 4,5 4,6 4,6 4,6 5,6 5,6 5,6 5,7 5,7 5,7 6,7 6,7 6,7 6,0 6,0 6,0 5,0 5,0 5,0 5,1 5,1 5,1 4,1 4,1 4,1 4,2 4,2 4,2 3,2 3,2 3,2 3,3 3,3 3,3 2,3 2,3 zM 0,0 C0,0 0,7 0,7 0,7 1,7 1,7 1,7 1,0 1,0 1,0 0,0 0,0 z" Stretch="Fill" Fill="{StaticResource GlyphBorderBrush}" />
              <igBase:Commanding.Command>
                <ig:XamGridPagingControlsCommandSource EventName="Click" CommandType="FirstPage">
                </ig:XamGridPagingControlsCommandSource>
              </igBase:Commanding.Command>
            </Button>
            <Button x:Name="PreviousPageButton" Style="{StaticResource PagerButtonStyle}">
              <Path Width="4" Height="7" Data="M 0,3 C0,3 0,4 0,4 0,4 1,4 1,4 1,4 1,5 1,5 1,5 2,5 2,5 2,5 2,6 2,6 2,6 3,6 3,6 3,6 3,7 3,7 3,7 4,7 4,7 4,7 4,0 4,0 4,0 3,0 3,0 3,0 3,1 3,1 3,1 2,1 2,1 2,1 2,2 2,2 2,2 1,2 1,2 1,2 1,3 1,3 1,3 0,3 0,3 z" Stretch="Fill" Fill="{StaticResource GlyphBorderBrush}" />
              <igBase:Commanding.Command>
                <ig:XamGridPagingControlsCommandSource EventName="Click" CommandType="PreviousPage">
                </ig:XamGridPagingControlsCommandSource>
              </igBase:Commanding.Command>
            </Button>
            <igPrim:PagerItemsControl x:Name="PagerItems" ItemContainerStyle="{StaticResource PagerItemStyle}" Background="{StaticResource TransparentBrush}" BorderThickness="0">
              <igBase:Commanding.Command>
                <ig:XamGridPagingControlsCommandSource EventName="SelectionChanged" CommandType="GoToPage">
                </ig:XamGridPagingControlsCommandSource>
              </igBase:Commanding.Command>
              <igPrim:PagerItemsControl.ItemsPanel>
                <ItemsPanelTemplate>
                  <StackPanel Orientation="Horizontal">
                  </StackPanel>
                </ItemsPanelTemplate>
              </igPrim:PagerItemsControl.ItemsPanel>
            </igPrim:PagerItemsControl>
            <Button x:Name="NextPageButton" Style="{StaticResource PagerButtonStyle}">
              <Path Width="4" Height="7" Data="M 4,3 C4,3 4,4 4,4 4,4 3,4 3,4 3,4 3,5 3,5 3,5 2,5 2,5 2,5 2,6 2,6 2,6 1,6 1,6 1,6 1,7 1,7 1,7 0,7 0,7 0,7 0,0 0,0 0,0 1,0 1,0 1,0 1,1 1,1 1,1 2,1 2,1 2,1 2,2 2,2 2,2 3,2 3,2 3,2 3,3 3,3 3,3 4,3 4,3 z" Stretch="Fill" Fill="{StaticResource GlyphBorderBrush}" />
              <igBase:Commanding.Command>
                <ig:XamGridPagingControlsCommandSource EventName="Click" CommandType="NextPage">
                </ig:XamGridPagingControlsCommandSource>
              </igBase:Commanding.Command>
            </Button>
            <Button x:Name="LastPageButton" Style="{StaticResource PagerButtonStyle}">
              <Path Width="6" Height="7" Data="M 4,3 C4,3 4,4 4,4 4,4 3,4 3,4 3,4 3,5 3,5 3,5 2,5 2,5 2,5 2,6 2,6 2,6 1,6 1,6 1,6 1,7 1,7 1,7 0,7 0,7 0,7 0,0 0,0 0,0 1,0 1,0 1,0 1,1 1,1 1,1 2,1 2,1 2,1 2,2 2,2 2,2 3,2 3,2 3,2 3,3 3,3 3,3 4,3 4,3 zM 6,0 C6,0 6,7 6,7 6,7 5,7 5,7 5,7 5,0 5,0 5,0 6,0 6,0 z" Stretch="Fill" Fill="{StaticResource GlyphBorderBrush}" />
              <igBase:Commanding.Command>
                <ig:XamGridPagingControlsCommandSource EventName="Click" CommandType="LastPage">
                </ig:XamGridPagingControlsCommandSource>
              </igBase:Commanding.Command>
            </Button>
          </StackPanel>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="igPrim:PagerControl" BasedOn="{StaticResource PagerControlStyle}" />

  <!-- *********************************  PagerCellControl Style  ********************************* -->
  <Style x:Key="PagerCellControlStyle" TargetType="igPrim:PagerCellControl">
    <Setter Property="Background" Value="{StaticResource PagerAreaBackgroundBrush}" />
    <Setter Property="BorderBrush" Value="{StaticResource PagerAreaBorderBrush}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igPrim:PagerCellControl">
          <Grid Background="{TemplateBinding Background}">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="Orientation">
                <VisualState x:Name="Top">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="PagerTopStroke" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>
                            Visible
                          </Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="PagerTopStroke" Storyboard.TargetProperty="VerticalAlignment">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <VerticalAlignment>
                            Top
                          </VerticalAlignment>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Bottom">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="PagerTopStroke" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>
                            Visible
                          </Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Border x:Name="PagerTopStroke" Height="1" VerticalAlignment="Top" Background="{TemplateBinding BorderBrush}" Visibility="Collapsed" />
            <igPrim:PagerControl x:Name="PagerItemControl">
              <igBase:Commanding.Commands>
                <igBase:CommandSourceCollection>
                  <ig:XamGridPagingCommandSource EventName="FirstPage" CommandType="FirstPage">
                  </ig:XamGridPagingCommandSource>
                  <ig:XamGridPagingCommandSource EventName="LastPage" CommandType="LastPage">
                  </ig:XamGridPagingCommandSource>
                  <ig:XamGridPagingCommandSource EventName="PreviousPage" CommandType="PreviousPage">
                  </ig:XamGridPagingCommandSource>
                  <ig:XamGridPagingCommandSource EventName="NextPage" CommandType="NextPage">
                  </ig:XamGridPagingCommandSource>
                  <ig:XamGridPagingCommandSource EventName="GoToPage" CommandType="GoToPage">
                  </ig:XamGridPagingCommandSource>
                </igBase:CommandSourceCollection>
              </igBase:Commanding.Commands>
            </igPrim:PagerControl>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="igPrim:PagerCellControl" BasedOn="{StaticResource PagerCellControlStyle}" />

  <!-- *********************************  DropAreaIndicator Style  ********************************* -->
  <Style x:Key="DropAreaIndicatorStyle" TargetType="igPrim:DropAreaIndicator">
    <Setter Property="Background" Value="{StaticResource DropAreaIndicatorBackgroundBrush}" />
    <Setter Property="Opacity" Value="0.5" />
    <Setter Property="Width" Value="15" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igPrim:DropAreaIndicator">
          <Border x:Name="Root" Opacity="{TemplateBinding Opacity}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" RenderTransformOrigin="0,0">
            <Border.RenderTransform>
              <ScaleTransform x:Name="rootScale" ScaleX="0">
              </ScaleTransform>
            </Border.RenderTransform>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="DisplayStates">
                <VisualState x:Name="Hidden" />
                <VisualState x:Name="MouseOver">
                  <Storyboard>
                    <DoubleAnimation To="1" Storyboard.TargetName="rootScale" Storyboard.TargetProperty="ScaleX">
                    </DoubleAnimation>
                    <DoubleAnimation From="1" To="1" Storyboard.TargetName="Root" Storyboard.TargetProperty="Opacity">
                    </DoubleAnimation>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="DisplayFromLeft">
                  <Storyboard>
                    <PointAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Root" Storyboard.TargetProperty="RenderTransformOrigin">
                      <EasingPointKeyFrame KeyTime="00:00:00" Value="0,0" />
                    </PointAnimationUsingKeyFrames>
                    <DoubleAnimation To="1" Duration="00:00:00.3" Storyboard.TargetName="rootScale" Storyboard.TargetProperty="ScaleX">
                      <DoubleAnimation.EasingFunction>
                        <CubicEase EasingMode="EaseOut" />
                      </DoubleAnimation.EasingFunction>
                    </DoubleAnimation>
                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00" Storyboard.TargetName="Root" Storyboard.TargetProperty="Margin">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Thickness>
                            1,0,0,0
                          </Thickness>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="DisplayFromRight">
                  <Storyboard>
                    <PointAnimationUsingKeyFrames Storyboard.TargetName="Root" Storyboard.TargetProperty="RenderTransformOrigin">
                      <EasingPointKeyFrame KeyTime="00:00:00" Value="1,0" />
                    </PointAnimationUsingKeyFrames>
                    <!-- Leave Ease -->
                    <DoubleAnimation To="1" Duration="00:00:00.3" Storyboard.TargetName="rootScale" Storyboard.TargetProperty="ScaleX">
                      <DoubleAnimation.EasingFunction>
                        <CubicEase EasingMode="EaseOut" />
                      </DoubleAnimation.EasingFunction>
                    </DoubleAnimation>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="igPrim:DropAreaIndicator" BasedOn="{StaticResource DropAreaIndicatorStyle}" />

  <!-- *********************************  GroupByMovingIndicator Style  ********************************* -->
  <Style x:Key="GroupByMovingIndicatorStyle" TargetType="igPrim:GroupByMovingIndicator">
    <Setter Property="Background" Value="{StaticResource MovingIndicatorBackgroundBrush}" />
    <Setter Property="Width" Value="7" />
    <Setter Property="Height" Value="7" />
    <!-- Offset value for SL theme-->
    <Setter Property="HorizontalOffset" Value="-8" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igPrim:GroupByMovingIndicator">
          <Canvas>
            <Path Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" Data="M2,0 L5,0 5,4 7,4 C7,4 7,5 7,5 7,5 6,5 6,5 6,5 6,6 6,6 6,6 5,6 5,6 5,6 5,7 5,7 5,7 4,7 4,7 4,7 4,8 4,8 4,8 3,8&#xd;&#xa;3,8 3,8 3,7 3,7 3,7 2.0000001,7 2,7 2.0000001,7 2.0000001,6 2,6 2.0000001,6 1.0000001,6 1,6 1.0000001,6 1.0000001,5 1,5 1.0000001,5 0,5 0,5 0,5 0,4 0,4 L2,4 z" Fill="{TemplateBinding Background}" Margin="0" />
            <Path Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" Data="M3,0 C3,0 4,0 4,0 4,0 4,1 4,1 4,1 5,1 5,1 5,1 5,2 5,2 5,2 6,2 6,2 6,2 6,3 6,3 6,3 7,3 7,3 7,3 7,4&#xd;&#xa;7,4 L5,4 5,8 2,8 2,4 0,4 C0,4 0,3 0,3 0,3 1,3 1,3 1,3 1,2 1,2 1,2 2,2 2,2 2,2 2,1 2,1 2,1 3,1 3,1 3,1 3,0 3,0 z" Fill="{TemplateBinding Background}" Margin="0,12,0,0" />
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
          </Canvas>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="igPrim:GroupByMovingIndicator" BasedOn="{StaticResource GroupByMovingIndicatorStyle}" />

  <!-- *********************************  MovingIndicator Style  ********************************* -->
  <Style x:Key="MovingIndicatorStyle" TargetType="igPrim:MovingIndicator">
    <Setter Property="Background" Value="{StaticResource MovingIndicatorBackgroundBrush}" />
    <Setter Property="Width" Value="9" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igPrim:MovingIndicator">
          <Canvas>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Path x:Name="TopIndicator" Width="{TemplateBinding Width}" Height="9" Data="M 3,0 C3,0 3,4 3,4 3,4 0,4 0,4 0,4 0,5 0,5 0,5 1,5 1,5 1,5 1,6 1,6 1,6 2,6 2,6 2,6 2,7 2,7 2,7 3,7 3,7 3,7 3,8 3,8 3,8 4,8 4,8 4,8 4,9 4,9 4,9 5,9 5,9 5,9 5,8 5,8 5,8 6,8 6,8 6,8 6,7 6,7 6,7 7,7 7,7 7,7 7,6 7,6 7,6 8,6 8,6 8,6 8,5 8,5 8,5 9,5 9,5 9,5 9,4 9,4 9,4 6,4 6,4 6,4 6,0 6,0 6,0 3,0 3,0 z" Fill="{TemplateBinding Background}" />
            <Path x:Name="BottomIndicator" Width="{TemplateBinding Width}" Height="9" Data="M 3,9 C3,9 3,5 3,5 3,5 0,5 0,5 0,5 0,4 0,4 0,4 1,4 1,4 1,4 1,3 1,3 1,3 2,3 2,3 2,3 2,2 2,2 2,2 3,2 3,2 3,2 3,1 3,1 3,1 4,1 4,1 4,1 4,0 4,0 4,0 5,0 5,0 5,0 5,1 5,1 5,1 6,1 6,1 6,1 6,2 6,2 6,2 7,2 7,2 7,2 7,3 7,3 7,3 8,3 8,3 8,3 8,4 8,4 8,4 9,4 9,4 9,4 9,5 9,5 9,5 6,5 6,5 6,5 6,9 6,9 6,9 3,9 3,9 z" Fill="{TemplateBinding Background}" />
          </Canvas>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="igPrim:MovingIndicator" BasedOn="{StaticResource MovingIndicatorStyle}" />

  <!-- *********************************  GroupByAreaExpansionIndicator Style  ********************************* -->
  <Style x:Key="GroupByAreaExpansionIndicatorStyle" TargetType="ToggleButton">
    <Setter Property="Background" Value="{StaticResource GroupByAreaExpansionIndicatorBackgroundBrush}" />
    <Setter Property="BorderBrush" Value="{StaticResource GroupByAreaExpansionIndicatorHoverBorderBrush}" />
    <Setter Property="BorderThickness" Value="0,0,0,1" />
    <Setter Property="Cursor" Value="Hand" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="ToggleButton">
          <Grid Background="{TemplateBinding Background}">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="MouseOver">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="elemVisual" Storyboard.TargetProperty="(UIElement.Visibility)">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>
                            Visible
                          </Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Bd" Storyboard.TargetProperty="Background">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{StaticResource GroupByAreaExpansionIndicatorHoverBackgroundBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Bd" Storyboard.TargetProperty="BorderBrush">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{StaticResource GroupByAreaExpansionIndicatorHoverBorderBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Pressed">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="elemVisual" Storyboard.TargetProperty="(UIElement.Visibility)">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>
                            Visible
                          </Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Bd" Storyboard.TargetProperty="Background">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{StaticResource GroupByAreaExpansionIndicatorPressedBackgroundBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Bd" Storyboard.TargetProperty="BorderBrush">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{StaticResource GroupByAreaExpansionIndicatorPressedBorderBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Disabled">
                  <Storyboard>
                    <DoubleAnimation Duration="0" To="0.5" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="contentPresenter" d:IsOptimized="True" />
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="CheckStates">
                <VisualState x:Name="Checked" />
                <VisualState x:Name="Unchecked" />
              </VisualStateGroup>
              <VisualStateGroup x:Name="FocusStates">
                <VisualState x:Name="Focused" />
                <VisualState x:Name="Unfocused" />
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid x:Name="elemVisual" Visibility="Collapsed">
              <Border x:Name="Bd" Background="{StaticResource GroupByAreaExpansionIndicatorBackgroundBrush}" BorderBrush="{StaticResource GroupByAreaExpansionIndicatorBorderBrush}" BorderThickness="1" />
            </Grid>
            <Rectangle Height="1" VerticalAlignment="Bottom" Fill="{StaticResource GroupByAreaExpansionIndicatorBorderBrush}" />
            <ContentPresenter x:Name="contentPresenter" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- *********************************  GroupByAreaCellControl Style  ********************************* -->
  <Style x:Key="GroupByAreaCellControlStyle" TargetType="igPrim:GroupByAreaCellControl">
    <Setter Property="Foreground" Value="{StaticResource HeaderCellForegroundBrush}" />
    <Setter Property="Background" Value="{StaticResource GroupByAreaCellBackgroundBrush}" />
    <Setter Property="BorderBrush" Value="{StaticResource GroupByAreaCellBorderBrush}" />
    <Setter Property="BorderThickness" Value="0" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igPrim:GroupByAreaCellControl">
          <Grid>
            <Grid.RowDefinitions>
              <RowDefinition />
              <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <ToggleButton x:Name="ExpansionIndicator" Height="11" VerticalAlignment="Top" IsChecked="{TemplateBinding IsExpanded}" Style="{StaticResource GroupByAreaExpansionIndicatorStyle}">
              <igBase:Commanding.Commands>
                <igBase:CommandSourceCollection>
                  <ig:XamGroupByAreaCommandSource EventName="Checked" CommandType="Expand">
                  </ig:XamGroupByAreaCommandSource>
                  <ig:XamGroupByAreaCommandSource EventName="Unchecked" CommandType="Collapse">
                  </ig:XamGroupByAreaCommandSource>
                </igBase:CommandSourceCollection>
              </igBase:Commanding.Commands>
              <Grid>
                <Grid x:Name="topGlyphSet" Visibility="Collapsed">
                  <Path x:Name="topExpandGlyph" Data="M 0 0 L 4 4 L 8 0 Z" Fill="{StaticResource GlyphBorderBrush}" VerticalAlignment="Center" HorizontalAlignment="Center" UseLayoutRounding="True" Visibility="Collapsed" Margin="0,0,0,2" />
                  <Path x:Name="topCollapseGlyph" Data="M0,4 L8,4 L4,0 z" Fill="{StaticResource GlyphBorderBrush}" VerticalAlignment="Center" HorizontalAlignment="Center" UseLayoutRounding="True" Visibility="Collapsed" Margin="0,0,0,2" />
                </Grid>
                <Grid x:Name="bottomGlyphSet" Visibility="Collapsed">
                  <Path x:Name="bottomExpandGlyph" Data="M0,4 L8,4 L4,0 z" Fill="{StaticResource GlyphBorderBrush}" VerticalAlignment="Center" HorizontalAlignment="Center" UseLayoutRounding="True" Visibility="Collapsed" Margin="0,0,0,2" />
                  <Path x:Name="bottomCollapseGlyph" Data="M 0 0 L 4 4 L 8 0 Z" Fill="{StaticResource GlyphBorderBrush}" VerticalAlignment="Center" HorizontalAlignment="Center" UseLayoutRounding="True" Visibility="Collapsed" Margin="0,0,0,2" />
                </Grid>
              </Grid>
            </ToggleButton>
            <Border x:Name="panelContainer" Grid.Row="1" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}">
              <Grid Grid.Row="1" x:Name="PanelArea" MinHeight="30">
                <Rectangle x:Name="fill" Fill="{TemplateBinding Background}" />
                <Rectangle x:Name="bgGlow" Opacity="0" Fill="{StaticResource GroupByAreaCellDraggingBackgroundBrush}" />
                <ContentControl x:Name="EmptyContentControl" Content="{TemplateBinding EmptyContent}" Foreground="{TemplateBinding Foreground}" VerticalAlignment="Center" Margin="10,0" />
                <ScrollViewer VerticalScrollBarVisibility="Hidden" HorizontalScrollBarVisibility="Auto" BorderThickness="0" Style="{StaticResource ScrollViewerStyle}">
                  <igPrim:GroupByAreaPanel Margin="5" x:Name="Panel">
                  </igPrim:GroupByAreaPanel>
                </ScrollViewer>
              </Grid>
            </Border>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="MouseOver" />
              </VisualStateGroup>
              <VisualStateGroup x:Name="ExpansionVisibilityStates">
                <VisualState x:Name="ExpansionVisible" />
                <VisualState x:Name="ExpansionHidden">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="ExpansionIndicator" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>
                            Collapsed
                          </Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="ExpandedStates">
                <VisualState x:Name="Expanded">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00" Storyboard.TargetName="bottomCollapseGlyph" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>
                            Visible
                          </Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00" Storyboard.TargetName="topCollapseGlyph" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>
                            Visible
                          </Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Collapsed">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00" Storyboard.TargetName="panelContainer" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>
                            Collapsed
                          </Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00" Storyboard.TargetName="bottomExpandGlyph" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>
                            Visible
                          </Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00" Storyboard.TargetName="topExpandGlyph" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>
                            Visible
                          </Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="DisplayStates">
                <VisualState x:Name="Empty" />
                <VisualState x:Name="NonEmpty">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="EmptyContentControl" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>
                            Collapsed
                          </Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="DraggingStates">
                <VisualState x:Name="NotDragging">
                  <Storyboard>
                    <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="bgGlow" Storyboard.TargetProperty="Opacity">
                      <EasingDoubleKeyFrame KeyTime="00:00:00.4000000" Value="0" />
                    </DoubleAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Dragging" />
                <VisualState x:Name="DraggingOver">
                  <Storyboard>
                    <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="bgGlow" Storyboard.TargetProperty="Opacity">
                      <EasingDoubleKeyFrame KeyTime="00:00:00.3000000" Value="1" />
                    </DoubleAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="GroupByAreaLocation">
                <VisualState x:Name="Top">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="topGlyphSet" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>
                            Visible
                          </Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Bottom">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="panelContainer" Storyboard.TargetProperty="(Grid.Row)">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <System:Int32>
                            0
                          </System:Int32>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="ExpansionIndicator" Storyboard.TargetProperty="(Grid.Row)">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <System:Int32>
                            1
                          </System:Int32>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="ExpansionIndicator" Storyboard.TargetProperty="(Control.BorderThickness)">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Thickness>
                            0,1,0,0
                          </Thickness>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="bottomGlyphSet" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>
                            Visible
                          </Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="igPrim:GroupByAreaCellControl" BasedOn="{StaticResource GroupByAreaCellControlStyle}" />

  <!-- *********************************  GroupByHeaderCloseButton Style  ********************************* -->
  <Style x:Key="GroupByHeaderCloseButtonStyle" TargetType="Button">
    <Setter Property="Background" Value="{StaticResource GroupByHeaderCloseButtonBackgroundBrush}" />
    <Setter Property="BorderBrush" Value="{StaticResource GroupByHeaderCloseButtonBorderBrush}" />
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="HorizontalAlignment" Value="Center" />
    <Setter Property="VerticalAlignment" Value="Center" />
    <Setter Property="Padding" Value="0,0,0,1" />
    <Setter Property="Width" Value="15" />
    <Setter Property="Height" Value="15" />
    <Setter Property="Cursor" Value="Hand" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="Button">
          <Grid Background="{StaticResource TransparentBrush}">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="MouseOver" />
                <VisualState x:Name="Pressed" />
                <VisualState x:Name="Disabled" />
              </VisualStateGroup>
              <VisualStateGroup x:Name="FocusStates">
                <VisualState x:Name="Focused" />
                <VisualState x:Name="Unfocused" />
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="1" />
            <ContentPresenter x:Name="contentPresenter" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- *********************************  GroupByHeaderCellControl Style  ********************************* -->
  <Style x:Key="GroupByHeaderCellControlStyle" TargetType="igPrim:GroupByHeaderCellControl">
    <Setter Property="FontSize" Value="11" />
    <Setter Property="Foreground" Value="{StaticResource HeaderCellForegroundBrush}" />
    <Setter Property="Background" Value="{StaticResource GroupByHeaderCellBackgroundBrush}" />
    <Setter Property="BorderBrush" Value="{StaticResource GroupByHeaderCellBorderBrush}" />
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="HorizontalContentAlignment" Value="Left" />
    <Setter Property="Padding" Value="8,3,6,3" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igPrim:GroupByHeaderCellControl">
          <igPrim:SimpleClickableContainer>
            <igBase:Commanding.Command>
              <ig:XamGridColumnCommandSource EventName="SimpleClick" CommandType="SortToggle" />
            </igBase:Commanding.Command>
            <Grid x:Name="Root">
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="9" />
              </Grid.ColumnDefinitions>
              <Rectangle x:Name="connectorRec" Fill="{StaticResource CellConnectorBackgroundBrush}" Grid.Column="1" Height="1" />
              <Border x:Name="fill" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" />
              <Border x:Name="fillMoving" Visibility="Collapsed" Background="{StaticResource HeaderCellMovingBackgroundBrush}" BorderBrush="{StaticResource HeaderCellMovingBorderBrush}" BorderThickness="0,1" />
              <Grid>
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="Auto" />
                  <ColumnDefinition Width="Auto" />
                  <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Grid.Column="0" />
                <Path x:Name="SortedDescending" Grid.Column="1" Fill="{StaticResource GlyphBorderBrush}" HorizontalAlignment="Right" VerticalAlignment="Center" Opacity="0" Data="M 0 0 L 4 4 L 8 0 Z" Margin="5,0" />
                <Path x:Name="SortedAscending" Grid.Column="1" Fill="{StaticResource GlyphBorderBrush}" HorizontalAlignment="Right" VerticalAlignment="Center" Opacity="0" Data="M0,4 L8,4 L4,0 z" Margin="5,0" />
                <Button Style="{StaticResource GroupByHeaderCloseButtonStyle}" x:Name="closeButton" Opacity="0" HorizontalAlignment="Center" VerticalAlignment="Center" Grid.Column="2" d:LayoutOverrides="GridBox" Margin="0,0,10,0">
                  <igBase:Commanding.Command>
                    <ig:XamGridColumnCommandSource EventName="Click" CommandType="RemoveGroupBy" />
                  </igBase:Commanding.Command>
                  <Path Width="7" Height="7" Data="F1 M 53.122,8.510 L 44.610,0.000 L 26.561,18.050 L 8.510,0.000 L 0.000,8.510 L 18.050,26.561 L 0.000,44.611 L 8.510,53.123 L 26.561,35.072 L 44.612,53.123 L 53.122,44.612 L 35.071,26.561 L 53.122,8.510 Z" Fill="{StaticResource GlyphBorderBrush}" UseLayoutRounding="False" Stretch="Fill" />
                </Button>
              </Grid>
            </Grid>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="MouseOver">
                  <Storyboard>
                    <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="closeButton" Storyboard.TargetProperty="Opacity">
                      <EasingDoubleKeyFrame KeyTime="00:00:00.3000000" Value="1" />
                    </DoubleAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Moving">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames BeginTime="0" Storyboard.TargetName="fillMoving" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>
                            Visible
                          </Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames BeginTime="0" Storyboard.TargetName="fill" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>
                            Collapsed
                          </Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="connectorRec">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>
                            Collapsed
                          </Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="FirstStates">
                <VisualState x:Name="NotFirst" />
                <VisualState x:Name="First" />
              </VisualStateGroup>
              <VisualStateGroup x:Name="LastStates">
                <VisualState x:Name="NotLast" />
                <VisualState x:Name="Last">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="connectorRec">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>
                            Collapsed
                          </Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="SortedStates">
                <VisualState x:Name="NotSorted">
                </VisualState>
                <VisualState x:Name="Ascending">
                  <Storyboard>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="SortedAscending" Storyboard.TargetProperty="Opacity">
                      <SplineDoubleKeyFrame KeyTime="0" Value="1" />
                    </DoubleAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Descending">
                  <Storyboard>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="SortedDescending" Storyboard.TargetProperty="Opacity">
                      <SplineDoubleKeyFrame KeyTime="0" Value="1" />
                    </DoubleAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
          </igPrim:SimpleClickableContainer>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="igPrim:GroupByHeaderCellControl" BasedOn="{StaticResource GroupByHeaderCellControlStyle}" />

  <!-- *********************************  GroupByColumnLayoutHeaderCellControl Style  ********************************* -->
  <Style x:Key="GroupByColumnLayoutHeaderCellControlStyle" TargetType="igPrim:GroupByColumnLayoutHeaderCellControl">
    <Setter Property="FontSize" Value="11" />
    <Setter Property="Foreground" Value="{StaticResource LightForegroundBrush}" />
    <Setter Property="Background" Value="{StaticResource GroupByColumnLayoutHeaderCellBackgroundBrush}" />
    <Setter Property="BorderBrush" Value="{StaticResource GroupByColumnLayoutHeaderCellBorderBrush}" />
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="HorizontalContentAlignment" Value="Left" />
    <Setter Property="Margin" Value="20,0,0,0" />
    <Setter Property="Padding" Value="10,0" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igPrim:GroupByColumnLayoutHeaderCellControl">
          <Border x:Name="NormalFill" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
            <ContentPresenter VerticalAlignment="{TemplateBinding VerticalContentAlignment}" d:LayoutOverrides="Width" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" />
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="MouseOver" />
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="igPrim:GroupByColumnLayoutHeaderCellControl" BasedOn="{StaticResource GroupByColumnLayoutHeaderCellControlStyle}" />

  <!-- *********************************  GroupByCellControl Style  ********************************* -->
  <Style x:Key="GroupByCellControlStyle" TargetType="igPrim:GroupByCellControl">
    <Setter Property="FontSize" Value="11" />
    <Setter Property="Foreground" Value="{StaticResource GroupByCellForegroundBrush}" />
    <Setter Property="Background" Value="{StaticResource GroupByCellBackgroundBrush}" />
    <Setter Property="BorderBrush" Value="{StaticResource GroupByCellBorderBrush}" />
    <Setter Property="BorderThickness" Value="0,0,0,1" />
    <Setter Property="HorizontalContentAlignment" Value="Left" />
    <Setter Property="Padding" Value="4" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igPrim:GroupByCellControl">
          <Grid>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="MouseOver">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="MouseOver1" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>
                            Visible
                          </Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="ActiveStates">
                <VisualState x:Name="InActive" />
                <VisualState x:Name="Active">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ActiveRect" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>
                            Visible
                          </Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" x:Name="NormalFill" />
            <Rectangle Fill="{StaticResource HeaderCellHoverBackgroundBrush}" x:Name="MouseOver1" Visibility="Collapsed" Margin="{TemplateBinding BorderThickness}" />
            <Rectangle Fill="{StaticResource CellItemSelectedBackgroundBrush}" StrokeThickness="1" x:Name="ActiveRect" Visibility="Collapsed" Margin="{TemplateBinding BorderThickness}" />
            <ContentPresenter VerticalAlignment="{TemplateBinding VerticalContentAlignment}" d:LayoutOverrides="Width" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="igPrim:GroupByCellControl" BasedOn="{StaticResource GroupByCellControlStyle}" />

  <!-- *********************************  FixedBorderHeaderCellControl Style  ********************************* -->
  <Style x:Key="FixedBorderHeaderCellControlStyle" TargetType="igPrim:FixedBorderHeaderCellControl">
    <Setter Property="Background" Value="{StaticResource FixedBorderBackgroundBrush}" />
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="Margin" Value="-1,0,0,0" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igPrim:FixedBorderHeaderCellControl">
          <Border x:Name="Border" BorderBrush="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="igPrim:FixedBorderHeaderCellControl" BasedOn="{StaticResource FixedBorderHeaderCellControlStyle}" />

  <!-- *********************************  FixedBorderCellControl Style  ********************************* -->
  <Style x:Key="FixedBorderCellControlStyle" TargetType="igPrim:FixedBorderCellControl">
    <Setter Property="Background" Value="{StaticResource FixedBorderBackgroundBrush}" />
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="Margin" Value="-1,0,0,0" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igPrim:FixedBorderCellControl">
          <Border x:Name="Border" BorderBrush="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="igPrim:FixedBorderCellControl" BasedOn="{StaticResource FixedBorderCellControlStyle}" />

  <!-- *********************************  FixedBorderFooterCellControl Style  ********************************* -->
  <Style x:Key="FixedBorderFooterCellControlStyle" TargetType="igPrim:FixedBorderFooterCellControl">
    <Setter Property="Background" Value="{StaticResource FixedBorderBackgroundBrush}" />
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="Margin" Value="-1,0,0,0" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igPrim:FixedBorderFooterCellControl">
          <Border x:Name="Border" BorderBrush="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="igPrim:FixedBorderFooterCellControl" BasedOn="{StaticResource FixedBorderFooterCellControlStyle}" />

  <!-- *********************************  CustomFilterDialogContentControl Style  ********************************* -->
  <Style x:Key="CustomFilterDialogContentControlStyle" TargetType="igPrim:CustomFilterDialogContentControl">
    <Setter Property="VerticalContentAlignment" Value="Center" />
    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igPrim:CustomFilterDialogContentControl">
          <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
            <ContentPresenter x:Name="contentPresenter" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="{TemplateBinding Padding}" />
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="igPrim:CustomFilterDialogContentControl" BasedOn="{StaticResource CustomFilterDialogContentControlStyle}" />

  <!-- *********************************  ColumnFilterDialogControl Style  ********************************* -->
  <Style x:Key="ColumnFilterDialogControlStyle" TargetType="igPrim:ColumnFilterDialogControl">
    <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
    <Setter Property="Background" Value="{StaticResource PopupBackgroundBrush}" />
    <Setter Property="BorderBrush" Value="{StaticResource PopupBorderBrush}" />
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="Padding" Value="6" />
    <Setter Property="Margin" Value="1" />
    <Setter Property="VerticalAlignment" Value="Center" />
    <Setter Property="HorizontalAlignment" Value="Center" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igPrim:ColumnFilterDialogControl">
          <Grid>
            <Border x:Name="Bd" Background="{TemplateBinding Background}" CornerRadius="3" Padding="{TemplateBinding Padding}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" HorizontalAlignment="{TemplateBinding HorizontalAlignment}" VerticalAlignment="{TemplateBinding VerticalAlignment}">
              <Grid>
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="*" MinWidth="175" />
                  <ColumnDefinition Width="*" MinWidth="175" />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                  <RowDefinition Height="Auto" />
                  <RowDefinition MinHeight="22" />
                  <RowDefinition Height="Auto" />
                  <RowDefinition MinHeight="22" />
                  <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <ComboBox x:Name="Operator1" Grid.Row="1" Margin="5" Style="{StaticResource ComboBoxStyle}">
                  <ComboBox.ItemTemplate>
                    <DataTemplate>
                      <Grid>
                        <Grid.ColumnDefinitions>
                          <ColumnDefinition Width="16" />
                          <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <ContentControl IsTabStop="False" ContentTemplate="{Binding IconResolved}" VerticalAlignment="Center" HorizontalAlignment="Center">
                        </ContentControl>
                        <TextBlock Text="{Binding DisplayName}" Grid.Column="1" Margin="5,0,0,0">
                        </TextBlock>
                      </Grid>
                    </DataTemplate>
                  </ComboBox.ItemTemplate>
                </ComboBox>
                <ContentControl IsTabStop="False" x:Name="Operand1" Grid.Row="1" Grid.Column="1" Margin="5" Width="200" HorizontalContentAlignment="Stretch" />
                <StackPanel Grid.Row="2" Grid.ColumnSpan="2" Orientation="Horizontal" Margin="20,0,0,0">
                  <RadioButton x:Name="And" GroupName="AndOr" Content="{TemplateBinding AndRadioButtonText}" IsChecked="true" Style="{StaticResource RadioButtonStyle}" />
                  <RadioButton x:Name="Or" GroupName="AndOr" Content="{TemplateBinding OrRadioButtonText}" Margin="10,0,0,0" Style="{StaticResource RadioButtonStyle}" />
                </StackPanel>
                <ComboBox x:Name="Operator2" Grid.Row="3" Margin="5" Style="{StaticResource ComboBoxStyle}">
                  <ComboBox.ItemTemplate>
                    <DataTemplate>
                      <Grid>
                        <Grid.ColumnDefinitions>
                          <ColumnDefinition Width="16" />
                          <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <ContentControl IsTabStop="False" ContentTemplate="{Binding IconResolved}" VerticalAlignment="Center" HorizontalAlignment="Center">
                        </ContentControl>
                        <TextBlock Text="{Binding DisplayName}" Grid.Column="1" Margin="5,0,0,0">
                        </TextBlock>
                      </Grid>
                    </DataTemplate>
                  </ComboBox.ItemTemplate>
                </ComboBox>
                <ContentControl IsTabStop="False" x:Name="Operand2" Grid.Row="3" Grid.Column="1" Margin="5" Width="200" HorizontalContentAlignment="Stretch" />
                <StackPanel Grid.Row="4" Orientation="Horizontal" Grid.ColumnSpan="4" HorizontalAlignment="Right" Margin="5">
                  <Button Content="{TemplateBinding OKButtonText}" Width="74" Margin="0,0,10,0" Style="{StaticResource ButtonStyle}">
                    <igBase:Commanding.Commands>
                      <igBase:CommandSourceCollection>
                        <igPrim:CustomFilteringDialogControlCommandSource CommandType="Accept" EventName="Click">
                        </igPrim:CustomFilteringDialogControlCommandSource>
                        <igPrim:CustomFilteringDialogControlCommandSource CommandType="Close" EventName="Click">
                        </igPrim:CustomFilteringDialogControlCommandSource>
                      </igBase:CommandSourceCollection>
                    </igBase:Commanding.Commands>
                  </Button>
                  <Button Content="{TemplateBinding CancelButtonText}" Width="74" Style="{StaticResource ButtonStyle}">
                    <igBase:Commanding.Command>
                      <igPrim:CustomFilteringDialogControlCommandSource CommandType="Close" EventName="Click">
                      </igPrim:CustomFilteringDialogControlCommandSource>
                    </igBase:Commanding.Command>
                  </Button>
                </StackPanel>
              </Grid>
            </Border>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="igPrim:ColumnFilterDialogControl" BasedOn="{StaticResource ColumnFilterDialogControlStyle}" />

  <!-- *********************************  FilterCheckBox Style  ********************************* -->
  <Style x:Key="FilterCheckBoxStyle" TargetType="CheckBox">
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="Padding" Value="0" />
    <Setter Property="MinWidth" Value="18" />
    <Setter Property="MinHeight" Value="18" />
    <Setter Property="HorizontalAlignment" Value="Center" />
    <Setter Property="VerticalAlignment" Value="Center" />
    <Setter Property="IsHitTestVisible" Value="False" />
    <Setter Property="igPrim:XamlHelper.Focusable" Value="False" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="CheckBox">
          <Grid x:Name="grid1" Opacity="0">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CheckStates">
                <VisualState x:Name="Checked">
                  <Storyboard>
                    <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="grid1" d:IsOptimized="True" />
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Unchecked" />
                <VisualState x:Name="Indeterminate" />
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid>
              <Path Width="11" Height="8" Data="M 0,0 C0,0 11,0 11,0 11,0 7,4 7,4 7,4 7,8 7,8 7,8 4,8 4,8 4,8 4,4 4,4 4,4 0,0 0,0 z" Fill="{StaticResource GlyphBorderBrush}" Stretch="Fill" />
              <Path Width="7" Height="6" Data="M 2,1 C2,1 9,1 9,1 9,1 6,4 6,4 6,4 6,7 6,7 6,7 5,7 5,7 5,7 5,4 5,4 5,4 2,1 2,1 z" Fill="{StaticResource GlyphBackgroundBrush}" Stretch="Fill" />
            </Grid>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- *********************************  RootFilterXamMenuItem Style  ********************************* -->
  <Style x:Key="RootFilterXamMenuItemStyle" TargetType="igPrim:FilterMenuXamMenuItem">
    <Setter Property="Background" Value="{StaticResource TransparentBrush}" />
    <Setter Property="BorderThickness" Value="3" />
    <Setter Property="IsTabStop" Value="True" />
    <Setter Property="IsEnabled" Value="True" />
    <Setter Property="ItemsPanel">
      <Setter.Value>
        <ItemsPanelTemplate>
          <StackPanel Orientation="Vertical" />
        </ItemsPanelTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igPrim:FilterMenuXamMenuItem">
          <Grid Background="{TemplateBinding Background}">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="MouseOver">
                  <Storyboard x:Name="MouseOverStoryboard">
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="SelectedIndicator" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>
                            Visible
                          </Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Highlighted">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HighlightedIndicator" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>
                            Visible
                          </Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Disabled">
                  <Storyboard>
                    <DoubleAnimation From="1" To=".3" Duration="0" Storyboard.TargetName="MenuItemPresenter" Storyboard.TargetProperty="Opacity" />
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="SubmenuState">
                <VisualState x:Name="SubmenuOpen">
                  <Storyboard>
                    <DoubleAnimation Storyboard.TargetName="PopupBorder" Storyboard.TargetProperty="Opacity" To="1.0" BeginTime="0:0:0" Duration="0:0:0.15" />
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="SubmenuOpenImmediately">
                  <Storyboard>
                    <DoubleAnimation Storyboard.TargetName="PopupBorder" Storyboard.TargetProperty="Opacity" To="1.0" BeginTime="0:0:0" Duration="0:0:0.15" />
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="SubmenuClose">
                  <Storyboard>
                    <DoubleAnimation Storyboard.TargetName="PopupBorder" Storyboard.TargetProperty="Opacity" To="0.01" BeginTime="0:0:0" Duration="0:0:0.1" />
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="SubmenuCloseImmediately">
                  <Storyboard>
                    <DoubleAnimation Storyboard.TargetName="PopupBorder" Storyboard.TargetProperty="Opacity" To="0.01" BeginTime="0:0:0" Duration="0:0:0.1" />
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="MenuItemRole">
                <VisualState x:Name="TopLevelHeader">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="IconPlace" Storyboard.TargetProperty="Width">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <GridLength>
                            Auto
                          </GridLength>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="ChildIndicatorPlace" Storyboard.TargetProperty="Width">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <GridLength>
                            0
                          </GridLength>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0" Storyboard.TargetName="HeaderPresenter" Storyboard.TargetProperty="(FrameworkElement.Margin)">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Thickness>
                            10,3,0,3
                          </Thickness>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0" Storyboard.TargetName="HeaderCheckboxPresenter" Storyboard.TargetProperty="(FrameworkElement.Margin)">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Thickness>
                            4,3,0,3
                          </Thickness>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="TopLevelHeaderWithIcon">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="IconPlace" Storyboard.TargetProperty="Width">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <GridLength>
                            Auto
                          </GridLength>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="ChildIndicatorPlace" Storyboard.TargetProperty="Width">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <GridLength>
                            0
                          </GridLength>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0" Storyboard.TargetName="HeaderPresenter" Storyboard.TargetProperty="(FrameworkElement.Margin)">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Thickness>
                            0,3,0,3
                          </Thickness>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0" Storyboard.TargetName="HeaderCheckboxPresenter" Storyboard.TargetProperty="(FrameworkElement.Margin)">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Thickness>
                            4,3,0,3
                          </Thickness>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="TopLevelItem">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="IconPlace" Storyboard.TargetProperty="Width">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <GridLength>
                            Auto
                          </GridLength>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="ChildIndicatorPlace" Storyboard.TargetProperty="Width">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <GridLength>
                            0
                          </GridLength>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0" Storyboard.TargetName="HeaderPresenter" Storyboard.TargetProperty="(FrameworkElement.Margin)">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Thickness>
                            10,3,0,3
                          </Thickness>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0" Storyboard.TargetName="HeaderCheckboxPresenter" Storyboard.TargetProperty="(FrameworkElement.Margin)">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Thickness>
                            4,3,0,3
                          </Thickness>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="TopLevelItemWithIcon">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="IconPlace" Storyboard.TargetProperty="Width">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <GridLength>
                            Auto
                          </GridLength>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="ChildIndicatorPlace" Storyboard.TargetProperty="Width">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <GridLength>
                            0
                          </GridLength>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0" Storyboard.TargetName="HeaderPresenter" Storyboard.TargetProperty="(FrameworkElement.Margin)">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Thickness>
                            0,3,0,3
                          </Thickness>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0" Storyboard.TargetName="HeaderCheckboxPresenter" Storyboard.TargetProperty="(FrameworkElement.Margin)">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Thickness>
                            4,3,0,3
                          </Thickness>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="SubmenuHeader">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="ArrowPanel" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>
                            Visible
                          </Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="HeaderPresenter" Storyboard.TargetProperty="(FrameworkElement.Margin)">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Thickness>
                            5,3,25,3
                          </Thickness>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="SubmenuItem">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="HeaderPresenter" Storyboard.TargetProperty="(FrameworkElement.Margin)">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Thickness>
                            5,3,25,3
                          </Thickness>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="IsSeperatorItem">
                <VisualState x:Name="IsNotSeperator" />
                <VisualState x:Name="IsSeperator">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Seperator" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>
                            Visible
                          </Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="MenuItem" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>
                            Collapsed
                          </Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid x:Name="Seperator" Visibility="Collapsed">
              <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="OrientationState">
                  <VisualState x:Name="Horizontal" />
                  <VisualState x:Name="Vertical">
                    <Storyboard>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HorizontalContainer" Storyboard.TargetProperty="Visibility">
                        <DiscreteObjectKeyFrame KeyTime="0">
                          <DiscreteObjectKeyFrame.Value>
                            <Visibility>
                              Collapsed
                            </Visibility>
                          </DiscreteObjectKeyFrame.Value>
                        </DiscreteObjectKeyFrame>
                      </ObjectAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="VertitalContainer" Storyboard.TargetProperty="Visibility">
                        <DiscreteObjectKeyFrame KeyTime="0">
                          <DiscreteObjectKeyFrame.Value>
                            <Visibility>
                              Visible
                            </Visibility>
                          </DiscreteObjectKeyFrame.Value>
                        </DiscreteObjectKeyFrame>
                      </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualState>
                </VisualStateGroup>
              </VisualStateManager.VisualStateGroups>
              <Border Name="HorizontalContainer" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{StaticResource SeparatorBrush}" Background="{TemplateBinding Background}" Margin="29,2,2,2" Height="1" />
              <Border Name="VertitalContainer" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{StaticResource SeparatorBrush}" Background="{TemplateBinding Background}" Margin="2" Width="1" Visibility="Collapsed" />
            </Grid>
            <Grid x:Name="MenuItem">
              <Rectangle x:Name="SelectedIndicator" Fill="{StaticResource MenuItemHoverBackgroundBrush}" Stroke="{StaticResource MenuItemHoverBorderBrush}" Visibility="Collapsed" Grid.ColumnSpan="3" HorizontalAlignment="Stretch" RadiusX="1" RadiusY="1" Margin="1" />
              <Rectangle x:Name="HighlightedIndicator" Fill="{StaticResource MenuItemHighlightedBackgroundBrush}" Stroke="{StaticResource MenuItemHighlightedBorderBrush}" Visibility="Collapsed" Grid.ColumnSpan="3" HorizontalAlignment="Stretch" RadiusX="1" RadiusY="1" Margin="1" />
              <!-- MenuItemPresenter - presentes the content of the menu item. -->
              <ContentPresenter x:Name="MenuItemPresenter" Visibility="Visible" Opacity="1" Margin="32,0,0,0">
                <ContentPresenter.Content>
                  <Grid>
                    <Grid.ColumnDefinitions>
                      <ColumnDefinition x:Name="IconPlace" Width="27" />
                      <ColumnDefinition Width="*" />
                      <ColumnDefinition x:Name="ChildIndicatorPlace" Width="22" />
                    </Grid.ColumnDefinitions>
                    <!--<Rectangle x:Name="innerStroke" StrokeThickness="1" Stroke="{StaticResource Brush_141}" Margin="1" Grid.ColumnSpan="3" Visibility="Collapsed" RadiusX="1"
						                        RadiusY="1"/>-->
                    <!-- Icon presenter-->
                    <ContentControl x:Name="HeaderIconPresenter" Height="16" Width="16" Visibility="{TemplateBinding IconVisibilityResolved}" Content="{TemplateBinding Icon}" Margin="4,3,4,3" />
                    <!-- Checkbox presenter-->
                    <ContentPresenter x:Name="HeaderCheckboxPresenter" Margin="4,3,4,3" HorizontalAlignment="Right" VerticalAlignment="Center" Visibility="{TemplateBinding CheckBoxVisibilityResolved}">
                      <ContentPresenter.Content>
                        <CheckBox IsTabStop="False" IsHitTestVisible="False" IsChecked="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsChecked, Mode=TwoWay}" Style="{StaticResource CheckBoxStyle}" />
                      </ContentPresenter.Content>
                    </ContentPresenter>
                    <!-- Header presenter-->
                    <Grid Grid.Column="1">
                      <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                      </Grid.ColumnDefinitions>
                      <ContentPresenter x:Name="HeaderPresenter" Margin="5,3,5,3" Content="{TemplateBinding Header}" ContentTemplate="{TemplateBinding HeaderTemplate}" Grid.Column="0" VerticalAlignment="Center" />
                      <TextBlock Grid.Column="1" VerticalAlignment="Center" Text="{TemplateBinding InputGestureText}" Margin="5,3,2,3" Foreground="{StaticResource ForegroundBrush}" />
                    </Grid>
                    <!-- Arrow indicator presenter-->
                    <Grid Grid.Column="2" x:Name="ArrowPanel" VerticalAlignment="Center" HorizontalAlignment="Center" Visibility="Collapsed">
                      <Path Fill="{StaticResource GlyphBorderBrush}" x:Name="ArrowPanelPath" VerticalAlignment="Center" Margin="7,0,7,0" Data="M0,0 L0,8 L4,4 z" />
                    </Grid>
                  </Grid>
                </ContentPresenter.Content>
              </ContentPresenter>
            </Grid>
            <Popup x:Name="Popup">
              <Grid>
                <Border x:Name="PopupBorder" Opacity="0.01" Background="{StaticResource PopupBackgroundBrush}" BorderBrush="{StaticResource PopupBorderBrush}" BorderThickness="1" CornerRadius="1">
                  <Grid>
                    <Grid.ColumnDefinitions>
                      <ColumnDefinition Width="27" />
                      <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <Border Grid.Column="0" BorderBrush="{StaticResource MenuIconColumnBackgroundBrush}" BorderThickness="0,0,1,0" Width="27" HorizontalAlignment="Left" />
                    <ScrollViewer x:Name="ScrollViewer" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto" Grid.ColumnSpan="2" Style="{StaticResource ScrollViewerStyle}">
                      <ItemsPresenter Grid.ColumnSpan="2" />
                    </ScrollViewer>
                  </Grid>
                </Border>
              </Grid>
            </Popup>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- *********************************  FilterXamMenuItem Style  ********************************* -->
  <Style x:Key="FilterXamMenuItemStyle" TargetType="igPrim:FilterMenuXamMenuItem">
    <Setter Property="Background" Value="{StaticResource TransparentBrush}" />
    <Setter Property="BorderThickness" Value="3" />
    <Setter Property="IsTabStop" Value="True" />
    <Setter Property="IsEnabled" Value="True" />
    <Setter Property="ItemsPanel">
      <Setter.Value>
        <ItemsPanelTemplate>
          <StackPanel Orientation="Vertical" />
        </ItemsPanelTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igPrim:FilterMenuXamMenuItem">
          <Grid Background="{TemplateBinding Background}">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="MouseOver">
                  <Storyboard x:Name="MouseOverStoryboard">
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="SelectedIndicator" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>
                            Visible
                          </Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Highlighted">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HighlightedIndicator" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>
                            Visible
                          </Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Disabled">
                  <Storyboard>
                    <DoubleAnimation From="1" To=".3" Duration="0" Storyboard.TargetName="MenuItemPresenter" Storyboard.TargetProperty="Opacity" />
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="SubmenuState">
                <VisualState x:Name="SubmenuOpen">
                  <Storyboard>
                    <DoubleAnimation Storyboard.TargetName="PopupBorder" Storyboard.TargetProperty="Opacity" To="1.0" BeginTime="0:0:0" Duration="0:0:0.15" />
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="SubmenuOpenImmediately">
                  <Storyboard>
                    <DoubleAnimation Storyboard.TargetName="PopupBorder" Storyboard.TargetProperty="Opacity" To="1.0" BeginTime="0:0:0" Duration="0:0:0.15" />
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="SubmenuClose">
                  <Storyboard>
                    <DoubleAnimation Storyboard.TargetName="PopupBorder" Storyboard.TargetProperty="Opacity" To="0.01" BeginTime="0:0:0" Duration="0:0:0.1" />
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="SubmenuCloseImmediately">
                  <Storyboard>
                    <DoubleAnimation Storyboard.TargetName="PopupBorder" Storyboard.TargetProperty="Opacity" To="0.01" BeginTime="0:0:0" Duration="0:0:0.1" />
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="MenuItemRole">
                <VisualState x:Name="TopLevelHeader">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="IconPlace" Storyboard.TargetProperty="Width">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <GridLength>
                            Auto
                          </GridLength>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="ChildIndicatorPlace" Storyboard.TargetProperty="Width">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <GridLength>
                            0
                          </GridLength>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0" Storyboard.TargetName="HeaderPresenter" Storyboard.TargetProperty="(FrameworkElement.Margin)">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Thickness>
                            10,3,0,3
                          </Thickness>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0" Storyboard.TargetName="HeaderCheckboxPresenter" Storyboard.TargetProperty="(FrameworkElement.Margin)">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Thickness>
                            4,3,0,3
                          </Thickness>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="TopLevelHeaderWithIcon">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="IconPlace" Storyboard.TargetProperty="Width">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <GridLength>
                            Auto
                          </GridLength>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="ChildIndicatorPlace" Storyboard.TargetProperty="Width">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <GridLength>
                            0
                          </GridLength>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0" Storyboard.TargetName="HeaderPresenter" Storyboard.TargetProperty="(FrameworkElement.Margin)">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Thickness>
                            0,3,0,3
                          </Thickness>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0" Storyboard.TargetName="HeaderCheckboxPresenter" Storyboard.TargetProperty="(FrameworkElement.Margin)">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Thickness>
                            4,3,0,3
                          </Thickness>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="TopLevelItem">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="IconPlace" Storyboard.TargetProperty="Width">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <GridLength>
                            Auto
                          </GridLength>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="ChildIndicatorPlace" Storyboard.TargetProperty="Width">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <GridLength>
                            0
                          </GridLength>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0" Storyboard.TargetName="HeaderPresenter" Storyboard.TargetProperty="(FrameworkElement.Margin)">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Thickness>
                            10,3,0,3
                          </Thickness>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0" Storyboard.TargetName="HeaderCheckboxPresenter" Storyboard.TargetProperty="(FrameworkElement.Margin)">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Thickness>
                            4,3,0,3
                          </Thickness>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="TopLevelItemWithIcon">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="IconPlace" Storyboard.TargetProperty="Width">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <GridLength>
                            Auto
                          </GridLength>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="ChildIndicatorPlace" Storyboard.TargetProperty="Width">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <GridLength>
                            0
                          </GridLength>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0" Storyboard.TargetName="HeaderPresenter" Storyboard.TargetProperty="(FrameworkElement.Margin)">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Thickness>
                            0,3,0,3
                          </Thickness>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0" Storyboard.TargetName="HeaderCheckboxPresenter" Storyboard.TargetProperty="(FrameworkElement.Margin)">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Thickness>
                            4,3,0,3
                          </Thickness>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="SubmenuHeader">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="ArrowPanel" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>
                            Visible
                          </Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="HeaderPresenter" Storyboard.TargetProperty="(FrameworkElement.Margin)">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Thickness>
                            5,3,25,3
                          </Thickness>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="SubmenuItem">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="HeaderPresenter" Storyboard.TargetProperty="(FrameworkElement.Margin)">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Thickness>
                            5,3,25,3
                          </Thickness>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="IsSeperatorItem">
                <VisualState x:Name="IsNotSeperator" />
                <VisualState x:Name="IsSeperator">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Seperator" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>
                            Visible
                          </Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="MenuItem" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>
                            Collapsed
                          </Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid x:Name="Seperator" Visibility="Collapsed">
              <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="OrientationState">
                  <VisualState x:Name="Horizontal" />
                  <VisualState x:Name="Vertical">
                    <Storyboard>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HorizontalContainer" Storyboard.TargetProperty="Visibility">
                        <DiscreteObjectKeyFrame KeyTime="0">
                          <DiscreteObjectKeyFrame.Value>
                            <Visibility>
                              Collapsed
                            </Visibility>
                          </DiscreteObjectKeyFrame.Value>
                        </DiscreteObjectKeyFrame>
                      </ObjectAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="VertitalContainer" Storyboard.TargetProperty="Visibility">
                        <DiscreteObjectKeyFrame KeyTime="0">
                          <DiscreteObjectKeyFrame.Value>
                            <Visibility>
                              Visible
                            </Visibility>
                          </DiscreteObjectKeyFrame.Value>
                        </DiscreteObjectKeyFrame>
                      </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualState>
                </VisualStateGroup>
              </VisualStateManager.VisualStateGroups>
              <Border Name="HorizontalContainer" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{StaticResource SeparatorBrush}" Background="{TemplateBinding Background}" Margin="29,2,2,2" Height="1" />
              <Border Name="VertitalContainer" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{StaticResource SeparatorBrush}" Background="{TemplateBinding Background}" Margin="2" Width="1" Visibility="Collapsed" />
            </Grid>
            <Grid x:Name="MenuItem">
              <Rectangle x:Name="SelectedIndicator" Fill="{StaticResource MenuItemHoverBackgroundBrush}" Stroke="{StaticResource MenuItemHoverBorderBrush}" Visibility="Collapsed" Grid.ColumnSpan="3" HorizontalAlignment="Stretch" RadiusX="1" RadiusY="1" Margin="1" />
              <Rectangle x:Name="HighlightedIndicator" Fill="{StaticResource MenuItemHighlightedBackgroundBrush}" Stroke="{StaticResource MenuItemHighlightedBorderBrush}" Visibility="Collapsed" Grid.ColumnSpan="3" HorizontalAlignment="Stretch" RadiusX="1" RadiusY="1" Margin="1" />
              <!-- MenuItemPresenter - presentes the content of the menu item. -->
              <ContentPresenter x:Name="MenuItemPresenter" Visibility="Visible" Opacity="1">
                <ContentPresenter.Content>
                  <Grid>
                    <Grid.ColumnDefinitions>
                      <ColumnDefinition x:Name="IconPlace" Width="27" />
                      <ColumnDefinition Width="*" />
                      <ColumnDefinition x:Name="ChildIndicatorPlace" Width="22" />
                    </Grid.ColumnDefinitions>
                    <!--<Rectangle x:Name="innerStroke" StrokeThickness="1" Stroke="{StaticResource Brush_142}" Margin="1" Grid.ColumnSpan="3" Visibility="Collapsed" RadiusX="1"
						                        RadiusY="1"/>-->
                    <!-- Icon presenter-->
                    <ContentControl x:Name="HeaderIconPresenter" Height="16" Width="16" Margin="4,3,4,3" Visibility="{TemplateBinding IconVisibilityResolved}" Content="{TemplateBinding Icon}" />
                    <!-- Checkbox presenter-->
                    <ContentPresenter x:Name="HeaderCheckboxPresenter" Margin="4,3,4,3" HorizontalAlignment="Right" VerticalAlignment="Center" Visibility="{TemplateBinding CheckBoxVisibilityResolved}">
                      <ContentPresenter.Content>
                        <CheckBox IsTabStop="False" IsHitTestVisible="False" IsChecked="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsChecked, Mode=TwoWay}" Style="{StaticResource FilterCheckBoxStyle}" />
                      </ContentPresenter.Content>
                    </ContentPresenter>
                    <!-- Header presenter-->
                    <Grid Grid.Column="1">
                      <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                      </Grid.ColumnDefinitions>
                      <ContentPresenter x:Name="HeaderPresenter" Margin="5,3,5,3" Content="{TemplateBinding Header}" ContentTemplate="{TemplateBinding HeaderTemplate}" Grid.Column="0" VerticalAlignment="Center" />
                      <TextBlock Grid.Column="1" VerticalAlignment="Center" Text="{TemplateBinding InputGestureText}" Margin="5,3,2,3" Foreground="{StaticResource ForegroundBrush}" />
                    </Grid>
                    <!-- Arrow indicator presenter-->
                    <Grid Grid.Column="2" x:Name="ArrowPanel" VerticalAlignment="Center" HorizontalAlignment="Center" Visibility="Collapsed">
                      <Path Fill="{StaticResource GlyphBorderBrush}" x:Name="ArrowPanelPath" VerticalAlignment="Center" Margin="7,0,7,0" Data="M0,0 L0,8 L4,4 z" />
                    </Grid>
                  </Grid>
                </ContentPresenter.Content>
              </ContentPresenter>
            </Grid>
            <Popup x:Name="Popup">
              <Grid>
                <Border x:Name="PopupBorder" Opacity="0.01" Background="{StaticResource PopupBackgroundBrush}" BorderBrush="{StaticResource PopupBorderBrush}" BorderThickness="1" CornerRadius="1">
                  <Grid>
                    <Grid.ColumnDefinitions>
                      <ColumnDefinition Width="27" />
                      <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <Border Grid.Column="0" Background="{StaticResource MenuIconColumnBackgroundBrush}" Width="27" HorizontalAlignment="Left" />
                    <ScrollViewer x:Name="ScrollViewer" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto" Grid.ColumnSpan="2" Style="{StaticResource ScrollViewerStyle}">
                      <ItemsPresenter Grid.ColumnSpan="2" />
                    </ScrollViewer>
                  </Grid>
                </Border>
              </Grid>
            </Popup>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="igPrim:FilterMenuXamMenuItem" BasedOn="{StaticResource FilterXamMenuItemStyle}" />

  <!-- *********************************  FilterMenuCustom Template  ********************************* -->
  <DataTemplate x:Key="FilterMenuCustomTemplate">
    <igPrim:FilterMenuXamMenuItem IsCheckable="{Binding IsCheckable}" IsSeparator="{Binding IsSeparator}" IsChecked="{Binding IsChecked, Mode=TwoWay}" Header="{Binding Label}" ItemsSource="{Binding Children}" HorizontalAlignment="Stretch" SubmenuPreferredLocation="Right">
      <igBase:Commanding.Commands>
        <igBase:CommandSourceCollection>
          <ig:XamGridFilterMenuCommandSource EventName="Click" CommandType="{Binding Path=SourceElement.DataContext.FilterOperands,RelativeSource={RelativeSource Self}}">
          </ig:XamGridFilterMenuCommandSource>
          <igPrim:CompoundFilteringDialogFilterMenuCommandSource CommandType="ShowCompoundFilterDialog" ConditionalCommandParameter="{Binding Path=SourceElement.DataContext.FilterOperands,RelativeSource={RelativeSource Self}}" EventName="Click">
          </igPrim:CompoundFilteringDialogFilterMenuCommandSource>
          <igPrim:XamGridPopupFilterMenuConditionalCommandSource CommandType="ClosePopup" ConditionalCommandParameter="{Binding Path=SourceElement.DataContext.FilterOperands,RelativeSource={RelativeSource Self}}" EventName="Click">
          </igPrim:XamGridPopupFilterMenuConditionalCommandSource>
        </igBase:CommandSourceCollection>
      </igBase:Commanding.Commands>
    </igPrim:FilterMenuXamMenuItem>
  </DataTemplate>

  <!-- *********************************  RootFilterMenuCustom Template  ********************************* -->
  <DataTemplate x:Key="RootFilterMenuCustomTemplate">
    <igPrim:FilterMenuXamMenuItem IsCheckable="{Binding IsCheckable}" IsSeparator="{Binding IsSeparator}" IsChecked="{Binding IsChecked, Mode=TwoWay}" Header="{Binding Label}" ItemsSource="{Binding Children}" HorizontalAlignment="Stretch" SubmenuPreferredLocation="Right" Margin="-24,0,0,0" Style="{StaticResource RootFilterXamMenuItemStyle}">
      <igBase:Commanding.Commands>
        <igBase:CommandSourceCollection>
          <ig:XamGridFilterMenuCommandSource EventName="Click" CommandType="{Binding Path=SourceElement.DataContext.FilterOperands,RelativeSource={RelativeSource Self}}">
          </ig:XamGridFilterMenuCommandSource>
          <igPrim:CompoundFilteringDialogFilterMenuCommandSource CommandType="ShowCompoundFilterDialog" ConditionalCommandParameter="{Binding Path=SourceElement.DataContext.FilterOperands,RelativeSource={RelativeSource Self}}" EventName="Click">
          </igPrim:CompoundFilteringDialogFilterMenuCommandSource>
          <igPrim:XamGridPopupFilterMenuConditionalCommandSource CommandType="ClosePopup" ConditionalCommandParameter="{Binding Path=SourceElement.DataContext.FilterOperands,RelativeSource={RelativeSource Self}}" EventName="Click">
          </igPrim:XamGridPopupFilterMenuConditionalCommandSource>
        </igBase:CommandSourceCollection>
      </igBase:Commanding.Commands>
    </igPrim:FilterMenuXamMenuItem>
  </DataTemplate>

  <!-- *********************************  FilterMenu Style  ********************************* -->
  <Style x:Key="FilterMenuStyle" TargetType="igBase:XamMenu">
    <Setter Property="Background" Value="{StaticResource FilterMenuBackgroundBrush}" />
    <Setter Property="HorizontalAlignment" Value="Stretch" />
    <Setter Property="MenuOrientation" Value="Vertical" />
    <Setter Property="Margin" Value="0,1" />
    <Setter Property="HierarchicalItemTemplate">
      <Setter.Value>
        <igBase:HierarchicalDataTemplate DefaultItemsContainer="{StaticResource FilterMenuCustomTemplate}" ItemsSource="{Binding Children}">
          <igBase:HierarchicalDataTemplate.HierarchicalItemTemplate>
            <igBase:HierarchicalDataTemplate DefaultItemsContainer="{StaticResource FilterMenuCustomTemplate}" ItemsSource="{Binding Children}">
            </igBase:HierarchicalDataTemplate>
          </igBase:HierarchicalDataTemplate.HierarchicalItemTemplate>
        </igBase:HierarchicalDataTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- *********************************  FilterSelectionItem Style  ********************************* -->
  <Style x:Key="FilterSelectionItemStyle" TargetType="Button">
    <Setter Property="Background" Value="{StaticResource FilterSelectionItemBackgroundBrush}" />
    <Setter Property="BorderBrush" Value="{StaticResource FilterSelectionItemBorderBrush}" />
    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
    <Setter Property="Padding" Value="0" />
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="Margin" Value="0" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="Button">
          <Grid Background="{StaticResource TransparentBrush}">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="MouseOver">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames BeginTime="0" Storyboard.TargetName="Bd" Storyboard.TargetProperty="(UIElement.Visibility)">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>
                            Visible
                          </Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Pressed" />
                <VisualState x:Name="Disabled">
                  <Storyboard>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="contentPresenter" Storyboard.TargetProperty="Opacity">
                      <SplineDoubleKeyFrame KeyTime="0" Value=".35" />
                    </DoubleAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="FocusStates">
                <VisualState x:Name="Focused" />
                <VisualState x:Name="Unfocused" />
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Border x:Name="Bd" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="2" Visibility="Collapsed">
              <Rectangle StrokeThickness="1" Stroke="{StaticResource FilterSelectionItemHighlightBorderBrush}" RadiusY="1" RadiusX="1" />
            </Border>
            <ContentPresenter x:Name="contentPresenter" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- ********************************** FilterSelectionListBoxItem Style **********************************-->
  <Style x:Key="FilterSelectionListBoxItemStyle" TargetType="ListBoxItem">
    <Setter Property="Padding" Value="4,2" />
    <Setter Property="HorizontalAlignment" Value="Left" />
    <Setter Property="VerticalAlignment" Value="Center" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="ListBoxItem">
          <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalAlignment}" VerticalAlignment="{TemplateBinding VerticalAlignment}" Margin="{TemplateBinding Padding}" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- ********************************** FilterSelectionListBox Style **********************************-->
  <Style x:Key="FilterSelectionListBoxStyle" TargetType="ListBox">
    <Setter Property="Background" Value="{StaticResource FilterSelectionListBoxBackgroundBrush}" />
    <Setter Property="BorderBrush" Value="{StaticResource FilterSelectionListBoxBorderBrush}" />
    <Setter Property="Padding" Value="0" />
    <Setter Property="ItemContainerStyle" Value="{StaticResource FilterSelectionListBoxItemStyle}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="ListBox">
          <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1">
            <ScrollViewer x:Name="ScrollViewer" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" Style="{StaticResource ScrollViewerStyle}">
              <ItemsPresenter />
            </ScrollViewer>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- *********************************  ClearFilterTextboxWatermarkButton Style  ********************************* -->
  <Style x:Key="ClearFilterTextboxWatermarkButtonStyle" BasedOn="{StaticResource ButtonStyle}" TargetType="Button" />

  <!-- *********************************  FilterTextBoxWatermarked Style  ********************************* -->
  <Style x:Key="FilterTextBoxWatermarkedStyle" TargetType="igPrim:FilterTextBoxWatermarked">
    <Setter Property="Background" Value="{StaticResource TextBoxBackgroundBrush}" />
    <Setter Property="BorderBrush" Value="{StaticResource TextBoxBorderBrush}" />
    <Setter Property="MaxWidth" Value="Infinity" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igPrim:FilterTextBoxWatermarked">
          <Grid>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="WaterMarks">
                <VisualState x:Name="ShowWaterMark">
                </VisualState>
                <VisualState x:Name="HideWaterMark">
                  <Storyboard>
                    <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="Watermark" Storyboard.TargetProperty="(UIElement.Opacity)">
                      <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0" />
                    </DoubleAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="border">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>
                            Collapsed
                          </Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="ClearButtonStates">
                <VisualState x:Name="ShowClearButton">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="ClearButton" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>
                            Visible
                          </Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="HideClearButton">
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Border BorderThickness="1" Padding="5,0,0,0" Background="{StaticResource TextBoxBackgroundBrush}" BorderBrush="{StaticResource TextBoxBorderBrush}">
              <TextBlock x:Name="Watermark" Foreground="{StaticResource WatermarkForegroundBrush}" Text="{TemplateBinding Watermark}" Grid.Row="0" VerticalAlignment="Center" />
            </Border>
            <Border x:Name="border" Height="14" Width="14" HorizontalAlignment="Right" Margin="0,0,7,0" VerticalAlignment="Center">
              <Viewbox>
                <Grid>
                  <Path Data="M19.869999,34.438999 L28.593,44.078999 L8.7229996,62.127998 L0,52.488998 z M41.877007,5.999999 C35.006012,5.9999995 28.87801,10.367 26.630009,16.865 C25.220009,20.938 25.48201,25.315998 27.365009,29.192999 C29.248009,33.07 32.529011,35.98 36.602013,37.389999 C38.31601,37.981998 40.091007,38.283001 41.880009,38.283001 C48.751007,38.283001 54.878006,33.917 57.127007,27.416998 C58.536007,23.344999 58.275009,18.966999 56.392006,15.09 C54.507008,11.213 51.228008,8.302 47.155006,6.8940001 L47.154007,6.8930001 C45.442009,6.2999997 43.666008,5.9999995 41.877007,5.999999 z M41.877007,0 C44.279007,1.4113701E-07 46.720009,0.39400011 49.117008,1.223 C60.669006,5.2199993 66.794014,17.827 62.797009,29.379997 C59.629005,38.535999 51.053009,44.282997 41.880009,44.282997 C39.479008,44.282997 37.036011,43.888996 34.640011,43.059998 C23.087009,39.063 16.962011,26.456999 20.960011,14.903 C24.12801,5.7469997 32.70401,1.4113701E-07 41.877007,0 z" Margin="-0.827,0,0.807,-0.128" Stretch="Fill" UseLayoutRounding="False" StrokeThickness="0.5" Fill="{StaticResource GlyphBorderBrush}" />
                </Grid>
              </Viewbox>
            </Border>
            <igPrim:FilterTextBox x:Name="FilterTextBox" Background="{StaticResource TransparentBrush}" Grid.Row="0" HorizontalAlignment="Stretch" Text="{Binding FilterSelectionControl.FilterText, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" DataContext="{Binding FilterSelectionControl, RelativeSource={RelativeSource TemplatedParent}}" Padding="3,2,2,2" BorderBrush="{x:Null}">
              <igBase:Commanding.Command>
                <ig:XamGridFilterMenuFilterTextBoxCommandSource EventName="TextChanged" CommandType="Filter" FilterSelectionControl="{Binding SourceElement.DataContext, RelativeSource={RelativeSource Self}}" />
              </igBase:Commanding.Command>
            </igPrim:FilterTextBox>
            <Border HorizontalAlignment="Right" Height="Auto" Margin="0" VerticalAlignment="Stretch" Width="Auto" Padding="0">
              <Button x:Name="ClearButton" DataContext="{Binding FilterSelectionControl, RelativeSource={RelativeSource TemplatedParent}}" BorderThickness="1" Style="{StaticResource ClearFilterTextboxWatermarkButtonStyle}" Width="17" Margin="0" Visibility="Collapsed">
                <igBase:Commanding.Command>
                  <ig:XamGridFilterMenuFilterTextBoxCommandSource EventName="Click" CommandType="ClearFilterText" FilterSelectionControl="{Binding SourceElement.DataContext, RelativeSource={RelativeSource Self}}" />
                </igBase:Commanding.Command>
                <Viewbox Height="8" Margin="0" Stretch="Fill" Width="8" HorizontalAlignment="Center" VerticalAlignment="Center">
                  <Path Data="F1 M 53.122,8.510 L 44.610,0.000 L 26.561,18.050 L 8.510,0.000 L 0.000,8.510 L 18.050,26.561 L 0.000,44.611 L 8.510,53.123 L 26.561,35.072 L 44.612,53.123 L 53.122,44.612 L 35.071,26.561 L 53.122,8.510 Z" Fill="{StaticResource GlyphBorderBrush}" />
                </Viewbox>
              </Button>
            </Border>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="igPrim:FilterTextBoxWatermarked" BasedOn="{StaticResource FilterTextBoxWatermarkedStyle}" />

  <!-- *********************************  FilterSelectionControl Style  ********************************* -->
  <Style x:Key="FilterSelectionControlStyle" TargetType="igPrim:FilterSelectionControl">
    <Setter Property="Background" Value="{StaticResource PopupBackgroundBrush}" />
    <Setter Property="BorderBrush" Value="{StaticResource PopupBorderBrush}" />
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="Margin" Value="0" />
    <Setter Property="Padding" Value="11,0,0,0" />
    <Setter Property="CheckBoxStyle" Value="{StaticResource CheckBoxStyle}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igPrim:FilterSelectionControl">
          <Grid>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="SelectionBoxStates">
                <VisualState x:Name="ShowSelectionBox" />
                <VisualState x:Name="HideSelectionBox">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames BeginTime="0" Storyboard.TargetName="SelectAllCheckBox" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>
                            Collapsed
                          </Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames BeginTime="0" Storyboard.TargetName="SelectAllCheckBoxSeperator" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>
                            Collapsed
                          </Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames BeginTime="0" Storyboard.TargetName="itemsBox" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>
                            Collapsed
                          </Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="SelectionBoxWaterMark">
                <VisualState x:Name="ShowSelectionBoxWaterMark" />
                <VisualState x:Name="HideSelectionBoxWaterMark">
                  <Storyboard>
                    <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="ItemsBoxWatermark" Storyboard.TargetProperty="(UIElement.Opacity)">
                      <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0" />
                    </DoubleAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="AppendButtonVisibility">
                <VisualState x:Name="ShowAppendFilterButton" />
                <VisualState x:Name="HideAppendFilterButton">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="AppendFiltersCheckBox" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>
                            Collapsed
                          </Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="BusyStatus">
                <VisualState x:Name="Idle" />
                <VisualState x:Name="Busy">
                  <Storyboard RepeatBehavior="Forever">
                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="busyIndicator" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <DoubleAnimation Duration="0:0:0.7" To="180" Storyboard.TargetProperty="(UIElement.RenderTransform).(RotateTransform.Angle)" Storyboard.TargetName="busyIndicatorPath" d:IsOptimized="True" />
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="LimitItemsStatus">
                <VisualState x:Name="NotLimited" />
                <VisualState x:Name="Limited">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="limitedListIndicator" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="3" Padding="1">
            </Border>
            <Border x:Name="Bd" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="3" Padding="1">
              <Grid>
                <Grid.RowDefinitions>
                  <!-- ClearFilters -->
                  <RowDefinition Height="Auto" MinHeight="22" />
                  <!-- CustomFilterDialog -->
                  <RowDefinition Height="Auto" />
                  <!-- The filter text box -->
                  <RowDefinition Height="Auto" />
                  <!-- HorizontalRule -->
                  <RowDefinition Height="Auto" />
                  <!-- SelectAll Checkbox -->
                  <RowDefinition Height="Auto" />
                  <!-- Append filter checkbox -->
                  <RowDefinition Height="Auto" />
                  <!-- FilterSelectionValues -->
                  <RowDefinition Height="*" />
                  <!-- LimitedListIndicator -->
                  <RowDefinition Height="Auto" />
                  <!-- SelectionButtons -->
                  <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                  <!-- LeftVerticalBackground -->
                  <ColumnDefinition MinWidth="24" MaxWidth="24" />
                  <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <!-- LeftVerticalBackground -->
                <Border Grid.RowSpan="8" BorderBrush="{StaticResource MenuIconColumnBackgroundBrush}" BorderThickness="0,0,1,0" HorizontalAlignment="Right" />
                <!-- ClearFilters Control -->
                <Button Grid.ColumnSpan="2" Style="{StaticResource FilterSelectionItemStyle}" Padding="0">
                  <igBase:Commanding.Commands>
                    <igBase:CommandSourceCollection>
                      <ig:FilterSelectionControlCommandSource CommandType="ClearSelectedItems" EventName="Click">
                      </ig:FilterSelectionControlCommandSource>
                      <ig:FilterSelectionControlCommandSource CommandType="AcceptChanges" EventName="Click">
                      </ig:FilterSelectionControlCommandSource>
                      <igPrim:XamGridPopupCommandSource CommandType="ClosePopup" EventName="Click">
                      </igPrim:XamGridPopupCommandSource>
                    </igBase:CommandSourceCollection>
                  </igBase:Commanding.Commands>
                  <Grid Background="{StaticResource TransparentBrush}">
                    <Grid.ColumnDefinitions>
                      <ColumnDefinition Width="24" />
                      <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <Grid Width="15" Height="10">
                      <Path x:Name="clearFilterGlyphStroke" Width="11" Height="8" Data="M 0,0 C0,0 11,0 11,0 11,0 7,4 7,4 7,4 7,8 7,8 7,8 4,8 4,8 4,8 4,4 4,4 4,4 0,0 0,0 z" Stretch="Fill" Fill="{StaticResource GlyphBorderBrush}" />
                      <Path x:Name="clearFilterGlyphFill" Width="7" Height="6" HorizontalAlignment="Center" VerticalAlignment="Center" Stretch="Fill" Data="M 0,0 C0,0 7,0 7,0 7,0 4,3 4,3 4,3 4,6 4,6 4,6 3,6 3,6 3,6 3,3 3,3 3,3 0,0 0,0 z" Fill="{StaticResource GlyphInnerBackgroundBrush}" />
                      <Path x:Name="clearFilterGlyphAdorner" HorizontalAlignment="Center" VerticalAlignment="Bottom" Height="4" Width="5" Stretch="Fill" Opacity="1" Data="M 0,0 C0,0 0,1 0,1 0,1 1,1 1,1 1,1 1,3 1,3 1,3 0,3 0,3 0,3 0,4 0,4 0,4 2,4 2,4 2,4 2,3 2,3 2,3 3,3 3,3 3,3 3,4 3,4 3,4 5,4 5,4 5,4 5,3 5,3 5,3 4,3 4,3 4,3 4,1 4,1 4,1 5,1 5,1 5,1 5,0 5,0 5,0 3,0 3,0 3,0 3,1 3,1 3,1 2,1 2,1 2,1 2,0 2,0 2,0 0,0 0,0 z" Fill="{StaticResource GlyphBorderBrush}" Margin="10,4,0,0" />
                    </Grid>
                    <Rectangle Fill="{StaticResource TransparentBrush}" Grid.Column="1" />
                    <TextBlock HorizontalAlignment="Stretch" Text="{TemplateBinding ClearFiltersTextResolved}" Grid.Column="1" Margin="8,0,6,0" />
                  </Grid>
                </Button>
                <!-- CustomFilterDialog Control -->
                <igBase:XamMenu x:Name="filtersMenu" HorizontalAlignment="Stretch" MenuOrientation="Vertical" Grid.Row="1" Grid.Column="1" Visibility="{Binding Path=Cell.Column.FilterColumnSettings.FilterMenuCustomFilteringButtonVisibilityResolved, RelativeSource={RelativeSource TemplatedParent}}" MinHeight="22" DefaultItemsContainer="{StaticResource RootFilterMenuCustomTemplate}" ItemsSource="{Binding Path=Cell.Column.FilterColumnSettings.FilterMenuOperands, RelativeSource={RelativeSource TemplatedParent}}" Tag="{Binding Path=Cell, RelativeSource={RelativeSource TemplatedParent}}" IsEnabled="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ItemSourceSet}">
                  <igBase:XamMenu.Resources>
                    <Style TargetType="CheckBox" BasedOn="{StaticResource FilterCheckBoxStyle}" />
                  </igBase:XamMenu.Resources>
                  <ig:XamMenu.Style>
                    <StaticResource ResourceKey="FilterMenuStyle" />
                  </ig:XamMenu.Style>
                </igBase:XamMenu>
                <CheckBox x:Name="hasFilterCheckBox" Grid.Row="1" Grid.Column="0" HorizontalAlignment="Center" VerticalAlignment="Center" Visibility="{Binding Path=Cell.Column.FilterColumnSettings.FilterMenuCustomFilteringButtonVisibilityResolved, RelativeSource={RelativeSource TemplatedParent}}" IsChecked="{Binding Path=HasFilters, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" Style="{StaticResource FilterCheckBoxStyle}" />
                <igPrim:FilterTextBoxWatermarked x:Name="PART_FilterTextBoxWatermarked" FilterSelectionControl="{Binding RelativeSource={RelativeSource TemplatedParent}}" HorizontalAlignment="Stretch" Grid.Row="2" Margin="8,7,6,1" Background="{StaticResource TransparentBrush}" Grid.Column="1" IsEnabled="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ItemSourceSet}" />
                <!-- HorizontalRule -->
                <Rectangle x:Name="SelectAllCheckBoxSeperator" Height="1" Fill="{StaticResource SeparatorBrush}" VerticalAlignment="Top" Margin="8,7,0,0" Grid.Row="3" Grid.Column="1" />
                <!-- SelectAll Checkbox -->
                <CheckBox x:Name="SelectAllCheckBox" Style="{StaticResource CheckBoxStyle}" Grid.Row="4" Grid.Column="1" Margin="8,7,0,0" />
                <CheckBox x:Name="AppendFiltersCheckBox" Grid.Row="5" Grid.Column="1" Margin="8,7,0,0" Style="{StaticResource CheckBoxStyle}" Content="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=AppendFilterText}" IsChecked="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=AppendFilters, Mode=TwoWay}" />
                <!-- FilterSelectionValues -->
                <CheckBox Grid.Row="6" Grid.Column="0" HorizontalAlignment="Center" VerticalAlignment="Top" IsChecked="{Binding Path=HasCheckedItems, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" Margin="0,8,0,0" Style="{StaticResource FilterCheckBoxStyle}" />
                <Grid MinHeight="159" Grid.Row="6" Grid.Column="1" Margin="8,7,6,7" MinWidth="200">
                  <ListBox x:Name="itemsBox" Style="{StaticResource FilterSelectionListBoxStyle}" ItemsSource="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=FilterableUniqueValues}" Padding="0">
                    <ListBox.ItemTemplate>
                      <DataTemplate>
                        <CheckBox IsChecked="{Binding IsChecked, Mode=TwoWay}" IsThreeState="False" Style="{StaticResource CheckBoxStyle}">
                          <TextBlock Text="{Binding ContentString}" />
                        </CheckBox>
                      </DataTemplate>
                    </ListBox.ItemTemplate>
                  </ListBox>
                  <Grid x:Name="busyIndicator" Background="{StaticResource FilterMenuBusyIndicatorBackgroundBrush}" Visibility="Collapsed" Opacity="0.66">
                    <StackPanel Margin="10" VerticalAlignment="Center" HorizontalAlignment="Center">
                      <Path x:Name="busyIndicatorPath" Data="M7.2500005,16.333002 L21,22.582914 C21,22.582914 19.249714,23.58293 14.75,25.832844 C27.5,39.832409 36.5,24.832874 36.5,24.832874 C36.5,24.832874 36.500198,25.083141 43,28.332829 C23.25,53.832478 8,28.332829 8,28.332829 L0.5,31.582787 z M26.973215,0.50051785 C37.27507,0.58836842 44,11.833179 44,11.833179 L51.5,8.5832176 L44.75,23.833004 L31,17.583092 C31,17.583092 32.750286,16.583076 37.25,14.333162 C24.5,0.33359718 15.5,15.333131 15.5,15.333131 C15.5,15.333131 15.499802,15.082864 9,11.833179 C15.634766,3.2668896 21.761688,0.45607567 26.973215,0.50051785 z" Fill="{StaticResource FilterMenuBusyIndicatorPathBackgroundBrush}" Height="20" Stretch="Fill" RenderTransformOrigin="0.5,0.5" Width="25" StrokeThickness="0">
                        <Path.RenderTransform>
                          <RotateTransform />
                        </Path.RenderTransform>
                      </Path>
                      <TextBlock Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BusyText}" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="10" Foreground="{StaticResource ThemeForegroundBrush}" />
                    </StackPanel>
                  </Grid>
                </Grid>
                <TextBlock x:Name="ItemsBoxWatermark" HorizontalAlignment="Center" Grid.Row="6" Grid.Column="1" Foreground="{StaticResource ItemsBoxWatermarkForegroundBrush}" Padding="0" Text="{Binding FilterBoxNoDataAvailable, RelativeSource={RelativeSource TemplatedParent}}" VerticalAlignment="Center" />

                <!-- LimiteedListIndicator -->
                <StackPanel x:Name="limitedListIndicator" Grid.Row="7" Grid.Column="1" Visibility="Collapsed" Margin="8,0,6,7">
                  <TextBlock Text="{TemplateBinding NotAllItemsShowingText}" Foreground="{StaticResource FilterMenuNotAllItemsShowingForegroundBrush}" ToolTipService.ToolTip="{TemplateBinding NotAllItemsShowingTooltipText}" />
                </StackPanel>
                <!-- Separator -->
                <Rectangle x:Name="ButtonsSeparator" Height="1" Fill="{StaticResource SeparatorBrush}" VerticalAlignment="Top" HorizontalAlignment="Stretch" Margin="1,0" Grid.Row="8" Grid.ColumnSpan="2" />
                <!-- SelectionButtons -->
                <StackPanel x:Name="selectionButtons" Orientation="Horizontal" HorizontalAlignment="Right" Grid.Row="8" Margin="0,7,6,7" Grid.Column="1">
                  <Button x:Name="AcceptButton" Margin="0,0,5,0" Width="73" Content="{TemplateBinding OKButtonText}" IsEnabled="{Binding Path=CanFilter, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" Style="{StaticResource ButtonStyle}">
                    <igBase:Commanding.Commands>
                      <igBase:CommandSourceCollection>
                        <ig:FilterSelectionControlCommandSource CommandType="AcceptChanges" EventName="Click">
                        </ig:FilterSelectionControlCommandSource>
                        <igPrim:XamGridPopupCommandSource CommandType="ClosePopup" EventName="Click">
                        </igPrim:XamGridPopupCommandSource>
                      </igBase:CommandSourceCollection>
                    </igBase:Commanding.Commands>
                  </Button>
                  <Button x:Name="CancelButton" Width="73" Content="{TemplateBinding CancelButtonText}" Style="{StaticResource ButtonStyle}">
                    <igBase:Commanding.Command>
                      <igPrim:XamGridPopupCommandSource CommandType="ClosePopup" EventName="Click">
                      </igPrim:XamGridPopupCommandSource>
                    </igBase:Commanding.Command>
                  </Button>
                </StackPanel>
              </Grid>
            </Border>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="igPrim:FilterSelectionControl" BasedOn="{StaticResource FilterSelectionControlStyle}" />

  <!-- *********************************  DateFilter dateTreeDataTemplate  ********************************* -->
  <igPrim:DateFilterHierarchicalDataTemplate x:Key="dateTreeDataTemplate" ItemsSource="{Binding Children}">
    <CheckBox IsChecked="{Binding IsChecked, Mode=TwoWay}" Style="{StaticResource CheckBoxStyle}">
      <TextBlock Text="{Binding ContentString}" />
    </CheckBox>
    <igPrim:DateFilterHierarchicalDataTemplate.ItemTemplate>
      <igPrim:DateFilterHierarchicalDataTemplate ItemsSource="{Binding Children}">
        <CheckBox IsChecked="{Binding IsChecked, Mode=TwoWay}" Style="{StaticResource CheckBoxStyle}">
          <TextBlock Text="{Binding ContentString}" />
        </CheckBox>
        <igPrim:DateFilterHierarchicalDataTemplate.ItemTemplate>
          <igPrim:DateFilterHierarchicalDataTemplate ItemsSource="{Binding Children}">
            <CheckBox IsChecked="{Binding IsChecked, Mode=TwoWay}" Style="{StaticResource CheckBoxStyle}">
              <TextBlock Text="{Binding ContentString}" />
            </CheckBox>
            <igPrim:DateFilterHierarchicalDataTemplate.ItemTemplate>
              <igPrim:DateFilterHierarchicalDataTemplate ItemsSource="{Binding Children}">
                <CheckBox IsChecked="{Binding IsChecked, Mode=TwoWay}" Style="{StaticResource CheckBoxStyle}">
                  <TextBlock Text="{Binding ContentString}" />
                </CheckBox>
                <igPrim:DateFilterHierarchicalDataTemplate.ItemTemplate>
                  <igPrim:DateFilterHierarchicalDataTemplate ItemsSource="{Binding Children}">
                    <CheckBox IsChecked="{Binding IsChecked, Mode=TwoWay}" Style="{StaticResource CheckBoxStyle}">
                      <TextBlock Text="{Binding ContentString}" />
                    </CheckBox>
                  </igPrim:DateFilterHierarchicalDataTemplate>
                </igPrim:DateFilterHierarchicalDataTemplate.ItemTemplate>
              </igPrim:DateFilterHierarchicalDataTemplate>
            </igPrim:DateFilterHierarchicalDataTemplate.ItemTemplate>
          </igPrim:DateFilterHierarchicalDataTemplate>
        </igPrim:DateFilterHierarchicalDataTemplate.ItemTemplate>
      </igPrim:DateFilterHierarchicalDataTemplate>
    </igPrim:DateFilterHierarchicalDataTemplate.ItemTemplate>
  </igPrim:DateFilterHierarchicalDataTemplate>

  <!-- *********************************  DateFilter Converters  ********************************* -->
  <igPrim:DateFilterTypeConverter x:Key="dateFilterTypeConverter">
  </igPrim:DateFilterTypeConverter>

  <!-- *********************************  CommonValidationToolTip Template  ********************************* -->
  <ControlTemplate x:Key="CommonValidationToolTipTemplate" TargetType="ToolTip">
    <Grid x:Name="Root" Margin="5,0" RenderTransformOrigin="0,0" Opacity="0">
      <Grid.RenderTransform>
        <TranslateTransform x:Name="Translation" X="-25" />
      </Grid.RenderTransform>
      <VisualStateManager.VisualStateGroups>
        <VisualStateGroup Name="OpenStates">
          <VisualStateGroup.Transitions>
            <VisualTransition GeneratedDuration="0" />
            <VisualTransition To="Open" GeneratedDuration="0:0:0.2">
              <Storyboard>
                <DoubleAnimation Storyboard.TargetName="Translation" Storyboard.TargetProperty="X" To="0" Duration="0:0:0.2">
                  <DoubleAnimation.EasingFunction>
                    <BackEase Amplitude=".3" EasingMode="EaseOut" />
                  </DoubleAnimation.EasingFunction>
                </DoubleAnimation>
                <DoubleAnimation Storyboard.TargetName="Root" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.2" />
              </Storyboard>
            </VisualTransition>
          </VisualStateGroup.Transitions>
          <VisualState x:Name="Closed">
            <Storyboard>
              <DoubleAnimation Storyboard.TargetName="Root" Storyboard.TargetProperty="Opacity" To="0" Duration="0" />
            </Storyboard>
          </VisualState>
          <VisualState x:Name="Open">
            <Storyboard>
              <DoubleAnimation Storyboard.TargetName="Translation" Storyboard.TargetProperty="X" To="0" Duration="0" />
              <DoubleAnimation Storyboard.TargetName="Root" Storyboard.TargetProperty="Opacity" To="1" Duration="0" />
            </Storyboard>
          </VisualState>
        </VisualStateGroup>
      </VisualStateManager.VisualStateGroups>
      <Border Background="{StaticResource ShadowBackgroundBrush}" CornerRadius="5" Margin="4,4,-4,-4" Opacity="0.02" />
      <Border Background="{StaticResource ShadowBackgroundBrush}" CornerRadius="4" Margin="3,3,-3,-3" Opacity="0.08" />
      <Border Background="{StaticResource ShadowBackgroundBrush}" Margin="2,2,-2,-2" Opacity="0.15" />
      <Border Background="{StaticResource ShadowBackgroundBrush}" Margin="1,1,-1,-1" Opacity="0.21" />
      <Border Background="{StaticResource ValidationErrorBrush}" CornerRadius="2">
        <TextBlock UseLayoutRounding="false" Foreground="{StaticResource LightForegroundBrush}" Margin="8,4,8,4" MaxWidth="250" TextWrapping="Wrap" Text="{Binding (Validation.Errors)[0].ErrorContent}" />
      </Border>
    </Grid>
  </ControlTemplate>

  <!-- *********************************  DateFilterTreeViewItem Style  ********************************* -->
  <Style x:Key="DateFilterTreeViewItemStyle" TargetType="igPrim:DateFilterTreeViewItem">
    <Setter Property="Background" Value="{StaticResource DateFilterTreeViewItemBackgroundBrush}" />
    <Setter Property="BorderBrush" Value="{StaticResource DateFilterTreeViewItemBorderBrush}" />
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="Padding" Value="3" />
    <Setter Property="HorizontalContentAlignment" Value="Left" />
    <Setter Property="VerticalContentAlignment" Value="Top" />
    <Setter Property="Cursor" Value="Arrow" />
    <Setter Property="IsTabStop" Value="True" />
    <Setter Property="Margin" Value="0 1 0 0" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igPrim:DateFilterTreeViewItem">
          <Grid Background="{TemplateBinding Background}">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="MouseOver" />
                <VisualState x:Name="Pressed" />
                <VisualState x:Name="Disabled">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Header" Storyboard.TargetProperty="Foreground" Duration="0">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ForegroundDisabledBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="SelectionStates">
                <VisualState x:Name="Unselected" />
                <VisualState x:Name="Selected">
                  <Storyboard>
                    <DoubleAnimation Storyboard.TargetName="Selection" Storyboard.TargetProperty="Opacity" Duration="0" To="1" />
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="SelectedInactive">
                  <Storyboard>
                    <DoubleAnimation Storyboard.TargetName="Selection" Storyboard.TargetProperty="Opacity" Duration="0" To=".2" />
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="HasItemsStates">
                <VisualState x:Name="HasItems" />
                <VisualState x:Name="NoItems">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ExpanderButton" Storyboard.TargetProperty="(UIElement.Visibility)">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>
                            Collapsed
                          </Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="ExpansionStates">
                <VisualState x:Name="Collapsed" />
                <VisualState x:Name="Expanded">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ItemsHost" Storyboard.TargetProperty="(UIElement.Visibility)">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>
                            Visible
                          </Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="ValidationStates">
                <VisualState x:Name="Valid" />
                <VisualState x:Name="InvalidUnfocused">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Validation" Storyboard.TargetProperty="(UIElement.Visibility)">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>
                            Visible
                          </Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="InvalidFocused">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Validation" Storyboard.TargetProperty="(UIElement.Visibility)">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>
                            Visible
                          </Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ValidationToolTip" Storyboard.TargetProperty="IsOpen">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <System:Boolean>
                            True
                          </System:Boolean>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid.RowDefinitions>
              <RowDefinition Height="Auto" />
              <RowDefinition Height="*" />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="15" />
              <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <ToggleButton x:Name="ExpanderButton" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" IsTabStop="False">
              <ToggleButton.Template>
                <ControlTemplate TargetType="ToggleButton">
                  <Grid x:Name="Root" Background="{StaticResource TransparentBrush}">
                    <VisualStateManager.VisualStateGroups>
                      <VisualStateGroup x:Name="CommonStates">
                        <VisualState x:Name="Normal" />
                        <VisualState x:Name="MouseOver">
                          <Storyboard>
                            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Stroke" Storyboard.TargetName="UncheckedVisual">
                              <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource GlyphFocusedBackgroundBrush}" />
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Stroke" Storyboard.TargetName="CheckedVisual">
                              <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource GlyphFocusedBackgroundBrush}" />
                            </ObjectAnimationUsingKeyFrames>
                          </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Disabled">
                          <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="Root" Storyboard.TargetProperty="Opacity" To=".7" Duration="0" />
                          </Storyboard>
                        </VisualState>
                      </VisualStateGroup>
                      <VisualStateGroup x:Name="CheckStates">
                        <VisualState x:Name="Unchecked" />
                        <VisualState x:Name="Checked">
                          <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="UncheckedVisual" Storyboard.TargetProperty="Opacity" To="0" Duration="0" />
                            <DoubleAnimation Storyboard.TargetName="CheckedVisual" Storyboard.TargetProperty="Opacity" To="1" Duration="0" />
                          </Storyboard>
                        </VisualState>
                      </VisualStateGroup>
                    </VisualStateManager.VisualStateGroups>
                    <Grid HorizontalAlignment="Right" Margin="2 2 5 2">
                      <Path x:Name="UncheckedVisual" Width="6" Height="9" Fill="{StaticResource GlyphBackgroundBrush}" VerticalAlignment="Center" HorizontalAlignment="Right" Data="M 0,0 L 0,9 L 5,4.5 Z" StrokeThickness="1" StrokeLineJoin="Miter" Stroke="{StaticResource GlyphBorderBrush}" Stretch="Fill" UseLayoutRounding="False" />
                      <Path x:Name="CheckedVisual" Opacity="0" Width="6" Height="6" Fill="{StaticResource GlyphBorderBrush}" VerticalAlignment="Center" HorizontalAlignment="Center" Data="M 6,0 L 6,6 L 0,6 Z" StrokeLineJoin="Miter" />
                    </Grid>
                  </Grid>
                </ControlTemplate>
              </ToggleButton.Template>
            </ToggleButton>
            <Border x:Name="Selection" Background="{StaticResource DateFilterTreeViewItemSelectedBackgroundBrush}" BorderBrush="{StaticResource DateFilterTreeViewItemSelectedBorderBrush}" CornerRadius="1" BorderThickness="1" Opacity="0" Grid.Column="1" IsHitTestVisible="False" />
            <Button x:Name="Header" Grid.Column="1" ClickMode="Hover" Background="{TemplateBinding Background}" Foreground="{TemplateBinding Foreground}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Cursor="{TemplateBinding Cursor}" HorizontalAlignment="Stretch" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" IsTabStop="False">
              <Button.Template>
                <ControlTemplate TargetType="Button">
                  <Grid Background="{TemplateBinding Background}">
                    <VisualStateManager.VisualStateGroups>
                      <VisualStateGroup x:Name="CommonStates">
                        <VisualState x:Name="Normal" />
                        <VisualState x:Name="Pressed">
                          <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="Hover" Storyboard.TargetProperty="Opacity" Duration="0" To="1" />
                          </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Disabled">
                          <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="Content" Storyboard.TargetProperty="Opacity" Duration="0" To=".55" />
                          </Storyboard>
                        </VisualState>
                      </VisualStateGroup>
                    </VisualStateManager.VisualStateGroups>
                    <Border x:Name="Hover" Background="{StaticResource DateFilterTreeViewItemHoverBackgroundBrush}" BorderBrush="{StaticResource DateFilterTreeViewItemHoverBorderBrush}" BorderThickness="1" Opacity="0" CornerRadius="1" />
                    <ContentPresenter x:Name="Content" Cursor="{TemplateBinding Cursor}" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" HorizontalAlignment="Left" Margin="{TemplateBinding Padding}" />
                  </Grid>
                </ControlTemplate>
              </Button.Template>
              <ContentPresenter Content="{TemplateBinding Header}" ContentTemplate="{TemplateBinding HeaderTemplate}" />
            </Button>
            <ItemsPresenter x:Name="ItemsHost" Grid.Row="1" Grid.Column="1" Grid.ColumnSpan="2" Visibility="Collapsed" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="igPrim:DateFilterTreeViewItem" BasedOn="{StaticResource DateFilterTreeViewItemStyle}" />

  <!-- *********************************  DateFilter ComboBox Style  ********************************* -->
  <Style x:Key="DateFilterComboBoxStyle" TargetType="ComboBox" BasedOn="{StaticResource ComboBoxStyle}" />

  <!-- *********************************  DateFilterSelectionControl Style  ********************************* -->
  <Style x:Key="DateFilterSelectionControlStyle" TargetType="igPrim:DateFilterSelectionControl">
    <Setter Property="Background" Value="{StaticResource PopupBackgroundBrush}" />
    <Setter Property="BorderBrush" Value="{StaticResource PopupBorderBrush}" />
    <Setter Property="DateFilterHierarchicalDataTemplate" Value="{StaticResource dateTreeDataTemplate}" />
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="Margin" Value="0" />
    <Setter Property="Padding" Value="11,0,0,0" />
    <Setter Property="CheckBoxStyle" Value="{StaticResource CheckBoxStyle}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igPrim:DateFilterSelectionControl">
          <Grid>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="SelectionBoxStates">
                <VisualState x:Name="ShowSelectionBox" />
                <VisualState x:Name="HideSelectionBox">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames BeginTime="0" Storyboard.TargetName="SelectAllCheckBox" Storyboard.TargetProperty="(UIElement.Visibility)">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames BeginTime="0" Storyboard.TargetName="SelectAllCheckBoxSeperator" Storyboard.TargetProperty="(UIElement.Visibility)">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames BeginTime="0" Storyboard.TargetName="ItemsBox" Storyboard.TargetProperty="(UIElement.Visibility)">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="SelectionBoxWaterMark">
                <VisualState x:Name="ShowSelectionBoxWaterMark" />
                <VisualState x:Name="HideSelectionBoxWaterMark">
                  <Storyboard>
                    <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="ItemsBoxWatermark" Storyboard.TargetProperty="(UIElement.Opacity)">
                      <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0" />
                    </DoubleAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="AppendButtonVisibility">
                <VisualState x:Name="ShowAppendFilterButton">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="AppendFiltersCheckBox" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>
                            Visible
                          </Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="HideAppendFilterButton" />
              </VisualStateGroup>
              <VisualStateGroup x:Name="BusyStatus">
                <VisualState x:Name="Idle" />
                <VisualState x:Name="Busy">
                  <Storyboard RepeatBehavior="Forever">
                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="busyIndicator" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <DoubleAnimation Duration="0:0:0.7" To="180" Storyboard.TargetProperty="(UIElement.RenderTransform).(RotateTransform.Angle)" Storyboard.TargetName="busyIndicatorPath" d:IsOptimized="True" />
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="LimitItemsStatus">
                <VisualState x:Name="NotLimited" />
                <VisualState x:Name="Limited">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="limitedListIndicator" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Border x:Name="Bd" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="3" Padding="1">
              <Grid>
                <Grid.RowDefinitions>
                  <!-- ClearFilters -->
                  <RowDefinition Height="Auto" MinHeight="22" />
                  <!-- CustomFilterDialog -->
                  <RowDefinition Height="Auto" />
                  <!-- Filter TextBox -->
                  <RowDefinition Height="Auto" />
                  <!-- HorizontalRule -->
                  <RowDefinition Height="Auto" />
                  <!-- SelectAll Checkbox -->
                  <RowDefinition Height="Auto" />
                  <!-- Append filter checkbox -->
                  <RowDefinition Height="Auto" />
                  <!-- FilterSelectionValues -->
                  <RowDefinition Height="*" />
                  <!-- LimiteedListIndicator -->
                  <RowDefinition Height="Auto" />
                  <!-- SelectionButtons -->
                  <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                  <!-- LeftVerticalBackground -->
                  <ColumnDefinition MinWidth="24" MaxWidth="24" />
                  <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <!-- LeftVerticalBackground -->
                <Border Grid.RowSpan="8" BorderBrush="{StaticResource MenuIconColumnBackgroundBrush}" BorderThickness="0,0,1,0" HorizontalAlignment="Right" />
                <!-- ClearFilters Control -->
                <Button x:Name="clearButton" Grid.ColumnSpan="2" HorizontalAlignment="Stretch" Style="{StaticResource FilterSelectionItemStyle}" Padding="0">
                  <igBase:Commanding.Commands>
                    <igBase:CommandSourceCollection>
                      <ig:FilterSelectionControlCommandSource CommandType="ClearSelectedItems" EventName="Click">
                      </ig:FilterSelectionControlCommandSource>
                      <ig:FilterSelectionControlCommandSource CommandType="AcceptChanges" EventName="Click">
                      </ig:FilterSelectionControlCommandSource>
                      <igPrim:XamGridPopupCommandSource CommandType="ClosePopup" EventName="Click">
                      </igPrim:XamGridPopupCommandSource>
                    </igBase:CommandSourceCollection>
                  </igBase:Commanding.Commands>
                  <Grid Background="{StaticResource TransparentBrush}">
                    <Grid.ColumnDefinitions>
                      <ColumnDefinition Width="24" />
                      <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <Grid Width="15" Height="10">
                      <Path x:Name="clearFilterGlyphStroke" Width="11" Height="8" Data="M 0,0 C0,0 11,0 11,0 11,0 7,4 7,4 7,4 7,8 7,8 7,8 4,8 4,8 4,8 4,4 4,4 4,4 0,0 0,0 z" Stretch="Fill" Fill="{StaticResource GlyphBorderBrush}" />
                      <Path x:Name="clearFilterGlyphFill" Width="7" Height="6" HorizontalAlignment="Center" VerticalAlignment="Center" Stretch="Fill" Data="M 0,0 C0,0 7,0 7,0 7,0 4,3 4,3 4,3 4,6 4,6 4,6 3,6 3,6 3,6 3,3 3,3 3,3 0,0 0,0 z" Fill="{StaticResource GlyphInnerBackgroundBrush}" />
                      <Path x:Name="clearFilterGlyphAdorner" HorizontalAlignment="Center" VerticalAlignment="Bottom" Height="4" Width="5" Stretch="Fill" Opacity="1" Data="M 0,0 C0,0 0,1 0,1 0,1 1,1 1,1 1,1 1,3 1,3 1,3 0,3 0,3 0,3 0,4 0,4 0,4 2,4 2,4 2,4 2,3 2,3 2,3 3,3 3,3 3,3 3,4 3,4 3,4 5,4 5,4 5,4 5,3 5,3 5,3 4,3 4,3 4,3 4,1 4,1 4,1 5,1 5,1 5,1 5,0 5,0 5,0 3,0 3,0 3,0 3,1 3,1 3,1 2,1 2,1 2,1 2,0 2,0 2,0 0,0 0,0 z" Fill="{StaticResource GlyphBorderBrush}" Margin="10,4,0,0" />
                    </Grid>
                    <Rectangle Fill="{StaticResource TransparentBrush}" Grid.Column="1">
                    </Rectangle>
                    <TextBlock HorizontalAlignment="Stretch" Text="{TemplateBinding ClearFiltersTextResolved}" Grid.Column="1" Margin="8,0,6,0" />
                  </Grid>
                </Button>
                <!-- CustomFilterDialog Control -->
                <igBase:XamMenu HorizontalAlignment="Stretch" MenuOrientation="Vertical" Grid.Row="1" Grid.Column="1" Visibility="{Binding Path=Cell.Column.FilterColumnSettings.FilterMenuCustomFilteringButtonVisibilityResolved, RelativeSource={RelativeSource TemplatedParent}}" MinHeight="22" DefaultItemsContainer="{StaticResource RootFilterMenuCustomTemplate}" ItemsSource="{Binding Path=Cell.Column.FilterColumnSettings.FilterMenuOperands, RelativeSource={RelativeSource TemplatedParent}}" Tag="{Binding Path=Cell, RelativeSource={RelativeSource TemplatedParent}}" IsEnabled="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ItemSourceSet}">
                  <igBase:XamMenu.Resources>
                    <Style TargetType="CheckBox" BasedOn="{StaticResource FilterCheckBoxStyle}" />
                  </igBase:XamMenu.Resources>
                  <ig:XamMenu.Style>
                    <StaticResource ResourceKey="FilterMenuStyle" />
                  </ig:XamMenu.Style>
                </igBase:XamMenu>
                <CheckBox x:Name="hasFilterCheckBox" Grid.Row="1" Grid.Column="0" HorizontalAlignment="Center" VerticalAlignment="Center" Visibility="{Binding Path=Cell.Column.FilterColumnSettings.FilterMenuCustomFilteringButtonVisibilityResolved, RelativeSource={RelativeSource TemplatedParent}}" IsChecked="{Binding Path=HasFilters, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" Style="{StaticResource FilterCheckBoxStyle}" />
                <Grid Grid.Row="2" Grid.Column="1" Margin="7,7,0,0">
                  <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="7*">
                    </ColumnDefinition>
                    <ColumnDefinition Width="80">
                    </ColumnDefinition>
                  </Grid.ColumnDefinitions>
                  <igPrim:FilterTextBoxWatermarked FilterSelectionControl="{Binding RelativeSource={RelativeSource TemplatedParent}}" HorizontalAlignment="Stretch" Watermark="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=DateFilterObjectTypeItem, Converter={StaticResource dateFilterTypeConverter}}" IsEnabled="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ItemSourceSet}" />
                  <ComboBox x:Name="dateFilterType" Grid.Column="1" Style="{StaticResource DateFilterComboBoxStyle}" Margin="5,0,5,0" ItemsSource="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=DateFilterTypeList}" DisplayMemberPath="Name" IsEnabled="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ItemSourceSet}" SelectedItem="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=DateFilterObjectTypeItem, Mode=TwoWay}" />
                </Grid>
                <!-- HorizontalRule -->
                <Rectangle x:Name="SelectAllCheckBoxSeperator" Height="1" Fill="{StaticResource SeparatorBrush}" VerticalAlignment="Top" Margin="7,7,7,0" Grid.Row="3" Grid.Column="1" />
                <!-- SelectAll Checkbox -->
                <CheckBox x:Name="SelectAllCheckBox" Style="{StaticResource CheckBoxStyle}" Grid.Row="4" Grid.Column="1" Margin="8,7,0,0" />
                <CheckBox x:Name="AppendFiltersCheckBox" Visibility="Collapsed" Grid.Row="5" Grid.Column="1" Margin="8,7,0,0" Style="{StaticResource CheckBoxStyle}" Content="{Binding RelativeSource={RelativeSource TemplatedParent},                                                             Path=AppendFilterText}" IsChecked="{Binding RelativeSource={RelativeSource TemplatedParent},                                                               Path=AppendFilters,                                                               Mode=TwoWay}" />
                <Rectangle Grid.Row="6" Grid.Column="1" Margin="8,7,6,7" Fill="{StaticResource FilterSelectionListBoxBackgroundBrush}" Stroke="{StaticResource FilterSelectionListBoxBorderBrush}" RadiusX="2" RadiusY="2" />
                <TextBlock x:Name="ItemsBoxWatermark" HorizontalAlignment="Center" Grid.Row="6" Grid.Column="1" Foreground="{StaticResource ItemsBoxWatermarkForegroundBrush}" Margin="0,40,0,0" Padding="0" Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=FilterBoxNoDataAvailable}" />
                <CheckBox Grid.Row="6" Grid.Column="0" HorizontalAlignment="Center" VerticalAlignment="Top" IsChecked="{Binding Path=HasCheckedItems, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" Style="{StaticResource FilterCheckBoxStyle}" Margin="0,8,0,0" />
                <!-- FilterSelectionValues -->
                <Grid Grid.Row="6" Grid.Column="1" Margin="8,7,6,7" MinHeight="159">
                  <igPrim:DateFilterTreeView ItemTemplate="{TemplateBinding DateFilterHierarchicalDataTemplate}" x:Name="ItemsBox" ItemsSource="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=FilterableUniqueValues}" Padding="0" Background="{StaticResource TransparentBrush}" BorderBrush="{StaticResource TransparentBrush}">
                    <igPrim:DateFilterTreeView.Resources>
                      <Style TargetType="ScrollViewer" BasedOn="{StaticResource ScrollViewerStyle}" />
                    </igPrim:DateFilterTreeView.Resources>
                  </igPrim:DateFilterTreeView>
                  <Grid x:Name="busyIndicator" Background="{StaticResource FilterMenuBusyIndicatorBackgroundBrush}" Visibility="Collapsed" Opacity="0.66">
                    <StackPanel Margin="10" VerticalAlignment="Center" HorizontalAlignment="Center">
                      <Path x:Name="busyIndicatorPath" Data="M7.2500005,16.333002 L21,22.582914 C21,22.582914 19.249714,23.58293 14.75,25.832844 C27.5,39.832409 36.5,24.832874 36.5,24.832874 C36.5,24.832874 36.500198,25.083141 43,28.332829 C23.25,53.832478 8,28.332829 8,28.332829 L0.5,31.582787 z M26.973215,0.50051785 C37.27507,0.58836842 44,11.833179 44,11.833179 L51.5,8.5832176 L44.75,23.833004 L31,17.583092 C31,17.583092 32.750286,16.583076 37.25,14.333162 C24.5,0.33359718 15.5,15.333131 15.5,15.333131 C15.5,15.333131 15.499802,15.082864 9,11.833179 C15.634766,3.2668896 21.761688,0.45607567 26.973215,0.50051785 z" Fill="{StaticResource FilterMenuBusyIndicatorPathBackgroundBrush}" Height="20" Stretch="Fill" RenderTransformOrigin="0.5,0.5" Width="25" StrokeThickness="0">
                        <Path.RenderTransform>
                          <RotateTransform />
                        </Path.RenderTransform>
                      </Path>
                      <TextBlock Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BusyText}" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="10" />
                    </StackPanel>
                  </Grid>
                </Grid>
                <!-- LimiteedListIndicator -->
                <StackPanel x:Name="limitedListIndicator" Grid.Row="7" Grid.Column="1" Visibility="Collapsed" Margin="8,0,6,7">
                  <TextBlock Text="{TemplateBinding NotAllItemsShowingText}" Foreground="{StaticResource FilterMenuNotAllItemsShowingForegroundBrush}" ToolTipService.ToolTip="{TemplateBinding NotAllItemsShowingTooltipText}" />
                </StackPanel>
                <!-- Separator -->
                <Rectangle x:Name="ButtonsSeparator" Height="1" Fill="{StaticResource SeparatorBrush}" VerticalAlignment="Top" HorizontalAlignment="Stretch" Margin="1,0" Grid.Row="8" Grid.ColumnSpan="2" />
                <!-- SelectionButtons -->
                <StackPanel x:Name="selectionButtons" Orientation="Horizontal" HorizontalAlignment="Right" Grid.Row="8" Margin="0,7,6,7" Grid.Column="1">
                  <Button x:Name="AcceptButton" Margin="0,0,5,0" Width="73" Content="{TemplateBinding OKButtonText}" IsEnabled="{Binding Path=CanFilter, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" Style="{StaticResource ButtonStyle}">
                    <igBase:Commanding.Commands>
                      <igBase:CommandSourceCollection>
                        <ig:FilterSelectionControlCommandSource CommandType="AcceptChanges" EventName="Click">
                        </ig:FilterSelectionControlCommandSource>
                        <igPrim:XamGridPopupCommandSource CommandType="ClosePopup" EventName="Click">
                        </igPrim:XamGridPopupCommandSource>
                      </igBase:CommandSourceCollection>
                    </igBase:Commanding.Commands>
                  </Button>
                  <Button x:Name="CancelButton" Width="73" Content="{TemplateBinding CancelButtonText}" Style="{StaticResource ButtonStyle}">
                    <igBase:Commanding.Commands>
                      <igBase:CommandSourceCollection>
                        <igPrim:XamGridPopupCommandSource CommandType="ClosePopup" EventName="Click">
                        </igPrim:XamGridPopupCommandSource>
                      </igBase:CommandSourceCollection>
                    </igBase:Commanding.Commands>
                  </Button>
                </StackPanel>
              </Grid>
            </Border>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="igPrim:DateFilterSelectionControl" BasedOn="{StaticResource DateFilterSelectionControlStyle}" />

  <!-- *********************************  DataBarControl Style  ********************************* -->
  <Style x:Key="DataBarControlStyle" TargetType="igPrim:DataBarControl">
    <Setter Property="BarHeight" Value="18">
    </Setter>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igPrim:DataBarControl">
          <Grid>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="DataBarDisplay">
                <VisualState x:Name="UnidirectionalBarLeftToRight">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="UnidirectionalDataBar" Storyboard.TargetProperty="(UIElement.Visibility)">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>
                            Visible
                          </Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="UnidirectionalBarRightToLeft">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="UnidirectionalDataBar" Storyboard.TargetProperty="(UIElement.Visibility)">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>
                            Visible
                          </Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="UnidirectionalDataBarRectangle" Storyboard.TargetProperty="(Grid.Column)">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="1">
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="BidirectionalBar">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="BidirectionalDataBar" Storyboard.TargetProperty="(UIElement.Visibility)">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>
                            Visible
                          </Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="None">
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid Visibility="Collapsed" x:Name="UnidirectionalDataBar" Height="{TemplateBinding BarHeight}">
              <Grid.ColumnDefinitions>
                <ColumnDefinition x:Name="UniDataBar" Width="*">
                </ColumnDefinition>
                <ColumnDefinition x:Name="UniDataBarSpacer" Width="*">
                </ColumnDefinition>
              </Grid.ColumnDefinitions>
              <Rectangle x:Name="UnidirectionalDataBarRectangle" Grid.Column="0" Fill="{TemplateBinding UnidirectionalDataBarBrush}" />
            </Grid>
            <Grid x:Name="BidirectionalDataBar" Visibility="Collapsed" Height="{TemplateBinding BarHeight}">
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*">
                </ColumnDefinition>
                <ColumnDefinition Width="*">
                </ColumnDefinition>
              </Grid.ColumnDefinitions>
              <Grid Grid.Column="0">
                <Grid.ColumnDefinitions>
                  <ColumnDefinition x:Name="BiNegativeColumnSpacer" Width="*">
                  </ColumnDefinition>
                  <ColumnDefinition x:Name="BiNegativeColumn" Width="*">
                  </ColumnDefinition>
                </Grid.ColumnDefinitions>
                <Rectangle Grid.Column="1" x:Name="NegativeDataBar" HorizontalAlignment="Stretch" Fill="{TemplateBinding NegativeValueBarBrush}">
                </Rectangle>
              </Grid>
              <Grid Grid.Column="1">
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="*" x:Name="BiPositiveColumn">
                  </ColumnDefinition>
                  <ColumnDefinition Width="*" x:Name="BiPositiveColumnSpacer">
                  </ColumnDefinition>
                </Grid.ColumnDefinitions>
                <Rectangle Grid.Column="0" x:Name="PositiveDataBar" HorizontalAlignment="Stretch" Fill="{TemplateBinding PositiveValueBarBrush}">
                </Rectangle>
              </Grid>
            </Grid>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="igPrim:DataBarControl" BasedOn="{StaticResource DataBarControlStyle}" />

  <!-- *********************************  ConditionalFormattingCellControl Style  ********************************* -->
  <Style x:Key="ConditionalFormattingCellControlStyle" TargetType="ig:ConditionalFormattingCellControl">
    <Setter Property="FontSize" Value="11" />
    <Setter Property="Foreground" Value="{StaticResource CellItemForegroundBrush}" />
    <Setter Property="Background" Value="{StaticResource CellItemBackgroundBrush}" />
    <Setter Property="AltBackground" Value="{StaticResource CellItemAltBackgroundBrush}" />
    <Setter Property="BorderBrush" Value="{StaticResource CellItemBorderBrush}" />
    <Setter Property="BorderThickness" Value="0,0,1,1" />
    <Setter Property="BarBrush" Value="{StaticResource ConditionalFormattingCellPositiveBarBrush}" />
    <Setter Property="NegativeBarBrush" Value="{StaticResource ConditionalFormattingCellNegativeBarBrush}" />
    <Setter Property="HorizontalContentAlignment" Value="Left" />
    <Setter Property="VerticalContentAlignment" Value="Center" />
    <Setter Property="Padding" Value="4" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="ig:ConditionalFormattingCellControl">
          <Grid>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="MouseOver" />
                <VisualState x:Name="Alternate" />
              </VisualStateGroup>
              <VisualStateGroup x:Name="SelectedStates">
                <VisualState x:Name="NotSelected" />
                <VisualState x:Name="Selected">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="cellSelected">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>
                            Visible
                          </Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="ActiveStates">
                <VisualState x:Name="InActive" />
                <VisualState x:Name="Active">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="ActiveSelected">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>
                            Visible
                          </Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="ConditionalFormatIcon">
                <VisualState x:Name="ShowConditionalFormattingIcon">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="FormattingIcon" Storyboard.TargetProperty="(UIElement.Visibility)">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>
                            Visible
                          </Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="HideConditionalFormattingIcon">
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="ConditionalFormatDataDisplay">
                <VisualState x:Name="ShowData">
                </VisualState>
                <VisualState x:Name="HideData">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="CellDisplay" Storyboard.TargetProperty="(UIElement.Visibility)">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>
                            Collapsed
                          </Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="ConditionalFormatDataBar">
                <VisualState x:Name="HideDataBar">
                </VisualState>
                <VisualState x:Name="ShowDataBar">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="DataBar" Storyboard.TargetProperty="(UIElement.Visibility)">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>
                            Visible
                          </Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="Auto" />
              <ColumnDefinition />
            </Grid.ColumnDefinitions>
            <Border Grid.ColumnSpan="2" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" x:Name="Root" />
            <Border Grid.ColumnSpan="2" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding AltBackground}" Visibility="Collapsed" x:Name="AltElem" />
            <Border x:Name="cellSelected" Background="{StaticResource CellItemSelectedBackgroundBrush}" Visibility="Collapsed" Margin="{TemplateBinding BorderThickness}" Grid.ColumnSpan="2" />
            <Border x:Name="ActiveSelected" Background="{StaticResource CellItemActiveBackgroundBrush}" BorderBrush="{StaticResource CellItemActiveBorderBrush}" BorderThickness="2" Visibility="Collapsed" Grid.ColumnSpan="2" />
            <igPrim:DataBarControl Grid.ColumnSpan="2" Margin="1" DataBarDirection="{TemplateBinding BarDirection}" PositiveValueBarBrush="{TemplateBinding BarBrush}" NegativeValueBarBrush="{TemplateBinding NegativeBarBrush}" BarPercentage="{TemplateBinding BarPercentage}" DataBarPositiveNegative="{TemplateBinding BarPositiveOrNegative}" Visibility="Collapsed" x:Name="DataBar" />
            <ContentControl x:Name="FormattingIcon" Visibility="Collapsed" ContentTemplate="{TemplateBinding Icon}" VerticalAlignment="Center" />
            <ContentPresenter Grid.Column="1" x:Name="CellDisplay" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="ig:ConditionalFormattingCellControl" BasedOn="{StaticResource ConditionalFormattingCellControlStyle}" />

  <!-- *********************************  GroupHeaderDropDownButton Style  ********************************* -->
  <Style x:Key="GroupHeaderDropDownButtonStyle" TargetType="Button">
    <Setter Property="Padding" Value="0" />
    <Setter Property="Cursor" Value="Hand" />
    <Setter Property="VerticalContentAlignment" Value="Stretch" />
    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="Button">
          <Grid Background="{StaticResource TransparentBrush}">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="MouseOver" />
                <VisualState x:Name="Pressed" />
                <VisualState x:Name="Disabled">
                  <Storyboard>
                    <DoubleAnimation Duration="0" To="0.5" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="contentPresenter" d:IsOptimized="True" />
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="FocusStates">
                <VisualState x:Name="Focused" />
                <VisualState x:Name="Unfocused" />
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Rectangle x:Name="rectangle" Fill="{StaticResource TransparentBrush}" />
            <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="{TemplateBinding Padding}" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- *********************************  GroupHeaderCellControl Style  ********************************* -->
  <Style x:Key="GroupHeaderCellControlStyle" TargetType="igPrim:GroupHeaderCellControl">
    <Setter Property="FontSize" Value="11" />
    <Setter Property="Foreground" Value="{StaticResource HeaderCellForegroundBrush}" />
    <Setter Property="Background" Value="{StaticResource GroupHeaderCellBackgroundBrush}" />
    <Setter Property="BorderBrush" Value="{StaticResource GroupHeaderCellBorderBrush}" />
    <Setter Property="BorderThickness" Value="0,1,1,0" />
    <Setter Property="HorizontalContentAlignment" Value="Left" />
    <Setter Property="Padding" Value="8,4" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igPrim:GroupHeaderCellControl">
          <Grid>
            <Grid.RowDefinitions>
              <RowDefinition />
              <RowDefinition />
            </Grid.RowDefinitions>
            <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
              <Grid x:Name="Bd">
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="Auto" />
                  <ColumnDefinition>
                  </ColumnDefinition>
                  <ColumnDefinition Width="Auto" />
                  <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <igPrim:HeaderDropDownControl Padding="0" Visibility="Collapsed" x:Name="HiddenLeftAdjacentColumnsElement" Grid.Column="0">
                  <ToolTipService.ToolTip>
                    <ToolTip Content="{Binding Cell.Column.ColumnLayout.Grid.ColumnChooserSettings.HiddenColumnIndicatorToolTipText, RelativeSource={RelativeSource TemplatedParent}}" />
                  </ToolTipService.ToolTip>
                  <igPrim:HeaderDropDownControl.OpenButtonContent>
                    <Rectangle Fill="{StaticResource HiddenColumnIndicatorBackgroundBrush}" Width="10" HorizontalAlignment="Left" />
                  </igPrim:HeaderDropDownControl.OpenButtonContent>
                  <Grid>
                    <Border x:Name="ColumnChooserBd" MaxHeight="200" Background="{StaticResource PopupBackgroundBrush}" BorderBrush="{StaticResource PopupBorderBrush}" BorderThickness="1" CornerRadius="3" Padding="1">
                      <Grid>
                        <Grid.ColumnDefinitions>
                          <ColumnDefinition MinWidth="25" MaxWidth="25" />
                          <ColumnDefinition />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                          <RowDefinition />
                          <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <Border Grid.RowSpan="2" BorderBrush="{StaticResource SeparatorBrush}" BorderThickness="0,0,1,0" />
                        <ListBox DataContext="{x:Null}" ItemsSource="{Binding Cell.ColumnsHiddenToLeft, RelativeSource={RelativeSource TemplatedParent}}" Background="{StaticResource TransparentBrush}" BorderThickness="0" Padding="0" Margin="0" Grid.ColumnSpan="2" ItemContainerStyle="{StaticResource ColumnChooserListBoxItemStyle}">
                          <ListBox.ItemTemplate>
                            <DataTemplate>
                              <TextBlock Text="{Binding DisplayNameResolved}" />
                            </DataTemplate>
                          </ListBox.ItemTemplate>
                          <igBase:Commanding.Commands>
                            <igBase:CommandSourceCollection>
                              <ig:XamGridColumnCommandSource ParameterBinding="{Binding SelectedItem}" EventName="SelectionChanged" CommandType="Show" />
                              <igPrim:XamGridPopupCommandSource CommandType="ClosePopup" EventName="SelectionChanged" />
                            </igBase:CommandSourceCollection>
                          </igBase:Commanding.Commands>
                        </ListBox>
                        <StackPanel Background="{StaticResource TransparentBrush}" Grid.Row="1" Grid.ColumnSpan="2">
                          <Path Data="M132,227 L443,227" Width="165" Height="1" Stroke="{StaticResource CellItemBorderBrush}" StrokeThickness="1" HorizontalAlignment="Right" StrokeDashArray="2 2" Stretch="Fill" Margin="33,0,0,0" />
                          <Button Margin="0,1,0,0" Style="{StaticResource ColumnChooserDialogButtonStyle}">
                            <igBase:Commanding.Commands>
                              <igBase:CommandSourceCollection>
                                <ig:XamGridColumnChooserCommandSource CommandType="Open" EventName="Click" />
                                <igPrim:XamGridPopupCommandSource CommandType="ClosePopup" EventName="Click" />
                              </igBase:CommandSourceCollection>
                            </igBase:Commanding.Commands>
                            <TextBlock Text="{Binding Cell.Column.ColumnLayout.Grid.ColumnChooserSettings.ColumnChooserDisplayText, RelativeSource={RelativeSource TemplatedParent}}" Foreground="{StaticResource HeaderCellForegroundBrush}" />
                          </Button>
                        </StackPanel>
                      </Grid>
                    </Border>
                  </Grid>
                </igPrim:HeaderDropDownControl>
                <ContentPresenter Grid.Column="1" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                <Grid Grid.Column="2" x:Name="SortAndPinIndicators" HorizontalAlignment="Right" Margin="0,0,5,0" Background="{TemplateBinding Background}">
                  <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                  </Grid.ColumnDefinitions>
                  <Button Style="{StaticResource GroupHeaderDropDownButtonStyle}" x:Name="PinnedIndicator" Grid.Column="1" Visibility="Collapsed" Width="20">
                    <Grid Background="{StaticResource TransparentBrush}">
                      <Path Width="7" Height="10" Data="M 6,4 C6,4 8,4 8,4 8,4 8,9 8,9 8,9 6,9 6,9 6,9 6,4 6,4 zM 5,3 C5,3 5,9 5,9 5,9 4,9 4,9 4,9 4,10 4,10 4,10 7,10 7,10 7,10 7,13 7,13 7,13 8,13 8,13 8,13 8,10 8,10 8,10 11,10 11,10 11,10 11,9 11,9 11,9 10,9 10,9 10,9 10,3 10,3 10,3 5,3 5,3 z" Fill="{StaticResource GlyphBorderBrush}" Stretch="Fill" />
                      <igBase:Commanding.Command>
                        <ig:XamGridColumnCommandSource CommandType="Unfix" EventName="MouseLeftButtonDown">
                        </ig:XamGridColumnCommandSource>
                      </igBase:Commanding.Command>
                    </Grid>
                  </Button>
                  <Button x:Name="UnpinnedIndicator" Visibility="Collapsed" Style="{StaticResource GroupHeaderDropDownButtonStyle}" Grid.Column="1" Width="20">
                    <Grid Background="{StaticResource TransparentBrush}">
                      <Path Width="10" Height="7" Data="M 12,7 C12,7 12,9 12,9 12,9 7,9 7,9 7,9 7,7 7,7 7,7 12,7 12,7 zM 13,6 C13,6 7,6 7,6 7,6 7,5 7,5 7,5 6,5 6,5 6,5 6,8 6,8 6,8 3,8 3,8 3,8 3,9 3,9 3,9 6,9 6,9 6,9 6,12 6,12 6,12 7,12 7,12 7,12 7,11 7,11 7,11 13,11 13,11 13,11 13,6 13,6 z" Fill="{StaticResource GlyphBorderBrush}" Stretch="Fill" />
                      <igBase:Commanding.Command>
                        <ig:XamGridColumnCommandSource CommandType="Fix" EventName="MouseLeftButtonDown">
                        </ig:XamGridColumnCommandSource>
                      </igBase:Commanding.Command>
                    </Grid>
                  </Button>
                  <igPrim:HeaderDropDownControl x:Name="SummaryHeaderDropDownControl" Background="{StaticResource TransparentBrush}" Visibility="Collapsed" Grid.Column="0">
                    <igPrim:HeaderDropDownControl.OpenButtonContent>
                      <Path Data="M 0,0 C0,0 5,0 5,0 5,0 5,1 5,1 5,1 2,1 2,1 2,1 4,3.5 4,3.5 4,3.5 2,6 2,6 2,6 5,6 5,6 5,6 5,7 5,7 5,7 0,7 0,7 0,7 0,6 0,6 0,6 2,3.5625 2,3.5625 2,3.5625 0,1 0,1 0,1 0,0 0,0 z" Fill="{StaticResource GlyphBorderBrush}" Width="5" Height="7" x:Name="summarySigmaIcon" StrokeThickness="0" />
                    </igPrim:HeaderDropDownControl.OpenButtonContent>
                    <igPrim:SummarySelectionControl Cell="{Binding Path=Cell,RelativeSource={RelativeSource TemplatedParent}}">
                    </igPrim:SummarySelectionControl>
                  </igPrim:HeaderDropDownControl>
                  <Button x:Name="VisibilityToggleButton" Style="{StaticResource GroupHeaderDropDownButtonStyle}" Visibility="Collapsed" Grid.Column="2" Width="20">
                    <Grid Background="{StaticResource TransparentBrush}">
                      <Path Width="8" Height="7" Data="M 7,0 C7,0 7,1 7,1 7,1 6,1 6,1 6,1 6,2 6,2 6,2 5,2 5,2 5,2 5,3 5,3 5,3 4,3 4,3 4,3 4,4 4,4 4,4 5,4 5,4 5,4 5,5 5,5 5,5 6,5 6,5 6,5 6,6 6,6 6,6 7,6 7,6 7,6 7,7 7,7 7,7 8,7 8,7 8,7 8,5 8,5 8,5 7,5 7,5 7,5 7,4 7,4 7,4 6,4 6,4 6,4 6,3 6,3 6,3 7,3 7,3 7,3 7,2 7,2 7,2 8,2 8,2 8,2 8,0 8,0 8,0 7,0 7,0 zM 0,3 C0,3 0,4 0,4 0,4 1,4 1,4 1,4 1,5 1,5 1,5 2,5 2,5 2,5 2,6 2,6 2,6 3,6 3,6 3,6 3,7 3,7 3,7 4,7 4,7 4,7 4,6 4,6 4,6 4,5 4,5 4,5 3,5 3,5 3,5 3,4 3,4 3,4 2,4 2,4 2,4 2,3 2,3 2,3 3,3 3,3 3,3 3,2 3,2 3,2 4,2 4,2 4,2 4,1 4,1 4,1 4,0 4,0 4,0 3,0 3,0 3,0 3,1 3,1 3,1 2,1 2,1 2,1 2,2 2,2 2,2 1,2 1,2 1,2 1,3 1,3 1,3 0,3 0,3 z" Fill="{StaticResource GlyphBorderBrush}" />
                      <igBase:Commanding.Command>
                        <ig:XamGridColumnCommandSource CommandType="Hide" EventName="MouseLeftButtonDown" />
                      </igBase:Commanding.Command>
                    </Grid>
                  </Button>
                </Grid>
                <igPrim:HeaderDropDownControl Padding="0" Visibility="Collapsed" x:Name="HiddenRightAdjacentColumnsElement" Grid.Column="4">
                  <ToolTipService.ToolTip>
                    <ToolTip Content="{Binding Cell.Column.ColumnLayout.Grid.ColumnChooserSettings.HiddenColumnIndicatorToolTipText, RelativeSource={RelativeSource TemplatedParent}}" />
                  </ToolTipService.ToolTip>
                  <igPrim:HeaderDropDownControl.OpenButtonContent>
                    <Rectangle Fill="{StaticResource HiddenColumnIndicatorBackgroundBrush}" Width="10" HorizontalAlignment="Right" />
                  </igPrim:HeaderDropDownControl.OpenButtonContent>
                  <Grid>
                    <Border x:Name="ColumnChooserBdRight" MaxHeight="200" Background="{StaticResource PopupBackgroundBrush}" BorderBrush="{StaticResource PopupBorderBrush}" BorderThickness="1" CornerRadius="3" Padding="1">
                      <Grid>
                        <Grid.ColumnDefinitions>
                          <ColumnDefinition MinWidth="25" MaxWidth="25" />
                          <ColumnDefinition />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                          <RowDefinition />
                          <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <Border Grid.RowSpan="2" BorderBrush="{StaticResource SeparatorBrush}" BorderThickness="0,0,1,0" />
                        <ListBox DataContext="{x:Null}" ItemsSource="{Binding Cell.ColumnsHiddenToRight, RelativeSource={RelativeSource TemplatedParent}}" Background="{StaticResource TransparentBrush}" BorderThickness="0" Padding="0" Margin="0" Grid.ColumnSpan="2" ItemContainerStyle="{StaticResource ColumnChooserListBoxItemStyle}">
                          <ListBox.ItemTemplate>
                            <DataTemplate>
                              <TextBlock Text="{Binding DisplayNameResolved}" />
                            </DataTemplate>
                          </ListBox.ItemTemplate>
                          <igBase:Commanding.Commands>
                            <igBase:CommandSourceCollection>
                              <ig:XamGridColumnCommandSource ParameterBinding="{Binding SelectedItem}" EventName="SelectionChanged" CommandType="Show" />
                              <igPrim:XamGridPopupCommandSource CommandType="ClosePopup" EventName="SelectionChanged" />
                            </igBase:CommandSourceCollection>
                          </igBase:Commanding.Commands>
                        </ListBox>
                        <StackPanel Background="{StaticResource TransparentBrush}" Grid.Row="1" Grid.ColumnSpan="2">
                          <Path Data="M132,227 L443,227" Width="165" Height="1" Stroke="{StaticResource CellItemBorderBrush}" StrokeThickness="1" HorizontalAlignment="Right" StrokeDashArray="2 2" Stretch="Fill" Margin="33,0,0,0" />
                          <Button Margin="0,1,0,0" Style="{StaticResource ColumnChooserDialogButtonStyle}">
                            <igBase:Commanding.Commands>
                              <igBase:CommandSourceCollection>
                                <ig:XamGridColumnChooserCommandSource CommandType="Open" EventName="Click" />
                                <igPrim:XamGridPopupCommandSource CommandType="ClosePopup" EventName="Click" />
                              </igBase:CommandSourceCollection>
                            </igBase:Commanding.Commands>
                            <TextBlock Text="{Binding Cell.Column.ColumnLayout.Grid.ColumnChooserSettings.ColumnChooserDisplayText, RelativeSource={RelativeSource TemplatedParent}}" Foreground="{StaticResource HeaderCellForegroundBrush}" />
                          </Button>
                        </StackPanel>
                      </Grid>
                    </Border>
                  </Grid>
                </igPrim:HeaderDropDownControl>
              </Grid>
            </Border>
            <igPrim:GroupColumnPanel x:Name="Panel" Grid.Row="1" Cell="{Binding Cell, RelativeSource={RelativeSource TemplatedParent}}" />
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="MouseOver">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.001" Storyboard.TargetName="Bd" Storyboard.TargetProperty="Background">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{StaticResource HeaderCellHoverBackgroundBrush}">
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.001" Storyboard.TargetName="SortAndPinIndicators" Storyboard.TargetProperty="Background">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{StaticResource HeaderCellHoverBackgroundBrush}">
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Moving">
                  <Storyboard>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="NormalFill" Storyboard.TargetProperty="Opacity">
                      <SplineDoubleKeyFrame KeyTime="0" Value="0.4" />
                    </DoubleAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.001" Storyboard.TargetName="Bd" Storyboard.TargetProperty="Background">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{StaticResource HeaderCellMovingBackgroundBrush}">
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="FixedIndicatorStates">
                <VisualState x:Name="NotFixable" />
                <VisualState x:Name="Pinned">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="PinnedIndicator" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>
                            Visible
                          </Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Unpinned">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="UnpinnedIndicator" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>
                            Visible
                          </Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="VisibilityIconStates">
                <VisualState x:Name="VisibilityIconHidden" />
                <VisualState x:Name="VisibilityIconVisible">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="VisibilityToggleButton" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>
                            Visible
                          </Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="LeftAdjacentColumnHiddenStates">
                <VisualState x:Name="NoHiddenLeftAdjacentColumns" />
                <VisualState x:Name="HiddenLeftAdjacentColumns">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HiddenLeftAdjacentColumnsElement" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>
                            Visible
                          </Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="RightAdjacentColumnHiddenStates">
                <VisualState x:Name="NoHiddenRightAdjacentColumns" />
                <VisualState x:Name="LastVisibleColumnWithHiddenRightAdjacentColumns">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HiddenRightAdjacentColumnsElement" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>
                            Visible
                          </Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="igPrim:GroupHeaderCellControl" BasedOn="{StaticResource GroupHeaderCellControlStyle}" />

  <!-- *********************************  GroupCellControl Style  ********************************* -->
  <Style x:Key="GroupCellControlStyle" TargetType="igPrim:GroupCellControl">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igPrim:GroupCellControl">
          <igPrim:GroupColumnPanel x:Name="Panel" Cell="{Binding Cell, RelativeSource={RelativeSource TemplatedParent}}" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="igPrim:GroupCellControl" BasedOn="{StaticResource GroupCellControlStyle}" />

  <!-- *********************************  GroupFooterCellControl Style  ********************************* -->
  <Style x:Key="GroupFooterCellControlStyle" TargetType="igPrim:GroupFooterCellControl">
    <Setter Property="FontSize" Value="11" />
    <Setter Property="Foreground" Value="{StaticResource GroupFooterCellForegroundBrush}" />
    <Setter Property="Background" Value="{StaticResource GroupFooterCellBackgroundBrush}" />
    <Setter Property="BorderBrush" Value="{StaticResource GroupFooterCellBorderBrush}" />
    <Setter Property="BorderThickness" Value="0,1,1,0" />
    <Setter Property="HorizontalContentAlignment" Value="Left" />
    <Setter Property="Padding" Value="4" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igPrim:GroupFooterCellControl">
          <igPrim:GroupColumnPanel x:Name="Panel" Cell="{Binding Cell, RelativeSource={RelativeSource TemplatedParent}}" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="igPrim:GroupFooterCellControl" BasedOn="{StaticResource GroupFooterCellControlStyle}" />

  <!-- *********************************  GroupDisplayCellControl Style  ********************************* -->
  <Style x:Key="GroupDisplayCellControlStyle" TargetType="igPrim:GroupDisplayCellControl">
    <Setter Property="FontSize" Value="11" />
    <Setter Property="Background" Value="{StaticResource CellItemBackgroundBrush}" />
    <Setter Property="BorderBrush" Value="{StaticResource CellItemBorderBrush}" />
    <Setter Property="BorderThickness" Value="0,0,1,1" />
    <Setter Property="HorizontalContentAlignment" Value="Left" />
    <Setter Property="VerticalContentAlignment" Value="Center" />
    <Setter Property="InnerControlMargin" Value="0" />
    <Setter Property="Padding" Value="4" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igPrim:GroupDisplayCellControl">
          <Grid>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="MouseOver" />
                <VisualState x:Name="Alternate" />
              </VisualStateGroup>
              <VisualStateGroup x:Name="SelectedStates">
                <VisualState x:Name="NotSelected" />
                <VisualState x:Name="Selected">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="rowSelected" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="ActiveStates">
                <VisualState x:Name="InActive" />
                <VisualState x:Name="Active">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ActiveSelectedBackground" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ActiveSelectedBorder" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="LogicalOperators">
                <VisualState x:Name="NoLogicalOp" />
                <VisualState x:Name="And">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00" Storyboard.TargetName="LogicalOpBorder" Storyboard.TargetProperty="Background">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{StaticResource LogicalAndOperatorBackgroundBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Or">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00" Storyboard.TargetName="LogicalOpBorder" Storyboard.TargetProperty="Background">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{StaticResource LogicalOrOperatorBackgroundBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" x:Name="Root" />
            <Border x:Name="rowSelected" Background="{StaticResource CellItemSelectedBackgroundBrush}" Visibility="Collapsed" Margin="{TemplateBinding BorderThickness}" />
            <Border x:Name="ActiveSelectedBackground" Background="{StaticResource CellItemActiveBackgroundBrush}" Visibility="Collapsed" />
            <Border Padding="0,0,1,1">
              <Border Width="10" x:Name="LogicalOpBorder" BorderThickness="0" Background="Transparent" Margin="{TemplateBinding InnerControlMargin}" />
            </Border>
            <Border x:Name="ActiveSelectedBorder" BorderBrush="{StaticResource CellItemActiveBorderBrush}" BorderThickness="2" Visibility="Collapsed" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="igPrim:GroupDisplayCellControl" BasedOn="{StaticResource GroupDisplayCellControlStyle}" />

  <!-- *********************************  ColumnLayoutTemplateCellControl Style  ********************************* -->
  <Style x:Key="ColumnLayoutTemplateCellControlStyle" TargetType="igPrim:ColumnLayoutTemplateCellControl">
    <Setter Property="FontSize" Value="11" />
    <Setter Property="Background" Value="{StaticResource CellItemBackgroundBrush}" />
    <Setter Property="BorderBrush" Value="{StaticResource CellItemBorderBrush}" />
    <Setter Property="BorderThickness" Value="0,0,1,1" />
    <Setter Property="HorizontalContentAlignment" Value="Left" />
    <Setter Property="VerticalContentAlignment" Value="Center" />
    <Setter Property="Padding" Value="4" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igPrim:ColumnLayoutTemplateCellControl">
          <Grid>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="MouseOver" />
                <VisualState x:Name="Alternate" />
              </VisualStateGroup>
              <VisualStateGroup x:Name="SelectedStates">
                <VisualState x:Name="NotSelected" />
                <VisualState x:Name="Selected">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="rowSelected" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>
                            Visible
                          </Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="ActiveStates">
                <VisualState x:Name="InActive" />
                <VisualState x:Name="Active">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ActiveSelected" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>
                            Visible
                          </Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" x:Name="Root" />
            <Border x:Name="rowSelected" Background="{StaticResource CellItemSelectedBackgroundBrush}" Visibility="Collapsed" Margin="{TemplateBinding BorderThickness}" />
            <Border x:Name="ActiveSelected" Background="{StaticResource CellItemActiveBackgroundBrush}" BorderBrush="{StaticResource CellItemActiveBorderBrush}" BorderThickness="2" Visibility="Collapsed" />
            <ContentPresenter VerticalAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="igPrim:ColumnLayoutTemplateCellControl" BasedOn="{StaticResource ColumnLayoutTemplateCellControlStyle}" />

  <!-- *********************************  MergedContentControl Style  ********************************* -->
  <Style TargetType="igPrim:MergedContentControl">
    <Setter Property="FontSize" Value="11" />
    <Setter Property="Foreground" Value="{StaticResource MergedContentCellForegroundBrush}" />
    <Setter Property="Background" Value="{StaticResource MergedContentCellBackgroundBrush}" />
    <Setter Property="BorderBrush" Value="{StaticResource MergedContentCellBorderBrush}" />
    <Setter Property="BorderThickness" Value="0,0,0,1" />
    <Setter Property="Padding" Value="4" />
    <Setter Property="HorizontalContentAlignment" Value="Left" />
    <Setter Property="VerticalContentAlignment" Value="Top" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igPrim:MergedContentControl">
          <Border x:Name="Bd" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
            <Grid>
              <ContentPresenter VerticalAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" />
            </Grid>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- *********************************  MergedSummaryCellControl Style  ********************************* -->
  <Style x:Key="MergedSummaryCellControlStyle" TargetType="igPrim:MergedSummaryCellControl">
    <Setter Property="FontSize" Value="11" />
    <Setter Property="Background" Value="{StaticResource MergedSummaryCellBackgroundBrush}" />
    <Setter Property="BorderBrush" Value="{StaticResource MergedSummaryCellBorderBrush}" />
    <Setter Property="BorderThickness" Value="0,0,1,0" />
    <Setter Property="Padding" Value="7,3" />
    <Setter Property="HorizontalContentAlignment" Value="Right" />
    <Setter Property="VerticalContentAlignment" Value="Center" />
    <Setter Property="SummaryDisplayTemplate">
      <Setter.Value>
        <DataTemplate>
          <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
            <TextBlock Text="{Binding SummaryDefinition.SummaryOperand.RowDisplayLabelResolved}" />
            <TextBlock Text=" = " />
            <TextBlock Text="{Binding Converter={StaticResource SDFormatStringConverter}}" />
          </StackPanel>
        </DataTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igPrim:MergedSummaryCellControl">
          <Grid>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="MouseOver" />
                <VisualState x:Name="Alternate" />
              </VisualStateGroup>
              <VisualStateGroup x:Name="SelectedStates">
                <VisualState x:Name="NotSelected" />
                <VisualState x:Name="Selected" />
              </VisualStateGroup>
              <VisualStateGroup x:Name="ActiveStates">
                <VisualState x:Name="InActive" />
                <VisualState x:Name="Active">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00" Storyboard.TargetName="ActiveRect" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>
                            Visible
                          </Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="FixedStates">
                <VisualState x:Name="Fixed" />
                <VisualState x:Name="Unfixed" />
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Border x:Name="AddNewRowElem" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}">
              <Rectangle Height="1" VerticalAlignment="Top" Fill="{StaticResource CellItemInnerBorderBrush}" />
            </Border>
            <Rectangle Fill="{StaticResource CellItemActiveBackgroundBrush}" Stroke="{StaticResource CellItemActiveBorderBrush}" StrokeThickness="2" x:Name="ActiveRect" Visibility="Collapsed">
            </Rectangle>
            <StackPanel x:Name="SummaryDisplay" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="{TemplateBinding Padding}" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="igPrim:MergedSummaryCellControl" BasedOn="{StaticResource MergedSummaryCellControlStyle}" />

  <!-- *********************************  CustomFilterButton Style  ********************************* -->
  <Style x:Key="CustomFilterButtonStyle" BasedOn="{StaticResource ButtonStyle}" TargetType="Button">
    <Setter Property="Padding" Value="3,5" />
  </Style>

  <!-- *********************************  CompoundFilterDialogControl Style  ********************************* -->
  <Style TargetType="igPrim:CompoundFilterDialogControl">
    <Setter Property="Background" Value="{StaticResource CompoundFilterDialogBackgroundBrush}" />
    <Setter Property="BorderBrush" Value="{StaticResource CompoundFilterDialogBorderBrush}" />
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="Padding" Value="10" />
    <Setter Property="Margin" Value="1" />
    <Setter Property="VerticalAlignment" Value="Center" />
    <Setter Property="HorizontalAlignment" Value="Center" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igPrim:CompoundFilterDialogControl">
          <Border Background="{TemplateBinding Background}" Width="731" BorderThickness="1" BorderBrush="{StaticResource ColumnChooserDialogBorderBrush}">
            <Grid>
              <Grid.RowDefinitions>
                <RowDefinition Height="40">
                </RowDefinition>
                <RowDefinition>
                </RowDefinition>
                <RowDefinition Height="100">
                </RowDefinition>
                <RowDefinition Height="36">
                </RowDefinition>
              </Grid.RowDefinitions>
              <StackPanel Orientation="Horizontal" Margin="8,0,0,0">
                <Button Margin="0,0,5,0" Style="{StaticResource CustomFilterButtonStyle}" VerticalAlignment="Center">
                  <igBase:Commanding.Command>
                    <igPrim:CompoundFilteringDialogControlCommandSource CommandType="AddToCurrent" EventName="Click" />
                  </igBase:Commanding.Command>
                  <StackPanel Orientation="Horizontal" Margin="2,0">
                    <Path Width="9" Height="9" Data="M4,0 L7,0 7,4 11,4 11,7 7,7 7,11 4,11 4,7 0,7 0,4 4,4 z" Fill="{StaticResource CompoundFilterGlyphBackgroundBrush}" Stretch="Fill" />
                    <TextBlock Text="{TemplateBinding AddConditionButtonText}" Margin="6,0,0,0" VerticalAlignment="Center"></TextBlock>
                  </StackPanel>
                </Button>
                <Button Margin="0,0,5,0" Style="{StaticResource CustomFilterButtonStyle}" VerticalAlignment="Center">
                  <igBase:Commanding.Command>
                    <igPrim:CompoundFilteringDialogControlCommandSource CommandType="DeleteCondition" EventName="Click" />
                  </igBase:Commanding.Command>
                  <StackPanel Orientation="Horizontal" Margin="2,0">
                    <Rectangle Width="11" Height="3" HorizontalAlignment="Left" Margin="2,0,0,0" Fill="{StaticResource CompoundFilterGlyphBackgroundBrush}" />
                    <TextBlock Text="{TemplateBinding RemoveConditionButtonText}" Margin="6,0,0,0" VerticalAlignment="Center"></TextBlock>
                  </StackPanel>
                </Button>
                <TextBlock Text="{TemplateBinding SelectedGroupText}" VerticalAlignment="Center" Foreground="{StaticResource ForegroundBrush}" Margin="13,0,8,0" />
                <Button Margin="0,0,5,0" Style="{StaticResource CustomFilterButtonStyle}" VerticalAlignment="Center">
                  <igBase:Commanding.Command>
                    <igPrim:CompoundFilteringDialogControlCommandSource CommandType="CreateAndGroup" EventName="Click" />
                  </igBase:Commanding.Command>
                  <StackPanel Orientation="Horizontal" Margin="2,0">
                    <Path Width="14" Height="14" Margin="1,0,0,0" Data="M10.00,6 L10.00,10 L6,10 L6,12 L12,12 L12,6 z M2,2 L2,8 L4,8 L4.00,4 L8,4 L8,2 z M0,0 L10,0 L10,2 L10,4 L14,4 L14,5 L14,6 L14,12 L14,14 L12,14 L6,14 L4,14 L4,12 L4,10 L2,10 L0,10 L0,8 L0,2 L0,0.99 z" Fill="{StaticResource CompoundFilterGlyphBackgroundBrush}" Stretch="Fill" StrokeThickness="2" UseLayoutRounding="False" />
                    <TextBlock Text="{TemplateBinding AndButtonText}" Margin="6,0,0,0" VerticalAlignment="Center"></TextBlock>
                  </StackPanel>
                </Button>
                <Button Margin="0,0,5,0" Style="{StaticResource CustomFilterButtonStyle}" VerticalAlignment="Center">
                  <igBase:Commanding.Command>
                    <igPrim:CompoundFilteringDialogControlCommandSource CommandType="CreateOrGroup" EventName="Click" />
                  </igBase:Commanding.Command>
                  <StackPanel Orientation="Horizontal" Margin="2,0">
                    <Path Width="14" Height="14" Margin="1,0,0,0" Data="M2,2 L2,8 L4,8 L6,8 L6,10 L6,12 L12,12 L12,6 L10,6 L8,6 L8,4 L8,2 z M0,0 L10,0 L10,2 L10,4 L14,4 L14,5 L14,6 L14,12 L14,14 L12,14 L6,14 L4,14 L4,12 L4,10 L2,10 L0,10 L0,8 L0,2 L0,1 z" Fill="{StaticResource CompoundFilterGlyphBackgroundBrush}" Stretch="Fill" StrokeThickness="2" UseLayoutRounding="False" />
                    <TextBlock Text="{TemplateBinding OrButtonText}" Margin="6,0,0,0" VerticalAlignment="Center"></TextBlock>
                  </StackPanel>
                </Button>
                <Button Margin="0,0,5,0" Style="{StaticResource CustomFilterButtonStyle}" VerticalAlignment="Center">
                  <igBase:Commanding.Command>
                    <igPrim:CompoundFilteringDialogControlCommandSource CommandType="Ungroup" EventName="Click" />
                  </igBase:Commanding.Command>
                  <StackPanel Orientation="Horizontal" Margin="2,0">
                    <Path Width="14" Height="14" Margin="1,0,0,0" Data="M12,12 L14,12 L14,14 L12,14 z M9,12 L11,12 L11,14 L9,14 z M6,12 L8,12 L8,14 L6,14 z M3.00,12 L5,12 L5,14 L3.00,14 z M12,9 L14,9 L14,11 L12,11 z M0,9 L1.99,9 L1.99,11 L0,11 z M12,6 L14,6 L14,8 L12,8 z M0,6 L1.99,6 L1.99,8 L0,8 z M9,3.00 L11,3.00 L11,5 L10,5 L10,10 L5,10 L5,11 L3,11 L3,9 L4,9 L4,4 L9,4 z M0,3.00 L1.99,3.00 L1.99,5 L0,5 z M12,3 L14,3 L14,5 L12,5 z M9,0 L11,0 L11,1.99 L9,1.99 z M6,0 L8,0 L8,1.99 L6,1.99 z M3,0 L5,0 L5,1.99 L3,1.99 z M0,0 L1.99,0 L1.99,1.99 L0,1.99 z" Fill="{StaticResource CompoundFilterGlyphBackgroundBrush}" Stretch="Fill" StrokeThickness="1.5" UseLayoutRounding="False" />
                    <TextBlock Text="{TemplateBinding UngroupButtonText}" Margin="6,0,0,0" VerticalAlignment="Center"></TextBlock>
                  </StackPanel>
                </Button>
                <Button Margin="0,0,5,0" Style="{StaticResource CustomFilterButtonStyle}" VerticalAlignment="Center">
                  <igBase:Commanding.Command>
                    <igPrim:CompoundFilteringDialogControlCommandSource CommandType="ToggleGroup" EventName="Click" />
                  </igBase:Commanding.Command>
                  <StackPanel Orientation="Horizontal" Margin="2,0">
                    <Path Width="14" Height="14" HorizontalAlignment="Left" Margin="2,0,0,0" Data="M10.81,3.13 C10.81,3.13 6.35,3.15 6.35,3.15 6.35,3.15 7.12,3.92 7.83,4.63 L7.90,4.70 6.29,6.27 6.29,6.27 6.31,6.25 7.66,7.60 9.24,6.04 9.31,6.11 C10.02,6.82 10.79,7.59 10.79,7.59 10.79,7.59 10.81,3.13 10.81,3.13 z M2.00,1.99 L2.00,12 12,12 7.63,7.63 6.05,9.17 6.12,9.24 C6.83,9.95 7.59,10.72 7.59,10.72 7.59,10.72 3.13,10.74 3.13,10.74 3.13,10.74 3.16,6.29 3.16,6.29 3.16,6.29 3.93,7.05 4.64,7.76 L4.70,7.83 6.28,6.28 z M6.25E-07,0 L2.00,0 12,0 13.99,0 14,1.99 14,13.99 0,14 0,12 6.25E-07,1.99 z" Fill="{StaticResource CompoundFilterGlyphBackgroundBrush}" Stretch="Fill" UseLayoutRounding="False" />
                    <TextBlock Text="{TemplateBinding ToggleButtonText}" Margin="6,0,0,0" VerticalAlignment="Center"></TextBlock>
                  </StackPanel>
                </Button>
              </StackPanel>
              <ig:XamGrid x:Name="FilterGrid" Background="{StaticResource FilterGridBackgroundBrush}" Grid.Row="1" AutoGenerateColumns="False" Height="200" IsAlternateRowsEnabled="False">
                <ig:XamGrid.EditingSettings>
                  <ig:EditingSettings AllowEditing="Cell" IsOnCellActiveEditingEnabled="True" />
                </ig:XamGrid.EditingSettings>
                <ig:XamGrid.RowSelectorSettings>
                  <ig:RowSelectorSettings Visibility="Visible" />
                </ig:XamGrid.RowSelectorSettings>
                <ig:XamGrid.SortingSettings>
                  <ig:SortingSettings AllowSorting="False" />
                </ig:XamGrid.SortingSettings>
                <ig:XamGrid.SelectionSettings>
                  <ig:SelectionSettings RowSelection="Multiple" CellClickAction="SelectRow" />
                </ig:XamGrid.SelectionSettings>
                <ig:XamGrid.Columns>
                  <ig:ComboBoxColumn Key="FilterOperand" DisplayMemberPath="DisplayName" EditorDisplayBehavior="Always" MinimumWidth="10" EditorStyle="{StaticResource ComboBoxStyle}" />
                  <ig:ProxyColumn Key="FilterValue" MinimumWidth="10" Width="Auto"/>
                  <ig:TextColumn IsReadOnly="True" Key="ErrorMessage" Width="*" MinimumWidth="10" HeaderText=" ">
                    <ig:TextColumn.CellStyle>
                      <Style TargetType="ig:CellControl">
                        <Setter Property="Foreground" Value="Red" />
                      </Style>
                    </ig:TextColumn.CellStyle>
                  </ig:TextColumn>
                  <ig:TextColumn Key="Group.LevelName" IsSorted="Ascending" Visibility="Collapsed" />
                </ig:XamGrid.Columns>
              </ig:XamGrid>
              <Border Grid.Row="2" Background="{StaticResource FilterDescriptionBackgroundBrush}" BorderThickness="0,0,0,1" BorderBrush="{StaticResource PopupBorderBrush}">
                <ScrollViewer Style="{StaticResource ScrollViewerStyle}" VerticalScrollBarVisibility="Auto">
                  <TextBlock Text="{TemplateBinding FilterDescription}" TextWrapping="Wrap" Margin="8" Foreground="{StaticResource ForegroundBrush}" />
                </ScrollViewer>
              </Border>
              <StackPanel Orientation="Horizontal" Grid.Row="3" Margin="8,0,0,0">
                <TextBlock Text="{TemplateBinding AndColorLabelText}" VerticalAlignment="Center" Margin="0,0,8,0" Foreground="{StaticResource ForegroundBrush}" />
                <Rectangle Height="16" Width="16" Fill="{StaticResource LogicalAndOperatorBackgroundBrush}" VerticalAlignment="Center" Margin="0,0,8,0" Stroke="{StaticResource OperatorsItemBorderBrush}" StrokeThickness="1" />
                <TextBlock Text="{TemplateBinding OrColorLabelText}" VerticalAlignment="Center" Margin="0,0,8,0" Foreground="{StaticResource ForegroundBrush}" />
                <Rectangle Height="16" Width="16" Fill="{StaticResource LogicalOrOperatorBackgroundBrush}" VerticalAlignment="Center" Margin="0,0,16,0" Stroke="{StaticResource OperatorsItemBorderBrush}" StrokeThickness="1" />
              </StackPanel>
              <StackPanel Orientation="Horizontal" Grid.Row="3" HorizontalAlignment="Right">
                <Button Content="{TemplateBinding OKButtonText}" Width="74" Margin="0,0,8,0" Style="{StaticResource ButtonStyle}" VerticalAlignment="Center">
                  <ig:Commanding.Commands>
                    <ig:CommandSourceCollection>
                      <igPrim:CompoundFilteringDialogControlCommandSource CommandType="Accept" EventName="Click" />
                      <igPrim:CompoundFilteringDialogControlCommandSource CommandType="Close" EventName="Click" />
                    </ig:CommandSourceCollection>
                  </ig:Commanding.Commands>
                </Button>
                <Button Content="{TemplateBinding CancelButtonText}" Width="74" Style="{StaticResource ButtonStyle}" VerticalAlignment="Center" Margin="0,0,8,0">
                  <ig:Commanding.Command>
                    <igPrim:CompoundFilteringDialogControlCommandSource CommandType="Close" EventName="Click" />
                  </ig:Commanding.Command>
                </Button>
              </StackPanel>
            </Grid>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

</ResourceDictionary>