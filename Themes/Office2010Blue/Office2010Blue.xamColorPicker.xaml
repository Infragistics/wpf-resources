<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:System="clr-namespace:System;assembly=mscorlib"
                    xmlns:ig="http://schemas.infragistics.com/xaml"
                    xmlns:igCP="http://schemas.infragistics.com/xaml"
                    xmlns:igPrim="http://schemas.infragistics.com/xaml/primitives"
                    xmlns:igPrimBase="http://schemas.infragistics.com/xaml/primitives"
                    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    mc:Ignorable="d">

    <!-- *********************************  RESOURCES  ********************************* -->
    <ResourceDictionary.MergedDictionaries>
      <ResourceDictionary Source="Office2010Blue.Theme.Colors.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <!-- *********************************  COLOR PICKER (ONLY) COLORS  ********************************* -->
    <Color x:Key="Color_2001">#ff000000</Color>
    <Color x:Key="Color_2002">#FFFFFF00</Color>
    <Color x:Key="Color_2003">#ff00ff00</Color>
    <Color x:Key="Color_2004">#FF008000</Color>
    <Color x:Key="Color_2005">#ff00ffff</Color>
    <Color x:Key="Color_2006">#ff0000ff</Color>
    <Color x:Key="Color_2007">#FFFF00FF</Color>
    <Color x:Key="Color_2008">#FFFF0000</Color>

    <!-- ********************************** BRUSHES **********************************-->
    <SolidColorBrush x:Key="ForegroundBrush" Color="{StaticResource Color_001}"/>
    <SolidColorBrush x:Key="DisabledBackgroundBrush" Color="{StaticResource Color_005}"/>
    <SolidColorBrush x:Key="TransparentBrush" Color="{StaticResource Color_033}"/>

    <!--  TextBox Brushes -->
    <SolidColorBrush x:Key="TextBoxBackgroundBrush" Color="{StaticResource Color_005}"/>
    <SolidColorBrush x:Key="TextBoxBorderBrush" Color="{StaticResource Color_027}"/>

    <!--  Slider Brushes -->
    <LinearGradientBrush x:Key="SliderHTrackBackgroundBrush" StartPoint="0.82,1" EndPoint="0.82,0.25">
      <GradientStop Color="{StaticResource Color_026}" Offset="0.631"/>
      <GradientStop Color="{StaticResource Color_005}" Offset="0.63"/>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="SliderVTrackBackgroundBrush" EndPoint="0.678,0.5" StartPoint="0.322,0.5">
      <GradientStop Color="{StaticResource Color_026}" Offset="0.501"/>
      <GradientStop Color="{StaticResource Color_005}" Offset="0.50"/>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="SliderThumbBackgroundBrush" EndPoint="0.56,0.99" StartPoint="0.56,0.01">
      <GradientStop Color="{StaticResource Color_029}" Offset="1"/>
      <GradientStop Color="{StaticResource Color_032}"/>
    </LinearGradientBrush>

    <SolidColorBrush x:Key="SliderThumbBorderBrush" Color="{StaticResource Color_027}"/>

    <LinearGradientBrush x:Key="SliderThumbHoverBackgroundBrush" StartPoint="0,0" EndPoint="0,1">
      <GradientStop Offset="0" Color="{StaticResource Color_018}"/>
      <GradientStop Offset="0.23" Color="{StaticResource Color_017}"/>
      <GradientStop Offset="0.75" Color="{StaticResource Color_017}"/>
      <GradientStop Offset="1" Color="{StaticResource Color_019}"/>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="SliderThumbHoverBorderBrush" StartPoint="0.5,0" EndPoint="0.5,1">
      <GradientStop Offset="1" Color="{StaticResource Color_013}"/>
      <GradientStop Color="{StaticResource Color_014}" Offset="0.05"/>
    </LinearGradientBrush>

    <SolidColorBrush x:Key="SliderThumbHoverInnerBorderBrush" Color="{StaticResource Color_019}"/>

    <LinearGradientBrush x:Key="SliderThumbPressedBackgroundBrush" StartPoint="0,0 " EndPoint="0,1 ">
      <GradientStop Offset="1" Color="{StaticResource Color_017}"/>
      <GradientStop Color="{StaticResource Color_016}"/>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="SliderThumbPressedBorderBrush" StartPoint="0.5,0" EndPoint="0.5,1">
      <GradientStop Offset="0" Color="{StaticResource Color_012}"/>
      <GradientStop Offset="1" Color="{StaticResource Color_013}"/>
    </LinearGradientBrush>

    <!--  Button Brushes -->
    <LinearGradientBrush x:Key="ButtonBackgroundBrush" StartPoint="0.5,0" EndPoint="0.5,1">
      <GradientStop Color="{StaticResource Color_030}" Offset="1"/>
      <GradientStop Color="{StaticResource Color_032}"/>
    </LinearGradientBrush>

    <SolidColorBrush x:Key="ButtonBorderBrush" Color="{StaticResource Color_027}"/>

    <LinearGradientBrush x:Key="ButtonHoverBackgroundBrush" StartPoint="0,0" EndPoint="0,1">
      <GradientStop Offset="0" Color="{StaticResource Color_018}"/>
      <GradientStop Offset="0.23" Color="{StaticResource Color_017}"/>
      <GradientStop Offset="0.75" Color="{StaticResource Color_017}"/>
      <GradientStop Offset="1" Color="{StaticResource Color_019}"/>
    </LinearGradientBrush>

    <SolidColorBrush x:Key="ButtonHoverHighlightBorderBrush" Color="{StaticResource Color_019}"/>

    <LinearGradientBrush x:Key="ButtonHoverBorderBrush" StartPoint="0.5,0" EndPoint="0.5,1">
      <GradientStop Offset="1" Color="{StaticResource Color_014}"/>
      <GradientStop Color="{StaticResource Color_015}"/>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="ButtonPressedBackgroundBrush" StartPoint="0,0 " EndPoint="0,1 ">
      <GradientStop Offset="1" Color="{StaticResource Color_017}"/>
      <GradientStop Color="{StaticResource Color_016}"/>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="ButtonPressedBorderBrush" StartPoint="0.5,0" EndPoint="0.5,1">
      <GradientStop Offset="0" Color="{StaticResource Color_012}"/>
      <GradientStop Offset="1" Color="{StaticResource Color_013}"/>
    </LinearGradientBrush>

    <SolidColorBrush x:Key="ButtonFocusedBorderBrush" Color="{StaticResource Color_013}"/>

    <!--  ToggleButton Brushes -->
    <LinearGradientBrush x:Key="ToggleButtonBackgroundBrush" StartPoint="0.5,0" EndPoint="0.5,1">
      <GradientStop Color="{StaticResource Color_030}" Offset="1"/>
      <GradientStop Color="{StaticResource Color_032}"/>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="ToggleButtonBorderBrush" StartPoint="0.5,0" EndPoint="0.5,1">
      <GradientStop Color="{StaticResource Color_029}"/>
      <GradientStop Color="{StaticResource Color_027}" Offset="1"/>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="ToggleButtonHoverBackgroundBrush" StartPoint="0,0" EndPoint="0,1">
      <GradientStop Offset="0" Color="{StaticResource Color_018}"/>
      <GradientStop Offset="0.23" Color="{StaticResource Color_017}"/>
      <GradientStop Offset="0.75" Color="{StaticResource Color_017}"/>
      <GradientStop Offset="1" Color="{StaticResource Color_019}"/>
    </LinearGradientBrush>

    <SolidColorBrush x:Key="ToggleButtonHoverHighlightBorderBrush" Color="{StaticResource Color_019}"/>

    <LinearGradientBrush x:Key="ToggleButtonHoverBorderBrush" StartPoint="0.5,0" EndPoint="0.5,1">
      <GradientStop Offset="1" Color="{StaticResource Color_014}"/>
      <GradientStop Color="{StaticResource Color_015}"/>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="ToggleButtonPressedBackgroundBrush" StartPoint="0,0 " EndPoint="0,1 ">
      <GradientStop Offset="1" Color="{StaticResource Color_017}"/>
      <GradientStop Color="{StaticResource Color_016}"/>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="ToggleButtonPressedBorderBrush" StartPoint="0.5,0" EndPoint="0.5,1">
      <GradientStop Offset="0" Color="{StaticResource Color_012}"/>
      <GradientStop Offset="1" Color="{StaticResource Color_013}"/>
    </LinearGradientBrush>

    <SolidColorBrush x:Key="ToggleButtonFocusedBorderBrush" Color="{StaticResource Color_013}"/>

    <!-- ColorModes Brushes -->
    <SolidColorBrush x:Key="ColorModeTabsBackgroundBrush" Color="{StaticResource Color_030}"/>
    <SolidColorBrush x:Key="ColorModesBackgroundBrush" Color="{StaticResource Color_028}"/>
    <SolidColorBrush x:Key="ColorModeRadioButtonBackgroundBrush" Color="{StaticResource Color_032}"/>

    <!-- ColorItem Brushes -->
    <SolidColorBrush x:Key="ColorItemBoxBorderBrush" Color="{StaticResource Color_027}"/>
    <SolidColorBrush x:Key="ColorItemBoxSelectedOuterBorderBrush" Color="{StaticResource Color_012}"/>
    <SolidColorBrush x:Key="ColorItemBoxSelectedInnerBorderBrush" Color="{StaticResource Color_018}"/>
    <SolidColorBrush x:Key="ColorItemBoxHoverOuterBorderBrush" Color="{StaticResource Color_014}"/>
    <SolidColorBrush x:Key="ColorItemBoxHoverInnerBorderBrush" Color="{StaticResource Color_018}"/>

    <!-- AdvancedColorShadePicker Brushes -->
    <LinearGradientBrush x:Key="AdvancedColorShadePickerWhiteBackgroundBrush" StartPoint="0,0" EndPoint="1,0">
      <GradientStop Offset="0" Color="{StaticResource Color_005}"/>
      <GradientStop Offset="1" Color="{StaticResource Color_033}"/>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="AdvancedColorShadePickerBlackBackgroundBrush" StartPoint="0,1" EndPoint="0, 0">
      <GradientStop Offset="0" Color="{StaticResource Color_001}"/>
      <GradientStop Offset="1" Color="{StaticResource Color_034}"/>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="AdvancedColorShadePickerHueBackgroundBrush" StartPoint="0,0" EndPoint="0,1" igPrimBase:XamlHelper.IsExcludedFromWash="True">
      <GradientStop Offset="0.00" Color="{StaticResource Color_2008}"/>
      <GradientStop Offset="0.17" Color="{StaticResource Color_2002}"/>
      <GradientStop Offset="0.33" Color="{StaticResource Color_2003}"/>
      <GradientStop Offset="0.50" Color="{StaticResource Color_2005}"/>
      <GradientStop Offset="0.66" Color="{StaticResource Color_2006}"/>
      <GradientStop Offset="0.83" Color="{StaticResource Color_2007}"/>
      <GradientStop Offset="1.00" Color="{StaticResource Color_2008}"/>
    </LinearGradientBrush>

    <SolidColorBrush x:Key="AdvancedColorShadePickerColorSamplingBackgroundBrush" Color="{StaticResource Color_2008}"/>
    <SolidColorBrush x:Key="RedSliderTrackFillBackgroundBrush" Color="{StaticResource Color_2008}" igPrim:XamlHelper.IsExcludedFromWash="True" />
    <SolidColorBrush x:Key="GreenSliderTrackFillBackgroundBrush" Color="{StaticResource Color_2004}" igPrim:XamlHelper.IsExcludedFromWash="True" />
    <SolidColorBrush x:Key="BlueSliderTrackFillBackgroundBrush" Color="{StaticResource Color_2006}" igPrim:XamlHelper.IsExcludedFromWash="True" />
    <SolidColorBrush x:Key="CyanSliderTrackFillBackgroundBrush" Color="{StaticResource Color_2005}" igPrim:XamlHelper.IsExcludedFromWash="True" />
    <SolidColorBrush x:Key="MagentaSliderTrackFillBackgroundBrush" Color="{StaticResource Color_2007}" igPrim:XamlHelper.IsExcludedFromWash="True" />
    <SolidColorBrush x:Key="YellowSliderTrackFillBackgroundBrush" Color="{StaticResource Color_2002}" igPrim:XamlHelper.IsExcludedFromWash="True" />
    <SolidColorBrush x:Key="BlackSliderTrackFillBackgroundBrush" Color="{StaticResource Color_2001}" igPrim:XamlHelper.IsExcludedFromWash="True" />

    <!--  ColorPicker Brushes -->
    <LinearGradientBrush x:Key="DividerBackgroundBrush" StartPoint="0.82,1" EndPoint="0.82,0.25">
      <GradientStop Color="{StaticResource Color_030}" Offset="0.63"/>
      <GradientStop Color="{StaticResource Color_027}" Offset="0.631"/>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="ColorPickerBackgroundBrush" EndPoint="0.56,0.99" StartPoint="0.56,0.01">
      <GradientStop Color="{StaticResource Color_032}"/>
      <GradientStop Color="{StaticResource Color_029}" Offset="1"/>
    </LinearGradientBrush>

    <SolidColorBrush x:Key="ColorPickerForegroundBrush" Color="{StaticResource Color_024}"/>
    <SolidColorBrush x:Key="ColorPickerBorderBrush" Color="{StaticResource Color_027}"/>
    <SolidColorBrush x:Key="ColorPickerGlyphBorderBrush" Color="{StaticResource Color_025}"/>
    <SolidColorBrush x:Key="ColorPickerGlyphBackgroundBrush" Color="{StaticResource Color_005}"/>
    <SolidColorBrush x:Key="ColorPickerSelectedColorRectangleBorderBrush" Color="{StaticResource Color_026}"/>
    <SolidColorBrush x:Key="LightnessSelectorBorderBrush" Color="{StaticResource Color_023}"/>
    <SolidColorBrush x:Key="LightnessSelectorInnerBorderBrush" Color="{StaticResource Color_005}"/>
    <SolidColorBrush x:Key="HueSelectorBackgroundBrush" Color="{StaticResource Color_023}"/>

    <!-- *********************************  Button Style  ********************************* -->
    <Style x:Key="ButtonStyle" TargetType="Button">
      <Setter Property="Background" Value="{StaticResource ButtonBackgroundBrush}"/>
      <Setter Property="BorderBrush" Value="{StaticResource ButtonBorderBrush}"/>
      <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}"/>
      <Setter Property="Padding" Value="3"/>
      <Setter Property="Cursor" Value="Hand"/>
      <Setter Property="BorderThickness" Value="1"/>
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="Button">
            <Grid>
              <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                  <VisualState x:Name="Normal"/>
                  <VisualState x:Name="MouseOver">
                    <Storyboard>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BaseShape" Storyboard.TargetProperty="Background">
                        <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonHoverBackgroundBrush}"/>
                      </ObjectAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BaseShape" Storyboard.TargetProperty="BorderBrush">
                        <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonHoverBorderBrush}"/>
                      </ObjectAnimationUsingKeyFrames>
                      <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ButtonHighlight" Storyboard.TargetProperty="Opacity">
                        <SplineDoubleKeyFrame KeyTime="0" Value="1"/>
                      </DoubleAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualState>
                  <VisualState x:Name="Pressed">
                    <Storyboard>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BaseShape" Storyboard.TargetProperty="Background">
                        <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonPressedBackgroundBrush}"/>
                      </ObjectAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BaseShape" Storyboard.TargetProperty="BorderBrush">
                        <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonPressedBorderBrush}"/>
                      </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualState>
                  <VisualState x:Name="Disabled">
                    <Storyboard>
                      <DoubleAnimationUsingKeyFrames Storyboard.TargetName="DisabledVisualElement" Storyboard.TargetProperty="Opacity">
                        <SplineDoubleKeyFrame KeyTime="0" Value="0.6"/>
                      </DoubleAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="FocusStates">
                  <VisualState x:Name="Focused">
                    <Storyboard>
                      <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="FocusedVisualElement" d:IsOptimized="True"/>
                    </Storyboard>
                  </VisualState>
                  <VisualState x:Name="Unfocused"/>
                </VisualStateGroup>
              </VisualStateManager.VisualStateGroups>
              <Border x:Name="BaseShape" CornerRadius="3" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" />
              <Rectangle x:Name="ButtonHighlight" Margin="1" RadiusX="2" RadiusY="2" Stroke="{StaticResource ButtonHoverHighlightBorderBrush}" StrokeThickness="1" Grid.ColumnSpan="2" Opacity="0"/>
              <ContentPresenter x:Name="contentPresenter" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}"/>
              <Rectangle x:Name="FocusedVisualElement" Stroke="{StaticResource ButtonFocusedBorderBrush}" StrokeThickness="1"  RadiusX="3" RadiusY="3" Opacity="0"/>
              <Rectangle x:Name="DisabledVisualElement" Fill="{StaticResource DisabledBackgroundBrush}" IsHitTestVisible="false" RadiusX="3" RadiusY="3" Opacity="0"/>
            </Grid>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>

    <!-- *********************************  ColorPickerRadioButtonStyle  ********************************* -->
    <Style x:Key="ColorPickerRadioButtonStyle" TargetType="RadioButton">
      <Setter Property="Background" Value="{StaticResource ColorModeRadioButtonBackgroundBrush}"/>
      <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}"/>
      <Setter Property="HorizontalContentAlignment" Value="Center"/>
      <Setter Property="VerticalContentAlignment" Value="Center"/>
      <Setter Property="BorderThickness" Value="1,1,1,0"/>
      <Setter Property="BorderBrush" Value="{StaticResource ColorModesBackgroundBrush}"/>
      <Setter Property="Padding" Value="5,3"/>
      <Setter Property="Cursor" Value="Hand"/>
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="RadioButton">
            <Grid>
              <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                  <VisualState x:Name="Normal"/>
                  <VisualState x:Name="MouseOver">
                    <Storyboard>
                      <DoubleAnimation Duration="0" Storyboard.TargetName="border1" Storyboard.TargetProperty="(UIElement.Opacity)" To="1"/>
                    </Storyboard>
                  </VisualState>
                  <VisualState x:Name="Pressed">
                    <Storyboard>
                      <DoubleAnimation Duration="0" Storyboard.TargetName="border1" Storyboard.TargetProperty="(UIElement.Opacity)" To="1"/>
                    </Storyboard>
                  </VisualState>
                  <VisualState x:Name="Disabled">
                    <Storyboard>
                      <DoubleAnimation Duration="0" Storyboard.TargetName="contentPresenter" Storyboard.TargetProperty="(UIElement.Opacity)" To=".40"/>
                    </Storyboard>
                  </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="CheckStates">
                  <VisualState x:Name="Checked">
                    <Storyboard>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="border">
                        <DiscreteObjectKeyFrame KeyTime="0">
                          <DiscreteObjectKeyFrame.Value>
                            <Visibility>Visible</Visibility>
                          </DiscreteObjectKeyFrame.Value>
                        </DiscreteObjectKeyFrame>
                      </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualState>
                  <VisualState x:Name="Unchecked"/>
                  <VisualState x:Name="Indeterminate"/>
                </VisualStateGroup>
                <VisualStateGroup x:Name="FocusStates">
                  <VisualState x:Name="Focused"/>
                  <VisualState x:Name="Unfocused"/>
                </VisualStateGroup>
                <VisualStateGroup x:Name="ValidationStates">
                  <VisualState x:Name="Valid"/>
                  <VisualState x:Name="InvalidUnfocused"/>
                  <VisualState x:Name="InvalidFocused"/>
                </VisualStateGroup>
              </VisualStateManager.VisualStateGroups>
              <Border x:Name="border1" Margin="0,0,0,1" CornerRadius="2,2,0,0" Opacity="0" BorderBrush="{StaticResource ButtonBorderBrush}" BorderThickness="1,1,1,0" Background="{StaticResource ButtonBackgroundBrush}"/>
              <Border x:Name="border" Grid.ColumnSpan="2" Margin="0" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="2,2,0,0" Background="{TemplateBinding Background}" Visibility="Collapsed"/>
              <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Grid.Column="1" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
            </Grid>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>

    <!-- *********************************  SimpleTextBox Style  ********************************* -->
    <Style x:Key="SimpleTextBoxStyle" TargetType="TextBox">
      <Setter Property="BorderThickness" Value="1"/>
      <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}"/>
      <Setter Property="BorderBrush" Value="{StaticResource TextBoxBorderBrush}"/>
      <Setter Property="Background" Value="{StaticResource TextBoxBackgroundBrush}"/>
      <Setter Property="Padding" Value="2"/>
    </Style>

    <!-- *********************************  TrackFillStyle  ********************************* -->
    <Style x:Key="TrackFillStyle" TargetType="igPrimBase:TrackFill">
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="igPrimBase:TrackFill">
            <Rectangle Height="3" Fill="{TemplateBinding Background}"/>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>

    <!-- *********************************  SliderThumbStyle  ********************************* -->
    <Style x:Key="SliderThumbStyle" TargetType="igCP:XamSliderThumbBase">
      <Setter Property="Background" Value="{StaticResource SliderThumbBackgroundBrush}"/>
      <Setter Property="BorderBrush" Value="{StaticResource SliderThumbBorderBrush}"/>
      <Setter Property="BorderThickness" Value="1"/>
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="igCP:XamSliderThumbBase">
            <Grid x:Name="RootElement">
              <ToolTipService.ToolTip>
                <ToolTip x:Name="ThumbToolTip" ContentTemplate="{TemplateBinding ToolTipTemplate}" Visibility="{TemplateBinding ToolTipVisibility}"/>
              </ToolTipService.ToolTip>
              <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="OrientationStates">
                  <VisualState x:Name="Horizontal"/>
                  <VisualState x:Name="Vertical">
                    <Storyboard>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HorizontalThumb" Storyboard.TargetProperty="Visibility">
                        <DiscreteObjectKeyFrame KeyTime="00:00:00">
                          <DiscreteObjectKeyFrame.Value>
                            <Visibility>
                              Collapsed

                            </Visibility>
                          </DiscreteObjectKeyFrame.Value>
                        </DiscreteObjectKeyFrame>
                      </ObjectAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="VerticalThumb" Storyboard.TargetProperty="Visibility">
                        <DiscreteObjectKeyFrame KeyTime="00:00:00">
                          <DiscreteObjectKeyFrame.Value>
                            <Visibility>
                              Visible

                            </Visibility>
                          </DiscreteObjectKeyFrame.Value>
                        </DiscreteObjectKeyFrame>
                      </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="HoverStates">
                  <VisualState x:Name="Hover">
                    <Storyboard>
                      <DoubleAnimation Duration="0" To="0.6" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="ThumbInnerStroke"/>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ThumbBackground" Storyboard.TargetProperty="Fill">
                        <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SliderThumbHoverBackgroundBrush}"/>
                      </ObjectAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ThumbBackground" Storyboard.TargetProperty="Stroke">
                        <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SliderThumbHoverBorderBrush}"/>
                      </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualState>
                  <VisualState x:Name="NoHover"/>
                </VisualStateGroup>
                <VisualStateGroup x:Name="FocusStates">
                  <VisualState x:Name="Unfocused"/>
                  <VisualState x:Name="Focused">
                    <Storyboard>
                      <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="ThumbFocused"/>
                    </Storyboard>
                  </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="ActiveStates">
                  <VisualState x:Name="Inactive"/>
                  <VisualState x:Name="Active"/>
                </VisualStateGroup>
              </VisualStateManager.VisualStateGroups>
              <Grid x:Name="HorizontalThumb">
                <Grid x:Name="HorizontalThumbContent" Height="14" Width="9">
                  <Grid>
                    <Path x:Name="ThumbBackground" Data="M0.5,0.5 L8.5,0.5 L8.5,9.9374847 L4.5208335,13.31249 L0.5,9.9374847 z" Fill="{TemplateBinding Background}" Stretch="Fill" Stroke="{TemplateBinding BorderBrush}" UseLayoutRounding="False" Height="14" Width="9"/>
                    <Path x:Name="ThumbInnerStroke" Data="M0.5,0.5 L8.5,0.5 L8.5,9.9374847 L4.5208335,12.972734 L0.5,9.9374847 z" Stretch="Fill" Stroke="{StaticResource SliderThumbHoverInnerBorderBrush}" UseLayoutRounding="False" Height="11.706" Width="7" Opacity="0" Margin="1,1.147"/>
                    <Path x:Name="ThumbFocused" Data="M0.5,0.5 L8.5,0.5 L8.5,9.9374847 L4.5208335,13.31249 L0.5,9.9374847 z" Stretch="Fill" Fill="{StaticResource SliderThumbPressedBackgroundBrush}" Stroke="{StaticResource SliderThumbPressedBorderBrush}" UseLayoutRounding="False" Height="14" Width="9" Opacity="0"/>
                  </Grid>
                </Grid>
              </Grid>
              <Grid x:Name="VerticalThumb" Visibility="Collapsed"/>
            </Grid>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>

    <!-- *********************************  SliderThumbStyle4HSLCMYK  ********************************* -->
    <Style x:Key="SliderThumbStyle4HSLCMYK" TargetType="igCP:XamSliderNumericThumb">
      <Setter Property="Background" Value="{StaticResource SliderThumbBackgroundBrush}"/>
      <Setter Property="BorderBrush" Value="{StaticResource SliderThumbBorderBrush}"/>
      <Setter Property="BorderThickness" Value="1"/>
    <Setter Property="Margin" Value="0,3,0,0"/>
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="igCP:XamSliderThumbBase">
            <Grid x:Name="RootElement">
              <ToolTipService.ToolTip>
                <ToolTip x:Name="ThumbToolTip" ContentTemplate="{TemplateBinding ToolTipTemplate}" Visibility="{TemplateBinding ToolTipVisibility}"/>
              </ToolTipService.ToolTip>
              <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="OrientationStates">
                  <VisualState x:Name="Horizontal"/>
                  <VisualState x:Name="Vertical">
                    <Storyboard>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HorizontalThumb" Storyboard.TargetProperty="Visibility">
                        <DiscreteObjectKeyFrame KeyTime="00:00:00">
                          <DiscreteObjectKeyFrame.Value>
                            <Visibility>Collapsed</Visibility>
                          </DiscreteObjectKeyFrame.Value>
                        </DiscreteObjectKeyFrame>
                      </ObjectAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="VerticalThumb" Storyboard.TargetProperty="Visibility">
                        <DiscreteObjectKeyFrame KeyTime="00:00:00">
                          <DiscreteObjectKeyFrame.Value>
                            <Visibility>Visible</Visibility>
                          </DiscreteObjectKeyFrame.Value>
                        </DiscreteObjectKeyFrame>
                      </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="HoverStates">
                  <VisualState x:Name="Hover">
                    <Storyboard>
                      <DoubleAnimation Duration="0" To="0.6" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="ThumbInnerStroke"/>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ThumbBackground" Storyboard.TargetProperty="Fill">
                        <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SliderThumbHoverBackgroundBrush}"/>
                      </ObjectAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ThumbBackground" Storyboard.TargetProperty="Stroke">
                        <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SliderThumbHoverBorderBrush}"/>
                      </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualState>
                  <VisualState x:Name="NoHover"/>
                </VisualStateGroup>
                <VisualStateGroup x:Name="FocusStates">
                  <VisualState x:Name="Unfocused"/>
                  <VisualState x:Name="Focused">
                    <Storyboard>
                      <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="ThumbFocused"/>
                    </Storyboard>
                  </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="ActiveStates">
                  <VisualState x:Name="Inactive"/>
                  <VisualState x:Name="Active"/>
                </VisualStateGroup>
              </VisualStateManager.VisualStateGroups>
              <Grid x:Name="HorizontalThumb">
                <Grid x:Name="HorizontalThumbContent" Height="14" Width="9">
                  <Grid>
                    <Path x:Name="ThumbBackground" Data="M0.5,0.5 L8.5,0.5 L8.5,9.9374847 L4.5208335,13.31249 L0.5,9.9374847 z" Fill="{TemplateBinding Background}" Stretch="Fill" Stroke="{TemplateBinding BorderBrush}" UseLayoutRounding="False" Height="14" Width="9"/>
                    <Path x:Name="ThumbInnerStroke" Data="M0.5,0.5 L8.5,0.5 L8.5,9.9374847 L4.5208335,12.972734 L0.5,9.9374847 z" Stretch="Fill" Stroke="{StaticResource SliderThumbHoverInnerBorderBrush}" UseLayoutRounding="False" Height="11.706" Width="7" Opacity="0" Margin="1,1.147"/>
                    <Path x:Name="ThumbFocused" Data="M0.5,0.5 L8.5,0.5 L8.5,9.9374847 L4.5208335,13.31249 L0.5,9.9374847 z" Stretch="Fill" Fill="{StaticResource ButtonPressedBackgroundBrush}" Stroke="{StaticResource ButtonPressedBorderBrush}" UseLayoutRounding="False" Height="14" Width="9" Opacity="0"/>
                  </Grid>
                </Grid>
              </Grid>
              <Grid x:Name="VerticalThumb" Visibility="Collapsed"/>
            </Grid>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>

    <!-- *********************************  NumericSliderStyle  ********************************* -->
    <Style x:Key="NumericSliderStyle" TargetType="ig:XamSliderBase">
      <Setter Property="Orientation" Value="Horizontal"/>
      <Setter Property="IsMouseWheelEnabled" Value="False"/>
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="ig:XamSliderBase">
            <Grid x:Name="RootElement" Background="{TemplateBinding Background}">
              <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="OrientationStates">
                  <VisualState x:Name="Horizontal"/>
                  <VisualState x:Name="Vertical">
                    <Storyboard>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HorizontalSlider" Storyboard.TargetProperty="Visibility">
                        <DiscreteObjectKeyFrame KeyTime="00:00:00">
                          <DiscreteObjectKeyFrame.Value>
                            <Visibility>Collapsed</Visibility>
                          </DiscreteObjectKeyFrame.Value>
                        </DiscreteObjectKeyFrame>
                      </ObjectAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="VerticalSlider" Storyboard.TargetProperty="Visibility">
                        <DiscreteObjectKeyFrame KeyTime="00:00:00">
                          <DiscreteObjectKeyFrame.Value>
                            <Visibility>Visible</Visibility>
                          </DiscreteObjectKeyFrame.Value>
                        </DiscreteObjectKeyFrame>
                      </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualState>
                </VisualStateGroup>
              </VisualStateManager.VisualStateGroups>
              <Grid x:Name="HorizontalSlider">
                <Grid x:Name="HorizontalTickMarks" Grid.Column="1" Background="{StaticResource TransparentBrush}"/>
                <Grid x:Name="HorizontalTrack" Height="20" Grid.Column="1" Background="{StaticResource TransparentBrush}">
                  <Border BorderBrush="{StaticResource TransparentBrush}" BorderThickness="1" Background="{StaticResource SliderHTrackBackgroundBrush}" Height="5"/>
                  <Canvas x:Name="HorizontalTrackFills"/>
                  <Canvas x:Name="HorizontalThumbs"/>
                </Grid>
              </Grid>
              <Grid x:Name="VerticalSlider" Visibility="Collapsed">
                <Grid x:Name="VerticalSlidersGrid" Grid.Row="1" Margin="0,5,0,5">
                  <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                  </Grid.ColumnDefinitions>
                </Grid>
                <Grid x:Name="VerticalTickMarks" Grid.Row="1" Background="{StaticResource TransparentBrush}"/>
                <Grid x:Name="VerticalTrack" Width="20" Grid.Row="1" Background="{StaticResource TransparentBrush}">
                  <Border Width="3" Background="{StaticResource TransparentBrush}" BorderBrush="{StaticResource TransparentBrush}" BorderThickness="1,1,1,1"/>
                  <Canvas x:Name="VerticalTrackFills"/>
                  <Canvas x:Name="VerticalThumbs"/>
                </Grid>
              </Grid>
            </Grid>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>

    <!-- *********************************  ByteSliderStyle  ********************************* -->
    <Style x:Key="ByteSliderStyle" TargetType="igPrimBase:ByteSlider">
      <Setter Property="Orientation" Value="Horizontal"/>
      <Setter Property="IsMouseWheelEnabled" Value="False"/>
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="igPrimBase:ByteSlider">
            <Grid x:Name="RootElement" Background="{TemplateBinding Background}">
              <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="OrientationStates">
                  <VisualState x:Name="Horizontal"/>
                  <VisualState x:Name="Vertical">
                    <Storyboard>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="HorizontalSlider">
                        <DiscreteObjectKeyFrame KeyTime="00:00:00">
                          <DiscreteObjectKeyFrame.Value>
                            <Visibility>Collapsed</Visibility>
                          </DiscreteObjectKeyFrame.Value>
                        </DiscreteObjectKeyFrame>
                      </ObjectAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="VerticalSlider">
                        <DiscreteObjectKeyFrame KeyTime="00:00:00">
                          <DiscreteObjectKeyFrame.Value>
                            <Visibility>Visible</Visibility>
                          </DiscreteObjectKeyFrame.Value>
                        </DiscreteObjectKeyFrame>
                      </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualState>
                </VisualStateGroup>
              </VisualStateManager.VisualStateGroups>
              <Grid x:Name="HorizontalSlider">
                <Grid x:Name="HorizontalTickMarks" Background="{StaticResource TransparentBrush}" Grid.Column="1"/>
                <Grid x:Name="HorizontalTrack" Background="{StaticResource TransparentBrush}" Grid.Column="1" Height="14">
                  <Border BorderBrush="{StaticResource TransparentBrush}" BorderThickness="1" Background="{StaticResource SliderHTrackBackgroundBrush}" Height="5"/>
                  <Canvas x:Name="HorizontalTrackFills"/>
                  <Canvas x:Name="HorizontalThumbs"/>
                </Grid>
              </Grid>
              <Grid x:Name="VerticalSlider" Visibility="Collapsed">
                <Grid x:Name="VerticalSlidersGrid" Margin="0,5" Grid.Row="1">
                  <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                  </Grid.ColumnDefinitions>
                </Grid>
                <Grid x:Name="VerticalTickMarks" Background="{StaticResource TransparentBrush}" Grid.Row="1"/>
                <Grid x:Name="VerticalTrack" Background="{StaticResource TransparentBrush}" Grid.Row="1" Width="20">
                  <Border BorderBrush="{StaticResource TransparentBrush}" BorderThickness="1" Background="{StaticResource SliderVTrackBackgroundBrush}" Width="5"/>
                  <Canvas x:Name="VerticalTrackFills"/>
                  <Canvas x:Name="VerticalThumbs"/>
                </Grid>
              </Grid>
            </Grid>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>

    <!-- *********************************  XamColorPickerToggleBtn  ********************************* -->
    <Style x:Key="XamColorPickerToggleBtn" TargetType="ToggleButton">
      <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}"/>
      <Setter Property="Padding" Value="1"/>
      <Setter Property="BorderThickness" Value="1"/>
      <Setter Property="BorderBrush" Value="{StaticResource ToggleButtonBorderBrush}"/>
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="ToggleButton">
            <Grid>
              <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                  <VisualState x:Name="Normal"/>
                  <VisualState x:Name="MouseOver">
                    <Storyboard>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BaseShape" Storyboard.TargetProperty="Background">
                        <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ToggleButtonHoverBackgroundBrush}"/>
                      </ObjectAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BaseShape" Storyboard.TargetProperty="BorderBrush">
                        <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ToggleButtonHoverBorderBrush}"/>
                      </ObjectAnimationUsingKeyFrames>
                      <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ButtonHighlight" Storyboard.TargetProperty="Opacity">
                        <SplineDoubleKeyFrame KeyTime="0" Value="1"/>
                      </DoubleAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualState>
                  <VisualState x:Name="Pressed">
                    <Storyboard>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BaseShape" Storyboard.TargetProperty="Background">
                        <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ToggleButtonPressedBackgroundBrush}"/>
                      </ObjectAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BaseShape" Storyboard.TargetProperty="BorderBrush">
                        <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ToggleButtonPressedBorderBrush}"/>
                      </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualState>
                  <VisualState x:Name="Disabled"/>
                </VisualStateGroup>
                <VisualStateGroup x:Name="CheckStates">
                  <VisualState x:Name="Checked">
                    <Storyboard>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="ButtonChecked">
                        <DiscreteObjectKeyFrame KeyTime="0">
                          <DiscreteObjectKeyFrame.Value>
                            <Visibility>Visible</Visibility>
                          </DiscreteObjectKeyFrame.Value>
                        </DiscreteObjectKeyFrame>
                      </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualState>
                  <VisualState x:Name="Unchecked"/>
                </VisualStateGroup>
                <VisualStateGroup x:Name="FocusStates">
                  <VisualState x:Name="Focused"/>
                  <VisualState x:Name="Unfocused"/>
                </VisualStateGroup>
              </VisualStateManager.VisualStateGroups>
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="17"/>
              </Grid.ColumnDefinitions>
              <Border BorderBrush="{StaticResource ToggleButtonBorderBrush}" BorderThickness="1" Grid.ColumnSpan="2" CornerRadius="0,3,3,0"/>
              <igPrimBase:TransparencyBackgroundControl Margin="1,1,0,1"/>
              <Rectangle Fill="{TemplateBinding Background}" Margin="1,1,-1,1"/>
              <Border x:Name="BaseShape" CornerRadius="2" Background="{StaticResource ToggleButtonBackgroundBrush}" BorderBrush="{StaticResource ToggleButtonBorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Grid.Column="1" />
              <Rectangle x:Name="ButtonHighlight" Margin="1" RadiusX="2" RadiusY="2" Stroke="{StaticResource ButtonHoverHighlightBorderBrush}" StrokeThickness="1" Grid.Column="1" Opacity="0"/>
              <Border x:Name="ButtonChecked" Background="{StaticResource ToggleButtonPressedBackgroundBrush}" BorderBrush="{StaticResource ToggleButtonHoverBorderBrush}" BorderThickness="1" Grid.Column="1" CornerRadius="2" Visibility="Collapsed">
                <Rectangle Stroke="{StaticResource ToggleButtonHoverHighlightBorderBrush}" RadiusX="1" RadiusY="1"/>
              </Border>
              <ContentPresenter x:Name="contentPresenter" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" Grid.Column="1"/>
            </Grid>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>

    <!-- *********************************  XamColorPicker Style  ********************************* -->
    <Style x:Key="XamColorPicker" TargetType="igCP:XamColorPicker">
      <Setter Property="Padding" Value="4,2"/>
      <Setter Property="MinHeight" Value="22"/>
      <Setter Property="BorderThickness" Value="1"/>
      <Setter Property="Background" Value="{StaticResource ColorPickerBackgroundBrush}"/>
      <Setter Property="BorderBrush" Value="{StaticResource ColorPickerBorderBrush}"/>
      <Setter Property="Foreground" Value="{StaticResource ColorPickerForegroundBrush}"/>
      <Setter Property="DerivedPaletteColorItemBoxStyle">
        <Setter.Value>
          <Style TargetType="igPrimBase:ColorItemBox">
            <Setter Property="Foreground" Value="{StaticResource TransparentBrush}"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Width" Value="13"/>
            <Setter Property="Height" Value="13"/>
            <Setter Property="Margin" Value="2,0"/>
            <Setter Property="Template">
              <Setter.Value>
                <ControlTemplate TargetType="igPrimBase:ColorItemBox">
                  <Border BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}">
                    <VisualStateManager.VisualStateGroups>
                      <VisualStateGroup x:Name="SelectedStates">
                        <VisualState x:Name="Normal"/>
                        <VisualState x:Name="WasSelected">
                          <Storyboard>
                            <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00" Storyboard.TargetName="SelectedBorder1" Storyboard.TargetProperty="BorderBrush">
                              <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{StaticResource ColorItemBoxSelectedOuterBorderBrush}"/>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00" Storyboard.TargetName="SelectedBorder2" Storyboard.TargetProperty="BorderBrush">
                              <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{StaticResource ColorItemBoxSelectedInnerBorderBrush}"/>
                            </ObjectAnimationUsingKeyFrames>
                          </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Hover">
                          <Storyboard>
                            <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00" Storyboard.TargetName="SelectedBorder1" Storyboard.TargetProperty="BorderBrush">
                              <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{StaticResource ColorItemBoxHoverOuterBorderBrush}"/>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00" Storyboard.TargetName="SelectedBorder2" Storyboard.TargetProperty="BorderBrush">
                              <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{StaticResource ColorItemBoxHoverInnerBorderBrush}"/>
                            </ObjectAnimationUsingKeyFrames>
                          </Storyboard>
                        </VisualState>
                      </VisualStateGroup>
                    </VisualStateManager.VisualStateGroups>
                    <Grid>
                      <Rectangle Height="{TemplateBinding Height}" Width="{TemplateBinding Width}" Fill="{TemplateBinding ColorItemBrush}" Margin="0"/>
                      <Border BorderThickness="1" Background="{StaticResource TransparentBrush}" BorderBrush="{StaticResource TransparentBrush}" x:Name="SelectedBorder1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                        <Border Background="{StaticResource TransparentBrush}" BorderThickness="1" BorderBrush="{StaticResource TransparentBrush}" x:Name="SelectedBorder2" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"/>
                      </Border>
                    </Grid>
                  </Border>
                </ControlTemplate>
              </Setter.Value>
            </Setter>
          </Style>
        </Setter.Value>
      </Setter>
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="igCP:XamColorPicker">
            <Grid x:Name="Root">
              <Grid.Resources>
                <igPrimBase:ColorStripManager x:Key="StripManager"/>
                <igPrimBase:NullableColorConverter x:Key="ColorConverter"/>
              </Grid.Resources>
              <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="DropDownStates">
                  <VisualState x:Name="Closed"/>
                  <VisualState x:Name="Open">
                    <Storyboard>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Popup" Storyboard.TargetProperty="IsOpen">
                        <DiscreteObjectKeyFrame KeyTime="00:00:00">
                          <DiscreteObjectKeyFrame.Value>
                            <System:Boolean>True</System:Boolean>
                          </DiscreteObjectKeyFrame.Value>
                        </DiscreteObjectKeyFrame>
                      </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="DisplayColorPalettesDropdownButton">
                  <VisualState x:Name="Hide"/>
                  <VisualState x:Name="Show">
                    <Storyboard>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ColorPalettesButton" Storyboard.TargetProperty="Visibility">
                        <DiscreteObjectKeyFrame KeyTime="00:00:00">
                          <DiscreteObjectKeyFrame.Value>
                            <Visibility>Visible</Visibility>
                          </DiscreteObjectKeyFrame.Value>
                        </DiscreteObjectKeyFrame>
                      </ObjectAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ColorPalettes" Storyboard.TargetProperty="Visibility">
                        <DiscreteObjectKeyFrame KeyTime="00:00:00">
                          <DiscreteObjectKeyFrame.Value>
                            <Visibility>Visible</Visibility>
                          </DiscreteObjectKeyFrame.Value>
                        </DiscreteObjectKeyFrame>
                      </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="ShowAdvancedEditorButton">
                  <VisualState x:Name="ShowEditorButton"/>
                  <VisualState x:Name="HideEditorButton">
                    <Storyboard>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="AdvancedEditorButton" Storyboard.TargetProperty="Visibility">
                        <DiscreteObjectKeyFrame KeyTime="00:00:00">
                          <DiscreteObjectKeyFrame.Value>
                            <Visibility>Collapsed</Visibility>
                          </DiscreteObjectKeyFrame.Value>
                        </DiscreteObjectKeyFrame>
                      </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="ShowRecentColorPalette">
                  <VisualState x:Name="ShowRCPalette"/>
                  <VisualState x:Name="HideRCPalette">
                    <Storyboard>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="RecentColorCaption" Storyboard.TargetProperty="Visibility">
                        <DiscreteObjectKeyFrame KeyTime="00:00:00">
                          <DiscreteObjectKeyFrame.Value>
                            <Visibility>Collapsed</Visibility>
                          </DiscreteObjectKeyFrame.Value>
                        </DiscreteObjectKeyFrame>
                      </ObjectAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="RecentColorStrip" Storyboard.TargetProperty="Visibility">
                        <DiscreteObjectKeyFrame KeyTime="00:00:00">
                          <DiscreteObjectKeyFrame.Value>
                            <Visibility>Collapsed</Visibility>
                          </DiscreteObjectKeyFrame.Value>
                        </DiscreteObjectKeyFrame>
                      </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="ShowDPalettes">
                  <VisualState x:Name="ShowDerivedPalettes"/>
                  <VisualState x:Name="HideDerivedPalettes">
                    <Storyboard>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="DerivedColorCaption" Storyboard.TargetProperty="Visibility">
                        <DiscreteObjectKeyFrame KeyTime="00:00:00">
                          <DiscreteObjectKeyFrame.Value>
                            <Visibility>Collapsed</Visibility>
                          </DiscreteObjectKeyFrame.Value>
                        </DiscreteObjectKeyFrame>
                      </ObjectAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="DerivedPalettes" Storyboard.TargetProperty="Visibility">
                        <DiscreteObjectKeyFrame KeyTime="00:00:00">
                          <DiscreteObjectKeyFrame.Value>
                            <Visibility>Collapsed</Visibility>
                          </DiscreteObjectKeyFrame.Value>
                        </DiscreteObjectKeyFrame>
                      </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualState>
                </VisualStateGroup>
              </VisualStateManager.VisualStateGroups>
              <Border x:Name="ContentPresenterBorder">
                <Grid>
                  <igPrimBase:ColorPickerDialog x:Name="ColorPickerDialog" ColorPicker="{Binding RelativeSource={RelativeSource TemplatedParent}}"/>
                  <ToggleButton Grid.Column="1" x:Name="ToggleButton" Style="{StaticResource XamColorPickerToggleBtn}" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}">
                    <ToggleButton.Background>
                      <SolidColorBrush Color="{Binding SelectedColor, Converter={StaticResource ColorConverter}, RelativeSource={RelativeSource TemplatedParent}}"/>
                    </ToggleButton.Background>
                    <Grid x:Name="arrowGlyph" IsHitTestVisible="False" Width="9" Height="5">
                      <Path Width="9" Height="5" Data="M 0,0 C0,0 0,1 0,1 0,1 1,1 1,1 1,1 1,2 1,2 1,2 2,2 2,2 2,2 2,3 2,3 2,3 3,3 3,3 3,3 3,4 3,4 3,4 4,4 4,4 4,4 4,5 4,5 4,5 5,5 5,5 5,5 5,4 5,4 5,4 6,4 6,4 6,4 6,3 6,3 6,3 7,3 7,3 7,3 7,2 7,2 7,2 8,2 8,2 8,2 8,1 8,1 8,1 9,1 9,1 9,1 9,0 9,0 9,0 0,0 0,0 z" Fill="{StaticResource ColorPickerGlyphBackgroundBrush}" Opacity="1" Stretch="Fill"/>
                      <Path Width="5" Height="3" Data="M 2,1 C2,1 2,2 2,2 2,2 3,2 3,2 3,2 3,3 3,3 3,3 4,3 4,3 4,3 4,4 4,4 4,4 5,4 5,4 5,4 5,3 5,3 5,3 6,3 6,3 6,3 6,2 6,2 6,2 7,2 7,2 7,2 7,1 7,1 7,1 2,1 2,1 z" Fill="{StaticResource ColorPickerGlyphBorderBrush}" Opacity="1" Stretch="Fill"/>
                    </Grid>
                  </ToggleButton>
                </Grid>
              </Border>
              <Popup x:Name="Popup" VerticalAlignment="Bottom" ig:Commanding.CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}" IsOpen="False">
                <Border x:Name="RootPopupElement" Background="{StaticResource ColorPickerBackgroundBrush}" BorderBrush="{StaticResource ColorPickerBorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Padding="1" CornerRadius="1">
                  <Border.Effect>
                    <DropShadowEffect Direction="270" ShadowDepth="0" BlurRadius="10" Opacity="0.5"/>
                  </Border.Effect>
                  <StackPanel Orientation="Vertical" Margin="8">
                    <TextBlock Text="{TemplateBinding CurrentColorCaption}"/>
                    <Grid Height="30">
                      <igPrim:TransparencyBackgroundControl/>
                      <Rectangle x:Name="SelectedColorRectangle" Stroke="{StaticResource ColorPickerSelectedColorRectangleBorderBrush}">
                        <Rectangle.Fill>
                          <SolidColorBrush Color="{Binding SelectedColorPreview, Converter={StaticResource ColorConverter}, RelativeSource={RelativeSource TemplatedParent}}"/>
                        </Rectangle.Fill>
                      </Rectangle>
                    </Grid>
                    <TextBlock Margin="0,10,0,0" Text="{TemplateBinding CurrentPaletteCaption}" Foreground="{TemplateBinding Foreground}"/>
                    <Grid>
                      <ComboBox x:Name="ColorPalettes" Height="25" Grid.Column="1" ItemsSource="{Binding ColorPalettes, RelativeSource={RelativeSource TemplatedParent}}" Opacity="0" SelectedItem="{Binding CurrentPalette, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Visibility="Collapsed">
                        <ComboBox.ItemTemplate>
                          <DataTemplate>
                            <igPrimBase:ColorStrip ColorPalette="{Binding}" IsHitTestVisible="False"/>
                          </DataTemplate>
                        </ComboBox.ItemTemplate>
                      </ComboBox>
                      <Grid>
                        <Grid.ColumnDefinitions>
                          <ColumnDefinition x:Name="colorStrip" Width="*"/>
                          <ColumnDefinition x:Name="ColorPalettesBtn" Width="20"/>
                        </Grid.ColumnDefinitions>
                        <Button x:Name="ColorPalettesButton" Grid.Column="1" Margin="0,2" Cursor="Hand" HorizontalContentAlignment="Center" Padding="1" Style="{StaticResource ButtonStyle}" VerticalContentAlignment="Center" Visibility="Collapsed">
                          <Grid Margin="5">
                            <Path Width="5" Height="3" Margin="0,1,0,0" Data="M 0,0 C0,0 0,1 0,1 0,1 1,1 1,1 1,1 1,2 1,2 1,2 2,2 2,2 2,2 2,3 2,3 2,3 3,3 3,3 3,3 3,2 3,2 3,2 4,2 4,2 4,2 4,1 4,1 4,1 5,1 5,1 5,1 5,0 5,0 5,0 0,0 0,0 z" Fill="{StaticResource ColorPickerGlyphBackgroundBrush}" Stretch="Fill"/>
                            <Path Width="5" Height="3" Data="M 0,0 C0,0 0,1 0,1 0,1 1,1 1,1 1,1 1,2 1,2 1,2 2,2 2,2 2,2 2,3 2,3 2,3 3,3 3,3 3,3 3,2 3,2 3,2 4,2 4,2 4,2 4,1 4,1 4,1 5,1 5,1 5,1 5,0 5,0 5,0 0,0 0,0 z" Fill="{StaticResource ColorPickerGlyphBorderBrush}" Stretch="Fill"/>
                          </Grid>
                        </Button>
                        <igPrimBase:ColorStrip x:Name="CurrentColorStrip" ColorPalette="{Binding CurrentPalette, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" igPrimBase:ColorStripManager.Manager="{StaticResource StripManager}"/>
                      </Grid>
                    </Grid>
                    <TextBlock x:Name="DerivedColorCaption" Margin="0,10,0,0" Text="{TemplateBinding DerivedColorPalettesCaption}" Foreground="{TemplateBinding Foreground}"/>
                    <StackPanel x:Name="DerivedPalettes" Orientation="Vertical"/>
                    <TextBlock x:Name="RecentColorCaption" Margin="0,10,0,0" Text="{TemplateBinding RecentColorPaletteCaption}"/>
                    <igPrimBase:ColorStrip x:Name="RecentColorStrip" igPrimBase:ColorStripManager.Manager="{StaticResource StripManager}"/>
                    <Border Height="2" Margin="0,10" Background="{StaticResource DividerBackgroundBrush}"/>
                    <Button x:Name="AdvancedEditorButton" Content="{TemplateBinding AdvancedButtonCaption}" Style="{StaticResource ButtonStyle}">
                      <ig:Commanding.Commands>
                        <ig:CommandSourceCollection>
                          <igCP:XamPickerCommandSource CommandType="Toggle" EventName="Click"/>
                          <igCP:XamPickerCommandSource CommandType="OpenAdvanceEditor" EventName="Click"/>
                        </ig:CommandSourceCollection>
                      </ig:Commanding.Commands>
                    </Button>
                  </StackPanel>
                </Border>
              </Popup>
            </Grid>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>
    <Style TargetType="igCP:XamColorPicker" BasedOn="{StaticResource XamColorPicker}"/>

    <!-- *********************************  ColorStrip Style  ********************************* -->
    <Style x:Key="ColorStrip" TargetType="igPrimBase:ColorStrip">
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="igPrimBase:ColorStrip">
            <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
              <StackPanel Background="{TemplateBinding Background}" Orientation="Horizontal" x:Name="ColorPickerPanel"/>
            </Border>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>
    <Style TargetType="igPrimBase:ColorStrip" BasedOn="{StaticResource ColorStrip}"/>

    <!-- *********************************  ColorItemBox Style  ********************************* -->
    <Style x:Key="ColorItemBox" TargetType="igPrimBase:ColorItemBox">
      <Setter Property="Foreground" Value="{StaticResource TransparentBrush}"/>
      <Setter Property="BorderBrush" Value="{StaticResource ColorItemBoxBorderBrush}"/>
      <Setter Property="BorderThickness" Value="1"/>
      <Setter Property="Width" Value="13"/>
      <Setter Property="Height" Value="13"/>
      <Setter Property="Margin" Value="2,0"/>
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="igPrimBase:ColorItemBox">
            <Border>
              <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="SelectedStates">
                  <VisualState x:Name="Normal"/>
                  <VisualState x:Name="WasSelected">
                    <Storyboard>
                      <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00" Storyboard.TargetName="SelectedBorder1" Storyboard.TargetProperty="BorderBrush">
                        <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{StaticResource ColorItemBoxSelectedOuterBorderBrush}"/>
                      </ObjectAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00" Storyboard.TargetName="SelectedBorder2" Storyboard.TargetProperty="BorderBrush">
                        <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{StaticResource ColorItemBoxSelectedInnerBorderBrush}"/>
                      </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualState>
                  <VisualState x:Name="Hover">
                    <Storyboard>
                      <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00" Storyboard.TargetName="SelectedBorder1" Storyboard.TargetProperty="BorderBrush">
                        <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{StaticResource ColorItemBoxHoverOuterBorderBrush}"/>
                      </ObjectAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00" Storyboard.TargetName="SelectedBorder2" Storyboard.TargetProperty="BorderBrush">
                        <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{StaticResource ColorItemBoxHoverInnerBorderBrush}"/>
                      </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualState>
                </VisualStateGroup>
              </VisualStateManager.VisualStateGroups>
              <Grid>
                <Rectangle Height="{TemplateBinding Height}" Width="{TemplateBinding Width}" Fill="{TemplateBinding ColorItemBrush}" Margin="0"/>
                <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}"/>
                <Border BorderThickness="{TemplateBinding BorderThickness}" Background="{StaticResource TransparentBrush}" BorderBrush="{StaticResource TransparentBrush}" x:Name="SelectedBorder1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                  <Border Background="{StaticResource TransparentBrush}" BorderThickness="1" BorderBrush="{StaticResource TransparentBrush}" x:Name="SelectedBorder2" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"/>
                </Border>
              </Grid>
            </Border>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>
    <Style TargetType="igPrimBase:ColorItemBox" BasedOn="{StaticResource ColorItemBox}"/>

    <!-- *********************************  AdvancedColorShadePicker  ********************************* -->
    <Style x:Key="AdvancedColorShadePicker" TargetType="igPrimBase:AdvancedColorShadePicker">
      <Setter Property="Background" Value="{StaticResource ColorPickerBackgroundBrush}"/>
      <Setter Property="BorderBrush" Value="{StaticResource ColorPickerBorderBrush}"/>
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="igPrim:AdvancedColorShadePicker">
            <Grid>
              <Grid.Resources>
                <igPrim:SpecializedTextBoxValueConverter x:Key="TextConverter"></igPrim:SpecializedTextBoxValueConverter>
              </Grid.Resources>
              <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="ColorSliders">
                  <VisualState x:Name="RGB">
                    <Storyboard>
                      <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00" Storyboard.TargetName="RGBSliders" Storyboard.TargetProperty="Visibility">
                        <DiscreteObjectKeyFrame KeyTime="00:00:00">
                          <DiscreteObjectKeyFrame.Value>
                            <Visibility>Visible</Visibility>
                          </DiscreteObjectKeyFrame.Value>
                        </DiscreteObjectKeyFrame>
                      </ObjectAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00" Storyboard.TargetName="HSLSliders" Storyboard.TargetProperty="Visibility">
                        <DiscreteObjectKeyFrame KeyTime="00:00:00">
                          <DiscreteObjectKeyFrame.Value>
                            <Visibility>Collapsed</Visibility>
                          </DiscreteObjectKeyFrame.Value>
                        </DiscreteObjectKeyFrame>
                      </ObjectAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00" Storyboard.TargetName="CMYKSliders" Storyboard.TargetProperty="Visibility">
                        <DiscreteObjectKeyFrame KeyTime="00:00:00">
                          <DiscreteObjectKeyFrame.Value>
                            <Visibility>Collapsed</Visibility>
                          </DiscreteObjectKeyFrame.Value>
                        </DiscreteObjectKeyFrame>
                      </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualState>
                  <VisualState x:Name="HSL">
                    <Storyboard>
                      <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00" Storyboard.TargetName="RGBSliders" Storyboard.TargetProperty="Visibility">
                        <DiscreteObjectKeyFrame KeyTime="00:00:00">
                          <DiscreteObjectKeyFrame.Value>
                            <Visibility>Collapsed</Visibility>
                          </DiscreteObjectKeyFrame.Value>
                        </DiscreteObjectKeyFrame>
                      </ObjectAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00" Storyboard.TargetName="HSLSliders" Storyboard.TargetProperty="Visibility">
                        <DiscreteObjectKeyFrame KeyTime="00:00:00">
                          <DiscreteObjectKeyFrame.Value>
                            <Visibility>Visible</Visibility>
                          </DiscreteObjectKeyFrame.Value>
                        </DiscreteObjectKeyFrame>
                      </ObjectAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00" Storyboard.TargetName="CMYKSliders" Storyboard.TargetProperty="Visibility">
                        <DiscreteObjectKeyFrame KeyTime="00:00:00">
                          <DiscreteObjectKeyFrame.Value>
                            <Visibility>Collapsed</Visibility>
                          </DiscreteObjectKeyFrame.Value>
                        </DiscreteObjectKeyFrame>
                      </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualState>
                  <VisualState x:Name="CMYK">
                    <Storyboard>
                      <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00" Storyboard.TargetName="RGBSliders" Storyboard.TargetProperty="Visibility">
                        <DiscreteObjectKeyFrame KeyTime="00:00:00">
                          <DiscreteObjectKeyFrame.Value>
                            <Visibility>Collapsed</Visibility>
                          </DiscreteObjectKeyFrame.Value>
                        </DiscreteObjectKeyFrame>
                      </ObjectAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00" Storyboard.TargetName="HSLSliders" Storyboard.TargetProperty="Visibility">
                        <DiscreteObjectKeyFrame KeyTime="00:00:00">
                          <DiscreteObjectKeyFrame.Value>
                            <Visibility>Collapsed</Visibility>
                          </DiscreteObjectKeyFrame.Value>
                        </DiscreteObjectKeyFrame>
                      </ObjectAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00" Storyboard.TargetName="CMYKSliders" Storyboard.TargetProperty="Visibility">
                        <DiscreteObjectKeyFrame KeyTime="00:00:00">
                          <DiscreteObjectKeyFrame.Value>
                            <Visibility>Visible</Visibility>
                          </DiscreteObjectKeyFrame.Value>
                        </DiscreteObjectKeyFrame>
                      </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualState>
                </VisualStateGroup>
              </VisualStateManager.VisualStateGroups>
              <Grid.RowDefinitions>
                <RowDefinition x:Name="colorModeRow"/>
                <RowDefinition x:Name="samplingRow"/>
                <RowDefinition x:Name="colorSliderRow"/>
                <RowDefinition x:Name="alphaRow"/>
                <RowDefinition x:Name="buttonsRow"/>
              </Grid.RowDefinitions>
              <Rectangle Fill="{StaticResource ColorModeTabsBackgroundBrush}" Stroke="{TemplateBinding BorderBrush}" RadiusY="1" RadiusX="1" Margin="0,-1,0,-3"/>
              <Rectangle Fill="{TemplateBinding Background}" Grid.Row="1" Grid.RowSpan="4" Stroke="{TemplateBinding BorderBrush}" RadiusY="1" RadiusX="1" Margin="0,-1,0,0"/>
              <Grid x:Name="colorModes" Margin="10,10,10,0">
                <Grid.ColumnDefinitions>
                  <ColumnDefinition/>
                  <ColumnDefinition/>
                  <ColumnDefinition/>
                </Grid.ColumnDefinitions>
                <Rectangle Fill="{StaticResource ColorPickerBorderBrush}" Height="1" VerticalAlignment="Bottom" Grid.ColumnSpan="3" Margin="-10,0"/>
                <RadioButton Content="RGB" GroupName="modes" Style="{StaticResource ColorPickerRadioButtonStyle}" IsChecked="True">

                  <igCP:Commanding.Command>
                    <igCP:ColorStripsCommandSource EventName="Click" CommandType="ShowRGBSliders"/>
                  </igCP:Commanding.Command>
                </RadioButton>
                <RadioButton Content="HSL" GroupName="modes" Style="{StaticResource ColorPickerRadioButtonStyle}" Grid.Column="1">

                  <igCP:Commanding.Command>
                    <igCP:ColorStripsCommandSource EventName="Click" CommandType="ShowHSLSliders"/>
                  </igCP:Commanding.Command>
                </RadioButton>
                <RadioButton Content="CMYK" GroupName="modes" Style="{StaticResource ColorPickerRadioButtonStyle}" Grid.Column="2">

                  <igCP:Commanding.Command>
                    <igCP:ColorStripsCommandSource EventName="Click" CommandType="ShowCMYKSliders"/>
                  </igCP:Commanding.Command>
                </RadioButton>
              </Grid>
              <Grid x:Name="samplingArea" Grid.Row="1" Margin="10,10,10,5">
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="185"/>
                  <ColumnDefinition x:Name="spacerColumn" Width="5"/>
                  <ColumnDefinition Width="20"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                  <RowDefinition x:Name="shadingCanvasRow" Height="*"/>
                  <RowDefinition x:Name="currentColorRow" Height="20"/>
                </Grid.RowDefinitions>
                <!-- SHADING CANVAS -->
                <Border BorderBrush="{StaticResource ColorPickerBorderBrush}" BorderThickness="1"/>
                <Canvas x:Name="ShadingCanvas" Width="183" Height="99" Margin="0,1,0,0">
                  <Rectangle Height="{Binding Height, ElementName=ShadingCanvas}" Width="{Binding Width, ElementName=ShadingCanvas}" Fill="{StaticResource AdvancedColorShadePickerColorSamplingBackgroundBrush}" x:Name="ColorSamplingRectangle"/>
                  <Rectangle x:Name="rectWhiteGradient" Width="{Binding Width, ElementName=ShadingCanvas}" Height="{Binding Height, ElementName=ShadingCanvas}" Fill="{StaticResource AdvancedColorShadePickerWhiteBackgroundBrush}"/>
                  <Rectangle x:Name="rectBlackGradient" Width="{Binding Width, ElementName=ShadingCanvas}" Height="{Binding Height, ElementName=ShadingCanvas}" Fill="{StaticResource AdvancedColorShadePickerBlackBackgroundBrush}"/>
                  <Canvas x:Name="LightnessSelector" Width="10" Height="10" Canvas.Left="100" Canvas.Top="96" IsHitTestVisible="False">
                    <Ellipse Width="10" Height="10" StrokeThickness="3" Stroke="{StaticResource LightnessSelectorInnerBorderBrush}" IsHitTestVisible="False"/>
                    <Ellipse Width="10" Height="10" StrokeThickness="1" Stroke="{StaticResource LightnessSelectorBorderBrush}" IsHitTestVisible="False"/>
                  </Canvas>
                </Canvas>
                <!-- PREVIOUS AND CURRENT COLOR -->
                <Border x:Name="currentColor" BorderBrush="{StaticResource ColorPickerBorderBrush}" BorderThickness="1,0,1,1" Grid.Row="1">
                  <Grid>
                    <Grid.Resources>
                      <igPrimBase:NullableColorConverter x:Key="ColorConverter"/>
                    </Grid.Resources>
                    <Grid.ColumnDefinitions>
                      <ColumnDefinition Width="*"/>
                      <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <igPrimBase:TransparencyBackgroundControl Grid.ColumnSpan="2"/>
                    <Rectangle>
                      <Rectangle.Fill>
                        <SolidColorBrush Color="{Binding SelectedColor, Converter={StaticResource ColorConverter}, RelativeSource={RelativeSource TemplatedParent}}"/>
                      </Rectangle.Fill>
                    </Rectangle>
                    <Rectangle Grid.Column="1">
                      <Rectangle.Fill>
                        <SolidColorBrush Color="{Binding CurrentColor, Converter={StaticResource ColorConverter}, RelativeSource={RelativeSource TemplatedParent}}"/>
                      </Rectangle.Fill>
                    </Rectangle>
                  </Grid>
                </Border>
                <!-- HUE CANVAS -->
                <Canvas x:Name="HueCanvas" Grid.Column="2" Grid.RowSpan="2">
                  <Rectangle x:Name="HueRectangle" Stroke="{StaticResource ColorPickerBorderBrush}" Width="20" Height="120" HorizontalAlignment="Right" Fill="{StaticResource AdvancedColorShadePickerHueBackgroundBrush}"/>
                  <Canvas x:Name="HueSelector" Height="8" Canvas.Left="0" IsHitTestVisible="False">
                    <Path Width="5" Height="8" Stretch="Fill" StrokeLineJoin="Round" Stroke="{StaticResource HueSelectorBackgroundBrush}" Fill="{StaticResource HueSelectorBackgroundBrush}" Data="F1 M 276.761,316L 262.619,307.835L 262.619,324.165L 276.761,316 Z "/>
                    <Path Width="5" Height="8" Canvas.Top="8" Canvas.Left="20" Stretch="Fill" StrokeLineJoin="Round" Stroke="{StaticResource HueSelectorBackgroundBrush}" Fill="{StaticResource HueSelectorBackgroundBrush}" Data="F1 M 276.761,316L 262.619,307.835L 262.619,324.165L 276.761,316 Z ">
                      <Path.RenderTransform>
                        <RotateTransform Angle="180"/>
                      </Path.RenderTransform>
                    </Path>
                  </Canvas>
                </Canvas>
              </Grid>
              <!-- RGB SLIDERS-->
              <Border x:Name="RGBSliders" Grid.Row="2" Margin="10,5,10,0">
                <Grid>
                  <Grid.RowDefinitions>
                    <RowDefinition Height="18"/>
                    <RowDefinition Height="24"/>
                    <RowDefinition Height="18"/>
                    <RowDefinition Height="24"/>
                    <RowDefinition Height="18"/>
                    <RowDefinition Height="24"/>
                    <RowDefinition Height="42"/>
                  </Grid.RowDefinitions>
                  <TextBlock Text="{Binding Path=RedCaption}" Grid.Row="0" />
                  <Grid Grid.Row="1">
                    <Grid.ColumnDefinitions>
                      <ColumnDefinition Width="*"/>
                      <ColumnDefinition Width="15"/>
                      <ColumnDefinition Width="50"/>
                    </Grid.ColumnDefinitions>
                    <igPrimBase:ByteSlider x:Name="Red" Style="{StaticResource ByteSliderStyle}" ThumbStyle="{StaticResource SliderThumbStyle}" TrackFillBrush="{StaticResource RedSliderTrackFillBackgroundBrush}" TrackFillStyle="{StaticResource TrackFillStyle}" Value="{Binding Red, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                    <TextBox Style="{StaticResource SimpleTextBoxStyle}" x:Name="RedTextBox" Grid.Column="2" Text="{Binding Red, Mode=TwoWay, NotifyOnValidationError=True, RelativeSource={RelativeSource TemplatedParent}, ValidatesOnDataErrors=True, ValidatesOnExceptions=True}" VerticalAlignment="Center"/>
                  </Grid>
                  <TextBlock Text="{Binding Path=GreenCaption}" Grid.Row="2"/>
                  <Grid Grid.Row="3">
                    <Grid.ColumnDefinitions>
                      <ColumnDefinition Width="*"/>
                      <ColumnDefinition Width="15"/>
                      <ColumnDefinition Width="50"/>
                    </Grid.ColumnDefinitions>
                    <igPrimBase:ByteSlider x:Name="Green" Style="{StaticResource ByteSliderStyle}" ThumbStyle="{StaticResource SliderThumbStyle}" TrackFillBrush="{StaticResource GreenSliderTrackFillBackgroundBrush}" TrackFillStyle="{StaticResource TrackFillStyle}" Value="{Binding Green, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                    <TextBox Style="{StaticResource SimpleTextBoxStyle}" x:Name="GreenTextBox" Grid.Column="2" Text="{Binding Green, Mode=TwoWay, NotifyOnValidationError=True, RelativeSource={RelativeSource TemplatedParent}, ValidatesOnDataErrors=True, ValidatesOnExceptions=True}" VerticalAlignment="Center"/>
                  </Grid>
                  <TextBlock Text="{Binding Path=BlueCaption}" Grid.Row="4"/>
                  <Grid Grid.Row="5">
                    <Grid.ColumnDefinitions>
                      <ColumnDefinition Width="*"/>
                      <ColumnDefinition Width="15"/>
                      <ColumnDefinition Width="50"/>
                    </Grid.ColumnDefinitions>
                    <igPrimBase:ByteSlider x:Name="Blue" Style="{StaticResource ByteSliderStyle}" ThumbStyle="{StaticResource SliderThumbStyle}" TrackFillBrush="{StaticResource BlueSliderTrackFillBackgroundBrush}" TrackFillStyle="{StaticResource TrackFillStyle}" Value="{Binding Blue, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                    <TextBox Style="{StaticResource SimpleTextBoxStyle}" x:Name="BlueTextBox" Grid.Column="2" Text="{Binding Blue, Mode=TwoWay, NotifyOnValidationError=True, RelativeSource={RelativeSource TemplatedParent}, ValidatesOnDataErrors=True, ValidatesOnExceptions=True}" VerticalAlignment="Center"/>
                  </Grid>
                </Grid>
              </Border>
              <!-- HSL SLIDERS-->
              <Border x:Name="HSLSliders" Grid.Row="2" Margin="10,5,10,0" Visibility="Collapsed">
                <Grid>
                  <Grid.RowDefinitions>
                    <RowDefinition Height="18"/>
                    <RowDefinition Height="24"/>
                    <RowDefinition Height="18"/>
                    <RowDefinition Height="24"/>
                    <RowDefinition Height="18"/>
                    <RowDefinition Height="24"/>
                    <RowDefinition Height="42"/>
                  </Grid.RowDefinitions>
                  <TextBlock Text="{Binding Path=HueCaption}" Grid.Row="0" />
                  <Grid Grid.Row="1">
                    <Grid.ColumnDefinitions>
                      <ColumnDefinition Width="*"/>
                      <ColumnDefinition Width="15"/>
                      <ColumnDefinition Width="50"/>
                    </Grid.ColumnDefinitions>
                    <igCP:XamNumericSlider x:Name="Hue" MaxValue="360.0" MinValue="0.0" Style="{StaticResource NumericSliderStyle}" ThumbStyle="{StaticResource SliderThumbStyle4HSLCMYK}" Value="{Binding H, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                    <TextBox Style="{StaticResource SimpleTextBoxStyle}" x:Name="HTextBox" Grid.Column="2" Text="{Binding H, Converter={StaticResource TextConverter}, Mode=TwoWay, NotifyOnValidationError=True, RelativeSource={RelativeSource TemplatedParent}, ValidatesOnDataErrors=True, ValidatesOnExceptions=True}" VerticalAlignment="Center"  />
                  </Grid>
                  <TextBlock Text="{Binding Path=SaturationCaption}" Grid.Row="2" />
                  <Grid Grid.Row="3">
                    <Grid.ColumnDefinitions>
                      <ColumnDefinition Width="*"/>
                      <ColumnDefinition Width="15"/>
                      <ColumnDefinition Width="50"/>
                    </Grid.ColumnDefinitions>
                    <igCP:XamNumericSlider x:Name="Saturation" MaxValue="100.0" MinValue="0.0" Style="{StaticResource NumericSliderStyle}" ThumbStyle="{StaticResource SliderThumbStyle4HSLCMYK}" Value="{Binding S, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                    <TextBox Style="{StaticResource SimpleTextBoxStyle}" x:Name="STextBox" Grid.Column="2" Text="{Binding S, Converter={StaticResource TextConverter}, Mode=TwoWay, NotifyOnValidationError=True, RelativeSource={RelativeSource TemplatedParent}, ValidatesOnDataErrors=True, ValidatesOnExceptions=True}" VerticalAlignment="Center"/>
                  </Grid>
                  <TextBlock Text="{Binding Path=LightnessCaption}" Grid.Row="4" />
                  <Grid Grid.Row="5">
                    <Grid.ColumnDefinitions>
                      <ColumnDefinition Width="*"/>
                      <ColumnDefinition Width="15"/>
                      <ColumnDefinition Width="50"/>
                    </Grid.ColumnDefinitions>
                    <igCP:XamNumericSlider x:Name="Lightness" MaxValue="100.0" MinValue="0.0" Style="{StaticResource NumericSliderStyle}" ThumbStyle="{StaticResource SliderThumbStyle}" Value="{Binding L, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                    <TextBox Style="{StaticResource SimpleTextBoxStyle}" x:Name="LTextBox" Grid.Column="2" Text="{Binding L, Converter={StaticResource TextConverter}, Mode=TwoWay, NotifyOnValidationError=True, RelativeSource={RelativeSource TemplatedParent}, ValidatesOnDataErrors=True, ValidatesOnExceptions=True}" VerticalAlignment="Center"/>
                  </Grid>
                </Grid>
              </Border>
              <!-- CMYK SLIDERS-->
              <Border x:Name="CMYKSliders" Grid.Row="2" Margin="10,5,10,0" Visibility="Collapsed">
                <Grid>
                  <Grid.RowDefinitions>
                    <RowDefinition Height="18"/>
                    <RowDefinition Height="24"/>
                    <RowDefinition Height="18"/>
                    <RowDefinition Height="24"/>
                    <RowDefinition Height="18"/>
                    <RowDefinition Height="24"/>
                    <RowDefinition Height="18"/>
                    <RowDefinition Height="24"/>
                  </Grid.RowDefinitions>
                  <TextBlock Text="{Binding Path=CyanCaption}" Grid.Row="0" />
                  <Grid Grid.Row="1">
                    <Grid.ColumnDefinitions>
                      <ColumnDefinition Width="*"/>
                      <ColumnDefinition Width="15"/>
                      <ColumnDefinition Width="50"/>
                    </Grid.ColumnDefinitions>
                    <igCP:XamNumericSlider x:Name="C" MaxValue="100.0" MinValue="0.0" Style="{StaticResource NumericSliderStyle}" ThumbStyle="{StaticResource SliderThumbStyle4HSLCMYK}" TrackFillBrush="{StaticResource CyanSliderTrackFillBackgroundBrush}" TrackFillStyle="{StaticResource TrackFillStyle}" Value="{Binding C, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                    <TextBox Style="{StaticResource SimpleTextBoxStyle}" x:Name="CTextBox" Grid.Column="2" Text="{Binding C, Converter={StaticResource TextConverter}, Mode=TwoWay, NotifyOnValidationError=True, RelativeSource={RelativeSource TemplatedParent}, ValidatesOnDataErrors=True, ValidatesOnExceptions=True}" />
                  </Grid>

                  <TextBlock Text="{Binding Path=MagentaCaption}" Grid.Row="2" />
                  <Grid Grid.Row="3">
                    <Grid.ColumnDefinitions>
                      <ColumnDefinition Width="*"/>
                      <ColumnDefinition Width="15"/>
                      <ColumnDefinition Width="50"/>
                    </Grid.ColumnDefinitions>
                    <igCP:XamNumericSlider x:Name="M" MaxValue="100.0" MinValue="0.0" Style="{StaticResource NumericSliderStyle}" ThumbStyle="{StaticResource SliderThumbStyle4HSLCMYK}" TrackFillBrush="{StaticResource MagentaSliderTrackFillBackgroundBrush}" TrackFillStyle="{StaticResource TrackFillStyle}" Value="{Binding M, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                    <TextBox Style="{StaticResource SimpleTextBoxStyle}" x:Name="MTextBox" Grid.Column="2" Text="{Binding M, Converter={StaticResource TextConverter}, Mode=TwoWay, NotifyOnValidationError=True, RelativeSource={RelativeSource TemplatedParent}, ValidatesOnDataErrors=True, ValidatesOnExceptions=True}" />
                  </Grid>

                  <TextBlock Text="{Binding Path=YellowCaption}" Grid.Row="4" />
                  <Grid Grid.Row="5">
                    <Grid.ColumnDefinitions>
                      <ColumnDefinition Width="*"/>
                      <ColumnDefinition Width="15"/>
                      <ColumnDefinition Width="50"/>
                    </Grid.ColumnDefinitions>
                    <igCP:XamNumericSlider x:Name="Y" MaxValue="100.0" MinValue="0.0" Style="{StaticResource NumericSliderStyle}" ThumbStyle="{StaticResource SliderThumbStyle4HSLCMYK}" TrackFillBrush="{StaticResource YellowSliderTrackFillBackgroundBrush}" TrackFillStyle="{StaticResource TrackFillStyle}" Value="{Binding Y, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                    <TextBox Style="{StaticResource SimpleTextBoxStyle}" x:Name="YTextBox" Grid.Column="2" Text="{Binding Y, Converter={StaticResource TextConverter}, Mode=TwoWay, NotifyOnValidationError=True, RelativeSource={RelativeSource TemplatedParent}, ValidatesOnDataErrors=True, ValidatesOnExceptions=True}" />
                  </Grid>

                  <TextBlock Text="{Binding Path=BlackCaption}" Grid.Row="6" />
                  <Grid Grid.Row="7">
                    <Grid.ColumnDefinitions>
                      <ColumnDefinition Width="*"/>
                      <ColumnDefinition Width="15"/>
                      <ColumnDefinition Width="50"/>
                    </Grid.ColumnDefinitions>
                    <igCP:XamNumericSlider x:Name="K" MaxValue="100.0" MinValue="0.0" Style="{StaticResource NumericSliderStyle}" ThumbStyle="{StaticResource SliderThumbStyle4HSLCMYK}" TrackFillBrush="{StaticResource BlackSliderTrackFillBackgroundBrush}" TrackFillStyle="{StaticResource TrackFillStyle}" Value="{Binding K, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                    <TextBox Style="{StaticResource SimpleTextBoxStyle}" x:Name="KTextBox" Grid.Column="2" Text="{Binding K, Converter={StaticResource TextConverter}, Mode=TwoWay, NotifyOnValidationError=True, RelativeSource={RelativeSource TemplatedParent}, ValidatesOnDataErrors=True, ValidatesOnExceptions=True}" />
                  </Grid>
                </Grid>
              </Border>
              <!-- ALPHA SLIDER -->
              <Border x:Name="alphaSlider" Grid.Row="3" Margin="10,0,10,5">
                <StackPanel>
                  <TextBlock Text="{Binding Path=AlphaCaption}"/>
                  <Grid Height="24">
                    <Grid.ColumnDefinitions>
                      <ColumnDefinition Width="*"/>
                      <ColumnDefinition Width="15"/>
                      <ColumnDefinition Width="50"/>
                    </Grid.ColumnDefinitions>
                    <igPrimBase:ByteSlider x:Name="Alpha" Style="{StaticResource ByteSliderStyle}" ThumbStyle="{StaticResource SliderThumbStyle}" TrackFillStyle="{StaticResource TrackFillStyle}" Value="{Binding Alpha, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                    <TextBox x:Name="AlphaTextBox" Grid.Column="2" Text="{Binding Alpha, Mode=TwoWay, NotifyOnValidationError=True, RelativeSource={RelativeSource TemplatedParent}, ValidatesOnDataErrors=True, ValidatesOnExceptions=True}" VerticalAlignment="Center" Style="{StaticResource SimpleTextBoxStyle}"/>
                  </Grid>
                </StackPanel>
              </Border>

              <Grid Grid.Row="4" Margin="10,5,10,10">
                <Grid.ColumnDefinitions>
                  <ColumnDefinition/>
                  <ColumnDefinition Width="10"/>
                  <ColumnDefinition/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                  <RowDefinition Height="Auto"/>
                  <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <Border Height="2" Grid.ColumnSpan="3" Margin="0,0,0,10" VerticalAlignment="Top" Background="{StaticResource DividerBackgroundBrush}"/>
                <Button Grid.Row="1" Content="{Binding Path=OKCaption}" Style="{StaticResource ButtonStyle}">

                  <igCP:Commanding.Commands>
                    <igCP:CommandSourceCollection>
                      <igCP:ColorStripsCommandSource CommandType="Accept" EventName="Click"/>
                      <igCP:ColorPickerDialogCommandSource CommandType="Close" EventName="Click"/>
                    </igCP:CommandSourceCollection>
                  </igCP:Commanding.Commands>
                </Button>
                <Button Grid.Column="2" Grid.Row="1" Content="{Binding Path=CancelCaption}" Style="{StaticResource ButtonStyle}">

                  <igCP:Commanding.Commands>
                    <igCP:CommandSourceCollection>
                      <igCP:ColorStripsCommandSource CommandType="Cancel" EventName="Click"/>
                      <igCP:ColorPickerDialogCommandSource CommandType="Close" EventName="Click"/>
                    </igCP:CommandSourceCollection>
                  </igCP:Commanding.Commands>
                </Button>
              </Grid>
            </Grid>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>
    <Style TargetType="igPrimBase:AdvancedColorShadePicker" BasedOn="{StaticResource AdvancedColorShadePicker}"/>

    <!-- *********************************  ColorPickerDialog Style  ********************************* -->
    <Style x:Key="ColorPickerDialog" TargetType="igPrimBase:ColorPickerDialog">
      <Setter Property="Background" Value="{StaticResource ColorPickerBackgroundBrush}"/>
      <Setter Property="BorderBrush" Value="{StaticResource ColorPickerBorderBrush}"/>
      <Setter Property="BorderThickness" Value="1"/>
      <Setter Property="Padding" Value="10"/>
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="igPrimBase:ColorPickerDialog">
            <Grid>
              <Popup x:Name="Popup">
                <Border x:Name="RootElement" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}">
                  <Border.Effect>
                    <DropShadowEffect Direction="270" ShadowDepth="0" BlurRadius="10" Opacity="0.5"/>
                  </Border.Effect>
                  <Border BorderBrush="{StaticResource ColorPickerBorderBrush}" BorderThickness="1">
                    <Grid>
                      <Grid.RowDefinitions>
                        <RowDefinition Height="25"/>
                        <RowDefinition/>
                      </Grid.RowDefinitions>
                      <Grid x:Name="HeaderElem" Background="{StaticResource TransparentBrush}" Grid.ColumnSpan="2">
                        <TextBlock Text="{Binding DialogCaption, RelativeSource={RelativeSource TemplatedParent}}" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="5,0"/>
                      </Grid>
                      <Border Grid.Row="1" Margin="5">
                        <Grid>
                          <igPrimBase:AdvancedColorShadePicker CurrentColor="{Binding Path=ColorPicker.SelectedColorPreview, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay }"
                                                               SelectedColor="{Binding ColorPicker.SelectedColor, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                        </Grid>
                      </Border>
                    </Grid>
                  </Border>
                </Border>
              </Popup>
            </Grid>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>
    <Style TargetType="igPrimBase:ColorPickerDialog" BasedOn="{StaticResource ColorPickerDialog}"/>

    <!-- *********************************  TransparencyBackgroundControl Style  ********************************* -->
    <Style TargetType="igPrim:TransparencyBackgroundControl">
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="igPrim:TransparencyBackgroundControl">
            <Grid x:Name="Root" />
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>
</ResourceDictionary>