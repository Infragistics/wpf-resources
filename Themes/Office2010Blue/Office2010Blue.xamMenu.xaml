<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
                    xmlns:igMenu="http://schemas.infragistics.com/xaml" 
                    xmlns:igPrim="http://schemas.infragistics.com/xaml/primitives" 
                    xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" mc:Ignorable="d">

  <!-- *********************************  RESOURCES  ********************************* -->
  <ResourceDictionary.MergedDictionaries>  
    <ResourceDictionary Source="Office2010Blue.Styles.xaml" />
  </ResourceDictionary.MergedDictionaries>

  <!-- ********************************** BRUSHES **********************************-->
  <!-- Menu Brushes -->
  <SolidColorBrush x:Key="MenuBackgroundBrush" Color="{StaticResource Color_030}" />
  <LinearGradientBrush x:Key="MenuPopupBackgroundBrush" EndPoint="0.5,1" StartPoint="0.5,0">
    <GradientStop Color="{StaticResource Color_032}" />
    <GradientStop Color="{StaticResource Color_030}" Offset="1" />
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="MenuPopupBorderBrush" StartPoint="0,0" EndPoint="0,1">
    <GradientStop Offset="0" Color="{StaticResource Color_028}" />
    <GradientStop Offset="1" Color="{StaticResource Color_027}" />
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="ContextMenuBackgroundBrush" EndPoint="0.5,1" StartPoint="0.5,0">
    <GradientStop Color="{StaticResource Color_032}" />
    <GradientStop Color="{StaticResource Color_030}" Offset="1" />
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="ContextMenuBorderBrush" StartPoint="0,0" EndPoint="0,1">
    <GradientStop Offset="0" Color="{StaticResource Color_028}" />
    <GradientStop Offset="1" Color="{StaticResource Color_027}" />
  </LinearGradientBrush>
  <SolidColorBrush x:Key="MenuSeparatorBackgroundBrush" Color="{StaticResource Color_029}" />

  <!-- MenuItem Brushes -->
  <SolidColorBrush x:Key="MenuItemBackgroundBrush" Color="{StaticResource Color_033}" />
  <LinearGradientBrush x:Key="MenuItemHoverBackgroundBrush" StartPoint="0,0" EndPoint="0,1">
    <GradientStop Offset="0" Color="{StaticResource Color_018}" />
    <GradientStop Offset="0.23" Color="{StaticResource Color_017}" />
    <GradientStop Offset="0.75" Color="{StaticResource Color_017}" />
    <GradientStop Offset="1" Color="{StaticResource Color_019}" />
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="MenuItemHoverBorderBrush" StartPoint="0.5,0" EndPoint="0.5,1">
    <GradientStop Offset="1" Color="{StaticResource Color_014}" />
    <GradientStop Color="{StaticResource Color_015}" Offset="0.05" />
  </LinearGradientBrush>
  <SolidColorBrush x:Key="MenuItemInnerHighlightBorderBrush" Color="{StaticResource Color_019}" />
  <LinearGradientBrush x:Key="MenuItemHighlightedBackgroundBrush" StartPoint="0,0" EndPoint="0,1">
    <GradientStop Offset="0" Color="{StaticResource Color_018}" />
    <GradientStop Offset="0.23" Color="{StaticResource Color_017}" />
    <GradientStop Offset="0.75" Color="{StaticResource Color_017}" />
    <GradientStop Offset="1" Color="{StaticResource Color_019}" />
  </LinearGradientBrush>
  <SolidColorBrush x:Key="MenuItemHighlightedBorderBrush" Color="{StaticResource Color_015}" />
  <SolidColorBrush x:Key="MenuIconColumnBorderBrush" Color="{StaticResource Color_029}" />

  <!--  MenuScrollViewerButton Brushes -->
  <LinearGradientBrush x:Key="MenuScrollViewerButtonBackgroundBrush" StartPoint="0.5,0" EndPoint="0.5,1">
    <GradientStop Color="{StaticResource Color_030}" Offset="1" />
    <GradientStop Color="{StaticResource Color_032}" />
  </LinearGradientBrush>
  <SolidColorBrush x:Key="MenuScrollViewerButtonBorderBrush" Color="{StaticResource Color_027}" />
  <LinearGradientBrush x:Key="MenuScrollViewerButtonHoverBackgroundBrush" StartPoint="0,0" EndPoint="0,1">
    <GradientStop Offset="0" Color="{StaticResource Color_018}" />
    <GradientStop Offset="0.23" Color="{StaticResource Color_017}" />
    <GradientStop Offset="0.75" Color="{StaticResource Color_017}" />
    <GradientStop Offset="1" Color="{StaticResource Color_019}" />
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="MenuScrollViewerButtonHoverBorderBrush" StartPoint="0.5,0" EndPoint="0.5,1">
    <GradientStop Offset="1" Color="{StaticResource Color_013}" />
    <GradientStop Color="{StaticResource Color_014}" />
  </LinearGradientBrush>
  <SolidColorBrush x:Key="MenuScrollViewerButtonHoverHighlightBorderBrush" Color="{StaticResource Color_019}" />
  <LinearGradientBrush x:Key="MenuScrollViewerButtonPressedBackgroundBrush" StartPoint="0,0 " EndPoint="0,1 ">
    <GradientStop Offset="1" Color="{StaticResource Color_017}" />
    <GradientStop Color="{StaticResource Color_016}" />
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="MenuScrollViewerButtonPressedBorderBrush" StartPoint="0.5,0" EndPoint="0.5,1">
    <GradientStop Offset="0" Color="{StaticResource Color_012}" />
    <GradientStop Offset="1" Color="{StaticResource Color_013}" />
  </LinearGradientBrush>

  <!-- *********************************  XamHeaderedItemsControl Style  ********************************* -->
  <Style x:Key="XamHeaderedItemsControlStyle" TargetType="igPrim:XamHeaderedItemsControl">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igPrim:XamHeaderedItemsControl">
          <Grid x:Name="Root">
            <Grid.RowDefinitions>
              <RowDefinition Height="Auto" />
              <RowDefinition Height="*" />
            </Grid.RowDefinitions>
            <ContentControl x:Name="HeaderContent" Content="{TemplateBinding Header}" ContentTemplate="{TemplateBinding HeaderTemplate}" />
            <ItemsPresenter x:Name="Items" Grid.Row="1" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="igPrim:XamHeaderedItemsControl" BasedOn="{StaticResource XamHeaderedItemsControlStyle}" />

  <!-- *********************************  XamMenuSeparator Style  ********************************* -->
  <Style x:Key="XamMenuSeparatorStyle" TargetType="igMenu:XamMenuSeparator">
    <Setter Property="Background" Value="{StaticResource MenuSeparatorBackgroundBrush}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igMenu:XamMenuSeparator">
          <Grid>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="OrientationState">
                <VisualState x:Name="Horizontal" />
                <VisualState x:Name="Vertical">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HorizontalContainer" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Collapsed</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="VertitalContainer" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Border Name="HorizontalContainer" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" Margin="29,2,2,2" Height="1" />
            <Border Name="VertitalContainer" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" Margin="2" Width="1" Visibility="Collapsed" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="igMenu:XamMenuSeparator" BasedOn="{StaticResource XamMenuSeparatorStyle}" />

  <!-- *********************************  IconContentControl Style ********************************* -->
  <Style TargetType="igPrim:IconContentControl">
    <Setter Property="IsTabStop" Value="False" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igPrim:IconContentControl">
          <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" RecognizesAccessKey="True" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- *********************************  MenuScrollViewer and MenuScrollViewerButton Styles ********************************* -->
  <MenuScrollingVisibilityConverter x:Key="MenuScrollingVisibilityConverter" />

  <!-- *********************************  MenuScrollViewerRightButton Style ********************************* -->
  <Style x:Key="MenuScrollViewerButtonStyle" TargetType="{x:Type RepeatButton}">
    <Setter Property="ClickMode" Value="Hover" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type RepeatButton}">
          <Grid>
            <Border SnapsToDevicePixels="True" x:Name="OuterBorder" Background="{StaticResource MenuScrollViewerButtonBackgroundBrush}" BorderBrush="{StaticResource MenuScrollViewerButtonBorderBrush}" BorderThickness="1" CornerRadius="2,2,2,2" />
            <Border SnapsToDevicePixels="True" Margin="1,1,1,1" x:Name="InnerHighlight" CornerRadius="2" BorderBrush="{StaticResource TransparentBrush}" BorderThickness="1" />
            <ContentPresenter x:Name="contentPresenter" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" />
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
              <Setter Property="Background" TargetName="OuterBorder" Value="{StaticResource MenuScrollViewerButtonHoverBackgroundBrush}" />
              <Setter Property="BorderBrush" TargetName="OuterBorder" Value="{StaticResource MenuScrollViewerButtonHoverBorderBrush}" />
              <Setter Property="BorderBrush" TargetName="InnerHighlight" Value="{StaticResource MenuScrollViewerButtonHoverHighlightBorderBrush}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
              <Setter Property="Background" TargetName="OuterBorder" Value="{StaticResource MenuScrollViewerButtonPressedBackgroundBrush}" />
              <Setter Property="BorderBrush" TargetName="OuterBorder" Value="{StaticResource MenuScrollViewerButtonPressedBorderBrush}" />
              <Setter Property="BorderBrush" TargetName="InnerHighlight" Value="{StaticResource MenuScrollViewerButtonHoverHighlightBorderBrush}" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- *********************************  MenuScrollViewer Style ********************************* -->
  <Style x:Key="MenuScrollViewerStyle" TargetType="{x:Type ScrollViewer}">
    <Setter Property="HorizontalScrollBarVisibility" Value="Auto" />
    <Setter Property="VerticalScrollBarVisibility" Value="Auto" />
    <Setter Property="Focusable" Value="False" />
    <Setter Property="HorizontalContentAlignment" Value="Left" />
    <Setter Property="VerticalContentAlignment" Value="Top" />
    <Setter Property="Padding" Value="0" />
    <Setter Property="BorderThickness" Value="0" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ScrollViewer}">
          <Grid SnapsToDevicePixels="true" Background="{TemplateBinding Background}">
            <Grid.RowDefinitions>
              <RowDefinition Height="Auto" />
              <RowDefinition Height="*" />
              <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="Auto" />
              <ColumnDefinition Width="*" />
              <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <Border Grid.Row="1" Grid.Column="1">
              <ScrollContentPresenter CanContentScroll="{TemplateBinding CanContentScroll}" x:Name="PART_ScrollContentPresenter" Margin="{TemplateBinding Padding}" />
            </Border>

            <!--UP-->
            <RepeatButton Grid.Row="0" Grid.ColumnSpan="3" Command="{x:Static ScrollBar.LineUpCommand}" Style="{StaticResource MenuScrollViewerButtonStyle}" Focusable="False" CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}" Margin="1">
              <RepeatButton.Visibility>
                <MultiBinding FallbackValue="Visibility.Collapsed" Converter="{StaticResource MenuScrollingVisibilityConverter}" ConverterParameter="0">
                  <Binding Path="ComputedVerticalScrollBarVisibility" RelativeSource="{RelativeSource TemplatedParent}" />
                  <Binding Path="VerticalOffset" RelativeSource="{RelativeSource TemplatedParent}" />
                  <Binding Path="ExtentHeight" RelativeSource="{RelativeSource TemplatedParent}" />
                  <Binding Path="ViewportHeight" RelativeSource="{RelativeSource TemplatedParent}" />
                </MultiBinding>
              </RepeatButton.Visibility>
              <Path x:Name="ArrowUp" Margin="0,4" HorizontalAlignment="Center" VerticalAlignment="Center" Height="4" Width="8" Stretch="Fill" Opacity="1" Data="M 0,4 C0,4 8,4 8,4 8,4 4,0 4,0 4,0 0,4 0,4 z" Fill="{StaticResource GlyphBorderBrush}" SnapsToDevicePixels="True" />
            </RepeatButton>

            <!--DOWN-->
            <RepeatButton Grid.Row="2" Grid.ColumnSpan="3" Command="{x:Static ScrollBar.LineDownCommand}" Style="{StaticResource MenuScrollViewerButtonStyle}" Focusable="False" CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}" Margin="1">
              <RepeatButton.Visibility>
                <MultiBinding FallbackValue="Visibility.Collapsed" Converter="{StaticResource MenuScrollingVisibilityConverter}" ConverterParameter="100">
                  <Binding Path="ComputedVerticalScrollBarVisibility" RelativeSource="{RelativeSource TemplatedParent}" />
                  <Binding Path="VerticalOffset" RelativeSource="{RelativeSource TemplatedParent}" />
                  <Binding Path="ExtentHeight" RelativeSource="{RelativeSource TemplatedParent}" />
                  <Binding Path="ViewportHeight" RelativeSource="{RelativeSource TemplatedParent}" />
                </MultiBinding>
              </RepeatButton.Visibility>
              <Path x:Name="ArrowDown" Margin="0,4" HorizontalAlignment="Center" VerticalAlignment="Center" Height="3" Width="6" Stretch="Fill" Opacity="1" Data="M 1,0 C1,0 7,0 7,0 7,0 4,3 4,3 4,3 1,0 1,0 z" Fill="{StaticResource GlyphBorderBrush}" SnapsToDevicePixels="True" ClipToBounds="False" />
            </RepeatButton>

            <!--LEFT-->
            <RepeatButton Grid.RowSpan="3" Grid.Column="0" Command="{x:Static ScrollBar.LineLeftCommand}" Style="{StaticResource MenuScrollViewerButtonStyle}" Focusable="False" CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}" Margin="1">
              <RepeatButton.Visibility>
                <MultiBinding FallbackValue="Visibility.Collapsed" Converter="{StaticResource MenuScrollingVisibilityConverter}" ConverterParameter="0">
                  <Binding Path="ComputedHorizontalScrollBarVisibility" RelativeSource="{RelativeSource TemplatedParent}" />
                  <Binding Path="HorizontalOffset" RelativeSource="{RelativeSource TemplatedParent}" />
                  <Binding Path="ExtentWidth" RelativeSource="{RelativeSource TemplatedParent}" />
                  <Binding Path="ViewportWidth" RelativeSource="{RelativeSource TemplatedParent}" />
                </MultiBinding>
              </RepeatButton.Visibility>
              <Path x:Name="ArrowLeft" Margin="4,0" HorizontalAlignment="Center" VerticalAlignment="Center" Height="8" Width="4" Stretch="Fill" Opacity="1" Data="F1 M 110.692,342.252L 110.692,352.682L 104.594,347.467L 110.692,342.252 Z " Fill="{StaticResource GlyphBorderBrush}" SnapsToDevicePixels="True" ClipToBounds="False" />
            </RepeatButton>

            <!--RIGHT-->
            <RepeatButton Grid.RowSpan="3" Grid.Column="2" Command="{x:Static ScrollBar.LineRightCommand}" Style="{StaticResource MenuScrollViewerButtonStyle}" Focusable="False" CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}" Margin="1">
              <RepeatButton.Visibility>
                <MultiBinding FallbackValue="Visibility.Collapsed" Converter="{StaticResource MenuScrollingVisibilityConverter}" ConverterParameter="100">
                  <Binding Path="ComputedHorizontalScrollBarVisibility" RelativeSource="{RelativeSource TemplatedParent}" />
                  <Binding Path="HorizontalOffset" RelativeSource="{RelativeSource TemplatedParent}" />
                  <Binding Path="ExtentWidth" RelativeSource="{RelativeSource TemplatedParent}" />
                  <Binding Path="ViewportWidth" RelativeSource="{RelativeSource TemplatedParent}" />
                </MultiBinding>
              </RepeatButton.Visibility>
              <Path x:Name="ArrowRight" Margin="4,0" HorizontalAlignment="Center" VerticalAlignment="Center" Height="8" Width="4" Stretch="Fill" Opacity="1" Data="F1 M 511.047,352.682L 511.047,342.252L 517.145,347.467L 511.047,352.682 Z " Fill="{StaticResource GlyphBorderBrush}" SnapsToDevicePixels="True" ClipToBounds="False" />
            </RepeatButton>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- *********************************  XamMenu Style  ********************************* -->
  <Style x:Key="XamMenuStyle" TargetType="igMenu:XamMenu">
    <Setter Property="Background" Value="{StaticResource MenuBackgroundBrush}" />
    <!-- WPF SPECIFIC SETTERS-->
    <Setter Property="Focusable" Value="False" />
    <Setter Property="SnapsToDevicePixels" Value="True" />
    <!-- END OF WPF SPECIFIC SETTERS-->
    <Setter Property="ItemsPanel">
      <Setter.Value>
        <ItemsPanelTemplate>
          <StackPanel Orientation="Horizontal" />
        </ItemsPanelTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igMenu:XamMenu">
          <Grid Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" VerticalAlignment="{TemplateBinding VerticalAlignment}" HorizontalAlignment="{TemplateBinding HorizontalAlignment}">
            <Border Grid.Column="0" Background="{TemplateBinding Background}" />
            <ItemsPresenter />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="igMenu:XamMenu" BasedOn="{StaticResource XamMenuStyle}" />

  <!-- *********************************  XamMenuItem Style  ********************************* -->
  <Style x:Key="XamMenuItemStyle" TargetType="igMenu:XamMenuItem">
    <Setter Property="Background" Value="{StaticResource MenuItemBackgroundBrush}" />
    <Setter Property="IsTabStop" Value="True" />
    <Setter Property="IsEnabled" Value="True" />
    <Setter Property="ItemsPanel">
      <Setter.Value>
        <ItemsPanelTemplate>
          <StackPanel Orientation="Vertical" />
        </ItemsPanelTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igMenu:XamMenuItem">
          <Grid Background="{TemplateBinding Background}">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="MouseOver">
                  <Storyboard x:Name="MouseOverStoryboard">
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="SelectedIndicator" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>

                <VisualState x:Name="Highlighted">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HighlightedIndicator" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>

                <VisualState x:Name="Disabled">
                  <Storyboard>
                    <DoubleAnimation From="1" To=".3" Duration="0" Storyboard.TargetName="MenuItemPresenter" Storyboard.TargetProperty="Opacity" />
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>

              <VisualStateGroup x:Name="SubmenuState">
                <VisualState x:Name="SubmenuOpen">
                  <Storyboard>
                    <DoubleAnimation Storyboard.TargetName="PopupBorder" Storyboard.TargetProperty="Opacity" To="1.0" BeginTime="0:0:0" Duration="0:0:0.15" />
                  </Storyboard>
                </VisualState>

                <VisualState x:Name="SubmenuOpenImmediately">
                  <Storyboard>
                    <DoubleAnimation Storyboard.TargetName="PopupBorder" Storyboard.TargetProperty="Opacity" To="1.0" BeginTime="0:0:0" Duration="0:0:0.15" />
                  </Storyboard>
                </VisualState>

                <VisualState x:Name="SubmenuClose">
                  <Storyboard>
                    <DoubleAnimation Storyboard.TargetName="PopupBorder" Storyboard.TargetProperty="Opacity" To="0.01" BeginTime="0:0:0" Duration="0:0:0.1" />

                  </Storyboard>
                </VisualState>

                <VisualState x:Name="SubmenuCloseImmediately">
                  <Storyboard>
                    <DoubleAnimation Storyboard.TargetName="PopupBorder" Storyboard.TargetProperty="Opacity" To="0.01" BeginTime="0:0:0" Duration="0:0:0.1" />

                  </Storyboard>
                </VisualState>
              </VisualStateGroup>

              <VisualStateGroup x:Name="MenuItemRole">
                <VisualState x:Name="TopLevelHeader">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="IconPlace" Storyboard.TargetProperty="Width">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <GridLength>Auto</GridLength>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>

                    <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="ChildIndicatorPlace" Storyboard.TargetProperty="Width">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <GridLength>0</GridLength>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>

                    <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0" Storyboard.TargetName="HeaderPresenter" Storyboard.TargetProperty="(FrameworkElement.Margin)">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Thickness>10,3,0,3</Thickness>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0" Storyboard.TargetName="HeaderCheckboxPresenter" Storyboard.TargetProperty="(FrameworkElement.Margin)">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Thickness>4,3,0,3</Thickness>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>

                <VisualState x:Name="TopLevelHeaderWithIcon">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="IconPlace" Storyboard.TargetProperty="Width">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <GridLength>Auto</GridLength>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>

                    <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="ChildIndicatorPlace" Storyboard.TargetProperty="Width">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <GridLength>0</GridLength>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>

                    <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0" Storyboard.TargetName="HeaderPresenter" Storyboard.TargetProperty="(FrameworkElement.Margin)">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Thickness>0,3,0,3</Thickness>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0" Storyboard.TargetName="HeaderCheckboxPresenter" Storyboard.TargetProperty="(FrameworkElement.Margin)">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Thickness>4,3,0,3</Thickness>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>

                <VisualState x:Name="TopLevelItem">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="IconPlace" Storyboard.TargetProperty="Width">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <GridLength>Auto</GridLength>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>

                    <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="ChildIndicatorPlace" Storyboard.TargetProperty="Width">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <GridLength>0</GridLength>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>

                    <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0" Storyboard.TargetName="HeaderPresenter" Storyboard.TargetProperty="(FrameworkElement.Margin)">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Thickness>10,3,0,3</Thickness>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>

                    <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0" Storyboard.TargetName="HeaderCheckboxPresenter" Storyboard.TargetProperty="(FrameworkElement.Margin)">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Thickness>4,3,0,3</Thickness>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>

                <VisualState x:Name="TopLevelItemWithIcon">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="IconPlace" Storyboard.TargetProperty="Width">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <GridLength>Auto</GridLength>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>

                    <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="ChildIndicatorPlace" Storyboard.TargetProperty="Width">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <GridLength>0</GridLength>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>

                    <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0" Storyboard.TargetName="HeaderPresenter" Storyboard.TargetProperty="(FrameworkElement.Margin)">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Thickness>0,3,0,3</Thickness>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>

                    <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0" Storyboard.TargetName="HeaderCheckboxPresenter" Storyboard.TargetProperty="(FrameworkElement.Margin)">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Thickness>4,3,0,3</Thickness>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>

                <VisualState x:Name="SubmenuHeader">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="ArrowPanel" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="HeaderPresenter" Storyboard.TargetProperty="(FrameworkElement.Margin)">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Thickness>5,3,25,3</Thickness>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>

                <VisualState x:Name="SubmenuItem">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="HeaderPresenter" Storyboard.TargetProperty="(FrameworkElement.Margin)">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Thickness>5,3,25,3</Thickness>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid>
              <Border x:Name="SelectedIndicator" Background="{StaticResource MenuItemHoverBackgroundBrush}" BorderBrush="{StaticResource MenuItemHoverBorderBrush}" Visibility="Collapsed" Grid.ColumnSpan="3" HorizontalAlignment="Stretch" CornerRadius="3" BorderThickness="1" Margin="1">
                <Rectangle Stroke="{StaticResource MenuItemInnerHighlightBorderBrush}" RadiusX="2" RadiusY="2" />
              </Border>
              <Border x:Name="HighlightedIndicator" Background="{StaticResource MenuItemHighlightedBackgroundBrush}" BorderBrush="{StaticResource MenuItemHighlightedBorderBrush}" Visibility="Collapsed" Grid.ColumnSpan="3" HorizontalAlignment="Stretch" CornerRadius="3" BorderThickness="1">
                <Rectangle Stroke="{StaticResource MenuItemInnerHighlightBorderBrush}" RadiusX="2" RadiusY="2" />
              </Border>

              <!-- MenuItemPresenter - presents the content of the menu item. -->
              <ContentPresenter x:Name="MenuItemPresenter" RecognizesAccessKey="True" Visibility="Visible" Opacity="1">
                <ContentPresenter.Content>
                  <Grid>
                    <Grid.ColumnDefinitions>
                      <ColumnDefinition x:Name="IconPlace" Width="25" />
                      <ColumnDefinition Width="*" />
                      <ColumnDefinition x:Name="ChildIndicatorPlace" Width="22" />
                    </Grid.ColumnDefinitions>
                    <!-- Icon presenter-->
                    <igPrim:IconContentControl x:Name="HeaderIconPresenter" Height="16" Width="16" Visibility="{TemplateBinding IconVisibilityResolved}" Margin="4,3,4,3" />

                    <!-- Checkbox presenter-->
                    <ContentPresenter x:Name="HeaderCheckboxPresenter" Margin="4,3,4,3" HorizontalAlignment="Right" VerticalAlignment="Center" Visibility="{TemplateBinding CheckBoxVisibilityResolved}">
                      <ContentPresenter.Content>
                        <CheckBox IsTabStop="False" IsHitTestVisible="False" IsChecked="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsChecked, Mode=TwoWay}" Style="{StaticResource CheckBoxStyle}" />
                      </ContentPresenter.Content>
                    </ContentPresenter>

                    <!-- Header presenter-->
                    <Grid Grid.Column="1">
                      <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                      </Grid.ColumnDefinitions>

                      <igPrim:IconContentControl x:Name="HeaderPresenter" Margin="5,3,5,3" Content="{TemplateBinding Header}" ContentTemplate="{TemplateBinding HeaderTemplate}" Grid.Column="0" VerticalAlignment="Center" HorizontalAlignment="Left" />

                      <TextBlock Grid.Column="1" VerticalAlignment="Center" Text="{TemplateBinding InputGestureText}" Margin="8,3,2,3" />
                    </Grid>

                    <!-- Arrow indicator presenter-->
                    <Grid Grid.Column="2" x:Name="ArrowPanel" VerticalAlignment="Center" HorizontalAlignment="Center" Visibility="Collapsed">
                      <Path x:Name="ArrowPanelPath" Fill="{StaticResource GlyphBorderBrush}" VerticalAlignment="Center" Margin="7,0,7,0" Data="M0,0 L0,8 L4,4 z" />
                    </Grid>

                  </Grid>
                </ContentPresenter.Content>
              </ContentPresenter>
            </Grid>
            <Popup x:Name="Popup">
              <Grid Background="{StaticResource MenuItemBackgroundBrush}">
                <Border x:Name="PopupBorder" Opacity="0.01" Background="{StaticResource MenuPopupBackgroundBrush}" BorderBrush="{StaticResource MenuPopupBorderBrush}" BorderThickness="1" CornerRadius="2" Padding="1">
                  <Grid>
                    <Grid.ColumnDefinitions>
                      <ColumnDefinition Width="26" />
                      <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <Border Grid.Column="0" BorderBrush="{StaticResource MenuIconColumnBorderBrush}" BorderThickness="0,0,1,0" Width="26" HorizontalAlignment="Left" />
                    <ScrollViewer x:Name="ScrollViewer" Style="{StaticResource MenuScrollViewerStyle}" MaxHeight="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=MaxHeight}" MaxWidth="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=MaxWidth}" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto" Grid.ColumnSpan="2">
                      <ItemsPresenter />
                    </ScrollViewer>
                  </Grid>
                </Border>
              </Grid>
            </Popup>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="igMenu:XamMenuItem" BasedOn="{StaticResource XamMenuItemStyle}" />

  <!-- *********************************  XamContextMenu Style  ********************************* -->
  <Style x:Key="XamContextMenuStyle" TargetType="igMenu:XamContextMenu">
    <Setter Property="Padding" Value="2" />
    <Setter Property="Background" Value="{StaticResource ContextMenuBackgroundBrush}" />
    <Setter Property="BorderBrush" Value="{StaticResource ContextMenuBorderBrush}" />
    <Setter Property="BorderThickness" Value="1" />
    <!-- WPF SPECIFIC SETTERS-->
    <Setter Property="Focusable" Value="False" />
    <Setter Property="KeyboardNavigation.TabNavigation" Value="None" />
    <!-- END OF WPF SPECIFIC SETTERS-->
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igMenu:XamContextMenu">
          <Border x:Name="PopupBorder" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="2" Padding="1">
            <Grid>
              <Grid.ColumnDefinitions>
                <ColumnDefinition MaxWidth="26" />
                <ColumnDefinition Width="*" />
              </Grid.ColumnDefinitions>
              <Border BorderBrush="{StaticResource MenuIconColumnBorderBrush}" BorderThickness="0,0,1,0" HorizontalAlignment="Right" />
              <ItemsPresenter Grid.ColumnSpan="2" />
            </Grid>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="igMenu:XamContextMenu" BasedOn="{StaticResource XamContextMenuStyle}" />
</ResourceDictionary>