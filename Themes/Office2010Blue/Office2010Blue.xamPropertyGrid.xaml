<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
					xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
					xmlns:sys="clr-namespace:System;assembly=mscorlib"
					xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
					xmlns:ig="http://schemas.infragistics.com/xaml"
					xmlns:igControls="http://schemas.infragistics.com/xaml/wpf"
					xmlns:igPrim="http://schemas.infragistics.com/xaml/primitives">

  <!-- *********************************  RESOURCES  ********************************* -->
  <ResourceDictionary.MergedDictionaries>
    <ResourceDictionary Source="Office2010Blue.xamDateTimeInput.xaml" />
    <ResourceDictionary Source="Office2010Blue.xamSlider.xaml" />
    <ResourceDictionary Source="Office2010Blue.xamMaskedInput.xaml" />
    <ResourceDictionary Source="Office2010Blue.xamColorPicker.xaml" />
    <ResourceDictionary Source="Office2010Blue.Styles.xaml" />  
  </ResourceDictionary.MergedDictionaries>

    <!-- *********************************  BRUSHES  ********************************* -->
    <!-- Tooltip Brushes -->
    <LinearGradientBrush x:Key="TooltipBackgroundBrush" EndPoint="0.5,1" StartPoint="0.5,0" Opacity="0.9">
        <GradientStop Color="{StaticResource Color_030}" Offset="1" />
        <GradientStop Color="{StaticResource Color_005}" />
    </LinearGradientBrush>
    <SolidColorBrush x:Key="TooltipBorderBrush" Color="{StaticResource Color_027}" Opacity="0.9" />
    <SolidColorBrush x:Key="TooltipShadowBackgroundBrush" Color="{StaticResource Color_001}" />

    <!-- Menu Brushes -->
    <LinearGradientBrush x:Key="MenuPopupBackgroundBrush" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="{StaticResource Color_032}" />
        <GradientStop Color="{StaticResource Color_030}" Offset="1" />
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="MenuPopupBorderBrush" StartPoint="0,0" EndPoint="0,1">
        <GradientStop Offset="0" Color="{StaticResource Color_028}" />
        <GradientStop Offset="1" Color="{StaticResource Color_027}" />
    </LinearGradientBrush>
    <SolidColorBrush x:Key="ContextMenuBackgroundBrush" Color="{StaticResource Color_032}"/>
    <LinearGradientBrush x:Key="ContextMenuBorderBrush" StartPoint="0,0" EndPoint="0,1">
        <GradientStop Offset="0" Color="{StaticResource Color_028}" />
        <GradientStop Offset="1" Color="{StaticResource Color_027}" />
    </LinearGradientBrush>
    <SolidColorBrush x:Key="MenuSeparatorBackgroundBrush" Color="{StaticResource Color_029}" />
    <SolidColorBrush x:Key="GlyphBackgroundBrush" Color="{StaticResource Color_025}"/>

    <!-- MenuItem Brushes -->
    <LinearGradientBrush x:Key="MenuItemHoverBackgroundBrush" StartPoint="0,0" EndPoint="0,1">
        <GradientStop Offset="0" Color="{StaticResource Color_018}" />
        <GradientStop Offset="0.23" Color="{StaticResource Color_017}" />
        <GradientStop Offset="0.75" Color="{StaticResource Color_017}" />
        <GradientStop Offset="1" Color="{StaticResource Color_019}" />
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="MenuItemHoverBorderBrush" StartPoint="0.5,0" EndPoint="0.5,1">
        <GradientStop Offset="1" Color="{StaticResource Color_014}" />
        <GradientStop Color="{StaticResource Color_015}" Offset="0.05" />
    </LinearGradientBrush>
    <SolidColorBrush x:Key="MenuIconColumnBorderBrush" Color="{StaticResource Color_029}" />

    <!-- PropertyItem Brushes -->
    <SolidColorBrush x:Key="PropertyItemBackgroundBrush" Color="{StaticResource Color_005}" />
    <LinearGradientBrush x:Key="PropertyItemSelectedBackgroundBrush" StartPoint="0,0 " EndPoint="0,1 ">
        <GradientStop Offset="1" Color="{StaticResource Color_015}" />
        <GradientStop Color="{StaticResource Color_014}" />
    </LinearGradientBrush>
    <SolidColorBrush x:Key="PropertyItemNameBorderBrush" Color="{StaticResource Color_031}" />
    <SolidColorBrush x:Key="PropertyItemEditorBorderBrush" Color="{StaticResource Color_031}" />
    <SolidColorBrush x:Key="PropertyItemLayoutPanelBackgroundBrush" Color="{StaticResource Color_031}" />

    <!-- PropertyGrid Brushes -->
    <SolidColorBrush x:Key="PropertyGridBackgroundBrush" Color="{StaticResource Color_005}" />
    <SolidColorBrush x:Key="PropertyGridBorderBrush" Color="{StaticResource Color_027}" />
    <SolidColorBrush x:Key="PropertyGridCategoryBackgroundBrush" Color="{StaticResource Color_031}" />
    <LinearGradientBrush x:Key="PropertyGridDescriptionAreaBackgroundBrush" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="{StaticResource Color_031}" />
        <GradientStop Color="{StaticResource Color_030}" Offset="1" />
    </LinearGradientBrush>
    <SolidColorBrush x:Key="PropertyGridDescriptionAreaSplitterBackgroundBrush" Color="{StaticResource Color_027}" />
    <SolidColorBrush x:Key="PropertyGridValueResetButtonBorderBrush" Color="{StaticResource Color_001}" />
    <SolidColorBrush x:Key="PropertyGridValueResetButtonCanResetBackgroundBrush" Color="{StaticResource Color_001}" />
    <SolidColorBrush x:Key="PropertyGridValueResetButtonCannotResetBackgroundBrush" Color="{StaticResource Color_005}" />

    <!-- JM 10-10-16 TFS224559 - Added. -->
    <SolidColorBrush x:Key="XamPropertyGrid_ItemEditorBoundPropertyBorderBrush" Color="#FFFFCF00" />

    <!-- *********************************  CONVERTERS  ********************************* -->
    <igPrim:GridLengthConverter x:Key="GridLengthConverter" />
    <igPrim:ExpandableObjectMarginConverter x:Key="ExpandableObjectMarginConverter" />
    <igPrim:PropertyItemMarginConverter x:Key="PropertyItemMarginConverter" />
    <igPrim:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter" />
    <igControls:NotBoolToVisibilityConverter x:Key="NotBoolToVisibilityConverter" />
    <igPrim:InverseBooleanConverter x:Key="InverseBooleanConverter" />
    <igControls:BoolToHiddenConverter x:Key="BoolToHiddenConverter" />

    <igPrim:ValueConverterGroup x:Key="InverseBoolToVisibilityConverter">
        <igPrim:FixedValueConverter>
            <igPrim:FixedValueConverter.SourceValue>
                <sys:Boolean>true</sys:Boolean>
            </igPrim:FixedValueConverter.SourceValue>
            <igPrim:FixedValueConverter.DestinationValue>
                <Visibility>Collapsed</Visibility>
            </igPrim:FixedValueConverter.DestinationValue>
        </igPrim:FixedValueConverter>
        <igPrim:FixedValueConverter>
            <igPrim:FixedValueConverter.DestinationValue>
                <Visibility>Visible</Visibility>
            </igPrim:FixedValueConverter.DestinationValue>
        </igPrim:FixedValueConverter>
    </igPrim:ValueConverterGroup>

    <!-- JM 10-10-16 TFS224559 - Added. -->
    <igPrim:BoundPropertyBorderBrushConverter x:Key="BoundPropertyBorderBrushConverter"/>

    <!-- *********************************  STRING RESOURCES  ********************************* -->
    <igPrim:PropertyGridResourceString x:Key="toolTipCategorizeButton" ResourceName="ToolTip_CategorizeButton" />
    <igPrim:PropertyGridResourceString x:Key="toolTipSortButton" ResourceName="ToolTip_SortButton" />
    <igPrim:PropertyGridResourceString x:Key="toolTipClearFilterButton" ResourceName="ToolTip_ClearFilterButton" />
    <igPrim:PropertyGridResourceString x:Key="toolTipFilterTextBox" ResourceName="ToolTip_FilterTextBox" />
    <igPrim:PropertyGridResourceString x:Key="toolTipAddListEntryButton" ResourceName="ToolTip_AddListEntryButton" />
    <igPrim:PropertyGridResourceString x:Key="toolTipRemoveListEntryButton" ResourceName="ToolTip_RemoveListEntryButton" />
    <igPrim:PropertyGridResourceString x:Key="toolTipCreateExpandableObjectButton" ResourceName="ToolTip_CreateExpandableObjectButton" />
    <igPrim:PropertyGridResourceString x:Key="toolTipPropertyValueResetButtonCanReset" ResourceName="ToolTip_PropertyValueResetButtonCanReset" />
    <igPrim:PropertyGridResourceString x:Key="toolTipPropertyValueResetButtonCannotReset" ResourceName="ToolTip_PropertyValueResetButtonCannotReset" />

    <!-- JM 10-10-16 TFS224559 - Added. -->
    <igPrim:PropertyGridResourceString x:Key="toolTipPropertyValueResetButtonCanResetBinding" ResourceName="ToolTip_PropertyValueResetButtonCanResetBinding" />

    <!-- *********************************  Tooltip Style  ********************************* -->
    <Style x:Key="{x:Type ToolTip}" TargetType="ToolTip">
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
        <Setter Property="Background" Value="{StaticResource TooltipBackgroundBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource TooltipBorderBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Padding" Value="5" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToolTip">
                    <Grid>
                        <Grid>
                            <Rectangle Fill="{StaticResource TooltipShadowBackgroundBrush}" Margin="0,0,-1,-1" Opacity="0.1" RadiusY="1" RadiusX="1" />
                            <Rectangle Fill="{StaticResource TooltipShadowBackgroundBrush}" Margin="0,0,-2,-2" Opacity="0.08" RadiusY="2" RadiusX="2" />
                            <Rectangle Fill="{StaticResource TooltipShadowBackgroundBrush}" Margin="0,0,-3,-3" Opacity="0.06" RadiusY="3" RadiusX="3" />
                            <Rectangle Fill="{StaticResource TooltipShadowBackgroundBrush}" Margin="0,0,-4,-4" Opacity="0.04" RadiusY="4" RadiusX="4" />
                        </Grid>
                        <Rectangle Fill="{TemplateBinding Background}" Stroke="{TemplateBinding BorderBrush}" Margin="0" StrokeThickness="{TemplateBinding BorderThickness}" />
                        <StackPanel Orientation="Horizontal">
                            <ContentPresenter Margin="{TemplateBinding Padding}" Content="{TemplateBinding Content}" />
                        </StackPanel>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- *********************************  ComboBox Style  ********************************* -->
    <Style x:Key="ComboBoxStyle" TargetType="{x:Type ComboBox}">
        <Setter Property="ItemContainerStyle" Value="{StaticResource ComboBoxItemStyle}" />
        <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
        <Setter Property="Background" Value="{StaticResource TextBoxBackgroundBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource TextBoxBorderBrush}" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="Padding" Value="5,3,20,3" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="MinHeight" Value="22" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="true" />
        <Setter Property="ScrollViewer.PanningMode" Value="Both" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Grid x:Name="MainGrid" igPrim:XamlHelper.SnapsToDevicePixels="True">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0" Storyboard.TargetName="ContentPresenterBorder" Storyboard.TargetProperty="(Border.BorderBrush)">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource TextBoxHoverBorderBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ThicknessAnimation Storyboard.TargetName="ContentPresenterBorder" Storyboard.TargetProperty="BorderThickness" To="1,1,1,1" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="DisabledVisualElement">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="0.6" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <ThicknessAnimation Storyboard.TargetName="ContentPresenterBorder" Storyboard.TargetProperty="BorderThickness" To="1,1,1,1" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Unfocused" />
                                <VisualState x:Name="Focused" />
                                <VisualState x:Name="FocusedDropDown">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Duration="00:00:00" Storyboard.TargetName="DropDownBorder" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>
                                                        Visible
                                                    </Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ThicknessAnimation Storyboard.TargetName="ContentPresenterBorder" Storyboard.TargetProperty="BorderThickness" To="1,1,1,1" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="EditStates">
                                <VisualState x:Name="Editable" />
                                <VisualState x:Name="Uneditable" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ValidationStates">
                                <VisualState x:Name="Valid" />
                                <VisualState x:Name="InvalidFocused" />
                                <VisualState x:Name="InvalidUnfocused" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="ContentPresenterBorder" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" BorderThickness="0" />
                        <Grid>
                            <ToggleButton IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource ComboBoxToggleButtonStyle}">
                                <Path x:Name="BtnArrow" Data="M0,0 L8,0 L4,4 z" Width="6" Height="4" Fill="{StaticResource GlyphBorderBrush}" Stretch="Fill" />
                            </ToggleButton>
                            <ContentPresenter x:Name="ContentPresenter" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" IsHitTestVisible="false" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Content="{TemplateBinding SelectionBoxItem}" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" />
                            <TextBlock IsHitTestVisible="False" Text=" " Margin="5,2,5,0" Visibility="Collapsed" />
                        </Grid>
                        <Popup x:Name="PART_Popup" Margin="1" AllowsTransparency="true" IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}" Placement="Bottom" PopupAnimation="{StaticResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Grid.ColumnSpan="2">
                            <Border x:Name="DropDownBorder" HorizontalAlignment="Stretch" Background="{StaticResource PopupBackgroundBrush}" BorderBrush="{StaticResource PopupBorderBrush}" BorderThickness="1" MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{Binding ActualWidth, ElementName=MainGrid}">
                                <ScrollViewer CanContentScroll="true" BorderThickness="0" Padding="1" Style="{StaticResource ScrollViewerStyle}" Margin="0">
                                    <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" KeyboardNavigation.DirectionalNavigation="Contained" />
                                </ScrollViewer>
                            </Border>
                        </Popup>
                        <Rectangle x:Name="DisabledVisualElement" Fill="{StaticResource DisabledBackgroundBrush}" IsHitTestVisible="false" Opacity="0" Grid.ColumnSpan="2" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsEditable" Value="true">
                <Setter Property="IsTabStop" Value="false" />
                <Setter Property="Template" Value="{StaticResource ComboBoxEditableTemplate}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- *********************************  ContextMenu Style  ********************************* -->
    <Style TargetType="ContextMenu">
        <Setter Property="Padding" Value="2" />
        <Setter Property="Background" Value="{StaticResource ContextMenuBackgroundBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource ContextMenuBorderBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ContextMenu}">
                    <Border x:Name="Border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="2" igPrim:XamlHelper.SnapsToDevicePixels="True">
                        <ScrollViewer Style="{StaticResource ScrollViewerStyle}" VerticalScrollBarVisibility="Auto">
                            <Grid Margin="{TemplateBinding Padding}">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition MaxWidth="26" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <Border Background="{StaticResource MenuIconColumnBorderBrush}" BorderThickness="0,0,1,0" HorizontalAlignment="Right" />
                                <ItemsPresenter Grid.ColumnSpan="2" />
                            </Grid>
                        </ScrollViewer>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- *********************************  Separator Style  ********************************* -->
    <Style TargetType="Separator">
        <Setter Property="BorderBrush" Value="{StaticResource MenuSeparatorBackgroundBrush}" />
        <Setter Property="Height" Value="1" />
        <Setter Property="Margin" Value="0,4,0,4" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Separator">
                    <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- *********************************  MenuItemSubmenuItem Template  ********************************* -->
    <ControlTemplate x:Key="MenuItemSubmenuItemTemplate" TargetType="MenuItem">
        <Border Name="Border" Background="{StaticResource ContextMenuBackgroundBrush}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" SharedSizeGroup="Icon" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" SharedSizeGroup="Shortcut" />
                    <ColumnDefinition Width="13" />
                </Grid.ColumnDefinitions>
                <ContentPresenter Name="Icon" Margin="6,0,6,0" VerticalAlignment="Center" ContentSource="Icon" />
                <Border Name="Check" Width="14" Height="14" Visibility="Collapsed" Margin="6,0,6,0" Background="{StaticResource CheckBoxBackgroundBrush}" BorderThickness="1" BorderBrush="{StaticResource CheckBoxBorderBrush}">
                    <Path x:Name="CheckMark" Height="8" Width="8" Stretch="Fill" Visibility="Hidden" Fill="{StaticResource CheckBoxCheckIconBackgroundBrush}" Data="M103.10625,598.38019 C103.10625,598.38019 104.35281,597.37262 104.35281,597.37262 C104.35281,597.37262 106.69083,599.42383 106.69083,599.42383 C106.69083,599.42383 110.9969,593.85394 110.9969,593.85394 C110.9969,593.85394 112.8087,593.86188 112.8087,593.86188 C112.8087,593.86188 107.73771,601.85333 107.73771,601.85333 C107.73771,601.85333 106.1218,601.8479 106.1218,601.8479 C106.1218,601.8479 103.10625,598.38019 103.10625,598.38019 z" UseLayoutRounding="False" />
                </Border>
                <ContentPresenter Name="HeaderHost" Grid.Column="1" TextBlock.Foreground="{StaticResource ForegroundBrush}" ContentSource="Header" RecognizesAccessKey="True" Margin="0,0,0,1" />
                <TextBlock x:Name="InputGestureText" Grid.Column="2" Foreground="{StaticResource ForegroundBrush}" Text="{TemplateBinding InputGestureText}" Margin="8,0,2,1" DockPanel.Dock="Right" />
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="Icon" Value="{x:Null}">
                <Setter TargetName="Icon" Property="Visibility" Value="Hidden" />
            </Trigger>
            <Trigger Property="IsChecked" Value="true">
                <Setter TargetName="CheckMark" Property="Visibility" Value="Visible" />
            </Trigger>
            <Trigger Property="IsCheckable" Value="true">
                <Setter TargetName="Check" Property="Visibility" Value="Visible" />
                <Setter TargetName="Icon" Property="Visibility" Value="Hidden" />
            </Trigger>
            <Trigger Property="IsHighlighted" Value="true">
                <Setter TargetName="Border" Property="Background" Value="{StaticResource MenuItemHoverBackgroundBrush}" />
                <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource MenuItemHoverBorderBrush}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter TargetName="Border" Property="Opacity" Value="0.6" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!-- *********************************  MenuItemSubmenuHeader Template  ********************************* -->
    <ControlTemplate x:Key="MenuItemSubmenuHeaderTemplate" TargetType="MenuItem">
        <Border Name="Border" Background="{StaticResource ContextMenuBackgroundBrush}" CornerRadius="2" BorderThickness="1" BorderBrush="{StaticResource TransparentBrush}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" SharedSizeGroup="Icon" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" SharedSizeGroup="Shortcut" />
                    <ColumnDefinition Width="13" />
                </Grid.ColumnDefinitions>
                <ContentPresenter Name="Icon" Margin="6,0,6,0" VerticalAlignment="Center" ContentSource="Icon" />
                <ContentPresenter Name="HeaderHost" Grid.Column="1" TextBlock.Foreground="{StaticResource ForegroundBrush}" ContentSource="Header" RecognizesAccessKey="True" Margin="0,0,0,1" />
                <TextBlock x:Name="InputGestureText" Grid.Column="2" Foreground="{StaticResource ForegroundBrush}" Text="{TemplateBinding InputGestureText}" Margin="5,0,2,1" DockPanel.Dock="Right" />
                <Path Grid.Column="3" HorizontalAlignment="Center" VerticalAlignment="Center" Data="M 0 0 L 0 7 L 4 3.5 Z" Fill="{StaticResource GlyphBackgroundBrush}" />
                <Popup Name="Popup" Placement="Right" HorizontalOffset="-4" IsOpen="{TemplateBinding IsSubmenuOpen}" AllowsTransparency="True" Focusable="False" PopupAnimation="Fade">
                    <Border Name="SubmenuBorder" Background="{StaticResource MenuPopupBackgroundBrush}" BorderBrush="{StaticResource MenuPopupBorderBrush}" BorderThickness="1" CornerRadius="2" Padding="1">
                        <ScrollViewer Style="{StaticResource ScrollViewerStyle}" VerticalScrollBarVisibility="Auto">
                            <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle" />
                        </ScrollViewer>
                    </Border>
                </Popup>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="Icon" Value="{x:Null}">
                <Setter TargetName="Icon" Property="Visibility" Value="Collapsed" />
            </Trigger>
            <Trigger Property="IsHighlighted" Value="true">
                <Setter TargetName="Border" Property="Background" Value="{StaticResource MenuItemHoverBackgroundBrush}" />
                <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource MenuItemHoverBorderBrush}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter TargetName="Border" Property="Opacity" Value="0.6" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!-- *********************************  MenuItemHeader Template  ********************************* -->
    <ControlTemplate x:Key="MenuItemHeaderTemplate" TargetType="MenuItem">
        <Border Name="Border" Background="{StaticResource ContextMenuBackgroundBrush}" CornerRadius="2" BorderThickness="1" BorderBrush="{StaticResource TransparentBrush}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" SharedSizeGroup="Icon" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" SharedSizeGroup="Shortcut" />
                </Grid.ColumnDefinitions>
                <ContentPresenter Name="Icon" Margin="6,0,6,0" VerticalAlignment="Center" ContentSource="Icon" />
                <ContentPresenter Name="HeaderHost" Grid.Column="1" TextBlock.Foreground="{StaticResource ForegroundBrush}" ContentSource="Header" RecognizesAccessKey="True" Margin="10,1,0,3" />
                <TextBlock x:Name="InputGestureText" Grid.Column="2" Foreground="{StaticResource ForegroundBrush}" Text="{TemplateBinding InputGestureText}" Margin="10,1,0,3" DockPanel.Dock="Right" />
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="Icon" Value="{x:Null}">
                <Setter TargetName="Icon" Property="Visibility" Value="Collapsed" />
            </Trigger>
            <Trigger Property="IsHighlighted" Value="true">
                <Setter TargetName="Border" Property="Background" Value="{StaticResource MenuItemHoverBackgroundBrush}" />
                <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource MenuItemHoverBorderBrush}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter TargetName="Border" Property="Opacity" Value="0.6" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!-- *********************************  MenuItem Style  ********************************* -->
    <Style TargetType="MenuItem">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Style.Triggers>
            <Trigger Property="Role" Value="SubmenuHeader">
                <Setter Property="Template" Value="{StaticResource MenuItemSubmenuHeaderTemplate}" />
            </Trigger>
            <Trigger Property="Role" Value="SubmenuItem">
                <Setter Property="Template" Value="{StaticResource MenuItemSubmenuItemTemplate}" />
            </Trigger>
            <Trigger Property="Role" Value="TopLevelItem">
                <Setter Property="Template" Value="{StaticResource MenuItemHeaderTemplate}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- *********************************  RadioButton Style  ********************************* -->
    <Style x:Key="RadioButtonStyleBase" TargetType="{x:Type RadioButton}">
        <Setter Property="Background" Value="{StaticResource ButtonBackgroundBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource ButtonBorderBrush}" />
        <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="MinHeight" Value="22" />
        <Setter Property="MinWidth" Value="22" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RadioButton">
                    <Grid igPrim:XamlHelper.SnapsToDevicePixels="True">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BaseShape" Storyboard.TargetProperty="Background">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonHoverBackgroundBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BaseShape" Storyboard.TargetProperty="BorderBrush">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonHoverBorderBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ButtonHighlight" Storyboard.TargetProperty="Opacity">
                                            <SplineDoubleKeyFrame KeyTime="0" Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BaseShape" Storyboard.TargetProperty="Background">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonPressedBackgroundBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BaseShape" Storyboard.TargetProperty="BorderBrush">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonPressedBorderBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="DisabledVisualElement" Storyboard.TargetProperty="Opacity">
                                            <SplineDoubleKeyFrame KeyTime="0" Value="0.6" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CheckStates">
                                <VisualState x:Name="Checked">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="checked" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unchecked" />
                                <VisualState x:Name="Indeterminate" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="FocusedVisualElement" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ValidationStates">
                                <VisualState x:Name="Valid" />
                                <VisualState x:Name="InvalidUnfocused" />
                                <VisualState x:Name="InvalidFocused" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="BaseShape" CornerRadius="3" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" />
                        <Rectangle x:Name="ButtonHighlight" Margin="1" RadiusX="2" RadiusY="2" Stroke="{StaticResource ButtonHoverHighlightBorderBrush}" StrokeThickness="1" Grid.ColumnSpan="2" Opacity="0" />
                        <Border x:Name="checked" CornerRadius="3" Background="{StaticResource ButtonPressedBackgroundBrush}" BorderBrush="{StaticResource ButtonPressedBorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Opacity="0" />
                        <!-- JM 10-14-14 TFS183020 Set IsTabStop to false. -->
                        <ContentControl x:Name="ContentControl" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" IsTabStop="False">
                            <ContentPresenter />
                        </ContentControl>
                        <Rectangle x:Name="FocusedVisualElement" Stroke="{StaticResource ButtonFocusedBorderBrush}" StrokeThickness="1" RadiusX="3" RadiusY="3" Opacity="0" />
                        <Rectangle x:Name="DisabledVisualElement" Fill="{StaticResource DisabledBackgroundBrush}" IsHitTestVisible="false" RadiusX="3" RadiusY="3" Opacity="0" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- *********************************  ExpanderToggleButton Template  ********************************* -->
    <ControlTemplate x:Key="ExpanderToggleButton" TargetType="{x:Type ToggleButton}">
        <Grid>
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CheckStates">
                    <VisualState x:Name="Checked">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.001" Storyboard.TargetName="Up_Arrow" Storyboard.TargetProperty="(UIElement.Visibility)">
                                <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                    <DiscreteObjectKeyFrame.Value>
                                        <Visibility>Collapsed</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.001" Storyboard.TargetName="Down_Arrow" Storyboard.TargetProperty="(UIElement.Visibility)">
                                <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                    <DiscreteObjectKeyFrame.Value>
                                        <Visibility>Visible</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Unchecked" />
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Rectangle Margin="0,0,0,0" x:Name="Rectangle" Fill="{StaticResource TransparentBrush}" />
            <Path x:Name="Up_Arrow" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="2,0,0,0" VerticalAlignment="Center" IsHitTestVisible="False" Fill="{StaticResource ForegroundBrush}" Data="M0,0 L0,8 L4,4 Z" Height="8" Width="4" RenderTransformOrigin="0.5,0.5" />
            <Path x:Name="Down_Arrow" Visibility="Collapsed" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="2,0,0,0" VerticalAlignment="Center" IsHitTestVisible="False" Fill="{StaticResource ForegroundBrush}" Width="6" Height="6" Data="M0.5,6.4997156 L3.3283137,3.6714226 3.6714667,3.6714429 3.6714465,3.3282926 6.4997594,0.50000001 6.500113,6.5000692 z" RenderTransformOrigin="0.5,0.5" />
        </Grid>
    </ControlTemplate>

    <!-- *********************************  ClearFilterButton Style  ********************************* -->
    <Style x:Key="{x:Static igPrim:PropertyGridFilterAreaControl.ClearFilterButtonStyleKey}" TargetType="{x:Type Button}" BasedOn="{StaticResource ButtonStyle}">
        <Setter Property="MinHeight" Value="20" />
        <Setter Property="MinWidth" Value="20" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BaseShape" Storyboard.TargetProperty="Background">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonHoverBackgroundBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BaseShape" Storyboard.TargetProperty="BorderBrush">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonHoverBorderBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ButtonHighlight" Storyboard.TargetProperty="Opacity">
                                            <SplineDoubleKeyFrame KeyTime="0" Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BaseShape" Storyboard.TargetProperty="Background">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonPressedBackgroundBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BaseShape" Storyboard.TargetProperty="BorderBrush">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonPressedBorderBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="DisabledVisualElement" Storyboard.TargetProperty="Opacity">
                                            <SplineDoubleKeyFrame KeyTime="0" Value="0.6" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused" />
                                <VisualState x:Name="Unfocused" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="BaseShape" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" />
                        <Rectangle x:Name="ButtonHighlight" Margin="1" Stroke="{StaticResource ButtonHoverHighlightBorderBrush}" StrokeThickness="1" Grid.ColumnSpan="2" Opacity="0" />
                        <Grid ToolTip="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ToolTip}" Background="{StaticResource TransparentBrush}">
                            <Path Height="8" Width="8" Fill="{StaticResource ForegroundBrush}" Data="M8,0 L9,0 9,0.97399998 10,0.97399998 10,1.974 9,1.974 9,2.9360001 9,2.974 8,2.974 8,3.9739999 7,3.9739999 7,5.9360001 8,5.9360001 8,6.9360001 9,6.9360001 9,7.0640001 9,7.974 10,7.974 10,8.974 9,8.974 9,10 8,10 8,8.974 7,8.974&#xD;&#xA;7,8.9359999 7,7.974 7,7.9359999 6,7.9359999 6,7.0380001 3.9999999,7.0380001 3.9999999,7.9359999 3,7.9359999 3,8.9359999 2,8.9359999 2,10 1,10 1,8.9359999 0,8.9359999 0,7.9359999 1,7.9359999 1,7.0640001 1,6.9360001 2,6.9360001 2,5.9360001 2.9999998,5.9360001 2.9999998,3.9739999 2,3.9739999&#xD;&#xA;2,2.974 1,2.974 1,2.9360001 1,1.974 0,1.974 0,0.97399998 1,0.97399998 1,0.93600011 1,0.038000107 2,0.038000107 2,0.93600011 3,0.93600011 3,0.97399998 3,1.974 3.9999999,1.974 3.9999999,3.013 6,3.013 6,1.974 7,1.974 7,0.97399998 8,0.97399998 z" Stretch="Fill" />
                        </Grid>
                        <Rectangle x:Name="FocusedVisualElement" Stroke="{StaticResource ButtonFocusedBorderBrush}" StrokeThickness="1" Opacity="0" />
                        <Rectangle x:Name="DisabledVisualElement" Fill="{StaticResource DisabledBackgroundBrush}" IsHitTestVisible="false" Opacity="0" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- *********************************  PropertyGridButton Style  ********************************* -->
    <Style x:Key="PropertyGridButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource ButtonStyle}">
        <Setter Property="MinHeight" Value="16" />
        <Setter Property="MinWidth" Value="16" />
        <Setter Property="Padding" Value="0" />
    </Style>

    <!-- *********************************  CategorizeButton Style  ********************************* -->
    <Style x:Key="{x:Static igPrim:PropertyGridFilterAreaControl.CategorizeButtonStyleKey}" TargetType="{x:Type RadioButton}" BasedOn="{StaticResource RadioButtonStyleBase}">
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Grid ToolTip="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ToolTip}" Background="{StaticResource TransparentBrush}">
                        <Path Fill="{StaticResource ForegroundBrush}" Height="16" Width="14" Margin="0,1,0,0" Data="M0,0 L2,0 L2,2 L0,2 z M3,0 L16,0 L16,2 L3,2 z M2,3 L11,3 L11,4 L2,4 z M2,5 L11,5 L11,6 L2,6 z M0,8 L2,8 L2,10 L0,10 z M3,8 L16,8 L16,10 L3,10 z M2,11 L11,11 L11,12 L2,12 z M2,13 L11,13 L11,14 L2,14 z" />
                    </Grid>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- *********************************  SortButton Style  ********************************* -->
    <Style x:Key="{x:Static igPrim:PropertyGridFilterAreaControl.SortButtonStyleKey}" TargetType="{x:Type RadioButton}" BasedOn="{StaticResource RadioButtonStyleBase}">
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Grid ToolTip="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ToolTip}" Background="{StaticResource TransparentBrush}">
                        <Path Fill="{StaticResource ForegroundBrush}" Height="16" Width="16" Data="M1.52717,9.32491 L6.8777,9.32491 L6.8777,10.1126 L2.68391,14.7433 L2.23039,15.2123 L7,15.2123 L7,16 L1.09403,16 L1.09403,15.1804 L4.92093,10.9049 C5.19271,10.6013 5.45089,10.3373 5.69549,10.1126 L1.52717,10.1126 z M12.5,1 L13.5,1 L13.5,11 L16.5,11 L13,15 L9.5,11 L12.5,11 z M3.37845,0.701199 C3.28333,1.12921 3.14915,1.55418 2.97589,1.97612 L2.15549,3.93402 L4.68805,3.93402 L3.90841,2.08539 C3.6706,1.52382 3.49396,1.06242 3.37845,0.701199 z M2.86888,0 L3.93389,0 L6.9913,6.67509 L5.86515,6.67509 L4.99379,4.65344 L1.87012,4.65344 L1.04971,6.67509 L0,6.67509 z" Stretch="Fill" UseLayoutRounding="False" />
                    </Grid>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- *********************************  PropertyGridFilterAreaControl Style  ********************************* -->
    <Style TargetType="igPrim:PropertyGridFilterAreaControl">
        <Setter Property="Background" Value="{StaticResource TransparentBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="igPrim:PropertyGridFilterAreaControl">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>

                        <RadioButton x:Name="PART_CategorizeButton" Grid.Column="0" Margin="2" GroupName="Sorting" IsChecked="{Binding Path=PropertyGrid.IsCategorized, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" IsThreeState="False" ToolTip="{Binding Source={StaticResource toolTipCategorizeButton}, Path=Value}" Style="{DynamicResource {x:Static igPrim:PropertyGridFilterAreaControl.CategorizeButtonStyleKey}}">
                            <ig:Commanding.Commands>
                                <ig:CommandSourceCollection>
                                    <igPrim:PropertyGridCommandSource EventName="Checked" CommandType="SortByCategory" />
                                </ig:CommandSourceCollection>
                            </ig:Commanding.Commands>
                        </RadioButton>
                        <RadioButton x:Name="PART_SortButton" Grid.Column="1" Margin="2" IsThreeState="False" GroupName="Sorting" IsChecked="{Binding Path=PropertyGrid.IsCategorized, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource InverseBooleanConverter}, Mode=OneWay}" ToolTip="{Binding Source={StaticResource toolTipSortButton}, Path=Value}" Style="{DynamicResource {x:Static igPrim:PropertyGridFilterAreaControl.SortButtonStyleKey}}">
                            <ig:Commanding.Commands>
                                <ig:CommandSourceCollection>
                                    <igPrim:PropertyGridCommandSource EventName="Checked" CommandType="SortAlphabetically" />
                                </ig:CommandSourceCollection>
                            </ig:Commanding.Commands>
                        </RadioButton>
                        <TextBox x:Name="PART_FilterTextBox" Grid.Column="2" Margin="2" Padding="4,2,22,2" ToolTip="{Binding Source={StaticResource toolTipFilterTextBox}, Path=Value}" Text="{Binding Path=PropertyGrid.FilterText, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Stretch" Style="{StaticResource TextBoxStyle}" />
                        <Button x:Name="PART_ClearFilterButton" Grid.Column="2" HorizontalAlignment="Right" Height="20" Width="20" Margin="0,0,3,0" ToolTip="{Binding Source={StaticResource toolTipClearFilterButton}, Path=Value}" Style="{DynamicResource {x:Static igPrim:PropertyGridFilterAreaControl.ClearFilterButtonStyleKey}}">
                            <ig:Commanding.Commands>
                                <ig:CommandSourceCollection>
                                    <igPrim:PropertyGridCommandSource EventName="Click" CommandType="ClearFilterText" />
                                </ig:CommandSourceCollection>
                            </ig:Commanding.Commands>
                        </Button>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- *********************************  PropertyGridDescriptionAreaControl Style  ********************************* -->
    <Style TargetType="igPrim:PropertyGridDescriptionAreaControl">
        <Setter Property="Background" Value="{StaticResource PropertyGridDescriptionAreaBackgroundBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="igPrim:PropertyGridDescriptionAreaControl">
                    <Grid Background="{TemplateBinding Background}">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>

                        <StackPanel Grid.Row="0" Orientation="Horizontal">
                            <TextBlock Text="{Binding Path=SelectedPropertyName, RelativeSource={RelativeSource TemplatedParent}}" FontWeight="Bold" Margin="4,2,2,2" Foreground="{StaticResource ForegroundBrush}" />
                            <TextBlock Text="{Binding Path=SelectedPropertyTypeName, RelativeSource={RelativeSource TemplatedParent}}" Margin="4,2,2,2" Foreground="{StaticResource ForegroundBrush}" />
                        </StackPanel>

                        <TextBlock Grid.Row="1" Text="{Binding Path=SelectedPropertyDescription, RelativeSource={RelativeSource TemplatedParent}}" Margin="17,0,2,4" Foreground="{StaticResource ForegroundBrush}" TextWrapping="Wrap"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- *********************************  PropertyGridCategoryItemView Style  ********************************* -->
    <Style TargetType="igPrim:PropertyGridCategoryItemView">
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type igPrim:PropertyGridCategoryItemView}">
                    <Border Background="{StaticResource PropertyGridCategoryBackgroundBrush}" HorizontalAlignment="Stretch">

                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="SelectedStates">
                                <VisualState x:Name="Selected">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="focusRect">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="UnSelected" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>

                        <Grid VerticalAlignment="Center" HorizontalAlignment="Stretch">
                            <Grid Margin="2,3">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="16" />
                                        <ColumnDefinition Width="*" />
                                    </Grid.ColumnDefinitions>
                                    <!-- JM 09-21-16 TFS224438 - Initialize the focus rect's Opacity to zero, and update it in a ControlTemplate DataTrigger below when the control gets focus. -->
                                    <Rectangle x:Name="focusRect" Grid.Column="1" Fill="{StaticResource TransparentBrush}" Visibility="Collapsed" StrokeThickness="1" Stroke="{StaticResource ForegroundBrush}" StrokeDashArray="1 2" HorizontalAlignment="Left" MinWidth="{Binding ElementName=displayName, Path=ActualWidth}" Opacity="0"/>
                                    <TextBlock x:Name="displayName" Grid.Column="1" Text="{Binding DisplayName}" Foreground="{StaticResource ForegroundBrush}" HorizontalAlignment="Left" FontWeight="Bold" TextTrimming="CharacterEllipsis" />
                                    <ToggleButton Grid.Column="0" Grid.ColumnSpan="2" Background="{StaticResource TransparentBrush}" HorizontalContentAlignment="Left" IsChecked="{Binding CategoryItem.IsExpanded, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}" Template="{StaticResource ExpanderToggleButton}" />
                                </Grid>
                            </Grid>
                        </Grid>
                    </Border>

                    <!-- JM 09-21-16 TFS224438 - Show the focus rect when the control gets keyboard focus. -->
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding Path=IsKeyboardFocusWithin, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ig:XamPropertyGrid}}}" Value="True">
                            <Setter TargetName="focusRect" Property="Opacity" Value="1"/>
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- *********************************  PropertyGridPropertyItemView Style  ********************************* -->
    <Style TargetType="igPrim:PropertyGridPropertyItemView">
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type igPrim:PropertyGridPropertyItemView}">
                    <Border Background="{StaticResource PropertyItemBackgroundBrush}" HorizontalAlignment="Stretch" Margin="{Binding IsCategorizedItem, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource PropertyItemMarginConverter}}">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="SelectedStates">
                                <VisualState x:Name="Selected">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Rectangle.Fill)" Storyboard.TargetName="highlightArea">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource PropertyItemSelectedBackgroundBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="UnSelected" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="MouseOver" />
                                <VisualState x:Name="Normal" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>

                        <Grid VerticalAlignment="Center" HorizontalAlignment="Stretch">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="{Binding PropertyGrid.NameColumnWidth, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource GridLengthConverter}}" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>

                            <!-- Item name column -->
                            <Border x:Name="PART_DisplayNameBorder" BorderThickness="1,0,1,1" BorderBrush="{StaticResource PropertyItemNameBorderBrush}">
                                <Grid>
                                    <Grid Margin="{Binding PropertyItem.NestingLevel, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource ExpandableObjectMarginConverter}}">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="15" />
                                            <ColumnDefinition Width="*" />
                                        </Grid.ColumnDefinitions>

                                        <Rectangle x:Name="highlightArea" Grid.ColumnSpan="2" VerticalAlignment="Top" Height="{Binding ElementName=displayName, Path=ActualHeight}" />
                                        <TextBlock x:Name="displayName" Padding="2,3" Grid.Column="1" Text="{Binding DisplayName}" Foreground="{StaticResource ForegroundBrush}" HorizontalAlignment="Stretch" VerticalAlignment="Top" TextTrimming="CharacterEllipsis" />
                                        <ToggleButton Grid.Column="0" Grid.ColumnSpan="2" Background="{StaticResource TransparentBrush}" HorizontalContentAlignment="Left" IsChecked="{Binding PropertyItem.IsExpanded, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}" Template="{StaticResource ExpanderToggleButton}" Visibility="{Binding PropertyItem.IsExpandableResolved, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BoolToVisibilityConverter}}" />
                                    </Grid>
                                </Grid>
                            </Border>

                            <!-- Item value/editor column -->
                            <Border Grid.Column="1" BorderThickness="0,0,1,1" BorderBrush="{StaticResource PropertyItemEditorBorderBrush}" Background="{StaticResource TransparentBrush}">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="Auto" />
                                    </Grid.ColumnDefinitions>

                                    <!-- JM 10-10-16 TFS224559. Add a border around the editor that sets its BorderBrush if the property is a bound DependencyProperty. -->
                                    <Border BorderThickness="1"
                                            BorderBrush="{Binding IsBoundDependencyProperty, Converter={StaticResource BoundPropertyBorderBrushConverter}, ConverterParameter={StaticResource XamPropertyGrid_ItemEditorBoundPropertyBorderBrush}}">
                                        <ContentControl x:Name="PART_EditorSiteContentControl" Content="{TemplateBinding EditorElement}" VerticalAlignment="Center" HorizontalContentAlignment="Stretch" IsTabStop="False" />
                                    </Border>

                                    <Button x:Name="PART_RemoveListEntryButton" Grid.Column="1" Width="16" Height="16" Margin="2,3" HorizontalAlignment="Right" IsTabStop="False" Focusable="False" ToolTip="{Binding Source={StaticResource toolTipRemoveListEntryButton}, Path=Value}" Style="{DynamicResource {x:Static igPrim:PropertyGridPropertyItemView.RemoveListEntryButtonStyleKey}}" Visibility="{Binding Path=PropertyItem.IsRemoveableFromList, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BoolToVisibilityConverter}}">
                                        <ig:Commanding.Commands>
                                            <ig:CommandSourceCollection>
                                                <igPrim:PropertyGridPropertyItemCommandSource EventName="Click" CommandType="RemoveListEntry" ParameterBinding="{Binding}" />
                                            </ig:CommandSourceCollection>
                                        </ig:Commanding.Commands>
                                    </Button>
                                    <Button x:Name="PART_OptionsMenuButton" Grid.Column="2" MinHeight="8" MinWidth="8" Width="8" Height="8" Margin="4,7,2,2" VerticalAlignment="Top" IsTabStop="False" Focusable="False" HorizontalAlignment="Right">
                                        <Button.Template>
                                            <ControlTemplate TargetType="Button">
                                                <Grid>
                                                    <Rectangle Fill="{StaticResource PropertyGridValueResetButtonCanResetBackgroundBrush}" Stroke="{StaticResource PropertyGridValueResetButtonBorderBrush}" StrokeThickness="1" Cursor="Hand" Visibility="{Binding Path=CanResetValue, Converter={StaticResource BoolToVisibilityConverter}}" ToolTip="{Binding Source={StaticResource toolTipPropertyValueResetButtonCanReset}, Path=Value}" />
                                                    <Rectangle Fill="{StaticResource PropertyGridValueResetButtonCannotResetBackgroundBrush}" Stroke="{StaticResource PropertyGridValueResetButtonBorderBrush}" StrokeThickness="1" Visibility="{Binding Path=CanResetValue, Converter={StaticResource InverseBoolToVisibilityConverter}}" ToolTip="{Binding Source={StaticResource toolTipPropertyValueResetButtonCannotReset}, Path=Value}" />

                                                    <!-- JM 10-10-16 TFS224559. Add a Rectangle that is shown if the property is a bound DependencyProperty.  
                                                    Use the same brush we use above for the border around the edit area when the property is a bound DependencyProperty. -->
                                                    <Rectangle Fill="{StaticResource XamPropertyGrid_ItemEditorBoundPropertyBorderBrush}"
                                                               Stroke="{StaticResource PropertyGridValueResetButtonBorderBrush}"
                                                               StrokeThickness="1"
                                                               Cursor="Hand"
                                                               Visibility="{Binding Path=IsBoundDependencyProperty, Converter={StaticResource BoolToVisibilityConverter}}"
                                                               ToolTip="{Binding Source={StaticResource toolTipPropertyValueResetButtonCanResetBinding}, Path=Value}"/>
                                                </Grid>
                                            </ControlTemplate>
                                        </Button.Template>
                                        <ig:Commanding.Commands>
                                            <ig:CommandSourceCollection>
                                                <igPrim:PropertyGridPropertyItemCommandSource EventName="Click" CommandType="ShowOptionsMenu" ParameterBinding="{Binding}" />
                                            </ig:CommandSourceCollection>
                                        </ig:Commanding.Commands>
                                    </Button>
                                </Grid>
                            </Border>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- *********************************  AddListEntryButton Style  ********************************* -->
    <Style x:Key="{x:Static igPrim:PropertyGridListEditorControl.AddListEntryButtonStyleKey}" TargetType="{x:Type Button}" BasedOn="{StaticResource PropertyGridButtonStyle}">
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Grid ToolTip="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ToolTip}" Background="{StaticResource TransparentBrush}">
                        <Path HorizontalAlignment="Center" VerticalAlignment="Center" Height="1" Width="7" IsHitTestVisible="False" Stretch="Fill" Opacity="1" Fill="{StaticResource ForegroundBrush}" Data="M0,4 L7,4 L7,5 L0,5 z" />
                        <Path HorizontalAlignment="Center" VerticalAlignment="Center" Height="7" Width="1" IsHitTestVisible="False" Stretch="Fill" Opacity="1" Fill="{StaticResource ForegroundBrush}" Data="M3,0 L4,0 L4,7 L3,7 z" />
                    </Grid>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- *********************************  RemoveListEntryButton Style  ********************************* -->
    <Style x:Key="{x:Static igPrim:PropertyGridPropertyItemView.RemoveListEntryButtonStyleKey}" TargetType="{x:Type Button}" BasedOn="{StaticResource PropertyGridButtonStyle}">
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Grid ToolTip="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ToolTip}" Background="{StaticResource TransparentBrush}">
                        <Path HorizontalAlignment="Center" VerticalAlignment="Center" Height="1" Width="8" IsHitTestVisible="False" Stretch="Fill" Opacity="1" Fill="{StaticResource ForegroundBrush}" Data="M0,0 L8,0 L8,1 L0,1 z" />
                    </Grid>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- *********************************  PropertyGridListEditorControl Style  ********************************* -->
    <Style TargetType="igPrim:PropertyGridListEditorControl">
        <Setter Property="Background" Value="{StaticResource TransparentBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="igPrim:PropertyGridListEditorControl">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <!-- JM TFS231830 02-02-17 -->
                            <!--<ColumnDefinition Width="Auto" />
              <ColumnDefinition Width="*" />-->
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>

                        <!-- JM TFS231830 02-02-17 -->
                        <!--<TextBlock Margin="5,2,22,0" Text="{Binding PropertyItem.ListValueDescription, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" Foreground="{StaticResource ForegroundBrush}" />-->
                        <TextBlock Margin="5,2,0,0" Text="{Binding PropertyItem.ListValueDescription, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" Foreground="{StaticResource ForegroundBrush}" />
                        <Button x:Name="PART_AddListEntryButton" Grid.Column="1" Width="16" Height="16" Margin="2,3" HorizontalAlignment="Right" ToolTip="{Binding Source={StaticResource toolTipAddListEntryButton}, Path=Value}" Style="{DynamicResource {x:Static igPrim:PropertyGridListEditorControl.AddListEntryButtonStyleKey}}" Visibility="{Binding Path=PropertyItem.CanAddEntryToList, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BoolToVisibilityConverter}}">
                            <ig:Commanding.Commands>
                                <ig:CommandSourceCollection>
                                    <igPrim:PropertyGridPropertyItemCommandSource EventName="Click" CommandType="AddListEntry" ParameterBinding="{Binding}" />
                                </ig:CommandSourceCollection>
                            </ig:Commanding.Commands>
                        </Button>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- *********************************  CreateExpandableObjectButton Style  ********************************* -->
    <Style x:Key="{x:Static igPrim:PropertyGridExpandableObjectEditorControl.CreateExpandableObjectButtonStyleKey}" TargetType="{x:Type Button}" BasedOn="{StaticResource PropertyGridButtonStyle}">
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Grid ToolTip="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ToolTip}" Background="{StaticResource TransparentBrush}">
                        <Path HorizontalAlignment="Center" VerticalAlignment="Center" Height="1" Width="7" IsHitTestVisible="False" Stretch="Fill" Opacity="1" Fill="{StaticResource ForegroundBrush}" Data="M0,4 L7,4 L7,5 L0,5 z" />
                        <Path HorizontalAlignment="Center" VerticalAlignment="Center" Height="7" Width="1" IsHitTestVisible="False" Stretch="Fill" Opacity="1" Fill="{StaticResource ForegroundBrush}" Data="M3,0 L4,0 L4,7 L3,7 z" />
                    </Grid>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- *********************************  PropertyGridExpandableObjectEditorControl Style  ********************************* -->
    <Style TargetType="igPrim:PropertyGridExpandableObjectEditorControl">
        <Setter Property="Background" Value="{StaticResource TransparentBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="igPrim:PropertyGridExpandableObjectEditorControl">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>

                        <TextBlock Foreground="{StaticResource ForegroundBrush}" Margin="5,0,22,0" Text="{Binding PropertyItem.ExpandableObjectValueDescription, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"/>

                        <Button x:Name="PART_CreateExpandableObjectButton" Grid.Column="1" Width="16" Height="16" Margin="2,3" HorizontalAlignment="Right" ToolTip="{Binding Source={StaticResource toolTipCreateExpandableObjectButton}, Path=Value}" Style="{DynamicResource {x:Static igPrim:PropertyGridExpandableObjectEditorControl.CreateExpandableObjectButtonStyleKey}}" Visibility="{Binding Path=PropertyItem.CanCreateExpandableObjectInstance, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BoolToVisibilityConverter}}">
                            <ig:Commanding.Commands>
                                <ig:CommandSourceCollection>
                                    <igPrim:PropertyGridPropertyItemCommandSource EventName="Click" CommandType="CreateExpandableObject" ParameterBinding="{Binding}" />
                                </ig:CommandSourceCollection>
                            </ig:Commanding.Commands>
                        </Button>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- *********************************  PropertyGrid Style  ********************************* -->
    <Style TargetType="ig:XamPropertyGrid">
        <Setter Property="Background" Value="{StaticResource PropertyGridBackgroundBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource PropertyGridBorderBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ig:XamPropertyGrid">
                    <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" igPrim:XamlHelper.SnapsToDevicePixels="True">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition />
                                <RowDefinition Height="5" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>

                            <!-- Filter area. -->
                            <Grid Grid.Row="0" Margin="4" Visibility="{TemplateBinding FilterAreaVisibility}">
                                <igPrim:PropertyGridFilterAreaControl x:Name="PART_PropertyGridFilterAreaControl" />
                            </Grid>

                            <!-- Properties area. -->
                            <Border Grid.Row="1" BorderThickness="0,2,0,0" BorderBrush="{StaticResource PropertyGridDescriptionAreaBackgroundBrush}">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="Auto" />
                                    </Grid.ColumnDefinitions>

                                    <!-- Panel that lays out all the items-->
                                    <igPrim:PropertyGridItemLayoutPanel x:Name="PART_ItemLayoutPanel" Grid.Column="0" Background="{StaticResource PropertyItemLayoutPanelBackgroundBrush}">
                                        <igPrim:PropertyGridItemLayoutPanel.Resources>
                                            <!-- Settings for the CheckBox control used as a property editor. -->
                                            <Style BasedOn="{StaticResource CheckBoxStyle}" TargetType="CheckBox">
                                                <Setter Property="VerticalContentAlignment" Value="Top" />
                                                <Setter Property="Margin" Value="6,3,0,3" />
                                            </Style>

                                            <!-- Settings for the ListBox control used as a property editor. -->
                                            <Style BasedOn="{StaticResource ListBoxStyle}" TargetType="{x:Type ListBox}" />

                                            <!-- Settings for the ComboBox control used as a property editor. -->
                                            <Style TargetType="ComboBox" BasedOn="{StaticResource ComboBoxStyle}" />

                                            <!-- Settings for the TextBox control used as a property editor. -->
                                            <Style TargetType="TextBox" BasedOn="{StaticResource TextBoxStyle}">
                                                <Setter Property="MinHeight" Value="22" />
                                                <Setter Property="BorderThickness" Value="0" />
                                            </Style>

                                            <!-- Settings for the XamDateTimeInput control used as a property editor. -->
                                            <Style TargetType="ig:XamDateTimeInput" BasedOn="{StaticResource XamDateTimeInputStyle}">
                                                <Setter Property="Padding" Value="2,0" />
                                                <Setter Property="BorderThickness" Value="0" />
                                                <Setter Property="DropDownButtonDisplayMode" Value="MouseOver" />
                                            </Style>
                                        </igPrim:PropertyGridItemLayoutPanel.Resources>
                                    </igPrim:PropertyGridItemLayoutPanel>

                                    <ScrollBar x:Name="PART_VerticalScrollBar" Orientation="Vertical" Grid.Column="1" Visibility="{TemplateBinding ScrollBarVisibility}" Style="{StaticResource ScrollBarStyle}" />

                                    <!-- Invisible thumb for resizing the Name column -->
                                    <Thumb x:Name="PART_NameColumnDragThumb" HorizontalAlignment="Left" Width="6" Margin="-4,0,0,0" Cursor="SizeWE">
                                        <Thumb.Template>
                                            <ControlTemplate>
                                                <Border Background="{StaticResource TransparentBrush}" />
                                            </ControlTemplate>
                                        </Thumb.Template>
                                    </Thumb>
                                </Grid>
                            </Border>

                            <!-- Description area. -->
                            <GridSplitter x:Name="PART_DescriptionAreaSplitter" Grid.Row="2" Height="5" Background="{StaticResource PropertyGridDescriptionAreaSplitterBackgroundBrush}" HorizontalAlignment="Stretch" Visibility="{TemplateBinding DescriptionAreaVisibility}" />

                            <Grid Grid.Row="3" Visibility="{TemplateBinding DescriptionAreaVisibility}">
                                <igPrim:PropertyGridDescriptionAreaControl x:Name="PART_PropertyGridDescriptionAreaControl" />
                            </Grid>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- *************************************************************************************************** -->
    <!-- *********************************  PropertyGridBrushEditor  *************************************** -->
    <!-- *************************************************************************************************** -->

    <!-- *********************************  SPECIFIC COLORS  ********************************* -->
    <Color x:Key="Color_1003">#FFFFFF00</Color>
    <Color x:Key="Color_1004">#ff00ff00</Color>
    <Color x:Key="Color_1006">#ff00ffff</Color>
    <Color x:Key="Color_1007">#ff0000ff</Color>
    <Color x:Key="Color_1008">#FFFF00FF</Color>
    <Color x:Key="Color_1009">#FFFF0000</Color>

    <!-- *********************************  BRUSHES  ********************************* -->
    <!--  Alpha Slider Brushes -->
    <LinearGradientBrush x:Key="PropertyGridBrushEditorAlphaSliderThumbBackgroundBrush" EndPoint="0.56,0.99" StartPoint="0.56,0.01">
        <GradientStop Color="{StaticResource Color_029}" Offset="1" />
        <GradientStop Color="{StaticResource Color_032}" />
    </LinearGradientBrush>
    <SolidColorBrush x:Key="PropertyGridBrushEditorAlphaSliderThumbBorderBrush" Color="{StaticResource Color_027}" />
    <LinearGradientBrush x:Key="PropertyGridBrushEditorAlphaSliderThumbHoverBackgroundBrush" StartPoint="0,0" EndPoint="0,1">
        <GradientStop Offset="0" Color="{StaticResource Color_018}" />
        <GradientStop Offset="0.23" Color="{StaticResource Color_017}" />
        <GradientStop Offset="0.75" Color="{StaticResource Color_017}" />
        <GradientStop Offset="1" Color="{StaticResource Color_019}" />
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="PropertyGridBrushEditorAlphaSliderThumbHoverBorderBrush" StartPoint="0.5,0" EndPoint="0.5,1">
        <GradientStop Offset="1" Color="{StaticResource Color_013}" />
        <GradientStop Color="{StaticResource Color_014}" Offset="0.05" />
    </LinearGradientBrush>
    <SolidColorBrush x:Key="PropertyGridBrushEditorAlphaSliderThumbHoverInnerBorderBrush" Color="{StaticResource Color_019}" />
    <LinearGradientBrush x:Key="PropertyGridBrushEditorAlphaSliderThumbPressedBackgroundBrush" StartPoint="0,0 " EndPoint="0,1 ">
        <GradientStop Offset="1" Color="{StaticResource Color_017}" />
        <GradientStop Color="{StaticResource Color_016}" />
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="PropertyGridBrushEditorAlphaSliderThumbPressedBorderBrush" StartPoint="0.5,0" EndPoint="0.5,1">
        <GradientStop Offset="0" Color="{StaticResource Color_012}" />
        <GradientStop Offset="1" Color="{StaticResource Color_013}" />
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="PropertyGridBrushEditorAlphaSliderTrackBackgroundBrush" StartPoint="0.82,1" EndPoint="0.82,0.25">
        <GradientStop Color="{StaticResource Color_026}" Offset="0.631" />
        <GradientStop Color="{StaticResource Color_032}" Offset="0.63" />
    </LinearGradientBrush>
    <SolidColorBrush x:Key="PropertyGridBrushEditorAlphaSliderThumbFocusedBorderBrush" Color="{StaticResource Color_013}" />
    <LinearGradientBrush x:Key="PropertyGridBrushEditorAlphaSliderSelectionRangeBackgroundBrush" StartPoint="0.5,0" EndPoint="0.5,1">
        <GradientStop Offset="1" Color="{StaticResource Color_013}" />
        <GradientStop Color="{StaticResource Color_014}" Offset="0.05" />
    </LinearGradientBrush>

    <!-- Expander Brushes -->
    <LinearGradientBrush x:Key="PropertyGridBrushEditorExpanderButtonBackgroundBrush" StartPoint="0.5,0" EndPoint="0.5,1">
        <GradientStop Color="{StaticResource Color_030}" Offset="1" />
        <GradientStop Color="{StaticResource Color_032}" />
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="PropertyGridBrushEditorExpanderButtonBorderBrush" StartPoint="0.5,0" EndPoint="0.5,1">
        <GradientStop Color="{StaticResource Color_029}" />
        <GradientStop Color="{StaticResource Color_027}" Offset="1" />
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="PropertyGridBrushEditorExpanderButtonHoverBackgroundBrush" StartPoint="0,0" EndPoint="0,1">
        <GradientStop Offset="0" Color="{StaticResource Color_018}" />
        <GradientStop Offset="0.23" Color="{StaticResource Color_017}" />
        <GradientStop Offset="0.75" Color="{StaticResource Color_017}" />
        <GradientStop Offset="1" Color="{StaticResource Color_019}" />
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="PropertyGridBrushEditorExpanderButtonHoverBorderBrush" StartPoint="0.5,0" EndPoint="0.5,1">
        <GradientStop Offset="1" Color="{StaticResource Color_013}" />
        <GradientStop Color="{StaticResource Color_014}" />
    </LinearGradientBrush>
    <SolidColorBrush x:Key="PropertyGridBrushEditorExpanderButtonHoverHiglightBorderBrush" Color="{StaticResource Color_019}" />
    <LinearGradientBrush x:Key="PropertyGridBrushEditorExpanderButtonPressedBackgroundBrush" StartPoint="0,0 " EndPoint="0,1 ">
        <GradientStop Offset="1" Color="{StaticResource Color_017}" />
        <GradientStop Color="{StaticResource Color_016}" />
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="PropertyGridBrushEditorExpanderButtonPressedBorderBrush" StartPoint="0.5,0" EndPoint="0.5,1">
        <GradientStop Offset="0" Color="{StaticResource Color_012}" />
        <GradientStop Offset="1" Color="{StaticResource Color_013}" />
    </LinearGradientBrush>
    <SolidColorBrush x:Key="PropertyGridBrushEditorExpanderDisabledForegroundBrush" Color="{StaticResource Color_024}" Opacity="0.5" />

    <!-- PropertyGridBrushEditor Brushes -->
    <SolidColorBrush x:Key="PropertyGridBrushEditorBackgroundBrush" Color="{StaticResource Color_005}" />
    <SolidColorBrush x:Key="PropertyGridBrushEditorGradientStopsBorderBrush" Color="{StaticResource Color_027}" />
    <SolidColorBrush x:Key="PropertyGridBrushEditorColorSampleBorderBrush" Color="{StaticResource Color_027}" />
    <SolidColorBrush x:Key="PropertyGridBrushEditorGradientThumbOuterBackgroundBrush" Color="{StaticResource Color_005}" />
    <SolidColorBrush x:Key="PropertyGridBrushEditorGradientThumbInnerBorderBrush" Color="{StaticResource Color_001}" />
    <SolidColorBrush x:Key="PropertyGridBrushEditorCurrentColorBorderBrush" Color="{StaticResource Color_027}" />
    <LinearGradientBrush x:Key="PropertyGridBrushEditorColorShadePickerWhiteBackgroundBrush" StartPoint="0,0" EndPoint="1,0">
        <GradientStop Offset="0" Color="{StaticResource Color_005}" />
        <GradientStop Offset="1" Color="{StaticResource Color_033}" />
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="PropertyGridBrushEditorColorShadePickerBlackBackgroundBrush" StartPoint="0,1" EndPoint="0, 0">
        <GradientStop Offset="0" Color="{StaticResource Color_001}" />
        <GradientStop Offset="1" Color="{StaticResource Color_034}" />
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="PropertyGridBrushEditorColorShadePickerHueBackgroundBrush" StartPoint="0,0" EndPoint="0,1" igPrim:XamlHelper.IsExcludedFromWash="True">
        <GradientStop Offset="0.00" Color="{StaticResource Color_1009}" />
        <GradientStop Offset="0.17" Color="{StaticResource Color_1003}" />
        <GradientStop Offset="0.33" Color="{StaticResource Color_1004}" />
        <GradientStop Offset="0.50" Color="{StaticResource Color_1006}" />
        <GradientStop Offset="0.66" Color="{StaticResource Color_1007}" />
        <GradientStop Offset="0.83" Color="{StaticResource Color_1008}" />
        <GradientStop Offset="1.00" Color="{StaticResource Color_1009}" />
    </LinearGradientBrush>
    <SolidColorBrush x:Key="PropertyGridBrushEditorColorShadePickerColorSamplingBackgroundBrush" Color="{StaticResource Color_1009}" />
    <SolidColorBrush x:Key="PropertyGridBrushEditorColorShadePickerHueRectangleBorderBrush" Color="{StaticResource Color_033}" />
    <SolidColorBrush x:Key="PropertyGridBrushEditorColorShadePickerShadingCanvasBorderBrush" Color="{StaticResource Color_027}" />
    <LinearGradientBrush x:Key="PropertyGridBrushEditorLinearGradienBackgroundBrush" EndPoint="1,0.5" StartPoint="0,0.5">
        <GradientStop Color="{StaticResource Color_002}" Offset="1" />
        <GradientStop Color="{StaticResource Color_005}" />
    </LinearGradientBrush>
    <RadialGradientBrush x:Key="PropertyGridBrushEditorRadialGradienBackgroundBrush">
        <GradientStop Color="{StaticResource Color_002}" Offset="1" />
        <GradientStop Color="{StaticResource Color_005}" />
    </RadialGradientBrush>

    <!--  Tree Brushes -->
    <SolidColorBrush x:Key="TreeViewBackgroundBrush" Color="{StaticResource Color_033}" />
    <SolidColorBrush x:Key="TreeViewBorderBrush" Color="{StaticResource Color_033}" />

    <!-- TreeItem Brushes -->
    <SolidColorBrush x:Key="TreeViewItemBackgroundBrush" Color="{StaticResource Color_033}" />
    <SolidColorBrush x:Key="TreeViewItemBorderBrush" Color="{StaticResource Color_033}" />

    <SolidColorBrush x:Key="TreeViewItemHoverBackgroundBrush" Color="{StaticResource Color_030}" />
    <SolidColorBrush x:Key="TreeViewItemHoverBorderBrush" Color="{StaticResource Color_027}" />

    <LinearGradientBrush x:Key="TreeViewItemSelectedBackgroundBrush" StartPoint="0,0 " EndPoint="0,1 ">
        <GradientStop Offset="1" Color="{StaticResource Color_015}" />
        <GradientStop Color="{StaticResource Color_014}" />
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="TreeViewItemSelectedBorderBrush" StartPoint="0.5,0" EndPoint="0.5,1">
        <GradientStop Offset="0" Color="{StaticResource Color_012}" />
        <GradientStop Offset="1" Color="{StaticResource Color_013}" />
    </LinearGradientBrush>

    <SolidColorBrush x:Key="TreeViewItemActiveBackgroundBrush" Color="{StaticResource Color_033}" />
    <LinearGradientBrush x:Key="TreeViewItemActiveBorderBrush" StartPoint="0.5,0" EndPoint="0.5,1">
        <GradientStop Offset="0" Color="{StaticResource Color_012}" />
        <GradientStop Offset="1" Color="{StaticResource Color_013}" />
    </LinearGradientBrush>

    <!-- ExpansionIndicator Brushes -->
    <SolidColorBrush x:Key="ExpansionIndicatorGlyphBackgroundBrush" Color="{StaticResource Color_005}" />
    <SolidColorBrush x:Key="ExpansionIndicatorGlyphBorderBrush" Color="{StaticResource Color_026}" />
    <SolidColorBrush x:Key="ExpansionIndicatorGlyphExpandedBackgroundBrush" Color="{StaticResource Color_024}" />
    <SolidColorBrush x:Key="ExpansionIndicatorGlyphExpandedBorderBrush" Color="{StaticResource Color_026}" />

    <!-- *********************************  CONVERTERS  ********************************* -->
    <igPrim:ByteDoubleConverter x:Key="byteDoubleConverter" />
    <igPrim:ByteIntConverter x:Key="byteIntConverter" />
    <igPrim:BoolToVisibilityConverter x:Key="boolToVisibilityConverter" />
    <igControls:NotBoolToVisibilityConverter x:Key="notBoolToVisibilityConverter" />

    <!-- *********************************  STRING RESOURCES  ********************************* -->
    <igPrim:PropertyGridResourceString x:Key="toolTipNoBrushButton" ResourceName="ToolTip_NoBrushButton" />
    <igPrim:PropertyGridResourceString x:Key="toolTipSolidBrushButton" ResourceName="ToolTip_SolidBrushButton" />
    <igPrim:PropertyGridResourceString x:Key="toolTipGradientBrushButton" ResourceName="ToolTip_GradientBrushButton" />
    <igPrim:PropertyGridResourceString x:Key="toolTipInitialColorRectangle" ResourceName="ToolTip_InitialColorRectangle" />
    <igPrim:PropertyGridResourceString x:Key="toolTipCurrentColorRectangle" ResourceName="ToolTip_CurrentColorRectangle" />
    <igPrim:PropertyGridResourceString x:Key="toolTipRedValueTextBox" ResourceName="ToolTip_RedValueTextBox" />
    <igPrim:PropertyGridResourceString x:Key="toolTipGreenValueTextBox" ResourceName="ToolTip_GreenValueTextBox" />
    <igPrim:PropertyGridResourceString x:Key="toolTipBlueValueTextBox" ResourceName="ToolTip_BlueValueTextBox" />
    <igPrim:PropertyGridResourceString x:Key="toolTipAlphaValueTextBox" ResourceName="ToolTip_AlphaValueTextBox" />
    <igPrim:PropertyGridResourceString x:Key="toolTipLinearGradientButton" ResourceName="ToolTip_LinearGradientButton" />
    <igPrim:PropertyGridResourceString x:Key="toolTipRadialGradientButton" ResourceName="ToolTip_RadialGradientButton" />
    <igPrim:PropertyGridResourceString x:Key="toolTipReverseStopsButton" ResourceName="ToolTip_ReverseStopsButton" />
    <igPrim:PropertyGridResourceString x:Key="toolTipVerticalLinearGradientButton" ResourceName="ToolTip_VerticalLinearGradientButton" />
    <igPrim:PropertyGridResourceString x:Key="toolTipHorizontalLinearGradientButton" ResourceName="ToolTip_HorizontalLinearGradientButton" />
    <igPrim:PropertyGridResourceString x:Key="miscTextNone" ResourceName="MiscText_None" />
    <igPrim:PropertyGridResourceString x:Key="miscTextR" ResourceName="MiscText_R" />
    <igPrim:PropertyGridResourceString x:Key="miscTextG" ResourceName="MiscText_G" />
    <igPrim:PropertyGridResourceString x:Key="miscTextB" ResourceName="MiscText_B" />
    <igPrim:PropertyGridResourceString x:Key="miscTextA" ResourceName="MiscText_A" />

    <!-- JM 10-04-16 TFS224563 - Added. -->
    <igPrim:PropertyGridResourceString x:Key="toolTipSelectBrushResourceButton" ResourceName="ToolTip_SelectBrushResourceButton" />

    <!-- *********************************  NumericRangeSlider Style  ********************************* -->
    <Style TargetType="ig:XamSliderBase" x:Key="NumericRangeSliderStyle">
        <Setter Property="Orientation" Value="Horizontal" />
        <Setter Property="HorizontalTickMarksTemplate" Value="{StaticResource HorizontalTick}" />
        <Setter Property="VerticalTickMarksTemplate" Value="{StaticResource VerticalTick}" />
        <Setter Property="IsMouseWheelEnabled" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ig:XamSliderBase">
                    <Grid x:Name="RootElement" Background="{TemplateBinding Background}">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="OrientationStates">
                                <VisualState x:Name="Horizontal" />
                                <VisualState x:Name="Vertical">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HorizontalSlider" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="VerticalSlider" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>

                        <Border x:Name="HorizontalSlider" BorderBrush="{StaticResource PropertyGridBrushEditorGradientStopsBorderBrush}" BorderThickness="1">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <RepeatButton x:Name="HorizontalDecrease" Visibility="{TemplateBinding DecreaseButtonVisibility}" Grid.Column="0" Style="{StaticResource IncrementButtonStyle}" igPrim:XamlHelper.Focusable="False">
                                    <ig:Commanding.Command>
                                        <ig:XamSliderBaseCommandSource EventName="Click" CommandType="SmallDecrease" />
                                    </ig:Commanding.Command>
                                    <Rectangle Width="8" Height="2" Fill="{StaticResource SliderGlyphBackgroundBrush}" />
                                </RepeatButton>
                                <RepeatButton x:Name="HorizontalIncrease" Visibility="{TemplateBinding IncreaseButtonVisibility}" Grid.Column="2" Style="{StaticResource IncrementButtonStyle}" igPrim:XamlHelper.Focusable="False">
                                    <ig:Commanding.Command>
                                        <ig:XamSliderBaseCommandSource EventName="Click" CommandType="SmallIncrease" />
                                    </ig:Commanding.Command>
                                    <Path Width="8" Height="8" Data="M 3,0 C3,0 3,3 3,3 3,3 0,3 0,3 0,3 0,5 0,5 0,5 3,5 3,5 3,5 3,8 3,8 3,8 5,8 5,8 5,8 5,5 5,5 5,5 8,5 8,5 8,5 8,3 8,3 8,3 5,3 5,3 5,3 5,0 5,0 5,0 3,0 3,0 z" Stretch="Fill" Fill="{StaticResource SliderGlyphBackgroundBrush}" />
                                </RepeatButton>
                                <Grid x:Name="HorizontalSlidersGrid" Grid.Column="1" Margin="5">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="*" />
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="*" />
                                    </Grid.RowDefinitions>
                                </Grid>
                                <Grid x:Name="HorizontalTickMarks" Grid.Column="1" Background="{StaticResource TransparentBrush}" />
                                <Grid x:Name="HorizontalTrack" Grid.Column="1" Background="{StaticResource TransparentBrush}" Height="16">
                                    <Border Background="{StaticResource TransparentBrush}" Height="2" />
                                    <Canvas x:Name="HorizontalTrackFills" />
                                    <Canvas x:Name="HorizontalThumbs" />
                                </Grid>
                            </Grid>
                        </Border>

                        <Border x:Name="VerticalSlider" BorderBrush="{StaticResource PropertyGridBrushEditorGradientStopsBorderBrush}" BorderThickness="1" Visibility="Collapsed" Margin="0,8,0,0">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="*" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>
                                <RepeatButton x:Name="VerticalDecrease" Visibility="{TemplateBinding DecreaseButtonVisibility}" Grid.Row="2" Style="{StaticResource IncrementButtonStyle}" igPrim:XamlHelper.Focusable="False">
                                    <ig:Commanding.Command>
                                        <ig:XamSliderBaseCommandSource EventName="Click" CommandType="SmallDecrease" />
                                    </ig:Commanding.Command>
                                    <Rectangle Width="8" Height="2" Fill="{StaticResource SliderGlyphBackgroundBrush}" />
                                </RepeatButton>
                                <RepeatButton x:Name="VerticalIncrease" Visibility="{TemplateBinding IncreaseButtonVisibility}" Grid.Row="0" Style="{StaticResource IncrementButtonStyle}" igPrim:XamlHelper.Focusable="False">
                                    <ig:Commanding.Command>
                                        <ig:XamSliderBaseCommandSource EventName="Click" CommandType="SmallIncrease" />
                                    </ig:Commanding.Command>
                                    <Path Width="8" Height="8" Data="M 3,0 C3,0 3,3 3,3 3,3 0,3 0,3 0,3 0,5 0,5 0,5 3,5 3,5 3,5 3,8 3,8 3,8 5,8 5,8 5,8 5,5 5,5 5,5 8,5 8,5 8,5 8,3 8,3 8,3 5,3 5,3 5,3 5,0 5,0 5,0 3,0 3,0 z" Stretch="Fill" Fill="{StaticResource SliderGlyphBackgroundBrush}" />
                                </RepeatButton>
                                <Grid x:Name="VerticalSlidersGrid" Grid.Row="1" Margin="5">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="*" />
                                    </Grid.ColumnDefinitions>
                                </Grid>
                                <Grid x:Name="VerticalTickMarks" Grid.Row="1" Background="{StaticResource TransparentBrush}" Margin="0,4" />
                                <Grid x:Name="VerticalTrack" Grid.Row="1" Background="{StaticResource TransparentBrush}" Width="16" Margin="0,4">
                                    <Border Background="{StaticResource TransparentBrush}" Width="2" />
                                    <Canvas x:Name="VerticalTrackFills" Margin="0,4" />
                                    <Canvas x:Name="VerticalThumbs" />
                                </Grid>
                            </Grid>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- *********************************  SliderNumericThumb Style  ********************************* -->
    <Style TargetType="ig:XamSliderNumericThumb" x:Key="NumericThumbStyle">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ig:XamSliderNumericThumb">
                    <Grid x:Name="RootElement">
                        <ToolTipService.ToolTip>
                            <ToolTip x:Name="ThumbToolTip" ContentTemplate="{TemplateBinding ToolTipTemplate}" Visibility="{TemplateBinding ToolTipVisibility}" />
                        </ToolTipService.ToolTip>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="EnabledStates">
                                <VisualState x:Name="Enabled"></VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="DisabledElement" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Unfocused"></VisualState>
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="FocusElement" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="InnerBlackBorder" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ActiveStates">
                                <VisualState x:Name="Inactive" />
                                <VisualState x:Name="Active" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="HoverStates">
                                <VisualState x:Name="NoHover" />
                                <VisualState x:Name="Hover" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid x:Name="HorizontalThumb" Margin="-6,10,6,0">
                            <Grid x:Name="HorizontalThumbContent" Height="17" Width="12">
                                <Path x:Name="BaseBg" Stretch="Fill" Opacity="1" Data="M1,16 L11,16 L11,5 L6,1 L1,5 z" Fill="{TemplateBinding Background}" Height="15" Width="10" />
                                <Path x:Name="InnerWhiteBorder" Stretch="Fill" Opacity="1" Data="M0,17 L12,17 L12,5 L6,0 L0,5 z" Stroke="{StaticResource PropertyGridBrushEditorGradientThumbOuterBackgroundBrush}" StrokeThickness="2" Height="17" HorizontalAlignment="Left" VerticalAlignment="Top" Width="12" />
                                <Path x:Name="InnerBlackBorder" Stretch="Fill" Opacity="1" Data="M1,16 L11,16 L11,5 L6,1 L1,5 z" Stroke="{StaticResource PropertyGridBrushEditorGradientThumbInnerBorderBrush}" StrokeThickness="1" Height="15" Width="10" />
                                <Path x:Name="FocusElement" Stretch="Fill" Opacity="1" Data="M0,17 L12,17 L12,5 L6,0 L0,5 z" Stroke="{StaticResource PropertyGridBrushEditorGradientThumbInnerBorderBrush}" StrokeThickness="1" Height="17" HorizontalAlignment="Left" VerticalAlignment="Top" Width="12" Visibility="Collapsed" />
                                <Path x:Name="DisabledElement" Stretch="Fill" Opacity="0.5" Data="M 2.39,0 C2.39,0 5.60,0 5.60,0 6.92,0 8,1.17 8,2.62 8,2.62 8,11.51 8,11.51 8,11.51 3.90,15 3.90,15 3.90,15 0,11.51 0,11.51 0,11.51 0,2.62 0,2.62 0,1.17 1.07,0 2.39,0 z" Stroke="White" StrokeThickness="1" Height="15" HorizontalAlignment="Left" Margin="0,0,0,0" VerticalAlignment="Top" Width="10" Visibility="Collapsed" />
                            </Grid>
                        </Grid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- *********************************  Expander Down Style  ********************************* -->
    <Style x:Key="PropertyGridBrushEditorExpanderDownHeaderStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Padding="{TemplateBinding Padding}">
                        <Grid Background="{StaticResource TransparentBrush}" SnapsToDevicePixels="False">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="19" />
                            </Grid.ColumnDefinitions>
                            <Rectangle Grid.Column="1" x:Name="rectangle" Fill="{StaticResource PropertyGridBrushEditorExpanderButtonBackgroundBrush}" HorizontalAlignment="Center" Height="19" Stroke="{StaticResource PropertyGridBrushEditorExpanderButtonBorderBrush}" VerticalAlignment="Center" Width="19" />
                            <Rectangle Grid.Column="1" x:Name="rectanglehighlight" Stroke="{StaticResource PropertyGridBrushEditorExpanderButtonHoverHiglightBorderBrush}" StrokeThickness="1" Margin="1" Opacity="0" Height="17" Width="17" />
                            <Path Grid.Column="1" x:Name="arrow" Data="M0,0 L8,0 L4,4 z" Width="6" Height="4" Fill="{StaticResource GlyphBorderBrush}" Stretch="Fill" HorizontalAlignment="Center" VerticalAlignment="Center" />
                            <ContentPresenter Grid.Column="0" HorizontalAlignment="Stretch" RecognizesAccessKey="True" SnapsToDevicePixels="True" VerticalAlignment="Center" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Data" TargetName="arrow" Value="M3.4,-4.4 L6.8,3.9 3.9566912E-07,3.9 z" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Fill" TargetName="rectangle" Value="{StaticResource PropertyGridBrushEditorExpanderButtonHoverBackgroundBrush}" />
                            <Setter Property="Stroke" TargetName="rectangle" Value="{StaticResource PropertyGridBrushEditorExpanderButtonHoverBorderBrush}" />
                            <Setter Property="Opacity" TargetName="rectanglehighlight" Value="1" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Fill" TargetName="rectangle" Value="{StaticResource PropertyGridBrushEditorExpanderButtonPressedBackgroundBrush}" />
                            <Setter Property="Stroke" TargetName="rectangle" Value="{StaticResource PropertyGridBrushEditorExpanderButtonPressedBorderBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- *********************************  Expander Style  ********************************* -->
    <Style x:Key="PropertyGridBrushEditorExpanderStyle" TargetType="{x:Type Expander}">
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Expander}">
                    <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="3" SnapsToDevicePixels="true">
                        <DockPanel>
                            <!-- JM 10-14-14 TFS183020 Set IsTabStop to false. -->
                            <ToggleButton x:Name="HeaderSite" ContentTemplate="{TemplateBinding HeaderTemplate}" ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}" Content="{TemplateBinding Header}" DockPanel.Dock="Top" Foreground="{TemplateBinding Foreground}" FontWeight="{TemplateBinding FontWeight}" FontStyle="{TemplateBinding FontStyle}" FontStretch="{TemplateBinding FontStretch}" FontSize="{TemplateBinding FontSize}" FontFamily="{TemplateBinding FontFamily}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Margin="1" MinWidth="0" MinHeight="0" Padding="{TemplateBinding Padding}" Style="{StaticResource PropertyGridBrushEditorExpanderDownHeaderStyle}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" IsTabStop="False"/>
                            <ContentPresenter x:Name="ExpandSite" DockPanel.Dock="Bottom" Focusable="false" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="1,5" Visibility="Collapsed" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                        </DockPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsExpanded" Value="true">
                            <Setter Property="Visibility" TargetName="ExpandSite" Value="Visible" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{StaticResource PropertyGridBrushEditorExpanderDisabledForegroundBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- *********************************  SliderRepeatButton Style  ********************************* -->
    <Style x:Key="SliderRepeatButtonStyle" TargetType="{x:Type RepeatButton}">
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Rectangle Fill="{StaticResource TransparentBrush}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- *********************************  Slider Horizontal Thumb Style  ********************************* -->
    <Style x:Key="HSliderThumbStyle" TargetType="{x:Type Thumb}">
        <Setter Property="Background" Value="{StaticResource PropertyGridBrushEditorAlphaSliderThumbBackgroundBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource PropertyGridBrushEditorAlphaSliderThumbBorderBrush}" />
        <Setter Property="Height" Value="22" />
        <Setter Property="Width" Value="9" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Grid SnapsToDevicePixels="True">
                        <Grid x:Name="HorizontalThumbContent" Height="13" Width="9">
                            <Path x:Name="ThumbBackground" Data="M0.5,0.5 L8.5,0.5 L8.5,9.9374847 L4.5208335,13.31249 L0.5,9.9374847 z" Fill="{TemplateBinding Background}" Stroke="{TemplateBinding BorderBrush}" Height="13" Width="9" Stretch="Fill" UseLayoutRounding="False" />
                            <Path x:Name="ThumbInnerStroke" Data="M0.5,0.5 L8.5,0.5 L8.5,9.9374847 L4.5208335,12.972734 L0.5,9.9374847 z" Stroke="{StaticResource PropertyGridBrushEditorAlphaSliderThumbHoverInnerBorderBrush}" Height="11" Width="7" Stretch="Fill" UseLayoutRounding="False" Opacity="0" />
                            <Path x:Name="ThumbFocused" Data="M0.5,0.5 L8.5,0.5 L8.5,9.9374847 L4.5208335,13.31249 L0.5,9.9374847 z" Fill="{StaticResource PropertyGridBrushEditorAlphaSliderThumbPressedBackgroundBrush}" Stroke="{StaticResource PropertyGridBrushEditorAlphaSliderThumbPressedBorderBrush}" Height="13" Width="9" Stretch="Fill" UseLayoutRounding="False" Visibility="Collapsed" />
                            <Path x:Name="ThumbDisabled" Data="M0.5,0.5 L8.5,0.5 L8.5,9.9374847 L4.5208335,13.31249 L0.5,9.9374847 z" Fill="{StaticResource DisabledBackgroundBrush}" Height="13" Width="9" Stretch="Fill" UseLayoutRounding="False" Opacity="0" />
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="ThumbInnerStroke" Property="Opacity" Value="0.6" />
                            <Setter TargetName="ThumbBackground" Property="Fill" Value="{StaticResource PropertyGridBrushEditorAlphaSliderThumbHoverBackgroundBrush}" />
                            <Setter TargetName="ThumbBackground" Property="Stroke" Value="{StaticResource PropertyGridBrushEditorAlphaSliderThumbHoverBorderBrush}" />
                        </Trigger>
                        <Trigger Property="IsMouseCaptured" Value="True">
                            <Setter TargetName="ThumbBackground" Property="Fill" Value="{StaticResource PropertyGridBrushEditorAlphaSliderThumbPressedBackgroundBrush}" />
                            <Setter TargetName="ThumbBackground" Property="Stroke" Value="{StaticResource PropertyGridBrushEditorAlphaSliderThumbPressedBorderBrush}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="ThumbDisabled" Property="Opacity" Value="0.55" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- *********************************  Slider Horizontal Thumb Up Style  ********************************* -->
    <Style x:Key="HSliderUpThumbStyle" TargetType="{x:Type Thumb}" BasedOn="{StaticResource HSliderThumbStyle}">
        <Setter Property="RenderTransform">
            <Setter.Value>
                <TransformGroup>
                    <ScaleTransform ScaleY="-1" ScaleX="1" />
                    <SkewTransform AngleY="0" AngleX="0" />
                    <RotateTransform Angle="0" />
                    <TranslateTransform />
                </TransformGroup>
            </Setter.Value>
        </Setter>
        <Setter Property="RenderTransformOrigin" Value="0.5,0.5" />
    </Style>

    <!-- *********************************  Slider Horizontal Thumb Down Style  ********************************* -->
    <Style x:Key="HSliderDownThumbStyle" TargetType="{x:Type Thumb}" BasedOn="{StaticResource HSliderThumbStyle}" />

    <!-- *********************************  Slider Style  ********************************* -->
    <Style x:Key="SliderStyle" TargetType="{x:Type Slider}">
        <Setter Property="Stylus.IsPressAndHoldEnabled" Value="false" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Slider}">
                    <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" MinHeight="{TemplateBinding MinHeight}" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <TickBar x:Name="TopTick" Fill="{TemplateBinding Foreground}" Height="4" Placement="Top" Grid.Row="0" Visibility="Collapsed" />
                            <TickBar x:Name="BottomTick" Fill="{TemplateBinding Foreground}" Height="4" Placement="Bottom" Grid.Row="2" Visibility="Collapsed" />
                            <Border x:Name="TrackBackground" Background="{StaticResource PropertyGridBrushEditorAlphaSliderTrackBackgroundBrush}" Height="2" Grid.Row="1" VerticalAlignment="center">
                                <Canvas Margin="-6,0">
                                    <Rectangle x:Name="PART_SelectionRange" Fill="{StaticResource PropertyGridBrushEditorAlphaSliderSelectionRangeBackgroundBrush}" Height="2" Visibility="Hidden" />
                                </Canvas>
                            </Border>
                            <Track x:Name="PART_Track" Grid.Row="1">
                                <Track.DecreaseRepeatButton>
                                    <RepeatButton Command="{x:Static Slider.DecreaseLarge}" Style="{StaticResource SliderRepeatButtonStyle}" />
                                </Track.DecreaseRepeatButton>
                                <Track.IncreaseRepeatButton>
                                    <RepeatButton Command="{x:Static Slider.IncreaseLarge}" Style="{StaticResource SliderRepeatButtonStyle}" />
                                </Track.IncreaseRepeatButton>
                                <Track.Thumb>
                                    <Thumb x:Name="Thumb" Style="{StaticResource HSliderThumbStyle}" />
                                </Track.Thumb>
                            </Track>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="TickPlacement" Value="TopLeft">
                            <Setter Property="Visibility" TargetName="TopTick" Value="Visible" />
                            <Setter Property="Style" TargetName="Thumb" Value="{StaticResource HSliderUpThumbStyle}" />
                            <Setter Property="Margin" TargetName="TrackBackground" Value="5,2,5,0" />
                        </Trigger>
                        <Trigger Property="TickPlacement" Value="BottomRight">
                            <Setter Property="Visibility" TargetName="BottomTick" Value="Visible" />
                            <Setter Property="Style" TargetName="Thumb" Value="{StaticResource HSliderDownThumbStyle}" />
                            <Setter Property="Margin" TargetName="TrackBackground" Value="5,0,5,2" />
                        </Trigger>
                        <Trigger Property="TickPlacement" Value="Both">
                            <Setter Property="Visibility" TargetName="TopTick" Value="Visible" />
                            <Setter Property="Visibility" TargetName="BottomTick" Value="Visible" />
                        </Trigger>
                        <Trigger Property="IsSelectionRangeEnabled" Value="true">
                            <Setter Property="Visibility" TargetName="PART_SelectionRange" Value="Visible" />
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="true">
                            <Setter Property="Foreground" TargetName="Thumb" Value="{StaticResource PropertyGridBrushEditorAlphaSliderThumbFocusedBorderBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- *********************************  ExpandCollapseToggle Style  ********************************* -->
    <Style x:Key="ExpandCollapseToggleStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Width" Value="16" />
        <Setter Property="Height" Value="16" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Background="Transparent" Height="16" Width="16" Padding="4,5,4,3">
                        <!--Padding="5,5,5,5"-->
                        <Path x:Name="ExpandPath" Data="M0,0 L0,6 L6,0 z" Fill="{StaticResource ExpansionIndicatorGlyphBackgroundBrush}" Stroke="{StaticResource ExpansionIndicatorGlyphBorderBrush}">
                            <Path.RenderTransform>
                                <RotateTransform Angle="135" CenterY="3" CenterX="3" />
                            </Path.RenderTransform>
                        </Path>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="RenderTransform" TargetName="ExpandPath">
                                <Setter.Value>
                                    <RotateTransform Angle="180" CenterY="3" CenterX="3" />
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Fill" TargetName="ExpandPath" Value="{StaticResource ExpansionIndicatorGlyphExpandedBackgroundBrush}" />
                            <Setter Property="Stroke" TargetName="ExpandPath" Value="{StaticResource ExpansionIndicatorGlyphExpandedBorderBrush}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="IsChecked" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Fill" TargetName="ExpandPath" Value="{StaticResource ExpansionIndicatorGlyphExpandedBackgroundBrush}" />
                            <Setter Property="Stroke" TargetName="ExpandPath" Value="{StaticResource ExpansionIndicatorGlyphExpandedBorderBrush}" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- *********************************  TreeViewItemFocusVisual Style  ********************************* -->
    <Style x:Key="TreeViewItemFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- *********************************  TreeViewItem Style  ********************************* -->
    <Style x:Key="TreeViewItemStyle" TargetType="{x:Type TreeViewItem}">
        <Setter Property="Background" Value="{StaticResource TreeViewItemBackgroundBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource TreeViewItemBorderBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
        <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="Padding" Value="4,0" />
        <Setter Property="FocusVisualStyle" Value="{StaticResource TreeViewItemFocusVisual}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TreeViewItem}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition MinWidth="19" Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition />
                        </Grid.RowDefinitions>
                        <ToggleButton x:Name="Expander" ClickMode="Press" IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource ExpandCollapseToggleStyle}" />
                        <Border x:Name="Bd" CornerRadius="1" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.Column="1" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="PART_Header" ContentSource="Header" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Border>
                        <ItemsPresenter x:Name="ItemsHost" Grid.ColumnSpan="2" Grid.Column="1" Grid.Row="1" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsExpanded" Value="false">
                            <Setter Property="Visibility" TargetName="ItemsHost" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="HasItems" Value="false">
                            <Setter Property="Visibility" TargetName="Expander" Value="Hidden" />
                        </Trigger>
                        <Trigger Property="IsSelected" Value="true">
                            <Setter Property="Background" TargetName="Bd" Value="{StaticResource TreeViewItemSelectedBackgroundBrush}" />
                            <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource TreeViewItemSelectedBorderBrush}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="Bd" Value="{StaticResource TreeViewItemHoverBackgroundBrush}" />
                            <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource TreeViewItemHoverBorderBrush}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="true" />
                                <Condition Property="IsSelectionActive" Value="false" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" TargetName="Bd" Value="Transparent" />
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" TargetName="Bd" Value="0.3" />
                            <Setter Property="Opacity" TargetName="Expander" Value="0.3" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- *********************************  TreeView Style  ********************************* -->
    <Style x:Key="TreeViewStyle" TargetType="{x:Type TreeView}">
        <Setter Property="Background" Value="{StaticResource TreeViewBackgroundBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource TreeViewBorderBrush}" />
        <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Padding" Value="1" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.PanningMode" Value="Both" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TreeView}">
                    <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
                        <ScrollViewer x:Name="_tv_scrollviewer_" Background="{TemplateBinding Background}" CanContentScroll="false" Focusable="false" HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}" Padding="{TemplateBinding Padding}"
                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}" Style="{StaticResource ScrollViewerStyle}">
                            <ItemsPresenter />
                        </ScrollViewer>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" TargetName="Bd" Value="0.5" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- *********************************  PropertyGridBrushEditorControl Style  ********************************* -->
    <Style TargetType="igPrim:PropertyGridBrushEditorControl">
        <Setter Property="Background" Value="{StaticResource PropertyGridBrushEditorBackgroundBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="igPrim:PropertyGridBrushEditorControl">
                    <Expander x:Name="expander" IsExpanded="{Binding Path=IsExpanded, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource PropertyGridBrushEditorExpanderStyle}" igPrim:XamlHelper.SnapsToDevicePixels="True">
                        <Expander.HeaderTemplate>
                            <DataTemplate>
                                <Grid>
                                    <Border BorderThickness="1" BorderBrush="{StaticResource PropertyGridBrushEditorColorSampleBorderBrush}" HorizontalAlignment="Stretch" Margin="0,0,1,0">
                                        <Grid>
                                            <TextBlock Text="{Binding Source={StaticResource miscTextNone}, Path=Value}" Foreground="{StaticResource ForegroundBrush}" Margin="3,0,0,2" Height="16" />
                                            <!-- JM 10-04-16 TFS224563 - Changed the Visibility binding to use a new TransparentPreviewBrushVisibility property. -->
                                            <Rectangle Fill="{Binding TransparentPreviewBrush, RelativeSource={RelativeSource AncestorType={x:Type igPrim:PropertyGridBrushEditorControl}}}" Height="18" Visibility="{Binding Path=TransparentPreviewBrushVisibility, RelativeSource={RelativeSource AncestorType={x:Type igPrim:PropertyGridBrushEditorControl}}}" />
                                            <Rectangle Fill="{Binding Path=SelectedBrush, RelativeSource={RelativeSource AncestorType={x:Type igPrim:PropertyGridBrushEditorControl}}}" Height="18" />
                                        </Grid>
                                    </Border>
                                </Grid>
                            </DataTemplate>
                        </Expander.HeaderTemplate>
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition x:Name="brushTypeRow" Height="Auto" />
                                <RowDefinition x:Name="samplingRow" Height="*" />
                                <RowDefinition x:Name="gradientStopsRow" Height="Auto" />
                            </Grid.RowDefinitions>

                            <!-- Brush Types Area -->
                            <Grid Grid.Row="0">
                                <StackPanel Orientation="Horizontal" HorizontalAlignment="Stretch">
                                    <RadioButton IsThreeState="False" Width="55" Height="23" Margin="0,0,2,0" Style="{StaticResource RadioButtonStyleBase}" IsChecked="{Binding Path=IsNullBrush, RelativeSource={RelativeSource TemplatedParent}}" ToolTip="{Binding Source={StaticResource toolTipNoBrushButton}, Path=Value}">
                                        <Grid Margin="0,0,0,1">
                                            <Path Width="15" Height="9" Fill="{StaticResource ForegroundBrush}" Data="M0,0 L15,0 L0,10 z" Stretch="Fill" />
                                            <Path Width="15" Height="9" Fill="{StaticResource ForegroundBrush}" Data="M15,0 L15,10 L0,10 z" Stretch="Fill" Margin="2,2,0,0" />
                                        </Grid>
                                    </RadioButton>
                                    <RadioButton IsThreeState="False" Width="55" Height="23" Margin="2,0,2,0" Style="{StaticResource RadioButtonStyleBase}" IsChecked="{Binding Path=IsSolidColorBrush, RelativeSource={RelativeSource TemplatedParent}}" ToolTip="{Binding Source={StaticResource toolTipSolidBrushButton}, Path=Value}">
                                        <Grid>
                                            <Rectangle Width="16" Height="11" Stroke="{StaticResource ForegroundBrush}" StrokeThickness="1" />
                                            <Rectangle Width="12" Height="7" Fill="{StaticResource ForegroundBrush}" StrokeThickness="0" />
                                        </Grid>
                                    </RadioButton>
                                    <RadioButton IsThreeState="False" Width="55" Height="23" Margin="2,0,2,0" Style="{StaticResource RadioButtonStyleBase}" IsChecked="{Binding Path=IsGradientBrush, RelativeSource={RelativeSource TemplatedParent}}" ToolTip="{Binding Source={StaticResource toolTipGradientBrushButton}, Path=Value}">
                                        <Grid>
                                            <Rectangle Width="16" Height="11" Stroke="{StaticResource ForegroundBrush}" StrokeThickness="1" />
                                            <Rectangle Width="12" Height="7" Fill="{StaticResource PropertyGridBrushEditorLinearGradienBackgroundBrush}" StrokeThickness="0" />
                                        </Grid>
                                    </RadioButton>

                                    <!-- JM 10-04-16 TFS224563 - Added a button to select a brush resource. -->
                                    <RadioButton IsThreeState="False" Width="55" Height="23" Margin="2,0,0,0" Style="{StaticResource RadioButtonStyleBase}" IsChecked="{Binding Path=IsSelectingBrushResource, RelativeSource={RelativeSource TemplatedParent}}" ToolTip="{Binding Source={StaticResource toolTipSelectBrushResourceButton}, Path=Value}" Visibility="{Binding Path=SelectBrushResourceButtonVisibility, RelativeSource={RelativeSource TemplatedParent}}">
                                        <Grid>
                                            <Border Width="13" Height="8" Margin="3,0,0,0" BorderBrush="{StaticResource ForegroundBrush}" BorderThickness="0,1,1,0" Background="Transparent"/>
                                            <Border Width="13" Height="8" Margin="0,3,0,0" BorderBrush="{StaticResource ForegroundBrush}" BorderThickness="1" Background="Transparent"/>
                                        </Grid>
                                    </RadioButton>
                                </StackPanel>
                            </Grid>

                            <!-- Color Sampling Area-->
                            <!-- JM 10-04-16 TFS224563 - Changed the Visibility binding to use a new ColorSamplingAreaVisibility property. -->
                            <Grid Grid.Row="1" Margin="0,4,0,0" Visibility="{Binding Path=ColorSamplingAreaVisibility, RelativeSource={RelativeSource TemplatedParent}}">
                                <Grid.RowDefinitions>
                                    <RowDefinition x:Name="shadingCanvasRow" Height="*" />
                                    <RowDefinition x:Name="currentColorRow" Height="Auto" />
                                </Grid.RowDefinitions>

                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="24" />
                                    <ColumnDefinition Width="60" />
                                </Grid.ColumnDefinitions>

                                <!-- SHADING GRID and CANVAS -->
                                <Grid x:Name="ShadingGrid">
                                    <Rectangle x:Name="ColorSamplingRectangle" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Fill="{StaticResource PropertyGridBrushEditorColorShadePickerColorSamplingBackgroundBrush}" Margin="0,1,0,0" />
                                    <Rectangle x:Name="rectWhiteGradient" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Fill="{StaticResource PropertyGridBrushEditorColorShadePickerWhiteBackgroundBrush}" Margin="0,1,0,0" />
                                    <Rectangle x:Name="rectBlackGradient" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Fill="{StaticResource PropertyGridBrushEditorColorShadePickerBlackBackgroundBrush}" Margin="0,1,0,0" />
                                    <Canvas x:Name="ShadingCanvas" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="{StaticResource TransparentBrush}">
                                        <!-- JoeM 09-21-16 TFS224436 Change size to 12x12, set IsHitTestVisible = true and set Background to 'almost transparent' so it is hit-testable but not visible. -->
                                        <Canvas x:Name="LightnessSelector" Width="12" Height="12" Canvas.Left="100" Canvas.Top="96" IsHitTestVisible="True" Background="#01FFFFFF">
                                            <Ellipse Width="12" Height="12" IsHitTestVisible="True" Stroke="{StaticResource LightForegroundBrush}" StrokeThickness="3" />
                                            <Ellipse Width="12" Height="12" IsHitTestVisible="True" Stroke="{StaticResource ForegroundBrush}" StrokeThickness="1" />
                                        </Canvas>
                                    </Canvas>
                                    <!-- JoeM 09-21-16 TFS224436 Set IsHitTestVisible = false. -->
                                    <Border BorderBrush="{StaticResource PropertyGridBrushEditorColorShadePickerShadingCanvasBorderBrush}" BorderThickness="1,1,0,0" IsHitTestVisible="False"/>
                                </Grid>

                                <!-- PREVIOUS AND CURRENT COLOR -->
                                <Border x:Name="currentColor" BorderBrush="{StaticResource PropertyGridBrushEditorCurrentColorBorderBrush}" BorderThickness="1" Grid.Row="1">
                                    <Grid>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="20" />
                                        </Grid.RowDefinitions>

                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*" />
                                            <ColumnDefinition Width="*" />
                                        </Grid.ColumnDefinitions>

                                        <Grid.Resources>
                                            <igPrim:NullableColorConverter x:Key="ColorConverter" />
                                        </Grid.Resources>

                                        <Rectangle Grid.ColumnSpan="2" Fill="{Binding TransparentPreviewBrush, RelativeSource={RelativeSource TemplatedParent}}" />

                                        <Border BorderThickness="0,0,1,0" BorderBrush="{StaticResource PropertyGridBrushEditorCurrentColorBorderBrush}">
                                            <Rectangle x:Name="InitialColorRectangle" Cursor="Hand" ToolTip="{Binding Source={StaticResource toolTipInitialColorRectangle}, Path=Value}">
                                                <Rectangle.Fill>
                                                    <SolidColorBrush Color="{Binding InitialColor, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource ColorConverter}}" />
                                                </Rectangle.Fill>
                                            </Rectangle>
                                        </Border>

                                        <Rectangle Grid.Column="1" ToolTip="{Binding Source={StaticResource toolTipCurrentColorRectangle}, Path=Value}">
                                            <Rectangle.Fill>
                                                <SolidColorBrush Color="{Binding CurrentColor, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource ColorConverter}}" />
                                            </Rectangle.Fill>
                                        </Rectangle>
                                    </Grid>
                                </Border>

                                <!-- HUE Area -->
                                <Grid Grid.Column="1">
                                    <Rectangle x:Name="HueRectangle" Stroke="{StaticResource PropertyGridBrushEditorColorShadePickerHueRectangleBorderBrush}" Fill="{StaticResource PropertyGridBrushEditorColorShadePickerHueBackgroundBrush}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" />
                                    <Canvas x:Name="HueCanvas" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="{StaticResource TransparentBrush}" IsHitTestVisible="False">
                                        <Grid x:Name="HueSelector" VerticalAlignment="Top" Margin="0,-4,0,0" Width="{Binding ElementName=HueCanvas,Path=ActualWidth}">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto" />
                                                <ColumnDefinition Width="*" />
                                                <ColumnDefinition Width="Auto" />
                                            </Grid.ColumnDefinitions>
                                            <Grid Width="5" Height="8" Grid.Column="0">
                                                <Path Stretch="Fill" StrokeLineJoin="Round" Data="F1 M 276.761,316L 262.619,307.835L 262.619,324.165L 276.761,316 Z " Fill="{StaticResource ForegroundBrush}" />
                                            </Grid>
                                            <Grid Width="5" Height="8" Grid.Column="2">
                                                <Path Stretch="Fill" RenderTransformOrigin=".5,.5" StrokeLineJoin="Round" Data="F1 M 276.761,316L 262.619,307.835L 262.619,324.165L 276.761,316 Z " Fill="{StaticResource ForegroundBrush}">
                                                    <Path.RenderTransform>
                                                        <RotateTransform Angle="180" />
                                                    </Path.RenderTransform>
                                                </Path>
                                            </Grid>
                                        </Grid>
                                    </Canvas>
                                </Grid>

                                <!-- Individual Color Values Area-->
                                <Grid Grid.Row="0" Grid.RowSpan="2" Grid.Column="2">
                                    <Grid.Resources>
                                        <Style TargetType="{x:Type TextBlock}">
                                            <Setter Property="Margin" Value="10,0,6,0" />
                                            <Setter Property="TextAlignment" Value="Center" />
                                            <Setter Property="VerticalAlignment" Value="Center" />
                                            <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
                                        </Style>
                                    </Grid.Resources>

                                    <StackPanel x:Name="RGBValuesArea" Visibility="Visible" Orientation="Vertical">
                                        <Grid>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto" />
                                                <RowDefinition Height="Auto" />
                                                <RowDefinition Height="Auto" />
                                                <RowDefinition Height="Auto" />
                                                <RowDefinition Height="Auto" />
                                            </Grid.RowDefinitions>

                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto" />
                                                <ColumnDefinition Width="*" />
                                            </Grid.ColumnDefinitions>

                                            <TextBlock Grid.Row="0" Text="{Binding Source={StaticResource miscTextR}, Path=Value}" />
                                            <igPrim:PropertyGridRgbValueEditor Style="{StaticResource TextBoxStyle}" Grid.Row="0" Grid.Column="1" Margin="0,0,0,2" Value="{Binding Path=Red, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource byteIntConverter}}" ToolTip="{Binding Source={StaticResource toolTipRedValueTextBox}, Path=Value}" />

                                            <TextBlock Grid.Row="1" Text="{Binding Source={StaticResource miscTextG}, Path=Value}" />
                                            <igPrim:PropertyGridRgbValueEditor Style="{StaticResource TextBoxStyle}" Grid.Row="1" Grid.Column="1" Margin="0,0,0,2" Value="{Binding Path=Green, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource byteIntConverter}}" ToolTip="{Binding Source={StaticResource toolTipGreenValueTextBox}, Path=Value}" />

                                            <TextBlock Grid.Row="2" Text="{Binding Source={StaticResource miscTextB}, Path=Value}" />
                                            <igPrim:PropertyGridRgbValueEditor Style="{StaticResource TextBoxStyle}" Grid.Row="2" Grid.Column="1" Margin="0,0,0,2" Value="{Binding Path=Blue, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource byteIntConverter}}" ToolTip="{Binding Source={StaticResource toolTipBlueValueTextBox}, Path=Value}" />

                                            <TextBlock Grid.Row="3" Text="{Binding Source={StaticResource miscTextA}, Path=Value}" />
                                            <igPrim:PropertyGridRgbValueEditor Style="{StaticResource TextBoxStyle}" Grid.Row="3" Grid.Column="1" Margin="0,0,0,2" Value="{Binding Path=Alpha, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource byteIntConverter}}" ToolTip="{Binding Source={StaticResource toolTipAlphaValueTextBox}, Path=Value}" />

                                            <Slider Grid.Row="4" Grid.Column="1" Minimum="0" Maximum="255" SmallChange="1" LargeChange="10" Margin="0,4,0,0" HorizontalAlignment="Stretch" ToolTip="{Binding Source={StaticResource toolTipAlphaValueTextBox}, Path=Value}" Value="{Binding Path=Alpha, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource byteDoubleConverter}}" Style="{StaticResource SliderStyle}" />
                                        </Grid>
                                    </StackPanel>
                                </Grid>
                            </Grid>

                            <!-- Gradient Stops Area-->
                            <Grid x:Name="GradientStopsArea" Grid.Row="2" Visibility="{Binding Path=IsGradientBrush, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource boolToVisibilityConverter}}">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>

                                <ig:XamNumericRangeSlider x:Name="GradientStopsSlider" Height="18" MinValue="0" MaxValue="1" SmallChange=".1" LargeChange=".3" IncreaseButtonVisibility="Collapsed" DecreaseButtonVisibility="Collapsed" Margin="2,10,2,15" ThumbStyle="{StaticResource NumericThumbStyle}" Style="{StaticResource NumericRangeSliderStyle}" />

                                <Grid Grid.Row="2" Margin="0,3,0,0">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="Auto" />
                                    </Grid.ColumnDefinitions>

                                    <!-- Linear/Radial gradient buttons -->
                                    <RadioButton Grid.Column="0" IsThreeState="False" Width="24" Margin="0,0,2,0" Style="{StaticResource RadioButtonStyleBase}" IsChecked="{Binding Path=IsLinearGradientBrush, RelativeSource={RelativeSource TemplatedParent}}" ToolTip="{Binding Source={StaticResource toolTipLinearGradientButton}, Path=Value}">
                                        <Grid>
                                            <Rectangle Width="16" Height="10" Stroke="{StaticResource ForegroundBrush}" StrokeThickness="1" />
                                            <Rectangle Width="12" Height="6" Fill="{StaticResource PropertyGridBrushEditorLinearGradienBackgroundBrush}" StrokeThickness="0" />
                                        </Grid>
                                    </RadioButton>
                                    <RadioButton Grid.Column="1" IsThreeState="False" Width="24" Margin="2,0,0,0" Style="{StaticResource RadioButtonStyleBase}" IsChecked="{Binding Path=IsRadialGradientBrush, RelativeSource={RelativeSource TemplatedParent}}" ToolTip="{Binding Source={StaticResource toolTipRadialGradientButton}, Path=Value}">
                                        <Grid>
                                            <Rectangle Width="16" Height="10" Stroke="{StaticResource ForegroundBrush}" StrokeThickness="1" />
                                            <Rectangle Width="12" Height="6" Fill="{StaticResource PropertyGridBrushEditorRadialGradienBackgroundBrush}" StrokeThickness="0" />
                                        </Grid>
                                    </RadioButton>

                                    <Button x:Name="ReverseStopsButton" Grid.Column="2" Margin="15,0,0,0" Width="24" Height="24" Style="{StaticResource PropertyGridButtonStyle}" ToolTip="{Binding Source={StaticResource toolTipReverseStopsButton}, Path=Value}">
                                        <Grid Width="14" Height="12">
                                            <Rectangle Width="14" Height="8" Fill="{StaticResource PropertyGridBrushEditorLinearGradienBackgroundBrush}" Stroke="{StaticResource ForegroundBrush}" StrokeThickness="1" />
                                            <Path Width="9" Margin="0,-2,0,0" Fill="{StaticResource ForegroundBrush}" Stretch="Uniform" Data="M77.2798,42.312 L62.3771,30.448 57.4118,36.6814 65.8771,43.4214 42.6131,43.4214 42.6131,51.392 65.8745,51.392 57.4118,58.1294 62.3771,64.3654 77.2798,52.5 83.6771,47.4053 77.2798,42.312 z" VerticalAlignment="Top" HorizontalAlignment="Left" />
                                            <Path Width="9" Margin="0,0,0,-2" Fill="{StaticResource ForegroundBrush}" Stretch="Uniform" Data="M77.2798,42.312 L62.3771,30.448 57.4118,36.6814 65.8771,43.4214 42.6131,43.4214 42.6131,51.392 65.8745,51.392 57.4118,58.1294 62.3771,64.3654 77.2798,52.5 83.6771,47.4053 77.2798,42.312 z" VerticalAlignment="Bottom" HorizontalAlignment="Right" RenderTransformOrigin="0.5, 0.5">
                                                <Path.RenderTransform>
                                                    <RotateTransform Angle="180" />
                                                </Path.RenderTransform>
                                            </Path>
                                        </Grid>
                                    </Button>

                                    <!-- Vertical/Horizontal Options for Linear Gradient -->
                                    <Grid Grid.Column="3" Margin="15,0,0,0" HorizontalAlignment="Center" Visibility="{Binding Path=IsLinearGradientBrush, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource boolToVisibilityConverter}}">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="Auto" />
                                        </Grid.ColumnDefinitions>

                                        <RadioButton Grid.Column="0" IsThreeState="False" Width="24" Margin="0,0,2,0" Style="{StaticResource RadioButtonStyleBase}" IsChecked="{Binding Path=IsVerticalLinearGradientBrush, RelativeSource={RelativeSource TemplatedParent}}" ToolTip="{Binding Source={StaticResource toolTipVerticalLinearGradientButton}, Path=Value}">
                                            <Grid Height="16">
                                                <Rectangle Height="16" Width="1" StrokeThickness="0" Fill="{StaticResource ForegroundBrush}" VerticalAlignment="Center" HorizontalAlignment="Center" />
                                                <Path Height="16" Width="7" Stretch="Fill" StrokeThickness="1" Fill="{StaticResource ForegroundBrush}" Data="M0,3 L3,0 L6,3z M0,13 L3,16 L6,13z" VerticalAlignment="Center" HorizontalAlignment="Center" />
                                            </Grid>
                                        </RadioButton>
                                        <RadioButton Grid.Column="1" IsThreeState="False" Width="24" Margin="2,0,0,0" Style="{StaticResource RadioButtonStyleBase}" IsChecked="{Binding Path=IsHorizontalLinearGradientBrush, RelativeSource={RelativeSource TemplatedParent}}" ToolTip="{Binding Source={StaticResource toolTipHorizontalLinearGradientButton}, Path=Value}">
                                            <Grid Width="16">
                                                <Rectangle Width="16" Height="1" StrokeThickness="0" Fill="{StaticResource ForegroundBrush}" VerticalAlignment="Center" HorizontalAlignment="Center" />
                                                <Path Width="16" Height="7" Stretch="Fill" StrokeThickness="1" Fill="{StaticResource ForegroundBrush}" Data="M3,0 L0,3 L3,6z M13,0 L16,3 L13,6z" VerticalAlignment="Center" HorizontalAlignment="Center" />
                                            </Grid>
                                        </RadioButton>
                                    </Grid>
                                </Grid>
                            </Grid>

                            <!-- JM 10-04-16 TFS224563 - Added a derived treeview control for picking brush resources. -->
                            <!-- Brush Resource Area -->
                            <Grid x:Name="BrushResourceArea" Grid.Row="1" Margin="0,6,0,0" Visibility="{Binding Path=IsSelectingBrushResource, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource boolToVisibilityConverter}}">
                                <igPrim:PropertyGridBrushResourcesTreeViewControl x:Name="BrushResourcesTreeView" Height="180"/>
                            </Grid>
                        </Grid>
                    </Expander>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- JM 10-04-16 TFS224563 - Added. -->
    <!-- *********************************  PropertyGridBrushResourcesTreeViewControl Style  ********************************* -->
    <Style TargetType="igPrim:PropertyGridBrushResourcesTreeViewControl">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="igPrim:PropertyGridBrushResourcesTreeViewControl">
                    <Border>
                        <TreeView x:Name="PART_TreeView" Style="{StaticResource TreeViewStyle}" ItemContainerStyle="{StaticResource TreeViewItemStyle}"></TreeView>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- JM 10-04-16 TFS224563 - Added. -->
    <!-- *********************************  PropertyGridBrushGroupItem HierarchicalDataTemplate  ********************************* -->
    <HierarchicalDataTemplate DataType="{x:Type igPrim:PropertyGridBrushGroupItem}" ItemsSource="{Binding Items}">
        <Grid x:Name="grid">
            <TextBlock Text="{Binding Name}" Margin="3"/>
        </Grid>
    </HierarchicalDataTemplate>

    <!-- JM 10-04-16 TFS224563 - Added. -->
    <!-- *********************************  PropertyGridBrushResourceItem DataTemplate  ********************************* -->
    <DataTemplate DataType="{x:Type igPrim:PropertyGridBrushResourceItem}">
        <Grid x:Name="grid" Margin="-1,0,0,0">
            <Grid Margin="3">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>

                <Rectangle StrokeThickness="1" Stroke="DarkGray" Fill="{Binding Brush}" Width="40" Height="14"/>
                <TextBlock Text="{Binding Name}" Grid.Column="1" Margin="6,0,0,0" HorizontalAlignment="Left" VerticalAlignment="Center"/>
            </Grid>
        </Grid>
    </DataTemplate>
</ResourceDictionary>