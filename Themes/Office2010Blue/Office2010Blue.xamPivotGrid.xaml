<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
                    xmlns:ig="http://schemas.infragistics.com/xaml" 
                    xmlns:igPrim="http://schemas.infragistics.com/xaml/primitives" 
                    xmlns:igPivot="http://schemas.infragistics.com/xaml" 
                    xmlns:igPivotPrim="http://schemas.infragistics.com/xaml/primitives" 
                    xmlns:System="clr-namespace:System;assembly=mscorlib" 
                    xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" mc:Ignorable="d" 
                    xmlns:Microsoft_Windows_Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero">

  <!-- *********************************  RESOURCES  ********************************* -->
  <ResourceDictionary.MergedDictionaries>  
    <ResourceDictionary Source="Office2010Blue.Styles.xaml" />
  </ResourceDictionary.MergedDictionaries>

  <!-- *********************************** String Resources **********************************************-->
  <igPivot:PivotStringSettings x:Key="stringResources" />

  <!-- ********************************** BRUSHES **********************************-->
  <!--  HeaderCell Brushes -->
  <SolidColorBrush x:Key="HeaderCellBackgroundBrush" Color="{StaticResource Color_031}" />
  <SolidColorBrush x:Key="HeaderCellBorderBrush" Color="{StaticResource Color_027}" />
  <SolidColorBrush x:Key="HeaderCellForegroundBrush" Color="{StaticResource Color_024}" />
  <LinearGradientBrush x:Key="HeaderCellHoverBackgroundBrush" StartPoint="0,0" EndPoint="0,1">
    <GradientStop Offset="0" Color="{StaticResource Color_017}" />
    <GradientStop Offset="1" Color="{StaticResource Color_019}" />
  </LinearGradientBrush>
  <SolidColorBrush x:Key="HeaderCellHoverBorderBrush" Color="{StaticResource Color_014}" />
  <SolidColorBrush x:Key="HeaderCellSelectedBackgroundBrush" Color="{StaticResource Color_031}" />
  <SolidColorBrush x:Key="HeaderCellSelectedBorderBrush" Color="{StaticResource Color_025}" />
  <LinearGradientBrush x:Key="HeaderCellOptionsPaneBackgroundBrush" StartPoint="0,0" EndPoint="0,1">
    <GradientStop Offset="0" Color="{StaticResource Color_017}" />
    <GradientStop Offset="1" Color="{StaticResource Color_019}" />
  </LinearGradientBrush>
  <SolidColorBrush x:Key="HeaderCellGlyphBrush" Color="{StaticResource Color_025}" />
  <SolidColorBrush x:Key="HeaderCellExpansionIndicatorBackgroundBrush" Color="{StaticResource Color_005}" />
  <SolidColorBrush x:Key="HeaderCellExpansionIndicatorBorderdBrush" Color="{StaticResource Color_025}" />
  <SolidColorBrush x:Key="HeaderCellExpansionIndicatorFocusedBorderdBrush" Color="{StaticResource Color_024}" />

  <!--  Cell Brushes -->
  <SolidColorBrush x:Key="CellItemBackgroundBrush" Color="{StaticResource Color_005}" />
  <SolidColorBrush x:Key="CellItemBorderBrush" Color="{StaticResource Color_004}" />
  <SolidColorBrush x:Key="CellItemAltBackgroundBrush" Color="{StaticResource Color_032}" />
  <SolidColorBrush x:Key="CellItemHoverBackgroundBrush" Color="{StaticResource Color_033}" />
  <SolidColorBrush x:Key="CellItemSelectedBackgroundBrush" Color="{StaticResource Color_029}" />
  <SolidColorBrush x:Key="CellItemSelectedBorderBrush" Color="{StaticResource Color_033}" />
  <SolidColorBrush x:Key="CellItemActiveBackgroundBrush" Color="{StaticResource Color_005}" />
  <SolidColorBrush x:Key="CellItemActiveBorderBrush" Color="{StaticResource Color_001}" />

  <!-- DropDown Brushes -->
  <SolidColorBrush x:Key="DropDownBackgroundBrush" Color="{StaticResource Color_005}" />
  <SolidColorBrush x:Key="DropDownBorderBrush" Color="{StaticResource Color_027}" />
  <SolidColorBrush x:Key="DropDownHoverBorderBrush" Color="{StaticResource Color_014}" />

  <!--  Tree Brushes -->
  <SolidColorBrush x:Key="TreeBackgroundBrush" Color="{StaticResource Color_033}" />
  <SolidColorBrush x:Key="TreeBorderBrush" Color="{StaticResource Color_033}" />
  <SolidColorBrush x:Key="TreeNodeBackgroundBrush" Color="{StaticResource Color_033}" />
  <SolidColorBrush x:Key="TreeNodeBorderBrush" Color="{StaticResource Color_033}" />
  <SolidColorBrush x:Key="TreeNodeHoverBackgroundBrush" Color="{StaticResource Color_030}" />
  <SolidColorBrush x:Key="TreeNodeHoverBorderBrush" Color="{StaticResource Color_027}" />
  <LinearGradientBrush x:Key="TreeNodeSelectedBackgroundBrush" StartPoint="0,0 " EndPoint="0,1 ">
    <GradientStop Offset="1" Color="{StaticResource Color_015}" />
    <GradientStop Color="{StaticResource Color_014}" />
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="TreeNodeSelectedBorderBrush" StartPoint="0.5,0" EndPoint="0.5,1">
    <GradientStop Offset="0" Color="{StaticResource Color_012}" />
    <GradientStop Offset="1" Color="{StaticResource Color_013}" />
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="TreeNodeActiveBorderBrush" StartPoint="0.5,0" EndPoint="0.5,1">
    <GradientStop Offset="0" Color="{StaticResource Color_012}" />
    <GradientStop Offset="1" Color="{StaticResource Color_013}" />
  </LinearGradientBrush>
  <SolidColorBrush x:Key="DropOntoElementBorderBrush" Color="{StaticResource Color_014}" />
  <LinearGradientBrush x:Key="DropIndicatorBackgroundBrush" StartPoint="0.5,0" EndPoint="0.5,1">
    <GradientStop Offset="1" Color="{StaticResource Color_014}" />
    <GradientStop Color="{StaticResource Color_015}" />
  </LinearGradientBrush>

  <!-- Field Brushes -->
  <LinearGradientBrush x:Key="FieldsDropAreaBackgroundBrush" EndPoint="0.5,1" StartPoint="0.5,0">
    <GradientStop Color="{StaticResource Color_030}" Offset="1" />
    <GradientStop Color="{StaticResource Color_032}" />
  </LinearGradientBrush>
  <SolidColorBrush x:Key="FieldsDropAreaControlBorderBrush" Color="{StaticResource Color_027}" />
  <LinearGradientBrush x:Key="FieldItemBackgroundBrush" EndPoint="0.5,1" StartPoint="0.5,0">
    <GradientStop Color="{StaticResource Color_028}" Offset="1" />
    <GradientStop Color="{StaticResource Color_030}" />
  </LinearGradientBrush>
  <SolidColorBrush x:Key="FieldItemBorderBrush" Color="{StaticResource Color_027}" />
  <LinearGradientBrush x:Key="PeekIconBackgroundBrush" EndPoint="0.85,0.857" StartPoint="0.15,0.143">
    <GradientStop Color="{StaticResource Color_026}" Offset="0.500" />
    <GradientStop Color="{StaticResource Color_029}" Offset="0.502" />
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="PeekIconBorderBrush" StartPoint="0.5,0" EndPoint="0.5,1">
    <GradientStop Color="{StaticResource Color_029}" />
    <GradientStop Color="{StaticResource Color_027}" Offset="1" />
  </LinearGradientBrush>
  <SolidColorBrush x:Key="FieldChooserBackgroundBrush" Color="{StaticResource Color_027}" />
  <LinearGradientBrush x:Key="FieldChooserItemHoverBackgroundBrush" StartPoint="0,0" EndPoint="0,1">
    <GradientStop Offset="0" Color="{StaticResource Color_018}" />
    <GradientStop Offset="0.23" Color="{StaticResource Color_017}" />
    <GradientStop Offset="0.75" Color="{StaticResource Color_017}" />
    <GradientStop Offset="1" Color="{StaticResource Color_019}" />
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="FieldChooserItemHoverBorderBrush" StartPoint="0.5,0" EndPoint="0.5,1">
    <GradientStop Offset="1" Color="{StaticResource Color_013}" />
    <GradientStop Color="{StaticResource Color_014}" />
  </LinearGradientBrush>
  <SolidColorBrush x:Key="FilterFieldPendingChangesBackgroundBrush" Color="{StaticResource Color_029}" />
  <SolidColorBrush x:Key="FilterFieldPendingChangesBorderBrush" Color="{StaticResource Color_005}" />

  <!--  Expander Brushes -->
  <LinearGradientBrush x:Key="ExpanderBackgroundBrush" StartPoint="0,0" EndPoint="0,1">
    <GradientStop Offset="0" Color="{StaticResource Color_029}" />
    <GradientStop Offset="1" Color="{StaticResource Color_027}" />
  </LinearGradientBrush>
  <SolidColorBrush x:Key="ExpanderBorderBrush" Color="{StaticResource Color_027}" />
  <SolidColorBrush x:Key="ExpanderButtonBackgroundBrush" Color="{StaticResource Color_030}" />
  <SolidColorBrush x:Key="ExpanderButtonBorderBrush" Color="{StaticResource Color_027}" />
  <SolidColorBrush x:Key="ExpansionIndicatorBackgroundBrush" Color="{StaticResource Color_005}" />
  <SolidColorBrush x:Key="ExpansionIndicatorBorderBrush" Color="{StaticResource Color_026}" />
  <SolidColorBrush x:Key="ExpansionIndicatorFocusedBackgroundBrush" Color="{StaticResource Color_024}" />

  <!-- PivotDataSelector Brushes -->
  <SolidColorBrush x:Key="PivotDataSelectorListBoxBackgroundBrush" Color="{StaticResource Color_005}" />
  <SolidColorBrush x:Key="PivotDataSelectorListBoxBorderBrush" Color="{StaticResource Color_027}" />
  <SolidColorBrush x:Key="ShadowBrush1" Color="{StaticResource Color_001}" Opacity="0.05" />
  <SolidColorBrush x:Key="ShadowBrush2" Color="{StaticResource Color_001}" Opacity="0.15" />
  <SolidColorBrush x:Key="ShadowBrush3" Color="{StaticResource Color_001}" Opacity="0.30" />

  <!-- PivotGrid Brushes -->
  <SolidColorBrush x:Key="PivotGridBackgroundBrush" Color="{StaticResource Color_005}" />
  <SolidColorBrush x:Key="PivotGridBorderBrush" Color="{StaticResource Color_027}" />
  <SolidColorBrush x:Key="DropTargetMarkerBackgroundBrush" Color="{StaticResource Color_027}" />
  <SolidColorBrush x:Key="ResizingIndicatorBackgroundBrush" Color="{StaticResource Color_001}" Opacity="0.30" />
  <LinearGradientBrush x:Key="HiddenColumnIndicatorBackgroundBrush" EndPoint="-2,17" StartPoint="-7,12" SpreadMethod="Repeat" MappingMode="Absolute">
    <GradientStop Color="{StaticResource Color_027}" Offset="0.499" />
    <GradientStop Color="{StaticResource Color_030}" Offset="0.500" />
  </LinearGradientBrush>
  <SolidColorBrush x:Key="DragTemplateBackgroundBrush" Color="{StaticResource Color_030}" />
  <SolidColorBrush x:Key="DragTemplateBorderBrush" Color="{StaticResource Color_029}" />

  <!--  HierarchicalItem Icon Brushes -->
  <SolidColorBrush x:Key="CalendarInnerBackgroundBrush" Color="{StaticResource Color_032}" />
  <SolidColorBrush x:Key="CalendarNumbersBackgroundBrush" Color="{StaticResource Color_024}" />
  <LinearGradientBrush x:Key="CalendarBackgroundBrush" EndPoint="0.5,1" StartPoint="0.5,0">
    <GradientStop Offset="1" Color="{StaticResource Color_026}" />
    <GradientStop Color="{StaticResource Color_027}" />
  </LinearGradientBrush>
  <SolidColorBrush x:Key="IconBackgroundBrush1" Color="{StaticResource Color_007}" />
  <SolidColorBrush Color="{StaticResource Color_006}" x:Key="IconBorderBrush1" />
  <SolidColorBrush x:Key="IconBackgroundBrush2" Color="{StaticResource Color_021}" />
  <SolidColorBrush Color="{StaticResource Color_020}" x:Key="IconBorderBrush2" />
  <SolidColorBrush x:Key="IconBackgroundBrush3" Color="{StaticResource Color_026}" />
  <SolidColorBrush x:Key="IconBorderBrush3" Color="{StaticResource Color_025}" />
  <SolidColorBrush x:Key="MemberIconBorderBrush1" Color="{StaticResource Color_026}" />
  <LinearGradientBrush x:Key="MemberIconBackgroundBrush1" EndPoint="0.5,1" StartPoint="0.5,0">
    <GradientStop Offset="0" Color="{StaticResource Color_029}" />
    <GradientStop Offset="1" Color="{StaticResource Color_027}" />
  </LinearGradientBrush>
  <SolidColorBrush x:Key="MemberIconBorderBrush2" Color="{StaticResource Color_013}" />
  <LinearGradientBrush x:Key="MemberIconBackgroundBrush2" EndPoint="0.5,1" StartPoint="0.5,0">
    <GradientStop Offset="0" Color="{StaticResource Color_019}" />
    <GradientStop Offset="0.5" Color="{StaticResource Color_017}" />
  </LinearGradientBrush>
  <SolidColorBrush x:Key="MeasureIconBorderBrush" Color="{StaticResource Color_001}" Opacity="0.45" />

  <!--*********************************** Margins ****************************************************-->
  <Thickness x:Key="DataSelectorDropdownMargin">0,0,0,5</Thickness>

  <!--*********************************** Icon Paths ****************************************************-->
  <Style x:Key="FilterIconPath" TargetType="ContentControl">
    <Setter Property="ContentTemplate">
      <Setter.Value>
        <DataTemplate>
          <Grid>
            <Path Data="M0.5,0.5 L11.5,0.5 L7.4999995,5.5 L7.4999995,9.5 L4.4999995,9.5 L4.4999995,5.5 z" Fill="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=ContentControl, AncestorLevel=1}, Path=Background}" Stroke="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=ContentControl, AncestorLevel=1}, Path=BorderBrush}" Width="12" Height="10" VerticalAlignment="Center" Stretch="Fill" UseLayoutRounding="False" igPrim:XamlHelper.SnapsToDevicePixels="True" />
          </Grid>
        </DataTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="ColumnsIconPath" TargetType="ContentControl">
    <Setter Property="ContentTemplate">
      <Setter.Value>
        <DataTemplate>
          <Grid>
            <Path Data="M8.5,0.5 L10.5,0.5 L10.5,10.5 L8.5,10.5 z M4.5,0.5 L6.5,0.5 L6.5,10.5 L4.5,10.5 z M0.5,0.5 L2.5,0.5 L2.5,10.5 L0.5,10.5 z" Fill="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=ContentControl, AncestorLevel=1}, Path=Background}" Stroke="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=ContentControl, AncestorLevel=1}, Path=BorderBrush}" Height="11" Width="11" Stretch="Fill" VerticalAlignment="Center" UseLayoutRounding="False" igPrim:XamlHelper.SnapsToDevicePixels="True" />
          </Grid>
        </DataTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="RowsIconPath" TargetType="ContentControl">
    <Setter Property="ContentTemplate">
      <Setter.Value>
        <DataTemplate>
          <Grid>
            <Path Data="M0.5,8.5 L10.5,8.5 L10.5,10.5 L0.5,10.5 z M0.5,4.5 L10.5,4.5 L10.5,6.5 L0.5,6.5 z M0.5,0.5 L10.5,0.5 L10.5,2.5 L0.5,2.5 z" Fill="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=ContentControl, AncestorLevel=1}, Path=Background}" Stroke="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=ContentControl, AncestorLevel=1}, Path=BorderBrush}" Width="11" Height="11" VerticalAlignment="Center" Stretch="Fill" UseLayoutRounding="False" igPrim:XamlHelper.SnapsToDevicePixels="True" />
          </Grid>
        </DataTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="MeasuresIconPath" TargetType="ContentControl">
    <Setter Property="ContentTemplate">
      <Setter.Value>
        <DataTemplate>
          <Grid HorizontalAlignment="Left" Height="12" VerticalAlignment="Center" Width="14">
            <Path Data="M0,0 L4,0 L4,10 L0,10 z" Fill="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=ContentControl, AncestorLevel=1}, Path=Foreground}" HorizontalAlignment="Right" VerticalAlignment="Bottom" Height="10" Width="4" Margin="0,2,0,0" Stretch="Fill" igPrim:XamlHelper.SnapsToDevicePixels="True" />
            <Path Data="M0,0 L4,0 L4,12 L0,12 z" Fill="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=ContentControl, AncestorLevel=1}, Path=Background}" Height="12" Width="4" VerticalAlignment="Bottom" Stretch="Fill" igPrim:XamlHelper.SnapsToDevicePixels="True" />
            <Path Data="M0,0 L4,0 L4,9 L0,9 z" Fill="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=ContentControl, AncestorLevel=1}, Path=BorderBrush}" HorizontalAlignment="Left" VerticalAlignment="Bottom" Width="4" Height="9" Margin="0,3,0,0" Stretch="Fill" igPrim:XamlHelper.SnapsToDevicePixels="True" />
            <Path Data="M1,3.9999999 L1,11 3,11 3,3.9999999 z M11,3 L11,11 13,11 13,3 z M0,3 L1,3 3,3 4,3 4,3.9999999 4,11 4,12 3,12 1,12 0,12 0,11 0,3.9999999 z M10,2 L11,2 13,2 14,2 14,3 14,11 14,12 13,12 11,12 10,12 10,11 10,3 z M6,1.0000001 L6,11 8,11 8,1.0000001 z M5,0 L6,0 8,0 9,0 9,1.0000001 9,11 9,12 8,12 6,12 5,12 5,11 5,1.0000001 z" Fill="{StaticResource MeasureIconBorderBrush}" Height="12" Width="14" igPrim:XamlHelper.SnapsToDevicePixels="True" Stretch="Fill" />
          </Grid>
        </DataTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- *********************************  TextBox Style  ********************************* -->
  <Style x:Key="TextBoxStyle" TargetType="{x:Type TextBox}">
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="Padding" Value="2" />
    <Setter Property="Margin" Value="0" />
    <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
    <Setter Property="BorderBrush" Value="{StaticResource TextBoxBorderBrush}" />
    <Setter Property="Background" Value="{StaticResource TextBoxBackgroundBrush}" />
    <Setter Property="VerticalContentAlignment" Value="Center" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type TextBoxBase}">
          <Border x:Name="Border" CornerRadius="0" Padding="2" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="ValidationStates">
                <VisualState x:Name="Valid" />
                <VisualState x:Name="InvalidFocused" />
                <VisualState x:Name="InvalidUnfocused" />
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <ScrollViewer Margin="0" x:Name="PART_ContentHost" />
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="False">
              <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource TextBoxDisabledBorderBrush}" />
              <Setter Property="Foreground" Value="{StaticResource ForegroundDisabledBrush}" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- *********************************  Dropdown Style  ********************************* -->
  <Style TargetType="{x:Type igPivot:Dropdown}" x:Key="DropdownStyle">
    <Setter Property="Padding" Value="5,3,20,3" />
    <Setter Property="Background" Value="{StaticResource DropDownBackgroundBrush}" />
    <Setter Property="BorderBrush" Value="{StaticResource DropDownBorderBrush}" />
    <Setter Property="HorizontalContentAlignment" Value="Left" />
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="Cursor" Value="Hand" />
    <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
    <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type igPivot:Dropdown}">
          <Grid x:Name="MainGrid" SnapsToDevicePixels="true">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="MouseOver">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0" Storyboard.TargetName="ContentPresenterBorder" Storyboard.TargetProperty="BorderBrush">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource DropDownHoverBorderBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Disabled">
                  <Storyboard>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="DisabledVisualElement">
                      <EasingDoubleKeyFrame KeyTime="0" Value="0.55" />
                    </DoubleAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="FocusStates">
                <VisualState x:Name="Unfocused" />
                <VisualState x:Name="Focused" />
                <VisualState x:Name="FocusedDropDown" />
              </VisualStateGroup>
              <VisualStateGroup x:Name="EditStates">
                <VisualState x:Name="Editable" />
                <VisualState x:Name="Uneditable" />
              </VisualStateGroup>
              <VisualStateGroup x:Name="ValidationStates">
                <VisualState x:Name="Valid" />
                <VisualState x:Name="InvalidFocused" />
                <VisualState x:Name="InvalidUnfocused" />
              </VisualStateGroup>
              <VisualStateGroup x:Name="EmptyState">
                <VisualState x:Name="Empty">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="itemText" Storyboard.TargetProperty="(UIElement.Visibility)">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Selected">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="itemText" Storyboard.TargetProperty="(UIElement.Visibility)">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Collapsed</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Popup x:Name="PART_Popup" AllowsTransparency="True" Grid.ColumnSpan="2" IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}" Margin="1" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Placement="Bottom">
              <Microsoft_Windows_Themes:SystemDropShadowChrome x:Name="Shdw" Color="Transparent" MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{Binding ActualWidth, ElementName=MainGrid}">
                <Border x:Name="DropDownBorder" Background="{StaticResource PopupBackgroundBrush}" BorderBrush="{StaticResource PopupBorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                  <ScrollViewer CanContentScroll="True">
                    <ItemsPresenter KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                  </ScrollViewer>
                </Border>
              </Microsoft_Windows_Themes:SystemDropShadowChrome>
            </Popup>
            <Border x:Name="ContentPresenterBorder" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" />
            <Grid>
              <ToggleButton IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource ComboBoxToggleButtonStyle}">
                <Path x:Name="BtnArrow" Data="M0,0 L8,0 L4,4 z" Width="6" Height="4" Fill="{StaticResource GlyphBorderBrush}" Stretch="Fill" />
              </ToggleButton>
              <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" IsHitTestVisible="false" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Content="{TemplateBinding SelectionBoxItem}" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" />
            </Grid>
            <TextBlock IsHitTestVisible="False" x:Name="itemText" Visibility="Collapsed" Text="{TemplateBinding EmptyString}" Margin="5,2,5,0" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
            <Rectangle x:Name="DisabledVisualElement" Fill="{StaticResource DisabledBackgroundBrush}" IsHitTestVisible="false" Opacity="0" Grid.ColumnSpan="2" />
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger SourceName="PART_Popup" Property="Popup.HasDropShadow" Value="true">
              <Setter TargetName="Shdw" Property="Margin" Value="0,0,1,1" />
              <Setter TargetName="Shdw" Property="Color" Value="{StaticResource Color_036}" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style BasedOn="{StaticResource DropdownStyle}" TargetType="igPivot:Dropdown" />

  <!-- ********************************** Converters **********************************-->
  <igPrim:BoolToVisibilityConverter x:Key="boolToVisibilityConverter" />
  <igPrim:InverseBooleanConverter x:Key="inverseBooleanConverter" />

  <!-- ********************************** Data Templates **********************************-->
  <!-- FieldItemTemplateKey -->
  <DataTemplate x:Key="FieldItemTemplateKey">
    <Border Background="{StaticResource TransparentBrush}">
      <TextBlock Text="{Binding Caption}" VerticalAlignment="Center" />
    </Border>
  </DataTemplate>

  <DataTemplate x:Key="AxisChooserTemplateKey">
    <TextBlock Text="{Binding Path=HeaderText}" />
  </DataTemplate>

  <!-- DragTemplate -->
  <DataTemplate x:Key="dragTemplate">
    <Grid>
      <Border Opacity="0.65" Background="{StaticResource DragTemplateBackgroundBrush}" BorderBrush="{StaticResource DragTemplateBorderBrush}" BorderThickness="1" CornerRadius="2">
        <TextBlock Text="{Binding Path=Data.Caption}" Margin="3,1" />
      </Border>
    </Grid>
  </DataTemplate>

  <!-- *********************************  IconsPath Style  ********************************* -->
  <Style x:Key="IconsPathStyle" TargetType="Path">
    <Setter Property="HorizontalAlignment" Value="Stretch" />
    <Setter Property="VerticalAlignment" Value="Stretch" />
    <Setter Property="Stretch" Value="Fill" />
    <Setter Property="UseLayoutRounding" Value="False" />
  </Style>

  <!-- *********************************  Filter Dropdown Toggle style  ********************************* -->
  <Style x:Key="FilterDropdownToggle" TargetType="ToggleButton">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="ToggleButton">
          <Grid Background="{StaticResource TransparentBrush}">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="MouseOver" />
                <VisualState x:Name="Pressed" />
                <VisualState x:Name="Disabled" />
              </VisualStateGroup>
              <VisualStateGroup x:Name="CheckStates">
                <VisualState x:Name="Checked" />
                <VisualState x:Name="Unchecked" />
                <VisualState x:Name="Indeterminate" />
              </VisualStateGroup>
              <VisualStateGroup x:Name="FocusStates">
                <VisualState x:Name="Focused" />
                <VisualState x:Name="Unfocused" />
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Rectangle Fill="{StaticResource TransparentBrush}" />
            <ContentPresenter x:Name="contentPresenter" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- *********************************  Filter Cell Sort Btn style  ********************************* -->
  <Style x:Key="FilterCellSortBtn" TargetType="CheckBox">
    <Setter Property="Width" Value="14" />
    <Setter Property="Height" Value="14" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="CheckBox">
          <Grid Background="{StaticResource TransparentBrush}">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CheckStates">
                <VisualState x:Name="Checked">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="SortedDescending" Storyboard.TargetProperty="(UIElement.Visibility)">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="rectangle">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Collapsed</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Unchecked">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="SortedAscending" Storyboard.TargetProperty="(UIElement.Visibility)">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="rectangle">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Collapsed</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Indeterminate" />
              </VisualStateGroup>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="MouseOver" />
                <VisualState x:Name="Normal" />
                <VisualState x:Name="Disabled" />
                <VisualState x:Name="Pressed" />
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid VerticalAlignment="Center" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}">
              <Border BorderBrush="{StaticResource HeaderCellGlyphBrush}" CornerRadius="1" BorderThickness="1" Margin="1">
                <Grid>
                  <Rectangle x:Name="rectangle" Fill="{StaticResource HeaderCellGlyphBrush}" VerticalAlignment="Center" Height="2" Width="4" />
                  <Path IsHitTestVisible="False" x:Name="SortedDescending" HorizontalAlignment="Center" VerticalAlignment="Center" Data="M0,0 L4,4.625 L8,0 z" Fill="{StaticResource HeaderCellGlyphBrush}" Width="8" Height="4.625" UseLayoutRounding="False" Visibility="Collapsed" />
                  <Path IsHitTestVisible="False" x:Name="SortedAscending" HorizontalAlignment="Center" VerticalAlignment="Center" Data="M0,4.625 L8,4.625 L4,0 z" Fill="{StaticResource HeaderCellGlyphBrush}" Width="8" Height="4.625" UseLayoutRounding="False" Visibility="Collapsed" />
                </Grid>
              </Border>
            </Grid>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- *********************************  HeaderCellSortBtn style  ********************************* -->
  <Style x:Key="HeaderCellSortBtn" TargetType="ToggleButton">
    <Setter Property="Width" Value="15" />
    <Setter Property="Height" Value="14" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="ToggleButton">
          <Grid Background="{StaticResource TransparentBrush}">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CheckStates">
                <VisualState x:Name="Checked" />
                <VisualState x:Name="Unchecked" />
                <VisualState x:Name="Indeterminate" />
              </VisualStateGroup>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="MouseOver" />
                <VisualState x:Name="Pressed" />
                <VisualState x:Name="Disabled" />
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid VerticalAlignment="Center" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}">
              <Border BorderBrush="{StaticResource HeaderCellGlyphBrush}" CornerRadius="1" BorderThickness="1" Margin="1">
                <StackPanel Orientation="Horizontal">
                  <Path IsHitTestVisible="False" x:Name="SortedAscending1" HorizontalAlignment="Right" Margin="1,0,1,0" VerticalAlignment="Center" Data="M0,4 L4,8 L4,0 z" Fill="{StaticResource HeaderCellGlyphBrush}" />
                  <Path IsHitTestVisible="False" x:Name="SortedDescending1" HorizontalAlignment="Right" Margin="0" VerticalAlignment="Center" Data="M 0 0 L 4 4 L 0 8 Z" Fill="{StaticResource HeaderCellGlyphBrush}" />
                </StackPanel>
              </Border>
            </Grid>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- *********************************  HeaderCell Control Expansion Indicator style  ********************************* -->
  <Style x:Key="HeaderCellControlExpansionIndicatorStyle" TargetType="ToggleButton">
    <Setter Property="Background" Value="{StaticResource HeaderCellExpansionIndicatorBackgroundBrush}" />
    <Setter Property="BorderBrush" Value="{StaticResource HeaderCellExpansionIndicatorBorderdBrush}" />
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="Cursor" Value="Hand" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="ToggleButton">
          <Grid Width="9" Height="9" Background="{StaticResource TransparentBrush}">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="MouseOver">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0" Storyboard.TargetName="ExpandGlyph" Storyboard.TargetProperty="Fill">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource GlyphFocusedBackgroundBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0" Storyboard.TargetName="CollapseGlyph" Storyboard.TargetProperty="Fill">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource GlyphFocusedBackgroundBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0" Storyboard.TargetName="BdForeground" Storyboard.TargetProperty="BorderBrush">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource HeaderCellExpansionIndicatorFocusedBorderdBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Pressed" />
                <VisualState x:Name="Disabled" />
              </VisualStateGroup>
              <VisualStateGroup x:Name="CheckStates">
                <VisualState x:Name="Checked">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="CollapseGlyph" Storyboard.TargetProperty="(UIElement.Visibility)">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ExpandGlyph" Storyboard.TargetProperty="(UIElement.Visibility)">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Collapsed</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Unchecked" />
              </VisualStateGroup>
              <VisualStateGroup x:Name="FocusStates">
                <VisualState x:Name="Focused" />
                <VisualState x:Name="Unfocused" />
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Border x:Name="BdBackground" BorderBrush="{TemplateBinding Background}" CornerRadius="1" Margin="0,0,0,-1" BorderThickness="{TemplateBinding BorderThickness}" />
            <Border x:Name="BdForeground" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="1" />
            <Path x:Name="ExpandGlyph" Width="5" Height="5" Data="M 2,0 C2,0 2,2 2,2 2,2 0,2 0,2 0,2 0,3 0,3 0,3 2,3 2,3 2,3 2,5 2,5 2,5 3,5 3,5 3,5 3,3 3,3 3,3 5,3 5,3 5,3 5,2 5,2 5,2 3,2 3,2 3,2 3,0 3,0 3,0 2,0 2,0 z" Fill="{StaticResource GlyphBorderBrush}" />
            <Rectangle x:Name="CollapseGlyph" Width="5" Height="1" Fill="{StaticResource GlyphBorderBrush}" VerticalAlignment="Center" HorizontalAlignment="Center" Visibility="Collapsed" />
            <ContentPresenter x:Name="contentPresenter" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- *********************************  Expansion Indicator Style  ********************************* -->
  <Style x:Key="ExpansionIndicatorStyle" TargetType="igPrim:ExpansionIndicator">
    <Setter Property="Background" Value="{StaticResource ExpansionIndicatorBackgroundBrush}" />
    <Setter Property="BorderBrush" Value="{StaticResource ExpansionIndicatorBorderBrush}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igPrim:ExpansionIndicator">
          <Grid>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="MouseOver" />
                <VisualState x:Name="Selected" />
                <VisualState x:Name="Disabled" />
              </VisualStateGroup>
              <VisualStateGroup x:Name="ExpansionStates">
                <VisualState x:Name="Expanded">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00" Storyboard.TargetName="CollapsedGlyph" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Collapsed</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00" Storyboard.TargetName="ExpandedGlyph" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Collapsed" />
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="15" />
              <ColumnDefinition Width="5" />
              <ColumnDefinition />
            </Grid.ColumnDefinitions>
            <Grid x:Name="ExpansionIndicator" Grid.ColumnSpan="2" Grid.RowSpan="2">
              <Rectangle Fill="{StaticResource TransparentBrush}" />
              <Grid x:Name="CollapsedGlyph" Width="5" Height="9" Margin="-1,0,0,0">
                <Path Width="5" Height="9" Data="M 0,0 C0,0 0,9 0,9 0,9 1,9 1,9 1,9 1,8 1,8 1,8 2,8 2,8 2,8 2,7 2,7 2,7 3,7 3,7 3,7 3,6 3,6 3,6 4,6 4,6 4,6 4,5 4,5 4,5 5,5 5,5 5,5 5,4 5,4 5,4 4,4 4,4 4,4 4,3 4,3 4,3 3,3 3,3 3,3 3,2 3,2 3,2 2,2 2,2 2,2 2,1 2,1 2,1 1,1 1,1 1,1 1,0 1,0 1,0 0,0 0,0 z" Stretch="Fill" Fill="{TemplateBinding BorderBrush}" />
                <Path Width="3" Height="5" Data="M 1,2 C1,2 1,7 1,7 1,7 2,7 2,7 2,7 2,6 2,6 2,6 3,6 3,6 3,6 3,5 3,5 3,5 4,5 4,5 4,5 4,4 4,4 4,4 3,4 3,4 3,4 3,3 3,3 3,3 2,3 2,3 2,3 2,2 2,2 2,2 1,2 1,2 z" Fill="{TemplateBinding Background}" Stretch="Fill" />
              </Grid>
              <Grid x:Name="ExpandedGlyph" Width="6" Height="6" Margin="0,2,0,0" Visibility="Collapsed">
                <Path Data="M4.9999986,0 L5.9999986,0 L5.9999986,1.0000001 C6,1.0000001 6,6 6,6 C6,6 3.5280759,6 2.0603712,6 L2,6 L0,6.0000005 L0,5.0000005 L0.99999976,5.0000005 C0.99999976,4.5 0.99999976,4 0.99999976,4 C0.99999976,4 1.9999998,4 1.9999998,4 C1.9999998,4 1.9999998,3 1.9999998,3 C1.9999998,3 2.9999998,3 2.9999998,3 C2.9999998,3 2.9999998,2 2.9999998,2 C2.9999998,2 3.9999998,2 3.9999998,2 C3.9999998,2 3.9999998,1.0000001 3.9999998,1.0000001 C3.9999998,1.0000001 4.4394531,1.0000001 4.9063716,1.0000001 L4.9999986,1.0000001 z" Fill="{StaticResource ExpansionIndicatorFocusedBackgroundBrush}" Stretch="Fill" UseLayoutRounding="False" />
                <Path Width="3" Height="3" Data="M 1,3 C1,3 1,4 1,4 1,4 4,4 4,4 4,4 4,3 4,3 4,3 4,2 4,2 4,2 4,1 4,1 4,1 3,1 3,1 3,1 3,2 3,2 3,2 2,2 2,2 2,2 2,3 2,3 2,3 1,3 1,3 z" Fill="{TemplateBinding BorderBrush}" Stretch="Fill" />
              </Grid>
            </Grid>
            <ContentPresenter Grid.Column="2" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- *********************************  FilterCellRemoveBtn Style   ********************************* -->
  <Style x:Key="FilterCellRemoveBtn" TargetType="Button">
    <Setter Property="VerticalAlignment" Value="Center" />
    <Setter Property="HorizontalAlignment" Value="Center" />
    <Setter Property="Cursor" Value="Hand" />
    <Setter Property="Padding" Value="0" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="Button">
          <Grid Background="{StaticResource TransparentBrush}">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="MouseOver" />
                <VisualState x:Name="Pressed" />
                <VisualState x:Name="Disabled" />
              </VisualStateGroup>
              <VisualStateGroup x:Name="FocusStates">
                <VisualState x:Name="Focused" />
                <VisualState x:Name="Unfocused" />
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <ContentPresenter x:Name="contentPresenter" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- *********************************  XamHierarchicalItem  ********************************* -->
  <Style x:Key="XamHierarchicalItem" TargetType="igPivot:XamHierarchicalItem">
    <Setter Property="Background" Value="{StaticResource TransparentBrush}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igPivot:XamHierarchicalItem">
          <Grid>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="ItemTypeStates">
                <VisualState x:Name="Cube">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Duration="00:00:00" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="CubeIcon">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Measure">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Duration="00:00:00" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="MeasureIcon">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Dimension">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Duration="00:00:00" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="DimensionIcon">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="UserDefinedHierarchy">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Duration="00:00:00" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="HierarchyMultipleIcon">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="SystemEnabledHierarchy">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Duration="00:00:00" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="HierarchySingleIcon">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="ParentChildHierarchy">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Duration="00:00:00" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="HierarchyDirectIcon">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Level1">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Duration="00:00:00" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="Level1Icon">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Level2">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Duration="00:00:00" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="Level2Icon">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Level3">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Duration="00:00:00" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="Level3Icon">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Level4">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Duration="00:00:00" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="Level4Icon">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Level5">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Duration="00:00:00" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="Level5Icon">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Group">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Duration="00:00:00" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="FolderIcon">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Kpi" >
                  <Storyboard >
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="KPIIcon">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid Background="{StaticResource TransparentBrush}">
              <StackPanel Orientation="Horizontal">
                <Grid Margin="-5, 0, 5, 0">
                  <Image x:Name="Icon" HorizontalAlignment="Left" />
                  <Canvas x:Name="KPIIcon" HorizontalAlignment="Left" Height="14" VerticalAlignment="Top" Width="16" Margin="0,3,0,0" Visibility="Collapsed">
                    <Rectangle Stroke="{StaticResource IconBorderBrush1}" StrokeThickness="1" Width="11" Height="4" RadiusX="1" RadiusY="1" Canvas.Top="10" Fill="{StaticResource IconBackgroundBrush1}" />
                    <Rectangle Stroke="{StaticResource IconBorderBrush2}" StrokeThickness="1" Width="11" Height="4" RadiusX="1" RadiusY="1" Canvas.Top="5" Canvas.Left="5" Fill="{StaticResource IconBackgroundBrush2}" />
                    <Rectangle Stroke="{StaticResource IconBorderBrush3}" StrokeThickness="1" Width="11" Height="4" RadiusX="1" RadiusY="1" Canvas.Left="3" Fill="{StaticResource IconBackgroundBrush3}" />
                  </Canvas>
                  <Canvas x:Name="MeasureIcon" HorizontalAlignment="Left" Height="12" VerticalAlignment="Top" Width="14" Margin="0,2,0,0" Visibility="Collapsed">
                    <Grid HorizontalAlignment="Left" Height="12" VerticalAlignment="Center" Width="14">
                      <Path Data="M0,0 L4,0 L4,10 L0,10 z" Fill="{StaticResource IconBorderBrush3}" HorizontalAlignment="Right" VerticalAlignment="Bottom" Height="10" Width="4" Margin="0,2,0,0" Stretch="Fill" igPrim:XamlHelper.SnapsToDevicePixels="True" />
                      <Path Data="M0,0 L4,0 L4,12 L0,12 z" Fill="{StaticResource IconBackgroundBrush2}" Height="12" Width="4" VerticalAlignment="Bottom" Stretch="Fill" igPrim:XamlHelper.SnapsToDevicePixels="True" />
                      <Path Data="M0,0 L4,0 L4,9 L0,9 z" Fill="{StaticResource IconBackgroundBrush1}" HorizontalAlignment="Left" VerticalAlignment="Bottom" Width="4" Height="9" Margin="0,3,0,0" Stretch="Fill" igPrim:XamlHelper.SnapsToDevicePixels="True" />
                      <Path Data="M1,3.9999999 L1,11 3,11 3,3.9999999 z M11,3 L11,11 13,11 13,3 z M0,3 L1,3 3,3 4,3 4,3.9999999 4,11 4,12 3,12 1,12 0,12 0,11 0,3.9999999 z M10,2 L11,2 13,2 14,2 14,3 14,11 14,12 13,12 11,12 10,12 10,11 10,3 z M6,1.0000001 L6,11 8,11 8,1.0000001 z M5,0 L6,0 8,0 9,0 9,1.0000001 9,11 9,12 8,12 6,12 5,12 5,11 5,1.0000001 z" Fill="{StaticResource MeasureIconBorderBrush}" Height="12" Width="14" igPrim:XamlHelper.SnapsToDevicePixels="True" Stretch="Fill" />
                    </Grid>
                  </Canvas>
                  <Canvas x:Name="CubeIcon" HorizontalAlignment="Left" Height="16" VerticalAlignment="Top" Width="16" Margin="0,2,0,0" Visibility="Collapsed">
                    <Path Height="16" Width="16.028" Data="M63,88 C63,88 63,98 63,98 C63,98 72,102 72,102 C72,102 78.9375,99.25 79,99 C79.0625,98.75 79,89 79,89 C79,89 71.533394,86 71.533394,86 C71.533394,86 69.533264,86 69.533264,86 C69.533264,86 63,88 63,88 z" Style="{StaticResource IconsPathStyle}" Fill="{StaticResource MemberIconBackgroundBrush1}" Stroke="{StaticResource MemberIconBorderBrush1}" />
                    <Path Height="13.575" Width="9.025" Data="M63,88.57209 C63,88.57209 63,98 63,98 C63,98 72.028587,101.83362 72.028587,101.83362 C72.028587,101.83362 72,101.19231 72,101.19231 C72,101.19231 72,92 72,92 C72,92 63.65696,88.291985 63.65696,88.291985 C63.65696,88.291985 63,88.57209 63,88.57209 z" Canvas.Top="2.271" Style="{StaticResource IconsPathStyle}" Stroke="{StaticResource MemberIconBorderBrush1}" Fill="{StaticResource MemberIconBackgroundBrush1}" />
                    <Path Height="12.699" Width="7.992" Data="M79.314301,88.77491 C79.314301,88.77491 79.374336,99.046349 79.374336,99.046349 C79.374336,99.046349 71.543602,102.23753 71.543602,102.23753 C71.543602,102.23753 70.925743,101.71934 70.925743,101.71934 C70.92865,102.47984 70.888634,91.856171 70.888634,91.856171 C70.888634,91.856171 79.314301,88.77491 79.314301,88.77491 z" Canvas.Left="8.087" Canvas.Top="3.336" Style="{StaticResource IconsPathStyle}" Stroke="{StaticResource MemberIconBorderBrush1}" Fill="{StaticResource MemberIconBackgroundBrush1}" />
                  </Canvas>
                  <Canvas x:Name="MemberIcon" HorizontalAlignment="Left" Height="16" VerticalAlignment="Top" Width="12" Margin="0,2,0,0" Visibility="Collapsed">
                    <Path Height="10" Width="12" Data="M 119,34.42034912109375 C119,30.9808349609375 121.68621826171875,27 125,27 128.31378173828125,27 131,30.9808349609375 131,34.42034912109375 131,37.85986328125 119,37.85986328125 119,34.42034912109375 z" Stroke="{StaticResource MemberIconBorderBrush1}" StrokeThickness="1" Canvas.Top="6" Style="{StaticResource IconsPathStyle}" Fill="{StaticResource MemberIconBackgroundBrush1}" />
                    <Ellipse Height="8" Canvas.Left="2" Stroke="{StaticResource MemberIconBorderBrush1}" StrokeThickness="1" Width="8" Fill="{StaticResource MemberIconBackgroundBrush1}" />
                  </Canvas>
                  <Canvas x:Name="MembersIcon" HorizontalAlignment="Left" Height="16" VerticalAlignment="Top" Width="15" Margin="0,2,0,0" Visibility="Collapsed">
                    <Path Height="10" Width="12" Data="M 119,34.42034912109375 C119,30.9808349609375 121.68621826171875,27 125,27 128.31378173828125,27 131,30.9808349609375 131,34.42034912109375 131,37.85986328125 119,37.85986328125 119,34.42034912109375 z" Stroke="{StaticResource MemberIconBorderBrush1}" StrokeThickness="1" Canvas.Top="6" Fill="{StaticResource MemberIconBackgroundBrush1}" Style="{StaticResource IconsPathStyle}" />
                    <Path Height="8.125" Width="10" Data="M 124,34.904052734375 C124,32.10943603515625 126.238525390625,28.875 129,28.875 131.761474609375,28.875 134,32.10943603515625 134,34.904052734375 134,37.6986083984375 124,37.6986083984375 124,34.904052734375 z" Stroke="{StaticResource MemberIconBorderBrush2}" StrokeThickness="1" Canvas.Left="5" Canvas.Top="7.875" Style="{StaticResource IconsPathStyle}" Fill="{StaticResource MemberIconBackgroundBrush2}" />
                    <Ellipse Fill="{StaticResource MemberIconBackgroundBrush1}" Height="8" Canvas.Left="2" Stroke="{StaticResource MemberIconBorderBrush1}" StrokeThickness="1" Width="8" />
                    <Ellipse Height="6.5" Width="6.667" Canvas.Left="6.666" Stroke="{StaticResource MemberIconBorderBrush2}" StrokeThickness="1" Canvas.Top="3" Fill="{StaticResource MemberIconBackgroundBrush2}" />
                  </Canvas>
                  <Canvas x:Name="HierarchySingleIcon" HorizontalAlignment="Left" Height="15" VerticalAlignment="Top" Width="15" Margin="1,3,0,0" Visibility="Collapsed">
                    <Rectangle Height="6" Canvas.Left="4" Width="7" Stroke="{StaticResource MemberIconBorderBrush1}" Fill="{StaticResource MemberIconBackgroundBrush1}" />
                    <Rectangle Height="6" Width="7" Stroke="{StaticResource MemberIconBorderBrush1}" Fill="{StaticResource MemberIconBackgroundBrush1}" Canvas.Top="9" />
                    <Rectangle Height="6" Width="7" Stroke="{StaticResource MemberIconBorderBrush1}" Fill="{StaticResource MemberIconBackgroundBrush1}" Canvas.Top="9" Canvas.Left="8" />
                    <Path Data="M8,2 L9,2 L9,3 L8,3 z M0,2 L0.99999994,2 L0.99999994,3 L0,3 z M4,0 L5,0 L5,1 L8,1 L8,2 L5,2 L4,2 L0.99999994,2 L0.99999994,1 L4,1 z" Fill="{StaticResource MemberIconBorderBrush1}" Height="3" Canvas.Left="3" Stretch="Fill" Canvas.Top="6" UseLayoutRounding="False" Width="9" />
                  </Canvas>
                  <Canvas x:Name="HierarchyMultipleIcon" HorizontalAlignment="Left" Height="15" VerticalAlignment="Top" Width="14" Margin="1,3,0,0" Visibility="Collapsed">
                    <Rectangle Height="5" Canvas.Left="4" Width="6" Stroke="{StaticResource MemberIconBorderBrush2}" Fill="{StaticResource MemberIconBackgroundBrush2}" />
                    <Path Data="M0.5,0.5 L3.5,0.5 L3.5,3.5 L0.5,3.5 z" Fill="{StaticResource MemberIconBackgroundBrush1}" Height="4" Canvas.Left="8" Stretch="Fill" Stroke="{StaticResource MemberIconBorderBrush1}" Canvas.Top="6" UseLayoutRounding="False" Width="4" />
                    <Path Data="M0.5,0.5 L3.5,0.5 L3.5,3.5 L0.5,3.5 z" Fill="{StaticResource MemberIconBackgroundBrush1}" Height="4" Canvas.Left="2" Stretch="Fill" Stroke="{StaticResource MemberIconBorderBrush1}" Canvas.Top="6" UseLayoutRounding="False" Width="4" />
                    <Path Data="M0.5,0.5 L3.5,0.5 L3.5,3.5 L0.5,3.5 z" Fill="{StaticResource MemberIconBackgroundBrush1}" Height="4" Stretch="Fill" Stroke="{StaticResource MemberIconBorderBrush1}" Canvas.Top="11" UseLayoutRounding="False" Width="4" Canvas.Left="10" />
                    <Path Data="M0.5,0.5 L3.5,0.5 L3.5,3.5 L0.5,3.5 z" Fill="{StaticResource MemberIconBackgroundBrush1}" Height="4" Stretch="Fill" Stroke="{StaticResource MemberIconBorderBrush1}" Canvas.Top="11" UseLayoutRounding="False" Width="4" Canvas.Left="5" />
                    <Path Data="M0.5,0.5 L3.5,0.5 L3.5,3.5 L0.5,3.5 z" Fill="{StaticResource MemberIconBackgroundBrush1}" Height="4" Stretch="Fill" Stroke="{StaticResource MemberIconBorderBrush1}" Canvas.Top="11" UseLayoutRounding="False" Width="4" />
                    <Path Data="M11,5 L12,5 L12,6 L11,6 z M5,5 L7,5 L7,6 L5,6 z M0,5 L1,5 L1,6 L0,6 z M8,0 L9,0 L9,0.99999994 L8,0.99999994 z M3,0 L4,0 L4,0.99999994 L3,0.99999994 z" Fill="{StaticResource MemberIconBorderBrush1}" Height="6" Canvas.Left="1" Stretch="Fill" Canvas.Top="5" UseLayoutRounding="False" Width="12" />
                  </Canvas>
                  <Canvas x:Name="HierarchyDirectIcon" HorizontalAlignment="Left" Height="15" VerticalAlignment="Top" Width="15" Margin="1,3,0,0" Visibility="Collapsed">
                    <Rectangle Height="6" Canvas.Left="4" Width="7" Stroke="{StaticResource MemberIconBorderBrush2}" Fill="{StaticResource MemberIconBackgroundBrush2}" />
                    <Rectangle Height="6" Width="7" Stroke="{StaticResource MemberIconBorderBrush1}" Fill="{StaticResource MemberIconBackgroundBrush1}" Canvas.Top="9" />
                    <Rectangle Height="6" Width="7" Stroke="{StaticResource MemberIconBorderBrush1}" Fill="{StaticResource MemberIconBackgroundBrush1}" Canvas.Top="9" Canvas.Left="8" />
                    <Path Data="M8,2 L9,2 L9,3 L8,3 z M0,2 L0.99999994,2 L0.99999994,3 L0,3 z M4,0 L5,0 L5,1 L8,1 L8,2 L5,2 L4,2 L0.99999994,2 L0.99999994,1 L4,1 z" Fill="{StaticResource MemberIconBorderBrush1}" Height="3" Canvas.Left="3" Stretch="Fill" Canvas.Top="6" UseLayoutRounding="False" Width="9" />
                    <Path Data="M2.0000007,0 L3.0000007,0 L3.0000007,2 L5,2 L5,3 L4,3 L4,4 L3.0000007,4 L3.0000007,5 L2.0000007,5 L2.0000007,4 L1.0000001,4 L1.0000001,3 L0,3 L0,2 L2.0000007,2 z" Height="5" Canvas.Left="5" Stretch="Fill" Canvas.Top="1" UseLayoutRounding="False" Width="5" Fill="{StaticResource GlyphBorderBrush}" />
                  </Canvas>
                  <Canvas x:Name="HierarchyKeyIcon" HorizontalAlignment="Left" Height="15" VerticalAlignment="Top" Width="16" Margin="0,3,0,0" Visibility="Collapsed">
                    <Rectangle Height="6" Canvas.Left="4" Width="7" Stroke="{StaticResource MemberIconBorderBrush1}" Fill="{StaticResource MemberIconBackgroundBrush1}" />
                    <Rectangle Height="6" Width="7" Stroke="{StaticResource MemberIconBorderBrush1}" Fill="{StaticResource MemberIconBackgroundBrush1}" Canvas.Top="9" />
                    <Rectangle Height="6" Width="7" Stroke="{StaticResource MemberIconBorderBrush1}" Fill="{StaticResource MemberIconBackgroundBrush1}" Canvas.Top="9" Canvas.Left="8" />
                    <Path Data="M8,2 L9,2 L9,3 L8,3 z M0,2 L0.99999994,2 L0.99999994,3 L0,3 z M4,0 L5,0 L5,1 L8,1 L8,2 L5,2 L4,2 L0.99999994,2 L0.99999994,1 L4,1 z" Fill="{StaticResource MemberIconBorderBrush1}" Height="3" Canvas.Left="3" Stretch="Fill" Canvas.Top="6" UseLayoutRounding="False" Width="9" />
                    <Path Data="M7.4634323,1.5530996 C6.7883339,1.5440315 6.3404884,2.1572566 6.3404884,2.1572566 C6.3404884,2.1572566 5.3078618,3.3287461 6.2990036,4.0946884 C7.2151556,4.8026795 8.2567205,3.6159308 8.2567205,3.6159308 C8.2567205,3.6159308 9.1313419,2.6359377 8.4234905,1.9903953 C8.074028,1.6716944 7.7484736,1.5569284 7.4634323,1.5530996 z M8.0523033,0.25016463 C8.6883917,0.24310315 9.5177956,0.46125984 10.424172,1.2827014 C11.589375,2.3387158 12.090031,4.365943 10.341253,6.0122519 C8.0676279,8.1526566 7.0658894,6.8569202 6.6533146,6.9747882 C6.2157931,7.0997829 7.0066204,7.8033032 6.5899343,8.2407846 C6.3418188,8.5012836 5.4585581,8.2240629 5.4585581,8.2240629 C5.4585581,8.2240629 5.5699339,8.951334 5.0059991,9.0025959 C4.5476441,9.04426 4.0646758,8.9663849 4.0646758,8.9663849 L2.2252409,10.952096 C2.2252409,10.952096 1.3536065,11.476976 0.83083457,10.996157 C0.3080627,10.515338 -0.065274037,9.8400793 0.63173258,9.0532541 C1.3287392,8.266428 4.694334,4.9284201 4.694334,4.9284201 C4.694334,4.9284201 4.1280046,3.550714 4.694334,2.7201765 C5.2606635,1.8896389 6.7985001,0.59526217 6.7985001,0.59526217 C6.7985001,0.59526217 7.2846098,0.25868708 8.0523033,0.25016463 z" Height="9.949" Width="10.194" Canvas.Left="4.848" Canvas.Top="4.384" StrokeThickness="0.5" Stretch="Fill" UseLayoutRounding="False" d:LayoutRounding="Auto" Fill="{StaticResource MemberIconBackgroundBrush2}" Stroke="{StaticResource MemberIconBorderBrush2}" />

                  </Canvas>
                  <Canvas x:Name="DimensionIcon" HorizontalAlignment="Left" Height="16" VerticalAlignment="Top" Width="16" Margin="0,2,0,0" Visibility="Collapsed">
                    <Path Data="M3.5000005,13 L4.5,13 L4.5,14 L3.5000005,14 z M1.5000011,13 L2.5000005,13 L2.5000005,14 L1.5000011,14 z M1.5000011,11 L2.5000005,11 L2.5000005,12 L1.5000011,12 z M11.5,8.5 L15.5,12 L11.5,15.5 L11.5,14 L6.5,14 L5.5,14 L5.5,13 L6.5,13 L6.5,10 L11.5,10 z M3.5,0 L7,4 L5.5,4 L5.5,9 L2.4999998,9 L2.4999998,10 L1.5,10 L1.5,9 L1.5000005,4 L0,4 z" Fill="{StaticResource MemberIconBackgroundBrush2}" HorizontalAlignment="Left" Height="16" Stretch="Fill" UseLayoutRounding="False" VerticalAlignment="Bottom" Width="16" Margin="0" />
                    <Path Data="M3.6129036,13.419354 L4.6451612,13.419354 L4.6451612,14.451612 L3.6129036,14.451612 z M1.548388,13.419354 L2.5806456,13.419354 L2.5806456,14.451612 L1.548388,14.451612 z M1.548388,11.354838 L2.5806456,11.354838 L2.5806456,12.387096 L1.548388,12.387096 z M12.729166,10.624664 L12.729166,11.249997 L7.6878467,11.270235 L7.6669998,13.416831 L12.750569,13.375155 L12.750569,14.042 L14.729499,12.291504 z M11.870968,8.7741928 L16,12.387096 L11.870968,16 L11.870968,14.451612 L6.7096772,14.451612 L5.6774192,14.451612 L5.6774192,13.419354 L6.7096772,13.419354 L6.7096772,10.32258 L11.870968,10.32258 z M3.625,1.5204999 L2.125,3.125 L2.6458333,3.125 L2.625,8.21875 L4.645833,8.21875 L4.645833,3.1670001 L5.1669998,3.1670001 z M3.6129031,0 L7.2258062,4.1290321 L5.6774192,4.1290321 L5.6774192,9.2903223 L2.5806448,9.2903223 L2.5806448,10.32258 L1.5483871,10.32258 L1.5483871,9.2903223 L1.5483875,4.1290321 L0,4.1290321 z" Fill="{StaticResource MemberIconBorderBrush2}" HorizontalAlignment="Left" Height="16" Margin="0" Stretch="Fill" UseLayoutRounding="False" VerticalAlignment="Bottom" Width="16" />
                  </Canvas>
                  <Canvas x:Name="Level5Icon" HorizontalAlignment="Left" Height="11" Width="13" VerticalAlignment="Top" Margin="1,5,0,0" Visibility="Collapsed">
                    <Rectangle Opacity="1" Fill="{StaticResource CalendarBackgroundBrush}" Height="11" Width="13" />
                    <Rectangle Opacity="1" Fill="{StaticResource CalendarInnerBackgroundBrush}" Height="7" Canvas.Left="1" Canvas.Top="3" Width="11" />
                    <Path Data="M4.000001,5.9604656E-07 L5.000001,5.9604656E-07 L5.000001,1.0000006 L4.000001,1.0000006 z M2.0000007,5.9604656E-07 L3.0000007,5.9604656E-07 L3.0000007,1.0000006 L2.0000007,1.0000006 z M0,0 L1,0 L1,1 L0,1 z" Fill="{StaticResource CalendarInnerBackgroundBrush}" Height="1" Canvas.Left="4" Stretch="Fill" UseLayoutRounding="False" Width="5" VerticalAlignment="Top" Canvas.Top="1" />
                    <Path Data="M0,0 L1,0 L4,0 L4,1 L1,1 L1,2 L3,2 L4,2 L4,3 L4,4 L4,5 L3,5 L0,5 L0,4 L3,4 L3,3 L1,3 L0,3 L0,2 L0,1 z" Fill="{StaticResource CalendarNumbersBackgroundBrush}" Height="5" Width="4" Canvas.Left="5" Canvas.Top="4" Style="{StaticResource IconsPathStyle}" />
                  </Canvas>
                  <Canvas x:Name="Level4Icon" HorizontalAlignment="Left" Height="11" Width="13" VerticalAlignment="Top" Margin="1,5,0,0" Visibility="Collapsed">
                    <Rectangle Opacity="1" Fill="{StaticResource CalendarBackgroundBrush}" Height="11" Width="13" />
                    <Rectangle Opacity="1" Fill="{StaticResource CalendarInnerBackgroundBrush}" Height="7" Canvas.Left="1" Canvas.Top="3" Width="11" />
                    <Path Data="M4.000001,5.9604656E-07 L5.000001,5.9604656E-07 L5.000001,1.0000006 L4.000001,1.0000006 z M2.0000007,5.9604656E-07 L3.0000007,5.9604656E-07 L3.0000007,1.0000006 L2.0000007,1.0000006 z M0,0 L1,0 L1,1 L0,1 z" Fill="{StaticResource CalendarInnerBackgroundBrush}" Height="1" Canvas.Left="4" Stretch="Fill" UseLayoutRounding="False" Width="5" VerticalAlignment="Top" Canvas.Top="1" />
                    <Path Data="M0,0 L1,0 L1,1.9999999 L2,1.9999999 L2,0 L3,0 L3,1.9999999 L4.000001,1.9999999 L4.000001,3 L3,3 L3,5 L2,5 L2,3 L1,3 L0,3 z" Fill="{StaticResource CalendarNumbersBackgroundBrush}" Height="5" Width="4" Canvas.Left="5" Canvas.Top="4" Style="{StaticResource IconsPathStyle}" />
                  </Canvas>
                  <Canvas x:Name="Level3Icon" HorizontalAlignment="Left" Height="11" Width="13" VerticalAlignment="Top" Margin="1,5,0,0" Visibility="Collapsed">
                    <Rectangle Opacity="1" Fill="{StaticResource CalendarBackgroundBrush}" Height="11" Width="13" />
                    <Rectangle Opacity="1" Fill="{StaticResource CalendarInnerBackgroundBrush}" Height="7" Canvas.Left="1" Canvas.Top="3" Width="11" />
                    <Path Data="M4.000001,5.9604656E-07 L5.000001,5.9604656E-07 L5.000001,1.0000006 L4.000001,1.0000006 z M2.0000007,5.9604656E-07 L3.0000007,5.9604656E-07 L3.0000007,1.0000006 L2.0000007,1.0000006 z M0,0 L1,0 L1,1 L0,1 z" Fill="{StaticResource CalendarInnerBackgroundBrush}" Height="1" Canvas.Left="4" Stretch="Fill" UseLayoutRounding="False" Width="5" VerticalAlignment="Top" Canvas.Top="1" />
                    <Canvas Height="5" Canvas.Left="5" Canvas.Top="4" Width="4" />
                    <Path Data="M0,0 L3,0 L4,0 L4,0.99999994 L4,4 L4,5 L3,5 L5.9604645E-08,5 L5.9604645E-08,4 L3,4 L3,2.9999995 L1,2.9999995 L1,1.9999996 L3,1.9999996 L3,0.99999994 L0,0.99999994 z" Fill="{StaticResource CalendarNumbersBackgroundBrush}" Height="5" Canvas.Left="5" Stretch="Fill" Canvas.Top="4" UseLayoutRounding="False" Width="4" />
                  </Canvas>
                  <Canvas x:Name="Level2Icon" HorizontalAlignment="Left" Height="11" Width="13" VerticalAlignment="Top" Margin="1,5,0,0" Visibility="Collapsed">
                    <Rectangle Opacity="1" Fill="{StaticResource CalendarBackgroundBrush}" Height="11" Width="13" />
                    <Rectangle Opacity="1" Fill="{StaticResource CalendarInnerBackgroundBrush}" Height="7" Canvas.Left="1" Canvas.Top="3" Width="11" />
                    <Path Data="M4.000001,5.9604656E-07 L5.000001,5.9604656E-07 L5.000001,1.0000006 L4.000001,1.0000006 z M2.0000007,5.9604656E-07 L3.0000007,5.9604656E-07 L3.0000007,1.0000006 L2.0000007,1.0000006 z M0,0 L1,0 L1,1 L0,1 z" Fill="{StaticResource CalendarInnerBackgroundBrush}" Height="1" Canvas.Left="4" Stretch="Fill" UseLayoutRounding="False" Width="5" VerticalAlignment="Top" Canvas.Top="1" />
                    <Path Data="M0,0 L3,0 L4,0 L4,1 L4,2 L4,3 L3,3 L1,3 L1,4 L4,4 L4,5 L1,5 L0,5 L0,3 L0,2 L1,2 L3,2 L3,1 L0,1 z" Fill="{StaticResource CalendarNumbersBackgroundBrush}" Height="5" Canvas.Left="5" Canvas.Top="4" Width="4" Style="{StaticResource IconsPathStyle}" />
                  </Canvas>
                  <Canvas x:Name="Level1Icon" HorizontalAlignment="Left" Height="11" Width="13" VerticalAlignment="Top" Margin="1,5,0,0" Visibility="Collapsed">
                    <Rectangle Opacity="1" Fill="{StaticResource CalendarBackgroundBrush}" Height="11" Width="13" />
                    <Rectangle Opacity="1" Fill="{StaticResource CalendarInnerBackgroundBrush}" Height="7" Canvas.Left="1" Canvas.Top="3" Width="11" />
                    <Path Data="M4.000001,5.9604656E-07 L5.000001,5.9604656E-07 L5.000001,1.0000006 L4.000001,1.0000006 z M2.0000007,5.9604656E-07 L3.0000007,5.9604656E-07 L3.0000007,1.0000006 L2.0000007,1.0000006 z M0,0 L1,0 L1,1 L0,1 z" Fill="{StaticResource CalendarInnerBackgroundBrush}" Height="1" Canvas.Left="4" Stretch="Fill" UseLayoutRounding="False" Width="5" VerticalAlignment="Top" Canvas.Top="1" />
                    <Path Data="M1,0 L2,0 L2,4 L3,4 L3,5 L2,5 L1,5 L0,5 L0,4 L1,4 L1,2 L0,2 L0,1 L1,1 z" Fill="{StaticResource CalendarNumbersBackgroundBrush}" Height="5" Width="3" Canvas.Left="5" Canvas.Top="4" Style="{StaticResource IconsPathStyle}" />
                  </Canvas>
                  <Canvas x:Name="FolderIcon" HorizontalAlignment="Left" Height="13" VerticalAlignment="Top" Width="16" Margin="0,4,0,0" Visibility="Collapsed">
                    <Path Data="M1.5,0.5 L5.5,0.5 C6.0522847,0.5 6.5,0.94771522 6.5,1.4999999 L12.5,1.4999999 C13.052285,1.5 13.5,1.9477153 13.5,2.5 L13.5,11.5 C13.5,12.052285 13.052285,12.5 12.5,12.5 L1.5,12.5 C0.94771522,12.5 0.5,12.052285 0.5,11.5 L0.5,2.5 L0.5,1.4999999 C0.5,0.94771522 0.94771522,0.5 1.5,0.5 z" Fill="{StaticResource MemberIconBackgroundBrush1}" Height="13" Stroke="{StaticResource MemberIconBorderBrush1}" Width="14" Style="{StaticResource IconsPathStyle}" />
                    <Rectangle Height="10" Canvas.Left="2" RadiusY="1" RadiusX="1" Width="14" Stroke="{StaticResource MemberIconBorderBrush1}" Fill="{StaticResource MemberIconBackgroundBrush1}" Canvas.Top="3" />
                  </Canvas>
                </Grid>
                <TextBlock Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=HierarchicalItem.Caption}" />
              </StackPanel>
            </Grid>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="igPivot:XamHierarchicalItem" BasedOn="{StaticResource XamHierarchicalItem}" />

  <!-- *********************************  Pivot Header Cell Control  ********************************* -->
  <Style TargetType="igPivot:PivotHeaderCellControl" x:Key="HeaderCellKey">
    <Setter Property="FontSize" Value="11" />
    <Setter Property="Background" Value="{StaticResource HeaderCellBackgroundBrush}" />
    <Setter Property="Foreground" Value="{StaticResource HeaderCellForegroundBrush}" />
    <Setter Property="BorderBrush" Value="{StaticResource HeaderCellBorderBrush}" />
    <Setter Property="BorderThickness" Value="0,0,1,1" />
    <Setter Property="HorizontalContentAlignment" Value="Left" />
    <Setter Property="VerticalContentAlignment" Value="Stretch" />
    <Setter Property="Padding" Value="8,4,0,4" />
    <Setter Property="ExpansionIndicatorStyle" Value="{StaticResource HeaderCellControlExpansionIndicatorStyle}" />
  </Style>

  <!-- *********************************  Pivot Column Header Cell Control  ********************************* -->
  <Style TargetType="igPivot:PivotColumnHeaderCellControl" BasedOn="{StaticResource HeaderCellKey}">
    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
    <Setter Property="VerticalContentAlignment" Value="Center" />
    <Setter Property="MinHeight" Value="25" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igPivot:PivotColumnHeaderCellControl">
          <Border BorderBrush="{TemplateBinding BorderBrush}">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal">
                </VisualState>
                <VisualState x:Name="MouseOver">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="fill" Storyboard.TargetProperty="Background">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{StaticResource HeaderCellHoverBackgroundBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="fill" Storyboard.TargetProperty="BorderBrush">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{StaticResource HeaderCellHoverBorderBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="optionsPane" Storyboard.TargetProperty="(UIElement.Visibility)">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="SortedStates">
                <VisualState x:Name="NotSorted">
                </VisualState>
                <VisualState x:Name="Ascending">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="SortedAscending" Storyboard.TargetProperty="(UIElement.Visibility)">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Descending">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="SortedDescending" Storyboard.TargetProperty="(UIElement.Visibility)">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="SummaryStates">
                <VisualState x:Name="SummaryTotal">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HeaderPresenterColumn" Storyboard.TargetProperty="Width">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <GridLength>Auto</GridLength>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="AllowHeaderSorting">
                <VisualState x:Name="EnabledHeaderSortIndicator">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HeaderSortBtn" Storyboard.TargetProperty="(UIElement.Visibility)">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="DisabledHeaderSortIndicator">
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="AllowColumnHiding">
                <VisualState x:Name="EnabledHidingIndicator">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="columnHidingVisual" Storyboard.TargetProperty="(UIElement.Visibility)">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="DisabledHidingIndicator">
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="AllowColumnSorting">
                <VisualState x:Name="EnabledSortingIndicator">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="SortToggle" Storyboard.TargetProperty="(UIElement.Visibility)">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="DisabledSortingIndicator">
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="SelectedStates">
                <VisualState x:Name="NotSelected" />
                <VisualState x:Name="Selected">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="SelectedRect" Storyboard.TargetProperty="(UIElement.Visibility)">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid igPrim:XamlHelper.SnapsToDevicePixels="{TemplateBinding igPrim:XamlHelper.SnapsToDevicePixels}">
              <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" x:Name="fill">
                <Grid VerticalAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}">
                  <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                  </Grid.ColumnDefinitions>
                  <Border x:Name="SelectedRect" Background="{StaticResource HeaderCellSelectedBackgroundBrush}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{StaticResource HeaderCellSelectedBorderBrush}" Visibility="Collapsed" Margin="0,0,-1,-1" Grid.ColumnSpan="3" />
                  <ToggleButton Grid.Column="0" x:Name="ExpansionIndicator" Width="15" Height="15" Margin="3" VerticalAlignment="Center" Padding="0" Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Cell.IsToggleVisible, Converter={StaticResource boolToVisibilityConverter}, Mode=OneWay}" IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Style="{TemplateBinding ExpansionIndicatorStyle}" />
                  <Grid Grid.Column="1">
                    <Grid.ColumnDefinitions>
                      <ColumnDefinition Width="*" x:Name="HeaderPresenterColumn" />
                      <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <ContentControl x:Name="HeaderPresenter" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" VerticalContentAlignment="Center" HorizontalContentAlignment="Stretch" Margin="{TemplateBinding Padding}" Foreground="{TemplateBinding Foreground}" />
                    <TextBlock Grid.Column="1" VerticalAlignment="Center" Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Cell.IsTotalVisible, Converter={StaticResource boolToVisibilityConverter}, Mode=OneWay}" x:Name="TotalText" Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Cell.Grid.StringSetting.CellTotal}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="5,0" Foreground="{TemplateBinding Foreground}" />
                  </Grid>
                  <Grid Grid.Column="2" Margin="0,0,5,0">
                    <Path IsHitTestVisible="False" x:Name="SortedDescending" HorizontalAlignment="Center" VerticalAlignment="Center" Data="M 0 0 L 4 4 L 8 0 Z" Fill="{StaticResource HeaderCellGlyphBrush}" Visibility="Collapsed" />
                    <Path IsHitTestVisible="False" x:Name="SortedAscending" HorizontalAlignment="Center" VerticalAlignment="Center" Data="M0,4 L8,4 L4,0 z" Fill="{StaticResource HeaderCellGlyphBrush}" Visibility="Collapsed" />
                  </Grid>
                  <Border x:Name="optionsPane" Background="{StaticResource HeaderCellOptionsPaneBackgroundBrush}" Margin="5,0,0,0" Grid.ColumnSpan="4" HorizontalAlignment="Right" Visibility="Collapsed">
                    <Grid>
                      <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                      </Grid.ColumnDefinitions>
                      <ToggleButton x:Name="HeaderSortBtn" Grid.Column="0" Style="{StaticResource HeaderCellSortBtn}" IsThreeState="False" Margin="5" Visibility="Collapsed">
                        <ig:Commanding.Command>
                          <igPivot:XamPivotGridCommandSource CommandType="SortAxisMember" EventName="Click" />
                        </ig:Commanding.Command>
                      </ToggleButton>
                      <CheckBox x:Name="SortToggle" Grid.Column="2" Style="{StaticResource FilterCellSortBtn}" IsThreeState="True" Margin="5" Visibility="Collapsed">
                        <ig:Commanding.Command>
                          <igPivot:PivotColumnCommandSource CommandType="SortToggle" EventName="Click" />
                        </ig:Commanding.Command>
                      </CheckBox>
                      <Grid x:Name="columnHidingVisual" Background="{StaticResource TransparentBrush}" Width="20" Grid.Column="1" Cursor="Hand" Margin="0,5" Visibility="Collapsed">
                        <Path Data="M9.8222179,1.1322494E-06 L12.663995,1.1322494E-06 L8.6729612,5.0000014 L12.663995,10.000002 L9.8222179,10.000002 L5.8309941,4.9573879 z M3.9912238,0 L6.8330007,0 L2.8419673,5 L6.8330007,10 L3.9912238,10 L0,4.9573865 z" Fill="{StaticResource HeaderCellGlyphBrush}" VerticalAlignment="Center" Height="8" UseLayoutRounding="False" Width="12" HorizontalAlignment="Center" Stretch="Fill" />
                        <ig:Commanding.Command>
                          <igPivot:XamPivotGridCommandSource CommandType="HideAxis" EventName="MouseLeftButtonDown" />
                        </ig:Commanding.Command>
                      </Grid>
                    </Grid>
                  </Border>
                </Grid>
              </Border>
            </Grid>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- *********************************  Pivot Row Header Cell Control  ********************************* -->
  <Style TargetType="igPivot:PivotRowHeaderCellControl" BasedOn="{StaticResource HeaderCellKey}">
    <Setter Property="Padding" Value="8,4" />
    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igPivot:PivotRowHeaderCellControl">
          <Border BorderBrush="{TemplateBinding BorderBrush}">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal">
                </VisualState>
                <VisualState x:Name="MouseOver">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="fill" Storyboard.TargetProperty="Background">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{StaticResource HeaderCellHoverBackgroundBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="fill" Storyboard.TargetProperty="BorderBrush">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{StaticResource HeaderCellHoverBorderBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="optionsPane" Storyboard.TargetProperty="(UIElement.Visibility)">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="AllowHeaderSorting">
                <VisualState x:Name="EnabledHeaderSortIndicator">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HeaderSortBtn" Storyboard.TargetProperty="(UIElement.Visibility)">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="DisabledHeaderSortIndicator">
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="AllowRowHiding">
                <VisualState x:Name="EnabledHidingIndicator">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="columnHidingVisual" Storyboard.TargetProperty="(UIElement.Visibility)">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="DisabledHidingIndicator">
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="SummaryStates">
                <VisualState x:Name="SummaryValue">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="TotalText" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Collapsed</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="SummaryTotal">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="TotalText" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HeaderPresenterColumn" Storyboard.TargetProperty="Width">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <GridLength>Auto</GridLength>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="CompactLayout">
                <VisualState x:Name="OutlineLeftRightBottom">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="fill" Storyboard.TargetProperty="BorderThickness">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Thickness>1,0,1,1</Thickness>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="headerGrid" Storyboard.TargetProperty="VerticalAlignment">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <VerticalAlignment>Center</VerticalAlignment>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="OutlineRightBottom">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="fill" Storyboard.TargetProperty="BorderThickness">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Thickness>0,0,1,1</Thickness>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="OutlineLeftRightBottomAlignBottom">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="fill" Storyboard.TargetProperty="BorderThickness">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Thickness>1,0,1,1</Thickness>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="headerGrid" Storyboard.TargetProperty="VerticalAlignment">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <VerticalAlignment>Bottom</VerticalAlignment>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="OutlineRightBottomAlignBottom">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="fill" Storyboard.TargetProperty="BorderThickness">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Thickness>0,0,1,1</Thickness>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="headerGrid" Storyboard.TargetProperty="VerticalAlignment">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <VerticalAlignment>Bottom</VerticalAlignment>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="OutlineLeftRightBottomAlignTop">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="fill" Storyboard.TargetProperty="BorderThickness">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Thickness>1,0,1,1</Thickness>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="headerGrid" Storyboard.TargetProperty="VerticalAlignment">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <VerticalAlignment>Top</VerticalAlignment>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="OutlineRightBottomAlignTop">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="fill" Storyboard.TargetProperty="BorderThickness">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Thickness>0,0,1,1</Thickness>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="headerGrid" Storyboard.TargetProperty="VerticalAlignment">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <VerticalAlignment>Top</VerticalAlignment>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="OutlineAllAlignTop">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="fill" Storyboard.TargetProperty="BorderThickness">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Thickness>1</Thickness>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="fill" Storyboard.TargetProperty="Margin">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Thickness>0,-1,0,0</Thickness>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="headerGrid" Storyboard.TargetProperty="VerticalAlignment">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <VerticalAlignment>Top</VerticalAlignment>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="OutlineAll">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="fill" Storyboard.TargetProperty="BorderThickness">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Thickness>1</Thickness>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="fill" Storyboard.TargetProperty="Margin">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Thickness>0,-1,0,0</Thickness>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="NormalOutline">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="fill" Storyboard.TargetProperty="BorderThickness">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Thickness>0,0,1,1</Thickness>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="fill" Storyboard.TargetProperty="Margin">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Thickness>0</Thickness>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="headerGrid" Storyboard.TargetProperty="VerticalAlignment">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <VerticalAlignment>Center</VerticalAlignment>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="SelectedStates">
                <VisualState x:Name="NotSelected" />
                <VisualState x:Name="Selected">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="SelectedRect" Storyboard.TargetProperty="(UIElement.Visibility)">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid igPrim:XamlHelper.SnapsToDevicePixels="True">
              <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" x:Name="fill">
                <Grid VerticalAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}">
                  <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                  </Grid.ColumnDefinitions>
                  <Border x:Name="SelectedRect" Background="{StaticResource HeaderCellSelectedBackgroundBrush}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{StaticResource HeaderCellSelectedBorderBrush}" Visibility="Collapsed" Margin="0,0,-1,-1" Grid.ColumnSpan="2" />
                  <ToggleButton Grid.Column="0" Name="ExpansionIndicator" Width="15" Height="15" Margin="3" VerticalAlignment="Center" Padding="0" Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Cell.IsToggleVisible, Converter={StaticResource boolToVisibilityConverter}, Mode=OneWay}" IsChecked="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsExpanded, Mode=TwoWay}" Style="{TemplateBinding ExpansionIndicatorStyle}" />

                  <Grid x:Name="headerGrid" Grid.Column="1">
                    <Grid>
                      <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" x:Name="HeaderPresenterColumn" />
                        <ColumnDefinition Width="Auto" />
                      </Grid.ColumnDefinitions>
                      <ContentControl x:Name="HeaderPresenter" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" Margin="{TemplateBinding Padding}" HorizontalContentAlignment="Stretch" Foreground="{TemplateBinding Foreground}" />
                      <TextBlock Grid.Column="1" VerticalAlignment="Center" Visibility="Collapsed" x:Name="TotalText" Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Cell.Grid.StringSetting.CellTotal}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="5,0" Foreground="{TemplateBinding Foreground}" />
                    </Grid>
                    <Border x:Name="optionsPane" Background="{StaticResource HeaderCellOptionsPaneBackgroundBrush}" Margin="5,0,0,0" HorizontalAlignment="Right" Opacity="1" Visibility="Collapsed">
                      <Grid>
                        <Grid.ColumnDefinitions>
                          <ColumnDefinition Width="Auto" />
                          <ColumnDefinition Width="Auto" />
                          <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <ToggleButton x:Name="HeaderSortBtn" Grid.Column="0" Style="{StaticResource HeaderCellSortBtn}" IsThreeState="False" Margin="5" Visibility="Collapsed">
                          <ig:Commanding.Command>
                            <igPivot:XamPivotGridCommandSource CommandType="SortAxisMember" EventName="Click" />
                          </ig:Commanding.Command>
                        </ToggleButton>
                        <CheckBox x:Name="SortToggle" Grid.Column="2" Style="{StaticResource FilterCellSortBtn}" IsThreeState="True" Margin="5" Visibility="Collapsed">
                          <ig:Commanding.Command>
                            <igPivot:PivotColumnCommandSource CommandType="SortToggle" EventName="Click" />
                          </ig:Commanding.Command>
                        </CheckBox>
                        <Grid x:Name="columnHidingVisual" Background="{StaticResource TransparentBrush}" Width="20" Grid.Column="1" Cursor="Hand" Margin="0,5" Visibility="Collapsed">
                          <Path Data="M9.8222179,1.1322494E-06 L12.663995,1.1322494E-06 L8.6729612,5.0000014 L12.663995,10.000002 L9.8222179,10.000002 L5.8309941,4.9573879 z M3.9912238,0 L6.8330007,0 L2.8419673,5 L6.8330007,10 L3.9912238,10 L0,4.9573865 z" Fill="{StaticResource HeaderCellGlyphBrush}" VerticalAlignment="Center" Height="8" UseLayoutRounding="False" Width="12" HorizontalAlignment="Center" Stretch="Fill" />
                          <ig:Commanding.Command>
                            <igPivot:XamPivotGridCommandSource CommandType="HideAxis" EventName="MouseLeftButtonDown" />
                          </ig:Commanding.Command>
                        </Grid>
                      </Grid>
                    </Border>
                  </Grid>
                </Grid>
              </Border>
            </Grid>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- *********************************  PivotSuperCompactHeaderCellControl  ********************************* -->
  <Style TargetType="igPivot:PivotSuperCompactHeaderCellControl" BasedOn="{StaticResource HeaderCellKey}">
    <Setter Property="Padding" Value="8,4" />
    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igPivot:PivotSuperCompactHeaderCellControl">
          <Border BorderBrush="{TemplateBinding BorderBrush}">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal">
                </VisualState>
                <VisualState x:Name="MouseOver">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="fill" Storyboard.TargetProperty="Background">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{StaticResource HeaderCellHoverBackgroundBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="fill" Storyboard.TargetProperty="BorderBrush">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{StaticResource HeaderCellHoverBorderBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="optionsPane" Storyboard.TargetProperty="(UIElement.Visibility)">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="ExpantionIndicatorStates">
                <VisualState x:Name="IndicatorCollapsed">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ExpansionIndicator" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Collapsed</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="IndicatorVisible">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ExpansionIndicator" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="SummaryStates">
                <VisualState x:Name="SummaryValue">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="TotalText" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Collapsed</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="SummaryTotal">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="TotalText" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HeaderPresenterColumn" Storyboard.TargetProperty="Width">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <GridLength>Auto</GridLength>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="CompactLayout">
                <VisualState x:Name="OutlineLeftRightBottom">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="fill" Storyboard.TargetProperty="BorderThickness">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Thickness>1,0,1,1</Thickness>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="headerGrid" Storyboard.TargetProperty="VerticalAlignment">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <VerticalAlignment>Center</VerticalAlignment>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="OutlineRightBottom">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="fill" Storyboard.TargetProperty="BorderThickness">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Thickness>0,0,1,1</Thickness>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="OutlineLeftRightBottomAlignBottom">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="fill" Storyboard.TargetProperty="BorderThickness">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Thickness>1,0,1,1</Thickness>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="headerGrid" Storyboard.TargetProperty="VerticalAlignment">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <VerticalAlignment>Bottom</VerticalAlignment>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="OutlineRightBottomAlignBottom">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="fill" Storyboard.TargetProperty="BorderThickness">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Thickness>0,0,1,1</Thickness>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="headerGrid" Storyboard.TargetProperty="VerticalAlignment">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <VerticalAlignment>Bottom</VerticalAlignment>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="OutlineLeftRightBottomAlignTop">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="fill" Storyboard.TargetProperty="BorderThickness">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Thickness>1,0,1,1</Thickness>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="headerGrid" Storyboard.TargetProperty="VerticalAlignment">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <VerticalAlignment>Top</VerticalAlignment>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="OutlineRightBottomAlignTop">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="fill" Storyboard.TargetProperty="BorderThickness">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Thickness>0,0,1,1</Thickness>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="headerGrid" Storyboard.TargetProperty="VerticalAlignment">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <VerticalAlignment>Top</VerticalAlignment>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="OutlineAllAlignTop">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="fill" Storyboard.TargetProperty="BorderThickness">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Thickness>1</Thickness>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="fill" Storyboard.TargetProperty="Margin">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Thickness>0,-1,0,0</Thickness>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="headerGrid" Storyboard.TargetProperty="VerticalAlignment">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <VerticalAlignment>Top</VerticalAlignment>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="OutlineAll">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="fill" Storyboard.TargetProperty="BorderThickness">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Thickness>1</Thickness>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="fill" Storyboard.TargetProperty="Margin">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Thickness>0,-1,0,0</Thickness>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="NormalOutline">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="fill" Storyboard.TargetProperty="BorderThickness">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Thickness>0,0,1,1</Thickness>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="fill" Storyboard.TargetProperty="Margin">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Thickness>0</Thickness>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="headerGrid" Storyboard.TargetProperty="VerticalAlignment">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <VerticalAlignment>Center</VerticalAlignment>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="AllowHeaderSorting">
                <VisualState x:Name="EnabledHeaderSortIndicator">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HeaderSortBtn" Storyboard.TargetProperty="(UIElement.Visibility)">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="DisabledHeaderSortIndicator">
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="AllowRowHiding">
                <VisualState x:Name="EnabledHidingIndicator">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="columnHidingVisual" Storyboard.TargetProperty="(UIElement.Visibility)">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="DisabledHidingIndicator">
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="SelectedStates">
                <VisualState x:Name="NotSelected" />
                <VisualState x:Name="Selected">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="SelectedRect" Storyboard.TargetProperty="(UIElement.Visibility)">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid igPrim:XamlHelper.SnapsToDevicePixels="True">
              <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" x:Name="fill">
                <Grid VerticalAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}">
                  <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                  </Grid.ColumnDefinitions>
                  <Rectangle Width="{TemplateBinding Indent}" Grid.Column="0" />
                  <Border x:Name="SelectedRect" Background="{StaticResource HeaderCellSelectedBackgroundBrush}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{StaticResource HeaderCellSelectedBorderBrush}" Visibility="Collapsed" Margin="0,0,-1,-1" Grid.ColumnSpan="3" />
                  <ToggleButton Grid.Column="1" Name="ExpansionIndicator" Width="15" Height="15" Margin="3" VerticalAlignment="Center" Padding="0" Visibility="Collapsed" IsChecked="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsExpanded, Mode=TwoWay}" Style="{TemplateBinding ExpansionIndicatorStyle}" />
                  <Grid x:Name="headerGrid" Grid.Column="2">
                    <Grid>
                      <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" x:Name="HeaderPresenterColumn" />
                        <ColumnDefinition Width="Auto" />
                      </Grid.ColumnDefinitions>
                      <ContentControl x:Name="HeaderPresenter" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" Margin="{TemplateBinding Padding}" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Center" />
                      <TextBlock Grid.Column="1" VerticalAlignment="Center" Visibility="Collapsed" x:Name="TotalText" Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Cell.Grid.StringSetting.CellTotal}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="0, 0, 5, 0" Foreground="{TemplateBinding Foreground}" />
                    </Grid>
                    <Border x:Name="optionsPane" Background="{StaticResource HeaderCellOptionsPaneBackgroundBrush}" Margin="5,0,0,0" HorizontalAlignment="Right" Opacity="1" Visibility="Collapsed">
                      <Grid>
                        <Grid.ColumnDefinitions>
                          <ColumnDefinition Width="Auto" />
                          <ColumnDefinition Width="Auto" />
                          <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <ToggleButton x:Name="HeaderSortBtn" Grid.Column="0" Style="{StaticResource HeaderCellSortBtn}" IsThreeState="False" Margin="5" Visibility="Collapsed">
                          <ig:Commanding.Command>
                            <igPivot:XamPivotGridCommandSource CommandType="SortAxisMember" EventName="Click" />
                          </ig:Commanding.Command>
                        </ToggleButton>
                        <CheckBox x:Name="SortToggle" Grid.Column="2" Style="{StaticResource FilterCellSortBtn}" IsThreeState="True" Margin="5" Visibility="Collapsed">
                          <ig:Commanding.Command>
                            <igPivot:PivotColumnCommandSource CommandType="SortToggle" EventName="Click" />
                          </ig:Commanding.Command>
                        </CheckBox>
                        <Grid x:Name="columnHidingVisual" Background="{StaticResource TransparentBrush}" Width="20" Grid.Column="1" Cursor="Hand" Margin="0,5" Visibility="Collapsed">
                          <Path Data="M9.8222179,1.1322494E-06 L12.663995,1.1322494E-06 L8.6729612,5.0000014 L12.663995,10.000002 L9.8222179,10.000002 L5.8309941,4.9573879 z M3.9912238,0 L6.8330007,0 L2.8419673,5 L6.8330007,10 L3.9912238,10 L0,4.9573865 z" Fill="{StaticResource HeaderCellGlyphBrush}" VerticalAlignment="Center" Height="8" UseLayoutRounding="False" Width="12" HorizontalAlignment="Center" Stretch="Fill" />
                          <ig:Commanding.Command>
                            <igPivot:XamPivotGridCommandSource CommandType="HideAxis" EventName="MouseLeftButtonDown" />
                          </ig:Commanding.Command>
                        </Grid>
                      </Grid>
                    </Border>
                  </Grid>
                </Grid>
              </Border>
            </Grid>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- *********************************  PivotCellControl  ********************************* -->
  <Style x:Key="PivotCellControl" TargetType="igPivot:PivotCellControl">
    <Setter Property="FontSize" Value="11" />
    <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
    <Setter Property="Background" Value="{StaticResource CellItemBackgroundBrush}" />
    <Setter Property="BorderBrush" Value="{StaticResource CellItemBorderBrush}" />
    <Setter Property="VerticalContentAlignment" Value="Center" />
    <Setter Property="BorderThickness" Value="0,0,1,1" />
    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
    <Setter Property="Padding" Value="5" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igPivot:PivotCellControl">
          <Grid>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="MouseOver">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="MouseOver1" Storyboard.TargetProperty="(UIElement.Visibility)">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Alternate" />
              </VisualStateGroup>
              <VisualStateGroup x:Name="SelectedStates">
                <VisualState x:Name="NotSelected" />
                <VisualState x:Name="Selected">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="SelectedRect" Storyboard.TargetProperty="(UIElement.Visibility)">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="ActiveStates">
                <VisualState x:Name="InActive" />
                <VisualState x:Name="Active">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="ActiveCell" Storyboard.TargetProperty="(UIElement.Visibility)">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Border x:Name="Root" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" />
            <Border x:Name="AltElem" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{StaticResource CellItemAltBackgroundBrush}" Visibility="Collapsed" />
            <Rectangle x:Name="MouseOver1" Fill="{StaticResource CellItemHoverBackgroundBrush}" Visibility="Collapsed" Margin="{TemplateBinding BorderThickness}" />
            <Border x:Name="SelectedRect" Background="{StaticResource CellItemSelectedBackgroundBrush}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{StaticResource CellItemSelectedBorderBrush}" Visibility="Collapsed" />
            <Rectangle x:Name="ActiveCell" Fill="{StaticResource CellItemActiveBackgroundBrush}" Stroke="{StaticResource CellItemActiveBorderBrush}" StrokeThickness="2" Visibility="Collapsed" />
            <ContentControl x:Name="HeaderPresenter" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" HorizontalContentAlignment="Stretch" Foreground="{TemplateBinding Foreground}" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="igPivot:PivotCellControl" BasedOn="{StaticResource PivotCellControl}" />

  <!-- ********************************** ActiveNodeIndicator Style **********************************-->
  <Style x:Key="ActiveNodeIndicatorStyle" TargetType="igPivotPrim:ActiveNodeIndicator">
    <Setter Property="BorderBrush" Value="{StaticResource TreeNodeActiveBorderBrush}" />
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igPivotPrim:ActiveNodeIndicator">
          <Rectangle Stroke="{TemplateBinding BorderBrush}" StrokeThickness="{TemplateBinding BorderThickness}" RadiusX="1" RadiusY="1" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="igPivotPrim:ActiveNodeIndicator" BasedOn="{StaticResource ActiveNodeIndicatorStyle}" />

  <!-- ********************************** XamDataTreeNodeControl **********************************-->
  <Style TargetType="ig:XamDataTreeNodeControl" x:Key="FilterTreeNodeStyle">
    <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
    <Setter Property="Background" Value="{StaticResource TreeNodeBackgroundBrush}" />
    <Setter Property="BorderBrush" Value="{StaticResource TreeNodeBorderBrush}" />
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="HorizontalContentAlignment" Value="Left" />
    <Setter Property="VerticalContentAlignment" Value="Center" />
    <Setter Property="Padding" Value="10,3" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="ig:XamDataTreeNodeControl">
          <Grid Background="{StaticResource TransparentBrush}">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal"></VisualState>
                <VisualState x:Name="MouseOver">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00" Storyboard.TargetName="hoverBorder" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Disabled">
                  <Storyboard>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="main" Storyboard.TargetProperty="Opacity">
                      <EasingDoubleKeyFrame KeyTime="0" Value="0.35" />
                    </DoubleAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="ExpandedIconStates">
                <VisualState x:Name="HideIcons"></VisualState>
                <VisualState x:Name="ShowCollapsedIcon">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00" Storyboard.TargetName="CollapsedIcon" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="ShowExpandedIcon">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00" Storyboard.TargetName="ExpandedIcon" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="ActiveStates">
                <VisualState x:Name="Inactive"></VisualState>
                <VisualState x:Name="Active">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00" Storyboard.TargetName="ActiveBorder" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="SelectedStates">
                <VisualState x:Name="NotSelected"></VisualState>
                <VisualState x:Name="Selected">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00" Storyboard.TargetName="SelectedBorder" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="EndLines">
                <VisualState x:Name="None">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00" Storyboard.TargetName="LineTerminator" Storyboard.TargetProperty="NodeLineEnd">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <ig:NodeLineTemination>None</ig:NodeLineTemination>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="TShape" />
                <VisualState x:Name="LShape" />
              </VisualStateGroup>
              <VisualStateGroup x:Name="DropStates">
                <VisualState x:Name="NoDrop" />
                <VisualState x:Name="DropOnto">
                  <Storyboard>
                    <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="DropOntoElem" Storyboard.TargetProperty="Opacity">
                      <EasingDoubleKeyFrame KeyTime="00:00:00.15" Value="1" />
                    </DoubleAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="DropBefore">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="DropBeforeElem" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="DropAfter">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="DropAfterElem" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid x:Name="main">
              <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Width="20" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition />
              </Grid.ColumnDefinitions>
              <igPrim:NodeLineControl Node="{Binding Node}" x:Name="lineControl" />
              <igPrim:NodeLineTerminator Grid.Column="1" x:Name="LineTerminator" Node="{Binding Node, RelativeSource={RelativeSource TemplatedParent}}" />
              <igPrim:ExpansionIndicator x:Name="ExpansionIndicator" IsTabStop="False" Grid.Column="1" Visibility="{Binding Node.Data.HasChildren, Converter={StaticResource boolToVisibilityConverter}, RelativeSource={RelativeSource TemplatedParent}}" IsExpanded="{Binding Node.IsExpanded, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}" Style="{StaticResource ExpansionIndicatorStyle}" />
              <CheckBox x:Name="Checkbox" Grid.Column="2" IsThreeState="{Binding Node.NodeLayout.CheckBoxSettings.IsCheckBoxThreeStateResolved}" IsTabStop="False" Padding="4,1,0,0" Style="{StaticResource CheckBoxStyle}" Visibility="{Binding Node.NodeLayout.CheckBoxSettings.CheckBoxVisibilityResolved}" IsChecked="{Binding Node.IsChecked, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" VerticalAlignment="Center" HorizontalAlignment="Center" />
              <Border x:Name="Bd" Grid.Column="5" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="1" />
              <Border x:Name="hoverBorder" Background="{StaticResource TreeNodeHoverBackgroundBrush}" BorderBrush="{StaticResource TreeNodeHoverBorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Visibility="Collapsed" Grid.Column="5" CornerRadius="1" />
              <Border x:Name="SelectedBorder" Background="{StaticResource TreeNodeSelectedBackgroundBrush}" BorderBrush="{StaticResource TreeNodeSelectedBorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Visibility="Collapsed" Grid.Column="5" CornerRadius="1" />
              <ContentControl x:Name="ExpandedIcon" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Visibility="Collapsed" Grid.Column="4" IsTabStop="False" />
              <ContentControl x:Name="CollapsedIcon" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Visibility="Collapsed" Grid.Column="4" IsTabStop="False" />
              <igPrim:ActiveNodeIndicator x:Name="ActiveBorder" Visibility="Collapsed" Grid.Column="5" IsTabStop="false" Style="{StaticResource ActiveNodeIndicatorStyle}" Margin="0" />
              <ContentControl x:Name="contentControl" Grid.Column="5" Foreground="{TemplateBinding Foreground}" VerticalAlignment="Center">
                <ContentPresenter x:Name="ContentPresenter" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" />
              </ContentControl>
            </Grid>
            <Grid x:Name="DropBeforeElem" Visibility="Collapsed" VerticalAlignment="Top" RenderTransformOrigin="0.5,0.5">
              <Grid.RenderTransform>
                <TransformGroup>
                  <ScaleTransform />
                  <SkewTransform />
                  <RotateTransform />
                  <TranslateTransform Y="-3" />
                </TransformGroup>
              </Grid.RenderTransform>
              <Rectangle x:Name="bar" Fill="{StaticResource DropIndicatorBackgroundBrush}" Height="1" StrokeThickness="0" />
              <Path x:Name="arrowLeft" Height="7" Width="6" Stretch="Fill" Data="M 166,184 C166,184 166,194 166,194 166,194 171,189 171,189 171,189 166,184 166,184 z" Fill="{StaticResource DropIndicatorBackgroundBrush}" HorizontalAlignment="Left" />
              <Path x:Name="arrowRight" HorizontalAlignment="Right" Height="7" Width="6" Stretch="Fill" Data="M 178,194 C178,194 178,184 178,184 178,184 173,189 173,189 173,189 178,194 178,194 z" Fill="{StaticResource DropIndicatorBackgroundBrush}" />
            </Grid>
            <Grid x:Name="DropAfterElem" Visibility="Collapsed" VerticalAlignment="Bottom" RenderTransformOrigin="0.5,0.5">
              <Grid.RenderTransform>
                <TransformGroup>
                  <ScaleTransform />
                  <SkewTransform />
                  <RotateTransform />
                  <TranslateTransform Y="4" />
                </TransformGroup>
              </Grid.RenderTransform>
              <Rectangle x:Name="bar1" Fill="{StaticResource DropIndicatorBackgroundBrush}" Height="1" StrokeThickness="0" />
              <Path x:Name="arrowLeft1" Height="7" Width="6" Stretch="Fill" Data="M 166,184 C166,184 166,194 166,194 166,194 171,189 171,189 171,189 166,184 166,184 z" Fill="{StaticResource DropIndicatorBackgroundBrush}" HorizontalAlignment="Left" />
              <Path x:Name="arrowRight1" HorizontalAlignment="Right" Height="7" Width="6" Stretch="Fill" Data="M 178,194 C178,194 178,184 178,184 178,184 173,189 173,189 173,189 178,194 178,194 z" Fill="{StaticResource DropIndicatorBackgroundBrush}" />
            </Grid>
            <Rectangle x:Name="DropOntoElem" Opacity="0" Stroke="{StaticResource DropOntoElementBorderBrush}" StrokeThickness="2" RadiusX="2" RadiusY="2" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- ********************************** XamDataTreeNodeControl **********************************-->
  <Style TargetType="ig:XamDataTreeNodeControl" x:Key="TreeNodeStyle">
    <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
    <Setter Property="Background" Value="{StaticResource TreeNodeBackgroundBrush}" />
    <Setter Property="BorderBrush" Value="{StaticResource TreeNodeBorderBrush}" />
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="HorizontalContentAlignment" Value="Left" />
    <Setter Property="VerticalContentAlignment" Value="Center" />
    <Setter Property="Padding" Value="10,3" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="ig:XamDataTreeNodeControl">
          <Grid Background="{StaticResource TransparentBrush}">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal"></VisualState>
                <VisualState x:Name="MouseOver">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00" Storyboard.TargetName="hoverBorder" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Disabled">
                  <Storyboard>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="main" Storyboard.TargetProperty="Opacity">
                      <EasingDoubleKeyFrame KeyTime="0" Value="0.35" />
                    </DoubleAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="ExpandedIconStates">
                <VisualState x:Name="HideIcons"></VisualState>
                <VisualState x:Name="ShowCollapsedIcon">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00" Storyboard.TargetName="CollapsedIcon" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="ShowExpandedIcon">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00" Storyboard.TargetName="ExpandedIcon" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="ActiveStates">
                <VisualState x:Name="Inactive"></VisualState>
                <VisualState x:Name="Active">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00" Storyboard.TargetName="ActiveBorder" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="SelectedStates">
                <VisualState x:Name="NotSelected"></VisualState>
                <VisualState x:Name="Selected">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00" Storyboard.TargetName="SelectedBorder" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="EndLines">
                <VisualState x:Name="None">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00" Storyboard.TargetName="LineTerminator" Storyboard.TargetProperty="NodeLineEnd">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <ig:NodeLineTemination>None</ig:NodeLineTemination>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="TShape" />
                <VisualState x:Name="LShape" />
              </VisualStateGroup>
              <VisualStateGroup x:Name="DropStates">
                <VisualState x:Name="NoDrop" />
                <VisualState x:Name="DropOnto">
                  <Storyboard>
                    <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="DropOntoElem" Storyboard.TargetProperty="Opacity">
                      <EasingDoubleKeyFrame KeyTime="00:00:00.15" Value="1" />
                    </DoubleAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="DropBefore">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="DropBeforeElem" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="DropAfter">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="DropAfterElem" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid x:Name="main">
              <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Width="20" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition />
              </Grid.ColumnDefinitions>
              <igPrim:NodeLineControl Node="{Binding Node}" x:Name="lineControl" />
              <igPrim:NodeLineTerminator Grid.Column="1" x:Name="LineTerminator" Node="{Binding Node, RelativeSource={RelativeSource TemplatedParent}}" />
              <igPrim:ExpansionIndicator x:Name="ExpansionIndicator" IsTabStop="False" Grid.Column="1" Visibility="{Binding Node.HasChildren, Converter={StaticResource boolToVisibilityConverter}, RelativeSource={RelativeSource TemplatedParent}}" IsExpanded="{Binding Node.IsExpanded, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}" Style="{StaticResource ExpansionIndicatorStyle}" />
              <CheckBox x:Name="Checkbox" Grid.Column="2" IsThreeState="{Binding Node.NodeLayout.CheckBoxSettings.IsCheckBoxThreeStateResolved}" IsTabStop="False" Padding="4,1,0,0" Style="{StaticResource CheckBoxStyle}" Visibility="{Binding Node.NodeLayout.CheckBoxSettings.CheckBoxVisibilityResolved}" IsChecked="{Binding Node.IsChecked, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" VerticalAlignment="Center" HorizontalAlignment="Center" />
              <Border x:Name="Bd" Grid.Column="5" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="1" />
              <Border x:Name="hoverBorder" Background="{StaticResource TreeNodeHoverBackgroundBrush}" BorderBrush="{StaticResource TreeNodeHoverBorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Visibility="Collapsed" Grid.Column="5" CornerRadius="1" />
              <Border x:Name="SelectedBorder" Background="{StaticResource TreeNodeSelectedBackgroundBrush}" BorderBrush="{StaticResource TreeNodeSelectedBorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Visibility="Collapsed" Grid.Column="5" CornerRadius="1" />
              <ContentControl x:Name="ExpandedIcon" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Visibility="Collapsed" Grid.Column="4" IsTabStop="False" />
              <ContentControl x:Name="CollapsedIcon" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Visibility="Collapsed" Grid.Column="4" IsTabStop="False" />
              <igPrim:ActiveNodeIndicator x:Name="ActiveBorder" Visibility="Collapsed" Grid.Column="5" IsTabStop="false" Style="{StaticResource ActiveNodeIndicatorStyle}" Margin="0" />
              <ContentControl x:Name="contentControl" Grid.Column="5" Foreground="{TemplateBinding Foreground}" VerticalAlignment="Center">
                <ContentPresenter x:Name="ContentPresenter" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" />
              </ContentControl>
            </Grid>
            <Grid x:Name="DropBeforeElem" Visibility="Collapsed" VerticalAlignment="Top" RenderTransformOrigin="0.5,0.5">
              <Grid.RenderTransform>
                <TransformGroup>
                  <ScaleTransform />
                  <SkewTransform />
                  <RotateTransform />
                  <TranslateTransform Y="-3" />
                </TransformGroup>
              </Grid.RenderTransform>
              <Rectangle x:Name="bar" Fill="{StaticResource DropIndicatorBackgroundBrush}" Height="1" StrokeThickness="0" />
              <Path x:Name="arrowLeft" Height="7" Width="6" Stretch="Fill" Data="M 166,184 C166,184 166,194 166,194 166,194 171,189 171,189 171,189 166,184 166,184 z" Fill="{StaticResource DropIndicatorBackgroundBrush}" HorizontalAlignment="Left" />
              <Path x:Name="arrowRight" HorizontalAlignment="Right" Height="7" Width="6" Stretch="Fill" Data="M 178,194 C178,194 178,184 178,184 178,184 173,189 173,189 173,189 178,194 178,194 z" Fill="{StaticResource DropIndicatorBackgroundBrush}" />
            </Grid>
            <Grid x:Name="DropAfterElem" Visibility="Collapsed" VerticalAlignment="Bottom" RenderTransformOrigin="0.5,0.5">
              <Grid.RenderTransform>
                <TransformGroup>
                  <ScaleTransform />
                  <SkewTransform />
                  <RotateTransform />
                  <TranslateTransform Y="4" />
                </TransformGroup>
              </Grid.RenderTransform>
              <Rectangle x:Name="bar1" Fill="{StaticResource DropIndicatorBackgroundBrush}" Height="1" StrokeThickness="0" />
              <Path x:Name="arrowLeft1" Height="7" Width="6" Stretch="Fill" Data="M 166,184 C166,184 166,194 166,194 166,194 171,189 171,189 171,189 166,184 166,184 z" Fill="{StaticResource DropIndicatorBackgroundBrush}" HorizontalAlignment="Left" />
              <Path x:Name="arrowRight1" HorizontalAlignment="Right" Height="7" Width="6" Stretch="Fill" Data="M 178,194 C178,194 178,184 178,184 178,184 173,189 173,189 173,189 178,194 178,194 z" Fill="{StaticResource DropIndicatorBackgroundBrush}" />
            </Grid>
            <Rectangle x:Name="DropOntoElem" Opacity="0" Stroke="{StaticResource DropOntoElementBorderBrush}" StrokeThickness="2" RadiusX="2" RadiusY="2" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- ********************************** XamDataTree **********************************-->
  <Style TargetType="ig:XamDataTree" x:Key="DataTreeStyle">
    <Setter Property="Background" Value="{StaticResource TreeBackgroundBrush}" />
    <Setter Property="BorderBrush" Value="{StaticResource TreeBorderBrush}" />
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
    <Setter Property="NodeStyle" Value="{StaticResource TreeNodeStyle}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="ig:XamDataTree">
          <Border x:Name="Bd" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
            <Border.Resources>
              <Style BasedOn="{StaticResource CheckBoxStyle}" TargetType="CheckBox" />
            </Border.Resources>
            <Grid>
              <Grid.RowDefinitions>
                <RowDefinition Height="*" />
                <RowDefinition Height="Auto" />
              </Grid.RowDefinitions>
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
              </Grid.ColumnDefinitions>
              <igPivotPrim:NodesPanel x:Name="NodesPanel" />
              <Rectangle Grid.Column="1" Fill="{StaticResource ScrollViewerCornerBackgroundBrush}" Grid.Row="1" />
              <ScrollBar x:Name="VerticalScrollBar" Width="20" Grid.Row="0" Grid.Column="1" Style="{StaticResource ScrollBarStyle}" />
              <ScrollBar x:Name="HorizontalScrollBar" Height="20" Grid.Row="2" Style="{StaticResource ScrollBarStyle}" />
            </Grid>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="ig:XamDataTree" BasedOn="{StaticResource DataTreeStyle}" />

  <!-- *********************************  FieldsDropAreaScrollviewerButtons  ********************************* -->
  <Style x:Key="FieldsDropAreaScrollviewerButtons" TargetType="RepeatButton">
    <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
    <Setter Property="Padding" Value="3" />
    <Setter Property="Width" Value="18" />
    <Setter Property="Height" Value="24" />
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="RepeatButton">
          <Grid Height="{TemplateBinding Height}" Width="{TemplateBinding Width}">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="MouseOver">
                  <Storyboard>
                    <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="hover" d:IsOptimized="True" />
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Pressed">
                  <Storyboard>
                    <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="pressed" d:IsOptimized="True" />
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Disabled">
                  <Storyboard>
                    <DoubleAnimation Duration="0" To="0.5" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="normal" d:IsOptimized="True" />
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="FocusStates">
                <VisualState x:Name="Focused" />
                <VisualState x:Name="Unfocused" />
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Rectangle Fill="{StaticResource TransparentBrush}" />
            <Path x:Name="normal" Width="6" Height="9" Data="M566.8764,1436.906 L572.19147,1442.2482 L573.91058,1440.78 L569.90887,1436.9374 L573.91083,1433.001 L572.19153,1431.5951 z" HorizontalAlignment="Center" Stretch="Fill" UseLayoutRounding="False" Fill="{StaticResource GlyphBorderBrush}" VerticalAlignment="Center" />
            <Path x:Name="hover" Width="6" Height="9" Data="M566.8764,1436.906 L572.19147,1442.2482 L573.91058,1440.78 L569.90887,1436.9374 L573.91083,1433.001 L572.19153,1431.5951 z" HorizontalAlignment="Center" Stretch="Fill" UseLayoutRounding="False" Fill="{StaticResource GlyphFocusedBackgroundBrush}" Opacity="0" VerticalAlignment="Center" />
            <Path x:Name="pressed" Width="6" Height="9" Data="M566.8764,1436.906 L572.19147,1442.2482 L573.91058,1440.78 L569.90887,1436.9374 L573.91083,1433.001 L572.19153,1431.5951 z" HorizontalAlignment="Center" Stretch="Fill" UseLayoutRounding="False" Fill="{StaticResource GlyphFocusedBackgroundBrush}" Opacity="0" VerticalAlignment="Center" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- *********************************  FieldsDropAreaScrollViewer Style  ********************************* -->
  <Style x:Key="FieldsDropAreaScrollViewerStyle" TargetType="ScrollViewer">
    <Setter Property="HorizontalContentAlignment" Value="Left" />
    <Setter Property="VerticalContentAlignment" Value="Top" />
    <Setter Property="VerticalScrollBarVisibility" Value="Visible" />
    <Setter Property="Padding" Value="0,4,0,4" />
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="ScrollViewer">
          <Border>
            <Grid Background="{TemplateBinding Background}">
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
              </Grid.ColumnDefinitions>
              <Grid.RowDefinitions>
                <RowDefinition Height="*" />
                <RowDefinition Height="Auto" />
              </Grid.RowDefinitions>
              <ScrollContentPresenter x:Name="ScrollContentPresenter" Cursor="{TemplateBinding Cursor}" ContentTemplate="{TemplateBinding ContentTemplate}" Margin="{TemplateBinding Padding}" />
              <Rectangle Grid.Column="1" Fill="{StaticResource ScrollViewerCornerBackgroundBrush}" Grid.Row="1" />
              <ScrollBar x:Name="VerticalScrollBar" Grid.Column="1" IsTabStop="False" Maximum="{TemplateBinding ScrollableHeight}" Margin="0,-1,-1,-1" Minimum="0" Orientation="Vertical" Grid.Row="0" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Value="{TemplateBinding VerticalOffset}" ViewportSize="{TemplateBinding ViewportHeight}" Width="18" />
              <ScrollBar x:Name="HorizontalScrollBar" Grid.Column="0" Height="18" IsTabStop="False" Maximum="{TemplateBinding ScrollableWidth}" Margin="-1,0,-1,-1" Minimum="0" Orientation="Horizontal" Grid.Row="1" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Value="{TemplateBinding HorizontalOffset}" ViewportSize="{TemplateBinding ViewportWidth}" />
            </Grid>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- *********************************  FieldsDropAreaControl  ********************************* -->
  <Style x:Key="FieldsDropAreaControlKey" TargetType="igPivotPrim:PivotGridFieldsDropAreaControl">
    <Setter Property="Background" Value="{StaticResource FieldsDropAreaBackgroundBrush}" />
    <Setter Property="BorderBrush" Value="{StaticResource FieldsDropAreaControlBorderBrush}" />
    <Setter Property="BorderThickness" Value="0,0,1,1" />
    <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
    <Setter Property="Padding" Value="0,5" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igPivotPrim:PivotGridFieldsDropAreaControl">
          <Border x:Name="panelContainer" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="Disabled">
                  <Storyboard>
                    <Storyboard>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="disabledBackground" Storyboard.TargetProperty="(UIElement.Visibility)">
                        <DiscreteObjectKeyFrame KeyTime="00:00:00">
                          <DiscreteObjectKeyFrame.Value>
                            <Visibility>Visible</Visibility>
                          </DiscreteObjectKeyFrame.Value>
                        </DiscreteObjectKeyFrame>
                      </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="DisplayStates">
                <VisualState x:Name="Empty">
                  <Storyboard>
                    <DoubleAnimation Storyboard.TargetName="EmptyContentControl" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" From="0" To="0" Duration="00:00:00.40" />
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="NonEmpty">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="EmptyContentControl" Storyboard.TargetProperty="(UIElement.Visibility)">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Collapsed</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid>
              <Rectangle x:Name="fill" Fill="{TemplateBinding Background}" />
              <Grid MinHeight="30" Margin="23,0,0,0">
                <ContentControl x:Name="EmptyContentControl" Content="{TemplateBinding EmptyContent}" Foreground="{TemplateBinding Foreground}" VerticalAlignment="Center" Margin="10,0" RenderTransformOrigin="0.5 0.5">
                  <ContentControl.RenderTransform>
                    <TransformGroup>
                      <ScaleTransform />
                      <SkewTransform />
                      <RotateTransform />
                      <TranslateTransform />
                    </TransformGroup>
                  </ContentControl.RenderTransform>
                </ContentControl>
                <Grid>
                  <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                  </Grid.ColumnDefinitions>
                  <RepeatButton Margin="3" Name="leftRepeat" Style="{StaticResource FieldsDropAreaScrollviewerButtons}" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" />
                  <ScrollViewer Name="scrollViewer" Grid.Column="1" VerticalScrollBarVisibility="Hidden" HorizontalScrollBarVisibility="Hidden" Style="{StaticResource FieldsDropAreaScrollViewerStyle}">
                    <ItemsPresenter />
                  </ScrollViewer>
                  <RepeatButton Margin="3" Name="rightRepeat" Grid.Column="2" RenderTransformOrigin="0.5,0.5" Style="{StaticResource FieldsDropAreaScrollviewerButtons}" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}">
                    <RepeatButton.RenderTransform>
                      <TransformGroup>
                        <ScaleTransform ScaleY="1" ScaleX="-1" />
                        <SkewTransform AngleY="0" AngleX="0" />
                        <RotateTransform Angle="0" />
                        <TranslateTransform />
                      </TransformGroup>
                    </RepeatButton.RenderTransform>
                  </RepeatButton>
                </Grid>
              </Grid>
              <Grid x:Name="disabledBackground" Opacity="0.35" Visibility="Collapsed" Background="{StaticResource DisabledBackgroundBrush}" />
            </Grid>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- *********************************  FieldsDropAreaControl Style  ********************************* -->
  <Style x:Key="FieldsDropAreaControlStyle" TargetType="igPivotPrim:FieldsDropAreaControl">
    <Setter Property="Background" Value="{StaticResource LightGradientBrush}" />
    <Setter Property="BorderBrush" Value="{StaticResource FieldsDropAreaControlBorderBrush}" />
    <Setter Property="BorderThickness" Value="0,0,1,1" />
    <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igPivotPrim:FieldsDropAreaControl">
          <Grid>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="Disabled">
                  <Storyboard>
                    <Storyboard>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="disabledPanel" Storyboard.TargetProperty="(UIElement.Visibility)">
                        <DiscreteObjectKeyFrame KeyTime="00:00:00">
                          <DiscreteObjectKeyFrame.Value>
                            <Visibility>Visible</Visibility>
                          </DiscreteObjectKeyFrame.Value>
                        </DiscreteObjectKeyFrame>
                      </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <ScrollViewer x:Name="scrollViewer" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto" Style="{StaticResource ScrollViewerStyle}" BorderBrush="{x:Null}">
              <ItemsPresenter />
            </ScrollViewer>
            <Grid x:Name="disabledPanel" Opacity="0.25" Visibility="Collapsed" Background="{StaticResource DisabledBackgroundBrush}" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="igPivotPrim:FieldsDropAreaControl" BasedOn="{StaticResource FieldsDropAreaControlStyle}" />

  <!-- *********************************  RowsFieldDropAreaControl  ********************************* -->
  <Style x:Key="RowsFieldDropAreaControl" TargetType="igPivotPrim:RowsFieldDropAreaControl" BasedOn="{StaticResource FieldsDropAreaControlKey}">
    <Setter Property="ItemsPanel">
      <Setter.Value>
        <ItemsPanelTemplate>
          <StackPanel Margin="5" x:Name="Panel" Orientation="Horizontal" Background="Transparent" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" igPivot:XamPivotGrid.PivotPartType="Rows">
            <ig:DragDropManager.DropTarget>
              <ig:DropTarget IsDropTarget="True" DropTargetMarkerBrush="{StaticResource DropTargetMarkerBackgroundBrush}" DropChannels="Rows, Columns, Filters, MeasureList" />
            </ig:DragDropManager.DropTarget>
            <igPivot:ItemsSeparatorProvider.Separator>
              <igPivot:PanelItemsSeparator SeparatorColor="{StaticResource Color_027}" />
            </igPivot:ItemsSeparatorProvider.Separator>
          </StackPanel>
        </ItemsPanelTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="igPivotPrim:RowsFieldDropAreaControl" BasedOn="{StaticResource RowsFieldDropAreaControl}" />

  <!-- *********************************  ColumnsFieldDropAreaControl  ********************************* -->
  <Style x:Key="ColumnsFieldDropAreaControl" TargetType="igPivotPrim:ColumnsFieldDropAreaControl" BasedOn="{StaticResource FieldsDropAreaControlKey}">
    <Setter Property="ItemsPanel">
      <Setter.Value>
        <ItemsPanelTemplate>
          <StackPanel Margin="5" x:Name="Panel1" Orientation="Horizontal" Background="{StaticResource TransparentBrush}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" igPivot:XamPivotGrid.PivotPartType="Columns">
            <ig:DragDropManager.DropTarget>
              <ig:DropTarget IsDropTarget="True" DropTargetMarkerBrush="{StaticResource DropTargetMarkerBackgroundBrush}" DropChannels="Rows, Columns, Filters, MeasureList" />
            </ig:DragDropManager.DropTarget>
            <igPivot:ItemsSeparatorProvider.Separator>
              <igPivot:PanelItemsSeparator SeparatorColor="{StaticResource Color_027}" />
            </igPivot:ItemsSeparatorProvider.Separator>
          </StackPanel>
        </ItemsPanelTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="igPivotPrim:ColumnsFieldDropAreaControl" BasedOn="{StaticResource ColumnsFieldDropAreaControl}" />

  <!-- *********************************  FiltersFieldDropAreaControl  ********************************* -->
  <Style x:Key="FiltersFieldDropAreaControl" TargetType="igPivotPrim:FiltersFieldDropAreaControl" BasedOn="{StaticResource FieldsDropAreaControlKey}">
    <Setter Property="ItemsPanel">
      <Setter.Value>
        <ItemsPanelTemplate>
          <StackPanel Margin="5" x:Name="Panel2" Orientation="Horizontal" Background="{StaticResource TransparentBrush}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" igPivot:XamPivotGrid.PivotPartType="Filters">
            <ig:DragDropManager.DropTarget>
              <ig:DropTarget IsDropTarget="True" DropTargetMarkerBrush="{StaticResource DropTargetMarkerBackgroundBrush}" DropChannels="Rows, Columns, Filters" />
            </ig:DragDropManager.DropTarget>
            <igPivot:ItemsSeparatorProvider.Separator>
              <igPivot:PanelItemsSeparator SeparatorColor="{StaticResource Color_027}" />
            </igPivot:ItemsSeparatorProvider.Separator>
          </StackPanel>
        </ItemsPanelTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="igPivotPrim:FiltersFieldDropAreaControl" BasedOn="{StaticResource FiltersFieldDropAreaControl}" />

  <!-- *********************************  MeasuresFieldDropAreaControl  ********************************* -->
  <Style x:Key="MeasuresFieldDropAreaControl" TargetType="igPivotPrim:MeasuresFieldDropAreaControl" BasedOn="{StaticResource FieldsDropAreaControlKey}">
    <Setter Property="ItemsPanel">
      <Setter.Value>
        <ItemsPanelTemplate>
          <StackPanel Margin="5" x:Name="Panel3" Orientation="Horizontal" Background="{StaticResource TransparentBrush}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" igPivot:XamPivotGrid.PivotPartType="Measures">
            <ig:DragDropManager.DropTarget>
              <ig:DropTarget IsDropTarget="True" DropTargetMarkerBrush="{StaticResource DropTargetMarkerBackgroundBrush}" DropChannels="Measures" />
            </ig:DragDropManager.DropTarget>
            <igPivot:ItemsSeparatorProvider.Separator>
              <igPivot:PanelItemsSeparator SeparatorColor="{StaticResource Color_027}" />
            </igPivot:ItemsSeparatorProvider.Separator>
          </StackPanel>
        </ItemsPanelTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="igPivotPrim:MeasuresFieldDropAreaControl" BasedOn="{StaticResource MeasuresFieldDropAreaControl}" />

  <!-- *********************************  ExpandableFieldItemControlKey Style   ********************************* -->
  <Style x:Key="ExpandableFieldItemControlKey" TargetType="igPivotPrim:ExpandableFieldItemControl">
    <Setter Property="FontSize" Value="11" />
    <Setter Property="Foreground" Value="{StaticResource ThemeForegroundBrush}" />
    <Setter Property="Background" Value="{StaticResource FieldItemBackgroundBrush}" />
    <Setter Property="BorderBrush" Value="{StaticResource FieldItemBorderBrush}" />
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="HorizontalContentAlignment" Value="Left" />
    <Setter Property="Padding" Value="3,3" />
    <Setter Property="Margin" Value="1" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igPivotPrim:ExpandableFieldItemControl">
          <Grid x:Name="Root" Background="{StaticResource TransparentBrush}">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal">
                  <Storyboard>
                    <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="closeButton" Storyboard.TargetProperty="(UIElement.Opacity)">
                      <EasingDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0" />
                    </DoubleAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="MouseOver">
                  <Storyboard>
                    <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="closeButton" Storyboard.TargetProperty="(UIElement.Opacity)">
                      <EasingDoubleKeyFrame KeyTime="00:00:00.3000000" Value="1" />
                    </DoubleAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="TransparencyStates">
                <VisualState x:Name="NormalTransparency">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="OriginalPopupChild" Storyboard.TargetProperty="(UIElement.Opacity)">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <System:Double>1</System:Double>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="PeekTransparency">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="OriginalPopupChild" Storyboard.TargetProperty="(UIElement.Opacity)">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <System:Double>0.5</System:Double>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="2">
              <Grid>
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="Auto" />
                  <ColumnDefinition Width="*" />
                  <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                  <RowDefinition Height="*" />
                  <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <Grid>
                  <ToggleButton x:Name="DropDownToggle" Style="{StaticResource FilterDropdownToggle}" Visibility="{Binding Path=IsExpandable, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource boolToVisibilityConverter}}" Cursor="Hand" IsThreeState="False" IsChecked="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsExpanded, Mode=TwoWay}" HorizontalAlignment="Stretch" Margin="0" BorderBrush="{TemplateBinding BorderBrush}" VerticalContentAlignment="Stretch" BorderThickness="{TemplateBinding BorderThickness}" HorizontalContentAlignment="Center">
                    <Grid>
                      <Path x:Name="clearFilterGlyphStroke" Width="11" Height="8" HorizontalAlignment="Center" VerticalAlignment="Center" Data="M 0,0 C0,0 11,0 11,0 11,0 7,4 7,4 7,4 7,8 7,8 7,8 4,8 4,8 4,8 4,4 4,4 4,4 0,0 0,0 z" Fill="{StaticResource GlyphBackgroundBrush}" Stretch="Fill" Stroke="{StaticResource GlyphBorderBrush}" />
                    </Grid>
                  </ToggleButton>
                </Grid>
                <Border Grid.Column="1" Background="Transparent" HorizontalAlignment="Stretch">
                  <ig:DragDropManager.DragSource>
                    <ig:DragSource IsDraggable="True" DragTemplate="{StaticResource dragTemplate}" >
                      <igPivot:XamTriggers.EventTriggers>
                        <igPivot:XamEventTrigger EventName="DragStart">
                          <igPivot:DragStartTriggerAction IsEnabled="True" />
                        </igPivot:XamEventTrigger>
                      </igPivot:XamTriggers.EventTriggers>
                    </ig:DragSource>
                  </ig:DragDropManager.DragSource>
                  <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                </Border>
                <Button x:Name="closeButton" Grid.Column="2" Style="{StaticResource FilterCellRemoveBtn}" Width="7" Height="7" Opacity="0" VerticalAlignment="Center" Margin="3,0,5,0">
                  <ig:Commanding.Command>
                    <igPivot:XamPivotGridCommandSource EventName="Click" CommandType="RemoveFilterCell" />
                  </ig:Commanding.Command>
                  <Path Width="7" Height="7" Stretch="Fill" VerticalAlignment="Center" Fill="{StaticResource GlyphBorderBrush}" Opacity="1" Data="F1 M 53.122,8.510 L 44.610,0.000 L 26.561,18.050 L 8.510,0.000 L 0.000,8.510 L 18.050,26.561 L 0.000,44.611 L 8.510,53.123 L 26.561,35.072 L 44.612,53.123 L 53.122,44.612 L 35.071,26.561 L 53.122,8.510 Z" />
                </Button>
                <Popup x:Name="Popup" Grid.Row="1" IsOpen="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsExpanded, Mode=TwoWay}" igPrim:XamlHelper.StaysOpen="False" igPrim:XamlHelper.AllowsTransparency="True">
                  <Grid x:Name="OriginalPopupChild" Width="Auto">
                    <Border x:Name="PopupBorder" Background="{StaticResource PopupBackgroundBrush}" BorderBrush="{StaticResource PopupBorderBrush}" VerticalAlignment="Top" BorderThickness="{TemplateBinding BorderThickness}" igPivot:TemplatedParentHelper.TemplatedParent="{Binding RelativeSource={RelativeSource TemplatedParent}}">
                      <Border.Effect>
                        <DropShadowEffect Direction="270" Opacity="0.25" ShadowDepth="3" />
                      </Border.Effect>
                      <Grid>
                        <Grid.RowDefinitions>
                          <RowDefinition Height="*" />
                          <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <ContentPresenter ContentTemplate="{TemplateBinding ExpansionAreaContentTemplate}" />
                        <Border VerticalAlignment="Top" Grid.Row="1">
                          <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                            <Button Content="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=StringSource.FilterTreeOkButtonText}" x:Name="OKButton" Margin="5" Width="70" Cursor="Hand" Style="{StaticResource ButtonStyle}">
                              <ig:Commanding.Command>
                                <igPivotPrim:ExpandableFieldItemCommandSource EventName="Click" CommandType="OK" />
                              </ig:Commanding.Command>
                            </Button>
                            <Button Content="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=StringSource.FilterTreeCancelButtonText}" x:Name="CancelButton" Margin="5" MinWidth="70" Cursor="Hand" Style="{StaticResource ButtonStyle}">
                              <ig:Commanding.Command>
                                <igPivotPrim:ExpandableFieldItemCommandSource EventName="Click" CommandType="Cancel" />
                              </ig:Commanding.Command>
                            </Button>
                          </StackPanel>
                        </Border>
                      </Grid>
                    </Border>
                  </Grid>
                </Popup>
              </Grid>
            </Border>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- ********************************** CalculatedFieldItemControl **********************************-->
  <Style TargetType="igPivotPrim:CalculatedFieldItemControl" BasedOn="{StaticResource ExpandableFieldItemControlKey}">
    <Setter Property="ExpansionAreaContentTemplate">
      <Setter.Value>
        <DataTemplate>
          <Grid>
            <Grid.RowDefinitions>
              <RowDefinition Height="Auto" />
              <RowDefinition Height="*" />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="Auto" />
              <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <TextBlock Foreground="{StaticResource ForegroundBrush}" Text="Caption" Grid.Row="0" Grid.Column="0" Margin="3 2 2 1" HorizontalAlignment="Left" VerticalAlignment="Center" />
            <igPivotPrim:XamInput Grid.Row="0" Grid.Column="1" Margin="0 4 3 1" HorizontalAlignment="Stretch" VerticalAlignment="Center" Text="{Binding Path=Caption, Mode=TwoWay}" IsReadOnly="{Binding IsReadOnly}" />
            <igPivotPrim:XamInput Grid.Row="1" Grid.ColumnSpan="2" Width="300" Margin="3 4 3 3" Height="140" AcceptsReturn="True" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto" Text="{Binding Path=Expression, Mode=TwoWay}" IsReadOnly="{Binding IsReadOnly}" />
          </Grid>
        </DataTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- ********************************** FilterFieldItemControl **********************************-->
  <Style TargetType="igPivotPrim:FilterFieldItemControl" BasedOn="{StaticResource ExpandableFieldItemControlKey}">
    <Setter Property="ExpansionAreaContentTemplate">
      <Setter.Value>
        <DataTemplate>
          <Grid>
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="*" />
              <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
              <RowDefinition Height="Auto" />
              <RowDefinition Height="*" />
            </Grid.RowDefinitions>
            <Grid Background="{StaticResource LightGradientBrush}" Opacity="0.5" Grid.ColumnSpan="2" />
            <CheckBox IsThreeState="False" Margin="7 4 0 2" Content="{Binding Source={StaticResource stringResources}, Path=SelectAll}" IsChecked="{Binding IsAllSelected, Mode=TwoWay}" Style="{StaticResource CheckBoxStyle}" />
            <TextBlock Text="*" Grid.Column="1" Foreground="{StaticResource ForegroundBrush}" Margin="0 6 0 0" Visibility="{Binding HasPendingChanges, Converter={StaticResource boolToVisibilityConverter}}" />
            <ig:XamDataTree Grid.Row="1" Grid.ColumnSpan="2" ItemsSource="{Binding Path=FilterMembers}" DisplayMemberPath="Caption" NodeStyle="{StaticResource FilterTreeNodeStyle}" Style="{StaticResource DataTreeStyle}" ScrollViewer.VerticalScrollBarVisibility="Visible" EnsureNodeExpansion="True" IsExpandedMemberPath="IsExpanded" CheckBoxMemberPath="IsSelected" x:Name="FilterTree">
              <ig:XamDataTree.CheckBoxSettings>
                <ig:CheckBoxSettings CheckBoxVisibility="Visible" CheckBoxMode="Manual" IsCheckBoxThreeState="False" CheckBoxStyle="{StaticResource CheckBoxStyle}" />
              </ig:XamDataTree.CheckBoxSettings>
              <ig:XamDataTree.GlobalNodeLayouts>
                <ig:NodeLayout x:Name="NL" IsExpandedMemberPath="IsExpanded" CheckBoxMemberPath="IsSelected" Key="FilterMembers" DisplayMemberPath="Caption" TargetTypeName="FilterMember">
                </ig:NodeLayout>
              </ig:XamDataTree.GlobalNodeLayouts>
            </ig:XamDataTree>
          </Grid>
        </DataTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- *********************************  AdvancedFilterFieldControl  ********************************* -->
  <Style TargetType="igPivotPrim:AdvancedFilterFieldControl">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igPivotPrim:AdvancedFilterFieldControl">
          <Grid>
            <Grid.RowDefinitions>
              <RowDefinition Height="Auto" />
              <RowDefinition Height="*" />
            </Grid.RowDefinitions>

            <Grid Background="Transparent" HorizontalAlignment="Right" VerticalAlignment="Top" Height="12" Width="12" Margin="5">
              <Rectangle Fill="{StaticResource PeekIconBackgroundBrush}" Stroke="{StaticResource PeekIconBorderBrush}" />
              <ig:Commanding.Commands>
                <ig:CommandSourceCollection>
                  <igPivotPrim:ExpandableFieldItemCommandSource EventName="MouseEnter" CommandType="StartPeek" />
                  <igPivotPrim:ExpandableFieldItemCommandSource EventName="MouseLeave" CommandType="StopPeek" />
                </ig:CommandSourceCollection>
              </ig:Commanding.Commands>
            </Grid>
            <ScrollViewer Style="{StaticResource ScrollViewerStyle}" Grid.Row="1" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto" BorderThickness="0" Padding="0">
              <Border Padding="7" Width="300">
                <Grid>
                  <StackPanel Orientation="Vertical">
                    <Grid>
                      <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                      </Grid.ColumnDefinitions>
                      <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="*" />
                      </Grid.RowDefinitions>
                      <TextBox Margin="0,7,0,0" x:Name="searchBox" Grid.ColumnSpan="2" Grid.Row="1" Style="{StaticResource TextBoxStyle}">
                        <ig:Commanding.Command>
                          <igPivotPrim:AdvancedFilterFieldCommandSource EventName="TextChanged" CommandType="SelectHierarchySubTree" />
                        </ig:Commanding.Command>
                      </TextBox>
                      <CheckBox IsThreeState="False" Margin="7" Grid.Row="2" HorizontalAlignment="Left" VerticalAlignment="Center" VerticalContentAlignment="Center" Content="{Binding Source={StaticResource stringResources}, Path=SelectAll}" IsChecked="{Binding FilterViewModel.IsAllSelected, Mode=TwoWay}" Style="{StaticResource CheckBoxStyle}" />
                      <!-- Has pending changes star indicator -->
                      <TextBlock Text="*" Grid.Column="1" Grid.Row="2" Foreground="{StaticResource ForegroundBrush}" Margin="0 0 5 0" HorizontalAlignment="Right" VerticalAlignment="Center" Visibility="{Binding FilterViewModel.HasPendingChanges, Converter={StaticResource boolToVisibilityConverter}}" />
                      <ig:XamDataTree Grid.Row="3" Grid.ColumnSpan="2" Background="Transparent" Height="200" ItemsSource="{Binding Path=FilterViewModel.FilterMembers}" DisplayMemberPath="Caption" NodeStyle="{StaticResource FilterTreeNodeStyle}" ScrollViewer.VerticalScrollBarVisibility="Visible" EnsureNodeExpansion="True" IsExpandedMemberPath="IsExpanded" CheckBoxMemberPath="IsSelected" x:Name="FilterTree" BorderThickness="0">
                        <ig:XamDataTree.CheckBoxSettings>
                          <ig:CheckBoxSettings CheckBoxVisibility="Visible" CheckBoxMode="Manual" IsCheckBoxThreeState="False" />
                        </ig:XamDataTree.CheckBoxSettings>
                        <ig:XamDataTree.GlobalNodeLayouts>
                          <ig:NodeLayout x:Name="NL" IsExpandedMemberPath="IsExpanded" CheckBoxMemberPath="IsSelected" Key="FilterMembers" DisplayMemberPath="Caption" TargetTypeName="FilterMember">
                          </ig:NodeLayout>
                        </ig:XamDataTree.GlobalNodeLayouts>
                      </ig:XamDataTree>
                    </Grid>
                    <StackPanel Orientation="Vertical" Margin="0,7,0,0">
                      <Border Background="{StaticResource FilterFieldPendingChangesBackgroundBrush}" BorderBrush="{StaticResource FilterFieldPendingChangesBorderBrush}" BorderThickness="0,0,0,1" Height="2" VerticalAlignment="Bottom" Margin="0 5 " Visibility="{Binding Path=HasTwoOrMoreConditions, Mode=OneWay, Converter={StaticResource boolToVisibilityConverter}}" />
                      <StackPanel Margin="0,0,0,5" Orientation="Horizontal" Visibility="{Binding Path=HasTwoOrMoreConditions, Mode=OneWay, Converter={StaticResource boolToVisibilityConverter}}">
                        <RadioButton x:Name="rbFilterByAll" Content="{Binding Source={StaticResource stringResources}, Path=LabelFilterAllText}" IsChecked="{Binding Path=FilterByAll, Mode=TwoWay}" Style="{StaticResource RadioButtonStyle}" />
                        <RadioButton x:Name="rbFilterByAny" Margin="10,0,0,0" Content="{Binding Source={StaticResource stringResources}, Path=LabelFilterAnyText}" IsChecked="{Binding Path=FilterByAll, Mode=TwoWay, Converter={StaticResource inverseBooleanConverter}}" Style="{StaticResource RadioButtonStyle}" />
                      </StackPanel>
                      <ItemsControl x:Name="icLabelConditionViewModels" ItemsSource="{Binding Path=LabelConditionViewModels, Mode=OneWay}">
                        <ItemsControl.ItemsPanel>
                          <ItemsPanelTemplate>
                            <StackPanel Orientation="Vertical" />
                          </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>
                        <ItemsControl.ItemTemplate>
                          <DataTemplate>
                            <Grid Margin="0,0,0,7">
                              <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                              </Grid.ColumnDefinitions>
                              <Grid.RowDefinitions>
                                <RowDefinition Height="24" />
                                <RowDefinition Height="3" />
                                <RowDefinition Height="24" />
                                <RowDefinition Height="8" />
                              </Grid.RowDefinitions>
                              <igPivot:Dropdown x:Name="ddLevel" Grid.Column="0" Grid.ColumnSpan="2" Grid.Row="0" Foreground="{StaticResource ForegroundBrush}" Margin="0,0,7,0" ItemContainerStyle="{StaticResource ComboBoxItemStyle}" Style="{StaticResource DropdownStyle}" EmptyString="{Binding Source={StaticResource stringResources}, Path=LabelFilterDropdownSelectFieldText}" ItemsSource="{Binding Path=Levels, Mode=OneWay}" SelectedItem="{Binding Path=SelectedLevel, Mode=TwoWay}">
                                <ComboBox.ItemTemplate>
                                  <DataTemplate>
                                    <TextBlock Text="{Binding Path=Caption}" />
                                  </DataTemplate>
                                </ComboBox.ItemTemplate>
                              </igPivot:Dropdown>
                              <igPivot:Dropdown x:Name="ddCondition" Grid.Column="0" Grid.Row="2" Foreground="{StaticResource ForegroundBrush}" Margin="0,0,7,0" ItemContainerStyle="{StaticResource ComboBoxItemStyle}" Style="{StaticResource DropdownStyle}" EmptyString="{Binding Source={StaticResource stringResources}, Path=LabelFilterDropdownSelectConditionText}" ItemsSource="{Binding Path=LabelFilterConditions, Mode=OneWay}" SelectedItem="{Binding Path=SelectedLabelFilterCondition, Mode=TwoWay}">
                                <ComboBox.ItemTemplate>
                                  <DataTemplate>
                                    <TextBlock Text="{Binding Path=DisplayName}" />
                                  </DataTemplate>
                                </ComboBox.ItemTemplate>
                              </igPivot:Dropdown>
                              <TextBox x:Name="tbValue" Grid.Column="1" Grid.Row="2" Margin="0,0,7,0" Text="{Binding Path=Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource TextBoxStyle}" />
                              <Button x:Name="btnRemoveCondition" Grid.Column="2" Grid.Row="0" Grid.RowSpan="3" Style="{StaticResource FilterCellRemoveBtn}" HorizontalAlignment="Center" VerticalAlignment="Center" Width="12" Height="13" Margin="2,0">
                                <Path Width="8" Height="8" Fill="{StaticResource GlyphBorderBrush}" Data="M1.0606846,0 L2.8518269,1.7912511 4.6429692,0 5.7036535,1.0607488 3.9125112,2.852 5.7036536,4.6432512 4.6429692,5.704 2.8518269,3.9127488 1.0606846,5.704 0,4.6432512 1.7911423,2.852 0,1.0607488 z" Stretch="Fill" />
                                <ig:Commanding.Command>
                                  <igPivotPrim:AdvancedFilterFieldCommandSource EventName="Click" CommandType="RemoveLabelCondition" />
                                </ig:Commanding.Command>
                              </Button>
                              <Border Background="{StaticResource FilterFieldPendingChangesBackgroundBrush}" BorderBrush="{StaticResource FilterFieldPendingChangesBorderBrush}" BorderThickness="0,0,0,1" Height="2" VerticalAlignment="Bottom" Margin="0 4 0 0" Grid.ColumnSpan="3" Grid.Row="3" />
                            </Grid>
                          </DataTemplate>
                        </ItemsControl.ItemTemplate>
                      </ItemsControl>
                      <Grid Margin="0,7,0,0">
                        <Grid.ColumnDefinitions>
                          <ColumnDefinition Width="56" />
                          <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Button x:Name="btnAdd" Grid.Column="0" Content="{Binding Source={StaticResource stringResources}, Path=LabelFilterAddButtonText}" Style="{StaticResource ButtonStyle}" IsEnabled="{Binding Path=LastLabelConditionViewModel.IsComplete, FallbackValue=True, Mode=OneWay}">
                          <ig:Commanding.Command>
                            <igPivotPrim:AdvancedFilterFieldCommandSource EventName="Click" CommandType="AddLabelCondition" />
                          </ig:Commanding.Command>
                        </Button>
                        <Button x:Name="btnClear" Grid.Column="1" Content="{Binding Source={StaticResource stringResources}, Path=LabelFilterClearAllButtonText}" Style="{StaticResource ButtonStyle}" HorizontalAlignment="Right" Visibility="{Binding Path=HasConditions, Mode=OneWay, Converter={StaticResource boolToVisibilityConverter}}">
                          <ig:Commanding.Command>
                            <igPivotPrim:AdvancedFilterFieldCommandSource EventName="Click" CommandType="ClearLabelConditions" />
                          </ig:Commanding.Command>
                        </Button>
                      </Grid>
                      <Border Background="{StaticResource FilterFieldPendingChangesBackgroundBrush}" BorderBrush="{StaticResource FilterFieldPendingChangesBorderBrush}" BorderThickness="0,0,0,1" Height="2" VerticalAlignment="Bottom" Margin="0 10 0 0" />
                    </StackPanel>
                  </StackPanel>
                </Grid>
              </Border>
            </ScrollViewer>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- ********************************** AdvancedFilterFieldItemControl **********************************-->
  <Style TargetType="igPivotPrim:AdvancedFilterFieldItemControl" BasedOn="{StaticResource ExpandableFieldItemControlKey}">
    <Setter Property="ExpansionAreaMaxHeight" Value="400" />
    <Setter Property="ExpansionAreaContentTemplate">
      <Setter.Value>
        <DataTemplate>
          <igPivotPrim:AdvancedFilterFieldControl DataContext="{Binding AdvancedFilterViewModel}" ViewModel="{Binding}" />
        </DataTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- ********************************** FieldMeasuresItemControl **********************************-->
  <Style x:Key="FieldMeasuresItemControl" TargetType="igPivotPrim:FieldMeasuresItemControl">
    <Setter Property="FontSize" Value="11" />
    <Setter Property="Foreground" Value="{StaticResource ThemeForegroundBrush}" />
    <Setter Property="Background" Value="{StaticResource FieldItemBackgroundBrush}" />
    <Setter Property="BorderBrush" Value="{StaticResource FieldItemBorderBrush}" />
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="HorizontalContentAlignment" Value="Left" />
    <Setter Property="VerticalContentAlignment" Value="Center" />
    <Setter Property="Padding" Value="3,3" />
    <Setter Property="Margin" Value="1" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igPivotPrim:FieldMeasuresItemControl">
          <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="2">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal">
                  <Storyboard>
                    <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="closeButton" Storyboard.TargetProperty="(UIElement.Opacity)">
                      <EasingDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0" />
                    </DoubleAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="MouseOver">
                  <Storyboard>
                    <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="closeButton" Storyboard.TargetProperty="(UIElement.Opacity)">
                      <EasingDoubleKeyFrame KeyTime="00:00:00.3000000" Value="1" />
                    </DoubleAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid x:Name="Root" Background="{StaticResource TransparentBrush}">
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
              </Grid.ColumnDefinitions>
              <Border Background="Transparent" HorizontalAlignment="Stretch">
                <ig:DragDropManager.DragSource>
                  <ig:DragSource IsDraggable="True" DragTemplate="{StaticResource dragTemplate}" >
                    <igPivot:XamTriggers.EventTriggers>
                      <igPivot:XamEventTrigger EventName="DragStart">
                        <igPivot:DragStartTriggerAction IsEnabled="True" />
                      </igPivot:XamEventTrigger>
                    </igPivot:XamTriggers.EventTriggers>
                  </ig:DragSource>
                </ig:DragDropManager.DragSource>
                <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
              </Border>
              <Button Grid.Column="1" x:Name="closeButton" Style="{StaticResource FilterCellRemoveBtn}" Width="7" Height="7" Opacity="0" VerticalAlignment="Center" Margin="0,0,5,0">
                <Path Width="7" Height="7" Stretch="Fill" VerticalAlignment="Center" Fill="{StaticResource GlyphBorderBrush}" Opacity="1" Data="F1 M 53.122,8.510 L 44.610,0.000 L 26.561,18.050 L 8.510,0.000 L 0.000,8.510 L 18.050,26.561 L 0.000,44.611 L 8.510,53.123 L 26.561,35.072 L 44.612,53.123 L 53.122,44.612 L 35.071,26.561 L 53.122,8.510 Z" />
                <ig:Commanding.Command>
                  <igPivot:XamPivotGridCommandSource EventName="Click" CommandType="RemoveFilterCell" />
                </ig:Commanding.Command>
              </Button>
            </Grid>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="igPivotPrim:FieldMeasuresItemControl" BasedOn="{StaticResource FieldMeasuresItemControl}" />

  <!-- *********************************  MeasureFieldItemControl Style   ********************************* -->
  <Style x:Key="MeasureFieldItemControl" TargetType="igPivotPrim:MeasureFieldItemControl">
    <Setter Property="FontSize" Value="11" />
    <Setter Property="Foreground" Value="{StaticResource ThemeForegroundBrush}" />
    <Setter Property="Background" Value="{StaticResource FieldItemBackgroundBrush}" />
    <Setter Property="BorderBrush" Value="{StaticResource FieldItemBorderBrush}" />
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="HorizontalContentAlignment" Value="Left" />
    <Setter Property="Padding" Value="3,3" />
    <Setter Property="Margin" Value="1" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igPivotPrim:MeasureFieldItemControl">
          <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="2">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal">
                  <Storyboard>
                    <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="closeButton" Storyboard.TargetProperty="(UIElement.Opacity)">
                      <EasingDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0" />
                    </DoubleAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="MouseOver">
                  <Storyboard>
                    <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="closeButton" Storyboard.TargetProperty="(UIElement.Opacity)">
                      <EasingDoubleKeyFrame KeyTime="00:00:00.3000000" Value="1" />
                    </DoubleAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid x:Name="Root" Background="{StaticResource TransparentBrush}">
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
              </Grid.ColumnDefinitions>
              <Border Margin="2,0,0,0" Background="Transparent" HorizontalAlignment="Stretch">
                <ig:DragDropManager.DragSource>
                  <ig:DragSource IsDraggable="True" DragTemplate="{StaticResource dragTemplate}"  DragChannels="Measures">
                    <igPivot:XamTriggers.EventTriggers>
                      <igPivot:XamEventTrigger EventName="DragStart">
                        <igPivot:DragStartTriggerAction IsEnabled="True" />
                      </igPivot:XamEventTrigger>
                    </igPivot:XamTriggers.EventTriggers>
                  </ig:DragSource>
                </ig:DragDropManager.DragSource>
                <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Grid.Column="0" />
              </Border>
              <Button Grid.Column="1" Style="{StaticResource FilterCellRemoveBtn}" Width="7" Height="7" x:Name="closeButton" Opacity="0" HorizontalAlignment="Right" VerticalAlignment="Center" Margin="3,0,5,0">
                <ig:Commanding.Command>
                  <igPivot:XamPivotGridCommandSource EventName="Click" CommandType="RemoveFilterCell" />
                </ig:Commanding.Command>
                <Path Width="7" Height="7" Stretch="Fill" VerticalAlignment="Center" Fill="{StaticResource GlyphBorderBrush}" Opacity="1" Data="F1 M 53.122,8.510 L 44.610,0.000 L 26.561,18.050 L 8.510,0.000 L 0.000,8.510 L 18.050,26.561 L 0.000,44.611 L 8.510,53.123 L 26.561,35.072 L 44.612,53.123 L 53.122,44.612 L 35.071,26.561 L 53.122,8.510 Z" />
              </Button>
            </Grid>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="igPivotPrim:MeasureFieldItemControl" BasedOn="{StaticResource MeasureFieldItemControl}" />

  <!-- *********************************  MeasureFilterFieldControl  ********************************* -->
  <Style TargetType="igPivotPrim:MeasureFilterFieldControl">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igPivotPrim:MeasureFilterFieldControl">
          <Grid>
            <Grid.RowDefinitions>
              <RowDefinition Height="Auto" />
              <RowDefinition />
            </Grid.RowDefinitions>
            <Grid>
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
              </Grid.ColumnDefinitions>
              <TextBlock Grid.Column="0" Text="{Binding Source={StaticResource stringResources}, Path=MeasureFilterText}" Foreground="{StaticResource ForegroundBrush}" Margin="0,0,5,7" />
              <TextBlock Grid.Column="1" Text="{Binding Path=Measure.Caption}" Foreground="{StaticResource ForegroundBrush}" />
              <Grid Background="Transparent" HorizontalAlignment="Right" VerticalAlignment="Top" Grid.Column="3" Height="12" Width="12" Margin="4">
                <Rectangle Fill="{StaticResource PeekIconBackgroundBrush}" Stroke="{StaticResource PeekIconBorderBrush}" />
                <ig:Commanding.Commands>
                  <ig:CommandSourceCollection>
                    <igPivotPrim:ExpandableFieldItemCommandSource EventName="MouseEnter" CommandType="StartPeek" />
                    <igPivotPrim:ExpandableFieldItemCommandSource EventName="MouseLeave" CommandType="StopPeek" />
                  </ig:CommandSourceCollection>
                </ig:Commanding.Commands>
              </Grid>
            </Grid>
            <ScrollViewer Grid.Row="1" Style="{StaticResource ScrollViewerStyle}" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto" BorderThickness="0" Padding="0">
              <Border Padding="7" Width="300" BorderThickness="0">
                <StackPanel Orientation="Vertical">
                  <StackPanel Margin="0,0,0,5" Orientation="Horizontal" Visibility="{Binding Path=HasTwoOrMoreConditions, Mode=OneWay, Converter={StaticResource boolToVisibilityConverter}}">
                    <RadioButton x:Name="rbFilterByAll" Content="{Binding Source={StaticResource stringResources}, Path=MeasureFilterAllText}" IsChecked="{Binding Path=FilterByAll, Mode=TwoWay}" Style="{StaticResource RadioButtonStyle}" />
                    <RadioButton x:Name="rbFilterByAny" Content="{Binding Source={StaticResource stringResources}, Path=MeasureFilterAnyText}" IsChecked="{Binding Path=FilterByAll, Mode=TwoWay, Converter={StaticResource inverseBooleanConverter}}" Style="{StaticResource RadioButtonStyle}" Margin="7,0" />
                  </StackPanel>
                  <ItemsControl ItemsSource="{Binding Path=ValueConditionViewModels, Mode=OneWay}">
                    <ItemsControl.ItemsPanel>
                      <ItemsPanelTemplate>
                        <StackPanel Orientation="Vertical" />
                      </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                    <ItemsControl.ItemTemplate>
                      <DataTemplate>
                        <Grid Margin="0,0,0,7">
                          <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                          </Grid.ColumnDefinitions>
                          <Grid.RowDefinitions>
                            <RowDefinition Height="24" />
                            <RowDefinition Height="3" />
                            <RowDefinition Height="24" />
                            <RowDefinition Height="8" />
                          </Grid.RowDefinitions>
                          <ComboBox x:Name="cbHierarchy" Grid.Column="0" Grid.Row="0" Margin="0,0,7,0" ItemContainerStyle="{StaticResource ComboBoxItemStyle}" Style="{StaticResource ComboBoxStyle}" ItemsSource="{Binding Path=Hierarchies, Mode=OneWay}" SelectedItem="{Binding Path=SelectedHierarchy, Mode=TwoWay}">
                            <ComboBox.ItemTemplate>
                              <DataTemplate>
                                <TextBlock Text="{Binding Path=Caption}" />
                              </DataTemplate>
                            </ComboBox.ItemTemplate>
                          </ComboBox>
                          <ComboBox x:Name="cbLevel" Grid.Column="1" Grid.Row="0" Margin="0,0,7,0" ItemContainerStyle="{StaticResource ComboBoxItemStyle}" Style="{StaticResource ComboBoxStyle}" ItemsSource="{Binding Path=Levels, Mode=OneWay}" SelectedItem="{Binding Path=SelectedLevel, Mode=TwoWay}">
                            <ComboBox.ItemTemplate>
                              <DataTemplate>
                                <TextBlock Text="{Binding Path=Caption}" />
                              </DataTemplate>
                            </ComboBox.ItemTemplate>
                          </ComboBox>
                          <igPivot:Dropdown x:Name="cbCondition" Margin="0,0,7,0" Grid.Column="0" Grid.Row="2" Foreground="{StaticResource ForegroundBrush}" ItemContainerStyle="{StaticResource ComboBoxItemStyle}" Style="{StaticResource DropdownStyle}" EmptyString="{Binding Source={StaticResource stringResources}, Path=MeasureFilterDropdownMatchingText}" ItemsSource="{Binding Path=ValueFilterConditions, Mode=OneWay}" SelectedItem="{Binding Path=SelectedValueFilterCondition, Mode=TwoWay}">
                            <ComboBox.ItemTemplate>
                              <DataTemplate>
                                <TextBlock Text="{Binding Path=DisplayName}" />
                              </DataTemplate>
                            </ComboBox.ItemTemplate>
                          </igPivot:Dropdown>
                          <TextBox x:Name="tbValue" Grid.Column="1" Grid.Row="2" Text="{Binding Path=TextValue, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" Margin="0,0,7,0" Style="{StaticResource TextBoxStyle}" />
                          <Button x:Name="btnRemoveCondition" Grid.Column="2" Grid.Row="0" Grid.RowSpan="3" Style="{StaticResource FilterCellRemoveBtn}" HorizontalAlignment="Center" VerticalAlignment="Center" Width="16" Height="17" Margin="2 0">
                            <Path Width="8" Height="8" Fill="{StaticResource GlyphBorderBrush}" Data="M1.0606846,0 L2.8518269,1.7912511 4.6429692,0 5.7036535,1.0607488 3.9125112,2.852 5.7036536,4.6432512 4.6429692,5.704 2.8518269,3.9127488 1.0606846,5.704 0,4.6432512 1.7911423,2.852 0,1.0607488 z" Stretch="Fill" />
                            <ig:Commanding.Command>
                              <igPivotPrim:MeasureFilterFieldCommandSource x:Name="closeCommandSource" EventName="Click" CommandType="RemoveValueCondition" />
                            </ig:Commanding.Command>
                          </Button>
                          <Border Background="{StaticResource FilterFieldPendingChangesBackgroundBrush}" Grid.Row="3" Grid.ColumnSpan="3" BorderBrush="{StaticResource FilterFieldPendingChangesBorderBrush}" BorderThickness="0,0,0,1" Height="2" VerticalAlignment="Bottom" Margin="0 4 0 0" />
                        </Grid>
                      </DataTemplate>
                    </ItemsControl.ItemTemplate>
                  </ItemsControl>
                  <Grid>
                    <Grid.ColumnDefinitions>
                      <ColumnDefinition Width="56" />
                      <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <Button x:Name="btnAdd" Grid.Column="0" Style="{StaticResource ButtonStyle}" Content="{Binding Source={StaticResource stringResources}, Path=MeasureFilterAddButtonText}" IsEnabled="{Binding Path=LastValueConditionViewModel.IsComplete, FallbackValue=True, Mode=OneWay}">
                      <ig:Commanding.Command>
                        <igPivotPrim:MeasureFilterFieldCommandSource EventName="Click" CommandType="AddValueCondition" />
                      </ig:Commanding.Command>
                    </Button>
                    <Button x:Name="btnClear" Grid.Column="1" Style="{StaticResource ButtonStyle}" HorizontalAlignment="Right" Content="{Binding Source={StaticResource stringResources}, Path=MeasureFilterClearAllButtonText}" Visibility="{Binding Path=HasConditions, Mode=OneWay, Converter={StaticResource boolToVisibilityConverter}}">
                      <ig:Commanding.Command>
                        <igPivotPrim:MeasureFilterFieldCommandSource EventName="Click" CommandType="ClearValueConditions" />
                      </ig:Commanding.Command>
                    </Button>
                  </Grid>
                  <Border Background="{StaticResource FilterFieldPendingChangesBackgroundBrush}" BorderBrush="{StaticResource FilterFieldPendingChangesBorderBrush}" BorderThickness="0,0,0,1" Height="2" VerticalAlignment="Bottom" Margin="0,10,0,0" />
                </StackPanel>
              </Border>
            </ScrollViewer>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- *********************************  MeasureFilterFieldItemControl Style  ********************************* -->
  <Style TargetType="igPivotPrim:MeasureFilterFieldItemControl" BasedOn="{StaticResource ExpandableFieldItemControlKey}">
    <Setter Property="FontSize" Value="11" />
    <Setter Property="Background" Value="{StaticResource FieldItemBackgroundBrush}" />
    <Setter Property="Foreground" Value="{StaticResource ThemeForegroundBrush}" />
    <Setter Property="BorderBrush" Value="{StaticResource FieldItemBorderBrush}" />
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="HorizontalContentAlignment" Value="Left" />
    <Setter Property="Padding" Value="3,3" />
    <Setter Property="Margin" Value="1" />
    <Setter Property="ExpansionAreaMaxHeight" Value="400" />
    <Setter Property="ExpansionAreaContentTemplate">
      <Setter.Value>
        <DataTemplate>
          <igPivotPrim:MeasureFilterFieldControl DataContext="{Binding FilterableMeasureViewModel}" ViewModel="{Binding}" />
        </DataTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- *********************************  Expander Button Style  ********************************* -->
  <Style x:Key="ExpanderButtonStyle" TargetType="Button">
    <Setter Property="Background" Value="{StaticResource ExpanderButtonBackgroundBrush}" />
    <Setter Property="BorderBrush" Value="{StaticResource ExpanderButtonBorderBrush}" />
    <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
    <Setter Property="BorderThickness" Value="0" />
    <Setter Property="Cursor" Value="Hand" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="Button">
          <Grid>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="MouseOver" />
                <VisualState x:Name="Pressed" />
                <VisualState x:Name="Disabled" />
              </VisualStateGroup>
              <VisualStateGroup x:Name="FocusStates">
                <VisualState x:Name="Focused" />
                <VisualState x:Name="Unfocused" />
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Border x:Name="Background" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
              <Rectangle Fill="{TemplateBinding Background}" />
            </Border>
            <ContentPresenter x:Name="contentPresenter" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- *********************************  Expander default style  ********************************* -->
  <Style x:Key="Expander" TargetType="igPivot:Expander">
    <Setter Property="Background" Value="{StaticResource ExpanderBackgroundBrush}" />
    <Setter Property="BorderThickness" Value="0" />
    <Setter Property="BorderBrush" Value="{StaticResource ExpanderBorderBrush}" />
    <Setter Property="HeaderBackground" Value="{StaticResource LightGradientBrush}" />
    <Setter Property="HeaderBorderThickness" Value="1" />
    <Setter Property="Padding" Value="0" />
    <Setter Property="Margin" Value="0" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igPivot:Expander">
          <Grid x:Name="Root">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="ExpansionStates">
                <VisualState x:Name="Collapsed" />
                <VisualState x:Name="Expanded">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="HeaderBorder" Storyboard.TargetProperty="(Grid.RowSpan)">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <System:Int32>1</System:Int32>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="HeaderBorder" Storyboard.TargetProperty="(Grid.ColumnSpan)">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <System:Int32>2</System:Int32>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="Header" Storyboard.TargetProperty="(UIElement.Visibility)">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00" Storyboard.TargetName="ContentBorder" Storyboard.TargetProperty="(UIElement.Visibility)">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00" Storyboard.TargetName="OuterShdw" Storyboard.TargetProperty="(UIElement.Visibility)">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00" Storyboard.TargetName="ExpandGlyph" Storyboard.TargetProperty="(UIElement.Visibility)">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Collapsed</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00" Storyboard.TargetName="CollapseGlyph" Storyboard.TargetProperty="(UIElement.Visibility)">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Border Background="{TemplateBinding Background}" BorderThickness="0,1,1,1" BorderBrush="{TemplateBinding BorderBrush}">
              <Grid Margin="{TemplateBinding Padding}">
                <Grid.RowDefinitions>
                  <RowDefinition Height="Auto" />
                  <RowDefinition Height="*" />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="Auto" />
                  <ColumnDefinition Width="Auto" />
                  <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <Border x:Name="OuterShdw" BorderBrush="{StaticResource ShadowBrush1}" BorderThickness="0,0,0,1" CornerRadius="7" Grid.Column="1" Grid.ColumnSpan="2" Margin="5" Visibility="Collapsed">
                  <Border x:Name="MiddleShdw" BorderBrush="{StaticResource ShadowBrush2}" BorderThickness="1,0,1,1" CornerRadius="6">
                    <Border x:Name="InsideShdw" BorderBrush="{StaticResource ShadowBrush3}" BorderThickness="1" CornerRadius="5">
                      <Border x:Name="HeaderBorder" CornerRadius="4" Background="{TemplateBinding HeaderBackground}" BorderBrush="{TemplateBinding HeaderBorderBrush}" BorderThickness="{TemplateBinding HeaderBorderThickness}">
                        <StackPanel Orientation="Horizontal">
                          <ContentPresenter x:Name="Header" Visibility="Collapsed" Cursor="{TemplateBinding Cursor}" Content="{TemplateBinding Header}" ContentTemplate="{TemplateBinding HeaderTemplate}" Margin="5" />
                        </StackPanel>
                      </Border>
                    </Border>
                  </Border>
                </Border>
                <Border x:Name="ContentBorder" Grid.Row="1" Grid.Column="1" Grid.ColumnSpan="2" Visibility="Collapsed" Margin="5,0,5,5">
                  <ContentPresenter x:Name="Content" Cursor="{TemplateBinding Cursor}" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" />
                </Border>
                <Button x:Name="ExpansionButton" Style="{StaticResource ExpanderButtonStyle}" Width="12" Grid.RowSpan="2" VerticalContentAlignment="Center" BorderThickness="1,0">
                  <Grid HorizontalAlignment="Center" VerticalAlignment="Center">
                    <Grid x:Name="ExpandGlyph">
                      <Path Data="M566.8764,1436.906 L572.19147,1442.2482 L573.91058,1440.78 L569.90887,1436.9374 L573.91083,1433.001 L572.19153,1431.5951 z" HorizontalAlignment="Left" Margin="0" Stretch="Fill" UseLayoutRounding="False" Width="6" Fill="{StaticResource GlyphBorderBrush}" Height="9" />
                    </Grid>
                    <Grid x:Name="CollapseGlyph" Visibility="Collapsed">
                      <Path Data="M566.8764,1436.906 L562.83246,1440.7722 L564.55157,1442.2482 L569.90887,1436.9374 L564.52722,1431.6173 L562.83252,1432.9825 z" HorizontalAlignment="Left" Margin="0" Stretch="Fill" UseLayoutRounding="False" Width="6" Fill="{StaticResource GlyphBorderBrush}" Height="9" />
                    </Grid>
                  </Grid>
                </Button>
              </Grid>
            </Border>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="igPivot:Expander" BasedOn="{StaticResource Expander}" />

  <!-- *********************************  Editor Style  ********************************* -->
  <Style x:Key="EditorStyle" TargetType="TextBox">
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="Padding" Value="2" />
    <Setter Property="Margin" Value="0" />
    <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
    <Setter Property="BorderBrush" Value="{StaticResource TextBoxBorderBrush}" />
    <Setter Property="Background" Value="{StaticResource TextBoxBackgroundBrush}" />
  </Style>

  <!-- *********************************  ResizingIndicator  ********************************* -->
  <Style x:Key="PivotResizingIndicator" TargetType="igPivotPrim:PivotResizingIndicator">
    <Setter Property="Background" Value="{StaticResource ResizingIndicatorBackgroundBrush}" />
    <Setter Property="Width" Value="4" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igPivotPrim:PivotResizingIndicator">
          <Canvas>
            <Rectangle x:Name="FillIndicator" Fill="{TemplateBinding Background}" Width="{TemplateBinding Width}" Height="{Binding Path=Height,RelativeSource={RelativeSource TemplatedParent}}"></Rectangle>
          </Canvas>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="igPivotPrim:PivotResizingIndicator" BasedOn="{StaticResource PivotResizingIndicator}" />

  <!-- *********************************  XamPivotDataSelector  ********************************* -->
  <Style x:Key="XamPivotDataSelector" TargetType="igPivot:XamPivotDataSelector">
    <Setter Property="Background" Value="{StaticResource TransparentBrush}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igPivot:XamPivotDataSelector">
          <Grid x:Name="LayoutRoot" igPivot:XamPivotGrid.PivotPartType="DeleteArea" Background="{TemplateBinding Background}" igPrim:XamlHelper.SnapsToDevicePixels="True" igPivot:TemplatedParentHelper.TemplatedParent="{Binding RelativeSource={RelativeSource TemplatedParent}}">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="DataSourceTypeVisualParts">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="FlatDataSource">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="DropDownsPanel" Storyboard.TargetProperty="(UIElement.Visibility)">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Collapsed</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <ig:DragDropManager.DropTarget>
              <ig:DropTarget IsDropTarget="True" DropChannels="Measures, Rows, Columns, Filters, MeasureList" />
            </ig:DragDropManager.DropTarget>
            <Grid>
              <Grid.RowDefinitions>
                <RowDefinition Height="*" />
                <RowDefinition Height="210" />
              </Grid.RowDefinitions>
              <Border x:Name="OuterShdw" BorderBrush="{StaticResource ShadowBrush1}" BorderThickness="0,0,0,1" CornerRadius="7">
                <Border x:Name="MiddleShdw" BorderBrush="{StaticResource ShadowBrush2}" BorderThickness="1,0,1,1" CornerRadius="6">
                  <Border x:Name="InsideShdw" BorderBrush="{StaticResource ShadowBrush3}" BorderThickness="1" CornerRadius="5">
                    <Border x:Name="Bd" CornerRadius="4" Background="{StaticResource LightGradientBrush}" Padding="5">
                      <Grid>
                        <Grid.RowDefinitions>
                          <RowDefinition Height="Auto" />
                          <RowDefinition Height="*" MinHeight="100" />
                        </Grid.RowDefinitions>

                        <Grid Grid.Row="0" x:Name="DropDownsPanel">
                          <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                          </Grid.RowDefinitions>

                          <!--Databases drop-down-->
                          <Grid Grid.Row="0" Margin="{StaticResource DataSelectorDropdownMargin}">
                            <igPivot:Dropdown x:Name="DatabasesDropDown" EmptyString="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=StringSetting.DatabasesDropDownInitialText}" ItemContainerStyle="{StaticResource ComboBoxItemStyle}" Style="{StaticResource DropdownStyle}">
                              <ComboBox.ItemTemplate>
                                <DataTemplate>
                                  <TextBlock Text="{Binding Path=Name}" />
                                </DataTemplate>
                              </ComboBox.ItemTemplate>
                            </igPivot:Dropdown>
                          </Grid>

                          <!--Cubes drop-down-->
                          <Grid Grid.Row="1" Margin="{StaticResource DataSelectorDropdownMargin}">
                            <igPivot:Dropdown x:Name="CubesDropDown" EmptyString="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=StringSetting.CubesDropDownInitialText}" ItemContainerStyle="{StaticResource ComboBoxItemStyle}" Style="{StaticResource DropdownStyle}">
                              <ComboBox.ItemTemplate>
                                <DataTemplate>
                                  <TextBlock Text="{Binding Path=Caption}" />
                                </DataTemplate>
                              </ComboBox.ItemTemplate>
                            </igPivot:Dropdown>
                          </Grid>

                          <!--Measure groups drop-down-->
                          <Grid Grid.Row="2">
                            <igPivot:Dropdown x:Name="MeasureGroupsDropDown" EmptyString="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=StringSetting.MeasureGroupsDropDownInitialText}" ItemContainerStyle="{StaticResource ComboBoxItemStyle}" Style="{StaticResource DropdownStyle}">
                              <ComboBox.ItemTemplate>
                                <DataTemplate>
                                  <TextBlock Text="{Binding Path=Name}" />
                                </DataTemplate>
                              </ComboBox.ItemTemplate>
                            </igPivot:Dropdown>
                          </Grid>
                        </Grid>

                        <!--Metadata Tree -->
                        <Border x:Name="DimensionsTreeBd" Grid.Row="3" CornerRadius="4" Padding="5" Margin="0,5">
                          <Grid>
                            <TextBlock Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=StringSetting.DimensionsAreaBackgroundText}" FontSize="12" VerticalAlignment="Center" HorizontalAlignment="Center" Opacity="0.15" />
                            <ig:XamDataTree x:Name="DimensionsTree" ItemsSource="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=DataSource.Metadata}" Style="{StaticResource DataTreeStyle}" IsTouchSupportEnabled="false">
                              <ig:XamDataTree.ItemTemplate>
                                <DataTemplate>
                                  <igPivot:XamHierarchicalItem HierarchicalItem="{Binding Path=Data}" />
                                </DataTemplate>
                              </ig:XamDataTree.ItemTemplate>
                              <igPivot:XamTriggers.EventTriggers>
                                <igPivot:XamEventTrigger EventName="NodeDraggingStart">
                                  <igPivot:DragStartXamDataTreeTriggerAction IsEnabled="True" />
                                </igPivot:XamEventTrigger>
                              </igPivot:XamTriggers.EventTriggers>
                              <ig:XamDataTree.GlobalNodeLayouts>
                                <ig:NodeLayout x:Name="NL" IsExpandedMemberPath="ExpandWhenInitialized" Key="Items" TargetTypeName="HierarchicalItem" IsDraggable="True">
                                </ig:NodeLayout>
                              </ig:XamDataTree.GlobalNodeLayouts>
                            </ig:XamDataTree>
                          </Grid>
                        </Border>
                      </Grid>
                    </Border>
                  </Border>
                </Border>
              </Border>
              <!-- View Model Collections -->
              <Border x:Name="ViewModelsOuterShdw" BorderBrush="{StaticResource ShadowBrush1}" BorderThickness="0,0,0,1" CornerRadius="7" Grid.Row="1" Margin="0,5,0,0">
                <Border x:Name="ViewModelsMiddleShdw" BorderBrush="{StaticResource ShadowBrush2}" BorderThickness="1,0,1,1" CornerRadius="6">
                  <Border x:Name="ViewModelsInsideShdw" BorderBrush="{StaticResource ShadowBrush3}" BorderThickness="1" CornerRadius="5">
                    <Border x:Name="ViewModelsBd" CornerRadius="4" Background="{StaticResource LightGradientBrush}" Padding="5">
                      <Grid>
                        <Grid.RowDefinitions>
                          <RowDefinition Height="Auto" />
                          <RowDefinition Height="*" />
                          <RowDefinition Height="5" />
                          <RowDefinition Height="*" />
                          <RowDefinition Height="5" />
                          <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                          <ColumnDefinition Width="*" />
                          <ColumnDefinition Width="4" />
                          <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>

                        <!-- Header Labels -->
                        <TextBlock Grid.ColumnSpan="3" Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=StringSetting.PanelCollectionsAreaLabel}" Margin="0,0,0,5" />

                        <!-- Filters ListBox -->
                        <Grid Grid.Row="1">
                          <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" MinHeight="20" />
                            <RowDefinition />
                          </Grid.RowDefinitions>
                          <StackPanel Orientation="Horizontal">
                            <ContentControl Margin="2,0,5,0" Style="{StaticResource FilterIconPath}" VerticalAlignment="Center" Background="{StaticResource MemberIconBackgroundBrush1}" BorderBrush="{StaticResource MemberIconBorderBrush1}" />
                            <TextBlock Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=StringSetting.FiltersAreaBackgroundText}" VerticalAlignment="Center" />
                          </StackPanel>
                          <Border Grid.Row="1" Background="{StaticResource PivotDataSelectorListBoxBackgroundBrush}" BorderBrush="{StaticResource PivotDataSelectorListBoxBorderBrush}" BorderThickness="1" CornerRadius="2">
                            <Grid>
                              <igPivotPrim:FieldsDropAreaControl Grid.ColumnSpan="2" x:Name="FiltersDropArea" igPivot:XamPivotGrid.PivotPartType="Filters" IsEnabled="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=DataSource.Filters.IsEditable}" ItemsSource="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=DataSource.Filters, Mode=TwoWay}" ItemTemplate="{StaticResource FieldItemTemplateKey}">
                                <igPivotPrim:FieldsDropAreaControl.ItemsPanel>
                                  <ItemsPanelTemplate>
                                    <StackPanel Orientation="Vertical" Background="{StaticResource TransparentBrush}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" igPivot:XamPivotGrid.PivotPartType="Filters">
                                      <ig:DragDropManager.DropTarget>
                                        <ig:DropTarget IsDropTarget="True" DropTargetMarkerBrush="{StaticResource DropTargetMarkerBackgroundBrush}" DropChannels="Rows, Columns, Filters" />
                                      </ig:DragDropManager.DropTarget>
                                      <igPivot:ItemsSeparatorProvider.Separator>
                                        <igPivot:PanelItemsSeparator SeparatorColor="{StaticResource Color_027}" />
                                      </igPivot:ItemsSeparatorProvider.Separator>
                                    </StackPanel>
                                  </ItemsPanelTemplate>
                                </igPivotPrim:FieldsDropAreaControl.ItemsPanel>
                              </igPivotPrim:FieldsDropAreaControl>
                            </Grid>
                          </Border>
                        </Grid>

                        <!-- Columns ListBox -->
                        <Grid Grid.Row="1" Grid.Column="2">
                          <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" MinHeight="20" />
                            <RowDefinition />
                          </Grid.RowDefinitions>
                          <StackPanel Orientation="Horizontal">
                            <ContentControl Margin="2,0,5,0" Style="{StaticResource ColumnsIconPath}" VerticalAlignment="Center" Background="{StaticResource MemberIconBackgroundBrush1}" BorderBrush="{StaticResource MemberIconBorderBrush1}" />
                            <TextBlock Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=StringSetting.ColumnsAreaBackgroundText}" VerticalAlignment="Center" />
                          </StackPanel>
                          <Border Grid.Row="1" Background="{StaticResource PivotDataSelectorListBoxBackgroundBrush}" BorderBrush="{StaticResource PivotDataSelectorListBoxBorderBrush}" BorderThickness="1" CornerRadius="2">
                            <Grid>
                              <igPivotPrim:FieldsDropAreaControl Grid.ColumnSpan="2" x:Name="ColumnsDropArea" igPivot:XamPivotGrid.PivotPartType="Columns" IsEnabled="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=DataSource.Columns.IsEditable}" ItemsSource="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=DataSource.Columns, Mode=TwoWay}" ItemTemplate="{StaticResource FieldItemTemplateKey}">
                                <igPivotPrim:FieldsDropAreaControl.ItemsPanel>
                                  <ItemsPanelTemplate>
                                    <StackPanel Orientation="Vertical" Background="{StaticResource TransparentBrush}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" igPivot:XamPivotGrid.PivotPartType="Columns">
                                      <ig:DragDropManager.DropTarget>
                                        <ig:DropTarget IsDropTarget="True" DropTargetMarkerBrush="{StaticResource DropTargetMarkerBackgroundBrush}" DropChannels="Rows, Columns, Filters, MeasureList" />
                                      </ig:DragDropManager.DropTarget>
                                      <igPivot:ItemsSeparatorProvider.Separator>
                                        <igPivot:PanelItemsSeparator SeparatorColor="{StaticResource Color_027}" />
                                      </igPivot:ItemsSeparatorProvider.Separator>
                                    </StackPanel>
                                  </ItemsPanelTemplate>
                                </igPivotPrim:FieldsDropAreaControl.ItemsPanel>
                              </igPivotPrim:FieldsDropAreaControl>
                            </Grid>
                          </Border>
                        </Grid>

                        <!-- Rows ListBox -->
                        <Grid Grid.Row="3">
                          <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" MinHeight="20" />
                            <RowDefinition />
                          </Grid.RowDefinitions>
                          <StackPanel Orientation="Horizontal">
                            <ContentControl Margin="2,0,5,0" Style="{StaticResource RowsIconPath}" VerticalAlignment="Center" Background="{StaticResource MemberIconBackgroundBrush1}" BorderBrush="{StaticResource MemberIconBorderBrush1}" />
                            <TextBlock Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=StringSetting.RowsAreaBackgroundText}" VerticalAlignment="Center" />
                          </StackPanel>
                          <Border Grid.Row="1" Background="{StaticResource PivotDataSelectorListBoxBackgroundBrush}" BorderBrush="{StaticResource PivotDataSelectorListBoxBorderBrush}" BorderThickness="1" CornerRadius="2">
                            <Grid>
                              <igPivotPrim:FieldsDropAreaControl Grid.ColumnSpan="2" x:Name="RowsDropArea" igPivot:XamPivotGrid.PivotPartType="Rows" IsEnabled="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=DataSource.Rows.IsEditable}" ItemsSource="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=DataSource.Rows, Mode=TwoWay}" ItemTemplate="{StaticResource FieldItemTemplateKey}">
                                <igPivotPrim:FieldsDropAreaControl.ItemsPanel>
                                  <ItemsPanelTemplate>
                                    <StackPanel Orientation="Vertical" Background="{StaticResource TransparentBrush}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" igPivot:XamPivotGrid.PivotPartType="Rows">
                                      <ig:DragDropManager.DropTarget>
                                        <ig:DropTarget IsDropTarget="True" DropTargetMarkerBrush="{StaticResource DropTargetMarkerBackgroundBrush}" DropChannels="Rows, Columns, Filters, MeasureList" />
                                      </ig:DragDropManager.DropTarget>
                                      <igPivot:ItemsSeparatorProvider.Separator>
                                        <igPivot:PanelItemsSeparator SeparatorColor="{StaticResource Color_027}" />
                                      </igPivot:ItemsSeparatorProvider.Separator>
                                    </StackPanel>
                                  </ItemsPanelTemplate>
                                </igPivotPrim:FieldsDropAreaControl.ItemsPanel>
                              </igPivotPrim:FieldsDropAreaControl>
                            </Grid>
                          </Border>
                        </Grid>

                        <!-- Measures ListBox -->
                        <Grid Grid.Row="3" Grid.Column="2">
                          <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" MinHeight="20" />
                            <RowDefinition />
                          </Grid.RowDefinitions>
                          <StackPanel Orientation="Horizontal">
                            <ContentControl Margin="2,0,5,1" Style="{StaticResource MeasuresIconPath}" VerticalAlignment="Center" Foreground="{StaticResource IconBorderBrush3}" Background="{StaticResource IconBackgroundBrush2}" BorderBrush="{StaticResource IconBackgroundBrush1}" />
                            <TextBlock Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=StringSetting.MeasuresAreaBackgroundText}" VerticalAlignment="Center" />
                          </StackPanel>
                          <Border Grid.Row="1" Background="{StaticResource PivotDataSelectorListBoxBackgroundBrush}" BorderBrush="{StaticResource PivotDataSelectorListBoxBorderBrush}" BorderThickness="1" CornerRadius="2">
                            <Grid>
                              <igPivotPrim:FieldsDropAreaControl Grid.ColumnSpan="2" x:Name="MeasuresDropArea" IsEnabled="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=DataSource.Measures.IsEditable}" ItemsSource="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=DataSource.Measures, Mode=TwoWay}" ItemTemplate="{StaticResource FieldItemTemplateKey}">
                                <igPivotPrim:FieldsDropAreaControl.ItemsPanel>
                                  <ItemsPanelTemplate>
                                    <StackPanel Orientation="Vertical" Background="{StaticResource TransparentBrush}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" igPivot:XamPivotGrid.PivotPartType="Measures">
                                      <ig:DragDropManager.DropTarget>
                                        <ig:DropTarget IsDropTarget="True" DropTargetMarkerBrush="{StaticResource DropTargetMarkerBackgroundBrush}" DropChannels="Measures" />
                                      </ig:DragDropManager.DropTarget>
                                      <igPivot:ItemsSeparatorProvider.Separator>
                                        <igPivot:PanelItemsSeparator SeparatorColor="{StaticResource Color_027}" />
                                      </igPivot:ItemsSeparatorProvider.Separator>
                                    </StackPanel>
                                  </ItemsPanelTemplate>
                                </igPivotPrim:FieldsDropAreaControl.ItemsPanel>
                              </igPivotPrim:FieldsDropAreaControl>
                            </Grid>
                          </Border>
                        </Grid>
                        <!-- Layout Update Controlers -->
                        <CheckBox x:Name="DeferredUpdateLayout" Grid.Row="5" VerticalAlignment="Center" HorizontalAlignment="Stretch" Content="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=StringSetting.DeferredUpdateLayoutCheckBoxLabel}" IsChecked="{Binding DataSource.DeferredLayoutUpdate, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource CheckBoxStyle}" />
                        <Button x:Name="UpdateLayoutButton" Grid.Row="5" Grid.Column="2" Content="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=StringSetting.UpdateLayoutButtonText}" VerticalContentAlignment="Center" HorizontalAlignment="Stretch" IsEnabled="{Binding IsChecked, ElementName=DeferredUpdateLayout}" Style="{StaticResource ButtonStyle}">
                          <ig:Commanding.Command>
                            <igPivot:XamPivotGridCommandSource EventName="Click" CommandType="RefreshGridImmediately" />
                          </ig:Commanding.Command>
                        </Button>
                      </Grid>
                    </Border>
                  </Border>
                </Border>
              </Border>
            </Grid>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="igPivot:XamPivotDataSelector" BasedOn="{StaticResource XamPivotDataSelector}" />

  <!-- *********************************  FieldChooserItem Style  ********************************* -->
  <Style TargetType="igPivot:FieldChooserItem">
    <Setter Property="Margin" Value="1 1 1 0" />
    <Setter Property="MinHeight" Value="24" />
    <Setter Property="Background" Value="{StaticResource TransparentBrush}" />
    <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igPivot:FieldChooserItem">
          <Border Background="{TemplateBinding Background}" HorizontalAlignment="Stretch">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="MouseOver">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="mouseOverPanel">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="SelectionStates">
                <VisualState x:Name="Unselected" />
                <VisualState x:Name="Selected">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="checked">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid>
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="22" />
                <ColumnDefinition />
              </Grid.ColumnDefinitions>
              <Border x:Name="mouseOverPanel" Grid.ColumnSpan="2" Background="{StaticResource FieldChooserItemHoverBackgroundBrush}" BorderBrush="{StaticResource FieldChooserItemHoverBorderBrush}" BorderThickness="1" Visibility="Collapsed" CornerRadius="3" />
              <Path Visibility="Collapsed" x:Name="checked" Data="M103.10625,598.38019 C103.10625,598.38019 104.35281,597.37262 104.35281,597.37262 C104.35281,597.37262 106.69083,599.42383 106.69083,599.42383 C106.69083,599.42383 110.9969,593.85394 110.9969,593.85394 C110.9969,593.85394 112.8087,593.86188 112.8087,593.86188 C112.8087,593.86188 107.73771,601.85333 107.73771,601.85333 C107.73771,601.85333 106.1218,601.8479 106.1218,601.8479 C106.1218,601.8479 103.10625,598.38019 103.10625,598.38019 z" Fill="{StaticResource CheckBoxCheckIconBackgroundBrush}" Stretch="Fill" UseLayoutRounding="False" Height="10" Width="12" Margin="4,0,0,0" />
              <ContentControl x:Name="contentControl" Grid.Column="1" VerticalAlignment="Center" HorizontalAlignment="Stretch" Margin="5,0" Foreground="{TemplateBinding Foreground}">
                <ContentPresenter />
              </ContentControl>
            </Grid>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- *********************************  FieldChooserGroup Style   ********************************* -->
  <Style TargetType="igPivot:FieldChooserGroup">
    <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igPivot:FieldChooserGroup">
          <Grid>
            <Grid.RowDefinitions>
              <RowDefinition Height="24" />
              <RowDefinition />
            </Grid.RowDefinitions>
            <Border Background="{StaticResource FieldItemBackgroundBrush}" BorderBrush="{StaticResource FieldItemBorderBrush}" BorderThickness="1">
              <ContentPresenter x:Name="HeaderPresenter" Content="{TemplateBinding Header}" ContentTemplate="{TemplateBinding HeaderTemplate}" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="3,0" />
            </Border>
            <ItemsPresenter Grid.Row="1" x:Name="ItemsPresenter" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- *********************************  ToggleButton Style   ********************************* -->
  <Style x:Key="FieldItemChooserToggleBtnStyle" TargetType="ToggleButton">
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
    <Setter Property="Padding" Value="5,0,5,0" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="ToggleButton">
          <Grid>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="MouseOver">
                  <Storyboard>
                    <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="hover" d:IsOptimized="True" />
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Pressed">
                  <Storyboard>
                    <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="pressed" d:IsOptimized="True" />
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Disabled">
                  <Storyboard>
                    <DoubleAnimation Duration="0" To="0.7" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="disabled" d:IsOptimized="True" />
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="CheckStates">
                <VisualState x:Name="Checked">
                  <Storyboard>
                    <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="focused" d:IsOptimized="True" />
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Unchecked" />
                <VisualState x:Name="Indeterminate" />
              </VisualStateGroup>
              <VisualStateGroup x:Name="FocusStates">
                <VisualState x:Name="Focused">
                  <Storyboard>
                    <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="focused" d:IsOptimized="True" />
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Unfocused" />
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Border x:Name="normal" Background="{StaticResource ButtonBackgroundBrush}" BorderBrush="{StaticResource ButtonBorderBrush}" Grid.ColumnSpan="2" Grid.Column="1" BorderThickness="0,0,1,1" />
            <Border x:Name="hover" Background="{StaticResource ButtonHoverBackgroundBrush}" BorderBrush="{StaticResource ButtonBorderBrush}" Grid.ColumnSpan="2" Grid.Column="1" Opacity="0" BorderThickness="0,0,1,1" />
            <Border x:Name="pressed" Background="{StaticResource ButtonPressedBackgroundBrush}" BorderBrush="{StaticResource ButtonBorderBrush}" Grid.ColumnSpan="2" Grid.Column="1" Opacity="0" BorderThickness="0,0,1,1" />
            <Border x:Name="focused" BorderBrush="{StaticResource ButtonPressedBorderBrush}" Grid.ColumnSpan="2" Grid.Column="1" Opacity="0" BorderThickness="1" />
            <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center" />
            <Rectangle x:Name="disabled" Fill="{StaticResource DisabledBackgroundBrush}" Grid.ColumnSpan="2" Grid.Column="1" Opacity="0" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- *********************************  FieldChooser Style  ********************************* -->
  <Style TargetType="igPivot:FieldChooser">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igPivot:FieldChooser">
          <Grid>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="Opened">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="closedPath" Storyboard.TargetProperty="(UIElement.Visibility)">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Collapsed</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="openedPath" Storyboard.TargetProperty="(UIElement.Visibility)">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid.RowDefinitions>
              <RowDefinition Height="*" />
              <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <ToggleButton x:Name="DropDownToggle" IsThreeState="False" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" HorizontalContentAlignment="Left" VerticalContentAlignment="Bottom" IsChecked="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsOpen, Mode=TwoWay}" Style="{StaticResource FieldItemChooserToggleBtnStyle}">
              <Grid Margin="5" Width="14" Height="14">
                <Path x:Name="closedPath" Data="M1,10 10,1 10,10Z" Fill="{StaticResource ArrowBackgroundBrush}" StrokeThickness="1" />
                <Path x:Name="openedPath" Data="M1,10 10,1 1,1Z" Fill="{StaticResource ArrowBackgroundBrush}" StrokeThickness="1" Margin="3,3,0,0" Visibility="Collapsed" />
              </Grid>
            </ToggleButton>
            <Popup x:Name="DropDown" Grid.Row="1" igPrim:XamlHelper.StaysOpen="False" IsOpen="{Binding ElementName=DropDownToggle, Path=IsChecked, Mode=TwoWay}">
              <Border x:Name="PopupBorder" MaxHeight="{TemplateBinding MaxDropDownHeight}" Background="{StaticResource PopupBackgroundBrush}" BorderBrush="{StaticResource PopupBorderBrush}" VerticalAlignment="Top" BorderThickness="1">
                <ScrollViewer VerticalScrollBarVisibility="Auto" Style="{StaticResource ScrollViewerStyle}">
                  <Grid>
                    <Grid.RowDefinitions>
                      <RowDefinition />
                      <RowDefinition />
                      <RowDefinition />
                      <RowDefinition />
                      <RowDefinition />
                    </Grid.RowDefinitions>
                    <Grid x:Name="RowsGroupPanel" />
                    <Grid x:Name="RowsGroupsGroupPanel" Grid.Row="1" />
                    <Grid x:Name="ColumnsGroupPanel" Grid.Row="2" />
                    <Grid x:Name="FiltersGroupPanel" Grid.Row="3" />
                    <Grid x:Name="MeasuresGroupPanel" Grid.Row="4" />
                  </Grid>
                </ScrollViewer>
              </Border>
            </Popup>
            <Rectangle Height="1" VerticalAlignment="Bottom" Fill="{StaticResource FieldChooserBackgroundBrush}" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- *********************************  XamPivotGrid Style  ********************************* -->
  <Style x:Key="XamPivotGrid" TargetType="igPivot:XamPivotGrid">
    <Setter Property="FontSize" Value="11" />
    <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
    <Setter Property="Background" Value="{StaticResource PivotGridBackgroundBrush}" />
    <Setter Property="BorderBrush" Value="{StaticResource PivotGridBorderBrush}" />
    <Setter Property="EditorStyle" Value="{StaticResource EditorStyle}" />
    <Setter Property="VerticalContentAlignment" Value="Center" />
    <Setter Property="BorderThickness" Value="1,1,0,1" />
    <Setter Property="HorizontalContentAlignment" Value="Left" />
    <Setter Property="Padding" Value="5" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igPivot:XamPivotGrid">
          <Border x:Name="Bd" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
            <Grid x:Name="LayoutRoot" igPivot:TemplatedParentHelper.TemplatedParent="{Binding RelativeSource={RelativeSource TemplatedParent}}" igPivot:XamPivotGrid.PivotPartType="DeleteArea" Background="{StaticResource TransparentBrush}" igPrim:XamlHelper.SnapsToDevicePixels="True">
              <ig:DragDropManager.DropTarget>
                <ig:DropTarget IsDropTarget="True" DropChannels="Measures, Rows, Columns, Filters, MeasureList" />
              </ig:DragDropManager.DropTarget>
              <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
              </Grid.RowDefinitions>
              <Grid>
                <Grid.RowDefinitions>
                  <RowDefinition Height="Auto" />
                  <RowDefinition Height="*" />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="Auto" x:Name="LeftColumn" />
                  <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <igPivotPrim:ColumnsFieldDropAreaControl Grid.Column="1" Grid.Row="1" x:Name="ColumnsDropArea" ItemsSource="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=DataSource.Columns, Mode=TwoWay}" ItemTemplate="{StaticResource FieldItemTemplateKey}" IsEnabled="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=DataSource.Columns.IsEditable}" />
                <igPivotPrim:FiltersFieldDropAreaControl Grid.ColumnSpan="2" x:Name="FiltersDropArea" ItemsSource="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=DataSource.Filters, Mode=TwoWay}" ItemTemplate="{StaticResource FieldItemTemplateKey}" IsEnabled="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=DataSource.Filters.IsEditable}" />
                <igPivotPrim:MeasuresFieldDropAreaControl AllowResizing="Right" Grid.Row="1" x:Name="MeasuresDropArea" ItemsSource="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=DataSource.Measures, Mode=TwoWay}" ItemTemplate="{StaticResource FieldItemTemplateKey}" IsEnabled="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=DataSource.Measures.IsEditable}" />
                <ContentControl Margin="8,0,0,0" x:Name="FilterIconPath" Style="{StaticResource FilterIconPath}" VerticalAlignment="Center" HorizontalAlignment="Left" Background="{StaticResource MemberIconBackgroundBrush1}" BorderBrush="{StaticResource MemberIconBorderBrush1}" />
                <ContentControl Margin="9,0,0,0" x:Name="ColumnsIconPath" Style="{StaticResource ColumnsIconPath}" VerticalAlignment="Center" Grid.Row="1" Grid.Column="1" HorizontalAlignment="Left" Background="{StaticResource MemberIconBackgroundBrush1}" BorderBrush="{StaticResource MemberIconBorderBrush1}" />
                <ContentControl Margin="7,1,5,0" x:Name="MeasuresIconPath" Style="{StaticResource MeasuresIconPath}" VerticalAlignment="Center" Grid.Row="1" HorizontalAlignment="Left" Foreground="{StaticResource IconBorderBrush3}" Background="{StaticResource IconBackgroundBrush2}" BorderBrush="{StaticResource IconBackgroundBrush1}" />
              </Grid>
              <Grid Grid.Row="1" Grid.ColumnSpan="1" x:Name="GridControlLayout">
                <Grid.RowDefinitions>
                  <RowDefinition Height="*" />
                  <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="*" />
                  <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <igPivot:PivotGridPanel x:Name="MainLayout" SharedSizeColumn="{Binding ElementName=LeftColumn}">
                  <igPivot:PivotDataRowsPanel x:Name="DataRowsPanel" Canvas.ZIndex="-2">
                    <ig:DragDropManager.DropTarget>
                      <ig:DropTarget DropTargetMarkerBrush="{StaticResource DropTargetMarkerBackgroundBrush}" DropChannels="Measures" />
                    </ig:DragDropManager.DropTarget>
                  </igPivot:PivotDataRowsPanel>
                  <igPivot:PivotRowsPanel x:Name="RowsHeaderPanel" Canvas.ZIndex="-1">
                    <ig:DragDropManager.DropTarget>
                      <ig:DropTarget DropTargetMarkerBrush="{StaticResource DropTargetMarkerBackgroundBrush}" DropChannels="Rows" />
                    </ig:DragDropManager.DropTarget>
                  </igPivot:PivotRowsPanel>
                  <igPivot:PivotColumnsPanel x:Name="ColumnsHeaderPanel" Canvas.ZIndex="-1">
                    <ig:DragDropManager.DropTarget>
                      <ig:DropTarget DropTargetMarkerBrush="{StaticResource DropTargetMarkerBackgroundBrush}" DropChannels="Columns" />
                    </ig:DragDropManager.DropTarget>
                  </igPivot:PivotColumnsPanel>
                  <Grid igPivot:PivotGridPanel.IsTopLeftCornerControl="True">
                    <Grid.ColumnDefinitions>
                      <ColumnDefinition Width="Auto" />
                      <ColumnDefinition Width="28" />
                      <ColumnDefinition />
                    </Grid.ColumnDefinitions>
                    <Border Grid.ColumnSpan="3" Background="{StaticResource FieldsDropAreaBackgroundBrush}" BorderBrush="{StaticResource FieldsDropAreaControlBorderBrush}" BorderThickness="0,0,1,1" />
                    <Grid x:Name="FieldChooserPanel" />
                    <igPivotPrim:RowsFieldDropAreaControl AllowResizing="Right" x:Name="RowsDropArea" ItemsSource="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=DataSource.Rows, Mode=TwoWay}" ItemTemplate="{StaticResource FieldItemTemplateKey}" IsEnabled="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=DataSource.Rows.IsEditable}" Grid.Column="1" Grid.ColumnSpan="2" />
                    <ContentControl Margin="9,0,0,0" x:Name="RowsIconPath" Style="{StaticResource RowsIconPath}" VerticalAlignment="Center" Grid.Row="1" Grid.Column="1" HorizontalAlignment="Left" Background="{StaticResource MemberIconBackgroundBrush1}" BorderBrush="{StaticResource MemberIconBorderBrush1}" />
                  </Grid>
                  <igPivot:HiddenAxisChooser x:Name="ColumnChooser" ItemTemplate="{StaticResource AxisChooserTemplateKey}" />
                  <igPivot:HiddenAxisChooser x:Name="RowChooser" ItemTemplate="{StaticResource AxisChooserTemplateKey}" />
                </igPivot:PivotGridPanel>
                <ScrollBar x:Name="VerticalScrollBar" Width="17" Grid.Column="1" Style="{StaticResource ScrollBarStyle}" />
                <ScrollBar x:Name="HorizontalScrollBar" Height="17" Grid.Row="1" Style="{StaticResource ScrollBarStyle}" />
                <Rectangle Fill="{StaticResource ScrollViewerCornerBackgroundBrush}" Grid.Column="1" Grid.Row="1" />
              </Grid>
            </Grid>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="igPivot:XamPivotGrid" BasedOn="{StaticResource XamPivotGrid}" />

  <!-- *********************************  Axis Chooser  ********************************* -->
  <Style x:Key="HiddenAxisChooser" TargetType="{x:Type igPivot:HiddenAxisChooser}">
    <Setter Property="HorizontalContentAlignment" Value="Left" />
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
    <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
    <Setter Property="Background" Value="{StaticResource HiddenColumnIndicatorBackgroundBrush}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type igPivot:HiddenAxisChooser}">
          <Grid>
            <Border x:Name="ContentPresenterBorder" Padding="0" Background="{TemplateBinding Background}">
              <Grid>
                <ToggleButton x:Name="DropDownToggle" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource FilterDropdownToggle}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" />
              </Grid>
            </Border>
            <Popup x:Name="PART_Popup" Margin="1" AllowsTransparency="true" IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}" Placement="Bottom" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}">
              <Border x:Name="PopupBorder" Background="{StaticResource PopupBackgroundBrush}" BorderBrush="{StaticResource PopupBorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" HorizontalAlignment="Stretch" VerticalAlignment="Top" Height="Auto">
                <ScrollViewer x:Name="ScrollViewer" BorderThickness="0" Padding="1" Style="{StaticResource ScrollViewerStyle}">
                  <ItemsPresenter>
                    <ItemsPresenter.Resources>
                      <Style TargetType="{x:Type ComboBoxItem}" BasedOn="{StaticResource ComboBoxItemStyle}" />
                    </ItemsPresenter.Resources>
                  </ItemsPresenter>
                </ScrollViewer>
              </Border>
            </Popup>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="{x:Type igPivot:HiddenAxisChooser}" BasedOn="{StaticResource HiddenAxisChooser}" />

  <!-- **************************************************************** PRINTING RESOURCES ********************************************************************
********************************************************************************************************************************************************************    -->

    <!-- *********************************  PivotGridReportControl Style  ********************************* -->
    <Style TargetType="igPivot:PivotGridReportControl" BasedOn="{StaticResource {x:Type igPivot:PivotGridReportControl}}">
        <Setter Property="FilterFieldsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <Grid>
                        <Border BorderThickness="1" BorderBrush="{StaticResource FieldsDropAreaControlBorderBrush}" Background="{StaticResource FieldsDropAreaBackgroundBrush}">
                            <WrapPanel x:Name="FiltersPanel" Margin="5,5,0,5" />
                        </Border>
                    </Grid>
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="MeasureFieldsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <Grid>
                        <Border BorderThickness="1,0,1,0" BorderBrush="{StaticResource FieldsDropAreaControlBorderBrush}" Background="{StaticResource FieldsDropAreaBackgroundBrush}">
                            <WrapPanel x:Name="MeasuresPanel" Margin="5,5,0,5" />
                        </Border>
                    </Grid>
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="RowFieldsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <Grid>
                        <Border BorderThickness="1,1,1,1" BorderBrush="{StaticResource FieldsDropAreaControlBorderBrush}" Background="{StaticResource FieldsDropAreaBackgroundBrush}">
                            <WrapPanel x:Name="RowsPanel" VerticalAlignment="Top" Margin="5,5,0,5" />
                        </Border>
                    </Grid>
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ColumnFieldsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <Grid>
                        <Border BorderThickness="0,0,1,0" BorderBrush="{StaticResource FieldsDropAreaControlBorderBrush}" Background="{StaticResource FieldsDropAreaBackgroundBrush}">
                            <WrapPanel x:Name="ColumnsPanel" Margin="5,5,0,5" />
                        </Border>
                    </Grid>
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="FiltersIconGeometry">
            <Setter.Value>
                <PathGeometry Figures="M0.5,0.5 L11.5,0.5 L7.4999995,5.5 L7.4999995,9.5 L4.4999995,9.5 L4.4999995,5.5 z" />
            </Setter.Value>
        </Setter>
        <Setter Property="RowsIconGeometry">
            <Setter.Value>
                <PathGeometry Figures="M0.5,8.5 L10.5,8.5 L10.5,10.5 L0.5,10.5 z M0.5,4.5 L10.5,4.5 L10.5,6.5 L0.5,6.5 z M0.5,0.5 L10.5,0.5 L10.5,2.5 L0.5,2.5 z" />
            </Setter.Value>
        </Setter>
        <Setter Property="ColumnsIconGeometry">
            <Setter.Value>
                <PathGeometry Figures="M8.5,0.5 L10.5,0.5 L10.5,10.5 L8.5,10.5 z M4.5,0.5 L6.5,0.5 L6.5,10.5 L4.5,10.5 z M0.5,0.5 L2.5,0.5 L2.5,10.5 L0.5,10.5 z" />
            </Setter.Value>
        </Setter>
        <Setter Property="MeasuresIconGeometry">
            <Setter.Value>
                <GeometryGroup >
                    <PathGeometry Figures="M1,3.9999999 L1,11 3,11 3,3.9999999 z M11,3 L11,11 13,11 13,3 z M0,3 L1,3 3,3 4,3 4,3.9999999 4,11 4,12 3,12 1,12 0,12 0,11 0,3.9999999 z M10,2 L11,2 13,2 14,2 14,3 14,11 14,12 13,12 11,12 10,12 10,11 10,3 z M6,1.0000001 L6,11 8,11 8,1.0000001 z M5,0 L6,0 8,0 9,0 9,1.0000001 9,11 9,12 8,12 6,12 5,12 5,11 5,1.0000001 z" />
                </GeometryGroup>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- *********************************  PivotReportFieldIconControl Style  ********************************* -->
    <Style TargetType="igPivot:PivotReportFieldIconControl" BasedOn="{StaticResource {x:Type igPivot:PivotReportFieldIconControl}}">
        <Setter Property="Background" Value="{StaticResource MemberIconBackgroundBrush1}" />
        <Setter Property="BorderBrush" Value="{StaticResource MeasureIconBorderBrush}" />
    </Style>

  <!-- *********************************  PivotReportRowHeaderCellControl Style  ********************************* -->
  <Style TargetType="igPivot:PivotReportRowHeaderCellControl" BasedOn="{StaticResource {x:Type igPivot:PivotRowHeaderCellControl}}">
    <Setter Property="Padding" Value="8,4" />
    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igPivot:PivotReportRowHeaderCellControl">
          <Border BorderBrush="{TemplateBinding BorderBrush}">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal">
                </VisualState>
                <VisualState x:Name="MouseOver" />
              </VisualStateGroup>
              <VisualStateGroup x:Name="AllowHeaderSorting">
                <VisualState x:Name="EnabledHeaderSortIndicator">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HeaderSortBtn" Storyboard.TargetProperty="(UIElement.Visibility)">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="DisabledHeaderSortIndicator">
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="AllowRowHiding">
                <VisualState x:Name="EnabledHidingIndicator">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="columnHidingVisual" Storyboard.TargetProperty="(UIElement.Visibility)">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="DisabledHidingIndicator">
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="SummaryStates">
                <VisualState x:Name="SummaryValue">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="TotalText" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Collapsed</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="SummaryTotal">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="TotalText" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HeaderPresenterColumn" Storyboard.TargetProperty="Width">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <GridLength>Auto</GridLength>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="CompactLayout">
                <VisualState x:Name="OutlineLeftRightBottom">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="fill" Storyboard.TargetProperty="BorderThickness">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Thickness>1,0,1,1</Thickness>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="headerGrid" Storyboard.TargetProperty="VerticalAlignment">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <VerticalAlignment>Center</VerticalAlignment>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="OutlineRightBottom">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="fill" Storyboard.TargetProperty="BorderThickness">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Thickness>0,0,1,1</Thickness>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="OutlineLeftRightBottomAlignBottom">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="fill" Storyboard.TargetProperty="BorderThickness">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Thickness>1,0,1,1</Thickness>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="headerGrid" Storyboard.TargetProperty="VerticalAlignment">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <VerticalAlignment>Bottom</VerticalAlignment>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="OutlineRightBottomAlignBottom">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="fill" Storyboard.TargetProperty="BorderThickness">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Thickness>0,0,1,1</Thickness>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="headerGrid" Storyboard.TargetProperty="VerticalAlignment">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <VerticalAlignment>Bottom</VerticalAlignment>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="OutlineLeftRightBottomAlignTop">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="fill" Storyboard.TargetProperty="BorderThickness">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Thickness>1,0,1,1</Thickness>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="headerGrid" Storyboard.TargetProperty="VerticalAlignment">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <VerticalAlignment>Top</VerticalAlignment>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="OutlineRightBottomAlignTop">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="fill" Storyboard.TargetProperty="BorderThickness">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Thickness>0,0,1,1</Thickness>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="headerGrid" Storyboard.TargetProperty="VerticalAlignment">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <VerticalAlignment>Top</VerticalAlignment>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="OutlineAllAlignTop">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="fill" Storyboard.TargetProperty="BorderThickness">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Thickness>1</Thickness>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="fill" Storyboard.TargetProperty="Margin">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Thickness>0,-1,0,0</Thickness>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="headerGrid" Storyboard.TargetProperty="VerticalAlignment">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <VerticalAlignment>Top</VerticalAlignment>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="OutlineAll">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="fill" Storyboard.TargetProperty="BorderThickness">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Thickness>1</Thickness>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="fill" Storyboard.TargetProperty="Margin">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Thickness>0,-1,0,0</Thickness>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="NormalOutline">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="fill" Storyboard.TargetProperty="BorderThickness">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Thickness>0,0,1,1</Thickness>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="fill" Storyboard.TargetProperty="Margin">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Thickness>0</Thickness>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="headerGrid" Storyboard.TargetProperty="VerticalAlignment">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <VerticalAlignment>Center</VerticalAlignment>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="SelectedStates">
                <VisualState x:Name="NotSelected" />
                <VisualState x:Name="Selected" />
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid igPrim:XamlHelper.SnapsToDevicePixels="True">
              <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" x:Name="fill">
                <Grid VerticalAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}">
                  <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                  </Grid.ColumnDefinitions>
                  <Border x:Name="SelectedRect" Background="{StaticResource HeaderCellSelectedBackgroundBrush}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{StaticResource HeaderCellSelectedBorderBrush}" Visibility="Collapsed" Margin="0,0,-1,-1" Grid.ColumnSpan="2" />
                  <ToggleButton Grid.Column="0" Name="ExpansionIndicator" Width="15" Height="15" Margin="3" VerticalAlignment="Center" Padding="0" Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Cell.IsReportToggleVisible, Converter={StaticResource boolToVisibilityConverter}, Mode=OneWay}" IsChecked="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsExpanded, Mode=TwoWay}" Style="{TemplateBinding ExpansionIndicatorStyle}" />

                  <Grid x:Name="headerGrid" Grid.Column="1">
                    <Grid>
                      <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" x:Name="HeaderPresenterColumn" />
                        <ColumnDefinition Width="Auto" />
                      </Grid.ColumnDefinitions>
                      <ContentControl x:Name="HeaderPresenter" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" Margin="{TemplateBinding Padding}" HorizontalContentAlignment="Stretch" Foreground="{TemplateBinding Foreground}" />
                      <TextBlock Grid.Column="1" VerticalAlignment="Center" Visibility="Collapsed" x:Name="TotalText" Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Cell.Grid.StringSetting.CellTotal}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="5,0" Foreground="{TemplateBinding Foreground}" />
                    </Grid>
                    <Border x:Name="optionsPane" Background="{StaticResource HeaderCellOptionsPaneBackgroundBrush}" Margin="5,0,0,0" HorizontalAlignment="Right" Opacity="1" Visibility="Collapsed">
                      <Grid>
                        <Grid.ColumnDefinitions>
                          <ColumnDefinition Width="Auto" />
                          <ColumnDefinition Width="Auto" />
                          <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <ToggleButton x:Name="HeaderSortBtn" Grid.Column="0" Style="{StaticResource HeaderCellSortBtn}" IsThreeState="False" Margin="5" Visibility="Collapsed">
                          <ig:Commanding.Command>
                            <igPivot:XamPivotGridCommandSource CommandType="SortAxisMember" EventName="Click" />
                          </ig:Commanding.Command>
                        </ToggleButton>
                        <CheckBox x:Name="SortToggle" Grid.Column="2" Style="{StaticResource FilterCellSortBtn}" IsThreeState="True" Margin="5" Visibility="Collapsed">
                          <ig:Commanding.Command>
                            <igPivot:PivotColumnCommandSource CommandType="SortToggle" EventName="Click" />
                          </ig:Commanding.Command>
                        </CheckBox>
                        <Grid x:Name="columnHidingVisual" Background="{StaticResource TransparentBrush}" Width="20" Grid.Column="1" Cursor="Hand" Margin="0,5" Visibility="Collapsed">
                          <Path Data="M9.8222179,1.1322494E-06 L12.663995,1.1322494E-06 L8.6729612,5.0000014 L12.663995,10.000002 L9.8222179,10.000002 L5.8309941,4.9573879 z M3.9912238,0 L6.8330007,0 L2.8419673,5 L6.8330007,10 L3.9912238,10 L0,4.9573865 z" Fill="{StaticResource HeaderCellGlyphBrush}" VerticalAlignment="Center" Height="8" UseLayoutRounding="False" Width="12" HorizontalAlignment="Center" Stretch="Fill" />
                          <ig:Commanding.Command>
                            <igPivot:XamPivotGridCommandSource CommandType="HideAxis" EventName="MouseLeftButtonDown" />
                          </ig:Commanding.Command>
                        </Grid>
                      </Grid>
                    </Border>
                  </Grid>
                </Grid>
              </Border>
            </Grid>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- *********************************  PivotReportColumnHeaderCellControl Style  ********************************* -->
  <Style TargetType="igPivot:PivotReportColumnHeaderCellControl" BasedOn="{StaticResource {x:Type igPivot:PivotColumnHeaderCellControl}}">
    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
    <Setter Property="VerticalContentAlignment" Value="Center" />
    <Setter Property="MinHeight" Value="25" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igPivot:PivotReportColumnHeaderCellControl">
          <Border BorderBrush="{TemplateBinding BorderBrush}">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal">
                </VisualState>
                <VisualState x:Name="MouseOver" />
              </VisualStateGroup>
              <VisualStateGroup x:Name="SortedStates">
                <VisualState x:Name="NotSorted">
                </VisualState>
                <VisualState x:Name="Ascending">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="SortedAscending" Storyboard.TargetProperty="(UIElement.Visibility)">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Descending">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="SortedDescending" Storyboard.TargetProperty="(UIElement.Visibility)">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="SummaryStates">
                <VisualState x:Name="SummaryTotal">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HeaderPresenterColumn" Storyboard.TargetProperty="Width">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <GridLength>Auto</GridLength>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="AllowHeaderSorting">
                <VisualState x:Name="EnabledHeaderSortIndicator">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HeaderSortBtn" Storyboard.TargetProperty="(UIElement.Visibility)">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="DisabledHeaderSortIndicator">
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="AllowColumnHiding">
                <VisualState x:Name="EnabledHidingIndicator">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="columnHidingVisual" Storyboard.TargetProperty="(UIElement.Visibility)">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="DisabledHidingIndicator">
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="AllowColumnSorting">
                <VisualState x:Name="EnabledSortingIndicator">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="SortToggle" Storyboard.TargetProperty="(UIElement.Visibility)">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="DisabledSortingIndicator">
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="SelectedStates">
                <VisualState x:Name="NotSelected" />
                <VisualState x:Name="Selected" />
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid igPrim:XamlHelper.SnapsToDevicePixels="{TemplateBinding igPrim:XamlHelper.SnapsToDevicePixels}">
              <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" x:Name="fill">
                <Grid VerticalAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}">
                  <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                  </Grid.ColumnDefinitions>
                  <Border x:Name="SelectedRect" Background="{StaticResource HeaderCellSelectedBackgroundBrush}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{StaticResource HeaderCellSelectedBorderBrush}" Visibility="Collapsed" Margin="0,0,-1,-1" Grid.ColumnSpan="3" />
                  <ToggleButton Grid.Column="0" x:Name="ExpansionIndicator" Width="15" Height="15" Margin="3" VerticalAlignment="Center" Padding="0" Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Cell.IsReportToggleVisible, Converter={StaticResource boolToVisibilityConverter}, Mode=OneWay}" IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Style="{TemplateBinding ExpansionIndicatorStyle}" />
                  <Grid Grid.Column="1">
                    <Grid.ColumnDefinitions>
                      <ColumnDefinition Width="*" x:Name="HeaderPresenterColumn" />
                      <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <ContentControl x:Name="HeaderPresenter" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" VerticalContentAlignment="Center" HorizontalContentAlignment="Stretch" Margin="{TemplateBinding Padding}" Foreground="{TemplateBinding Foreground}" />
                    <TextBlock Grid.Column="1" VerticalAlignment="Center" Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Cell.IsTotalVisible, Converter={StaticResource boolToVisibilityConverter}, Mode=OneWay}" x:Name="TotalText" Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Cell.Grid.StringSetting.CellTotal}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="5,0" Foreground="{TemplateBinding Foreground}" />
                  </Grid>
                  <Grid Grid.Column="2" Margin="0,0,5,0">
                    <Path IsHitTestVisible="False" x:Name="SortedDescending" HorizontalAlignment="Center" VerticalAlignment="Center" Data="M 0 0 L 4 4 L 8 0 Z" Fill="{StaticResource HeaderCellGlyphBrush}" Visibility="Collapsed" />
                    <Path IsHitTestVisible="False" x:Name="SortedAscending" HorizontalAlignment="Center" VerticalAlignment="Center" Data="M0,4 L8,4 L4,0 z" Fill="{StaticResource HeaderCellGlyphBrush}" Visibility="Collapsed" />
                  </Grid>
                  <Border x:Name="optionsPane" Background="{StaticResource HeaderCellOptionsPaneBackgroundBrush}" Margin="5,0,0,0" Grid.ColumnSpan="4" HorizontalAlignment="Right" Visibility="Collapsed">
                    <Grid>
                      <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                      </Grid.ColumnDefinitions>
                      <ToggleButton x:Name="HeaderSortBtn" Grid.Column="0" Style="{StaticResource HeaderCellSortBtn}" IsThreeState="False" Margin="5" Visibility="Collapsed">
                        <ig:Commanding.Command>
                          <igPivot:XamPivotGridCommandSource CommandType="SortAxisMember" EventName="Click" />
                        </ig:Commanding.Command>
                      </ToggleButton>
                      <CheckBox x:Name="SortToggle" Grid.Column="2" Style="{StaticResource FilterCellSortBtn}" IsThreeState="True" Margin="5" Visibility="Collapsed">
                        <ig:Commanding.Command>
                          <igPivot:PivotColumnCommandSource CommandType="SortToggle" EventName="Click" />
                        </ig:Commanding.Command>
                      </CheckBox>
                      <Grid x:Name="columnHidingVisual" Background="{StaticResource TransparentBrush}" Width="20" Grid.Column="1" Cursor="Hand" Margin="0,5" Visibility="Collapsed">
                        <Path Data="M9.8222179,1.1322494E-06 L12.663995,1.1322494E-06 L8.6729612,5.0000014 L12.663995,10.000002 L9.8222179,10.000002 L5.8309941,4.9573879 z M3.9912238,0 L6.8330007,0 L2.8419673,5 L6.8330007,10 L3.9912238,10 L0,4.9573865 z" Fill="{StaticResource HeaderCellGlyphBrush}" VerticalAlignment="Center" Height="8" UseLayoutRounding="False" Width="12" HorizontalAlignment="Center" Stretch="Fill" />
                        <ig:Commanding.Command>
                          <igPivot:XamPivotGridCommandSource CommandType="HideAxis" EventName="MouseLeftButtonDown" />
                        </ig:Commanding.Command>
                      </Grid>
                    </Grid>
                  </Border>
                </Grid>
              </Border>
            </Grid>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- *********************************  PivotReportDataCellControl Style  ********************************* -->
  <Style TargetType="ig:PivotReportDataCellControl" BasedOn="{StaticResource {x:Type ig:PivotCellControl}}">
    <Setter Property="FontSize" Value="11" />
    <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
    <Setter Property="Background" Value="{StaticResource CellItemBackgroundBrush}" />
    <Setter Property="BorderBrush" Value="{StaticResource CellItemBorderBrush}" />
  </Style>

  <!-- *********************************  ReportMeasureFieldItemControl Style  ********************************* -->
    <Style TargetType="ig:PivotReportMeasureFieldItemControl"  BasedOn="{StaticResource ResourceKey={x:Type ig:PivotReportFieldItemControl}}">
    <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
    <Setter Property="Background" Value="{StaticResource FieldItemBackgroundBrush}" />
    <Setter Property="BorderBrush" Value="{StaticResource FieldItemBorderBrush}" />
    <Setter Property="Margin" Value="0,0,2,2" />
  </Style>

  <!-- *********************************  ReportHierarchyFieldItemControl Style  ********************************* -->
    <Style TargetType="ig:PivotReportHierarchyFieldItemControl" BasedOn="{StaticResource ResourceKey={x:Type ig:PivotReportFieldItemControl}}">
    <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
    <Setter Property="Background" Value="{StaticResource FieldItemBackgroundBrush}" />
    <Setter Property="BorderBrush" Value="{StaticResource FieldItemBorderBrush}" />
    <Setter Property="Margin" Value="0,0,2,0" />
  </Style>
</ResourceDictionary>