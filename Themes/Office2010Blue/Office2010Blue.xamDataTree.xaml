<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:igDT="http://schemas.infragistics.com/xaml"
                    xmlns:igPrimDT="http://schemas.infragistics.com/xaml/primitives"
                    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" mc:Ignorable="d">

  <!-- *********************************  RESOURCES  ********************************* -->
  <ResourceDictionary.MergedDictionaries> 
    <ResourceDictionary Source="Office2010Blue.Styles.xaml"/>
  </ResourceDictionary.MergedDictionaries>

  <!-- ********************************** BRUSHES **********************************-->
  <!--  Tree Brushes -->
  <SolidColorBrush x:Key="TreeBackgroundBrush" Color="{StaticResource Color_033}"/>
  <SolidColorBrush x:Key="TreeBorderBrush" Color="{StaticResource Color_033}" />
  <SolidColorBrush x:Key="TreeDefaultEditorBackgroundBrush" Color="{StaticResource Color_005}"/>

  <!--  TreeNode Brushes -->
  <SolidColorBrush x:Key="TreeNodeBackgroundBrush" Color="{StaticResource Color_033}"/>
  <SolidColorBrush x:Key="TreeNodeBorderBrush" Color="{StaticResource Color_033}"/>

  <SolidColorBrush x:Key="TreeNodeHoverBackgroundBrush" Color="{StaticResource Color_030}"/>
  <SolidColorBrush x:Key="TreeNodeHoverBorderBrush" Color="{StaticResource Color_027}"/>

  <LinearGradientBrush x:Key="TreeNodeSelectedBackgroundBrush" StartPoint="0,0 " EndPoint="0,1 ">
    <GradientStop Offset="1" Color="{StaticResource Color_015}"/>
    <GradientStop Color="{StaticResource Color_014}"/>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="TreeNodeSelectedBorderBrush" StartPoint="0.5,0" EndPoint="0.5,1">
    <GradientStop Offset="0" Color="{StaticResource Color_012}"/>
    <GradientStop Offset="1" Color="{StaticResource Color_013}"/>
  </LinearGradientBrush>

  <SolidColorBrush x:Key="TreeNodeActiveBackgroundBrush" Color="{StaticResource Color_033}"/>
  <LinearGradientBrush x:Key="TreeNodeActiveBorderBrush" StartPoint="0.5,0" EndPoint="0.5,1">
    <GradientStop Offset="0" Color="{StaticResource Color_012}"/>
    <GradientStop Offset="1" Color="{StaticResource Color_013}"/>
  </LinearGradientBrush>

  <SolidColorBrush x:Key="NodeLineBackgroundBrush" Color="{StaticResource Color_027}"/>
  <SolidColorBrush x:Key="NodeLineTerminatorBackgroundBrush" Color="{StaticResource Color_027}" />

  <LinearGradientBrush x:Key="DropIndicatorBackgroundBrush" StartPoint="0.5,0" EndPoint="0.5,1">
    <GradientStop Offset="1" Color="{StaticResource Color_014}"/>
    <GradientStop Color="{StaticResource Color_015}"/>
  </LinearGradientBrush>
  <SolidColorBrush x:Key="DropIndicatorBorderBrush" Color="{StaticResource Color_014}"/>

  <!-- ExpansionIndicator Brushes -->
  <SolidColorBrush x:Key="ExpansionIndicatorGlyphBackgroundBrush" Color="{StaticResource Color_005}"/>
  <SolidColorBrush x:Key="ExpansionIndicatorGlyphBorderBrush" Color="{StaticResource Color_026}"/>
  <SolidColorBrush x:Key="ExpansionIndicatorGlyphExpandedBackgroundBrush" Color="{StaticResource Color_024}"/>
  <SolidColorBrush x:Key="ExpansionIndicatorGlyphExpandedBorderBrush" Color="{StaticResource Color_026}"/>

  <!-- *********************************  Converters  ********************************* -->
  <igPrimDT:BoolToVisibilityConverter x:Key="BoolToVis"/>

  <!-- *********************************  ExpansionIndicator Style  ********************************* -->
  <Style x:Key="ExpansionIndicatorStyle" TargetType="igPrimDT:ExpansionIndicator">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igPrimDT:ExpansionIndicator">
          <Grid>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="MouseOver"/>
                <VisualState x:Name="Selected"/>
                <VisualState x:Name="Disabled">
                  <Storyboard>
                    <DoubleAnimation Duration="0" To="0.35" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="ExpansionIndicator" d:IsOptimized="True"/>
                    <DoubleAnimation Duration="0" To="0.35" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="contentPresenter" d:IsOptimized="True"/>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="ExpansionStates">
                <VisualState x:Name="Expanded">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00" Storyboard.TargetName="CollapsedGlyph" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00" >
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Collapsed</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00" Storyboard.TargetName="ExpandedGlyph" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00" >
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Collapsed"/>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="15"/>
              <ColumnDefinition Width="5"/>
              <ColumnDefinition/>
            </Grid.ColumnDefinitions>
            <Grid x:Name="ExpansionIndicator" Grid.ColumnSpan="2" Grid.RowSpan="2">
              <Rectangle Fill="{StaticResource TransparentBrush}"/>
              <Grid x:Name="CollapsedGlyph" Width="5" Height="9" Margin="-1,0,0,0">
                <Path Width="5" Height="9"
                      Data="M 0,0 C0,0 0,9 0,9 0,9 1,9 1,9 1,9 1,8 1,8 1,8 2,8 2,8 2,8 2,7 2,7 2,7 3,7 3,7 3,7 3,6 3,6 3,6 4,6 4,6 4,6 4,5 4,5 4,5 5,5 5,5 5,5 5,4 5,4 5,4 4,4 4,4 4,4 4,3 4,3 4,3 3,3 3,3 3,3 3,2 3,2 3,2 2,2 2,2 2,2 2,1 2,1 2,1 1,1 1,1 1,1 1,0 1,0 1,0 0,0 0,0 z"
                      Stretch="Fill"
                      Fill="{StaticResource ExpansionIndicatorGlyphBorderBrush}"/>
                <Path Width="3" Height="5"
                      Data="M 1,2 C1,2 1,7 1,7 1,7 2,7 2,7 2,7 2,6 2,6 2,6 3,6 3,6 3,6 3,5 3,5 3,5 4,5 4,5 4,5 4,4 4,4 4,4 3,4 3,4 3,4 3,3 3,3 3,3 2,3 2,3 2,3 2,2 2,2 2,2 1,2 1,2 z"
                      Fill="{StaticResource ExpansionIndicatorGlyphBackgroundBrush}"
                      Stretch="Fill"/>
              </Grid>
              <Grid x:Name="ExpandedGlyph" Width="6" Height="6" Margin="0,2,0,0" Visibility="Collapsed" >
                <Path Data="M4.9999986,0 L5.9999986,0 L5.9999986,1.0000001 C6,1.0000001 6,6 6,6 C6,6 3.5280759,6 2.0603712,6 L2,6 L0,6.0000005 L0,5.0000005 L0.99999976,5.0000005 C0.99999976,4.5 0.99999976,4 0.99999976,4 C0.99999976,4 1.9999998,4 1.9999998,4 C1.9999998,4 1.9999998,3 1.9999998,3 C1.9999998,3 2.9999998,3 2.9999998,3 C2.9999998,3 2.9999998,2 2.9999998,2 C2.9999998,2 3.9999998,2 3.9999998,2 C3.9999998,2 3.9999998,1.0000001 3.9999998,1.0000001 C3.9999998,1.0000001 4.4394531,1.0000001 4.9063716,1.0000001 L4.9999986,1.0000001 z" Fill="{StaticResource ExpansionIndicatorGlyphExpandedBackgroundBrush}" Stretch="Fill" UseLayoutRounding="False"/>
                <Path Width="3" Height="3"
                      Data="M 1,3 C1,3 1,4 1,4 1,4 4,4 4,4 4,4 4,3 4,3 4,3 4,2 4,2 4,2 4,1 4,1 4,1 3,1 3,1 3,1 3,2 3,2 3,2 2,2 2,2 2,2 2,3 2,3 2,3 1,3 1,3 z"
                      Fill="{StaticResource ExpansionIndicatorGlyphExpandedBorderBrush}"
                      Stretch="Fill"/>
              </Grid>
            </Grid>
            <ContentPresenter x:Name="contentPresenter" Grid.Column="2" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- ********************************** DefaultEditor Style **********************************-->
  <Style x:Key="XamDataTreeDefaultEditorStyle" TargetType="TextBox" BasedOn="{StaticResource TextBoxStyle}">
    <Setter Property="Foreground" Value="{StaticResource ThemeForegroundBrush}" />
    <Setter Property="Background" Value="{StaticResource TreeDefaultEditorBackgroundBrush}" />
  </Style>

  <!-- ********************************** XamDataTree Style **********************************-->
  <Style x:Key="XamDataTreeStyle" TargetType="igDT:XamDataTree">
    <Setter Property="DefaultEditorStyle" Value="{StaticResource XamDataTreeDefaultEditorStyle}" />
    <Setter Property="Background" Value="{StaticResource TreeBackgroundBrush}"/>
    <Setter Property="BorderBrush" Value="{StaticResource TreeBorderBrush}"/>
    <Setter Property="BorderThickness" Value="1"/>
    <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igDT:XamDataTree">
          <Border x:Name="Bd" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
            <Grid>
              <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition Height="Auto"/>
              </Grid.RowDefinitions>
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
              </Grid.ColumnDefinitions>
              <igPrimDT:NodesPanel x:Name="NodesPanel" Background="{StaticResource TransparentBrush}"/>
              <Rectangle Grid.Column="1" Fill="{StaticResource ScrollViewerCornerBackgroundBrush}" Grid.Row="1"/>
              <ScrollBar x:Name="VerticalScrollBar" Width="20" Grid.Row="0" Grid.Column="1" Style="{StaticResource ScrollBarStyle}"/>
              <ScrollBar x:Name="HorizontalScrollBar"  Height="20" Grid.Row="2" Style="{StaticResource ScrollBarStyle}"/>
            </Grid>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="igDT:XamDataTree" BasedOn="{StaticResource XamDataTreeStyle}"/>

  <!-- ********************************** ActiveNodeIndicator Style **********************************-->
  <Style x:Key="ActiveNodeIndicatorStyle" TargetType="igPrimDT:ActiveNodeIndicator">
    <Setter Property="Background" Value="{StaticResource TreeNodeActiveBackgroundBrush}"/>
    <Setter Property="BorderBrush" Value="{StaticResource TreeNodeActiveBorderBrush}"/>
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igPrimDT:ActiveNodeIndicator">
          <Rectangle Stroke="{TemplateBinding BorderBrush}" StrokeThickness="{TemplateBinding BorderThickness}" RadiusX="1" RadiusY="1"/>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="igPrimDT:ActiveNodeIndicator" BasedOn="{StaticResource ActiveNodeIndicatorStyle}"/>

  <!-- ********************************** XamDataTreeNodeControl Style **********************************-->
  <Style x:Key="XamDataTreeNodeControlStyle" TargetType="igDT:XamDataTreeNodeControl">
    <Setter Property="Background" Value="{StaticResource TreeNodeBackgroundBrush}"/>
    <Setter Property="BorderBrush" Value="{StaticResource TreeNodeBorderBrush}"/>
    <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}"/>
    <Setter Property="IsTabStop" Value="False"/>
    <Setter Property="BorderThickness" Value="1"/>
    <Setter Property="HorizontalContentAlignment" Value="Left"/>
    <Setter Property="VerticalContentAlignment" Value="Center"/>
    <Setter Property="Padding" Value="5,3"/>
    <Setter Property="CheckBoxStyle" Value="{StaticResource CheckBoxStyle}"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igDT:XamDataTreeNodeControl">
          <Grid Background="{StaticResource TransparentBrush}">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal"/>
                <VisualState x:Name="MouseOver">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00" Storyboard.TargetName="hoverBorder" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00" >
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Disabled">
                  <Storyboard>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="main" Storyboard.TargetProperty="Opacity">
                      <EasingDoubleKeyFrame KeyTime="0" Value="0.35"/>
                    </DoubleAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="ExpandedIconStates">
                <VisualState x:Name="HideIcons"/>
                <VisualState x:Name="ShowCollapsedIcon">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00" Storyboard.TargetName="CollapsedIcon" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00" >
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="ShowExpandedIcon">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00" Storyboard.TargetName="ExpandedIcon" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00" >
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="ActiveStates">
                <VisualState x:Name="Inactive"/>
                <VisualState x:Name="Active">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00" Storyboard.TargetName="ActiveBorder" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00" >
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="SelectedStates">
                <VisualState x:Name="NotSelected"/>
                <VisualState x:Name="Selected">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00" Storyboard.TargetName="SelectedBorder" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00" >
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="EndLines">
                <VisualState x:Name="None" >
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00" Storyboard.TargetName="LineTerminator" Storyboard.TargetProperty="NodeLineEnd"  >
                      <DiscreteObjectKeyFrame KeyTime="00:00:00" >
                        <DiscreteObjectKeyFrame.Value>
                          <igDT:NodeLineTemination>None</igDT:NodeLineTemination>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="TShape">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00" Storyboard.TargetName="LineTerminator" Storyboard.TargetProperty="NodeLineEnd">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00" >
                        <DiscreteObjectKeyFrame.Value>
                          <igDT:NodeLineTemination>TShape</igDT:NodeLineTemination>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="LShape">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00" Storyboard.TargetName="LineTerminator" Storyboard.TargetProperty="NodeLineEnd">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00" >
                        <DiscreteObjectKeyFrame.Value>
                          <igDT:NodeLineTemination>LShape</igDT:NodeLineTemination>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="DropStates">
                <VisualState x:Name="NoDrop" />
                <VisualState x:Name="DropOnto" >
                  <Storyboard>
                    <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="DropOntoElem" Storyboard.TargetProperty="Opacity">
                      <EasingDoubleKeyFrame KeyTime="00:00:00.15" Value="1"/>
                    </DoubleAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="DropBefore">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="DropBeforeElem" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="DropAfter">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="DropAfterElem" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid x:Name="main">
              <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Width="20" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition />
                <ColumnDefinition Width="auto" />
                <ColumnDefinition />
              </Grid.ColumnDefinitions>
              <Border x:Name="Bd" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="1"/>
              <Border x:Name="hoverBorder" Background="{StaticResource TreeNodeHoverBackgroundBrush}" BorderBrush="{StaticResource TreeNodeHoverBorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Visibility="Collapsed" Grid.Column="5" CornerRadius="1"/>
              <Border x:Name="SelectedBorder" Background="{StaticResource TreeNodeSelectedBackgroundBrush}" BorderBrush="{StaticResource TreeNodeSelectedBorderBrush}" CornerRadius="1" BorderThickness="{TemplateBinding BorderThickness}" Visibility="Collapsed" Grid.Column="5" IsHitTestVisible="False"/>
              <igPrimDT:NodeLineControl Node="{Binding Node}" x:Name="lineControl" />
              <igPrimDT:NodeLineTerminator Grid.Column="1" x:Name="LineTerminator" Node="{Binding Node, RelativeSource={RelativeSource TemplatedParent}}" />
              <igPrimDT:ExpansionIndicator x:Name="ExpansionIndicator" IsTabStop="False" Grid.Column="1" Visibility="{Binding Node.HasChildren, Converter={StaticResource BoolToVis}, RelativeSource={RelativeSource TemplatedParent}}" IsExpanded="{Binding Node.IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource ExpansionIndicatorStyle}" />
              <CheckBox x:Name="Checkbox"
                        Grid.Column="2"
                        IsThreeState="{Binding Node.NodeLayout.CheckBoxSettings.IsCheckBoxThreeStateResolved}"
                        IsTabStop="False"
                        Visibility="{Binding Node.NodeLayout.CheckBoxSettings.CheckBoxVisibilityResolved}"
                        IsChecked="{Binding Node.IsChecked, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                        VerticalAlignment="Center" HorizontalAlignment="Center"
                        Style="{StaticResource CheckBoxStyle}"/>
              <ContentControl x:Name="ExpandedIcon" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Visibility="Collapsed" Grid.Column="4" IsTabStop="False"/>
              <ContentControl x:Name="CollapsedIcon" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Visibility="Collapsed" Grid.Column="4" IsTabStop="False"/>

              <igPrimDT:ActiveNodeIndicator x:Name="ActiveBorder" Grid.Column="5" IsTabStop="false" Margin="0" Visibility="Collapsed" />
              <ContentPresenter x:Name="ContentPresenter" Grid.Column="5" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"/>
            </Grid>
            <Grid x:Name="DropBeforeElem" Visibility="Collapsed" VerticalAlignment="Top" RenderTransformOrigin="0.5,0.5">
              <Grid.RenderTransform>
                <TransformGroup>
                  <ScaleTransform/>
                  <SkewTransform/>
                  <RotateTransform/>
                  <TranslateTransform Y="-3"/>
                </TransformGroup>
              </Grid.RenderTransform>
              <Rectangle x:Name="bar" Fill="{StaticResource DropIndicatorBackgroundBrush}" Height="1" StrokeThickness="0"/>
              <Path x:Name="arrowLeft"
                Height="7"
                Width="6"
                Stretch="Fill"
                Data="M 166,184 C166,184 166,194 166,194 166,194 171,189 171,189 171,189 166,184 166,184 z"
                Fill="{StaticResource DropIndicatorBackgroundBrush}" HorizontalAlignment="Left" />
              <Path x:Name="arrowRight"
                HorizontalAlignment="Right"
                Height="7"
                Width="6"
                Stretch="Fill"
                Data="M 178,194 C178,194 178,184 178,184 178,184 173,189 173,189 173,189 178,194 178,194 z"
                Fill="{StaticResource DropIndicatorBackgroundBrush}" />
            </Grid>
            <Grid x:Name="DropAfterElem" Visibility="Collapsed" VerticalAlignment="Bottom" RenderTransformOrigin="0.5,0.5">
              <Grid.RenderTransform>
                <TransformGroup>
                  <ScaleTransform/>
                  <SkewTransform/>
                  <RotateTransform/>
                  <TranslateTransform Y="4"/>
                </TransformGroup>
              </Grid.RenderTransform>
              <Rectangle x:Name="bar1" Fill="{StaticResource DropIndicatorBackgroundBrush}" Height="1" StrokeThickness="0"/>
              <Path x:Name="arrowLeft1"
                Height="7"
                Width="6"
                Stretch="Fill"
                Data="M 166,184 C166,184 166,194 166,194 166,194 171,189 171,189 171,189 166,184 166,184 z"
                Fill="{StaticResource DropIndicatorBackgroundBrush}" HorizontalAlignment="Left" />
              <Path x:Name="arrowRight1"
                HorizontalAlignment="Right"
                Height="7"
                Width="6"
                Stretch="Fill"
                Data="M 178,194 C178,194 178,184 178,184 178,184 173,189 173,189 173,189 178,194 178,194 z"
                Fill="{StaticResource DropIndicatorBackgroundBrush}" />
            </Grid>
            <Rectangle x:Name="DropOntoElem" IsHitTestVisible="False" Opacity="0" Stroke="{StaticResource DropIndicatorBorderBrush}" StrokeThickness="2" RadiusX="2" RadiusY="2"/>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="igDT:XamDataTreeNodeControl" BasedOn="{StaticResource XamDataTreeNodeControlStyle}"/>

  <!-- ********************************** NodeLineControl Style **********************************-->
  <Style x:Key="NodeLineControlStyle" TargetType="igPrimDT:NodeLineControl">
    <Setter Property="IsTabStop" Value="False"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igPrimDT:NodeLineControl">
          <igPrimDT:NodeLinePanel x:Name="StackPanel" Node="{Binding Node, RelativeSource={RelativeSource TemplatedParent}}" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="VerticalLine">
      <Setter.Value>
        <DataTemplate>
          <Grid>
            <Rectangle VerticalAlignment="Stretch" Fill="{StaticResource NodeLineBackgroundBrush}" Width="1" />
          </Grid>
        </DataTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="HorizontalLine">
      <Setter.Value>
        <DataTemplate>
          <Grid  VerticalAlignment="Center">
            <Rectangle Fill="{StaticResource NodeLineBackgroundBrush}" Height="1"  />
          </Grid>
        </DataTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="igPrimDT:NodeLineControl" BasedOn="{StaticResource NodeLineControlStyle}"/>

  <!-- ********************************** NodeLineTerminator Style **********************************-->
  <Style x:Key="NodeLineTerminatorStyle" TargetType="igPrimDT:NodeLineTerminator">
    <Setter Property="IsTabStop" Value="False"/>
    <Setter Property="BorderBrush" Value="{StaticResource NodeLineTerminatorBackgroundBrush}"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igPrimDT:NodeLineTerminator">
          <Grid>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="Lines">
                <VisualState x:Name="None"/>
                <VisualState x:Name="T">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00" Storyboard.TargetName="TShape" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00" >
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00" Storyboard.TargetName="LShape" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00" >
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Collapsed</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="L">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00" Storyboard.TargetName="LShape" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00" >
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00" Storyboard.TargetName="TShape" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00" >
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Collapsed</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid x:Name="LShape" Visibility="Collapsed">
              <Grid.RowDefinitions>
                <RowDefinition Height="0.5*"/>
                <RowDefinition Height="0.5*"/>
              </Grid.RowDefinitions>
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="0.5*"/>
                <ColumnDefinition Width="0.5*"/>
              </Grid.ColumnDefinitions>
              <Rectangle Width="1" Fill="{TemplateBinding BorderBrush}" HorizontalAlignment="Left" Grid.Column="1"/>
              <Rectangle VerticalAlignment="Top" Height="1" Fill="{TemplateBinding BorderBrush}" Grid.Row="1" Grid.Column="1"/>
            </Grid>
            <Grid x:Name="TShape" Visibility="Collapsed">
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="0.5*"/>
                <ColumnDefinition Width="0.5*"/>
              </Grid.ColumnDefinitions>
              <Rectangle Width="1" Fill="{TemplateBinding BorderBrush}" HorizontalAlignment="Left" Grid.Column="1"/>
              <Rectangle VerticalAlignment="Center" Height="1" Fill="{TemplateBinding BorderBrush}" Grid.Column="1"/>
            </Grid>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="igPrimDT:NodeLineTerminator" BasedOn="{StaticResource NodeLineTerminatorStyle}"/>

</ResourceDictionary>