<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
                    xmlns:local="http://schemas.infragistics.com/xaml" 
                    xmlns:ig="http://schemas.infragistics.com/xaml" 
                    xmlns:igBase="http://schemas.infragistics.com/xaml" 
                    xmlns:igPrim="http://schemas.infragistics.com/xaml/primitives" 
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
                    xmlns:PresentationOptions="http://schemas.microsoft.com/winfx/2006/xaml/presentation/options" 
                    xmlns:sys="clr-namespace:System;assembly=mscorlib" 
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
                    xmlns:d="http://schemas.microsoft.com/expression/blend/2008" mc:Ignorable="PresentationOptions d">

    <!-- *********************************  RESOURCES  ********************************* -->
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="Office2010Blue.Theme.Colors.xaml" />
    </ResourceDictionary.MergedDictionaries>
    
  <igPrim:SystemResourceProvider x:Key="SRP" />

    <!-- ********************************** BRUSHES **********************************-->
  <SolidColorBrush x:Key="ForegroundBrush" Color="{StaticResource Color_001}" />
  <SolidColorBrush x:Key="TransparentBrush" Color="{StaticResource Color_033}" />
  <SolidColorBrush x:Key="DisabledBackgroundBrush" Color="{StaticResource Color_005}" />

    <!--  Button Brushes -->
    <LinearGradientBrush x:Key="ButtonBackgroundBrush" StartPoint="0.5,0" EndPoint="0.5,1">
    <GradientStop Color="{StaticResource Color_030}" Offset="1" />
    <GradientStop Color="{StaticResource Color_032}" />
    </LinearGradientBrush>
  <SolidColorBrush x:Key="ButtonBorderBrush" Color="{StaticResource Color_027}" />
  <LinearGradientBrush x:Key="ButtonArrowHoverBackgroundBrush" StartPoint="0,0" EndPoint="0,1">
    <GradientStop Offset="0" Color="{StaticResource Color_018}" />
    <GradientStop Offset="0.23" Color="{StaticResource Color_017}" />
    <GradientStop Offset="0.75" Color="{StaticResource Color_017}" />
    <GradientStop Offset="1" Color="{StaticResource Color_019}" />
    </LinearGradientBrush>
  <SolidColorBrush x:Key="ButtonHoverHighlightBorderBrush" Color="{StaticResource Color_019}" />
  <LinearGradientBrush x:Key="ButtonArrowHoverBorderBrush" StartPoint="0.5,0" EndPoint="0.5,1">
    <GradientStop Offset="1" Color="{StaticResource Color_014}" />
    <GradientStop Color="{StaticResource Color_015}" />
    </LinearGradientBrush>
  <LinearGradientBrush x:Key="ButtonArrowPressedBackgroundBrush" StartPoint="0,0 " EndPoint="0,1 ">
    <GradientStop Offset="1" Color="{StaticResource Color_017}" />
    <GradientStop Color="{StaticResource Color_016}" />
    </LinearGradientBrush>
  <LinearGradientBrush x:Key="ButtonArrowPressedBorderBrush" StartPoint="0.5,0" EndPoint="0.5,1">
    <GradientStop Offset="0" Color="{StaticResource Color_012}" />
    <GradientStop Offset="1" Color="{StaticResource Color_013}" />
    </LinearGradientBrush>

    <!-- DateTimeInput Brushes -->
  <SolidColorBrush x:Key="InputBackgroundBrush" Color="{StaticResource Color_005}" />
  <SolidColorBrush x:Key="InputBorderBrush" Color="{StaticResource Color_027}" />
  <SolidColorBrush x:Key="InputHoverBorderBrush" Color="{StaticResource Color_014}" />
  <SolidColorBrush x:Key="InputFocusedBorderBrush" Color="{StaticResource Color_012}" />

    <!--  Glyph Brushes -->
  <SolidColorBrush x:Key="GlyphBackgroundBrush" Color="{StaticResource Color_025}" />

    <!-- *********************************  Value Converters  ********************************* -->
  <igPrim:ValueConverterGroup x:Key="HorizontalToTextAlignmentConverter">
       
   <!-- Left to Left -->
      <igPrim:FixedValueConverter>
         <igPrim:FixedValueConverter.SourceValue>
        <HorizontalAlignment>
          Left
            </HorizontalAlignment>
         </igPrim:FixedValueConverter.SourceValue>
         <igPrim:FixedValueConverter.DestinationValue>
        <TextAlignment>
          Left
            </TextAlignment>
         </igPrim:FixedValueConverter.DestinationValue>
      </igPrim:FixedValueConverter>
       
   <!-- Center to Center -->
      <igPrim:FixedValueConverter>
         <igPrim:FixedValueConverter.SourceValue>
        <HorizontalAlignment>
          Center
            </HorizontalAlignment>
         </igPrim:FixedValueConverter.SourceValue>
         <igPrim:FixedValueConverter.DestinationValue>
        <TextAlignment>
          Center
            </TextAlignment>
         </igPrim:FixedValueConverter.DestinationValue>
      </igPrim:FixedValueConverter>
       
   <!-- Right to Right -->
      <igPrim:FixedValueConverter>
         <igPrim:FixedValueConverter.SourceValue>
        <HorizontalAlignment>
          Right
            </HorizontalAlignment>
         </igPrim:FixedValueConverter.SourceValue>
         <igPrim:FixedValueConverter.DestinationValue>
        <TextAlignment>
          Right
            </TextAlignment>
         </igPrim:FixedValueConverter.DestinationValue>
      </igPrim:FixedValueConverter>
       
   <!-- Stretch to Left -->
      <igPrim:FixedValueConverter>
         <igPrim:FixedValueConverter.SourceValue>
        <HorizontalAlignment>
          Stretch
            </HorizontalAlignment>
         </igPrim:FixedValueConverter.SourceValue>
         <igPrim:FixedValueConverter.DestinationValue>
        <TextAlignment>
          Left
            </TextAlignment>
         </igPrim:FixedValueConverter.DestinationValue>
      </igPrim:FixedValueConverter>
   </igPrim:ValueConverterGroup>
    
   <igPrim:ValueConverterGroup x:Key="complementConverter">
       
   <!-- True to False -->
      <igPrim:FixedValueConverter>
         <igPrim:FixedValueConverter.SourceValue>
        <sys:Boolean>
          True
            </sys:Boolean>
         </igPrim:FixedValueConverter.SourceValue>
         <igPrim:FixedValueConverter.DestinationValue>
        <sys:Boolean>
          False
            </sys:Boolean>
         </igPrim:FixedValueConverter.DestinationValue>
      </igPrim:FixedValueConverter>
       
   <!-- False to True -->
      <igPrim:FixedValueConverter>
         <igPrim:FixedValueConverter.SourceValue>
        <sys:Boolean>
          False
            </sys:Boolean>
         </igPrim:FixedValueConverter.SourceValue>
         <igPrim:FixedValueConverter.DestinationValue>
        <sys:Boolean>
          True
            </sys:Boolean>
         </igPrim:FixedValueConverter.DestinationValue>
      </igPrim:FixedValueConverter>
   </igPrim:ValueConverterGroup>
    
   <!-- dims the glyph when the control is disabled -->
   <igPrim:FixedValueConverter x:Key="enabledToOpacity">
      <igPrim:FixedValueConverter.SourceValue>
      <sys:Boolean>
        False
         </sys:Boolean>
      </igPrim:FixedValueConverter.SourceValue>
      <igPrim:FixedValueConverter.DestinationValue>
         <sys:Double>25e-2</sys:Double>
      </igPrim:FixedValueConverter.DestinationValue>
   </igPrim:FixedValueConverter>
   
    <!-- *********************************  Calendar Style  ********************************* -->
   <Style x:Key="XamCalendar" TargetType="igBase:XamCalendar">
   	<Setter Property="ResourceProvider">
   		<Setter.Value>
        <igBase:CalendarResourceProvider ResourceSet="Office2010Blue" />
   		</Setter.Value>
   	</Setter>
   </Style>
  <Style TargetType="igBase:XamCalendar" BasedOn="{StaticResource XamCalendar}" />
 
   <!-- *********************************  Glyph Templates  ********************************* -->
   <DataTemplate x:Key="IncreaseGlyphKey">
    <Path Width="5" Height="3" Data="M2,0 L3,0 L3,0.99999994 L4,0.99999994 L4,2 L5,2 L5,3 L4,3 L1,3 L0,3 L0,2 L1,2 L1,0.99999994 L2,0.99999994 z" Fill="{StaticResource GlyphBackgroundBrush}" />
   </DataTemplate>
   <DataTemplate x:Key="DecreaseGlyphKey">
    <Path Width="5" Height="3" Data="M0,0 L1,0 L4,0 L5,0 L5,1 L4,1 L4,2 L3,2 L3,3 L2,3 L2,2 L1,2 L1,1 L0,1 z" Fill="{StaticResource GlyphBackgroundBrush}" />
   </DataTemplate>
   
   <!-- *********************************  RepeatButton Template  ********************************* -->
   <ControlTemplate x:Key="RepeatButtonTemplate" TargetType="RepeatButton">
      <Grid>
         <VisualStateManager.VisualStateGroups>
            <VisualStateGroup x:Name="CommonStates">
          <VisualState x:Name="Normal" />
               <VisualState x:Name="MouseOver">
                  <Storyboard>
                     <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BaseShape" Storyboard.TargetProperty="Fill">
                <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonArrowHoverBackgroundBrush}" />
                     </ObjectAnimationUsingKeyFrames>
                     <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BaseShape" Storyboard.TargetProperty="Stroke">
                <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonArrowHoverBorderBrush}" />
                     </ObjectAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ButtonHighlight" Storyboard.TargetProperty="Opacity">
                <SplineDoubleKeyFrame KeyTime="0" Value="1" />
                    </DoubleAnimationUsingKeyFrames>					 
                  </Storyboard>
               </VisualState>
               <VisualState x:Name="Pressed">
                  <Storyboard>
                     <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BaseShape" Storyboard.TargetProperty="Fill">
                <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonArrowPressedBackgroundBrush}" />
                     </ObjectAnimationUsingKeyFrames>
                     <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BaseShape" Storyboard.TargetProperty="Stroke">
                <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonArrowPressedBorderBrush}" />
                     </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
               </VisualState>
                <VisualState x:Name="Disabled">
                    <Storyboard>
                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="DisabledVisualElement" Storyboard.TargetProperty="Opacity">
                <SplineDoubleKeyFrame KeyTime="0" Value=".55" />
                        </DoubleAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>
            </VisualStateGroup>
            <VisualStateGroup x:Name="FocusStates">
          <VisualState x:Name="Focused" />
          <VisualState x:Name="Unfocused" />
            </VisualStateGroup>
         </VisualStateManager.VisualStateGroups>
      <Rectangle x:Name="BaseShape" Fill="{StaticResource ButtonBackgroundBrush}" Stroke="{StaticResource ButtonBorderBrush}" StrokeThickness="1" />
      <Rectangle x:Name="ButtonHighlight" Margin="1" Stroke="{StaticResource ButtonHoverHighlightBorderBrush}" StrokeThickness="1" Grid.ColumnSpan="2" Opacity="0" />
      <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="{TemplateBinding Padding}" />
      <Rectangle x:Name="DisabledVisualElement" Fill="{StaticResource DisabledBackgroundBrush}" IsHitTestVisible="false" Opacity="0" />
      </Grid>
   </ControlTemplate>
   
   <!-- *********************************  SpinButton Style  ********************************* -->
   <Style x:Key="SpinButtonStyle" TargetType="RepeatButton">
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="Padding" Value="3,1" />
    <Setter Property="IsTabStop" Value="False" />
    <Setter Property="igPrim:XamlHelper.Focusable" Value="False" />
    <Setter Property="Template" Value="{StaticResource RepeatButtonTemplate}" />
   </Style>

    <!-- *********************************  InputTextBox Style  ********************************* -->
    <Style x:Key="InputTextBoxStyle" TargetType="TextBox">
    <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
    <Setter Property="Padding" Value="2" />
    <Setter Property="Background" Value="{StaticResource TransparentBrush}" />
    <Setter Property="BorderBrush" Value="{StaticResource TransparentBrush}" />
    <Setter Property="BorderThickness" Value="0" />
   </Style>
 
    <!-- *********************************  DropDownButton Style  ********************************* -->
    <Style x:Key="DropDownButtonStyle" TargetType="ToggleButton">
    <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
    <Setter Property="Background" Value="{StaticResource ButtonBackgroundBrush}" />
    <Setter Property="BorderBrush" Value="{StaticResource ButtonBorderBrush}" />
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="Padding" Value="2" />
    <Setter Property="Cursor" Value="Hand" />
      <Setter Property="Template">
         <Setter.Value>
            <ControlTemplate TargetType="ToggleButton">
               <Grid>
                  <VisualStateManager.VisualStateGroups>
                     <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BaseShape" Storyboard.TargetProperty="Background">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonArrowHoverBackgroundBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BaseShape" Storyboard.TargetProperty="BorderBrush">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonArrowHoverBorderBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ButtonHighlight" Storyboard.TargetProperty="Opacity">
                      <SplineDoubleKeyFrame KeyTime="0" Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BaseShape" Storyboard.TargetProperty="Background">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonArrowPressedBackgroundBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BaseShape" Storyboard.TargetProperty="BorderBrush">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonArrowPressedBorderBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="DisabledVisualElement" Storyboard.TargetProperty="Opacity">
                      <SplineDoubleKeyFrame KeyTime="0" Value=".55" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                     </VisualStateGroup>
                     <VisualStateGroup x:Name="CheckStates">
                                <VisualState x:Name="Checked">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="checkedBd">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                <VisualState x:Name="Unchecked" />
                     </VisualStateGroup>
                     <VisualStateGroup x:Name="FocusStates">
                <VisualState x:Name="Focused" />
                <VisualState x:Name="Unfocused" />
                     </VisualStateGroup>
                  </VisualStateManager.VisualStateGroups>
                  <Border x:Name="BaseShape" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" />
            <Rectangle x:Name="ButtonHighlight" Margin="1" RadiusX="2" RadiusY="2" Stroke="{StaticResource ButtonHoverHighlightBorderBrush}" StrokeThickness="1" Grid.ColumnSpan="2" Opacity="0" />
            <Border x:Name="checkedBd" BorderBrush="{StaticResource ButtonArrowPressedBorderBrush}" BorderThickness="1" Background="{StaticResource ButtonArrowPressedBackgroundBrush}" Visibility="Collapsed" />
            <Path x:Name="BtnArrowForeground" Stretch="Fill" Height="5" Width="9" Data="M0,0 L1,0 L8,0 L9,0 L9,1 L8,1 L8,2 L7,2 L7,3 L6,3 L6,4 L5,4 L5,5 L4,5 L4,4 L3,4 L3,3 L2,3 L2,2 L1,2 L1,1 L0,1 z" Fill="{StaticResource GlyphBackgroundBrush}" />
            <Rectangle x:Name="DisabledVisualElement" Fill="{StaticResource DisabledBackgroundBrush}" IsHitTestVisible="false" Opacity="0" />
               </Grid>
            </ControlTemplate>
         </Setter.Value>
      </Setter>
   </Style>
 
    <!-- *********************************  XamDateTimeInput Style  ********************************* -->
    <Style x:Key="XamDateTimeInputStyle" TargetType="local:XamDateTimeInput">
    <Setter Property="Background" Value="{StaticResource InputBackgroundBrush}" />
    <Setter Property="BorderBrush" Value="{StaticResource InputBorderBrush}" />
    <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
    <Setter Property="igPrim:XamlHelper.SnapsToDevicePixels" Value="True" />
    <Setter Property="SpinButtonStyle" Value="{StaticResource SpinButtonStyle}" />
    <Setter Property="DropDownButtonStyle" Value="{StaticResource DropDownButtonStyle}" />
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="MinHeight" Value="22" />
    <Setter Property="HorizontalContentAlignment" Value="Left" />
      <Setter Property="Template">
         <Setter.Value>
            <ControlTemplate TargetType="local:XamDateTimeInput">
               <igPrim:ValidationDecorator x:Name="MainBorder">
                  <VisualStateManager.VisualStateGroups>
                     <VisualStateGroup x:Name="FocusStates">
                <VisualState x:Name="FocusedDropDown" />
                <VisualState x:Name="Unfocused" />
                        <VisualState x:Name="Focused">
                           <Storyboard>
                              <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="FocusBorder">
                      <EasingDoubleKeyFrame KeyTime="0" Value="1" />
                              </DoubleAnimationUsingKeyFrames>
                           </Storyboard>
                        </VisualState>
                     </VisualStateGroup>
                     <VisualStateGroup x:Name="CommonStates">
                        <VisualState x:Name="MouseOver">
                           <Storyboard>
                              <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="OverBorder">
                      <EasingDoubleKeyFrame KeyTime="0" Value="1" />
                              </DoubleAnimationUsingKeyFrames>
                           </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Disabled">
                           <Storyboard>
                              <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="PART_InputTextBox">
                      <EasingDoubleKeyFrame KeyTime="0" Value="0.25" />
                              </DoubleAnimationUsingKeyFrames>
                           </Storyboard>
                        </VisualState>
                <VisualState x:Name="Normal" />
                <VisualState x:Name="ReadOnly" />
                     </VisualStateGroup>
                  </VisualStateManager.VisualStateGroups>
                  <Grid x:Name="MainGrid">
                     <Grid>
                <Border x:Name="BgBorder" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Grid.ColumnSpan="1" Visibility="Visible" CornerRadius="0" Margin="0">
                           <Grid>
                              <Grid.ColumnDefinitions>
                      <ColumnDefinition Width="*" />
                      <ColumnDefinition Width="Auto" />
                      <ColumnDefinition Width="Auto" />
                              </Grid.ColumnDefinitions>
                              <Grid>
                                 <Grid Margin="-1" Grid.ColumnSpan="2">
                        <Border x:Name="OverBorder" BorderThickness="1" CornerRadius="0" Opacity="0" BorderBrush="{StaticResource InputHoverBorderBrush}" Grid.ColumnSpan="2" />
                        <Border x:Name="FocusBorder" BorderThickness="1" CornerRadius="0" Opacity="0" BorderBrush="{StaticResource InputFocusedBorderBrush}" Grid.ColumnSpan="2" />
                                 </Grid>
                      <igPrim:MaskedInputTextBox x:Name="PART_InputTextBox" Style="{StaticResource InputTextBoxStyle}" HorizontalAlignment="Stretch" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" VerticalAlignment="Stretch" Margin="{TemplateBinding Padding}" TextAlignment="{Binding HorizontalContentAlignment, Converter={StaticResource HorizontalToTextAlignmentConverter}, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" Foreground="{TemplateBinding Foreground}" InputMethod.PreferredImeState="{TemplateBinding InputMethod.PreferredImeState}" />
                              </Grid>
                              <Grid x:Name="PART_SpinButtons" Grid.Column="1" Margin="0,-1,-1,-1" Width="18" Visibility="{TemplateBinding SpinButtonVisibilityResolved}">
                                 <Grid.RowDefinitions>
                        <RowDefinition Height="*" />
                        <RowDefinition Height="*" />
                                 </Grid.RowDefinitions>
                                 <RepeatButton x:Name="spinUp" Style="{TemplateBinding SpinButtonStyle}" ContentTemplate="{StaticResource IncreaseGlyphKey}">
  											    <ig:Commanding.Command>
                                                    <igPrim:MaskedInputCommandSource EventName="Click" CommandId="SpinUp" />
                                                </ig:Commanding.Command>
                                 </RepeatButton>
                                 <RepeatButton x:Name="spinDown" Style="{TemplateBinding SpinButtonStyle}" Grid.Row="2" ContentTemplate="{StaticResource DecreaseGlyphKey}" Margin="0,-1,0,0">
 											    <ig:Commanding.Command>
                                                    <igPrim:MaskedInputCommandSource EventName="Click" CommandId="SpinDown" />
                                                </ig:Commanding.Command>
                                 </RepeatButton>
                              </Grid>
                    <ToggleButton x:Name="PART_DropDownButton" Grid.Column="2" Grid.RowSpan="3" ClickMode="Press" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" IsEnabled="{Binding IsReadOnly, Converter={StaticResource complementConverter}, RelativeSource={RelativeSource TemplatedParent}}" Style="{TemplateBinding DropDownButtonStyle}" Visibility="{TemplateBinding DropDownButtonVisibility}" igPrim:XamlHelper.Focusable="False" IsTabStop="False" Margin="0,-1,-1,-1" />
                           </Grid>
                        </Border>
                        <Popup x:Name="PART_Popup">
                           <Border Background="{Binding [WindowBrush], Source={StaticResource SRP}}" BorderBrush="{Binding [WindowFrameBrush], Source={StaticResource SRP}}" BorderThickness="1" Padding="1">
                    <ig:XamCalendar x:Name="PART_Calendar" MinDate="{TemplateBinding ComputedMinDate}" MaxDate="{TemplateBinding ComputedMaxDate}" MinCalendarMode="{TemplateBinding ComputedMinCalendarMode}" SelectedDate="{Binding DateValue, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" SelectionMode="SingleDate" ScrollDirection="{TemplateBinding ScrollDirection}" />
                           </Border>
                        </Popup>
                     </Grid>
                  </Grid>
               </igPrim:ValidationDecorator>
            </ControlTemplate>
         </Setter.Value>
      </Setter>
   </Style>
  <Style TargetType="local:XamDateTimeInput" BasedOn="{StaticResource XamDateTimeInputStyle}" />
</ResourceDictionary>