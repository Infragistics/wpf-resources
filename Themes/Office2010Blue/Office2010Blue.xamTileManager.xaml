<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
                    xmlns:local="http://schemas.infragistics.com/xaml" 
                    xmlns:localPrim="http://schemas.infragistics.com/xaml/primitives" 
                    xmlns:ig="http://schemas.infragistics.com/xaml" 
                    xmlns:igPrim="http://schemas.infragistics.com/xaml/primitives" 
                    xmlns:sys="clr-namespace:System;assembly=mscorlib" 
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
                    xmlns:PresentationOptions="http://schemas.microsoft.com/winfx/2006/xaml/presentation/options" 
                    xmlns:d="http://schemas.microsoft.com/expression/blend/2008" mc:Ignorable="PresentationOptions d">

  <!-- *********************************  RESOURCES  ********************************* -->
  <ResourceDictionary.MergedDictionaries> 
    <ResourceDictionary Source="Office2010Blue.Styles.xaml" />
  </ResourceDictionary.MergedDictionaries>

  <!-- ********************************** BRUSHES **********************************-->
  <!-- Preview Brushes -->
  <SolidColorBrush x:Key="PreviewBackgroundBrush" Color="{StaticResource Color_027}" Opacity="0.5" />

  <!-- CloseButton Brushes -->
  <SolidColorBrush x:Key="CloseButtonBackgroundBrush" Color="{StaticResource Color_033}" />
  <SolidColorBrush x:Key="CloseButtonBorderBrush" Color="{StaticResource Color_033}" />
  <LinearGradientBrush x:Key="CloseButtonHoverBackgroundBrush" StartPoint="0.5,0" EndPoint="0.5,1">
    <GradientStop Offset="0" Color="{StaticResource Color_011}" />
    <GradientStop Offset="1" Color="{StaticResource Color_010}" />
  </LinearGradientBrush>
  <SolidColorBrush x:Key="CloseButtonHoverBorderBrush" Color="{StaticResource Color_008}" />
  <LinearGradientBrush x:Key="CloseButtonHoverInnerBackgroundBrush" EndPoint="0.5,1" StartPoint="0.5,0">
    <GradientStop Color="{StaticResource Color_034}" Offset="0" />
    <GradientStop Color="{StaticResource Color_035}" Offset="0.5" />
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="CloseButtonPressedBackgroundBrush" StartPoint="0.5,0" EndPoint="0.5,1">
    <GradientStop Offset="0" Color="{StaticResource Color_009}" />
    <GradientStop Offset="0.15" Color="{StaticResource Color_011}" />
    <GradientStop Offset="0.85" Color="{StaticResource Color_011}" />
    <GradientStop Offset="1" Color="{StaticResource Color_009}" />
  </LinearGradientBrush>
  <SolidColorBrush x:Key="CloseButtonPressedBorderBrush" Color="{StaticResource Color_008}" />
  <LinearGradientBrush x:Key="CloseButtonPressedInnerBackgroundBrush" StartPoint="0,0" EndPoint="1,0">
    <GradientStop Offset="0" Color="{StaticResource Color_010}" />
    <GradientStop Offset="0.15" Color="{StaticResource Color_039}" />
    <GradientStop Offset="0.85" Color="{StaticResource Color_039}" />
    <GradientStop Offset="1" Color="{StaticResource Color_010}" />
  </LinearGradientBrush>

  <!-- TileButton Brushes -->
  <SolidColorBrush x:Key="TileButtonBackgroundBrush" Color="{StaticResource Color_033}" />
  <SolidColorBrush x:Key="TileButtonBorderBrush" Color="{StaticResource Color_033}" />
  <LinearGradientBrush x:Key="TileButtonHoverBackgroundBrush" StartPoint="0.5,0" EndPoint="0.5,1">
    <GradientStop Color="{StaticResource Color_029}" Offset="1" />
    <GradientStop Color="{StaticResource Color_031}" />
  </LinearGradientBrush>
  <SolidColorBrush x:Key="TileButtonHoverBorderBrush" Color="{StaticResource Color_027}" />
  <LinearGradientBrush x:Key="TileButtonPressedBackgroundBrush" StartPoint="0.5,0" EndPoint="0.5,1">
    <GradientStop Offset="0" Color="{StaticResource Color_028}" />
    <GradientStop Offset="0.15" Color="{StaticResource Color_029}" />
    <GradientStop Offset="0.80" Color="{StaticResource Color_029}" />
    <GradientStop Offset="1" Color="{StaticResource Color_028}" />
  </LinearGradientBrush>
  <SolidColorBrush x:Key="TileButtonPressedBorderBrush" Color="{StaticResource Color_027}" />
  <LinearGradientBrush x:Key="TileButtonPressedInnerBackgroundBrush" StartPoint="0,0" EndPoint="1,0">
    <GradientStop Color="{StaticResource Color_028}" />
    <GradientStop Offset="0.15" Color="{StaticResource Color_038}" />
    <GradientStop Offset="0.85" Color="{StaticResource Color_038}" />
    <GradientStop Offset="1" Color="{StaticResource Color_028}" />
  </LinearGradientBrush>

  <!-- TileHeaderPresenter Brushes -->
  <SolidColorBrush x:Key="TileHeaderPresenterBackgroundBrush" Color="{StaticResource Color_033}" />

  <!-- TileAreaSplitter Brushes -->
  <LinearGradientBrush x:Key="TileAreaSplitterBackgroundBrush" StartPoint="0.5,0" EndPoint="0.5,1">
    <GradientStop Color="{StaticResource Color_030}" Offset="1" />
    <GradientStop Color="{StaticResource Color_032}" />
  </LinearGradientBrush>
  <SolidColorBrush x:Key="TileAreaSplitterBorderBrush" Color="{StaticResource Color_027}" />
  <SolidColorBrush x:Key="TileAreaSplitterForegroundBrush" Color="{StaticResource Color_025}" />

  <!-- Tile Brushes -->
  <LinearGradientBrush x:Key="TileBackgroundBrush" StartPoint="0,0" EndPoint="0,1">
    <GradientStop Offset="0" Color="{StaticResource Color_029}" />
    <GradientStop Offset="1" Color="{StaticResource Color_028}" />
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="TileBorderBrush" StartPoint="0,0" EndPoint="0,1">
    <GradientStop Offset="0" Color="{StaticResource Color_028}" />
    <GradientStop Offset="1" Color="{StaticResource Color_027}" />
  </LinearGradientBrush>
  <SolidColorBrush x:Key="TileContentBackgroundBrush" Color="{StaticResource Color_005}" />
  <SolidColorBrush x:Key="TileContentBorderBrush" Color="{StaticResource Color_027}" />
  <SolidColorBrush x:Key="TileInnerHighlightBorderBrush" Color="{StaticResource Color_031}" Opacity="0.8" />
  <SolidColorBrush x:Key="TileSwapTargetBackgroundBrush" Color="{StaticResource Color_027}" Opacity="0.4" />

  <!-- TileManager Brushes -->
  <SolidColorBrush x:Key="TileManagerBackgroundBrush" Color="{StaticResource Color_033}" />
  <SolidColorBrush x:Key="TileManagerBorderBrush" Color="{StaticResource Color_005}" />

  <igPrim:TileManagerResourceString x:Key="CloseButtonToolTipContent" ResourceName="CloseButtonToolTip" />
  <igPrim:TileManagerResourceString x:Key="MaximizeButtonToolTipContent" ResourceName="MaximizeButtonToolTip" />
  <igPrim:TileManagerResourceString x:Key="MinimizeButtonToolTipContent" ResourceName="MinimizeButtonToolTip" />
  <igPrim:TileManagerResourceString x:Key="ExpandButtonToolTipContent" ResourceName="ExpandButtonToolTip" />
  <igPrim:TileManagerResourceString x:Key="CollapseButtonToolTipContent" ResourceName="CollapseButtonToolTip" />

  <!-- ********************************** ValueConverters **********************************-->
  <igPrim:ValueConverterGroup x:Key="boolToVisibility">
    <!-- if true sets visibility to Visible -->
    <igPrim:FixedValueConverter>
      <igPrim:FixedValueConverter.SourceValue>
        <sys:Boolean>True</sys:Boolean>
      </igPrim:FixedValueConverter.SourceValue>
      <igPrim:FixedValueConverter.DestinationValue>
        <Visibility>Visible</Visibility>
      </igPrim:FixedValueConverter.DestinationValue>
    </igPrim:FixedValueConverter>
    <!-- if false sets visibility to Collapsed -->
    <igPrim:FixedValueConverter>
      <igPrim:FixedValueConverter.DestinationValue>
        <Visibility>Collapsed</Visibility>
      </igPrim:FixedValueConverter.DestinationValue>
    </igPrim:FixedValueConverter>
  </igPrim:ValueConverterGroup>

  <igPrim:ValueConverterGroup x:Key="closeActionToBool">
    <!-- if DoNothing converts to false -->
    <igPrim:FixedValueConverter>
      <igPrim:FixedValueConverter.SourceValue>
        <ig:TileCloseAction>DoNothing</ig:TileCloseAction>
      </igPrim:FixedValueConverter.SourceValue>
      <igPrim:FixedValueConverter.DestinationValue>
        <sys:Boolean>False</sys:Boolean>
      </igPrim:FixedValueConverter.DestinationValue>
    </igPrim:FixedValueConverter>
    <!-- else converts to true -->
    <igPrim:FixedValueConverter>
      <igPrim:FixedValueConverter.DestinationValue>
        <sys:Boolean>True</sys:Boolean>
      </igPrim:FixedValueConverter.DestinationValue>
    </igPrim:FixedValueConverter>
  </igPrim:ValueConverterGroup>

  <igPrim:ValueConverterGroup x:Key="stateToExpandCollapseTooltipConverter">
    <igPrim:FixedValueConverter DestinationValue="{StaticResource CollapseButtonToolTipContent}">
      <igPrim:FixedValueConverter.SourceValue>
        <ig:TileState>MinimizedExpanded</ig:TileState>
      </igPrim:FixedValueConverter.SourceValue>
    </igPrim:FixedValueConverter>
    <igPrim:FixedValueConverter DestinationValue="{StaticResource ExpandButtonToolTipContent}" />
  </igPrim:ValueConverterGroup>
  <igPrim:ValueConverterGroup x:Key="stateToMaximizeMinimizeTooltipConverter">
    <igPrim:FixedValueConverter DestinationValue="{StaticResource MinimizeButtonToolTipContent}">
      <igPrim:FixedValueConverter.SourceValue>
        <ig:TileState>Maximized</ig:TileState>
      </igPrim:FixedValueConverter.SourceValue>
    </igPrim:FixedValueConverter>
    <igPrim:FixedValueConverter DestinationValue="{StaticResource MaximizeButtonToolTipContent}" />
  </igPrim:ValueConverterGroup>
  <igPrim:ValueConverterGroup x:Key="stateToExpandedGlyphVisibilityConverter">
    <igPrim:FixedValueConverter>
      <igPrim:FixedValueConverter.SourceValue>
        <ig:TileState>MinimizedExpanded</ig:TileState>
      </igPrim:FixedValueConverter.SourceValue>
      <igPrim:FixedValueConverter.DestinationValue>
        <Visibility>Collapsed</Visibility>
      </igPrim:FixedValueConverter.DestinationValue>
    </igPrim:FixedValueConverter>
    <igPrim:FixedValueConverter>
      <igPrim:FixedValueConverter.DestinationValue>
        <Visibility>Visible</Visibility>
      </igPrim:FixedValueConverter.DestinationValue>
    </igPrim:FixedValueConverter>
  </igPrim:ValueConverterGroup>

  <igPrim:ValueConverterGroup x:Key="stateToCollapsededGlyphVisibilityConverter">
    <igPrim:FixedValueConverter>
      <igPrim:FixedValueConverter.SourceValue>
        <ig:TileState>Minimized</ig:TileState>
      </igPrim:FixedValueConverter.SourceValue>
      <igPrim:FixedValueConverter.DestinationValue>
        <Visibility>Collapsed</Visibility>
      </igPrim:FixedValueConverter.DestinationValue>
    </igPrim:FixedValueConverter>
    <igPrim:FixedValueConverter>
      <igPrim:FixedValueConverter.DestinationValue>
        <Visibility>Visible</Visibility>
      </igPrim:FixedValueConverter.DestinationValue>
    </igPrim:FixedValueConverter>
  </igPrim:ValueConverterGroup>

  <igPrim:ValueConverterGroup x:Key="stateToMaximizeGlyphVisibilityConverter">
    <igPrim:FixedValueConverter>
      <igPrim:FixedValueConverter.SourceValue>
        <ig:TileState>Maximized</ig:TileState>
      </igPrim:FixedValueConverter.SourceValue>
      <igPrim:FixedValueConverter.DestinationValue>
        <Visibility>Collapsed</Visibility>
      </igPrim:FixedValueConverter.DestinationValue>
    </igPrim:FixedValueConverter>
    <igPrim:FixedValueConverter>
      <igPrim:FixedValueConverter.DestinationValue>
        <Visibility>Visible</Visibility>
      </igPrim:FixedValueConverter.DestinationValue>
    </igPrim:FixedValueConverter>
  </igPrim:ValueConverterGroup>

  <igPrim:ValueConverterGroup x:Key="stateToRestoreGlyphVisibilityConverter">
    <igPrim:FixedValueConverter>
      <igPrim:FixedValueConverter.SourceValue>
        <ig:TileState>Maximized</ig:TileState>
      </igPrim:FixedValueConverter.SourceValue>
      <igPrim:FixedValueConverter.DestinationValue>
        <Visibility>Visible</Visibility>
      </igPrim:FixedValueConverter.DestinationValue>
    </igPrim:FixedValueConverter>
    <igPrim:FixedValueConverter>
      <igPrim:FixedValueConverter.DestinationValue>
        <Visibility>Collapsed</Visibility>
      </igPrim:FixedValueConverter.DestinationValue>
    </igPrim:FixedValueConverter>
  </igPrim:ValueConverterGroup>

  <igPrim:ValueConverterGroup x:Key="isSwappingToFillConverter">
    <igPrim:FixedValueConverter DestinationValue="{StaticResource TileSwapTargetBackgroundBrush}">
      <igPrim:FixedValueConverter.SourceValue>
        <sys:Boolean>True</sys:Boolean>
      </igPrim:FixedValueConverter.SourceValue>
    </igPrim:FixedValueConverter>
    <igPrim:FixedValueConverter>
      <igPrim:FixedValueConverter.DestinationValue>
        <SolidColorBrush Color="{StaticResource Color_033}" />
      </igPrim:FixedValueConverter.DestinationValue>
    </igPrim:FixedValueConverter>
  </igPrim:ValueConverterGroup>

  <igPrim:ValueConverterGroup x:Key="isDraggingToOpacityConverter">
    <igPrim:FixedValueConverter>
      <igPrim:FixedValueConverter.SourceValue>
        <sys:Boolean>True</sys:Boolean>
      </igPrim:FixedValueConverter.SourceValue>
      <igPrim:FixedValueConverter.DestinationValue>
        <sys:Double>75e-2</sys:Double>
      </igPrim:FixedValueConverter.DestinationValue>
    </igPrim:FixedValueConverter>
    <igPrim:FixedValueConverter>
      <igPrim:FixedValueConverter.DestinationValue>
        <sys:Double>1</sys:Double>
      </igPrim:FixedValueConverter.DestinationValue>
    </igPrim:FixedValueConverter>
  </igPrim:ValueConverterGroup>

  <igPrim:ValueConverterGroup x:Key="HorizontalToVisibilityConverter">
    <igPrim:FixedValueConverter>
      <igPrim:FixedValueConverter.SourceValue>
        <Orientation>Horizontal</Orientation>
      </igPrim:FixedValueConverter.SourceValue>
      <igPrim:FixedValueConverter.DestinationValue>
        <Visibility>Visible</Visibility>
      </igPrim:FixedValueConverter.DestinationValue>
    </igPrim:FixedValueConverter>
    <igPrim:FixedValueConverter>
      <igPrim:FixedValueConverter.DestinationValue>
        <Visibility>Collapsed</Visibility>
      </igPrim:FixedValueConverter.DestinationValue>
    </igPrim:FixedValueConverter>
  </igPrim:ValueConverterGroup>

  <igPrim:ValueConverterGroup x:Key="VerticalToVisibilityConverter">
    <igPrim:FixedValueConverter>
      <igPrim:FixedValueConverter.SourceValue>
        <Orientation>Vertical</Orientation>
      </igPrim:FixedValueConverter.SourceValue>
      <igPrim:FixedValueConverter.DestinationValue>
        <Visibility>Visible</Visibility>
      </igPrim:FixedValueConverter.DestinationValue>
    </igPrim:FixedValueConverter>
    <igPrim:FixedValueConverter>
      <igPrim:FixedValueConverter.DestinationValue>
        <Visibility>Collapsed</Visibility>
      </igPrim:FixedValueConverter.DestinationValue>
    </igPrim:FixedValueConverter>
  </igPrim:ValueConverterGroup>

  <igPrim:ValueConverterGroup x:Key="OrientationToMinWidthConverter">
    <igPrim:FixedValueConverter>
      <igPrim:FixedValueConverter.SourceValue>
        <Orientation>Vertical</Orientation>
      </igPrim:FixedValueConverter.SourceValue>
      <igPrim:FixedValueConverter.DestinationValue>
        <sys:Double>6</sys:Double>
      </igPrim:FixedValueConverter.DestinationValue>
    </igPrim:FixedValueConverter>
    <igPrim:FixedValueConverter>
      <igPrim:FixedValueConverter.DestinationValue>
        <sys:Double>0</sys:Double>
      </igPrim:FixedValueConverter.DestinationValue>
    </igPrim:FixedValueConverter>
  </igPrim:ValueConverterGroup>

  <igPrim:ValueConverterGroup x:Key="OrientationToMinHeightConverter">
    <igPrim:FixedValueConverter>
      <igPrim:FixedValueConverter.SourceValue>
        <Orientation>Horizontal</Orientation>
      </igPrim:FixedValueConverter.SourceValue>
      <igPrim:FixedValueConverter.DestinationValue>
        <sys:Double>6</sys:Double>
      </igPrim:FixedValueConverter.DestinationValue>
    </igPrim:FixedValueConverter>
    <igPrim:FixedValueConverter>
      <igPrim:FixedValueConverter.DestinationValue>
        <sys:Double>0</sys:Double>
      </igPrim:FixedValueConverter.DestinationValue>
    </igPrim:FixedValueConverter>
  </igPrim:ValueConverterGroup>

  <!-- ********************************** ToolTip Style **********************************-->
  <Style x:Key="ToolTipStyle" TargetType="ToolTip">
    <Setter Property="BorderBrush" Value="{StaticResource TooltipBorderBrush}" />
    <Setter Property="Background" Value="{StaticResource TooltipBackgroundBrush}" />
  </Style>

  <!-- ********************************** CaptionButton Style **********************************-->
  <Style x:Key="CaptionButtonStyle" TargetType="ButtonBase">
    <Setter Property="IsTabStop" Value="False" />
    <Setter Property="Padding" Value="0" />
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="Width" Value="23" />
    <Setter Property="Height" Value="21" />
    <Setter Property="Cursor" Value="Hand" />
  </Style>

  <!-- ********************************** CloseButton Style **********************************-->
  <Style x:Key="CloseButtonStyle" TargetType="Button" BasedOn="{StaticResource CaptionButtonStyle}">
    <Setter Property="Background" Value="{StaticResource CloseButtonBackgroundBrush}" />
    <Setter Property="BorderBrush" Value="{StaticResource CloseButtonBorderBrush}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="Button">
          <Grid Background="{StaticResource TransparentBrush}" igPrim:XamlHelper.SnapsToDevicePixels="True">
            <ToolTipService.ToolTip>
              <ToolTip Style="{StaticResource ToolTipStyle}" Content="{Binding Value, Source={StaticResource CloseButtonToolTipContent}}" />
            </ToolTipService.ToolTip>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="MouseOver">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="Background" Storyboard.TargetProperty="Background">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource CloseButtonHoverBackgroundBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="Background" Storyboard.TargetProperty="BorderBrush">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource CloseButtonHoverBorderBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="HoverInnerBackground">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Pressed">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="PressedInnerHighlight">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>
                            Visible
                          </Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="Background" Storyboard.TargetProperty="Background">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource CloseButtonPressedBackgroundBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="Background" Storyboard.TargetProperty="BorderBrush">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource CloseButtonPressedBorderBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Disabled">
                  <Storyboard>
                    <DoubleAnimation Duration="0" To="0.5" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="contentPresenter" />
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="FocusStates">
                <VisualState x:Name="Focused" />
                <VisualState x:Name="Unfocused" />
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Border x:Name="Background" CornerRadius="2" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1">
              <Grid>
                <Rectangle x:Name="HoverInnerBackground" Fill="{StaticResource CloseButtonHoverInnerBackgroundBrush}" Visibility="Collapsed" Margin="1" />
                <Rectangle x:Name="PressedInnerHighlight" RadiusY="2" RadiusX="2" Fill="{StaticResource CloseButtonPressedInnerBackgroundBrush}" Visibility="Collapsed" />
              </Grid>
            </Border>
            <ContentPresenter x:Name="contentPresenter" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- ********************************** ExpandButton Style **********************************-->
  <Style x:Key="ExpandButtonStyle" TargetType="Button" BasedOn="{StaticResource CaptionButtonStyle}">
    <Setter Property="Background" Value="{StaticResource TileButtonBackgroundBrush}" />
    <Setter Property="BorderBrush" Value="{StaticResource TileButtonBorderBrush}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="Button">
          <Grid Background="{StaticResource TransparentBrush}" igPrim:XamlHelper.SnapsToDevicePixels="True">
            <ToolTipService.ToolTip>
              <ToolTip Style="{StaticResource ToolTipStyle}" Tag="{Binding Path=Tag.State, Converter={StaticResource stateToExpandCollapseTooltipConverter}, RelativeSource={RelativeSource TemplatedParent}}" Content="{Binding Path=Tag.Value, RelativeSource={RelativeSource Self}}" />
            </ToolTipService.ToolTip>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="MouseOver">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="Background" Storyboard.TargetProperty="Background">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource TileButtonHoverBackgroundBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="Background" Storyboard.TargetProperty="BorderBrush">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource TileButtonHoverBorderBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Pressed">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="PressedInnerHighlight">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>
                            Visible
                          </Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="Background" Storyboard.TargetProperty="Background">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource TileButtonPressedBackgroundBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="Background" Storyboard.TargetProperty="BorderBrush">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource TileButtonPressedBorderBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Disabled">
                  <Storyboard>
                    <DoubleAnimation Duration="0" To="0.5" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="GlyphContainer" />
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="FocusStates">
                <VisualState x:Name="Focused" />
                <VisualState x:Name="Unfocused" />
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Border x:Name="Background" CornerRadius="2" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1">
              <Rectangle x:Name="PressedInnerHighlight" RadiusY="2" RadiusX="2" Fill="{StaticResource TileButtonPressedInnerBackgroundBrush}" Visibility="Collapsed" />
            </Border>
            <Grid x:Name="GlyphContainer" igPrim:XamlHelper.SnapsToDevicePixels="True">
              <Grid Width="9" Height="13" x:Name="NotCollapsedImage" Visibility="{Binding Tag.State, Converter={StaticResource stateToExpandedGlyphVisibilityConverter}, RelativeSource={RelativeSource TemplatedParent}}">
                <Path Data="M3.0000026,6 L3.0000026,7 L3.999999,7 L3.9999995,6 z M4.0000024,0 L5.0000024,0 L5.0000024,1 L6.0000024,1 L6.0000024,2 L7.0000024,2 L7.0000024,3.0000002 L8.0000019,3.0000002 L8.0000019,4 L9.0000029,4 L9.0000029,6 L8.0000019,6 L8.0000019,7 L6.0000029,7 L6.0000029,6 L5.0000029,6 L5.0000029,5 L4.0000024,5 L4.0000024,6 L4.9999995,6 L4.9999995,7 L5.999999,7 L5.999999,8 L6.9999995,8 L6.9999995,9 L7.999999,9 L7.999999,10 L9,10 L9,12 L7.999999,12 L7.999999,13 L5.9999995,13 L5.9999995,12 L5,12 L5,11 L3.9999995,11 L3.9999995,12 L2.9999995,12 L2.9999995,13 L0.99999994,13 L0.99999994,12 L0,12 L0,10 L0.99999881,10 L0.99999994,9 L1.9999994,9 L1.9999999,8 L2.9999993,8 L2.9999995,7 L1.0000029,7 L1.0000029,6 L2.9057264E-06,6 L2.9057264E-06,4 L1.0000017,4 L1.0000029,3.0000002 L2.0000024,3.0000002 L2.0000026,2 L3.0000021,2 L3.0000026,1 L4.0000019,1 z" Fill="{StaticResource GlyphBorderBrush}" Height="13" Stretch="Fill" StrokeThickness="0" UseLayoutRounding="False" VerticalAlignment="Top" />
                <Path Data="M3.0000007,6 L4,6 L4,7 L5,7 L5,8 L6.0000005,8 L6.0000005,9 L7,9 L7,11 L5.0000005,11 L5.0000005,10 L4.0000005,10 L4.0000005,9 L3.0000007,9 L3.0000007,10 L1.9999998,10 L1.9999998,11 L0,11 L0,9 L1.0000011,9 L1.0000011,8 L2.0000007,8 L2.0000007,7 L3.0000007,7 z M3.0000036,0 L4.0000033,0 L4.0000033,1 L5.0000029,1 L5.0000029,2 L6.0000033,2 L6.0000033,3 L7.0000033,3 L7.0000033,5 L5.0000033,5 L5.0000033,4 L4.0000038,4 L4.0000038,3 L3.0000036,3 L3.0000036,4 L2.0000026,4 L2.0000026,5 L2.9504299E-06,5 L2.9504299E-06,3 L1.0000041,3 L1.0000041,2 L2.0000038,2 L2.0000038,1 L3.0000036,1 z" Fill="{StaticResource GlyphBackgroundBrush}" Height="11" Margin="1,1,1,0" Stretch="Fill" StrokeThickness="0" UseLayoutRounding="False" VerticalAlignment="Top" />
              </Grid>
              <Grid Width="9" Height="13" x:Name="CollapsedImage" Visibility="{Binding Tag.State, Converter={StaticResource stateToCollapsededGlyphVisibilityConverter}, RelativeSource={RelativeSource TemplatedParent}}">
                <Path Data="M1.0000029,6.0000005 L3.0000029,6.0000005 L3.0000029,7.0000005 L4.0000029,7.0000005 L4.0000029,8 L5.0000033,8 L5.0000033,7.0000005 L6.0000033,7.0000005 L6.0000033,6.0000005 L8.0000029,6.0000005 L8.0000029,7.0000005 L9.0000029,7.0000005 L9.0000029,9 L8.0000029,9 L8.0000029,10 L7.0000033,10 L7.0000033,11 L6.0000033,11 L6.0000033,12 L5.0000033,12 L5.0000033,13 L4.0000029,13 L4.0000029,12 L3.0000029,12 L3.0000029,11 L2.0000029,11 L2.0000029,10 L1.0000029,10 L1.0000029,9 L2.9057264E-06,9 L2.9057264E-06,7.0000005 L1.0000024,7.0000005 z M1.0000001,0 L3,0 L3,1.0000001 L4,1.0000001 L4,2 L5.0000005,2 L5.0000005,0.99999994 L6.0000005,0.99999994 L6.0000005,0 L8,0 L8,0.99999994 L9,0.99999994 L9,3 L8,3 L8,4 L7.0000005,4 L7.0000005,5 L6.0000005,5 L6.0000005,6 L5.0000005,6 L5.0000005,7 L4,7 L4,6 L3,6 L3,5 L2,5 L2,4 L1.0000001,4 L1.0000001,3 L0,3 L0,1.0000001 L0.99999958,1.0000001 z" Fill="{StaticResource GlyphBorderBrush}" Height="13" Margin="0" Stretch="Fill" StrokeThickness="0" UseLayoutRounding="False" VerticalAlignment="Top" />
                <Path Data="M2.9504299E-06,6.0000005 L2.0000026,6.0000005 L2.0000026,7.000001 L3.0000033,7.000001 L3.0000033,8.000001 L4.0000033,8.000001 L4.0000033,7.000001 L5.0000033,7.000001 L5.0000033,6.000001 L7.0000029,6.000001 L7.0000029,8.000001 L6.0000033,8.000001 L6.0000033,9.000001 L5.0000033,9.000001 L5.0000033,10 L4.0000033,10 L4.0000033,11 L3.0000033,11 L3.0000033,10 L2.0000033,10 L2.0000033,9.000001 L1.0000037,9.000001 L1.0000037,8.000001 L2.9504299E-06,8.000001 z M0,0 L1.9999998,0 L1.9999998,1.0000004 L3.0000002,1.0000004 L3.0000002,2.0000005 L4.0000005,2.0000005 L4.0000005,1.0000004 L5.0000005,1.0000004 L5.0000005,3.2782555E-07 L7,3.2782555E-07 L7,2.0000005 L6,2.0000005 L6,3.0000005 L5.0000005,3.0000005 L5.0000005,4 L4.0000005,4 L4.0000005,5 L3.0000002,5 L3.0000002,4 L2.0000005,4 L2.0000005,3.0000005 L1.0000005,3.0000005 L1.0000005,2.0000002 L0,2.0000002 z" Fill="{StaticResource GlyphBackgroundBrush}" Margin="1" Stretch="Fill" StrokeThickness="0" UseLayoutRounding="False" />
              </Grid>
            </Grid>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- ********************************** MaximizeButton Style **********************************-->
  <Style x:Key="MaximizeButtonStyle" TargetType="Button" BasedOn="{StaticResource CaptionButtonStyle}">
    <Setter Property="Background" Value="{StaticResource TileButtonBackgroundBrush}" />
    <Setter Property="BorderBrush" Value="{StaticResource TileButtonBorderBrush}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="Button">
          <Grid Background="{StaticResource TransparentBrush}" igPrim:XamlHelper.SnapsToDevicePixels="True">
            <ToolTipService.ToolTip>
              <ToolTip Style="{StaticResource ToolTipStyle}" Tag="{Binding Path=Tag.State, Converter={StaticResource stateToMaximizeMinimizeTooltipConverter}, RelativeSource={RelativeSource TemplatedParent}}" Content="{Binding Path=Tag.Value, RelativeSource={RelativeSource Self}}" />
            </ToolTipService.ToolTip>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="MouseOver">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="Background" Storyboard.TargetProperty="Background">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource TileButtonHoverBackgroundBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="Background" Storyboard.TargetProperty="BorderBrush">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource TileButtonHoverBorderBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Pressed">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="PressedInnerHighlight">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>
                            Visible
                          </Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="Background" Storyboard.TargetProperty="Background">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource TileButtonPressedBackgroundBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="Background" Storyboard.TargetProperty="BorderBrush">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource TileButtonPressedBorderBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Disabled">
                  <Storyboard>
                    <DoubleAnimation Duration="0" To="0.5" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="GlyphContainer" />
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="FocusStates">
                <VisualState x:Name="Focused" />
                <VisualState x:Name="Unfocused" />
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Border x:Name="Background" CornerRadius="2" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1">
              <Rectangle x:Name="PressedInnerHighlight" RadiusY="2" RadiusX="2" Fill="{StaticResource TileButtonPressedInnerBackgroundBrush}" Visibility="Collapsed" />
            </Border>
            <Grid x:Name="GlyphContainer">
              <Path x:Name="MaximizeGlyph" Visibility="{Binding Tag.State, Converter={StaticResource stateToMaximizeGlyphVisibilityConverter}, RelativeSource={RelativeSource TemplatedParent}}" Height="10" Width="12" Fill="{StaticResource GlyphBackgroundBrush}" Stroke="{StaticResource GlyphBorderBrush}" Stretch="Fill" Data="M3.4060001,3.5940001 L3.4060001,6.4060001 L8.5939999,6.4060001 L8.5939999,3.5940001 L3.4060001,3.5940001 z M1,0.5 L11,0.5 C11.276142,0.5 11.5,0.72385764 11.5,1 L11.5,9 C11.5,9.2761421 11.276142,9.5 11,9.5 L1,9.5 C0.72385764,9.5 0.5,9.2761421 0.5,9 L0.5,1 C0.5,0.72385764 0.72385764,0.5 1,0.5 z" />
              <Grid Height="11" x:Name="RestoreGlyph" Width="12" Visibility="{Binding Tag.State, Converter={StaticResource stateToRestoreGlyphVisibilityConverter}, RelativeSource={RelativeSource TemplatedParent}}">
                <Path Width="12" Height="11" Data="M 3,7 C3,7 5,7 5,7 5,7 5,8 5,8 5,8 3,8 3,8 3,8 3,7 3,7 zM 8,4 C8,4 9,4 9,4 9,4 9,5 9,5 9,5 8,5 8,5 8,5 8,4 8,4 zM 0.79,3 C0.35,3 0,3.35 0,3.79 0,3.79 0,10.20 0,10.20 0,10.64 0.35,11 0.79,11 0.79,11 7.20,11 7.20,11 7.64,11 8,10.64 8,10.20 8,10.20 8,8 8,8 8,8 11.20,8 11.20,8 11.64,8 12,7.64 12,7.20 12,7.20 12,0.79 12,0.79 12,0.35 11.64,0 11.20,0 11.20,0 4.79,0 4.79,0 4.35,0 4,0.35 4,0.79 4,0.79 4,3 4,3 4,3 0.79,3 0.79,3 z" Fill="{StaticResource GlyphBorderBrush}" Stretch="Fill" />
                <Path Width="10" Height="9" HorizontalAlignment="Center" VerticalAlignment="Center" Data="M 2,6 C2,6 6,6 6,6 6,6 6,9 6,9 6,9 2,9 2,9 2,9 2,6 2,6 zM 1,4 C1,4 1,10 1,10 1,10 7,10 7,10 7,10 7,4 7,4 7,4 1,4 1,4 zM 5,1 C5,1 5,3 5,3 5,3 10,3 10,3 10,3 10,6 10,6 10,6 8,6 8,6 8,6 8,7 8,7 8,7 11,7 11,7 11,7 11,1 11,1 11,1 5,1 5,1 z" Fill="{StaticResource GlyphBackgroundBrush}" Stretch="Fill" />
              </Grid>
            </Grid>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- ********************************** TileHeaderPresenter Style **********************************-->
  <Style x:Key="TileHeaderPresenterStyle" TargetType="igPrim:TileHeaderPresenter">
    <Setter Property="HorizontalAlignment" Value="Stretch" />
    <Setter Property="Background" Value="{StaticResource TileHeaderPresenterBackgroundBrush}" />
    <Setter Property="HorizontalContentAlignment" Value="Left" />
    <Setter Property="VerticalContentAlignment" Value="Center" />
    <Setter Property="Padding" Value="2,0" />
    <Setter Property="BorderThickness" Value="0" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igPrim:TileHeaderPresenter">
          <Grid>
            <Border CornerRadius="5,5,0,0" BorderThickness="0" Margin="0" Background="{TemplateBinding Background}">
              <Border CornerRadius="4,4,0,0" Margin="0" BorderThickness="1">
                <Grid Margin="{TemplateBinding Padding}" Height="21">
                  <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                  </Grid.ColumnDefinitions>
                  <Image x:Name="image" Grid.Column="0" Source="{Binding Tile.Image, RelativeSource={RelativeSource TemplatedParent}}" Stretch="None" Visibility="{Binding Tile.HasImage, Converter={StaticResource boolToVisibility}, RelativeSource={RelativeSource TemplatedParent}}" />
                  <ContentPresenter Grid.Column="1" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="0,0,10,0" />

                  <Button x:Name="ToggleExpandCollapse" AutomationProperties.Name="ToggleExpandCollapse" Grid.Column="2" IsTabStop="False" Visibility="{Binding Tile.ExpandButtonVisibilityResolved, RelativeSource={RelativeSource TemplatedParent}}" CommandParameter="{TemplateBinding Tile}" Style="{StaticResource ExpandButtonStyle}" Opacity="1" Tag="{TemplateBinding Tile}">
                    <ig:Commanding.Command>
                      <igPrim:TileCommandSource EventName="Click" CommandType="ToggleMinimizedExpansion" ParameterBinding="{Binding Tile, RelativeSource={RelativeSource TemplatedParent}}" />
                    </ig:Commanding.Command>
                  </Button>
                  <Button x:Name="ToggleMaximized" IsEnabled="{Binding Path=Tile.AllowMaximizeResolved, RelativeSource={RelativeSource TemplatedParent}}" AutomationProperties.Name="ToggleMaximized" Grid.Column="3" IsTabStop="False" ClickMode="Release" Visibility="{Binding Tile.MaximizeButtonVisibilityResolved, RelativeSource={RelativeSource TemplatedParent}}" CommandParameter="{TemplateBinding Tile}" Style="{StaticResource MaximizeButtonStyle}" Opacity="1" Tag="{TemplateBinding Tile}">
                    <ig:Commanding.Command>
                      <igPrim:TileCommandSource EventName="Click" CommandType="ToggleMaximized" ParameterBinding="{Binding Tile, RelativeSource={RelativeSource TemplatedParent}}" />
                    </ig:Commanding.Command>
                  </Button>
                  <Button x:Name="Close" IsEnabled="{Binding Path=Tile.CloseActionResolved, Converter={StaticResource closeActionToBool}, RelativeSource={RelativeSource TemplatedParent}}" AutomationProperties.Name="Close" Grid.Column="4" IsTabStop="False" Visibility="{Binding Tile.CloseButtonVisibilityResolved, RelativeSource={RelativeSource TemplatedParent}}" CommandParameter="{TemplateBinding Tile}" Style="{StaticResource CloseButtonStyle}" Tag="{TemplateBinding Tile}" Opacity="1">
                    <ig:Commanding.Command>
                      <igPrim:TileCommandSource EventName="Click" CommandType="Close" ParameterBinding="{Binding Tile, RelativeSource={RelativeSource TemplatedParent}}" />
                    </ig:Commanding.Command>
                    <Path Height="10" Width="12" HorizontalAlignment="Center" VerticalAlignment="Center" Fill="{StaticResource GlyphBackgroundBrush}" Stroke="{StaticResource GlyphBorderBrush}" Stretch="Fill" Data="M0.5,0.5 L4.5178828,0.5 L6.0620003,3.125 L7.4936447,0.5 L11.5,0.5 L11.5,1.5476431 L8.7425003,6.1201854 L11.5,10.359666 L11.5,11.5 L7.4941902,11.5 L6.0620003,8.8740005 L4.5172949,11.5 L0.5,11.5 L0.5,10.43379 L3.3059995,6.1201582 L0.5,1.4676378 L0.5,0.5 z" />
                  </Button>
                </Grid>
              </Border>
            </Border>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="igPrim:TileHeaderPresenter" BasedOn="{StaticResource TileHeaderPresenterStyle}" />

  <!-- ********************************** Preview Style **********************************-->
  <Style x:Key="PreviewStyle" TargetType="Control">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="Control">
          <Rectangle Fill="{StaticResource PreviewBackgroundBrush}" igPrim:XamlHelper.SnapsToDevicePixels="True" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- ********************************** TileAreaSplitter Style **********************************-->
  <Style x:Key="TileAreaSplitterStyle" TargetType="igPrim:TileAreaSplitter">
    <Setter Property="PreviewStyle" Value="{StaticResource PreviewStyle}" />
    <Setter Property="Foreground" Value="{StaticResource TileAreaSplitterForegroundBrush}" />
    <Setter Property="Background" Value="{StaticResource TileAreaSplitterBackgroundBrush}" />
    <Setter Property="BorderBrush" Value="{StaticResource TileAreaSplitterBorderBrush}" />
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="Margin" Value="2,0" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igPrim:TileAreaSplitter">
          <Grid>
            <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" MinWidth="{Binding Path=(igPrim:TileAreaSplitter.Orientation), RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource OrientationToMinWidthConverter}}" MinHeight="{Binding Path=(igPrim:TileAreaSplitter.Orientation), RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource OrientationToMinHeightConverter}}" CornerRadius="1">
              <Grid>
                <Grid x:Name="verticalGlyphs" Visibility="{Binding Path=(igPrim:TileAreaSplitter.Orientation), Converter={StaticResource VerticalToVisibilityConverter}, RelativeSource={RelativeSource TemplatedParent}}">
                  <Path Width="2" Height="14" Data="M 0,12 C0,12 0,14 0,14 0,14 2,14 2,14 2,14 2,12 2,12 2,12 0,12 0,12 zM 0,8 C0,8 0,10 0,10 0,10 2,10 2,10 2,10 2,8 2,8 2,8 0,8 0,8 zM 0,4 C0,4 0,6 0,6 0,6 2,6 2,6 2,6 2,4 2,4 2,4 0,4 0,4 zM 0,0 C0,0 0,2 0,2 0,2 2,2 2,2 2,2 2,0 2,0 2,0 0,0 0,0 z" Fill="{TemplateBinding Foreground}" Opacity="1" Stretch="Fill" />
                </Grid>
                <Grid x:Name="horizontalGlyphs" Visibility="{Binding Path=(igPrim:TileAreaSplitter.Orientation), Converter={StaticResource HorizontalToVisibilityConverter}, RelativeSource={RelativeSource TemplatedParent}}">
                  <Path Width="14" Height="2" Margin="0,0,0,0" Data="M 2,0 C2,0 0,0 0,0 0,0 0,2 0,2 0,2 2,2 2,2 2,2 2,0 2,0 zM 6,0 C6,0 4,0 4,0 4,0 4,2 4,2 4,2 6,2 6,2 6,2 6,0 6,0 zM 10,0 C10,0 8,0 8,0 8,0 8,2 8,2 8,2 10,2 10,2 10,2 10,0 10,0 zM 14,0 C14,0 12,0 12,0 12,0 12,2 12,2 12,2 14,2 14,2 14,2 14,0 14,0 z" Fill="{TemplateBinding Foreground}" Stretch="Fill" />
                </Grid>
              </Grid>
            </Border>
            <Thumb x:Name="Thumb" Opacity="0" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="igPrim:TileAreaSplitter" BasedOn="{StaticResource TileAreaSplitterStyle}" />

  <!-- ********************************** Tile Style **********************************-->
  <Style x:Key="XamTileStyle" TargetType="ig:XamTile">
    <Setter Property="Background" Value="{StaticResource TileBackgroundBrush}" />
    <Setter Property="BorderBrush" Value="{StaticResource TileBorderBrush}" />
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="ig:XamTile">
          <Grid>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="MouseOver" />
                <VisualState x:Name="Normal" />
                <VisualState x:Name="Disabled" />
              </VisualStateGroup>
              <VisualStateGroup x:Name="MinimizedStates">
                <VisualState x:Name="NotMinimized" />
                <VisualState x:Name="MinimizedExpanded" />
                <VisualState x:Name="Minimized" />
                <VisualState x:Name="Maximized" />
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Border x:Name="Border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" CornerRadius="4,4,0,0" BorderThickness="1" Margin="0" Opacity="{Binding Path=(ig:XamTileManager.IsDragging), Converter={StaticResource isDraggingToOpacityConverter}, RelativeSource={RelativeSource TemplatedParent}}">
              <Border x:Name="InnerBorder" Margin="0" CornerRadius="4,4,0,0" BorderBrush="{StaticResource TileInnerHighlightBorderBrush}" BorderThickness="1">
                <Grid>
                  <Grid Margin="{TemplateBinding Padding}">
                    <Grid.RowDefinitions>
                      <RowDefinition Height="Auto" />
                      <RowDefinition Height="*" />
                    </Grid.RowDefinitions>
                    <!-- Header area-->
                    <igPrim:TileHeaderPresenter x:Name="TileHeader" AutomationProperties.AutomationId="TileHeader" Content="{TemplateBinding Header}" ContentTemplate="{TemplateBinding HeaderTemplate}" Tile="{Binding RelativeSource={RelativeSource TemplatedParent}}" />
                    <Border Visibility="{TemplateBinding ContentVisibility}" Grid.Row="1" Background="{StaticResource TileContentBackgroundBrush}" Margin="2,0,2,2" Padding="4" BorderBrush="{StaticResource TileContentBorderBrush}" BorderThickness="1">
                      <!-- Content area-->
                      <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplateResolved}" />
                    </Border>
                    <!-- Content area-->
                  </Grid>
                  <Rectangle x:Name="Overlay" IsHitTestVisible="False" Fill="{Binding Path=(ig:XamTileManager.IsSwapTarget), Converter={StaticResource isSwappingToFillConverter}, RelativeSource={RelativeSource TemplatedParent}}" />
                </Grid>
              </Border>
            </Border>
            <!-- the following Canvas is used while animating state transitions. During an animation it may contain an image element. 
								 The Canvas must be named "TransitionCanvas" and be a sibling of the root Border element. 
								 Otherwise state transitions will not scale properly during the animations. -->
            <Canvas Background="{StaticResource TransparentBrush}" x:Name="TransitionCanvas" IsHitTestVisible="False" Visibility="Collapsed" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="ig:XamTile" BasedOn="{StaticResource XamTileStyle}" />

  <!-- ********************************** TileDragIndicator Style **********************************-->
  <Style x:Key="TileDragIndicatorStyle" TargetType="igPrim:TileDragIndicator">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igPrim:TileDragIndicator">
          <Border Background="{TemplateBinding Background}">
            <ContentPresenter />
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="igPrim:TileDragIndicator" BasedOn="{StaticResource TileDragIndicatorStyle}" />

  <!-- ********************************** TileManager Style **********************************-->
  <Style x:Key="XamTileManagerStyle" TargetType="ig:XamTileManager">
    <Setter Property="Background" Value="{StaticResource TileManagerBackgroundBrush}" />
    <Setter Property="BorderBrush" Value="{StaticResource TileManagerBorderBrush}" />
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
    <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
    <Setter Property="igPrim:XamlHelper.CanContentScroll" Value="true" />
    <Setter Property="VerticalContentAlignment" Value="Center" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="ig:XamTileManager">
          <Border x:Name="Bd" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" igPrim:XamlHelper.SnapsToDevicePixels="true" Padding="{TemplateBinding Padding}">
            <ScrollViewer igPrim:XamlHelper.Focusable="false" Margin="0" 
                        HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}" 
                        VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}" 
                        Style="{StaticResource ScrollViewerStyle}">
              <igPrim:TileAreaPanel x:Name="TilePanel" igPrim:XamlHelper.SnapsToDevicePixels="{TemplateBinding igPrim:XamlHelper.SnapsToDevicePixels}" />
            </ScrollViewer>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="ig:XamTileManager" BasedOn="{StaticResource XamTileManagerStyle}" />
</ResourceDictionary>
