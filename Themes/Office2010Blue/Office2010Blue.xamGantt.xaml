<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
                    xmlns:ig="http://schemas.infragistics.com/xaml" 
                    xmlns:igBase="http://schemas.infragistics.com/xaml" 
                    xmlns:igPrim="http://schemas.infragistics.com/xaml/primitives" 
                    xmlns:igSchedule="http://schemas.infragistics.com/xaml" 
                    xmlns:igSchedulePrim="http://schemas.infragistics.com/xaml/primitives" 
                    xmlns:igEditorPrim="http://schemas.infragistics.com/xaml/primitives" 
                    xmlns:sys="clr-namespace:System;assembly=mscorlib" 
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
                    xmlns:d="http://schemas.microsoft.com/expression/blend/2008" mc:Ignorable="d">

  <!-- *********************************  RESOURCES  ********************************* -->
  <ResourceDictionary.MergedDictionaries>  
    <ResourceDictionary Source="Office2010Blue.Styles.xaml" />
  </ResourceDictionary.MergedDictionaries>

  <!-- *********************************  SPECIFIC GANTT COLORS  ********************************* -->
  <Color x:Key="Color_2002">#55FFFFFF</Color>
  <Color x:Key="Color_2003">#FF5C4726</Color>
  <Color x:Key="Color_2004">#FF0A1A2D</Color>

  <!-- ********************************** BRUSHES **********************************-->
  <!-- ToolTip Brushes -->
  <SolidColorBrush x:Key="ToolTipHeaderBackgroundBrush" Color="{StaticResource Color_029}" />
  <SolidColorBrush x:Key="ToolTipHeaderBorderBrush" Color="{StaticResource Color_027}" Opacity="0.9" />

  <!--  GridSplitter Brushes -->
  <SolidColorBrush x:Key="GridSplitterBackgroundBrush" Color="{StaticResource Color_029}" />
  <SolidColorBrush x:Key="GridSplitterBorderBrush" Color="{StaticResource Color_027}" />

  <!--  ExpansionIndicator Brushes -->
  <LinearGradientBrush x:Key="ExpansionIndicatorBackgroundBrush" StartPoint="0.5,0" EndPoint="0.5,1">
    <GradientStop Color="{StaticResource Color_032}" />
    <GradientStop Color="{StaticResource Color_030}" Offset="1" />
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="ExpansionIndicatorBorderBrush" StartPoint="0.5,0" EndPoint="0.5,1">
    <GradientStop Offset="0" Color="{StaticResource Color_028}" />
    <GradientStop Offset="1" Color="{StaticResource Color_027}" />
  </LinearGradientBrush>

  <!-- SpinEditorBase Brushes -->
  <SolidColorBrush x:Key="SpinEditorBaseBackgroundBrush" Color="{StaticResource Color_005}" />
  <SolidColorBrush x:Key="SpinEditorBaseBorderBrush" Color="{StaticResource Color_028}" />

  <!--  Cell Brushes -->
  <SolidColorBrush x:Key="CellItemBackgroundBrush" Color="{StaticResource Color_005}" />
  <SolidColorBrush x:Key="CellItemBorderBrush" Color="{StaticResource Color_004}" />
  <SolidColorBrush x:Key="CellItemAltBackgroundBrush" Color="{StaticResource Color_032}" />
  <SolidColorBrush x:Key="CellItemSelectedBackgroundBrush" Color="{StaticResource Color_031}" />
  <SolidColorBrush x:Key="CellItemActiveBackgroundBrush" Color="{StaticResource Color_005}" />
  <SolidColorBrush x:Key="CellItemActiveBorderBrush" Color="{StaticResource Color_001}" />
  <SolidColorBrush x:Key="CellItemHoverBackgroundBrush" Color="{StaticResource Color_033}" />
  <SolidColorBrush x:Key="CellItemForegroundBrush" Color="{StaticResource Color_001}" />
  <SolidColorBrush x:Key="CellItemInactiveForegroundBrush" Color="{StaticResource Color_003}" />

  <!--  RowSelector Brushes -->
  <SolidColorBrush x:Key="RowSelectorActiveBackgroundBrush" Color="{StaticResource Color_030}" />
  <SolidColorBrush x:Key="RowSelectorHoverBackgroundBrush" Color="{StaticResource Color_017}" />
  <SolidColorBrush x:Key="RowSelectorHoverBorderBrush" Color="{StaticResource Color_014}" />
  <SolidColorBrush x:Key="RowSelectorActiveIndicatorBackgroundBrush" Color="{StaticResource Color_025}" />
  <LinearGradientBrush x:Key="RowSelectorEditingIndicatorBackgroundBrush" StartPoint="0.666,-0.043" EndPoint="-0.066,0.949">
    <GradientStop Offset="0.751" Color="{StaticResource Color_026}" />
    <GradientStop Offset="0.754" Color="{StaticResource Color_029}" />
    <GradientStop Offset="0.896" Color="{StaticResource Color_029}" />
    <GradientStop Offset="0.896" Color="{StaticResource Color_026}" />
  </LinearGradientBrush>

  <!--  HeaderCell Brushes -->
  <SolidColorBrush x:Key="HeaderCellBackgroundBrush" Color="{StaticResource Color_029}" />
  <SolidColorBrush x:Key="HeaderCellBorderBrush" Color="{StaticResource Color_027}" />
  <SolidColorBrush x:Key="HeaderCellForegroundBrush" Color="{StaticResource Color_024}" />
  <LinearGradientBrush x:Key="HeaderCellHoverBackgroundBrush" StartPoint="0,0" EndPoint="0,1">
    <GradientStop Offset="0" Color="{StaticResource Color_017}" />
    <GradientStop Offset="1" Color="{StaticResource Color_019}" />
  </LinearGradientBrush>
  <SolidColorBrush x:Key="HeaderCellHoverBorderBrush" Color="{StaticResource Color_014}" />
  <SolidColorBrush x:Key="HeaderCellMovingBackgroundBrush" Color="{StaticResource Color_031}" Opacity="0.75" />
  <SolidColorBrush x:Key="HeaderCellGlyphBrush" Color="{StaticResource Color_025}" />
  <SolidColorBrush x:Key="HeaderCellGlyphInnerBrush" Color="{StaticResource Color_030}" />
  <SolidColorBrush x:Key="FilterOperatorGlyphBrush" Color="{StaticResource Color_025}" />
  <LinearGradientBrush x:Key="HiddenColumnIndicatorBackgroundBrush" EndPoint="-2,17" StartPoint="-7,12" SpreadMethod="Repeat" MappingMode="Absolute">
    <GradientStop Color="{StaticResource Color_027}" Offset="0.499" />
    <GradientStop Color="{StaticResource Color_030}" Offset="0.500" />
  </LinearGradientBrush>

  <!--  BlockingError Brushes -->
  <LinearGradientBrush x:Key="BlockingErrorBackgroundBrush" EndPoint="0.5,1" StartPoint="0.5,0">
    <GradientStop Color="{StaticResource Color_032}" />
    <GradientStop Color="{StaticResource Color_030}" Offset="1" />
  </LinearGradientBrush>
  <SolidColorBrush x:Key="BlockingErrorHeaderForegroundBrush" Color="{StaticResource Color_005}" />
  <LinearGradientBrush x:Key="BlockingErrorHeaderBackgroundBrush" StartPoint="0,0" EndPoint="0,1">
    <GradientStop Offset="0" Color="{StaticResource Color_007}" />
    <GradientStop Offset="1" Color="{StaticResource Color_006}" />
  </LinearGradientBrush>

  <!--  Gantt Task Brushes -->
  <SolidColorBrush x:Key="GanttTaskDependencyIconBackgroundBrush" Color="{StaticResource Color_026}" />
  <SolidColorBrush x:Key="GanttTaskDependencyDraggingBorderBrush" Color="{StaticResource Color_1001}" />
  <SolidColorBrush x:Key="ManualTaskBackgroundBrush" Color="{StaticResource Color_1001}" />
  <SolidColorBrush x:Key="ManualTaskBorderBrush" Color="{StaticResource Color_1000}" />
  <SolidColorBrush x:Key="ActiveSummaryTaskBackgroundBrush" Color="{StaticResource Color_026}" />
  <SolidColorBrush x:Key="ActiveSummaryTaskBorderBrush" Color="{StaticResource Color_023}" />
  <SolidColorBrush x:Key="ActiveProjectSummaryTaskBackgroundBrush" Color="{StaticResource Color_027}" />
  <SolidColorBrush x:Key="ActiveProjectSummaryTaskBorderBrush" Color="{StaticResource Color_026}" />
  <SolidColorBrush x:Key="AutomaticTaskBackgroundBrush" Color="{StaticResource Color_1008}" />
  <SolidColorBrush x:Key="AutomaticTaskBorderBrush" Color="{StaticResource Color_021}" />
  <SolidColorBrush x:Key="InactiveTaskBackgroundBrush" Color="{StaticResource Color_005}" />
  <SolidColorBrush x:Key="InactiveTaskBorderBrush" Color="{StaticResource Color_003}" />
  <SolidColorBrush x:Key="TaskShapeBackgroundBrush" Color="{StaticResource Color_026}" />
  <SolidColorBrush x:Key="TaskShapeBorderBrush" Color="{StaticResource Color_023}" />
  <SolidColorBrush x:Key="ManualMilestoneTaskBorderBrush" Color="{StaticResource Color_1000}" />
  <SolidColorBrush x:Key="ManualMilestoneTaskBackgroundBrush" Color="{StaticResource Color_1001}" />
  <SolidColorBrush x:Key="PlaceholderMilestoneTaskBorderBrush" Color="{StaticResource Color_027}" />
  <SolidColorBrush x:Key="PlaceholderMilestoneTaskBackgroundBrush" Color="{StaticResource Color_005}" />
  <SolidColorBrush x:Key="DeadlineTaskBorderBrush" Color="{StaticResource Color_1016}" igPrim:XamlHelper.IsExcludedFromWash="True" />
  <SolidColorBrush x:Key="DeadlineTaskBackgroundBrush" Color="{StaticResource Color_1017}" igPrim:XamlHelper.IsExcludedFromWash="True" />
  <SolidColorBrush x:Key="ProgressTaskBorderBrush" Color="{StaticResource Color_2004}" />
  <SolidColorBrush x:Key="ProgressTaskBackgroundBrush" Color="{StaticResource Color_023}" />
  <SolidColorBrush x:Key="CriticalTaskBorderBrush" Color="{StaticResource Color_1003}" igPrim:XamlHelper.IsExcludedFromWash="True" />
  <SolidColorBrush x:Key="CriticalTaskBackgroundBrush" Color="{StaticResource Color_1004}" igPrim:XamlHelper.IsExcludedFromWash="True" />
  <SolidColorBrush x:Key="SlackTaskBackgroundBrush" Color="{StaticResource Color_001}" />
  <SolidColorBrush x:Key="TaskIndicatorInactiveBorderBrush" Color="{StaticResource Color_026}" igPrim:XamlHelper.IsExcludedFromWash="True" />
  <SolidColorBrush x:Key="TaskIndicatorInactiveBackgroundBrush" Color="{StaticResource Color_027}" igPrim:XamlHelper.IsExcludedFromWash="True" />
  <SolidColorBrush x:Key="TaskIndicatorActiveBorderBrush" Color="{StaticResource Color_1016}" igPrim:XamlHelper.IsExcludedFromWash="True" />
  <SolidColorBrush x:Key="TaskIndicatorActiveBackgroundBrush" Color="{StaticResource Color_1020}" igPrim:XamlHelper.IsExcludedFromWash="True" />
  <SolidColorBrush x:Key="TaskIndicatorCheckIconBackgroundBrush" Color="{StaticResource Color_025}" igPrim:XamlHelper.IsExcludedFromWash="True" />
  <SolidColorBrush x:Key="ProjectTaskDependencyPresenterLine" Color="{StaticResource Color_023}" />
  <SolidColorBrush x:Key="ProjectTaskDependencyPresenterEndCap" Color="{StaticResource Color_023}" />
  <SolidColorBrush x:Key="DurationOnlyTaskBackgroundBrush" Color="{StaticResource Color_015}" />
  <SolidColorBrush x:Key="DurationOnlyTaskBorderBrush" Color="{StaticResource Color_013}" />
  <LinearGradientBrush x:Key="DurationOnlyOverlayLeftBrush" StartPoint="0,0" EndPoint="1,0">
    <GradientStop Color="{StaticResource Color_033}" Offset=".2" />
    <GradientStop Color="{StaticResource Color_2002}" Offset=".7" />
    <GradientStop Color="{StaticResource Color_033}" Offset="1" />
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="DurationOnlyOverlayRightBrush" StartPoint="1,0" EndPoint="0,0">
    <GradientStop Color="{StaticResource Color_033}" Offset=".2" />
    <GradientStop Color="{StaticResource Color_2002}" Offset=".7" />
    <GradientStop Color="{StaticResource Color_033}" Offset="1" />
  </LinearGradientBrush>

  <!--  Gantt Brushes -->
  <SolidColorBrush x:Key="GanttBackgroundBrush" Color="{StaticResource Color_005}" />
  <SolidColorBrush x:Key="GanttBorderBrush" Color="{StaticResource Color_027}" />
  <SolidColorBrush x:Key="GridIconBackgroundBrush" Color="{StaticResource Color_026}" igPrim:XamlHelper.IsExcludedFromWash="True" />
  <SolidColorBrush x:Key="AlertIconBackgroundBackgroundBrush" Color="{StaticResource Color_015}" igPrim:XamlHelper.IsExcludedFromWash="True" />
  <SolidColorBrush x:Key="AlertIconBorderBrush" Color="{StaticResource Color_013}" igPrim:XamlHelper.IsExcludedFromWash="True" />
  <SolidColorBrush x:Key="AlertIconInnerBackgroundBrush" Color="{StaticResource Color_001}" igPrim:XamlHelper.IsExcludedFromWash="True" />
  <SolidColorBrush x:Key="NoteIconBackgroundBackgroundBrush" Color="{StaticResource Color_015}" igPrim:XamlHelper.IsExcludedFromWash="True" />
  <SolidColorBrush x:Key="NoteIconBorderBrush" Color="{StaticResource Color_013}" igPrim:XamlHelper.IsExcludedFromWash="True" />
  <SolidColorBrush x:Key="NoteIconTextBackgroundBrush" Color="{StaticResource Color_2003}" igPrim:XamlHelper.IsExcludedFromWash="True" />
  <SolidColorBrush x:Key="NoteIconShadowBackgroundBrush" Color="{StaticResource Color_001}" Opacity="0.3" igPrim:XamlHelper.IsExcludedFromWash="True" />
  <SolidColorBrush x:Key="ExclamationIconBackgroundBackgroundBrush" Color="{StaticResource Color_1004}" igPrim:XamlHelper.IsExcludedFromWash="True" />
  <SolidColorBrush x:Key="ExclamationIconBorderBrush" Color="{StaticResource Color_1003}" igPrim:XamlHelper.IsExcludedFromWash="True" />
  <SolidColorBrush x:Key="ExclamationIconPathBackgroundBrush" Color="{StaticResource Color_005}" igPrim:XamlHelper.IsExcludedFromWash="True" />
  <SolidColorBrush x:Key="ManualDateTimeEditorBackgroundBrush" Color="{StaticResource Color_005}" />
  <SolidColorBrush x:Key="ManualDateTimeEditorBorderBrush" Color="{StaticResource Color_028}" />
  <SolidColorBrush x:Key="TimescaleBandBorderBrush" Color="{StaticResource Color_027}" />
  <SolidColorBrush x:Key="TimescaleIntervalBorderBrush" Color="{StaticResource Color_027}" />
  <SolidColorBrush x:Key="NonWorkingTimelineBackgroundBrush" Color="{StaticResource Color_029}" Opacity="0.3" />

  <!-- *********************************  ValidationDecorator Style  ********************************* -->
  <Style TargetType="igEditorPrim:ValidationDecorator">
    <Setter Property="Background" Value="{StaticResource ValidationErrorBrush}" />
    <Setter Property="BorderBrush" Value="{StaticResource ValidationErrorBrush}" />
    <Setter Property="ErrorForeground" Value="{StaticResource LightForegroundBrush}" />
    <Setter Property="BorderThickness" Value="1" />
  </Style>

  <!-- ********************************** Gantt TextBox Style **********************************-->
  <Style x:Key="GanttTextBoxStyle" TargetType="TextBox">
    <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
    <Setter Property="Background" Value="{StaticResource TextBoxBackgroundBrush}" />
    <Setter Property="BorderBrush" Value="{StaticResource TextBoxBorderBrush}" />
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="SelectionBrush" Value="{StaticResource TextBoxSelectionBackgroundBrush}" />
    <Setter Property="Padding" Value="4,2" />
    <Setter Property="Validation.ErrorTemplate">
      <Setter.Value>
        <ControlTemplate />
      </Setter.Value>
    </Setter>
    <Setter Property="Template">
      <Setter.Value>
        <!-- this template is essentially the same for WPF/SL except the name of the scrollviewer 
                    which is a required part for textbox and has different names in WPF & SL -->
        <ControlTemplate TargetType="TextBox">
          <igPrim:ValidationDecorator>
            <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" igPrim:XamlHelper.SnapsToDevicePixels="true">
              <ScrollViewer x:Name="PART_ContentHost" IsTabStop="False" BorderThickness="0" BorderBrush="Transparent" Background="Transparent" Padding="{TemplateBinding Padding}" Margin="0" igPrim:XamlHelper.Focusable="False" igPrim:XamlHelper.SnapsToDevicePixels="{TemplateBinding igPrim:XamlHelper.SnapsToDevicePixels}" Style="{StaticResource ScrollViewerStyle}" />
            </Border>
          </igPrim:ValidationDecorator>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- *********************************  GanttComboBox Style  ********************************* -->
  <Style x:Key="GanttComboBoxStyle" TargetType="{x:Type ComboBox}">
    <Setter Property="ItemContainerStyle" Value="{StaticResource ComboBoxItemStyle}" />
    <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
    <Setter Property="Background" Value="{StaticResource TextBoxBackgroundBrush}" />
    <Setter Property="BorderBrush" Value="{StaticResource TextBoxBorderBrush}" />
    <Setter Property="HorizontalContentAlignment" Value="Left" />
    <Setter Property="Padding" Value="5,3,20,3" />
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="MinHeight" Value="22" />
    <Setter Property="Cursor" Value="Hand" />
    <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
    <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
    <Setter Property="ScrollViewer.CanContentScroll" Value="true" />
    <Setter Property="ScrollViewer.PanningMode" Value="Both" />
    <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
    <Setter Property="Validation.ErrorTemplate">
      <Setter.Value>
        <ControlTemplate />
      </Setter.Value>
    </Setter>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ComboBox}">
          <igPrim:ValidationDecorator>
            <Grid x:Name="MainGrid" SnapsToDevicePixels="true" Height="{TemplateBinding MaxHeight}">
              <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                  <VisualState x:Name="Normal" />
                  <VisualState x:Name="MouseOver">
                    <Storyboard>
                      <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0" Storyboard.TargetName="Bd" Storyboard.TargetProperty="(Border.BorderBrush)">
                        <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource TextBoxHoverBorderBrush}" />
                      </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualState>
                  <VisualState x:Name="Disabled">
                    <Storyboard>
                      <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="DisabledVisualElement">
                        <EasingDoubleKeyFrame KeyTime="0" Value="0.55" />
                      </DoubleAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="FocusStates">
                  <VisualState x:Name="Unfocused" />
                  <VisualState x:Name="Focused" />
                  <VisualState x:Name="FocusedDropDown">
                    <Storyboard>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="DropDownBorder">
                        <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                      </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="EditStates">
                  <VisualState x:Name="Editable" />
                  <VisualState x:Name="Uneditable" />
                </VisualStateGroup>
                <VisualStateGroup x:Name="ValidationStates">
                  <VisualState x:Name="Valid" />
                  <VisualState x:Name="InvalidFocused" />
                  <VisualState x:Name="InvalidUnfocused" />
                </VisualStateGroup>
              </VisualStateManager.VisualStateGroups>
              <Border x:Name="ContentPresenterBorder">
                <Grid>
                  <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" />
                  <ToggleButton IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource ComboBoxToggleButtonStyle}">
                    <Path x:Name="BtnArrow" Data="M0,0 L8,0 L4,4 z" Width="6" Height="4" Fill="{StaticResource GlyphBorderBrush}" Stretch="Fill" />
                  </ToggleButton>
                  <ContentPresenter x:Name="ContentPresenter" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" IsHitTestVisible="false" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Content="{TemplateBinding SelectionBoxItem}" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" />
                  <TextBlock IsHitTestVisible="False" Text=" " Margin="5,2,5,0" Visibility="Collapsed" />
                </Grid>
              </Border>
              <Popup x:Name="PART_Popup" Margin="1" AllowsTransparency="true" IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}" Placement="Bottom" PopupAnimation="{StaticResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Grid.ColumnSpan="2">
                <Border x:Name="DropDownBorder" HorizontalAlignment="Stretch" Background="{StaticResource PopupBackgroundBrush}" BorderBrush="{StaticResource PopupBorderBrush}" BorderThickness="1" MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{Binding ActualWidth, ElementName=MainGrid}">
                  <ScrollViewer CanContentScroll="true" BorderThickness="0" Padding="1" Style="{StaticResource ScrollViewerStyle}" Margin="0">
                    <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" KeyboardNavigation.DirectionalNavigation="Contained" />
                  </ScrollViewer>
                </Border>
              </Popup>
              <Rectangle x:Name="DisabledVisualElement" Fill="{StaticResource DisabledBackgroundBrush}" IsHitTestVisible="false" Opacity="0" Grid.ColumnSpan="2" />
            </Grid>
          </igPrim:ValidationDecorator>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- *********************************  ProjectGridSplitter Style  ********************************* -->
  <Style TargetType="{x:Type igSchedulePrim:ProjectGridSplitter}">
    <Setter Property="Background" Value="{StaticResource GridSplitterBackgroundBrush}" />
    <Setter Property="BorderBrush" Value="{StaticResource GridSplitterBorderBrush}" />
    <Setter Property="PreviewStyle">
      <Setter.Value>
        <Style>
          <Setter Property="Control.Template">
            <Setter.Value>
              <ControlTemplate>
                <Rectangle Fill="{StaticResource GridSplitterBackgroundBrush}" StrokeThickness="1" Stroke="{StaticResource GridSplitterBorderBrush}" />
              </ControlTemplate>
            </Setter.Value>
          </Setter>
        </Style>
      </Setter.Value>
    </Setter>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type igSchedulePrim:ProjectGridSplitter}">
          <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1">
            <StackPanel Orientation="Vertical" VerticalAlignment="Center" HorizontalAlignment="Center">
              <Rectangle Width="2" Height="2" Margin="1" Fill="{StaticResource GlyphBorderBrush}" />
              <Rectangle Width="2" Height="2" Margin="1" Fill="{StaticResource GlyphBorderBrush}" />
              <Rectangle Width="2" Height="2" Margin="1" Fill="{StaticResource GlyphBorderBrush}" />
              <Rectangle Width="2" Height="2" Margin="1" Fill="{StaticResource GlyphBorderBrush}" />
            </StackPanel>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- *********************************  toolTipHeader Template  ********************************* -->
  <Style x:Key="ToolTipHeaderTemplate" TargetType="ContentControl">
    <Setter Property="Background" Value="{StaticResource ToolTipHeaderBackgroundBrush}" />
    <Setter Property="BorderBrush" Value="{StaticResource ToolTipHeaderBorderBrush}" />
    <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
    <Setter Property="HorizontalContentAlignment" Value="Left" />
    <Setter Property="VerticalContentAlignment" Value="Top" />
    <Setter Property="Padding" Value="3,0" />
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="ContentControl">
          <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0,0,0,1" Padding="2">
            <ContentPresenter Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" Cursor="{TemplateBinding Cursor}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="{TemplateBinding Padding}" />
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- *********************************  Tooltip Generic Template  ********************************* -->
  <ControlTemplate x:Key="ToolTipTemplate" TargetType="ToolTip">
    <Grid>
      <Grid>
        <Rectangle Fill="{StaticResource ShadowBackgroundBrush}" Margin="0,0,-1,-1" Opacity="0.1" RadiusY="1" RadiusX="1" />
        <Rectangle Fill="{StaticResource ShadowBackgroundBrush}" Margin="0,0,-2,-2" Opacity="0.08" RadiusY="2" RadiusX="2" />
        <Rectangle Fill="{StaticResource ShadowBackgroundBrush}" Margin="0,0,-3,-3" Opacity="0.06" RadiusY="3" RadiusX="3" />
        <Rectangle Fill="{StaticResource ShadowBackgroundBrush}" Margin="0,0,-4,-4" Opacity="0.04" RadiusY="4" RadiusX="4" />
      </Grid>
      <Border Background="{StaticResource PopupBackgroundBrush}" BorderBrush="{StaticResource PopupBorderBrush}" BorderThickness="1">
        <ContentPresenter />
      </Border>
    </Grid>
  </ControlTemplate>

  <!-- *********************************  Tooltip Generic Style  ********************************* -->
  <Style x:Key="SimpletoolTip" TargetType="ToolTip">
    <Setter Property="Background" Value="{StaticResource TooltipBackgroundBrush}" />
    <Setter Property="BorderBrush" Value="{StaticResource TooltipBorderBrush}" />
    <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
    <Setter Property="Padding" Value="4,2" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="ToolTip">
          <Grid>
            <Grid>
              <Rectangle Fill="{StaticResource ShadowBackgroundBrush}" Margin="0,0,-1,-1" Opacity="0.1" RadiusY="1" RadiusX="1" />
              <Rectangle Fill="{StaticResource ShadowBackgroundBrush}" Margin="0,0,-2,-2" Opacity="0.08" RadiusY="2" RadiusX="2" />
              <Rectangle Fill="{StaticResource ShadowBackgroundBrush}" Margin="0,0,-3,-3" Opacity="0.06" RadiusY="3" RadiusX="3" />
              <Rectangle Fill="{StaticResource ShadowBackgroundBrush}" Margin="0,0,-4,-4" Opacity="0.04" RadiusY="4" RadiusX="4" />
            </Grid>
            <Border Background="{StaticResource PopupBackgroundBrush}" BorderBrush="{StaticResource PopupBorderBrush}" BorderThickness="1">
              <ContentPresenter Margin="{TemplateBinding Padding}" />
            </Border>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- *********************************  ValueConverter Resources  ********************************* -->
  <DataTemplate x:Key="TaskIndicatorTemplate_FlexibleConstraint">
    <Grid Height="16" Width="16">
      <Path Data="M10,9 L10,11 L12,11 L12,9 z M7,9 L7,11 L9,11 L9,9 z M4.0000005,9 L4.0000005,11 L6,11 L6,9 z M0.99999994,9 L0.99999994,11 L3.0000005,11 L3.0000005,9 z M10,5.9999995 L10,7.9999995 L12,7.9999995 L12,5.9999995 z M7,5.9999995 L7,7.9999995 L9,7.9999995 L9,5.9999995 z M4.0000005,5.9999995 L4.0000005,7.9999995 L6,7.9999995 L6,5.9999995 z M0.99999994,5.9999995 L0.99999994,7.9999995 L3.0000005,7.9999995 L3.0000005,5.9999995 z M10,3 L10,5 L12,5 L12,3 z M7,3 L7,5 L9,5 L9,3 z M4.0000005,3 L4.0000005,5 L6,5 L6,3 z M0.99999994,3 L0.99999994,5 L3.0000005,5 L3.0000005,3 z M0,0 L13,0 L13,2.0000005 L13,3 L13,5 L13,5.9999995 L13,7.9999995 L13,9 L13,11 L13,11.999999 L5.8114529E-07,12 L5.8114523E-08,3 L0,2 z" Fill="{StaticResource GridIconBackgroundBrush}" Stretch="Fill" UseLayoutRounding="False" Width="13" Height="12" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="1,2,0,0" />
      <Rectangle Fill="{StaticResource TaskIndicatorInactiveBorderBrush}" HorizontalAlignment="Left" Margin="4,7,0,0" Width="4" VerticalAlignment="Top" Height="4" />
      <Rectangle Fill="{StaticResource TaskIndicatorInactiveBackgroundBrush}" HorizontalAlignment="Left" Margin="5,8,0,0" Width="2" Height="2" VerticalAlignment="Top" />
      <Rectangle Fill="{StaticResource TaskIndicatorActiveBorderBrush}" Margin="10,7,0,0" VerticalAlignment="Top" Height="4" HorizontalAlignment="Left" Width="4" />
      <Rectangle Fill="{StaticResource TaskIndicatorActiveBackgroundBrush}" HorizontalAlignment="Left" Width="2" Height="2" VerticalAlignment="Top" Margin="11,8,0,0" />
    </Grid>
  </DataTemplate>
  <DataTemplate x:Key="TaskIndicatorTemplate_InflexibleConstraint">
    <Grid Height="16" Width="16">
      <Path Data="M10,9 L10,11 L12,11 L12,9 z M7,9 L7,11 L9,11 L9,9 z M4.0000005,9 L4.0000005,11 L6,11 L6,9 z M0.99999994,9 L0.99999994,11 L3.0000005,11 L3.0000005,9 z M10,5.9999995 L10,7.9999995 L12,7.9999995 L12,5.9999995 z M7,5.9999995 L7,7.9999995 L9,7.9999995 L9,5.9999995 z M4.0000005,5.9999995 L4.0000005,7.9999995 L6,7.9999995 L6,5.9999995 z M0.99999994,5.9999995 L0.99999994,7.9999995 L3.0000005,7.9999995 L3.0000005,5.9999995 z M10,3 L10,5 L12,5 L12,3 z M7,3 L7,5 L9,5 L9,3 z M4.0000005,3 L4.0000005,5 L6,5 L6,3 z M0.99999994,3 L0.99999994,5 L3.0000005,5 L3.0000005,3 z M0,0 L13,0 L13,2.0000005 L13,3 L13,5 L13,5.9999995 L13,7.9999995 L13,9 L13,11 L13,11.999999 L5.8114529E-07,12 L5.8114523E-08,3 L0,2 z" Fill="{StaticResource GridIconBackgroundBrush}" Stretch="Fill" UseLayoutRounding="False" Width="13" Height="12" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="1,2,0,0" />
      <Rectangle Fill="{StaticResource TaskIndicatorActiveBorderBrush}" HorizontalAlignment="Left" Margin="4,7,0,0" Width="4" VerticalAlignment="Top" Height="4" />
      <Rectangle Fill="{StaticResource TaskIndicatorActiveBackgroundBrush}" HorizontalAlignment="Left" Margin="5,8,0,0" Width="2" Height="2" VerticalAlignment="Top" />
    </Grid>
  </DataTemplate>
  <DataTemplate x:Key="TaskIndicatorTemplate_ConstraintViolation">
    <Grid Height="16" Width="16">
      <Path Data="M10,9 L10,11 L12,11 L12,9 z M7,9 L7,11 L9,11 L9,9 z M4.0000005,9 L4.0000005,11 L6,11 L6,9 z M0.99999994,9 L0.99999994,11 L3.0000005,11 L3.0000005,9 z M10,5.9999995 L10,7.9999995 L12,7.9999995 L12,5.9999995 z M7,5.9999995 L7,7.9999995 L9,7.9999995 L9,5.9999995 z M4.0000005,5.9999995 L4.0000005,7.9999995 L6,7.9999995 L6,5.9999995 z M0.99999994,5.9999995 L0.99999994,7.9999995 L3.0000005,7.9999995 L3.0000005,5.9999995 z M10,3 L10,5 L12,5 L12,3 z M7,3 L7,5 L9,5 L9,3 z M4.0000005,3 L4.0000005,5 L6,5 L6,3 z M0.99999994,3 L0.99999994,5 L3.0000005,5 L3.0000005,3 z M0,0 L13,0 L13,2.0000005 L13,3 L13,5 L13,5.9999995 L13,7.9999995 L13,9 L13,11 L13,11.999999 L5.8114529E-07,12 L5.8114523E-08,3 L0,2 z" Fill="{StaticResource GridIconBackgroundBrush}" Stretch="Fill" UseLayoutRounding="False" Width="13" Height="12" HorizontalAlignment="Left" VerticalAlignment="Top" />
      <Rectangle Fill="{StaticResource TaskIndicatorActiveBorderBrush}" HorizontalAlignment="Left" Margin="3,5,0,0" Width="4" VerticalAlignment="Top" Height="4" />
      <Rectangle Fill="{StaticResource TaskIndicatorActiveBackgroundBrush}" HorizontalAlignment="Left" Margin="4,6,0,0" Width="2" Height="2" VerticalAlignment="Top" />
      <Path Data="M6.484375,0.5 L12.5,10.5 L0.5,10.5 z" Fill="{StaticResource AlertIconBackgroundBackgroundBrush}" Stretch="Fill" Stroke="{StaticResource AlertIconBorderBrush}" UseLayoutRounding="False" Width="14" Height="11" Margin="2,5,0,0" HorizontalAlignment="Left" VerticalAlignment="Top" />
      <Path Data="M0,4 L2,4 L2,5 L0,5 z M1.3411045E-06,0 L2.0000014,0 L2.0000014,3 L1.3411045E-06,3 z" Fill="{StaticResource AlertIconInnerBackgroundBrush}" Stretch="Fill" UseLayoutRounding="False" Margin="8,9,0,0" HorizontalAlignment="Left" Width="2" Height="5" VerticalAlignment="Top" />
    </Grid>
  </DataTemplate>
  <DataTemplate x:Key="TaskIndicatorTemplate_Completed">
    <Grid Width="16" Height="16">
      <Path Data="M2.3914926,6.4981399 L6.4163337,10.087243 L14.793087,1.8651594 L15.544387,2.3674157 L6.7676015,14.584246 L6.0176682,14.584246 L-0.04171209,8.66747 z" Fill="{StaticResource TaskIndicatorCheckIconBackgroundBrush}" Stretch="Fill" UseLayoutRounding="False" Width="14" Height="13" VerticalAlignment="Top" Margin="0,2,0,0" />
    </Grid>
  </DataTemplate>
  <DataTemplate x:Key="TaskIndicatorTemplate_Notes">
    <Grid Height="16" Width="16">
      <Rectangle Fill="{StaticResource NoteIconShadowBackgroundBrush}" Grid.RowSpan="2" Width="12" Height="11" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="2,3,0,0" />
      <Rectangle Fill="{StaticResource NoteIconBackgroundBackgroundBrush}" Margin="1,2,0,0" Grid.RowSpan="2" Stroke="{StaticResource NoteIconBorderBrush}" Width="12" Height="11" HorizontalAlignment="Left" VerticalAlignment="Top" />
      <Path Data="M4,6 L8,6 L8,7 L4,7 z M0,4 L8,4 L8,5 L0,5 z M0,2 L8,2 L8,3 L0,3 z M0,0 L8,0 L8,1 L0,1 z" Fill="{StaticResource NoteIconTextBackgroundBrush}" Height="7" Grid.Row="1" Stretch="Fill" UseLayoutRounding="False" Width="8" Margin="3,4,0,0" HorizontalAlignment="Left" VerticalAlignment="Top" />
    </Grid>
  </DataTemplate>
  <DataTemplate x:Key="TaskIndicatorTemplate_Deadline">
    <Grid Height="16" Width="16">
      <Rectangle Fill="{StaticResource ExclamationIconBackgroundBackgroundBrush}" Width="12" Height="12" Stroke="{StaticResource ExclamationIconBorderBrush}" />
      <Rectangle Fill="{StaticResource ExclamationIconBorderBrush}" Width="4" Height="10" />
      <Path Data="M0,6 L2,6 L2,8 L0,8 z M0,0 L2,0 L2,5 L0,5 z" Fill="{StaticResource ExclamationIconPathBackgroundBrush}" Stretch="Fill" UseLayoutRounding="False" Width="2" Height="8" />
    </Grid>
  </DataTemplate>

  <!-- *********************************  ResourceStrings  ********************************* -->
  <igSchedulePrim:GanttResourceString x:Key="progressToolTipTitle" ResourceName="TaskBarToolTip_ProgressTitle" />
  <igSchedulePrim:GanttResourceString x:Key="deadlineToolTipTitle" ResourceName="TaskBarToolTip_DeadlineTitle" />
  <igSchedulePrim:GanttResourceString x:Key="slackToolTipTitle" ResourceName="TaskBarToolTip_SlackTitle" />
  <igSchedulePrim:GanttResourceString x:Key="milestoneToolTipTitle" ResourceName="TaskBarToolTip_MilestoneTitle" />
  <igSchedulePrim:GanttResourceString x:Key="taskToolTipTitle" ResourceName="TaskBarToolTip_TaskTitle" />
  <igSchedulePrim:GanttResourceString x:Key="summaryToolTipTitle" ResourceName="TaskBarToolTip_SummaryTitle" />
  <igSchedulePrim:GanttResourceString x:Key="projectSummaryToolTipTitle" ResourceName="TaskBarToolTip_ProjectSummaryTitle" />
  <igSchedulePrim:GanttResourceString x:Key="taskToolTipNameLabel" ResourceName="TaskBarToolTip_TaskNameLabel" />
  <igSchedulePrim:GanttResourceString x:Key="taskToolTipActualStartLabel" ResourceName="TaskBarToolTip_ActualStartLabel" />
  <igSchedulePrim:GanttResourceString x:Key="taskToolTipCompleteThroughLabel" ResourceName="TaskBarToolTip_CompleteThroughLabel" />
  <igSchedulePrim:GanttResourceString x:Key="taskToolTipDurationLabel" ResourceName="TaskBarToolTip_DurationLabel" />
  <igSchedulePrim:GanttResourceString x:Key="taskToolTipPercentCompleteLabel" ResourceName="TaskBarToolTip_PercentCompleteLabel" />
  <igSchedulePrim:GanttResourceString x:Key="taskToolTipDeadlineLabel" ResourceName="TaskBarToolTip_DeadlineLabel" />
  <igSchedulePrim:GanttResourceString x:Key="taskToolTipTaskFinishLabel" ResourceName="TaskBarToolTip_TaskFinishLabel" />
  <igSchedulePrim:GanttResourceString x:Key="taskToolTipFreeSlackLabel" ResourceName="TaskBarToolTip_FreeSlackLabel" />
  <igSchedulePrim:GanttResourceString x:Key="taskToolTipTaskStartLabel" ResourceName="TaskBarToolTip_TaskStartLabel" />
  <igSchedulePrim:GanttResourceString x:Key="taskToolTipSubtaskStartLabel" ResourceName="TaskBarToolTip_SubtasksStartLabel" />
  <igSchedulePrim:GanttResourceString x:Key="taskToolTipSubtaskFinishLabel" ResourceName="TaskBarToolTip_SubtasksFinishLabel" />
  <igSchedulePrim:GanttResourceString x:Key="taskToolTipSubtaskDurationLabel" ResourceName="TaskBarToolTip_SubtasksDurationLabel" />
  <igSchedulePrim:GanttResourceString x:Key="dependencyToolTipLinkLabel" ResourceName="TaskDependencyToolTip_TaskLinkLabel" />
  <igSchedulePrim:GanttResourceString x:Key="dependencyToolTipLagLabel" ResourceName="TaskDependencyToolTip_LagLabel" />
  <igSchedulePrim:GanttResourceString x:Key="dependencyToolTipFromLabel" ResourceName="TaskDependencyToolTip_FromLabel" />
  <igSchedulePrim:GanttResourceString x:Key="dependencyToolTipToLabel" ResourceName="TaskDependencyToolTip_ToLabel" />
  <igSchedulePrim:GanttResourceString x:Key="dependencyToolTipTitle" ResourceName="TaskDependencyToolTip_Title" />
  <igSchedulePrim:GanttResourceString x:Key="BlockingErrorLiteral" ResourceName="BlockingErrorLiteral" />

  <!-- *********************************  ValueConverters  ********************************* -->
  <igPrim:BoolToVisibilityConverter x:Key="boolToVisibility" />
  <igPrim:EmptyToCollapsedConverter x:Key="emptyToCollapsed" />
  <igPrim:ScaledDoubleConverter x:Key="doubleForPercentConverter">
    <igPrim:ScaledDoubleConverter.ScaleFactor>.01</igPrim:ScaledDoubleConverter.ScaleFactor>
  </igPrim:ScaledDoubleConverter>

  <igPrim:ValueConverterGroup x:Key="notBoolToVisibility">
    <!-- when true then collapse the item, otherwise leave it visible -->
    <igPrim:FixedValueConverter>
      <igPrim:FixedValueConverter.SourceValue>
        <sys:Boolean>True</sys:Boolean>
      </igPrim:FixedValueConverter.SourceValue>
      <igPrim:FixedValueConverter.DestinationValue>
        <Visibility>Collapsed</Visibility>
      </igPrim:FixedValueConverter.DestinationValue>
    </igPrim:FixedValueConverter>
  </igPrim:ValueConverterGroup>

  <igPrim:ValueConverterGroup x:Key="complementConverter">
    <!-- True to False -->
    <igPrim:FixedValueConverter>
      <igPrim:FixedValueConverter.SourceValue>
        <sys:Boolean>True</sys:Boolean>
      </igPrim:FixedValueConverter.SourceValue>
      <igPrim:FixedValueConverter.DestinationValue>
        <sys:Boolean>False</sys:Boolean>
      </igPrim:FixedValueConverter.DestinationValue>
    </igPrim:FixedValueConverter>

    <!-- False to True -->
    <igPrim:FixedValueConverter>
      <igPrim:FixedValueConverter.SourceValue>
        <sys:Boolean>False</sys:Boolean>
      </igPrim:FixedValueConverter.SourceValue>
      <igPrim:FixedValueConverter.DestinationValue>
        <sys:Boolean>True</sys:Boolean>
      </igPrim:FixedValueConverter.DestinationValue>
    </igPrim:FixedValueConverter>

  </igPrim:ValueConverterGroup>

  <igPrim:ValueConverterGroup x:Key="expansionVisibilityToOpacityConverter">
    <!-- when visibility is visible then fully opaque -->
    <igPrim:FixedValueConverter>
      <igPrim:FixedValueConverter.SourceValue>
        <Visibility>Visible</Visibility>
      </igPrim:FixedValueConverter.SourceValue>
      <igPrim:FixedValueConverter.DestinationValue>
        <sys:Double>1</sys:Double>
      </igPrim:FixedValueConverter.DestinationValue>
    </igPrim:FixedValueConverter>

    <!-- otherwise hide it but we still want it to occupy space -->
    <igPrim:FixedValueConverter>
      <igPrim:FixedValueConverter.DestinationValue>
        <sys:Double>0</sys:Double>
      </igPrim:FixedValueConverter.DestinationValue>
    </igPrim:FixedValueConverter>
  </igPrim:ValueConverterGroup>

  <igPrim:ValueConverterGroup x:Key="indicatorTypeToDataTemplateConverter">
    <igPrim:FixedValueConverter DestinationValue="{StaticResource TaskIndicatorTemplate_FlexibleConstraint}">
      <igPrim:FixedValueConverter.SourceValue>
        <igSchedulePrim:TaskIndicatorType>FlexibleConstraint</igSchedulePrim:TaskIndicatorType>
      </igPrim:FixedValueConverter.SourceValue>
    </igPrim:FixedValueConverter>

    <igPrim:FixedValueConverter DestinationValue="{StaticResource TaskIndicatorTemplate_InflexibleConstraint}">
      <igPrim:FixedValueConverter.SourceValue>
        <igSchedulePrim:TaskIndicatorType>InflexibleConstraint</igSchedulePrim:TaskIndicatorType>
      </igPrim:FixedValueConverter.SourceValue>
    </igPrim:FixedValueConverter>

    <igPrim:FixedValueConverter DestinationValue="{StaticResource TaskIndicatorTemplate_ConstraintViolation}">
      <igPrim:FixedValueConverter.SourceValue>
        <igSchedulePrim:TaskIndicatorType>ConstraintViolation</igSchedulePrim:TaskIndicatorType>
      </igPrim:FixedValueConverter.SourceValue>
    </igPrim:FixedValueConverter>

    <igPrim:FixedValueConverter DestinationValue="{StaticResource TaskIndicatorTemplate_Completed}">
      <igPrim:FixedValueConverter.SourceValue>
        <igSchedulePrim:TaskIndicatorType>Completed</igSchedulePrim:TaskIndicatorType>
      </igPrim:FixedValueConverter.SourceValue>
    </igPrim:FixedValueConverter>

    <igPrim:FixedValueConverter DestinationValue="{StaticResource TaskIndicatorTemplate_Notes}">
      <igPrim:FixedValueConverter.SourceValue>
        <igSchedulePrim:TaskIndicatorType>Notes</igSchedulePrim:TaskIndicatorType>
      </igPrim:FixedValueConverter.SourceValue>
    </igPrim:FixedValueConverter>

    <igPrim:FixedValueConverter DestinationValue="{StaticResource TaskIndicatorTemplate_Deadline}">
      <igPrim:FixedValueConverter.SourceValue>
        <igSchedulePrim:TaskIndicatorType>Deadline</igSchedulePrim:TaskIndicatorType>
      </igPrim:FixedValueConverter.SourceValue>
    </igPrim:FixedValueConverter>
  </igPrim:ValueConverterGroup>

  <igPrim:ValueConverterGroup x:Key="OrientationToBorderThicknessConverter">
    <igPrim:FixedValueConverter>
      <igPrim:FixedValueConverter.SourceValue>
        <Orientation>Horizontal</Orientation>
      </igPrim:FixedValueConverter.SourceValue>
      <igPrim:FixedValueConverter.DestinationValue>
        <Thickness>0 1 0 1</Thickness>
      </igPrim:FixedValueConverter.DestinationValue>
    </igPrim:FixedValueConverter>

    <igPrim:FixedValueConverter>
      <igPrim:FixedValueConverter.DestinationValue>
        <Thickness>1 0 1 0</Thickness>
      </igPrim:FixedValueConverter.DestinationValue>
    </igPrim:FixedValueConverter>
  </igPrim:ValueConverterGroup>

  <igPrim:ValueConverterGroup x:Key="OrientationToMinWidthConverter">
    <igPrim:FixedValueConverter>
      <igPrim:FixedValueConverter.SourceValue>
        <Orientation>Vertical</Orientation>
      </igPrim:FixedValueConverter.SourceValue>
      <igPrim:FixedValueConverter.DestinationValue>
        <sys:Double>8</sys:Double>
      </igPrim:FixedValueConverter.DestinationValue>
    </igPrim:FixedValueConverter>
    <igPrim:FixedValueConverter>
      <igPrim:FixedValueConverter.DestinationValue>
        <sys:Double>0</sys:Double>
      </igPrim:FixedValueConverter.DestinationValue>
    </igPrim:FixedValueConverter>
  </igPrim:ValueConverterGroup>

  <igPrim:ValueConverterGroup x:Key="OrientationToMinHeightConverter">
    <igPrim:FixedValueConverter>
      <igPrim:FixedValueConverter.SourceValue>
        <Orientation>Horizontal</Orientation>
      </igPrim:FixedValueConverter.SourceValue>
      <igPrim:FixedValueConverter.DestinationValue>
        <sys:Double>8</sys:Double>
      </igPrim:FixedValueConverter.DestinationValue>
    </igPrim:FixedValueConverter>
    <igPrim:FixedValueConverter>
      <igPrim:FixedValueConverter.DestinationValue>
        <sys:Double>0</sys:Double>
      </igPrim:FixedValueConverter.DestinationValue>
    </igPrim:FixedValueConverter>
  </igPrim:ValueConverterGroup>

  <igPrim:ValueConverterGroup x:Key="HorizontalToVisibilityConverter">
    <igPrim:FixedValueConverter>
      <igPrim:FixedValueConverter.SourceValue>
        <Orientation>Horizontal</Orientation>
      </igPrim:FixedValueConverter.SourceValue>
      <igPrim:FixedValueConverter.DestinationValue>
        <Visibility>Visible</Visibility>
      </igPrim:FixedValueConverter.DestinationValue>
    </igPrim:FixedValueConverter>
    <igPrim:FixedValueConverter>
      <igPrim:FixedValueConverter.DestinationValue>
        <Visibility>Collapsed</Visibility>
      </igPrim:FixedValueConverter.DestinationValue>
    </igPrim:FixedValueConverter>
  </igPrim:ValueConverterGroup>

  <igPrim:ValueConverterGroup x:Key="VerticalToVisibilityConverter">
    <igPrim:FixedValueConverter>
      <igPrim:FixedValueConverter.SourceValue>
        <Orientation>Vertical</Orientation>
      </igPrim:FixedValueConverter.SourceValue>
      <igPrim:FixedValueConverter.DestinationValue>
        <Visibility>Visible</Visibility>
      </igPrim:FixedValueConverter.DestinationValue>
    </igPrim:FixedValueConverter>
    <igPrim:FixedValueConverter>
      <igPrim:FixedValueConverter.DestinationValue>
        <Visibility>Collapsed</Visibility>
      </igPrim:FixedValueConverter.DestinationValue>
    </igPrim:FixedValueConverter>
  </igPrim:ValueConverterGroup>

  <igPrim:ValueConverterGroup x:Key="alternateToBrushConverter">
    <igPrim:FixedValueConverter DestinationValue="{StaticResource CellItemBackgroundBrush}">
      <igPrim:FixedValueConverter.SourceValue>
        <sys:Boolean>False</sys:Boolean>
      </igPrim:FixedValueConverter.SourceValue>
    </igPrim:FixedValueConverter>
    <igPrim:FixedValueConverter DestinationValue="{StaticResource CellItemAltBackgroundBrush}" />
  </igPrim:ValueConverterGroup>

  <igPrim:ValueConverterGroup x:Key="isSummaryToFontWeightConverter">
    <igPrim:FixedValueConverter>
      <igPrim:FixedValueConverter.SourceValue>
        <sys:Boolean>True</sys:Boolean>
      </igPrim:FixedValueConverter.SourceValue>
      <igPrim:FixedValueConverter.DestinationValue>
        <sys:String>Bold</sys:String>
      </igPrim:FixedValueConverter.DestinationValue>
    </igPrim:FixedValueConverter>
    <igPrim:FixedValueConverter>
      <igPrim:FixedValueConverter.DestinationValue>
        <sys:String>Normal</sys:String>
      </igPrim:FixedValueConverter.DestinationValue>
    </igPrim:FixedValueConverter>
  </igPrim:ValueConverterGroup>

  <igPrim:ValueConverterGroup x:Key="isActiveToFontStyleConverter">
    <igPrim:FixedValueConverter>
      <igPrim:FixedValueConverter.SourceValue>
        <sys:Boolean>False</sys:Boolean>
      </igPrim:FixedValueConverter.SourceValue>
      <igPrim:FixedValueConverter.DestinationValue>
        <sys:String>Italic</sys:String>
      </igPrim:FixedValueConverter.DestinationValue>
    </igPrim:FixedValueConverter>
    <igPrim:FixedValueConverter>
      <igPrim:FixedValueConverter.DestinationValue>
        <sys:String>Normal</sys:String>
      </igPrim:FixedValueConverter.DestinationValue>
    </igPrim:FixedValueConverter>
  </igPrim:ValueConverterGroup>

  <igPrim:ValueConverterGroup x:Key="isActiveToCellForegroundConverter">
    <igPrim:FixedValueConverter DestinationValue="{StaticResource CellItemInactiveForegroundBrush}">
      <igPrim:FixedValueConverter.SourceValue>
        <sys:Boolean>False</sys:Boolean>
      </igPrim:FixedValueConverter.SourceValue>
    </igPrim:FixedValueConverter>
    <igPrim:FixedValueConverter DestinationValue="{StaticResource CellItemForegroundBrush}" />
  </igPrim:ValueConverterGroup>

  <igPrim:ValueConverterGroup x:Key="visibilityToNotVisibility">
    <!-- flip the visibility -->
    <igPrim:FixedValueConverter>
      <igPrim:FixedValueConverter.SourceValue>
        <Visibility>Visible</Visibility>
      </igPrim:FixedValueConverter.SourceValue>
      <igPrim:FixedValueConverter.DestinationValue>
        <Visibility>Collapsed</Visibility>
      </igPrim:FixedValueConverter.DestinationValue>
    </igPrim:FixedValueConverter>

    <igPrim:FixedValueConverter>
      <igPrim:FixedValueConverter.DestinationValue>
        <Visibility>Visible</Visibility>
      </igPrim:FixedValueConverter.DestinationValue>
    </igPrim:FixedValueConverter>
  </igPrim:ValueConverterGroup>

  <igPrim:ValueConverterGroup x:Key="nullToVisibility">
    <!-- if null sets visibility to Collapsed -->
    <igPrim:FixedValueConverter SourceValue="{x:Null}">
      <igPrim:FixedValueConverter.DestinationValue>
        <Visibility>Collapsed</Visibility>
      </igPrim:FixedValueConverter.DestinationValue>
    </igPrim:FixedValueConverter>

    <!-- if not null sets visibility to Visible -->
    <igPrim:FixedValueConverter>
      <igPrim:FixedValueConverter.DestinationValue>
        <Visibility>Visible</Visibility>
      </igPrim:FixedValueConverter.DestinationValue>
    </igPrim:FixedValueConverter>

  </igPrim:ValueConverterGroup>

  <igSchedulePrim:ProjectTaskStatesValueConverter x:Key="leftShapeToAreaType" RequiredStates="PlaceholderStart">
    <igSchedulePrim:ProjectTaskStatesValueConverter.DestinationValue>
      <igSchedulePrim:GanttTaskDragAreaType>MoveTaskBar</igSchedulePrim:GanttTaskDragAreaType>
    </igSchedulePrim:ProjectTaskStatesValueConverter.DestinationValue>
    <igSchedulePrim:ProjectTaskStatesValueConverter.FallbackValue>
      <igSchedulePrim:GanttTaskDragAreaType>ChangePercentComplete</igSchedulePrim:GanttTaskDragAreaType>
    </igSchedulePrim:ProjectTaskStatesValueConverter.FallbackValue>
  </igSchedulePrim:ProjectTaskStatesValueConverter>

  <igSchedulePrim:ProjectTaskStatesValueConverter x:Key="rightShapeToAreaType" RequiredStates="PlaceholderFinish">
    <igSchedulePrim:ProjectTaskStatesValueConverter.DestinationValue>
      <igSchedulePrim:GanttTaskDragAreaType>MoveTaskBar</igSchedulePrim:GanttTaskDragAreaType>
    </igSchedulePrim:ProjectTaskStatesValueConverter.DestinationValue>
    <igSchedulePrim:ProjectTaskStatesValueConverter.FallbackValue>
      <igSchedulePrim:GanttTaskDragAreaType>ResizeTaskBarEnd</igSchedulePrim:GanttTaskDragAreaType>
    </igSchedulePrim:ProjectTaskStatesValueConverter.FallbackValue>
  </igSchedulePrim:ProjectTaskStatesValueConverter>

  <igSchedulePrim:ProjectTaskStatesVisibilityConverter x:Key="activeSummaryNotPlaceholderToVisibility" RequiredStates="Active,Summary" DisallowedStates="Placeholder,ProjectSummary" />
  <igSchedulePrim:ProjectTaskStatesVisibilityConverter x:Key="activeProjectSummaryNotPlaceholderToVisibility" RequiredStates="Active,ProjectSummary" DisallowedStates="Placeholder" />
  <igSchedulePrim:ProjectTaskStatesVisibilityConverter x:Key="inactiveToVisibility" DisallowedStates="Active" />
  <igSchedulePrim:ProjectTaskStatesVisibilityConverter x:Key="activeToVisibility" RequiredStates="Active" />
  <igSchedulePrim:ProjectTaskStatesVisibilityConverter x:Key="nonSummaryToVisibility" DisallowedStates="Summary" />
  <igSchedulePrim:ProjectTaskStatesVisibilityConverter x:Key="activeDurationOnlyToVisibility" RequiredStates="Active,PlaceholderDuration" />
  <igSchedulePrim:ProjectTaskStatesVisibilityConverter x:Key="durationOnlyToVisibility" RequiredStates="PlaceholderDuration" />
  <igSchedulePrim:ProjectTaskStatesVisibilityConverter x:Key="activeAutoTaskToVisibility" RequiredStates="Active" DisallowedStates="ManuallyScheduled,Placeholder" />
  <igSchedulePrim:ProjectTaskStatesVisibilityConverter x:Key="activeAutoTaskNonCriticalToVisibility" RequiredStates="Active" DisallowedStates="ManuallyScheduled,Placeholder,DisplayAsCritical" />
  <igSchedulePrim:ProjectTaskStatesVisibilityConverter x:Key="activeCriticalToVisibility" RequiredStates="Active, DisplayAsCritical" DisallowedStates="Placeholder" />
  <igSchedulePrim:ProjectTaskStatesVisibilityConverter x:Key="activeManualTaskToVisibility" RequiredStates="ManuallyScheduled,Active" DisallowedStates="Placeholder" />
  <igSchedulePrim:ProjectTaskStatesVisibilityConverter x:Key="activeManualNonCriticalToVisibility" RequiredStates="ManuallyScheduled,Active" DisallowedStates="Placeholder,DisplayAsCritical" />
  <igSchedulePrim:ProjectTaskStatesVisibilityConverter x:Key="nonStartOnlyActivePlaceholderToVisibility" RequiredStates="Active,Placeholder" DisallowedStates="PlaceholderStart" />
  <igSchedulePrim:ProjectTaskStatesVisibilityConverter x:Key="activeStartOnlyPlaceholderToVisibility" RequiredStates="Active,PlaceholderStart" />
  <igSchedulePrim:ProjectTaskStatesVisibilityConverter x:Key="notStartOnlyToVisibility" DisallowedStates="PlaceholderStart" />
  <igSchedulePrim:ProjectTaskStatesVisibilityConverter x:Key="notFinishOnlyToVisibility" DisallowedStates="PlaceholderFinish" />
  <igSchedulePrim:ProjectTaskStatesVisibilityConverter x:Key="projectSummaryToVisibility" RequiredStates="ProjectSummary" />
  <igSchedulePrim:ProjectTaskStatesVisibilityConverter x:Key="notProjectSummaryToVisibility" DisallowedStates="ProjectSummary" />
  <igSchedulePrim:ProjectTaskStatesVisibilityConverter x:Key="notStartOrFinishOnlyToVisibility" DisallowedStates="PlaceholderFinish,PlaceholderStart" />
  <igSchedulePrim:ProjectTaskStatesVisibilityConverter x:Key="startOnlyToVisibility" RequiredStates="PlaceholderStart" />
  <igSchedulePrim:ProjectTaskStatesVisibilityConverter x:Key="finishOnlyToVisibility" RequiredStates="PlaceholderFinish" />

  <!-- *********************************  SimpleItemsControl Style  ********************************* -->
  <Style TargetType="ItemsControl" x:Key="simpleItemsControlStyle">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="ItemsControl">
          <ItemsPresenter />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- *********************************  indicatorsTooltipContentTemplate  ********************************* -->
  <DataTemplate x:Key="indicatorsTooltipContentTemplate">
    <ItemsControl ItemsSource="{Binding}" MaxWidth="210" Style="{StaticResource simpleItemsControlStyle}">
      <ItemsControl.ItemTemplate>
        <DataTemplate>
          <Grid>
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="Auto" />
              <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <!-- Note, the Content binding is here to work around an issue in SL where this CP is not 
                          getting the DataContext from the containing CP created by the ItemsControl or is setting 
                          its own local value -->
            <ContentPresenter Margin="0,0,3,0" igPrim:XamlHelper.SnapsToDevicePixels="True" VerticalAlignment="Top" Content="{Binding Content, RelativeSource={RelativeSource AncestorType=ContentPresenter}}" ContentTemplate="{Binding IndicatorType, Converter={StaticResource indicatorTypeToDataTemplateConverter}}" />
            <TextBlock Text="{Binding Description}" TextWrapping="Wrap" Grid.Column="1" />
          </Grid>
        </DataTemplate>
      </ItemsControl.ItemTemplate>
    </ItemsControl>
  </DataTemplate>

  <!-- *********************************  ManualTextBlockStyle  ********************************* -->
  <Style TargetType="TextBlock" x:Key="ManualTextBlockStyle">
    <Setter Property="FontStyle" Value="Italic" />
    <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
  </Style>

  <!-- *********************************  Glyph Templates  ********************************* -->
  <DataTemplate x:Key="IncreaseGlyphKey">
    <Path Width="5" Height="3" Data="M2,0 L3,0 L3,0.99999994 L4,0.99999994 L4,2 L5,2 L5,3 L4,3 L1,3 L0,3 L0,2 L1,2 L1,0.99999994 L2,0.99999994 z" Fill="{StaticResource GlyphBorderBrush}" />
  </DataTemplate>
  <DataTemplate x:Key="DecreaseGlyphKey">
    <Path Width="5" Height="3" Data="M0,0 L1,0 L4,0 L5,0 L5,1 L4,1 L4,2 L3,2 L3,3 L2,3 L2,2 L1,2 L1,1 L0,1 z" Fill="{StaticResource GlyphBorderBrush}" />
  </DataTemplate>

  <!-- *********************************  RepeatButton Template  ********************************* -->
  <ControlTemplate x:Key="RepeatButtonTemplate" TargetType="RepeatButton">
    <Grid>
      <VisualStateManager.VisualStateGroups>
        <VisualStateGroup x:Name="CommonStates">
          <VisualState x:Name="Normal" />
          <VisualState x:Name="MouseOver">
            <Storyboard>
              <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BaseShape" Storyboard.TargetProperty="Fill">
                <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonHoverBackgroundBrush}" />
              </ObjectAnimationUsingKeyFrames>
              <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BaseShape" Storyboard.TargetProperty="Stroke">
                <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonHoverBorderBrush}" />
              </ObjectAnimationUsingKeyFrames>
              <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ButtonHighlight" Storyboard.TargetProperty="Opacity">
                <SplineDoubleKeyFrame KeyTime="0" Value="1" />
              </DoubleAnimationUsingKeyFrames>
            </Storyboard>
          </VisualState>
          <VisualState x:Name="Pressed">
            <Storyboard>
              <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BaseShape" Storyboard.TargetProperty="Fill">
                <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonPressedBackgroundBrush}" />
              </ObjectAnimationUsingKeyFrames>
              <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BaseShape" Storyboard.TargetProperty="Stroke">
                <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonPressedBorderBrush}" />
              </ObjectAnimationUsingKeyFrames>
            </Storyboard>
          </VisualState>
          <VisualState x:Name="Disabled">
            <Storyboard>
              <DoubleAnimationUsingKeyFrames Storyboard.TargetName="DisabledVisualElement" Storyboard.TargetProperty="Opacity">
                <SplineDoubleKeyFrame KeyTime="0" Value=".55" />
              </DoubleAnimationUsingKeyFrames>
            </Storyboard>
          </VisualState>
        </VisualStateGroup>
        <VisualStateGroup x:Name="FocusStates">
          <VisualState x:Name="Focused" />
          <VisualState x:Name="Unfocused" />
        </VisualStateGroup>
      </VisualStateManager.VisualStateGroups>
      <Rectangle x:Name="BaseShape" Fill="{StaticResource ButtonBackgroundBrush}" Stroke="{StaticResource ButtonBorderBrush}" StrokeThickness="1" />
      <Rectangle x:Name="ButtonHighlight" Margin="1" Stroke="{StaticResource ButtonHoverHighlightBorderBrush}" StrokeThickness="1" Grid.ColumnSpan="2" Opacity="0" />
      <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="{TemplateBinding Padding}" />
      <Rectangle x:Name="DisabledVisualElement" Fill="{StaticResource DisabledBackgroundBrush}" IsHitTestVisible="false" Opacity="0" />
    </Grid>
  </ControlTemplate>

  <!-- *********************************  SpinButton Style  ********************************* -->
  <Style x:Key="SpinButtonStyle" TargetType="RepeatButton">
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="Padding" Value="3,1" />
    <Setter Property="IsTabStop" Value="False" />
    <Setter Property="igPrim:XamlHelper.Focusable" Value="False" />
    <Setter Property="Template" Value="{StaticResource RepeatButtonTemplate}" />
  </Style>

  <!-- *********************************  DropDownButton Style  ********************************* -->
  <Style x:Key="DropDownButtonStyle" TargetType="ToggleButton">
    <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
    <Setter Property="Background" Value="{StaticResource ButtonBackgroundBrush}" />
    <Setter Property="BorderBrush" Value="{StaticResource ButtonBorderBrush}" />
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="Padding" Value="2" />
    <Setter Property="Cursor" Value="Hand" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="ToggleButton">
          <Grid>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="MouseOver">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BaseShape" Storyboard.TargetProperty="Background">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonHoverBackgroundBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BaseShape" Storyboard.TargetProperty="BorderBrush">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonHoverBorderBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ButtonHighlight" Storyboard.TargetProperty="Opacity">
                      <SplineDoubleKeyFrame KeyTime="0" Value="1" />
                    </DoubleAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Pressed">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BaseShape" Storyboard.TargetProperty="Background">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonPressedBackgroundBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BaseShape" Storyboard.TargetProperty="BorderBrush">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonPressedBorderBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Disabled">
                  <Storyboard>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="DisabledVisualElement" Storyboard.TargetProperty="Opacity">
                      <SplineDoubleKeyFrame KeyTime="0" Value=".55" />
                    </DoubleAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="CheckStates">
                <VisualState x:Name="Checked">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="checkedBd">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Unchecked" />
              </VisualStateGroup>
              <VisualStateGroup x:Name="FocusStates">
                <VisualState x:Name="Focused" />
                <VisualState x:Name="Unfocused" />
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Border x:Name="BaseShape" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" />
            <Rectangle x:Name="ButtonHighlight" Margin="1" RadiusX="2" RadiusY="2" Stroke="{StaticResource ButtonHoverHighlightBorderBrush}" StrokeThickness="1" Grid.ColumnSpan="2" Opacity="0" />
            <Border x:Name="checkedBd" BorderBrush="{StaticResource ButtonPressedBorderBrush}" BorderThickness="1" Background="{StaticResource ButtonPressedBackgroundBrush}" Visibility="Collapsed" />
            <Path x:Name="BtnArrowForeground" Stretch="Fill" Height="5" Width="9" Data="M0,0 L1,0 L8,0 L9,0 L9,1 L8,1 L8,2 L7,2 L7,3 L6,3 L6,4 L5,4 L5,5 L4,5 L4,4 L3,4 L3,3 L2,3 L2,2 L1,2 L1,1 L0,1 z" Fill="{StaticResource GlyphBorderBrush}" />
            <Rectangle x:Name="DisabledVisualElement" Fill="{StaticResource DisabledBackgroundBrush}" IsHitTestVisible="false" Opacity="0" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- *********************************  Style  ********************************* -->
  <Style x:Key="expansionIndicatorStyle" TargetType="igPrim:ExpansionIndicator">
    <Setter Property="Background" Value="{StaticResource ExpansionIndicatorBackgroundBrush}" />
    <Setter Property="BorderBrush" Value="{StaticResource ExpansionIndicatorBorderBrush}" />
    <Setter Property="Foreground" Value="{StaticResource GlyphBorderBrush}" />
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="Margin" Value="3" />
    <Setter Property="Padding" Value="1" />
    <Setter Property="Width" Value="11" />
    <Setter Property="Height" Value="11" />
    <Setter Property="HorizontalAlignment" Value="Center" />
    <Setter Property="VerticalAlignment" Value="Center" />
    <Setter Property="IsTabStop" Value="False" />
    <Setter Property="igPrim:XamlHelper.Focusable" Value="False" />
    <Setter Property="igPrim:XamlHelper.SnapsToDevicePixels" Value="True" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igPrim:ExpansionIndicator">
          <Grid Background="{StaticResource TransparentBrush}">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="MouseOver" />
                <VisualState x:Name="Disabled" />
              </VisualStateGroup>

              <VisualStateGroup x:Name="ExpansionStates">
                <VisualState x:Name="Expanded" />
                <VisualState x:Name="Collapsed" />
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>

            <Border x:Name="ExpansionIndicator" Opacity="{Binding Path=IndicatorVisibility, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource expansionVisibilityToOpacityConverter}}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}">
              <Grid>
                <Line x:Name="verticalLine" Stretch="Fill" X1="2.5" X2="2.5" Y1="0" Y2="5" Stroke="{TemplateBinding Foreground}" Visibility="{Binding Path=IsExpanded, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource notBoolToVisibility}}" />
                <Line x:Name="horizontalLine" Stretch="Fill" X1="0" X2="5" Y1="2.5" Y2="2.5" Stroke="{TemplateBinding Foreground}" />
              </Grid>
            </Border>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- ************************ Grid Element Styles  ************************
*******************************************************************************   -->

  <!-- *********************************  CellControl Style  ********************************* -->
  <Style x:Key="CellControlStyle" TargetType="ig:CellControl">
    <Setter Property="FontSize" Value="11" />
    <Setter Property="VerticalContentAlignment" Value="Center" />
    <Setter Property="Background" Value="{StaticResource CellItemBackgroundBrush}" />
    <Setter Property="BorderBrush" Value="{StaticResource CellItemBorderBrush}" />
    <Setter Property="BorderThickness" Value="0,0,1,1" />
    <Setter Property="HorizontalContentAlignment" Value="Left" />
    <Setter Property="Padding" Value="5" />
    <Setter Property="FontWeight" Value="{Binding Path=Cell.Row.Data.IsSummary, RelativeSource={RelativeSource Self}, Converter={StaticResource isSummaryToFontWeightConverter}}" />
    <Setter Property="FontStyle" Value="{Binding Path=Cell.Row.Data.IsActive, RelativeSource={RelativeSource Self}, Converter={StaticResource isActiveToFontStyleConverter}}" />
    <Setter Property="Foreground" Value="{Binding Path=Cell.Row.Data.IsActive, RelativeSource={RelativeSource Self}, Converter={StaticResource isActiveToCellForegroundConverter}}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="ig:CellControl">
          <Grid>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="MouseOver">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00" Storyboard.TargetName="AltMouseOver" Storyboard.TargetProperty="Fill">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{StaticResource CellItemHoverBackgroundBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Alternate" />
              </VisualStateGroup>
              <VisualStateGroup x:Name="SelectedStates">
                <VisualState x:Name="NotSelected" />
                <VisualState x:Name="Selected">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="CellSelected">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="ActiveStates">
                <VisualState x:Name="InActive" />
                <VisualState x:Name="Active">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="CellActive">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="EditingStates">
                <VisualState x:Name="Editing" />
                <VisualState x:Name="NotEditing" />
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Border x:Name="Root" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" />
            <Rectangle x:Name="AltMouseOver" Margin="{TemplateBinding BorderThickness}" />
            <Border x:Name="CellSelected" Background="{StaticResource CellItemSelectedBackgroundBrush}" Visibility="Collapsed" Margin="{TemplateBinding BorderThickness}" />
            <Border x:Name="CellActive" Background="{StaticResource CellItemActiveBackgroundBrush}" BorderBrush="{StaticResource CellItemActiveBorderBrush}" BorderThickness="2" Visibility="Collapsed" />
            <ContentPresenter VerticalAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- *********************************  HeaderCellControl Style  ********************************* -->
  <Style x:Key="HeaderCellControlStyle" TargetType="igPrim:HeaderCellControl">
    <Setter Property="FontSize" Value="11" />
    <Setter Property="Background" Value="{StaticResource HeaderCellBackgroundBrush}" />
    <Setter Property="Foreground" Value="{StaticResource HeaderCellForegroundBrush}" />
    <Setter Property="BorderBrush" Value="{StaticResource HeaderCellBorderBrush}" />
    <Setter Property="BorderThickness" Value="0,0,1,1" />
    <Setter Property="HorizontalContentAlignment" Value="Left" />
    <Setter Property="Padding" Value="8,4" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igPrim:HeaderCellControl">
          <igPrim:SimpleClickableContainer x:Name="NormalFill" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0,0,1,1">
            <igBase:Commanding.Commands>
              <igBase:CommandSourceCollection>
                <ig:XamGridColumnCommandSource CommandType="Select" EventName="SimpleClick" />
                <ig:XamGridColumnCommandSource CommandType="SortToggle" EventName="SimpleClick" />
              </igBase:CommandSourceCollection>
            </igBase:Commanding.Commands>
            <Grid x:Name="Bd">
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition>
                </ColumnDefinition>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
              </Grid.ColumnDefinitions>
              <igPrim:HeaderDropDownControl Padding="0" x:Name="HiddenLeftAdjacentColumnsElement" Visibility="Collapsed">
                <ToolTipService.ToolTip>
                  <ToolTip Content="{Binding Cell.Column.ColumnLayout.Grid.ColumnChooserSettings.HiddenColumnIndicatorToolTipText, RelativeSource={RelativeSource TemplatedParent}}" />
                </ToolTipService.ToolTip>
                <igPrim:HeaderDropDownControl.OpenButtonContent>
                  <Rectangle x:Name="hiddenColumnIndicator" Fill="{StaticResource HiddenColumnIndicatorBackgroundBrush}" Width="10" HorizontalAlignment="Left" />
                </igPrim:HeaderDropDownControl.OpenButtonContent>
                <Grid>
                  <Border x:Name="ColumnChooserBd" MaxHeight="200" Background="{StaticResource PopupBackgroundBrush}" BorderBrush="{StaticResource PopupBorderBrush}" BorderThickness="1" CornerRadius="3" Padding="1">
                    <Grid>
                      <Grid.ColumnDefinitions>
                        <ColumnDefinition MinWidth="25" MaxWidth="25" />
                        <ColumnDefinition />
                      </Grid.ColumnDefinitions>
                      <Grid.RowDefinitions>
                        <RowDefinition />
                        <RowDefinition Height="Auto" />
                      </Grid.RowDefinitions>
                      <Border Grid.RowSpan="2" BorderBrush="{StaticResource HeaderCellBorderBrush}" BorderThickness="0,0,1,0" />
                      <ListBox DataContext="{x:Null}" ItemsSource="{Binding Cell.ColumnsHiddenToLeft, RelativeSource={RelativeSource TemplatedParent}}" Background="{StaticResource TransparentBrush}" BorderThickness="0" Padding="0" Margin="0" Grid.ColumnSpan="2">
                        <ListBox.ItemTemplate>
                          <DataTemplate>
                            <TextBlock Text="{Binding DisplayNameResolved}" />
                          </DataTemplate>
                        </ListBox.ItemTemplate>
                        <igBase:Commanding.Commands>
                          <igBase:CommandSourceCollection>
                            <ig:XamGridColumnCommandSource ParameterBinding="{Binding SelectedItem}" EventName="SelectionChanged" CommandType="Show" />
                            <igPrim:XamGridPopupCommandSource CommandType="ClosePopup" EventName="SelectionChanged" />
                          </igBase:CommandSourceCollection>
                        </igBase:Commanding.Commands>
                        <ListBox.Resources>
                          <Style TargetType="ScrollViewer" BasedOn="{StaticResource ScrollViewerStyle}" />
                        </ListBox.Resources>
                      </ListBox>
                      <StackPanel Background="{StaticResource TransparentBrush}" Grid.Row="1" Grid.ColumnSpan="2">
                        <Path Data="M132,227 L443,227" Width="165" Height="1" Stroke="{StaticResource CellItemBorderBrush}" StrokeThickness="1" HorizontalAlignment="Right" StrokeDashArray="2 2" Stretch="Fill" Margin="33,0,0,0" />
                        <Button Margin="0,1,0,0">
                          <igBase:Commanding.Commands>
                            <igBase:CommandSourceCollection>
                              <ig:XamGridColumnChooserCommandSource CommandType="Open" EventName="Click" />
                              <igPrim:XamGridPopupCommandSource CommandType="ClosePopup" EventName="Click" />
                            </igBase:CommandSourceCollection>
                          </igBase:Commanding.Commands>
                          <TextBlock Text="{Binding Cell.Column.ColumnLayout.Grid.ColumnChooserSettings.ColumnChooserDisplayText, RelativeSource={RelativeSource TemplatedParent}}" Foreground="{StaticResource HeaderCellForegroundBrush}" />
                        </Button>
                      </StackPanel>
                    </Grid>
                  </Border>
                </Grid>
              </igPrim:HeaderDropDownControl>
              <ContentPresenter Grid.Column="1" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
              <Grid Grid.Column="2" x:Name="SortAndPinIndicators" HorizontalAlignment="Right" Margin="0,0,5,0" Background="{TemplateBinding Background}">
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="Auto" />
                  <ColumnDefinition Width="Auto" />
                  <ColumnDefinition Width="Auto" />
                  <ColumnDefinition Width="Auto" />
                  <ColumnDefinition Width="Auto" />
                  <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <Path x:Name="SortedDescending" HorizontalAlignment="Right" Margin="3,0" VerticalAlignment="Center" Data="M 0 0 L 4 4 L 8 0 Z" Fill="{StaticResource HeaderCellGlyphBrush}" Visibility="Collapsed" />
                <Path x:Name="SortedAscending" HorizontalAlignment="Right" Margin="3,0" VerticalAlignment="Center" Data="M0,4 L8,4 L4,0 z" Fill="{StaticResource HeaderCellGlyphBrush}" Visibility="Collapsed" />
                <Grid x:Name="PinnedIndicator" Grid.Column="3" Background="{StaticResource TransparentBrush}" Cursor="Hand" Visibility="Collapsed">
                  <Path Width="7" Height="10" Margin="3,0" Data="M 6,4 C6,4 8,4 8,4 8,4 8,9 8,9 8,9 6,9 6,9 6,9 6,4 6,4 zM 5,3 C5,3 5,9 5,9 5,9 4,9 4,9 4,9 4,10 4,10 4,10 7,10 7,10 7,10 7,13 7,13 7,13 8,13 8,13 8,13 8,10 8,10 8,10 11,10 11,10 11,10 11,9 11,9 11,9 10,9 10,9 10,9 10,3 10,3 10,3 5,3 5,3 z" Fill="{StaticResource HeaderCellGlyphBrush}" Stretch="Fill" />
                  <igBase:Commanding.Command>
                    <ig:XamGridColumnCommandSource CommandType="Unfix" EventName="MouseLeftButtonDown">
                    </ig:XamGridColumnCommandSource>
                  </igBase:Commanding.Command>
                </Grid>
                <Grid x:Name="UnpinnedIndicator" Grid.Column="3" Background="{StaticResource TransparentBrush}" Cursor="Hand" Visibility="Collapsed">
                  <Path Width="10" Height="7" Margin="3,0" Data="M 12,7 C12,7 12,9 12,9 12,9 7,9 7,9 7,9 7,7 7,7 7,7 12,7 12,7 zM 13,6 C13,6 7,6 7,6 7,6 7,5 7,5 7,5 6,5 6,5 6,5 6,8 6,8 6,8 3,8 3,8 3,8 3,9 3,9 3,9 6,9 6,9 6,9 6,12 6,12 6,12 7,12 7,12 7,12 7,11 7,11 7,11 13,11 13,11 13,11 13,6 13,6 z" Fill="{StaticResource HeaderCellGlyphBrush}" Stretch="Fill" />
                  <igBase:Commanding.Command>
                    <ig:XamGridColumnCommandSource CommandType="Fix" EventName="MouseLeftButtonDown">
                    </ig:XamGridColumnCommandSource>
                  </igBase:Commanding.Command>
                </Grid>
                <igPrim:HeaderDropDownControl x:Name="SummaryHeaderDropDownControl" Background="{StaticResource TransparentBrush}" Visibility="Collapsed" Grid.Column="1">
                  <igPrim:HeaderDropDownControl.OpenButtonContent>
                    <Path Data="M 0,0 C0,0 5,0 5,0 5,0 5,1 5,1 5,1 2,1 2,1 2,1 4,3.5 4,3.5 4,3.5 2,6 2,6 2,6 5,6 5,6 5,6 5,7 5,7 5,7 0,7 0,7 0,7 0,6 0,6 0,6 2,3.5625 2,3.5625 2,3.5625 0,1 0,1 0,1 0,0 0,0 z" Fill="{StaticResource HeaderCellGlyphBrush}" Width="5" Height="7" x:Name="summarySigmaIcon" StrokeThickness="0" />
                  </igPrim:HeaderDropDownControl.OpenButtonContent>
                  <igPrim:SummarySelectionControl Cell="{Binding Path=Cell,RelativeSource={RelativeSource TemplatedParent}}">
                  </igPrim:SummarySelectionControl>
                </igPrim:HeaderDropDownControl>
                <igPrim:HeaderDropDownControl AllowResizing="true" x:Name="FilterHeaderDropDownControl" Visibility="Collapsed" Background="{StaticResource TransparentBrush}" Grid.Column="2">
                  <igPrim:HeaderDropDownControl.OpenButtonContent>
                    <Grid Width="11" Height="8">
                      <Path x:Name="clearFilterGlyphStroke" Width="11" Height="8" Data="M 0,0 C0,0 11,0 11,0 11,0 7,4 7,4 7,4 7,8 7,8 7,8 4,8 4,8 4,8 4,4 4,4 4,4 0,0 0,0 z" Stretch="Fill" Fill="{StaticResource FilterOperatorGlyphBrush}" />
                      <Path x:Name="clearFilterGlyphFill" Width="7" Height="6" HorizontalAlignment="Center" VerticalAlignment="Center" Stretch="Fill" Data="M 0,0 C0,0 7,0 7,0 7,0 4,3 4,3 4,3 4,6 4,6 4,6 3,6 3,6 3,6 3,3 3,3 3,3 0,0 0,0 z" Fill="{StaticResource HeaderCellGlyphInnerBrush}" />
                      <Path x:Name="redFilterGlyphFill" Width="7" Height="6" HorizontalAlignment="Center" VerticalAlignment="Center" Stretch="Fill" Data="M 0,0 C0,0 7,0 7,0 7,0 4,3 4,3 4,3 4,6 4,6 4,6 3,6 3,6 3,6 3,3 3,3 3,3 0,0 0,0 z" Fill="{StaticResource FilterOperatorGlyphBrush}" />
                    </Grid>
                  </igPrim:HeaderDropDownControl.OpenButtonContent>
                  <igPrim:FilterSelectorControl Height="370" Width="250" MinWidth="250" MinHeight="370" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch" Cell="{Binding Path=Cell,RelativeSource={RelativeSource TemplatedParent}}">
                  </igPrim:FilterSelectorControl>
                </igPrim:HeaderDropDownControl>
                <Grid x:Name="VisibilityToggleButton" Background="{StaticResource TransparentBrush}" Width="14" Visibility="Collapsed" Grid.Column="4" Cursor="Hand">
                  <Path Width="8" Height="7" Data="M 7,0 C7,0 7,1 7,1 7,1 6,1 6,1 6,1 6,2 6,2 6,2 5,2 5,2 5,2 5,3 5,3 5,3 4,3 4,3 4,3 4,4 4,4 4,4 5,4 5,4 5,4 5,5 5,5 5,5 6,5 6,5 6,5 6,6 6,6 6,6 7,6 7,6 7,6 7,7 7,7 7,7 8,7 8,7 8,7 8,5 8,5 8,5 7,5 7,5 7,5 7,4 7,4 7,4 6,4 6,4 6,4 6,3 6,3 6,3 7,3 7,3 7,3 7,2 7,2 7,2 8,2 8,2 8,2 8,0 8,0 8,0 7,0 7,0 zM 0,3 C0,3 0,4 0,4 0,4 1,4 1,4 1,4 1,5 1,5 1,5 2,5 2,5 2,5 2,6 2,6 2,6 3,6 3,6 3,6 3,7 3,7 3,7 4,7 4,7 4,7 4,6 4,6 4,6 4,5 4,5 4,5 3,5 3,5 3,5 3,4 3,4 3,4 2,4 2,4 2,4 2,3 2,3 2,3 3,3 3,3 3,3 3,2 3,2 3,2 4,2 4,2 4,2 4,1 4,1 4,1 4,0 4,0 4,0 3,0 3,0 3,0 3,1 3,1 3,1 2,1 2,1 2,1 2,2 2,2 2,2 1,2 1,2 1,2 1,3 1,3 1,3 0,3 0,3 z" Fill="{StaticResource HeaderCellGlyphBrush}" />
                  <igBase:Commanding.Command>
                    <ig:XamGridColumnCommandSource CommandType="Hide" EventName="MouseLeftButtonDown" />
                  </igBase:Commanding.Command>
                </Grid>
              </Grid>
              <igPrim:HeaderDropDownControl Padding="0" Visibility="Collapsed" x:Name="HiddenRightAdjacentColumnsElement" Grid.Column="4">
                <ToolTipService.ToolTip>
                  <ToolTip Content="{Binding Cell.Column.ColumnLayout.Grid.ColumnChooserSettings.HiddenColumnIndicatorToolTipText, RelativeSource={RelativeSource TemplatedParent}}" />
                </ToolTipService.ToolTip>
                <igPrim:HeaderDropDownControl.OpenButtonContent>
                  <Rectangle Fill="{StaticResource HiddenColumnIndicatorBackgroundBrush}" Width="10" HorizontalAlignment="Right" />
                </igPrim:HeaderDropDownControl.OpenButtonContent>
                <Grid>
                  <Border x:Name="ColumnChooserBdRight" MaxHeight="200" Background="{StaticResource PopupBackgroundBrush}" BorderBrush="{StaticResource PopupBorderBrush}" BorderThickness="1" CornerRadius="3" Padding="1">
                    <Grid>
                      <Grid.ColumnDefinitions>
                        <ColumnDefinition MinWidth="24" MaxWidth="24" />
                        <ColumnDefinition />
                      </Grid.ColumnDefinitions>
                      <Grid.RowDefinitions>
                        <RowDefinition />
                        <RowDefinition Height="Auto" />
                      </Grid.RowDefinitions>
                      <Border Grid.RowSpan="2" BorderBrush="{StaticResource HeaderCellBorderBrush}" BorderThickness="0,0,1,0" />
                      <ListBox DataContext="{x:Null}" ItemsSource="{Binding Cell.ColumnsHiddenToRight, RelativeSource={RelativeSource TemplatedParent}}" Background="{StaticResource TransparentBrush}" BorderThickness="0" Padding="0" Margin="0" Grid.ColumnSpan="2">
                        <ListBox.ItemTemplate>
                          <DataTemplate>
                            <TextBlock Text="{Binding DisplayNameResolved}" />
                          </DataTemplate>
                        </ListBox.ItemTemplate>
                        <igBase:Commanding.Commands>
                          <igBase:CommandSourceCollection>
                            <ig:XamGridColumnCommandSource ParameterBinding="{Binding SelectedItem}" EventName="SelectionChanged" CommandType="Show" />
                            <igPrim:XamGridPopupCommandSource CommandType="ClosePopup" EventName="SelectionChanged" />
                          </igBase:CommandSourceCollection>
                        </igBase:Commanding.Commands>
                        <ListBox.Resources>
                          <Style TargetType="ScrollViewer" BasedOn="{StaticResource ScrollViewerStyle}" />
                        </ListBox.Resources>
                      </ListBox>
                      <StackPanel Background="{StaticResource TransparentBrush}" Grid.Row="1" Grid.ColumnSpan="2">
                        <Path Data="M132,227 L443,227" Width="165" Height="1" Stroke="{StaticResource CellItemBorderBrush}" StrokeThickness="1" HorizontalAlignment="Right" StrokeDashArray="2 2" Stretch="Fill" Margin="33,0,0,0" />
                        <Button Margin="0,1,0,0">
                          <igBase:Commanding.Commands>
                            <igBase:CommandSourceCollection>
                              <ig:XamGridColumnChooserCommandSource CommandType="Open" EventName="Click" />
                              <igPrim:XamGridPopupCommandSource CommandType="ClosePopup" EventName="Click" />
                            </igBase:CommandSourceCollection>
                          </igBase:Commanding.Commands>
                          <TextBlock Text="{Binding Cell.Column.ColumnLayout.Grid.ColumnChooserSettings.ColumnChooserDisplayText, RelativeSource={RelativeSource TemplatedParent}}" Foreground="{StaticResource HeaderCellForegroundBrush}" />
                        </Button>
                      </StackPanel>
                    </Grid>
                  </Border>
                </Grid>
              </igPrim:HeaderDropDownControl>
            </Grid>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="MouseOver">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.001" Storyboard.TargetName="Bd" Storyboard.TargetProperty="Background">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{StaticResource HeaderCellHoverBackgroundBrush}">
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames BeginTime="0" Storyboard.TargetName="NormalFill" Storyboard.TargetProperty="BorderBrush">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{StaticResource HeaderCellHoverBorderBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.001" Storyboard.TargetName="SortAndPinIndicators" Storyboard.TargetProperty="Background">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{StaticResource HeaderCellHoverBackgroundBrush}">
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Moving">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames BeginTime="0" Storyboard.TargetName="NormalFill" Storyboard.TargetProperty="Background">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{StaticResource HeaderCellMovingBackgroundBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames BeginTime="0" Storyboard.TargetName="NormalFill" Storyboard.TargetProperty="BorderBrush">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{StaticResource HeaderCellMovingBackgroundBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames BeginTime="0" Storyboard.TargetName="NormalFill" Storyboard.TargetProperty="BorderThickness">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Thickness>
                            0,1
                          </Thickness>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="FixedIndicatorStates">
                <VisualState x:Name="NotFixable" />
                <VisualState x:Name="Pinned">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="PinnedIndicator" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>
                            Visible
                          </Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Unpinned">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="UnpinnedIndicator" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>
                            Visible
                          </Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="SummaryStates">
                <VisualState x:Name="Summable">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="SummaryHeaderDropDownControl" Storyboard.TargetProperty="(UIElement.Visibility)">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>
                            Visible
                          </Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Unsummable">
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="SortedStates">
                <VisualState x:Name="NotSorted">
                </VisualState>
                <VisualState x:Name="Ascending">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="SortedAscending" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>
                            Visible
                          </Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Descending">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="SortedDescending" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>
                            Visible
                          </Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="HeaderFilterStates">
                <VisualState x:Name="NoIcon">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="FilterHeaderDropDownControl" Storyboard.TargetProperty="(UIElement.Visibility)">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>
                            Collapsed
                          </Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="FilterIcon">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="FilterHeaderDropDownControl" Storyboard.TargetProperty="(UIElement.Visibility)">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>
                            Visible
                          </Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="HeaderFilterAppliedStates">
                <VisualState x:Name="NotFiltered">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="clearFilterGlyphFill" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>
                            Visible
                          </Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="redFilterGlyphFill" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>
                            Collapsed
                          </Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Filtered">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="clearFilterGlyphFill" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>
                            Collapsed
                          </Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="redFilterGlyphFill" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>
                            Visible
                          </Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="VisibilityIconStates">
                <VisualState x:Name="VisibilityIconHidden" />
                <VisualState x:Name="VisibilityIconVisible">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="VisibilityToggleButton" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>
                            Visible
                          </Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="LeftAdjacentColumnHiddenStates">
                <VisualState x:Name="NoHiddenLeftAdjacentColumns" />
                <VisualState x:Name="HiddenLeftAdjacentColumns">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HiddenLeftAdjacentColumnsElement" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>
                            Visible
                          </Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="RightAdjacentColumnHiddenStates">
                <VisualState x:Name="NoHiddenRightAdjacentColumns" />
                <VisualState x:Name="LastVisibleColumnWithHiddenRightAdjacentColumns">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HiddenRightAdjacentColumnsElement" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>
                            Visible
                          </Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
          </igPrim:SimpleClickableContainer>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="igPrim:HeaderCellControl" BasedOn="{StaticResource HeaderCellControlStyle}" />

  <!-- *********************************  RowSelectorHeaderCellControl Style  ********************************* -->
  <Style x:Key="RowSelectorHeaderCellControlStyle" TargetType="igPrim:RowSelectorHeaderCellControl">
    <Setter Property="FontSize" Value="11" />
    <Setter Property="Background" Value="{StaticResource HeaderCellBackgroundBrush}" />
    <Setter Property="Foreground" Value="{StaticResource HeaderCellForegroundBrush}" />
    <Setter Property="BorderBrush" Value="{StaticResource HeaderCellBorderBrush}" />
    <Setter Property="BorderThickness" Value="0,0,1,1" />
    <Setter Property="HorizontalContentAlignment" Value="Left" />
    <Setter Property="Padding" Value="4,0" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igPrim:RowSelectorHeaderCellControl">
          <Grid>
            <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" x:Name="NormalFill" />
            <ContentPresenter VerticalAlignment="{TemplateBinding VerticalContentAlignment}" d:LayoutOverrides="Width" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="igPrim:RowSelectorHeaderCellControl" BasedOn="{StaticResource RowSelectorHeaderCellControlStyle}" />

  <!-- *********************************  RowSelectorCellControl Style  ********************************* -->
  <Style x:Key="RowSelectorCellControlStyle" TargetType="igPrim:RowSelectorCellControl">
    <Setter Property="HorizontalContentAlignment" Value="Center" />
    <Setter Property="VerticalContentAlignment" Value="Center" />
    <Setter Property="Foreground" Value="{StaticResource CellItemForegroundBrush}" />
    <Setter Property="Background" Value="{StaticResource CellItemBackgroundBrush}" />
    <Setter Property="BorderBrush" Value="{StaticResource CellItemBorderBrush}" />
    <Setter Property="BorderThickness" Value="0,0,1,1" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igPrim:RowSelectorCellControl">
          <Grid>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="MouseOver">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="hoverBd" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Alternate" />
              </VisualStateGroup>
              <VisualStateGroup x:Name="ActiveStates">
                <VisualState x:Name="InActive" />
                <VisualState x:Name="Active">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ActiveIndicator" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>
                            Visible
                          </Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Editing">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="EditingIndicator" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="SelectedStates">
                <VisualState x:Name="NotSelected" />
                <VisualState x:Name="Selected">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="selectedBd" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="ValidationStates">
                <VisualState x:Name="Valid" />
                <VisualState x:Name="InvalidFocused" />
                <VisualState x:Name="InvalidUnfocused" />
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Border x:Name="Root" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" />
            <Border x:Name="selectedBd" Background="{StaticResource RowSelectorActiveBackgroundBrush}" BorderThickness="{TemplateBinding BorderThickness}" Visibility="Collapsed" />
            <Border x:Name="hoverBd" Background="{StaticResource RowSelectorHoverBackgroundBrush}" BorderBrush="{StaticResource RowSelectorHoverBorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Visibility="Collapsed" />
            <Path x:Name="ActiveIndicator" Visibility="Collapsed" Fill="{StaticResource RowSelectorActiveIndicatorBackgroundBrush}" Data="M0,0 L0,10 L5,5 z" VerticalAlignment="Center" HorizontalAlignment="Left" />
            <Path x:Name="EditingIndicator" Visibility="Collapsed" Width="6" Height="12" Data="M 2.284,10.299 C2.284,10.299 2.5,10.434 2.5,10.434 2.5,10.434 2.699,9.991 2.699,9.991 2.699,9.991 3.5,9.391 3.5,9.391 3.5,9.391 3.054,9.193 3.054,9.193 3.054,9.193 6,2.608 6,2.608 6,2.608 6,0.521 6,0.521 6,0.521 3.5,0 3.5,0 3.5,0 3,1.565 3,1.565 3,1.565 0.360,7.987 0.360,7.987 0.360,7.987 0,7.826 0,7.826 0,7.826 0,8.869 0,8.869 0,8.869 0,12 0,12 0,12 2.284,10.299 2.284,10.299 z" Margin="3,0,0,0" Stretch="Fill" HorizontalAlignment="Left" Fill="{StaticResource RowSelectorEditingIndicatorBackgroundBrush}" />
            <ContentPresenter VerticalAlignment="{TemplateBinding VerticalContentAlignment}" d:LayoutOverrides="Width" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="igPrim:RowSelectorCellControl" BasedOn="{StaticResource RowSelectorCellControlStyle}" />

  <!-- ************************ Control Styles  ************************
********************************************************************************   -->

  <!-- *********************************  SpinEditorBase Style  ********************************* -->
  <Style x:Key="SpinEditorBaseStyle" TargetType="igEditorPrim:SpinEditorBase">
    <Setter Property="Background" Value="{StaticResource SpinEditorBaseBackgroundBrush}" />
    <Setter Property="BorderBrush" Value="{StaticResource SpinEditorBaseBorderBrush}" />
    <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="VerticalContentAlignment" Value="Center" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igEditorPrim:SpinEditorBase">
          <igPrim:ValidationDecorator>
            <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}" igPrim:XamlHelper.SnapsToDevicePixels="true">
              <Grid igPrim:XamlHelper.SnapsToDevicePixels="{TemplateBinding igPrim:XamlHelper.SnapsToDevicePixels}">
                <Grid.ColumnDefinitions>
                  <ColumnDefinition />
                  <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <igPrim:EmbeddedTextBox x:Name="TextBox" Padding="2" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                <Grid Visibility="{TemplateBinding SpinButtonVisibility}" Grid.Column="1">
                  <Grid.RowDefinitions>
                    <RowDefinition />
                    <RowDefinition />
                  </Grid.RowDefinitions>
                  <RepeatButton Style="{StaticResource SpinButtonStyle}" ContentTemplate="{StaticResource IncreaseGlyphKey}" Command="{TemplateBinding SpinUpCommand}" Grid.Row="0" />
                  <RepeatButton Style="{StaticResource SpinButtonStyle}" ContentTemplate="{StaticResource DecreaseGlyphKey}" Command="{TemplateBinding SpinDownCommand}" Grid.Row="1" />
                </Grid>
              </Grid>
            </Border>
          </igPrim:ValidationDecorator>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- *********************************  ManualDateTimeEditor Style  ********************************* -->
  <Style TargetType="igSchedulePrim:ManualDateTimeEditor">
    <Setter Property="Background" Value="{StaticResource ManualDateTimeEditorBackgroundBrush}" />
    <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
    <Setter Property="BorderBrush" Value="{StaticResource ManualDateTimeEditorBorderBrush}" />
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="VerticalContentAlignment" Value="Center" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igSchedulePrim:ManualDateTimeEditor">
          <igPrim:ValidationDecorator>
            <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}" igPrim:XamlHelper.SnapsToDevicePixels="true">
              <Grid igPrim:XamlHelper.SnapsToDevicePixels="{TemplateBinding igPrim:XamlHelper.SnapsToDevicePixels}">
                <Grid.ColumnDefinitions>
                  <ColumnDefinition />
                  <ColumnDefinition Width="Auto" />
                  <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <igPrim:EmbeddedTextBox x:Name="TextBox" Padding="2" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                <Grid Visibility="{TemplateBinding SpinButtonVisibility}" Grid.Column="1" Margin="0,-1,-1,-1" Width="18">
                  <Grid.RowDefinitions>
                    <RowDefinition />
                    <RowDefinition />
                  </Grid.RowDefinitions>
                  <RepeatButton Style="{StaticResource SpinButtonStyle}" ContentTemplate="{StaticResource IncreaseGlyphKey}" Command="{TemplateBinding SpinUpCommand}" Grid.Row="0" />
                  <RepeatButton Style="{StaticResource SpinButtonStyle}" ContentTemplate="{StaticResource DecreaseGlyphKey}" Command="{TemplateBinding SpinDownCommand}" Grid.Row="1" Margin="0,-1,0,0" />
                </Grid>
                <ToggleButton x:Name="DropDownButton" Style="{StaticResource DropDownButtonStyle}" ContentTemplate="{StaticResource DecreaseGlyphKey}" Grid.Column="2" ClickMode="Press" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" IsEnabled="{Binding IsReadOnly, Converter={StaticResource complementConverter}, RelativeSource={RelativeSource TemplatedParent}}" igPrim:XamlHelper.Focusable="False" IsTabStop="False" Margin="0,-1,-1,-1" />
                <Popup x:Name="Popup">
                  <Border Background="{StaticResource PopupBackgroundBrush}" BorderBrush="{StaticResource PopupBorderBrush}" BorderThickness="1" Padding="1">
                    <ig:XamCalendar x:Name="Calendar" MinDate="{TemplateBinding Minimum}" MaxDate="{TemplateBinding Maximum}" SelectionMode="SingleDate" />
                  </Border>
                </Popup>
              </Grid>
            </Border>
          </igPrim:ValidationDecorator>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- *********************************  ProjectDatePresenter Style  ********************************* -->
  <Style TargetType="igSchedulePrim:ProjectDatePresenter">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igSchedulePrim:ProjectDatePresenter">
          <TextBlock Text="{TemplateBinding FormattedText}" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- *********************************  ProjectDurationPresenter Style  ********************************* -->
  <Style TargetType="igSchedulePrim:ProjectDurationPresenter">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igSchedulePrim:ProjectDurationPresenter">
          <TextBlock Text="{TemplateBinding FormattedText}" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- *********************************  TaskIndicatorControl Style  ********************************* -->
  <Style TargetType="igSchedulePrim:TaskIndicatorControl">
    <Setter Property="Background" Value="{StaticResource TransparentBrush}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igSchedulePrim:TaskIndicatorControl">
          <Border BorderBrush="{TemplateBinding BorderBrush}" Padding="{TemplateBinding Padding}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" IsHitTestVisible="{TemplateBinding HasIndicators}" igPrim:XamlHelper.SnapsToDevicePixels="True">
            <ToolTipService.ToolTip>
              <ToolTip Template="{StaticResource ToolTipTemplate}" Content="{Binding Indicators, RelativeSource={RelativeSource TemplatedParent}}" ContentTemplate="{StaticResource indicatorsTooltipContentTemplate}" />
            </ToolTipService.ToolTip>
            <ItemsControl igPrim:XamlHelper.SnapsToDevicePixels="{TemplateBinding igPrim:XamlHelper.SnapsToDevicePixels}" ItemsSource="{Binding Indicators, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource simpleItemsControlStyle}">
              <ItemsControl.ItemTemplate>
                <DataTemplate>
                  <!-- Note, the Content binding is here to work around an issue in SL where this CP is not 
                        getting the DataContext from the containing CP created by the ItemsControl or is setting 
                        its own local value -->
                  <ContentPresenter igPrim:XamlHelper.SnapsToDevicePixels="True" Margin="0,0,1,0" Content="{Binding Content, RelativeSource={RelativeSource AncestorType=ContentPresenter}}" ContentTemplate="{Binding IndicatorType, Converter={StaticResource indicatorTypeToDataTemplateConverter}}" />
                </DataTemplate>
              </ItemsControl.ItemTemplate>
              <ItemsControl.ItemsPanel>
                <ItemsPanelTemplate>
                  <StackPanel Orientation="Horizontal" />
                </ItemsPanelTemplate>
              </ItemsControl.ItemsPanel>
            </ItemsControl>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- *********************************  GanttTimescaleArea Style  ********************************* -->
  <Style TargetType="igSchedulePrim:GanttTimescaleArea">
    <Setter Property="Background" Value="{StaticResource TransparentBrush}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igSchedulePrim:GanttTimescaleArea">
          <Grid x:Name="RootPanel" Background="{TemplateBinding Background}" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- *********************************  TimescaleHeaderPresenter Style  ********************************* -->
  <Style TargetType="igSchedulePrim:TimescaleHeaderPresenter">
    <Setter Property="FontSize" Value="11" />
    <Setter Property="Background" Value="{StaticResource HeaderCellBackgroundBrush}" />
    <Setter Property="BorderThickness" Value="0,0,0,1" />
    <Setter Property="BorderBrush" Value="{StaticResource TimescaleIntervalBorderBrush}" />
    <Setter Property="VerticalContentAlignment" Value="Bottom" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igSchedulePrim:TimescaleHeaderPresenter">
          <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" igPrim:XamlHelper.SnapsToDevicePixels="True">
            <igSchedulePrim:TimescaleBandPanel VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Name="BandPanel" />
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- *********************************  TimescaleBandPresenter Style  ********************************* -->
  <Style TargetType="igSchedulePrim:TimescaleBandPresenter">
    <Setter Property="Background" Value="{StaticResource TransparentBrush}" />
    <Setter Property="BorderThickness" Value="0,1,0,0" />
    <Setter Property="BorderBrush" Value="{StaticResource TimescaleBandBorderBrush}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igSchedulePrim:TimescaleBandPresenter">
          <Grid Background="{TemplateBinding Background}">
            <!-- making this sibling to the text since the text shouldn't shift if the border is hidden -->
            <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" igPrim:XamlHelper.SnapsToDevicePixels="True" />
            <igSchedulePrim:TimescaleIntervalPanel Margin="{TemplateBinding BorderThickness}" Name="IntervalPanel" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- *********************************  GanttRowPresenter Style  ********************************* -->
  <Style TargetType="igSchedulePrim:GanttRowPresenter">
    <Setter Property="Background" Value="{StaticResource CellItemBackgroundBrush}" />
    <Setter Property="BorderBrush" Value="{StaticResource CellItemBorderBrush}" />
    <Setter Property="BorderThickness" Value="0,0,1,1" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igSchedulePrim:GanttRowPresenter">
          <Border x:Name="RootVisual" Background="{TemplateBinding Background}" igPrim:XamlHelper.SnapsToDevicePixels="True" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="SelectedStates">
                <VisualState x:Name="Unselected" />
                <VisualState x:Name="Selected">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00" Storyboard.TargetName="RootVisual" Storyboard.TargetProperty="Background">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{StaticResource CellItemSelectedBackgroundBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- *********************************  NonWorkingTimeArea Style  ********************************* -->
  <Style TargetType="igSchedulePrim:NonWorkingTimeArea">
    <Setter Property="Background" Value="{StaticResource NonWorkingTimelineBackgroundBrush}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igSchedulePrim:NonWorkingTimeArea">
          <Border Background="{TemplateBinding Background}" igPrim:XamlHelper.SnapsToDevicePixels="True" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- *********************************  GanttTaskDragArea Style  ********************************* -->
  <Style TargetType="igSchedulePrim:GanttTaskDragArea">
    <Setter Property="Background" Value="Transparent" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igSchedulePrim:GanttTaskDragArea">
          <Border Background="{TemplateBinding Background}" igPrim:XamlHelper.SnapsToDevicePixels="True" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- *********************************  GanttTaskDependencyToolTipPresenter Style  ********************************* -->
  <Style TargetType="igSchedulePrim:GanttTaskDependencyToolTipPresenter">
    <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igSchedulePrim:GanttTaskDependencyToolTipPresenter">
          <StackPanel Margin="4">
            <Grid>
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition MinWidth="16" Width="*" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
              </Grid.ColumnDefinitions>

              <TextBlock Grid.Column="0" Text="{Binding Source={StaticResource dependencyToolTipLinkLabel}, Path=Value}" />
              <TextBlock Grid.Column="1" Text="{Binding LinkText, RelativeSource={RelativeSource TemplatedParent}}" />

              <TextBlock Grid.Column="3" Text="{Binding Source={StaticResource dependencyToolTipLagLabel}, Path=Value}" />
              <igSchedulePrim:ProjectDurationPresenter Grid.Column="4" Duration="{Binding Dependency.Lag, RelativeSource={RelativeSource TemplatedParent}}" Project="{Binding Dependency.From.Project, RelativeSource={RelativeSource TemplatedParent}}" />
            </Grid>
            <StackPanel Orientation="Horizontal">
              <TextBlock Text="{Binding Source={StaticResource dependencyToolTipFromLabel}, Path=Value}" />
              <TextBlock Text="{Binding Dependency.From.Id, RelativeSource={RelativeSource TemplatedParent}, StringFormat='(ID {0}) '}" />
              <TextBlock Text="{Binding Dependency.From.TaskName, RelativeSource={RelativeSource TemplatedParent}}" />
            </StackPanel>
            <StackPanel Orientation="Horizontal">
              <TextBlock Text="{Binding Source={StaticResource dependencyToolTipToLabel}, Path=Value}" />
              <TextBlock Text="{Binding Dependency.To.Id, RelativeSource={RelativeSource TemplatedParent}, StringFormat='(ID {0}) '}" />
              <TextBlock Text="{Binding Dependency.To.TaskName, RelativeSource={RelativeSource TemplatedParent}}" />
            </StackPanel>
          </StackPanel>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- *********************************  GanttTaskDependencyPresenter Style  ********************************* -->
  <Style TargetType="igSchedulePrim:GanttTaskDependencyPresenter">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igSchedulePrim:GanttTaskDependencyPresenter">
          <!-- Note: there shouldn't be any chrome/padding/margins around the canvas -->
          <Canvas x:Name="RootPanel">
            <ToolTipService.ToolTip>
              <ToolTip Template="{StaticResource ToolTipTemplate}">
                <StackPanel>
                  <ContentControl Style="{StaticResource ToolTipHeaderTemplate}" Content="{Binding Source={StaticResource dependencyToolTipTitle}, Path=Value}" Foreground="{StaticResource ForegroundBrush}" />
                  <igSchedulePrim:GanttTaskDependencyToolTipPresenter Dependency="{TemplateBinding Dependency}" Margin="4,2" />
                </StackPanel>
              </ToolTip>
            </ToolTipService.ToolTip>

            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="DragStates">
                <VisualState x:Name="Dragging">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00" Storyboard.TargetName="Line1" Storyboard.TargetProperty="Stroke">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{StaticResource GanttTaskDependencyDraggingBorderBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00" Storyboard.TargetName="EndCap" Storyboard.TargetProperty="Fill">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{StaticResource GanttTaskDependencyDraggingBorderBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="NotDragging" />
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>

            <Path x:Name="Line2" Stroke="Transparent" StrokeThickness="5" />
            <Path x:Name="Line1" Stroke="{StaticResource ProjectTaskDependencyPresenterLine}" />
            <!-- Note: Caps must face right -->
            <Path x:Name="EndCap" Data="M 0,0 4.5,4.5 0,9 Z" Fill="{StaticResource ProjectTaskDependencyPresenterEndCap}" />
          </Canvas>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- *********************************  GanttTaskDependencyDragToolTipPresenter Style  ********************************* -->
  <Style TargetType="igSchedulePrim:GanttTaskDependencyDragToolTipPresenter">
    <Setter Property="MinWidth" Value="200" />
    <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igSchedulePrim:GanttTaskDependencyDragToolTipPresenter">
          <Border Background="{StaticResource TooltipBackgroundBrush}" BorderThickness="1" BorderBrush="{StaticResource TooltipBorderBrush}">
            <StackPanel>
              <ContentControl Style="{StaticResource ToolTipHeaderTemplate}" Content="{TemplateBinding Title}" Foreground="{StaticResource ForegroundBrush}" />
              <Grid Margin="4,2">
                <Grid.RowDefinitions>
                  <RowDefinition />
                  <RowDefinition />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="Auto" />
                  <ColumnDefinition Width="5" />
                  <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>

                <!-- Task Start: -->
                <TextBlock Text="{TemplateBinding SourceLabel}" Grid.Row="0" />
                <TextBlock Grid.Row="0" Grid.Column="2" Text="{TemplateBinding SourceTaskIdText}" />

                <!-- Task Finish: -->
                <TextBlock Text="{TemplateBinding TargetLabel}" Grid.Row="1" />
                <TextBlock Grid.Row="1" Grid.Column="2" Text="{TemplateBinding TargetTaskIdText}" />
              </Grid>
            </StackPanel>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- *********************************  ProjectTaskDependencyDragArea Style  ********************************* -->
  <Style TargetType="igSchedulePrim:GanttTaskDependencyDragArea">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igSchedulePrim:GanttTaskDependencyDragArea">
          <Border Background="Transparent">
            <Path Data="F1 M 96.3831,33.3099C 98.149,35.0757 98.1167,37.9709 96.3073,39.7804L 96.3065,39.7796L 94.3569,41.7292C 94.5815,40.7079 94.4767,39.6287 94.0425,38.6614L 94.6192,38.0847L 94.6181,38.0836C 95.4677,37.2341 95.5508,35.8718 94.7199,35.041C 93.8988,34.2198 92.4924,34.225 91.6358,35.049L 88.8807,37.8041C 88.0679,38.6487 88.0567,39.9737 88.8579,40.796L 88.8593,40.7947L 89.6458,41.5813L 87.9548,43.2723L 87.1682,42.4858L 87.1718,42.4822C 85.4415,40.7136 85.425,37.8734 87.2221,36.0762L 87.2242,36.0784L 89.9186,33.3841L 89.9164,33.3819C 91.7221,31.5763 94.6173,31.544 96.3831,33.3099 Z M 82.9917,46.7013C 81.2258,44.9355 81.2581,42.0402 83.0675,40.2308L 83.0683,40.2316L 85.0179,38.282C 84.7933,39.3033 84.8981,40.3825 85.3323,41.3497L 84.7556,41.9265L 84.7567,41.9275C 83.9071,42.7771 83.824,44.1394 84.6549,44.9702C 85.476,45.7913 86.8824,45.7861 87.739,44.9622L 90.4941,42.2071C 91.3069,41.3624 91.3181,40.0375 90.5169,39.2151L 90.5155,39.2165L 89.729,38.4299L 91.42,36.7388L 92.2066,37.5254L 92.203,37.529C 93.9333,39.2976 93.9498,42.1378 92.1527,43.9349L 92.1506,43.9328L 89.4562,46.6271L 89.4584,46.6293C 87.6527,48.4349 84.7575,48.4671 82.9917,46.7013 Z " Fill="{StaticResource GanttTaskDependencyIconBackgroundBrush}" Stretch="Fill" UseLayoutRounding="False" Height="12" Width="12" />
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- *********************************  TimescaleIntervalPresenter Style  ********************************* -->
  <Style TargetType="igSchedulePrim:TimescaleIntervalPresenter">
    <Setter Property="Background" Value="{StaticResource TransparentBrush}" />
    <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
    <Setter Property="BorderThickness" Value="0,0,1,0" />
    <Setter Property="Padding" Value="4,0,3,0" />
    <Setter Property="BorderBrush" Value="{StaticResource HeaderCellBorderBrush}" />
    <Setter Property="HorizontalContentAlignment" Value="{Binding Path=IntervalInfo.Band.HorizontalAlignment, RelativeSource={RelativeSource Self}}" />
    <Setter Property="VerticalContentAlignment" Value="Center" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igSchedulePrim:TimescaleIntervalPresenter">
          <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" igPrim:XamlHelper.SnapsToDevicePixels="True">
            <ToolTipService.ToolTip>
              <ToolTip Template="{StaticResource ToolTipTemplate}">
                <Binding Path="IntervalInfo.ToolTipText" RelativeSource="{RelativeSource TemplatedParent}" />
              </ToolTip>
            </ToolTipService.ToolTip>
            <TextBlock Margin="{TemplateBinding Padding}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Text="{Binding Path=IntervalInfo.DisplayText, RelativeSource={RelativeSource TemplatedParent}}" />
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- *********************************  ProjectTableGrid Style  ********************************* -->
  <Style TargetType="igSchedulePrim:ProjectTableGrid">
    <Setter Property="Background" Value="{StaticResource TransparentBrush}" />
    <Setter Property="MinimumRowHeight" Value="21" />
    <Setter Property="CellStyle" Value="{StaticResource CellControlStyle}" />
    <Setter Property="ToolTipStyle" Value="{StaticResource SimpletoolTip}" />
    <Setter Property="TextBoxStyle" Value="{StaticResource GanttTextBoxStyle}" />
    <Setter Property="ComboBoxStyle" Value="{StaticResource GanttComboBoxStyle}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igSchedulePrim:ProjectTableGrid">
          <Border x:Name="Root" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" igPrim:XamlHelper.SnapsToDevicePixels="True">
            <Border.Resources>
              <Style TargetType="CheckBox" BasedOn="{StaticResource CheckBoxStyle}" />
              <Style TargetType="igPrim:PercentEditor" BasedOn="{StaticResource SpinEditorBaseStyle}" />
              <Style TargetType="igPrim:ManualProjectDurationEditor" BasedOn="{StaticResource SpinEditorBaseStyle}" />
            </Border.Resources>
            <Grid Background="{TemplateBinding Background}" igPrim:XamlHelper.SnapsToDevicePixels="{TemplateBinding igPrim:XamlHelper.SnapsToDevicePixels}">
              <Grid.RowDefinitions>
                <RowDefinition Height="*" />
                <RowDefinition Height="Auto" />
              </Grid.RowDefinitions>
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
              </Grid.ColumnDefinitions>
              <igSchedulePrim:ProjectTableGridRowsPanel x:Name="RowsPanel" Background="Transparent" />
              <ScrollBar x:Name="VerticalScrollBar" Width="0" MinWidth="0" Grid.Column="1" Template="{Binding Tag, RelativeSource={RelativeSource Self}}" Style="{StaticResource ScrollBarStyle}" />
              <ScrollBar x:Name="HorizontalScrollBar" Height="0" MinHeight="0" Grid.Row="1" Template="{Binding Tag, RelativeSource={RelativeSource Self}}" Style="{StaticResource ScrollBarStyle}" />
            </Grid>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- *********************************  GanttTaskDragToolTipPresenter Style  ********************************* -->
  <Style TargetType="igSchedulePrim:GanttTaskDragToolTipPresenter">
    <Setter Property="MinWidth" Value="200" />
    <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igSchedulePrim:GanttTaskDragToolTipPresenter">
          <Border Background="{StaticResource TooltipBackgroundBrush}" BorderThickness="1" BorderBrush="{StaticResource TooltipBorderBrush}">
            <StackPanel>

              <Border Background="{StaticResource ToolTipHeaderBackgroundBrush}" BorderBrush="{StaticResource ToolTipHeaderBorderBrush}" BorderThickness="0,0,0,1" Padding="4" VerticalAlignment="Top">
                <Grid>
                  <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                  </Grid.ColumnDefinitions>
                  <TextBlock Text="{TemplateBinding Title}" Margin="3 0 10 0" VerticalAlignment="Center" Foreground="{StaticResource ForegroundBrush}" />
                  <ContentPresenter Content="{Binding Path=TaskPreviewElement, RelativeSource={RelativeSource TemplatedParent}}" Width="100" HorizontalAlignment="Left" VerticalAlignment="Center" Grid.Column="1" />
                </Grid>
              </Border>

              <Grid Margin="4,2">
                <Grid.RowDefinitions>
                  <RowDefinition />
                  <RowDefinition />
                  <RowDefinition />
                  <RowDefinition />
                  <RowDefinition />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="Auto" />
                  <ColumnDefinition Width="5" />
                  <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>

                <!-- Task Start: -->
                <TextBlock Visibility="{TemplateBinding ComputedTaskStartVisibility}" Text="{Binding Source={StaticResource taskToolTipTaskStartLabel}, Path=Value}" Grid.Row="0" />
                <igSchedulePrim:ProjectDatePresenter Visibility="{TemplateBinding ComputedTaskStartVisibility}" Grid.Row="0" Grid.Column="2" DateTime="{Binding TaskStart, RelativeSource={RelativeSource TemplatedParent}}" StringFormat="{Binding Task.Project.SettingsResolved.DateStringFormat, RelativeSource={RelativeSource TemplatedParent}}" LocalToken="{Binding Task.Project.TimeZoneInfoProvider.LocalToken, RelativeSource={RelativeSource TemplatedParent}}" />

                <!-- Task Finish: -->
                <TextBlock Visibility="{TemplateBinding ComputedTaskFinishVisibility}" Text="{Binding Source={StaticResource taskToolTipTaskFinishLabel}, Path=Value}" Grid.Row="1" />
                <igSchedulePrim:ProjectDatePresenter Visibility="{TemplateBinding ComputedTaskFinishVisibility}" Grid.Row="1" Grid.Column="2" DateTime="{Binding TaskFinish, RelativeSource={RelativeSource TemplatedParent}}" StringFormat="{Binding Task.Project.SettingsResolved.DateStringFormat, RelativeSource={RelativeSource TemplatedParent}}" LocalToken="{Binding Task.Project.TimeZoneInfoProvider.LocalToken, RelativeSource={RelativeSource TemplatedParent}}" />

                <!-- Duration: -->
                <TextBlock Visibility="{TemplateBinding ComputedTaskDurationVisibility}" Text="{Binding Source={StaticResource taskToolTipDurationLabel}, Path=Value}" Grid.Row="2" />
                <igSchedulePrim:ProjectDurationPresenter Visibility="{TemplateBinding ComputedTaskDurationVisibility}" Grid.Row="2" Grid.Column="2" Duration="{Binding TaskDuration, RelativeSource={RelativeSource TemplatedParent}}" Project="{Binding Task.Project, RelativeSource={RelativeSource TemplatedParent}}" />

                <!-- Deadline: -->
                <TextBlock Visibility="{TemplateBinding ComputedTaskDeadlineVisibility}" Text="{Binding Source={StaticResource taskToolTipDeadlineLabel}, Path=Value}" Grid.Row="3" />
                <igSchedulePrim:ProjectDatePresenter Visibility="{TemplateBinding ComputedTaskDeadlineVisibility}" Grid.Row="3" Grid.Column="2" DateTime="{Binding TaskDeadline, RelativeSource={RelativeSource TemplatedParent}}" StringFormat="{Binding Task.Project.SettingsResolved.DateStringFormat, RelativeSource={RelativeSource TemplatedParent}}" LocalToken="{Binding Task.Project.TimeZoneInfoProvider.LocalToken, RelativeSource={RelativeSource TemplatedParent}}" />

                <!-- Complete Through: -->
                <TextBlock Visibility="{TemplateBinding ComputedTaskCompleteThroughVisibility}" Text="{Binding Source={StaticResource taskToolTipCompleteThroughLabel}, Path=Value}" Grid.Row="4" />
                <igSchedulePrim:ProjectDatePresenter Visibility="{TemplateBinding ComputedTaskCompleteThroughVisibility}" Grid.Row="4" Grid.Column="2" DateTime="{Binding TaskCompleteThrough, RelativeSource={RelativeSource TemplatedParent}}" StringFormat="{Binding Task.Project.SettingsResolved.DateStringFormat, RelativeSource={RelativeSource TemplatedParent}}" LocalToken="{Binding Task.Project.TimeZoneInfoProvider.LocalToken, RelativeSource={RelativeSource TemplatedParent}}" />
              </Grid>
            </StackPanel>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- *********************************  GanttTaskPresenterBase Style  ********************************* -->
  <Style x:Key="GanttTaskPresenterBase" TargetType="igSchedulePrim:GanttTaskPresenterBase">
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="Margin" Value="0,5" />
  </Style>

  <!-- *********************************  GanttTaskProgressToolTipPresenter  ********************************* -->
  <Style TargetType="igSchedulePrim:GanttTaskProgressToolTipPresenter">
    <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igSchedulePrim:GanttTaskProgressToolTipPresenter">
          <StackPanel>
            <ContentControl Style="{StaticResource ToolTipHeaderTemplate}" Content="{Binding Source={StaticResource progressToolTipTitle}, Path=Value}" Foreground="{StaticResource ForegroundBrush}" />

            <StackPanel Orientation="Horizontal" Margin="4,4,4,2">
              <TextBlock Text="{Binding Source={StaticResource taskToolTipNameLabel}, Path=Value}" />
              <TextBlock Text="{Binding Task.TaskName, RelativeSource={RelativeSource TemplatedParent}}" />
            </StackPanel>

            <StackPanel Orientation="Horizontal" Margin="4,2">
              <TextBlock Text="{Binding Source={StaticResource taskToolTipActualStartLabel}, Path=Value}" />
              <igSchedulePrim:ProjectDatePresenter DateTime="{Binding Task.ActualStart, RelativeSource={RelativeSource TemplatedParent}}" StringFormat="{Binding Task.Project.SettingsResolved.DateStringFormat, RelativeSource={RelativeSource TemplatedParent}}" LocalToken="{Binding Task.Project.TimeZoneInfoProvider.LocalToken, RelativeSource={RelativeSource TemplatedParent}}" />
            </StackPanel>

            <StackPanel Orientation="Horizontal" Margin="4,2">
              <TextBlock Text="{Binding Source={StaticResource taskToolTipCompleteThroughLabel}, Path=Value}" />
              <igSchedulePrim:ProjectDatePresenter DateTime="{Binding Task.CompleteThrough, RelativeSource={RelativeSource TemplatedParent}}" StringFormat="{Binding Task.Project.SettingsResolved.DateStringFormat, RelativeSource={RelativeSource TemplatedParent}}" LocalToken="{Binding Task.Project.TimeZoneInfoProvider.LocalToken, RelativeSource={RelativeSource TemplatedParent}}" />
            </StackPanel>

            <StackPanel Orientation="Horizontal" Margin="4,2">
              <TextBlock Text="{Binding Source={StaticResource taskToolTipDurationLabel}, Path=Value}" />
              <igSchedulePrim:ProjectDurationPresenter Duration="{Binding Task.ScheduledDuration, RelativeSource={RelativeSource TemplatedParent}}" Project="{Binding Task.Project, RelativeSource={RelativeSource TemplatedParent}}" />
            </StackPanel>

            <StackPanel Orientation="Horizontal" Margin="4,2,4,4">
              <TextBlock Text="{Binding Source={StaticResource taskToolTipPercentCompleteLabel}, Path=Value}" />
              <TextBlock Text="{Binding Task.PercentComplete, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource doubleForPercentConverter}, StringFormat=P0}" />
            </StackPanel>
          </StackPanel>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- *********************************  GanttTaskProgressPresenter Style  ********************************* -->
  <Style TargetType="igSchedulePrim:GanttTaskProgressPresenter">
    <!-- Hide the progress on summary tasks -->
    <Setter Property="Visibility" Value="{Binding TaskStates, RelativeSource={RelativeSource Self},Converter={StaticResource nonSummaryToVisibility}}" />
    <Setter Property="Canvas.ZIndex" Value="10" />
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igSchedulePrim:GanttTaskProgressPresenter">
          <Grid Height="{TemplateBinding BarHeight}">
            <ToolTipService.ToolTip>
              <ToolTip Template="{StaticResource ToolTipTemplate}">
                <igSchedulePrim:GanttTaskProgressToolTipPresenter Task="{TemplateBinding Task}" TaskStates="{TemplateBinding TaskStates}" />
              </ToolTip>
            </ToolTipService.ToolTip>
            <Grid HorizontalAlignment="Left" Width="{TemplateBinding ProgressExtent}">
              <Grid>
                <Grid.RowDefinitions>
                  <RowDefinition Height="25*" />
                  <RowDefinition Height="40*" />
                  <RowDefinition Height="35*" />
                </Grid.RowDefinitions>
                <Rectangle Grid.Row="1" RadiusX="2" RadiusY="2" Fill="{StaticResource ProgressTaskBackgroundBrush}" Stroke="{StaticResource ProgressTaskBorderBrush}" StrokeThickness="{TemplateBinding BorderThickness}" />
              </Grid>
              <igSchedulePrim:GanttTaskDragArea AreaType="ChangePercentComplete" Width="{TemplateBinding BarHeight}" HorizontalAlignment="Right" />
            </Grid>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- *********************************  GanttTaskSlackToolTipPresenter Style  ********************************* -->
  <Style TargetType="igSchedulePrim:GanttTaskSlackToolTipPresenter">
    <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igSchedulePrim:GanttTaskSlackToolTipPresenter">
          <StackPanel>
            <ContentControl Style="{StaticResource ToolTipHeaderTemplate}" Content="{Binding Source={StaticResource slackToolTipTitle}, Path=Value}" Foreground="{StaticResource ForegroundBrush}" />

            <StackPanel Orientation="Horizontal" Margin="4,4,4,2">
              <TextBlock Text="{Binding Source={StaticResource taskToolTipNameLabel}, Path=Value}" />
              <TextBlock Text="{Binding Task.TaskName, RelativeSource={RelativeSource TemplatedParent}}" />
            </StackPanel>

            <StackPanel Orientation="Horizontal" Margin="4,2">
              <TextBlock Text="{Binding Source={StaticResource taskToolTipTaskFinishLabel}, Path=Value}" />
              <igSchedulePrim:ProjectDatePresenter DateTime="{Binding Task.CalculatedFinish, RelativeSource={RelativeSource TemplatedParent}}" StringFormat="{Binding Task.Project.SettingsResolved.DateStringFormat, RelativeSource={RelativeSource TemplatedParent}}" LocalToken="{Binding Task.Project.TimeZoneInfoProvider.LocalToken, RelativeSource={RelativeSource TemplatedParent}}" />
            </StackPanel>

            <StackPanel Orientation="Horizontal" Margin="4,2">
              <TextBlock Text="{Binding Source={StaticResource taskToolTipFreeSlackLabel}, Path=Value}" />
              <igSchedulePrim:ProjectDatePresenter DateTime="{Binding Task.CalculatedFinish, RelativeSource={RelativeSource TemplatedParent}}" DateTimeAdjustment="{Binding Task.FreeSlack, RelativeSource={RelativeSource TemplatedParent}}" Task="{TemplateBinding Task}" StringFormat="{Binding Task.Project.SettingsResolved.DateStringFormat, RelativeSource={RelativeSource TemplatedParent}}" LocalToken="{Binding Task.Project.TimeZoneInfoProvider.LocalToken, RelativeSource={RelativeSource TemplatedParent}}" />
            </StackPanel>

            <StackPanel Orientation="Horizontal" Margin="4,2,4,4">
              <TextBlock Text="{Binding Source={StaticResource taskToolTipDurationLabel}, Path=Value}" />
              <igSchedulePrim:ProjectDurationPresenter Duration="{Binding Task.ScheduledDuration, RelativeSource={RelativeSource TemplatedParent}}" Project="{Binding Task.Project, RelativeSource={RelativeSource TemplatedParent}}" />
            </StackPanel>
          </StackPanel>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- *********************************  GanttTaskSlackPresenter Style  ********************************* -->
  <Style TargetType="igSchedulePrim:GanttTaskSlackPresenter" BasedOn="{StaticResource GanttTaskPresenterBase}">
    <!-- Hide the slack on inactive tasks -->
    <Setter Property="Visibility" Value="{Binding TaskStates, RelativeSource={RelativeSource Self},Converter={StaticResource activeToVisibility}}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igSchedulePrim:GanttTaskSlackPresenter">
          <igSchedulePrim:GanttTaskContentPanel x:Name="ContentPanel" BarHeight="{TemplateBinding BarHeight}" igPrim:XamlHelper.SnapsToDevicePixels="True">
            <ToolTipService.ToolTip>
              <ToolTip Template="{StaticResource ToolTipTemplate}">
                <igSchedulePrim:GanttTaskSlackToolTipPresenter Task="{TemplateBinding Task}" TaskStates="{TemplateBinding TaskStates}" />
              </ToolTip>
            </ToolTipService.ToolTip>
            <Grid>
              <Grid.RowDefinitions>
                <RowDefinition Height="22*" />
                <RowDefinition Height="2*" MinHeight="2" />
              </Grid.RowDefinitions>
              <Rectangle Fill="{StaticResource SlackTaskBackgroundBrush}" Grid.Row="1" />
            </Grid>
          </igSchedulePrim:GanttTaskContentPanel>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- *********************************  GanttTaskDeadlineToolTipPresenter Style  ********************************* -->
  <Style TargetType="igSchedulePrim:GanttTaskDeadlineToolTipPresenter">
    <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igSchedulePrim:GanttTaskDeadlineToolTipPresenter">
          <StackPanel>
            <ContentControl Style="{StaticResource ToolTipHeaderTemplate}" Content="{Binding Source={StaticResource deadlineToolTipTitle}, Path=Value}" Foreground="{StaticResource ForegroundBrush}" />

            <StackPanel Orientation="Horizontal" Margin="4,4,4,2">
              <TextBlock Text="{Binding Source={StaticResource taskToolTipNameLabel}, Path=Value}" />
              <TextBlock Text="{Binding Task.TaskName, RelativeSource={RelativeSource TemplatedParent}}" />
            </StackPanel>

            <StackPanel Orientation="Horizontal" Margin="4,2,4,4">
              <TextBlock Text="{Binding Source={StaticResource taskToolTipDeadlineLabel}, Path=Value}" />
              <igSchedulePrim:ProjectDatePresenter DateTime="{Binding Task.Deadline, RelativeSource={RelativeSource TemplatedParent}}" StringFormat="{Binding Task.Project.SettingsResolved.DateStringFormat, RelativeSource={RelativeSource TemplatedParent}}" LocalToken="{Binding Task.Project.TimeZoneInfoProvider.LocalToken, RelativeSource={RelativeSource TemplatedParent}}" />
            </StackPanel>
          </StackPanel>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- *********************************  GanttTaskDeadlinePresenter Style  ********************************* -->
  <Style TargetType="igSchedulePrim:GanttTaskDeadlinePresenter" BasedOn="{StaticResource GanttTaskPresenterBase}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igSchedulePrim:GanttTaskDeadlinePresenter">
          <igSchedulePrim:GanttTaskContentPanel x:Name="ContentPanel" BarHeight="{TemplateBinding BarHeight}" RightShapeAlignment="OverEdge" igPrim:XamlHelper.SnapsToDevicePixels="True">
            <ToolTipService.ToolTip>
              <ToolTip Template="{StaticResource ToolTipTemplate}">
                <igSchedulePrim:GanttTaskDeadlineToolTipPresenter Task="{TemplateBinding Task}" TaskStates="{TemplateBinding TaskStates}" />
              </ToolTip>
            </ToolTipService.ToolTip>
            <igSchedulePrim:GanttTaskContentPanel.RightShape>
              <Grid Canvas.ZIndex="1">
                <!-- Note: The natural size of the shape paths should be small so it scales properly with the uniformtofill -->
                <Path StrokeThickness="1" IsHitTestVisible="false" Stroke="{StaticResource DeadlineTaskBorderBrush}" Fill="{StaticResource DeadlineTaskBackgroundBrush}" Stretch="UniformToFill" Data="M 1.5,0 3.5,0 3.5,2.5 5,2.5 5,3 2.5,5 0,3 0,2.5 1.5,2.5 Z" />
                <igSchedulePrim:GanttTaskDragArea RenderTransform="{Binding Path=RightShapeDragAreaTransform, ElementName=ContentPanel}" />
              </Grid>
            </igSchedulePrim:GanttTaskContentPanel.RightShape>
          </igSchedulePrim:GanttTaskContentPanel>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- *********************************  GanttMilestoneTaskToolTipPresenter Style  ********************************* -->
  <Style TargetType="igSchedulePrim:GanttMilestoneTaskToolTipPresenter">
    <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igSchedulePrim:GanttMilestoneTaskToolTipPresenter">
          <StackPanel>
            <ContentControl Style="{StaticResource ToolTipHeaderTemplate}" Content="{Binding Source={StaticResource milestoneToolTipTitle}, Path=Value}" Foreground="{StaticResource ForegroundBrush}" />

            <StackPanel Orientation="Horizontal" Margin="4,4,4,2">
              <TextBlock Text="{Binding Source={StaticResource taskToolTipNameLabel}, Path=Value}" />
              <TextBlock Text="{Binding Task.TaskName, RelativeSource={RelativeSource TemplatedParent}}" />
            </StackPanel>

            <StackPanel Orientation="Horizontal" Margin="4,2" Visibility="{Binding TaskStates, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource startOnlyToVisibility}}">
              <TextBlock Text="{Binding Source={StaticResource taskToolTipTaskStartLabel}, Path=Value}" />
              <igSchedulePrim:ProjectDatePresenter DateTime="{Binding Task.CalculatedStart, RelativeSource={RelativeSource TemplatedParent}}" StringFormat="{Binding Task.Project.SettingsResolved.DateStringFormat, RelativeSource={RelativeSource TemplatedParent}}" LocalToken="{Binding Task.Project.TimeZoneInfoProvider.LocalToken, RelativeSource={RelativeSource TemplatedParent}}" />
            </StackPanel>

            <StackPanel Orientation="Horizontal" Margin="4,2,4,4" Visibility="{Binding TaskStates, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource notStartOnlyToVisibility}}">
              <TextBlock Text="{Binding Source={StaticResource taskToolTipTaskFinishLabel}, Path=Value}" />
              <igSchedulePrim:ProjectDatePresenter DateTime="{Binding Task.CalculatedFinish, RelativeSource={RelativeSource TemplatedParent}}" StringFormat="{Binding Task.Project.SettingsResolved.DateStringFormat, RelativeSource={RelativeSource TemplatedParent}}" LocalToken="{Binding Task.Project.TimeZoneInfoProvider.LocalToken, RelativeSource={RelativeSource TemplatedParent}}" />
            </StackPanel>
          </StackPanel>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- *********************************  GanttMilestoneTaskPresenter Style  ********************************* -->
  <Style TargetType="igSchedulePrim:GanttMilestoneTaskPresenter" BasedOn="{StaticResource GanttTaskPresenterBase}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igSchedulePrim:GanttMilestoneTaskPresenter">
          <igSchedulePrim:GanttTaskContentPanel x:Name="ContentPanel" BarHeight="{TemplateBinding BarHeight}" RightShapeAlignment="OverEdge" igPrim:XamlHelper.SnapsToDevicePixels="True">
            <ToolTipService.ToolTip>
              <ToolTip Template="{StaticResource ToolTipTemplate}">
                <igSchedulePrim:GanttMilestoneTaskToolTipPresenter Task="{TemplateBinding Task}" TaskStates="{TemplateBinding TaskStates}" />
              </ToolTip>
            </ToolTipService.ToolTip>
            <igSchedulePrim:GanttTaskContentPanel.LeftShape>
              <Grid Visibility="{TemplateBinding ComputedLeftShapeVisibility}">
                <!-- Note: The natural size of the shape paths should be small so it scales properly with the uniformtofill -->
                <Path StrokeThickness="1" IsHitTestVisible="false" Stroke="{StaticResource PlaceholderMilestoneTaskBorderBrush}" Fill="{StaticResource PlaceholderMilestoneTaskBackgroundBrush}" Stretch="UniformToFill" Data="M 0,1 1,0 2,1 1,2 Z" />
                <igSchedulePrim:GanttTaskDragArea RenderTransform="{Binding Path=LeftShapeDragAreaTransform, ElementName=ContentPanel}" />
              </Grid>
            </igSchedulePrim:GanttTaskContentPanel.LeftShape>
            <igSchedulePrim:GanttTaskContentPanel.RightShape>
              <!-- Note: The natural size of the shape paths should be small so it scales properly with the uniformtofill -->
              <Grid Visibility="{TemplateBinding ComputedRightShapeVisibility}">
                <Path StrokeThickness="1" IsHitTestVisible="false" Visibility="{Binding Path=TaskStates, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource activeManualTaskToVisibility}}" Stroke="{StaticResource ManualMilestoneTaskBorderBrush}" Fill="{StaticResource ManualMilestoneTaskBackgroundBrush}" Stretch="UniformToFill" Data="M 0,1 1,0 2,1 1,2 Z" />
                <Path StrokeThickness="1" IsHitTestVisible="false" Visibility="{Binding Path=TaskStates, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource activeAutoTaskToVisibility}}" Stroke="{StaticResource TaskShapeBorderBrush}" Fill="{StaticResource TaskShapeBackgroundBrush}" Stretch="UniformToFill" Data="M 0,1 1,0 2,1 1,2 Z" />
                <Path StrokeThickness="1" IsHitTestVisible="false" Visibility="{Binding Path=TaskStates, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource nonStartOnlyActivePlaceholderToVisibility}}" Stroke="{StaticResource PlaceholderMilestoneTaskBorderBrush}" Fill="{StaticResource PlaceholderMilestoneTaskBackgroundBrush}" Stretch="UniformToFill" Data="M 0,1 1,0 2,1 1,2 Z" />
                <Grid x:Name="InactiveMilestone" IsHitTestVisible="false" Visibility="{Binding Path=TaskStates, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource inactiveToVisibility}}">
                  <Path Fill="{StaticResource InactiveTaskBackgroundBrush}" Stretch="Uniform" Data="M 0,1 1,0 2,1 1,2 Z" />
                  <Path StrokeThickness="1" Stroke="{StaticResource InactiveTaskBorderBrush}" Stretch="UniformToFill" Data="M 0.75,0.25, 1,0 1.25,0.25 M 1.75,0.75 2,1 1.75,1.25 M 1.25,1.75 1,2 0.75,1.75 M 0.25,1.25 0,1 0.25,0.75" />
                </Grid>
                <igSchedulePrim:GanttTaskDragArea RenderTransform="{Binding Path=RightShapeDragAreaTransform, ElementName=ContentPanel}" />
              </Grid>
            </igSchedulePrim:GanttTaskContentPanel.RightShape>

            <!-- Adorners -->
            <StackPanel Orientation="Horizontal" Margin="0,0,10,0" Visibility="{TemplateBinding TaskAdornmentVisibility}" igSchedulePrim:GanttTaskContentPanel.AdornerLocation="Left">
              <igSchedulePrim:GanttTaskDependencyDragArea AreaType="Start" Margin="5,0,0,0" Visibility="{TemplateBinding ComputedStartLinkVisibility}" />
            </StackPanel>
            <StackPanel Orientation="Horizontal" Margin="10,0,0,0" Visibility="{TemplateBinding TaskAdornmentVisibility}" igSchedulePrim:GanttTaskContentPanel.AdornerLocation="Right">
              <igSchedulePrim:GanttTaskDependencyDragArea AreaType="Finish" Margin="0,0,5,0" Visibility="{TemplateBinding ComputedFinishLinkVisibility}" />
              <Grid IsHitTestVisible="False">
                <igSchedulePrim:ProjectDatePresenter Visibility="{TemplateBinding ComputedRightShapeVisibility}" StringFormat="d" LocalToken="{Binding Path=Task.Project.TimeZoneInfoProvider.LocalToken, RelativeSource={RelativeSource TemplatedParent}}" DateTime="{Binding Path=Task.CalculatedFinish, RelativeSource={RelativeSource TemplatedParent}}" />
                <igSchedulePrim:ProjectDatePresenter Visibility="{TemplateBinding ComputedLeftShapeVisibility}" StringFormat="d" LocalToken="{Binding Path=Task.Project.TimeZoneInfoProvider.LocalToken, RelativeSource={RelativeSource TemplatedParent}}" DateTime="{Binding Path=Task.CalculatedStart, RelativeSource={RelativeSource TemplatedParent}}" />
              </Grid>
            </StackPanel>
          </igSchedulePrim:GanttTaskContentPanel>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- *********************************  GanttNormalTaskToolTipPresenter Style  ********************************* -->
  <Style TargetType="igSchedulePrim:GanttNormalTaskToolTipPresenter">
    <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igSchedulePrim:GanttNormalTaskToolTipPresenter">
          <StackPanel>
            <ContentControl Style="{StaticResource ToolTipHeaderTemplate}" Content="{Binding Source={StaticResource taskToolTipTitle}, Path=Value}" Foreground="{StaticResource ForegroundBrush}" />

            <StackPanel Orientation="Horizontal" Margin="4,4,4,2">
              <TextBlock Text="{Binding Source={StaticResource taskToolTipNameLabel}, Path=Value}" />
              <TextBlock Text="{Binding Task.TaskName, RelativeSource={RelativeSource TemplatedParent}}" />
            </StackPanel>

            <StackPanel Orientation="Horizontal" Margin="4,2" Visibility="{Binding TaskStates, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource notFinishOnlyToVisibility}}">
              <TextBlock Text="{Binding Source={StaticResource taskToolTipTaskStartLabel}, Path=Value}" />
              <igSchedulePrim:ProjectDatePresenter DateTime="{Binding Task.CalculatedStart, RelativeSource={RelativeSource TemplatedParent}}" StringFormat="{Binding Task.Project.SettingsResolved.DateStringFormat, RelativeSource={RelativeSource TemplatedParent}}" LocalToken="{Binding Task.Project.TimeZoneInfoProvider.LocalToken, RelativeSource={RelativeSource TemplatedParent}}" />
            </StackPanel>

            <StackPanel Orientation="Horizontal" Margin="4,2" Visibility="{Binding TaskStates, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource notStartOnlyToVisibility}}">
              <TextBlock Text="{Binding Source={StaticResource taskToolTipTaskFinishLabel}, Path=Value}" />
              <igSchedulePrim:ProjectDatePresenter DateTime="{Binding Task.CalculatedFinish, RelativeSource={RelativeSource TemplatedParent}}" StringFormat="{Binding Task.Project.SettingsResolved.DateStringFormat, RelativeSource={RelativeSource TemplatedParent}}" LocalToken="{Binding Task.Project.TimeZoneInfoProvider.LocalToken, RelativeSource={RelativeSource TemplatedParent}}" />
            </StackPanel>

            <StackPanel Orientation="Horizontal" Margin="4,2,4,4" Visibility="{Binding TaskStates, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource notStartOrFinishOnlyToVisibility}}">
              <TextBlock Text="{Binding Source={StaticResource taskToolTipDurationLabel}, Path=Value}" />
              <igSchedulePrim:ProjectDurationPresenter Duration="{Binding Task.ScheduledDuration, RelativeSource={RelativeSource TemplatedParent}}" Project="{Binding Task.Project, RelativeSource={RelativeSource TemplatedParent}}" />
            </StackPanel>
          </StackPanel>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- *********************************  GanttNormalTaskPresenter Style  ********************************* -->
  <Style TargetType="igSchedulePrim:GanttNormalTaskPresenter" BasedOn="{StaticResource GanttTaskPresenterBase}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igSchedulePrim:GanttNormalTaskPresenter">
          <igSchedulePrim:GanttTaskContentPanel BarHeight="{TemplateBinding BarHeight}" x:Name="ContentPanel" LeftShapeAlignment="InsideEdge" RightShapeAlignment="InsideEdge" igPrim:XamlHelper.SnapsToDevicePixels="True">
            <ToolTipService.ToolTip>
              <ToolTip Template="{StaticResource ToolTipTemplate}">
                <igSchedulePrim:GanttNormalTaskToolTipPresenter Task="{TemplateBinding Task}" TaskStates="{TemplateBinding TaskStates}" />
              </ToolTip>
            </ToolTipService.ToolTip>
            <igSchedulePrim:GanttTaskContentPanel.LeftShape>
              <Grid Visibility="{TemplateBinding ComputedLeftShapeVisibility}" Canvas.ZIndex="1">
                <!-- Note: The natural size of the shape paths should be small so it scales properly with the uniformtofill -->
                <Path StrokeThickness="1" IsHitTestVisible="false" Stroke="{StaticResource TaskShapeBorderBrush}" Fill="{StaticResource TaskShapeBackgroundBrush}" Stretch="UniformToFill" Data="M 0,0 2.5,0 2.5,1 1,1 1,4 2.5,4 2.5,5 0,5 Z" />

                <!-- when this is a start only task then we want to be able to move the task (or change the progress) -->
                <igSchedulePrim:GanttTaskDragArea AreaType="{Binding TaskStates, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource leftShapeToAreaType}}" RenderTransform="{Binding Path=LeftShapeDragAreaTransform, ElementName=ContentPanel}" />
              </Grid>
            </igSchedulePrim:GanttTaskContentPanel.LeftShape>
            <igSchedulePrim:GanttTaskContentPanel.RightShape>
              <Grid Visibility="{TemplateBinding ComputedRightShapeVisibility}" Canvas.ZIndex="1">
                <!-- Note: The natural size of the shape paths should be small so it scales properly with the uniformtofill -->
                <Path StrokeThickness="1" IsHitTestVisible="false" Stroke="{StaticResource TaskShapeBorderBrush}" Fill="{StaticResource TaskShapeBackgroundBrush}" Stretch="UniformToFill" Data="M 0,0 2.5,0 2.5,5 0,5 0,4 1.5,4 1.5,1 0,1 Z" />

                <!-- when this is a finish only task then we want to be able to move the task (or drag the end) -->
                <igSchedulePrim:GanttTaskDragArea AreaType="{Binding TaskStates, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource rightShapeToAreaType}}" RenderTransform="{Binding Path=RightShapeDragAreaTransform, ElementName=ContentPanel}" />
              </Grid>
            </igSchedulePrim:GanttTaskContentPanel.RightShape>
            <Grid Visibility="{TemplateBinding ComputedMiddleBarVisibility}">
              <!-- Active Manually Scheduled -->
              <Rectangle Visibility="{Binding Path=TaskStates, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource activeManualNonCriticalToVisibility}}" RadiusX="3" RadiusY="3" Fill="{StaticResource ManualTaskBackgroundBrush}" Stroke="{StaticResource ManualTaskBorderBrush}" StrokeThickness="{TemplateBinding BorderThickness}" />
              <!-- Active Automatically Scheduled -->
              <Rectangle Visibility="{Binding Path=TaskStates, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource activeAutoTaskNonCriticalToVisibility}}" RadiusX="3" RadiusY="3" Fill="{StaticResource AutomaticTaskBackgroundBrush}" Stroke="{StaticResource AutomaticTaskBorderBrush}" StrokeThickness="{TemplateBinding BorderThickness}" />
              <!-- Inactive -->
              <Rectangle Visibility="{Binding Path=TaskStates, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource inactiveToVisibility}}" RadiusX="3" RadiusY="3" Fill="{StaticResource InactiveTaskBackgroundBrush}" Stroke="{StaticResource InactiveTaskBorderBrush}" StrokeThickness="{TemplateBinding BorderThickness}" />
              <!-- Active Duration-Only -->
              <Rectangle Visibility="{Binding Path=TaskStates, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource activeDurationOnlyToVisibility}}" RadiusX="3" RadiusY="3" Fill="{StaticResource DurationOnlyTaskBackgroundBrush}" Stroke="{StaticResource DurationOnlyTaskBorderBrush}" StrokeThickness="{TemplateBinding BorderThickness}" />
              <!-- Critical task -->
              <Rectangle Visibility="{Binding Path=TaskStates, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource activeCriticalToVisibility}}" RadiusX="3" RadiusY="3" Fill="{StaticResource CriticalTaskBackgroundBrush}" Stroke="{StaticResource CriticalTaskBorderBrush}" StrokeThickness="{TemplateBinding BorderThickness}" />
              <!-- Duration only overlay to white-out the left/right edges -->
              <Grid Visibility="{Binding Path=TaskStates, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource durationOnlyToVisibility}}">
                <Rectangle HorizontalAlignment="Left" Width="9" Fill="{StaticResource DurationOnlyOverlayLeftBrush}" />
                <Rectangle HorizontalAlignment="Right" Width="9" Fill="{StaticResource DurationOnlyOverlayRightBrush}" />
              </Grid>

              <Grid>
                <Grid.ColumnDefinitions>
                  <ColumnDefinition MaxWidth="8" MinWidth="1" />
                  <ColumnDefinition Width="*" />
                  <ColumnDefinition MaxWidth="8" MinWidth="1" />
                </Grid.ColumnDefinitions>
                <!-- this spans the entire middle and is used to move the task -->
                <igSchedulePrim:GanttTaskDragArea Grid.ColumnSpan="3" />

                <!-- we only need this when we don't have a left shape -->
                <igSchedulePrim:GanttTaskDragArea AreaType="ChangePercentComplete" Visibility="{Binding ComputedLeftShapeVisibility, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource visibilityToNotVisibility}}" Grid.Column="0" />

                <!-- we only need this when we don't have a right shape -->
                <igSchedulePrim:GanttTaskDragArea AreaType="ResizeTaskBarEnd" Visibility="{Binding ComputedRightShapeVisibility, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource visibilityToNotVisibility}}" Grid.Column="2" />
              </Grid>
            </Grid>

            <!-- Adorners -->
            <StackPanel Orientation="Horizontal" Margin="0,0,10,0" Visibility="{TemplateBinding TaskAdornmentVisibility}" igSchedulePrim:GanttTaskContentPanel.AdornerLocation="Left">
              <igSchedulePrim:GanttTaskDependencyDragArea AreaType="Start" Margin="5,0,0,0" Visibility="{TemplateBinding ComputedStartLinkVisibility}" />
            </StackPanel>
            <StackPanel Orientation="Horizontal" Margin="10,0,0,0" Visibility="{TemplateBinding TaskAdornmentVisibility}" igSchedulePrim:GanttTaskContentPanel.AdornerLocation="Right">
              <igSchedulePrim:GanttTaskDependencyDragArea AreaType="Finish" Margin="0,0,5,0" Visibility="{TemplateBinding ComputedFinishLinkVisibility}" />
              <Grid IsHitTestVisible="False">
                <TextBlock Visibility="{Binding Path=Text, RelativeSource={RelativeSource Self}, Converter={StaticResource emptyToCollapsed}}" Text="{Binding Path=Task.ResourcesText, RelativeSource={RelativeSource TemplatedParent}}" />
              </Grid>
            </StackPanel>
          </igSchedulePrim:GanttTaskContentPanel>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- *********************************  GanttSummaryTaskToolTipPresenter Style  ********************************* -->
  <Style TargetType="igSchedulePrim:GanttSummaryTaskToolTipPresenter">
    <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igSchedulePrim:GanttSummaryTaskToolTipPresenter">
          <StackPanel>
            <ContentControl Style="{StaticResource ToolTipHeaderTemplate}" Content="{Binding Source={StaticResource summaryToolTipTitle}, Path=Value}" Foreground="{StaticResource ForegroundBrush}" Visibility="{Binding TaskStates, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource notProjectSummaryToVisibility}}" />
            <ContentControl Style="{StaticResource ToolTipHeaderTemplate}" Content="{Binding Source={StaticResource projectSummaryToolTipTitle}, Path=Value}" Foreground="{StaticResource ForegroundBrush}" Visibility="{Binding TaskStates, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource projectSummaryToVisibility}}" />

            <StackPanel Orientation="Horizontal" Margin="4,4,4,2">
              <TextBlock Text="{Binding Source={StaticResource taskToolTipNameLabel}, Path=Value}" />
              <TextBlock Text="{Binding Task.TaskName, RelativeSource={RelativeSource TemplatedParent}}" />
            </StackPanel>

            <Grid Margin="4,2" Visibility="{Binding TaskStates, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource notFinishOnlyToVisibility}}">
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition />
                <ColumnDefinition Width="Auto" />
              </Grid.ColumnDefinitions>
              <StackPanel Orientation="Horizontal">
                <TextBlock Text="{Binding Source={StaticResource taskToolTipTaskStartLabel}, Path=Value}" />
                <igSchedulePrim:ProjectDatePresenter DateTime="{Binding Task.CalculatedStart, RelativeSource={RelativeSource TemplatedParent}}" StringFormat="{Binding Task.Project.SettingsResolved.DateStringFormat, RelativeSource={RelativeSource TemplatedParent}}" LocalToken="{Binding Task.Project.TimeZoneInfoProvider.LocalToken, RelativeSource={RelativeSource TemplatedParent}}" />
              </StackPanel>

              <StackPanel Margin="16,0,0,0" Orientation="Horizontal" Grid.Column="2" Visibility="{Binding HasStartDifference, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource boolToVisibility}}">
                <TextBlock Text="(" />
                <TextBlock Text="{Binding Source={StaticResource taskToolTipSubtaskStartLabel}, Path=Value}" />
                <igSchedulePrim:ProjectDatePresenter DateTime="{Binding Task.ScheduledStart, RelativeSource={RelativeSource TemplatedParent}}" StringFormat="{Binding Task.Project.SettingsResolved.DateStringFormat, RelativeSource={RelativeSource TemplatedParent}}" LocalToken="{Binding Task.Project.TimeZoneInfoProvider.LocalToken, RelativeSource={RelativeSource TemplatedParent}}" />
                <TextBlock Text=")" />
              </StackPanel>
            </Grid>

            <Grid Margin="4,2" Visibility="{Binding TaskStates, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource notStartOnlyToVisibility}}">
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition />
                <ColumnDefinition Width="Auto" />
              </Grid.ColumnDefinitions>

              <StackPanel Orientation="Horizontal">
                <TextBlock Text="{Binding Source={StaticResource taskToolTipTaskFinishLabel}, Path=Value}" />
                <igSchedulePrim:ProjectDatePresenter DateTime="{Binding Task.CalculatedFinish, RelativeSource={RelativeSource TemplatedParent}}" StringFormat="{Binding Task.Project.SettingsResolved.DateStringFormat, RelativeSource={RelativeSource TemplatedParent}}" LocalToken="{Binding Task.Project.TimeZoneInfoProvider.LocalToken, RelativeSource={RelativeSource TemplatedParent}}" />
              </StackPanel>

              <StackPanel Margin="16,0,0,0" Orientation="Horizontal" Grid.Column="2" Visibility="{Binding HasFinishDifference, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource boolToVisibility}}">
                <TextBlock Text="(" />
                <TextBlock Text="{Binding Source={StaticResource taskToolTipSubtaskFinishLabel}, Path=Value}" />
                <igSchedulePrim:ProjectDatePresenter DateTime="{Binding Task.ScheduledFinish, RelativeSource={RelativeSource TemplatedParent}}" StringFormat="{Binding Task.Project.SettingsResolved.DateStringFormat, RelativeSource={RelativeSource TemplatedParent}}" LocalToken="{Binding Task.Project.TimeZoneInfoProvider.LocalToken, RelativeSource={RelativeSource TemplatedParent}}" />
                <TextBlock Text=")" />
              </StackPanel>
            </Grid>

            <Grid Margin="4,2" Visibility="{Binding TaskStates, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource notStartOrFinishOnlyToVisibility}}">
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition />
                <ColumnDefinition Width="Auto" />
              </Grid.ColumnDefinitions>

              <StackPanel Orientation="Horizontal">
                <TextBlock Text="{Binding Source={StaticResource taskToolTipDurationLabel}, Path=Value}" />
                <igSchedulePrim:ProjectDurationPresenter Duration="{Binding Task.ManualDuration, RelativeSource={RelativeSource TemplatedParent}}" Project="{Binding Task.Project, RelativeSource={RelativeSource TemplatedParent}}" />
              </StackPanel>

              <StackPanel Margin="16,0,0,0" Orientation="Horizontal" Grid.Column="2" Visibility="{Binding HasDurationDifference, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource boolToVisibility}}">
                <TextBlock Text="(" />
                <TextBlock Text="{Binding Source={StaticResource taskToolTipSubtaskDurationLabel}, Path=Value}" />
                <igSchedulePrim:ProjectDurationPresenter Duration="{Binding Task.ScheduledDuration, RelativeSource={RelativeSource TemplatedParent}}" Project="{Binding Task.Project, RelativeSource={RelativeSource TemplatedParent}}" />
                <TextBlock Text=")" />
              </StackPanel>
            </Grid>

            <TextBlock Text="{TemplateBinding StartDifferenceText}" Visibility="{Binding Path=StartDifferenceText, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource emptyToCollapsed}}" />
            <TextBlock Text="{TemplateBinding FinishDifferenceText}" Visibility="{Binding Path=FinishDifferenceText, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource emptyToCollapsed}}" />
          </StackPanel>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- *********************************  GanttSummaryTaskPresenter Style  ********************************* -->
  <Style TargetType="igSchedulePrim:GanttSummaryTaskPresenter" BasedOn="{StaticResource GanttTaskPresenterBase}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igSchedulePrim:GanttSummaryTaskPresenter">
          <igSchedulePrim:GanttTaskContentPanel x:Name="ContentPanel" BarHeight="{TemplateBinding BarHeight}" LeftShapeAlignment="OverEdge" RightShapeAlignment="OverEdge" igPrim:XamlHelper.SnapsToDevicePixels="True">
            <ToolTipService.ToolTip>
              <ToolTip Template="{StaticResource ToolTipTemplate}">
                <igSchedulePrim:GanttSummaryTaskToolTipPresenter Task="{TemplateBinding Task}" TaskStates="{TemplateBinding TaskStates}" />
              </ToolTip>
            </ToolTipService.ToolTip>
            <igSchedulePrim:GanttTaskContentPanel.LeftShape>
              <!-- Note: The natural size of the shape paths should be small so it scales properly with the uniformtofill -->
              <Grid Canvas.ZIndex="1" Visibility="{TemplateBinding ComputedLeftShapeVisibility}">
                <Path x:Name="LeftShape" IsHitTestVisible="false" Visibility="{Binding Path=TaskStates, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource activeSummaryNotPlaceholderToVisibility}}" StrokeThickness="1" Stroke="{StaticResource TaskShapeBorderBrush}" Fill="{StaticResource TaskShapeBackgroundBrush}" Stretch="UniformToFill" Data="M 0,0 2,0 2,1 1,2 0,1 Z" />
                <Path x:Name="LeftShapeProject" IsHitTestVisible="false" Visibility="{Binding Path=TaskStates, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource activeProjectSummaryNotPlaceholderToVisibility}}" StrokeThickness="1" Stroke="{StaticResource ActiveProjectSummaryTaskBorderBrush}" Fill="{StaticResource ActiveProjectSummaryTaskBackgroundBrush}" Stretch="UniformToFill" Data="M 0,0 2,0 2,1 1,2 0,1 Z" />
                <Path x:Name="LeftShapeInactive" IsHitTestVisible="false" Visibility="{Binding Path=TaskStates, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource inactiveToVisibility}}" StrokeThickness="1" Stroke="{StaticResource InactiveTaskBorderBrush}" Fill="{StaticResource InactiveTaskBackgroundBrush}" Stretch="UniformToFill" Data="M 0,0 2,0 2,1 1,2 0,1 Z" />
                <Path x:Name="LeftShapeStartOnly" IsHitTestVisible="false" StrokeThickness="1" Visibility="{Binding Path=TaskStates, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource startOnlyToVisibility}}" Stroke="{StaticResource TaskShapeBorderBrush}" Fill="{StaticResource TaskShapeBackgroundBrush}" Stretch="UniformToFill" Data="M 0,0 2.5,0 2.5,1 1,1 1,4 2.5,4 2.5,5 0,5 Z" />

                <!-- when this is a start only task then we want to be able to move the task -->
                <igSchedulePrim:GanttTaskDragArea Visibility="{Binding TaskStates, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource startOnlyToVisibility}}" RenderTransform="{Binding Path=LeftShapeDragAreaTransform, ElementName=ContentPanel}" />
              </Grid>
            </igSchedulePrim:GanttTaskContentPanel.LeftShape>
            <igSchedulePrim:GanttTaskContentPanel.RightShape>
              <Grid Canvas.ZIndex="1" Visibility="{TemplateBinding ComputedRightShapeVisibility}">
                <!-- Note: The natural size of the shape paths should be small so it scales properly with the uniformtofill -->
                <Path x:Name="RightShape" IsHitTestVisible="false" Visibility="{Binding Path=TaskStates, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource activeSummaryNotPlaceholderToVisibility}}" StrokeThickness="1" Stroke="{StaticResource TaskShapeBorderBrush}" Fill="{StaticResource TaskShapeBackgroundBrush}" Stretch="UniformToFill" Data="M 0,0 2,0 2,1 1,2 0,1 Z" />
                <Path x:Name="RightShapeProject" IsHitTestVisible="false" Visibility="{Binding Path=TaskStates, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource activeProjectSummaryNotPlaceholderToVisibility}}" StrokeThickness="1" Stroke="{StaticResource ActiveProjectSummaryTaskBorderBrush}" Fill="{StaticResource ActiveProjectSummaryTaskBackgroundBrush}" Stretch="UniformToFill" Data="M 0,0 2,0 2,1 1,2 0,1 Z" />
                <Path x:Name="RightShapeInactive" IsHitTestVisible="false" Visibility="{Binding Path=TaskStates, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource inactiveToVisibility}}" StrokeThickness="1" Stroke="{StaticResource InactiveTaskBorderBrush}" Fill="{StaticResource InactiveTaskBackgroundBrush}" Stretch="UniformToFill" Data="M 0,0 2,0 2,1 1,2 0,1 Z" />
                <Path x:Name="RightShapeFinishOnly" IsHitTestVisible="false" StrokeThickness="1" Visibility="{Binding Path=TaskStates, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource finishOnlyToVisibility}}" Stroke="{StaticResource TaskShapeBorderBrush}" Fill="{StaticResource TaskShapeBackgroundBrush}" Stretch="UniformToFill" Data="M 0,0 2.5,0 2.5,5 0,5 0,4 1.5,4 1.5,1 0,1 Z" />

                <!-- when this is a finish only task then we want to be able to move the task (or drag the end) -->
                <igSchedulePrim:GanttTaskDragArea AreaType="{Binding TaskStates, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource rightShapeToAreaType}}" RenderTransform="{Binding Path=RightShapeDragAreaTransform, ElementName=ContentPanel}" />
              </Grid>
            </igSchedulePrim:GanttTaskContentPanel.RightShape>
            <Grid Visibility="{TemplateBinding ComputedMiddleBarVisibility}">
              <Grid.RowDefinitions>
                <RowDefinition />
                <RowDefinition />
              </Grid.RowDefinitions>
              <Rectangle RadiusX="3" RadiusY="3" Visibility="{Binding Path=TaskStates, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource activeSummaryNotPlaceholderToVisibility}}" Fill="{StaticResource ActiveSummaryTaskBackgroundBrush}" Stroke="{StaticResource ActiveSummaryTaskBorderBrush}" StrokeThickness="{TemplateBinding BorderThickness}" />
              <Rectangle RadiusX="3" RadiusY="3" Visibility="{Binding Path=TaskStates, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource activeProjectSummaryNotPlaceholderToVisibility}}" Fill="{StaticResource ActiveProjectSummaryTaskBackgroundBrush}" Stroke="{StaticResource ActiveProjectSummaryTaskBorderBrush}" StrokeThickness="{TemplateBinding BorderThickness}" />
              <Rectangle RadiusX="3" RadiusY="3" Visibility="{Binding Path=TaskStates, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource inactiveToVisibility}}" Fill="{StaticResource InactiveTaskBackgroundBrush}" Stroke="{StaticResource InactiveTaskBorderBrush}" StrokeThickness="{TemplateBinding BorderThickness}" />
              <Grid Visibility="{Binding Path=TaskStates, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource durationOnlyToVisibility}}" Grid.RowSpan="2">
                <Rectangle RadiusX="3" RadiusY="3" Fill="{StaticResource DurationOnlyTaskBackgroundBrush}" Stroke="{StaticResource DurationOnlyTaskBorderBrush}" StrokeThickness="{TemplateBinding BorderThickness}" />
                <Rectangle HorizontalAlignment="Left" Width="9" Fill="{StaticResource DurationOnlyOverlayLeftBrush}" />
                <Rectangle HorizontalAlignment="Right" Width="9" Fill="{StaticResource DurationOnlyOverlayRightBrush}" />
              </Grid>

              <Grid>
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="*" />
                  <ColumnDefinition MaxWidth="8" MinWidth="1" />
                </Grid.ColumnDefinitions>

                <!-- this spans the entire middle and is used to move the task -->
                <igSchedulePrim:GanttTaskDragArea Grid.ColumnSpan="2" />

                <!-- we only need this when we don't have a right shape -->
                <igSchedulePrim:GanttTaskDragArea AreaType="ResizeTaskBarEnd" Visibility="{Binding ComputedRightShapeVisibility, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource visibilityToNotVisibility}}" Grid.Column="1" />
              </Grid>
            </Grid>

            <!-- Adorners -->
            <StackPanel Orientation="Horizontal" Margin="0,0,10,0" Visibility="{TemplateBinding TaskAdornmentVisibility}" igSchedulePrim:GanttTaskContentPanel.AdornerLocation="Left">
              <igSchedulePrim:GanttTaskDependencyDragArea AreaType="Start" Margin="5,0,0,0" Visibility="{TemplateBinding ComputedStartLinkVisibility}" />
            </StackPanel>
            <StackPanel Orientation="Horizontal" Margin="10,0,0,0" Visibility="{TemplateBinding TaskAdornmentVisibility}" igSchedulePrim:GanttTaskContentPanel.AdornerLocation="Right">
              <igSchedulePrim:GanttTaskDependencyDragArea AreaType="Finish" Margin="0,0,5,0" Visibility="{TemplateBinding ComputedFinishLinkVisibility}" />
            </StackPanel>
          </igSchedulePrim:GanttTaskContentPanel>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- *********************************  BlockingError Style  ********************************* -->
  <Style x:Key="BlockingErrorStyle" TargetType="ContentControl">
    <Setter Property="igPrim:XamlHelper.Focusable" Value="False" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="ContentControl">
          <Border Background="{StaticResource BlockingErrorBackgroundBrush}">
            <Grid>
              <Border Background="{StaticResource ShadowBackgroundBrush}" Width="550" Height="350" CornerRadius="5" Margin="4,4,-4,-4" Opacity="0.04" />
              <Border Background="{StaticResource ShadowBackgroundBrush}" Width="550" Height="350" CornerRadius="4" Margin="3,3,-3,-3" Opacity="0.06" />
              <Border Background="{StaticResource ShadowBackgroundBrush}" Width="550" Height="350" CornerRadius="3" Margin="2,2,-2,-2" Opacity="0.08" />
              <Border Background="{StaticResource ShadowBackgroundBrush}" Width="550" Height="350" CornerRadius="2" Margin="1,1,-1,-1" Opacity="0.1" />
              <Border Background="{StaticResource TooltipBackgroundBrush}" BorderBrush="{StaticResource TooltipBorderBrush}" Width="550" Height="350" VerticalAlignment="Center" HorizontalAlignment="Center" BorderThickness="1">
                <Grid>
                  <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                  </Grid.RowDefinitions>
                  <!--Header-->
                  <Border Background="{StaticResource BlockingErrorHeaderBackgroundBrush}">
                    <ContentControl Grid.Row="0" Foreground="{StaticResource BlockingErrorHeaderForegroundBrush}" Content="{Binding Source={StaticResource BlockingErrorLiteral}, Path=Value}" Margin="10,5">
                      <ContentControl.FontSize>
                        <Binding Path="FontSize" RelativeSource="{RelativeSource TemplatedParent}">
                          <Binding.Converter>
                            <igPrim:MinMaxConverter MinValue="14" />
                          </Binding.Converter>
                        </Binding>
                      </ContentControl.FontSize>
                    </ContentControl>
                  </Border>

                  <!--Description-->
                  <TextBlock Grid.Row="1" Margin="10,5,5,0" FontWeight="Bold" TextWrapping="Wrap" Foreground="{StaticResource ForegroundBrush}" Text="{Binding Path=Content.UserErrorText, RelativeSource={RelativeSource TemplatedParent}}" Visibility="{Binding Path=Content.UserErrorText, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource nullToVisibility}}">
                    <TextBlock.FontSize>
                      <Binding Path="FontSize" RelativeSource="{RelativeSource TemplatedParent}">
                        <Binding.Converter>
                          <igPrim:MinMaxConverter MinValue="12.5" />
                        </Binding.Converter>
                      </Binding>
                    </TextBlock.FontSize>
                  </TextBlock>

                  <!--Details-->
                  <ScrollViewer Grid.Row="2" Margin="5" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto" BorderThickness="0">
                    <TextBox Text="{Binding Path=Content, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" IsReadOnly="True" TextWrapping="Wrap" BorderThickness="1" Padding="2" Foreground="{StaticResource ForegroundBrush}" BorderBrush="{StaticResource TextBoxBorderBrush}" />
                  </ScrollViewer>
                </Grid>
              </Border>
            </Grid>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- *********************************  XamGantt Style  ********************************* -->
  <Style TargetType="igSchedule:XamGantt">
    <Setter Property="Background" Value="{StaticResource GanttBackgroundBrush}" />
    <Setter Property="BorderBrush" Value="{StaticResource GanttBorderBrush}" />
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="ManualValueTextBlockStyle" Value="{StaticResource ManualTextBlockStyle}" />
    <Setter Property="ExpansionIndicatorStyle" Value="{StaticResource expansionIndicatorStyle}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igSchedule:XamGantt">
          <Border BorderBrush="{TemplateBinding BorderBrush}" Padding="{TemplateBinding Padding}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" igPrim:XamlHelper.SnapsToDevicePixels="True">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup Name="ErrorStates">
                <VisualState Name="NoError" />
                <VisualState Name="Error">
                  <Storyboard Storyboard.TargetName="ErrorDisplay" Storyboard.TargetProperty="Visibility">
                    <ObjectAnimationUsingKeyFrames>
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid x:Name="RootPanel" igPrim:XamlHelper.SnapsToDevicePixels="{TemplateBinding igPrim:XamlHelper.SnapsToDevicePixels}">
              <Grid>
                <Grid.RowDefinitions>
                  <RowDefinition Height="*" />
                  <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="{Binding Path=GridWidth, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}" />
                  <ColumnDefinition Width="Auto" />
                  <ColumnDefinition Width="{Binding Path=ChartWidth, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}" />
                  <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <Grid x:Name="GridSite" Grid.Column="0" Grid.Row="0" />
                <Grid x:Name="ChartSite" Grid.Column="2" Grid.Row="0" />
                <igSchedulePrim:ProjectGridSplitter x:Name="GridChartSplitter" ShowsPreview="True" HorizontalAlignment="Center" Width="6" Grid.Column="1" Grid.Row="0" Grid.RowSpan="2" />
                <ScrollBar x:Name="GridHorizontalScrollBar" Orientation="Horizontal" Grid.Column="0" Grid.Row="1" Style="{StaticResource ScrollBarStyle}" />
                <ScrollBar x:Name="ChartHorizontalScrollBar" Orientation="Horizontal" Grid.Column="2" Grid.Row="1" Style="{StaticResource ScrollBarStyle}" />
                <ScrollBar x:Name="VerticalScrollBar" Orientation="Vertical" Grid.Column="3" Grid.Row="0" Style="{StaticResource ScrollBarStyle}" />
              </Grid>
              <ContentControl x:Name="ErrorDisplay" Visibility="Collapsed" Content="{Binding Path=BlockingError, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource BlockingErrorStyle}" />
            </Grid>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
</ResourceDictionary>