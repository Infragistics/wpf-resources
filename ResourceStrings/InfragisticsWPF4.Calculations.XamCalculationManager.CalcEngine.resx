<?xml version="1.0" encoding="utf-8" ?>
<root>
	<!-- 
    Microsoft ResX Schema 
    
    Version 1.3
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">1.3</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1">this is my long string</data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        [base64 mime encoded serialized .NET Framework object]
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        [base64 mime encoded string representing a byte array form of the .NET Framework object]
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used forserialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
	<xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
		<xsd:element name="root" msdata:IsDataSet="true">
			<xsd:complexType>
				<xsd:choice maxOccurs="unbounded">
					<xsd:element name="data">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
								<xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
							</xsd:sequence>
							<xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
							<xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
							<xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
						</xsd:complexType>
					</xsd:element>
					<xsd:element name="resheader">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
							</xsd:sequence>
							<xsd:attribute name="name" type="xsd:string" use="required" />
						</xsd:complexType>
					</xsd:element>
				</xsd:choice>
			</xsd:complexType>
		</xsd:element>
	</xsd:schema>
	<resheader name="resmimetype">
		<value>text/microsoft-resx</value>
	</resheader>
	<resheader name="version">
		<value>1.3</value>
	</resheader>
	<resheader name="reader">
		<value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
	</resheader>
	<resheader name="writer">
		<value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
	</resheader>
	<data name="Error_UCErrorCode_Div">
		<value>Divide by zero</value>
	</data>
	<data name="Error_UCErrorCode_Fail">
		<value>Fail</value>
	</data>
	<data name="Error_UCErrorCode_NA">
		<value>Not applicable</value>
	</data>
	<data name="Error_UCErrorCode_Null">
		<value>Null Value</value>
	</data>
	<data name="Error_UCErrorCode_Num">
		<value>Invalid numeric values in the function or formula.</value>
	</data>
	<data name="Error_UCErrorCode_Ok">
		<value>Succeed</value>
	</data>
	<data name="Error_UCErrorCode_Reference">
		<value>Invalid or unavailable reference</value>
	</data>
	<data name="Error_UCErrorCode_Unknown">
		<value>Invalid code</value>
	</data>
	<data name="Error_UCErrorCode_Value">
		<value>Incorrect type of argument or operand.</value>
	</data>
	<data name="Error_NullOperand">
		<value>Null operand</value>
	</data>
	<data name="Error_InvalidOperand">
		<value>Invalid Operand</value>
	</data>
	<data name="Error_InvalidReference">
		<value>Invalid or unavailable reference</value>
	</data>
	<data name="Error_AnchoredReference">
		<value>Attempt to access {0} as an unanchored reference</value>
	</data>
	<data name="Error_ReferenceNotEumerable">
		<value>{0} is not an enumerable reference</value>
	</data>
	<data name="Error_UnexpectedScope">
		<value>{0} - Unexpected scope for Parent {1}</value>
	</data>
	<data name="Error_ExplicitThis">
		<value>{0} - Explicit This not supported</value>
	</data>
	<data name="Error_ScopeAllNotLast">
		<value>{0} - Scope All must appear in last element  {1}</value>
	</data>
	<data name="Error_UnknownRefType">
		<value>{0} - Unknown RefType  {1}</value>
	</data>
	<data name="Error_UnknownScope">
		<value>{0} - Unknown scope  {1}</value>
	</data>
	<data name="Error_ReadOnlyReference">
		<value>{0} - Attempt to set value on readonly reference</value>
	</data>
	<data name="Error_FormulaNotSupported">
		<value>{0} - Attempt to access formula on a reference that doesn't support formulas</value>
	</data>
	<data name="Error_RefMalformed">
		<value>{0} - Malformed Reference  {1}</value>
	</data>
	<data name="Error_ExternalRange">
		<value>Range contains External Reference</value>
	</data>
	<data name="Error_UnknownRange">
		<value>Unknown Range Type</value>
	</data>
	<data name="Error_RangeFromLast">
		<value>fromT.Last not set</value>
	</data>
	<data name="Error_RangeLast">
		<value>RefRange Validate: last tuples [{0}] != [{1}]</value>
	</data>
	<data name="Error_RangeFromNull">
		<value>RefRange: from is null</value>
	</data>
	<data name="Error_RangeToNull">
		<value>RefRange: to is null</value>
	</data>
	<data name="Error_RangeFromRefBase">
		<value>RefRange: from is not a RefBase : {0}</value>
	</data>
	<data name="Error_RangeToRefBase">
		<value>RefRange: to is not a RefBase : {0}</value>
	</data>
	<data name="Error_RangeTuple">
		<value>RefRange Validate: tuples [{0}] !=  [{1}]</value>
	</data>
	<data name="Error_RangeNormalizeScope">
		<value>RefRange Normalize: bad scope [{0}/{1}]</value>
	</data>
	<data name="Error_RangeValidateCount">
		<value>RefRange Validate: from count {0} != to count {1}</value>
	</data>
	<data name="Error_MethodNotSupported">
		<value>{0} does not support {1}.</value>
	</data>
	<data name="Error_NoCurrentRangeElement">
		<value>No current Range Element</value>
	</data>
	<data name="Error_RP_ContainsBase">
		<value>RefParser.Contains - Empty Base</value>
	</data>
	<data name="Error_RP_ContainsTarget">
		<value>RefParser.Contains - Empty Target</value>
	</data>
	<data name="Error_RP_MalformedExtra">
		<value>RefParser Malformed Reference: Multiple [{0}] found in [{1}]</value>
	</data>
	<data name="Error_RP_MalformedUnexpected">
		<value>RefParser Malformed Reference: Unexpected [{0}] found in [{1}]</value>
	</data>
	<data name="Error_RP_MergeRelativeBase">
		<value>RefParser.Merge: Base is Relative</value>
	</data>
	<data name="Error_RT_Expected">
		<value>RefTuple: Expected [{0}] in [{1}]</value>
	</data>
	<data name="Error_RT_NullRefName">
		<value>RefTuple: null RefName</value>
	</data>
	<data name="Error_RT_Unexpected">
		<value>RefTuple: unexpected [{0}] in [{1}]</value>
	</data>
	<data name="Value_UCErrorCode_Div">
		<value>#DIV/0!</value>
	</data>
	<data name="Value_UCErrorCode_Fail">
		<value>#FAIL</value>
	</data>
	<data name="Value_UCErrorCode_NA">
		<value>#N/A</value>
	</data>
	<data name="Value_UCErrorCode_Null">
		<value>#NULL!</value>
	</data>
	<data name="Value_UCErrorCode_Num">
		<value>#NUM!</value>
	</data>
	<data name="Value_UCErrorCode_Ok">
		<value>#OK</value>
	</data>
	<data name="Value_UCErrorCode_Reference">
		<value>#REF!</value>
	</data>
	<data name="Value_UCErrorCode_Unknown">
		<value>#N/A</value>
	</data>
	<data name="Value_UCErrorCode_Value">
		<value>#VALUE!</value>
	</data>
	<data name="Error_RT_InvalidTuple_UnescapedCharacter">
		<value>Unescaped {0} character encountered in {1} at location {2}.</value>
	</data>
	<data name="Error_RT_InvalidTuple_NamePortionEmpty">
		<value>Invalid element {0}. Element name portion empty.</value>
	</data>
	<data name="Error_RT_InvalidTuple_CharactersAfterScopeEnd">
		<value>Invalid element {0}. Characters encountered after the end of the scope.</value>
	</data>
	<data name="Error_RT_InvalidTuple_MissingEndQuotes">
		<value>Invalid element {0}. Missing end quotes.</value>
	</data>
	<data name="Error_RT_InvalidTuple_MissingCloseParenthesis">
		<value>Invalid element {0}. Missing close parenthesis.</value>
	</data>
	<data name="Error_RT_InvalidTuple_ScopeIndexLarge">
		<value>Invalid element {0}. Index {1} is invalid: {2}.</value>
	</data>
	<data name="Error_RP_EmptyElement">
		<value>Invalid reference {0}. Empty element encountered at location {1}.</value>
	</data>
	<data name="Error_RP_EmptyReference">
		<value>Invalid reference {0}. Reference is empty.</value>
	</data>
	<data name="Error_RP_MissingEndQuotes">
		<value>Invalid reference {0}. Missing end quotes.</value>
	</data>
	<data name="Error_RP_MissingCloseParenthesis">
		<value>Invalid reference {0}. Missing close parenthesis.</value>
	</data>
	<data name="Error_RT_InvalidScope">
		<value>Invalid scope: {0}.</value>
	</data>
	<data name="Error_RT_InvalidScope_CharactersAfterClosingQuotes">
		<value>Characters encountered after closing double quotes in {0} scope at location {1}.</value>
	</data>
	<data name="Error_UCErrorCode_Name">
		<value>Invalid name</value>
	</data>
	<data name="Value_UCErrorCode_Name">
		<value>#NAME?</value>
	</data>
</root>