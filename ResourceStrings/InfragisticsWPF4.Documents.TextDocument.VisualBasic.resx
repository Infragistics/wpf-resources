<?xml version="1.0" encoding="utf-8"?>
<root>
	<!-- 
		Microsoft ResX Schema

		Version 1.3

		The primary goals of this format is to allow a simple XML format 
		that is mostly human readable. The generation and parsing of the 
		various data types are done through the TypeConverter classes 
		associated with the data types.

		Example:

		... ado.net/XML headers & schema ...
		<resheader name="resmimetype">text/microsoft-resx</resheader>
		<resheader name="version">1.3</resheader>
		<resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
		<resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
		<data name="Name1">this is my long string</data>
		<data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
		<data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
			[base64 mime encoded serialized .NET Framework object]
		</data>
		<data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
			[base64 mime encoded string representing a byte array form of the .NET Framework object]
		</data>

		There are any number of "resheader" rows that contain simple 
		name/value pairs.

		Each data row contains a name, and value. The row also contains a 
		type or mimetype. Type corresponds to a .NET class that support 
		text/value conversion through the TypeConverter architecture. 
		Classes that don't support this are serialized and stored with the 
		mimetype set.

		The mimetype is used for serialized objects, and tells the 
		ResXResourceReader how to depersist the object. This is currently not 
		extensible. For a given mimetype the value must be set accordingly:

		Note - application/x-microsoft.net.object.binary.base64 is the format 
		that the ResXResourceWriter will generate, however the reader can 
		read any of the formats listed below.

		mimetype: application/x-microsoft.net.object.binary.base64
		value   : The object must be serialized with 
			: System.Serialization.Formatters.Binary.BinaryFormatter
			: and then encoded with base64 encoding.

		mimetype: application/x-microsoft.net.object.soap.base64
		value   : The object must be serialized with 
			: System.Runtime.Serialization.Formatters.Soap.SoapFormatter
			: and then encoded with base64 encoding.

		mimetype: application/x-microsoft.net.object.bytearray.base64
		value   : The object must be serialized into a byte array 
			: using a System.ComponentModel.TypeConverter
			: and then encoded with base64 encoding.
	-->
	
	<xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
		<xsd:element name="root" msdata:IsDataSet="true">
			<xsd:complexType>
				<xsd:choice maxOccurs="unbounded">
					<xsd:element name="data">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
								<xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
							</xsd:sequence>
							<xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
							<xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
							<xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
						</xsd:complexType>
					</xsd:element>
					<xsd:element name="resheader">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
							</xsd:sequence>
							<xsd:attribute name="name" type="xsd:string" use="required" />
						</xsd:complexType>
					</xsd:element>
				</xsd:choice>
			</xsd:complexType>
		</xsd:element>
	</xsd:schema>
	<resheader name="resmimetype">
		<value>text/microsoft-resx</value>
	</resheader>
	<resheader name="version">
		<value>1.3</value>
	</resheader>
	<resheader name="reader">
		<value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.3500.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
	</resheader>
	<resheader name="writer">
		<value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.3500.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
	</resheader>
  <data name="ErrorAlias_Expression" xml:space="preserve">
    <value>Expression</value>
  </data>
  <data name="ErrorAlias_Identifier" xml:space="preserve">
    <value>Identifier</value>
  </data>
  <data name="ErrorAlias_NumericLiteral" xml:space="preserve">
    <value>Numeric literal</value>
  </data>
  <data name="ErrorAlias_Statement" xml:space="preserve">
    <value>Statement</value>
  </data>
  <data name="ErrorAlias_Modifier" xml:space="preserve">
    <value>Modifier</value>
  </data>
  <data name="ErrorAlias_AggregationExpression" xml:space="preserve">
    <value>Aggregation expression</value>
  </data>
  <data name="ErrorAlias_AliasName" xml:space="preserve">
    <value>Alias name</value>
  </data>
  <data name="ErrorAlias_ArgumentExpression" xml:space="preserve">
    <value>Argument expression</value>
  </data>
  <data name="ErrorAlias_NullableOrArrayModifier" xml:space="preserve">
    <value>Nullable or array modifier</value>
  </data>
  <data name="ErrorAlias_ArrayRankSpecifiers" xml:space="preserve">
    <value>Array rank specifiers</value>
  </data>
  <data name="ErrorAlias_Attribute" xml:space="preserve">
    <value>Attribute</value>
  </data>
  <data name="ErrorAlias_ArrayBoundInitialization" xml:space="preserve">
    <value>Array bound initialization</value>
  </data>
  <data name="ErrorAlias_CaseStatement" xml:space="preserve">
    <value>Case statement</value>
  </data>
  <data name="ErrorAlias_TypeMember" xml:space="preserve">
    <value>Type member</value>
  </data>
  <data name="ErrorAlias_CharsetModifier" xml:space="preserve">
    <value>Ansi, Unicode, or Auto</value>
  </data>
  <data name="ErrorAlias_QueryExpressionVariableDeclaration" xml:space="preserve">
    <value>Query expression variable declaration</value>
  </data>
  <data name="ErrorAlias_CompareOption" xml:space="preserve">
    <value>Compare option</value>
  </data>
  <data name="ErrorAlias_VariableDeclaration" xml:space="preserve">
    <value>Variable declaration</value>
  </data>
  <data name="ErrorAlias_Type" xml:space="preserve">
    <value>Type</value>
  </data>
  <data name="ErrorAlias_TypeOrNamespaceDeclaration" xml:space="preserve">
    <value>Type or namespace declaration</value>
  </data>
  <data name="ErrorAlias_ElseIf" xml:space="preserve">
    <value>Else If</value>
  </data>
  <data name="ErrorAlias_EventAccessor" xml:space="preserve">
    <value>Event accessor</value>
  </data>
  <data name="ErrorAlias_TypeSpecifier" xml:space="preserve">
    <value>Type specifier</value>
  </data>
  <data name="ErrorAlias_FieldInitializer" xml:space="preserve">
    <value>Field initializer</value>
  </data>
  <data name="ErrorAlias_QueryBodyClause" xml:space="preserve">
    <value>Query body clause</value>
  </data>
  <data name="ErrorAlias_SubOrFunctionSignature" xml:space="preserve">
    <value>Sub or Function signature</value>
  </data>
  <data name="ErrorAlias_AttributeTarget" xml:space="preserve">
    <value>Attribute target</value>
  </data>
  <data name="ErrorAlias_EventName" xml:space="preserve">
    <value>Event name</value>
  </data>
  <data name="ErrorAlias_HandlesOrImplementsClause" xml:space="preserve">
    <value>Handles or Implements clause</value>
  </data>
  <data name="ErrorAlias_ImplementsClause" xml:space="preserve">
    <value>Implements clause</value>
  </data>
  <data name="ErrorAlias_ImportsOrOptionStatement" xml:space="preserve">
    <value>Imports or Option statement</value>
  </data>
  <data name="ErrorAlias_InheritsClause" xml:space="preserve">
    <value>Inherits clause</value>
  </data>
  <data name="ErrorAlias_InterfaceMember" xml:space="preserve">
    <value>Interface member</value>
  </data>
  <data name="ErrorAlias_LibraryName" xml:space="preserve">
    <value>Library name</value>
  </data>
  <data name="ErrorAlias_EndOfStatement" xml:space="preserve">
    <value>End of statement</value>
  </data>
  <data name="ErrorAlias_Loop" xml:space="preserve">
    <value>Loop</value>
  </data>
  <data name="ErrorAlias_ObjectOrCollectionInitialization" xml:space="preserve">
    <value>Object or collection initialization</value>
  </data>
  <data name="ErrorAlias_OverloadableOperator" xml:space="preserve">
    <value>Overloadable operator</value>
  </data>
  <data name="ErrorAlias_ParameterList" xml:space="preserve">
    <value>Parameter list</value>
  </data>
  <data name="ErrorAlias_PropertyAccessor" xml:space="preserve">
    <value>Get or Set accessor</value>
  </data>
  <data name="ErrorAlias_TypeParameterConstraints" xml:space="preserve">
    <value>Type parameter constraints</value>
  </data>
  <data name="ErrorAlias_InOrOut" xml:space="preserve">
    <value>In or out</value>
  </data>
  <data name="ErrorAlias_WhileOrUntilClause" xml:space="preserve">
    <value>While or Until clause</value>
  </data>
  <data name="ErrorAlias_MethodArguments" xml:space="preserve">
    <value>Method or constructor arguments</value>
  </data>
  <data name="ErrorAlias_Block" xml:space="preserve">
    <value>Block</value>
  </data>
  <data name="ErrorAlias_CatchFilterClause" xml:space="preserve">
    <value>Catch filter clause</value>
  </data>
  <data name="ErrorAlias_CatchOrFinallyBlock" xml:space="preserve">
    <value>Catch or Finally block</value>
  </data>
  <data name="ErrorAlias_DateLiteral" xml:space="preserve">
    <value>Date literal</value>
  </data>
  <data name="ErrorAlias_ValueInitialization" xml:space="preserve">
    <value>Date literal</value>
  </data>
  <data name="ErrorAlias_StepClause" xml:space="preserve">
    <value>Date literal</value>
  </data>
  <data name="ErrorAlias_SelectOrGroupClause" xml:space="preserve">
    <value>Date literal</value>
  </data>
  <data name="ErrorAlias_Next" xml:space="preserve">
    <value>Next</value>
  </data>
  <data name="ErrorAlias_NextClause" xml:space="preserve">
    <value>Next clause</value>
  </data>
  <data name="ErrorAlias_GenericTypeArguments" xml:space="preserve">
    <value>Generic type arguments</value>
  </data>
  <data name="ErrorAlias_GenericTypeParameters" xml:space="preserve">
    <value>Generic type parameters</value>
  </data>
  <data name="ErrorMessage_IncompleteMember" xml:space="preserve">
    <value>Incomplete member definition in class or struct</value>
  </data>
  <data name="ErrorMessage_InterfaceIncompleteMember" xml:space="preserve">
    <value>Incomplete member definition in interface</value>
  </data>
  <data name="ErrorMessage_UnexpectedIdentifier" xml:space="preserve">
    <value>Unexpected identifier</value>
  </data>
</root>
