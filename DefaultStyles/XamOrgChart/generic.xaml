<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"    
    xmlns:ig="http://schemas.infragistics.com/xaml"
    xmlns:local="http://schemas.infragistics.com/xaml"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d">

    <!-- ************************************************ BRUSHES ************************************************
***********************************************************************************************************-->

    <SolidColorBrush x:Key="GenericBackground"  Color="Transparent"/>
    <SolidColorBrush x:Key="ConnectorLine" Color="#FF6A7887"/>

    <SolidColorBrush x:Key="DragStrokeBrush" Color="#FF717E8B"/>
    <SolidColorBrush x:Key="ChartPreviewBrush" Color="#995F6973"/>

    <LinearGradientBrush x:Key="NodeBgBrush" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#CCFFFFFF" Offset="0.992"/>
        <GradientStop Color="White"/>
    </LinearGradientBrush>

    <RadialGradientBrush x:Key="NodeBgBrushOver" RadiusY="1.1" RadiusX="0.9" Center="0.5,0.07" GradientOrigin="0.5,0.07" >
        <GradientStop Color="#FFFDFDFD" Offset="0.5"/>
        <GradientStop Color="#FFB7BFC8" Offset="1"/>
    </RadialGradientBrush>

    <RadialGradientBrush x:Key="NodeBgBrushSelected" RadiusY="1.1" RadiusX="0.8" Center="0.5,0.983" GradientOrigin="0.5,0.983" >
        <GradientStop Color="#FFFDFDFD" Offset="0.527"/>
        <GradientStop Color="#FFB7BFC8" Offset="1"/>
    </RadialGradientBrush>

    <SolidColorBrush x:Key="ForegroundBrush" Color="#FF353535"/>

    <LinearGradientBrush x:Key="ToggleButtonFill" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FFA0B2C4"/>
        <GradientStop Color="#FF798A9B" Offset="1"/>
        <GradientStop Color="#FF8B9CAE" Offset="0.536"/>
    </LinearGradientBrush>
    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0" x:Key="ToggleButtonFillOver">
        <GradientStop Color="#FF4D5A6A" Offset="1"/>
        <GradientStop Color="#FF8CA1B6"/>
    </LinearGradientBrush>
    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0" x:Key="ToggleButtonFillPressed">
        <GradientStop Color="#FF7E8FA1" Offset="1"/>
        <GradientStop Color="#FF566472"/>
    </LinearGradientBrush>
    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0" x:Key="ToggleButtonFillSelected">
        <GradientStop Color="#FF495766"/>
        <GradientStop Color="#FE687A8C" Offset="1"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="NodeBaseFill" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FFA0B2C4"/>
        <GradientStop Color="#FF798A9B" Offset="1"/>
        <GradientStop Color="#FF8B9CAE" Offset="0.536"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="NodeStrokeOver" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#59000000" Offset="1"/>
        <GradientStop Offset="0.8" Color="#19000000"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="NodeFillSelected" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#7F000000" Offset="0.8"/>
        <GradientStop Offset="1" Color="#33000000"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="NodeFillFocus" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#59000000" Offset="1"/>
        <GradientStop Offset="0.8" Color="#19000000"/>
    </LinearGradientBrush>

    <!-- ******************************************** END BRUSHES *********************************************
***********************************************************************************************************-->

    <!-- *********************************  ToolTipStyle  ********************************* -->

    <Style x:Key="ToolTipStyle" TargetType="ContentControl">
        <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}"/>
        <Setter Property="Padding" Value="6,2,6,2"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ContentControl">
                    <Border BorderBrush="{StaticResource ToggleButtonFill}" CornerRadius="3">
                        <Border.Effect>
                            <DropShadowEffect BlurRadius="8" Opacity="0.4" ShadowDepth="3"/>
                        </Border.Effect>
                        <Grid>
                            <Rectangle Fill="{StaticResource NodeBgBrush}" Stroke="{StaticResource ToggleButtonFill}" RadiusY="3" RadiusX="3" Opacity="0.8"/>
                            <ContentPresenter Margin="{TemplateBinding Padding}" HorizontalAlignment="{TemplateBinding HorizontalAlignment}" VerticalAlignment="{TemplateBinding VerticalAlignment}"/>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="ToolTip" BasedOn="{StaticResource ToolTipStyle}"/>

    <!-- *********************************  XamOrgChart  ********************************* -->

    <Style  TargetType="local:XamOrgChart">
        <Setter Property="Background" Value="{StaticResource GenericBackground}"/>
        <Setter Property="BorderBrush" Value="{StaticResource GenericBackground}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Padding" Value="2"/>
        <Setter Property="DragStroke" Value="{StaticResource DragStrokeBrush}"/>
        <Setter Property="DragStrokeThickness" Value="1" />
        <Setter Property="PreviewBrush" Value="{StaticResource ChartPreviewBrush}"/>
        <!-- Connector properties -->
        <Setter Property="Line" Value="{StaticResource ConnectorLine}"/>
        <Setter Property="LineThickness" Value="1"/>
        <Setter Property="LineStartCap" Value="None" />
        <Setter Property="LineEndCap" Value="None" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="ToolTipStyle" Value="{StaticResource ToolTipStyle}" />
        <!-- ControlTemplate. Overrides SurfaceViewer to add the NodesPanel -->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:XamOrgChart">
                    <Border Margin="{TemplateBinding Padding}" Background="{TemplateBinding Background}"
										BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid>
                            <ContentPresenter x:Name="ContentPresenter" Opacity="0"/>
                            <local:OrgChartNodesPanel x:Name="NodesPanel"  Background="{TemplateBinding Background}"  />
                            <Canvas x:Name="Overlay"  />
                            <ig:XamOverviewPlusDetailPane x:Name="Thumbnail"
                                                          IsZoomable="True"
                                                          Visibility="{TemplateBinding OverviewPlusDetailPaneVisibility}"
                                                          HorizontalAlignment="{TemplateBinding HorizontalOverviewPlusDetailPaneAlignment}"
                                                          VerticalAlignment="{TemplateBinding VerticalOverviewPlusDetailPaneAlignment}" />
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- *********************************  NodeToggleButton  ********************************* -->

    <Style x:Key="NodeToggleButton" TargetType="ToggleButton">
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="over" d:IsOptimized="True"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="pressed" d:IsOptimized="True"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="0.3" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="grid" d:IsOptimized="True"/>
                                        <DoubleAnimation Duration="0" To="0.5" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="DisabledFill" d:IsOptimized="True"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CheckStates">
                                <VisualState x:Name="Checked">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="expand">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unchecked"/>
                                <VisualState x:Name="Indeterminate"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="focused" d:IsOptimized="True"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid>
                            <Rectangle x:Name="normal" RadiusX="3" RadiusY="3" Fill="{StaticResource ToggleButtonFill}"/>
                            <Rectangle x:Name="over" RadiusX="3" RadiusY="3" Fill="{StaticResource ToggleButtonFillOver}" Opacity="0"/>
                            <Rectangle x:Name="pressed" RadiusX="3" RadiusY="3" Fill="{StaticResource ToggleButtonFillPressed}" Opacity="0"/>
                            <Rectangle x:Name="focused" RadiusX="3" RadiusY="3" Fill="{StaticResource ToggleButtonFillSelected}" StrokeThickness="1" Opacity="0"/>
                            <Rectangle x:Name="DisabledFill" Fill="{StaticResource NodeBgBrush}" Grid.RowSpan="2" RadiusX="3" RadiusY="3" Opacity="0"/>

                        </Grid>
                        <Grid x:Name="grid" HorizontalAlignment="Center" VerticalAlignment="Center" Width="8" Height="8">
                            <Path x:Name="expand" Data="M3,0 L5,0 L5,3 L8,3 L8,5 L5,5 L5,8 L3,8 L3,5 L0,5 L0,3 L3,3 z" Fill="#ffffff" Stretch="Fill" UseLayoutRounding="False" HorizontalAlignment="Left" VerticalAlignment="Top" Visibility="Collapsed"/>
                            <Path x:Name="collapse" Data="M0,0 L8,0 L8,2 L0,2 z" Fill="#ffffff" Height="2" Stretch="Fill" UseLayoutRounding="False" />
                        </Grid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="ToggleButton" BasedOn="{StaticResource NodeToggleButton}"/>

    <!-- OrgChartNode
            This is a container for the page designer's item template, visually wrapping it with
            decorations for mouse, drag and drop, expanded and haschildren visual states
-->

    <!-- *********************************  OrgChartNodeControl  ********************************* -->

    <Style TargetType="local:OrgChartNodeControl">
        <Setter Property="Padding" Value="6,3,6,2"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="MinHeight" Value="30"/>
        <Setter Property="MinWidth" Value="60"/>
        <Setter Property="Background" Value="{StaticResource NodeBgBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource NodeBaseFill}"/>
        <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}"/>
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:OrgChartNodeControl">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="6"/>
                        </Grid.RowDefinitions>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal">

                                </VisualState>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="nodeBackOver" d:IsOptimized="True"/>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="nodeBgOver" d:IsOptimized="True"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="0.3" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="NodePresenter" d:IsOptimized="True"/>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="DisabledFill">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed"/>
                                <VisualState x:Name="ReadOnly"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="nodeBackFocused" d:IsOptimized="True"/>
                                        <DoubleAnimation Duration="0" To="0.99" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="nodeStrokeFocused" d:IsOptimized="True"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="SelectedStates">
                                <VisualState x:Name="Unselected"/>
                                <VisualState x:Name="Selected">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="nodeBackSelected" d:IsOptimized="True"/>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="nodeBgSelected" d:IsOptimized="True"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="nodeBackNormal" Background="{TemplateBinding BorderBrush}" CornerRadius="4" Grid.RowSpan="2"/>
                        <Border x:Name="nodeBackOver" CornerRadius="4" Background="{StaticResource NodeStrokeOver}" Opacity="0" Grid.RowSpan="2"/>
                        <Border x:Name="nodeBackSelected" CornerRadius="4" Background="{StaticResource NodeFillSelected}" Grid.RowSpan="2" Opacity="0"/>
                        <Border x:Name="nodeBackFocused" CornerRadius="4" Background="{StaticResource NodeFillFocus}" Grid.RowSpan="2" Opacity="0"/>
                        <Border x:Name="nodeBg" BorderBrush="{TemplateBinding BorderBrush}"  Background="{TemplateBinding Background}" CornerRadius="3,3,0,0" Margin="1,1,1,0"/>
                        <Border x:Name="nodeBgOver" BorderBrush="{StaticResource ToggleButtonFill}" Background="{StaticResource NodeBgBrushOver}"  CornerRadius="3,3,0,0" Margin="1,1,1,0" Opacity="0"/>
                        <Border x:Name="nodeBgSelected" BorderBrush="{StaticResource ToggleButtonFill}" CornerRadius="3,3,0,0" Margin="1,1,1,0" Background="{StaticResource NodeBgBrushSelected}" Opacity="0"/>
                        <ContentPresenter x:Name="NodePresenter"
                    		HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                    		VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                    		Margin="{TemplateBinding Padding}"/>
                        <Border x:Name="nodeStrokeFocused" CornerRadius="3" Grid.RowSpan="2" BorderThickness="1.5" BorderBrush="#7F000000" Opacity="0"/>
                        <Rectangle x:Name="DisabledFill" Fill="#4CF4F4F5" Grid.RowSpan="2" RadiusX="4" RadiusY="4" Visibility="Collapsed"/>
                        <ToggleButton x:Name="ExpanderButton" Margin="-7,-7,0,0" Width="14" Height="14" HorizontalAlignment="Left" VerticalAlignment="Top" Style="{StaticResource NodeToggleButton}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>