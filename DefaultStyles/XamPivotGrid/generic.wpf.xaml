<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:ig="http://schemas.infragistics.com/xaml"
	xmlns:igPrim="http://schemas.infragistics.com/xaml/primitives"
	xmlns:igPivot="http://schemas.infragistics.com/xaml"
	xmlns:igPivotPrim="http://schemas.infragistics.com/xaml/primitives"
	xmlns:System="clr-namespace:System;assembly=mscorlib"
	xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:Microsoft_Windows_Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero"
    mc:Ignorable="d">

    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
    <!--                             IMPORTANT NOTE:                                -->
    <!--                                                                            -->
    <!-- Only place WPF-specific resources in this ResourceDictionary.  This file   -->
    <!-- gets copied in the pre-build step so that it overwrites generic.xaml       -->
    <!-- (which by default has no content).                                         -->
    <!--                                                                            -->
    <!-- Note that this ResourceDictionary merges in the contents of                -->
    <!-- generic.shared.xaml which contains resources that work in both SL and WPF. -->
    <!--                                                                            -->
    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->

    <!-- ======================== -->
    <!-- Shared Resources         -->
    <!-- ======================== -->
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="generic_shared.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <!-- ======================== -->
    <!-- WPF-specific Resources   -->
    <!-- ======================== -->


    <!-- *********************************** Converters **********************************************-->
    <igPrim:BoolToHiddenConverter x:Key="boolToHiddenConverter" />
    
    <!--Dropdown style-->
    <Style TargetType="igPivot:Dropdown">
        <Setter Property="Padding" Value="5,3,20,3"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="igPivot:Dropdown">
                    <Grid x:Name="MainGrid" SnapsToDevicePixels="true">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="EmptyState">
                                <VisualState x:Name="Empty">
                                    <Storyboard >
                                        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="itemText" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Selected">
                                    <Storyboard >
                                        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="itemText" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>

                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0"/>
                        </Grid.ColumnDefinitions>
                        <Popup x:Name="PART_Popup" Margin="1" AllowsTransparency="true" IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}"
												Placement="Bottom" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Grid.ColumnSpan="2">
                            <Microsoft_Windows_Themes:SystemDropShadowChrome x:Name="Shdw" MaxHeight="{TemplateBinding MaxDropDownHeight}"
														MinWidth="{Binding ActualWidth, ElementName=MainGrid}" Color="Transparent">
                                <Border x:Name="DropDownBorder" Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"
																BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}" BorderThickness="1">
                                    <ScrollViewer CanContentScroll="true">
                                        <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" KeyboardNavigation.DirectionalNavigation="Contained"/>
                                    </ScrollViewer>
                                </Border>
                            </Microsoft_Windows_Themes:SystemDropShadowChrome>
                        </Popup>
                        <ToggleButton Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" Grid.ColumnSpan="2"
												IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}">
                            <ToggleButton.Style>
                                <Style TargetType="{x:Type ToggleButton}">
                                    <Setter Property="OverridesDefaultStyle" Value="true"/>
                                    <Setter Property="IsTabStop" Value="false"/>
                                    <Setter Property="Focusable" Value="false"/>
                                    <Setter Property="ClickMode" Value="Press"/>
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                <Microsoft_Windows_Themes:ButtonChrome x:Name="Chrome" SnapsToDevicePixels="true" Background="{TemplateBinding Background}"
																								BorderBrush="{TemplateBinding BorderBrush}" RenderMouseOver="{TemplateBinding IsMouseOver}" RenderPressed="{TemplateBinding IsPressed}">
                                                    <Grid HorizontalAlignment="Right" Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}">
                                                        <Grid.Resources>
                                                            <Geometry x:Key="DownArrowGeometry">M 0 0 L 3.5 4 L 7 0 Z</Geometry>
                                                        </Grid.Resources>
                                                        <Path x:Name="Arrow" Fill="Black" HorizontalAlignment="Center" Margin="3,1,0,0" VerticalAlignment="Center" Data="{StaticResource DownArrowGeometry}"/>
                                                    </Grid>
                                                </Microsoft_Windows_Themes:ButtonChrome>
                                                <ControlTemplate.Triggers>
                                                    <Trigger Property="IsChecked" Value="true">
                                                        <Setter Property="RenderPressed" TargetName="Chrome" Value="true"/>
                                                    </Trigger>
                                                    <Trigger Property="IsEnabled" Value="false">
                                                        <Setter Property="Fill" TargetName="Arrow" Value="#AFAFAF"/>
                                                    </Trigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </ToggleButton.Style>
                        </ToggleButton>
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
												IsHitTestVisible="false" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                          		Content="{TemplateBinding SelectionBoxItem}"
											    ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
												ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}"
												ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}">
                        </ContentPresenter>

                        <TextBlock IsHitTestVisible="False" x:Name="itemText" Visibility="Collapsed" Text="{TemplateBinding EmptyString}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="igPivot:HiddenAxisChooser">
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="Background" Value="{StaticResource HiddenColumnIndicatorBrush}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="igPivot:HiddenAxisChooser">
                    <Grid>
                        <Border x:Name="ContentPresenterBorder" Padding="0" Background="{TemplateBinding Background}" >

                            <Grid>
                                <ToggleButton x:Name="DropDownToggle"
                                              IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                              Style="{StaticResource FilterDropdownToggle}"
                                                      BorderBrush="{TemplateBinding BorderBrush}"
                                                      BorderThickness="{TemplateBinding BorderThickness}"
                                                      >
                                </ToggleButton>
                            </Grid>
                        </Border>
                        <Popup x:Name="PART_Popup" Margin="1" AllowsTransparency="true" IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}"
												Placement="Bottom" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}">
                            <Border x:Name="PopupBorder" Background="{StaticResource PopupBackgroundBrush}" BorderBrush="{StaticResource GridBorderBrush}"		 BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="3" HorizontalAlignment="Stretch" VerticalAlignment="Top" Height="Auto">
                                <ScrollViewer x:Name="ScrollViewer" BorderThickness="0" Padding="1">
                                    <ItemsPresenter/>
                                </ScrollViewer>
                            </Border>
                        </Popup>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ComboBoxFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="4,4,21,4"
                               StrokeThickness="1"
                               Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
                               StrokeDashArray="1 2"
                               SnapsToDevicePixels="true"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <LinearGradientBrush x:Key="ButtonNormalBackground"
                         StartPoint="0,0"
                         EndPoint="0,1">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="#F3F3F3"
                          Offset="0"/>
            <GradientStop Color="#EBEBEB"
                          Offset="0.5"/>
            <GradientStop Color="#DDDDDD"
                          Offset="0.5"/>
            <GradientStop Color="#CDCDCD"
                          Offset="1"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>
    
    <SolidColorBrush x:Key="ButtonNormalBorder" Color="#FF707070"/>

    <Geometry x:Key="DownArrowGeometry">M 0 0 L 3.5 4 L 7 0 Z</Geometry>
    
    <Style x:Key="ComboBoxReadonlyToggleButton"
           TargetType="{x:Type ToggleButton}">
        <Setter Property="OverridesDefaultStyle"
                Value="true"/>
        <Setter Property="IsTabStop"
                Value="false"/>
        <Setter Property="Focusable"
                Value="false"/>
        <Setter Property="ClickMode"
                Value="Press"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Microsoft_Windows_Themes:ButtonChrome Name="Chrome"
                                        Background="{TemplateBinding Background}"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        RenderMouseOver="{TemplateBinding IsMouseOver}"
                                        RenderPressed="{TemplateBinding IsPressed}"
                                        SnapsToDevicePixels="true">
                        <Grid Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"
                              HorizontalAlignment="Right">
                            <Path Name="Arrow"
                                  Margin="3,1,0,0"
                                  Fill="Black"
                                  Data="{StaticResource DownArrowGeometry}"
                                  HorizontalAlignment="Center"
                                  VerticalAlignment="Center"/>
                        </Grid>
                    </Microsoft_Windows_Themes:ButtonChrome>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked"
                                 Value="true">
                            <Setter TargetName="Chrome"
                                    Property="RenderPressed"
                                    Value="true"/>
                        </Trigger>
                        <Trigger Property="IsEnabled"
                                 Value="false">
                            <Setter TargetName="Arrow"
                                    Property="Fill"
                                    Value="#AFAFAF"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <LinearGradientBrush x:Key="TextBoxBorder"
                         StartPoint="0,0"
                         EndPoint="0,20"
                         MappingMode="Absolute">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="#ABADB3"
                          Offset="0.05"/>
            <GradientStop Color="#E2E3EA"
                          Offset="0.07"/>
            <GradientStop Color="#E3E9EF"
                          Offset="1"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>

    <Style x:Key="AdvancedFilteringDropdownStyle"
           TargetType="{x:Type igPivot:Dropdown}">
        <Setter Property="FocusVisualStyle"
                Value="{StaticResource ComboBoxFocusVisual}"/>
        <Setter Property="Foreground"
                Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}"/>
        <Setter Property="Background"
                Value="{StaticResource ButtonNormalBackground}"/>
        <Setter Property="BorderBrush"
                Value="{StaticResource ButtonNormalBorder}"/>
        <Setter Property="BorderThickness"
                Value="1"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility"
                Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility"
                Value="Auto"/>
        <Setter Property="Padding"
                Value="4,3"/>
        <Setter Property="ScrollViewer.CanContentScroll"
                Value="true"/>
        <Setter Property="ScrollViewer.PanningMode"
                Value="Both"/>
        <Setter Property="Stylus.IsFlicksEnabled"
                Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type igPivot:Dropdown}">
                    <Grid Name="MainGrid"
                          SnapsToDevicePixels="true">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="EmptyState">
                                <VisualState x:Name="Empty">
                                    <Storyboard >
                                        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="itemText" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Selected">
                                    <Storyboard >
                                        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="itemText" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"
                                              Width="0"/>
                        </Grid.ColumnDefinitions>
                        <Popup Name="PART_Popup"
                               AllowsTransparency="true"
                               Grid.ColumnSpan="2"
                               Placement="Bottom"
                               Margin="1"
                               IsOpen="{Binding Path=IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}"
                               PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}">
                            <Microsoft_Windows_Themes:SystemDropShadowChrome Name="Shdw"
                                                          Color="Transparent"
                                                          MinWidth="{Binding ElementName=MainGrid,Path=ActualWidth}"
                                                          MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                <Border x:Name="DropDownBorder"
                                        BorderThickness="1"
                                        BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}"
                                        Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}">
                                    <ScrollViewer Name="DropDownScrollViewer">
                                        <Grid RenderOptions.ClearTypeHint="Enabled">
                                            <Canvas Height="0" Width="0" HorizontalAlignment="Left" VerticalAlignment="Top">
                                                <Rectangle 
                                                Name="OpaqueRect"
                                                Height="{Binding ElementName=DropDownBorder,Path=ActualHeight}" 
                                                Width="{Binding ElementName=DropDownBorder,Path=ActualWidth}" 
                                                Fill="{Binding ElementName=DropDownBorder,Path=Background}" />
                                            </Canvas>
                                            <ItemsPresenter Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained"
                                                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                        </Grid>
                                    </ScrollViewer>
                                </Border>
                            </Microsoft_Windows_Themes:SystemDropShadowChrome>
                        </Popup>
                        <ToggleButton Grid.ColumnSpan="2"
                                      Background="{TemplateBinding Background}"
                                      BorderBrush="{TemplateBinding BorderBrush}"
                                      Style="{StaticResource ComboBoxReadonlyToggleButton}"
                                      IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}"/>
                        <ContentPresenter IsHitTestVisible="false"
                                          Margin="{TemplateBinding Padding}"
                                          Content="{TemplateBinding SelectionBoxItem}"
                                          ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                          ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                          ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        <TextBlock IsHitTestVisible="False" x:Name="itemText" Visibility="Collapsed" Text="{TemplateBinding EmptyString}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger SourceName="PART_Popup"
                                 Property="Popup.HasDropShadow"
                                 Value="true">
                            <Setter TargetName="Shdw"
                                    Property="Margin"
                                    Value="0,0,5,5"/>
                            <Setter TargetName="Shdw"
                                    Property="Color"
                                    Value="#71000000"/>
                        </Trigger>
                        <Trigger Property="HasItems"
                                 Value="false">
                            <Setter TargetName="DropDownBorder"
                                    Property="Height"
                                    Value="95"/>
                        </Trigger>
                        <Trigger Property="IsEnabled"
                                 Value="false">
                            <Setter Property="Foreground"
                                    Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            <Setter Property="Background"
                                    Value="#FFF4F4F4"/>
                        </Trigger>
                        <Trigger Property="IsGrouping"
                                 Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll"
                                    Value="false"/>
                        </Trigger>
                        <Trigger SourceName="DropDownScrollViewer"
                                 Property="ScrollViewer.CanContentScroll"
                                 Value="false" >
                            <Setter TargetName="OpaqueRect" 
                                    Property="Canvas.Top" 
                                    Value="{Binding ElementName=DropDownScrollViewer, Path=VerticalOffset}" />
                            <Setter TargetName="OpaqueRect" 
                                    Property="Canvas.Left" 
                                    Value="{Binding ElementName=DropDownScrollViewer, Path=HorizontalOffset}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="igPivotPrim:MeasureFilterFieldControl">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="igPivotPrim:MeasureFilterFieldControl">
                  <Grid>
                    <Grid.RowDefinitions>
                      <RowDefinition Height="Auto" />
                      <RowDefinition />
                    </Grid.RowDefinitions>
                    <Grid>
                      <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                      </Grid.ColumnDefinitions>
                      <TextBlock Grid.Column="0" Text="{Binding Source={StaticResource stringResources}, Path=MeasureFilterText}" Foreground="Black" Margin="0,0,0,5"/>
                      <TextBlock Grid.Column="1" Text="{Binding Path=Measure.Caption}" Foreground="Black" />
                      <Grid Background="Transparent" HorizontalAlignment="Right" VerticalAlignment="Top" Grid.Column="3" Height="12" Width="12" Margin="4">
                        <Rectangle Stroke="{StaticResource DarkGradientBrush}" Fill="{StaticResource PeekIconFill}" />
                        <ig:Commanding.Commands>
                          <ig:CommandSourceCollection>
                            <igPivotPrim:ExpandableFieldItemCommandSource EventName="MouseEnter" CommandType="StartPeek"/>
                            <igPivotPrim:ExpandableFieldItemCommandSource EventName="MouseLeave" CommandType="StopPeek"/>
                          </ig:CommandSourceCollection>
                        </ig:Commanding.Commands>
                      </Grid>
                    </Grid>
                    <ScrollViewer Grid.Row="1" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto" BorderThickness="0" Padding="0">
                      <Border Padding="7" Width="300" BorderThickness="0,0,0,1" BorderBrush="#FFC9CACA">
                        <StackPanel Orientation="Vertical">
                          <Border CornerRadius="2, 2, 2, 2" Background="#FFDC000C"
                                  Visibility="{Binding Path=HasHierarchiesWithoutTotals, Mode=OneWay, Converter={StaticResource boolToVisibilityConverter}}">
                            <StackPanel Orientation="Vertical">
                              <TextBlock Foreground="#FFFFFFFF" Margin="8, 4, 8, 4" MaxWidth="250"
                                     TextWrapping="Wrap" UseLayoutRounding="False"
                                     Text="{Binding Source={StaticResource stringResources}, Path=MeasureFilterDisabled}" />
                              <ItemsControl ItemsSource="{Binding Path=HierarchiesWithoutTotals, Mode=OneWay}">
                                <ItemsControl.ItemsPanel>
                                  <ItemsPanelTemplate>
                                    <StackPanel Orientation="Vertical" />
                                  </ItemsPanelTemplate>
                                </ItemsControl.ItemsPanel>
                                <ItemsControl.ItemTemplate>
                                  <DataTemplate>
                                    <TextBlock Foreground="#FFFFFFFF" Margin="30, 0, 8, 0" MaxWidth="220"
                                       TextWrapping="Wrap" UseLayoutRounding="False"
                                       Text="{Binding Name}" />
                                  </DataTemplate>
                                </ItemsControl.ItemTemplate>
                              </ItemsControl>
                              <TextBlock Foreground="#FFFFFFFF" Margin="8, 4, 8, 4" MaxWidth="250"
                                     TextWrapping="Wrap" UseLayoutRounding="False"
                                     Text="{Binding Source={StaticResource stringResources}, Path=MeasureFilterEnable}" />
                            </StackPanel>
                          </Border>
                          <StackPanel Orientation="Vertical">
                            <StackPanel.Visibility>
                              <Binding Path="HasHierarchiesWithoutTotals" Converter="{StaticResource boolToVisibilityConverter}">
                                <Binding.ConverterParameter>
                                  <System:Boolean>True</System:Boolean>
                                </Binding.ConverterParameter>
                              </Binding>
                            </StackPanel.Visibility>
                            <StackPanel Margin="0,0,0,5" Orientation="Horizontal" Visibility="{Binding Path=HasTwoOrMoreConditions, Mode=OneWay, Converter={StaticResource boolToVisibilityConverter}}">
                              <RadioButton x:Name="rbFilterByAll" Content="{Binding Source={StaticResource stringResources}, Path=MeasureFilterAllText}" IsChecked="{Binding Path=FilterByAll, Mode=TwoWay}" />
                              <RadioButton x:Name="rbFilterByAny" Content="{Binding Source={StaticResource stringResources}, Path=MeasureFilterAnyText}" Margin="7,0" IsChecked="{Binding Path=FilterByAll, Mode=TwoWay, Converter={StaticResource inverseBooleanConverter}}"/>
                            </StackPanel>

                            <ItemsControl ItemsSource="{Binding Path=ValueConditionViewModels, Mode=OneWay}" x:Name="icValueConditionViewModels">
                              <ItemsControl.ItemsPanel>
                                <ItemsPanelTemplate>
                                  <StackPanel Orientation="Vertical" />
                                </ItemsPanelTemplate>
                              </ItemsControl.ItemsPanel>
                              <ItemsControl.ItemTemplate>
                                <DataTemplate>
                                  <Grid Margin="0,0,0,7">
                                    <Grid.ColumnDefinitions>
                                      <ColumnDefinition Width="*" />
                                      <ColumnDefinition Width="*" />
                                      <ColumnDefinition Width="Auto" />
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                      <RowDefinition Height="24" />
                                      <RowDefinition Height="3" />
                                      <RowDefinition Height="24" />
                                    </Grid.RowDefinitions>
                                    <ComboBox x:Name="cbHierarchy" Grid.Column="0" Grid.Row="0" Foreground="Black" Margin="0,0,7,0"
                                        DisplayMemberPath="Caption"
                                        ItemsSource="{Binding Path=Hierarchies, Mode=OneWay}"
                                        SelectedItem="{Binding Path=SelectedHierarchy, Mode=TwoWay}"/>
                                    <ComboBox x:Name="cbLevel" Grid.Column="1" Grid.Row="0" Foreground="Black" Margin="0,0,7,0"
                                        DisplayMemberPath="Caption"
                                        ItemsSource="{Binding Path=Levels, Mode=OneWay}"
                                        SelectedItem="{Binding Path=SelectedLevel, Mode=TwoWay}"/>
                                    <igPivot:Dropdown x:Name="cbCondition" Style="{StaticResource AdvancedFilteringDropdownStyle}" Margin="0,0,7,0" Grid.Column="0" Grid.Row="2" Foreground="Black"
                                        EmptyString="{Binding Source={StaticResource stringResources}, Path=MeasureFilterDropdownMatchingText}"
                                        DisplayMemberPath="DisplayName"
                                        ItemsSource="{Binding Path=ValueFilterConditions, Mode=OneWay}"
                                        SelectedItem="{Binding Path=SelectedValueFilterCondition, Mode=TwoWay}" />
                                    <TextBox x:Name="tbValue" Grid.Column="1" Grid.Row="2" Text="{Binding Path=TextValue, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" Margin="0,0,7,0" />
                                    <Button x:Name="btnRemoveCondition" Grid.Column="2" Grid.Row="0" Grid.RowSpan="3" Style="{StaticResource FilterCellRemoveBtn}"
                                        HorizontalAlignment="Center" VerticalAlignment="Center" Width="16" Height="17" Margin="2 0">
                                      <Path Width="8" Height="8" Fill="#FFFFFFFF" Data="M1.0606846,0 L2.8518269,1.7912511 4.6429692,0 5.7036535,1.0607488 3.9125112,2.852 5.7036536,4.6432512 4.6429692,5.704 2.8518269,3.9127488 1.0606846,5.704 0,4.6432512 1.7911423,2.852 0,1.0607488 z" Stretch="Fill" />
                                      <ig:Commanding.Command>
                                        <igPivotPrim:MeasureFilterFieldCommandSource EventName="Click" CommandType="RemoveValueCondition"/>
                                      </ig:Commanding.Command>
                                    </Button>
                                  </Grid>
                                </DataTemplate>
                              </ItemsControl.ItemTemplate>
                            </ItemsControl>
                            <Grid  Margin="0,7,0,0">
                              <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="56" />
                                <ColumnDefinition Width="*" />
                                <!--<ColumnDefinition Width="75" />-->
                              </Grid.ColumnDefinitions>
                              <Button x:Name="btnAdd" Grid.Column="0" Style="{StaticResource ButtonStyle}"
                                  Content="{Binding Source={StaticResource stringResources}, Path=MeasureFilterAddButtonText}"
                                  IsEnabled="{Binding Path=LastValueConditionViewModel.IsComplete, FallbackValue=True, Mode=OneWay}">
                                <ig:Commanding.Command>
                                  <igPivotPrim:MeasureFilterFieldCommandSource EventName="Click" CommandType="AddValueCondition"/>
                                </ig:Commanding.Command>
                              </Button>
                              <Button x:Name="btnClear" Grid.Column="1" Style="{StaticResource ButtonStyle}"
                                      HorizontalAlignment="Right"
                                  Content="{Binding Source={StaticResource stringResources}, Path=MeasureFilterClearAllButtonText}"
                                  Visibility="{Binding Path=HasConditions, Mode=OneWay, Converter={StaticResource boolToVisibilityConverter}}">
                                <ig:Commanding.Command>
                                  <igPivotPrim:MeasureFilterFieldCommandSource EventName="Click" CommandType="ClearValueConditions"/>
                                </ig:Commanding.Command>
                              </Button>
                            </Grid>
                          </StackPanel>
                        </StackPanel>
                      </Border>
                    </ScrollViewer>
                  </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="igPivotPrim:AdvancedFilterFieldControl">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="igPivotPrim:AdvancedFilterFieldControl">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <Grid Background="Transparent" HorizontalAlignment="Right" VerticalAlignment="Center" Margin="5"  >
                            <Rectangle Stroke="{StaticResource DarkGradientBrush}" Fill="{StaticResource PeekIconFill}" Width="12"  Height="12"/>
                            <ig:Commanding.Commands>
                                <ig:CommandSourceCollection>
                                    <igPivotPrim:ExpandableFieldItemCommandSource EventName="MouseEnter" CommandType="StartPeek"/>
                                    <igPivotPrim:ExpandableFieldItemCommandSource EventName="MouseLeave" CommandType="StopPeek"/>
                                </ig:CommandSourceCollection>
                            </ig:Commanding.Commands>
                        </Grid>
                        <ScrollViewer HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto" BorderThickness="0" Padding="0" Grid.Row="1">
                            <Border Padding="7" Width="300">
                                <StackPanel Orientation="Vertical">

                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="Auto"/>
                                        </Grid.ColumnDefinitions>

                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="*"/>
                                        </Grid.RowDefinitions>

                                        <TextBox x:Name="searchBox" Grid.ColumnSpan="2" Grid.Row="1" Margin="0,7,0,0">
                                            <ig:Commanding.Command>
                                                <igPivotPrim:AdvancedFilterFieldCommandSource
									            EventName="TextChanged"
									            CommandType="SelectHierarchySubTree"/>
                                            </ig:Commanding.Command>
                                        </TextBox>

                                        <CheckBox IsThreeState="False" Grid.Row="2" Margin="0,7,0,0"
							            HorizontalAlignment="Left"
							            VerticalAlignment="Center"
							            VerticalContentAlignment="Center"
							            Content="{Binding Source={StaticResource stringResources}, Path=SelectAll}"
							            IsChecked="{Binding FilterViewModel.IsAllSelected, Mode=TwoWay}"/>

                                        <!-- Has pending changes star indicator -->
                                        <TextBlock Text="*" Grid.Column="1" Grid.Row="2" Foreground="Black" Margin="0 0 5 0" HorizontalAlignment="Right" VerticalAlignment="Center"
						                Visibility="{Binding FilterViewModel.HasPendingChanges, Converter={StaticResource boolToVisibilityConverter}}"/>

                                        <ig:XamDataTree Grid.Row="3" Grid.ColumnSpan="2" Background="{StaticResource LightGradientBrush}" Height="200" Width="286"
										ItemsSource="{Binding Path=FilterViewModel.FilterMembers}" DisplayMemberPath="Caption"
										NodeStyle="{StaticResource TreeNodeStyle}"
										ScrollViewer.VerticalScrollBarVisibility="Visible"
										EnsureNodeExpansion="True"
										IsExpandedMemberPath="IsExpanded"
										CheckBoxMemberPath="IsSelected"
										x:Name="FilterTree"
										BorderThickness="0">
                                            <ig:XamDataTree.CheckBoxSettings>
                                                <ig:CheckBoxSettings CheckBoxVisibility="Visible" CheckBoxMode="Manual" IsCheckBoxThreeState="False" />
                                            </ig:XamDataTree.CheckBoxSettings>

                                            <ig:XamDataTree.GlobalNodeLayouts>
                                                <ig:NodeLayout x:Name="NL"
											IsExpandedMemberPath="IsExpanded"
											CheckBoxMemberPath="IsSelected"
											Key="FilterMembers"
											DisplayMemberPath="Caption"
											TargetTypeName="FilterMember">
                                                </ig:NodeLayout>
                                            </ig:XamDataTree.GlobalNodeLayouts>

                                        </ig:XamDataTree>
                                    </Grid>
                                    <StackPanel Orientation="Vertical" Margin="0,7,0,0">
                                        <StackPanel Margin="0,0,0,5" Orientation="Horizontal" Visibility="{Binding Path=HasTwoOrMoreConditions, Mode=OneWay, Converter={StaticResource boolToVisibilityConverter}}">
                                            <RadioButton x:Name="rbFilterByAll" Content="{Binding Source={StaticResource stringResources}, Path=LabelFilterAllText}" IsChecked="{Binding Path=FilterByAll, Mode=TwoWay}" />
                                            <RadioButton x:Name="rbFilterByAny" Margin="5,0,0,0" Content="{Binding Source={StaticResource stringResources}, Path=LabelFilterAnyText}" IsChecked="{Binding Path=FilterByAll, Mode=TwoWay, Converter={StaticResource inverseBooleanConverter}}" />
                                        </StackPanel>

                                        <ItemsControl x:Name="icLabelConditionViewModels"
                                        ItemsSource="{Binding Path=LabelConditionViewModels, Mode=OneWay}">
                                            <ItemsControl.ItemsPanel>
                                                <ItemsPanelTemplate>
                                                    <StackPanel Orientation="Vertical" />
                                                </ItemsPanelTemplate>
                                            </ItemsControl.ItemsPanel>
                                            <ItemsControl.ItemTemplate>
                                                <DataTemplate>
                                                    <Grid Margin="0,0,0,5">
                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition Width="*" />
                                                            <ColumnDefinition Width="*" />
                                                            <ColumnDefinition Width="Auto" />
                                                        </Grid.ColumnDefinitions>
                                                        <Grid.RowDefinitions>
                                                            <RowDefinition Height="24" />
                                                            <RowDefinition Height="3" />
                                                            <RowDefinition Height="24" />
                                                        </Grid.RowDefinitions>
                                                        <igPivot:Dropdown x:Name="ddLevel" Grid.Column="0" Grid.ColumnSpan="2" Grid.Row="0" Foreground="Black" Margin="0,0,7,0"
                                                        Style="{StaticResource AdvancedFilteringDropdownStyle}"
														EmptyString="{Binding Source={StaticResource stringResources}, Path=LabelFilterDropdownSelectFieldText}"
														DisplayMemberPath="Caption"
														ItemsSource="{Binding Path=Levels, Mode=OneWay}"
														SelectedItem="{Binding Path=SelectedLevel, Mode=TwoWay}" />
                                                        <igPivot:Dropdown x:Name="ddCondition" Grid.Column="0" Grid.Row="2" Foreground="Black" Margin="0,0,7,0"
                                                        Style="{StaticResource AdvancedFilteringDropdownStyle}"
														EmptyString="{Binding Source={StaticResource stringResources}, Path=LabelFilterDropdownSelectConditionText}"
														DisplayMemberPath="DisplayName"
														ItemsSource="{Binding Path=LabelFilterConditions, Mode=OneWay}"
														SelectedItem="{Binding Path=SelectedLabelFilterCondition, Mode=TwoWay}" />
                                                        <TextBox x:Name="tbValue" Grid.Column="1" Grid.Row="2" Margin="0,0,7,0"
                                                        Text="{Binding Path=Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                                        <Button x:Name="btnRemoveCondition" Grid.Column="2" Grid.Row="0" Grid.RowSpan="3" Style="{StaticResource FilterCellRemoveBtn}"
                                                        HorizontalAlignment="Center" VerticalAlignment="Center" Width="16" Height="17" Margin="2 0">
                                                            <Path Width="8" Height="8" Fill="#FFFFFFFF" Data="M1.0606846,0 L2.8518269,1.7912511 4.6429692,0 5.7036535,1.0607488 3.9125112,2.852 5.7036536,4.6432512 4.6429692,5.704 2.8518269,3.9127488 1.0606846,5.704 0,4.6432512 1.7911423,2.852 0,1.0607488 z" Stretch="Fill" />
                                                            <ig:Commanding.Command>
                                                                <igPivotPrim:AdvancedFilterFieldCommandSource EventName="Click" CommandType="RemoveLabelCondition"/>
                                                            </ig:Commanding.Command>
                                                        </Button>
                                                    </Grid>
                                                </DataTemplate>
                                            </ItemsControl.ItemTemplate>
                                        </ItemsControl>
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="56" />
                                                <ColumnDefinition Width="*" />
                                                <!--<ColumnDefinition Width="75" />-->
                                            </Grid.ColumnDefinitions>
                                            <Button x:Name="btnAdd" Grid.Column="0" Style="{StaticResource ButtonStyle}"
												Content="{Binding Source={StaticResource stringResources}, Path=LabelFilterAddButtonText}"
                                                IsEnabled="{Binding Path=LastLabelConditionViewModel.IsComplete, FallbackValue=True, Mode=OneWay}">
                                                <ig:Commanding.Command>
                                                    <igPivotPrim:AdvancedFilterFieldCommandSource EventName="Click" CommandType="AddLabelCondition"/>
                                                </ig:Commanding.Command>
                                            </Button>
                                            <Button x:Name="btnClear" Grid.Column="1" Style="{StaticResource ButtonStyle}"
                                                HorizontalAlignment="Right"                                                
                                                Content="{Binding Source={StaticResource stringResources}, Path=LabelFilterClearAllButtonText}"
												Visibility="{Binding Path=HasConditions, Mode=OneWay, Converter={StaticResource boolToVisibilityConverter}}">
                                                <ig:Commanding.Command>
                                                    <igPivotPrim:AdvancedFilterFieldCommandSource EventName="Click" CommandType="ClearLabelConditions"/>
                                                </ig:Commanding.Command>
                                            </Button>
                                        </Grid>
                                    </StackPanel>
                                </StackPanel>
                            </Border>
                        </ScrollViewer>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="igPivot:PivotGridReportControl">
        <Setter Property="TitleTemplate">
            <Setter.Value>
                <DataTemplate>
                    <TextBlock FontSize="16" Margin="20,5,5,5" Text="{Binding}" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="FilterFieldsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <Grid>
                        <Border BorderThickness="1" 
                                BorderBrush="{StaticResource HeaderNormalBorderBrush}" 
                                Background="{StaticResource LightGradientBrush}">
                            <WrapPanel x:Name="FiltersPanel" Margin="5,5,0,5"/>
                        </Border>
                    </Grid>
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="MeasureFieldsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <Grid>
                        <Border BorderThickness="1,0,1,0" 
                                BorderBrush="{StaticResource HeaderNormalBorderBrush}" 
                                Background="{StaticResource LightGradientBrush}">
                            <WrapPanel x:Name="MeasuresPanel" Margin="5,5,0,5"/>
                        </Border>
                    </Grid>
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="RowFieldsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <Grid>
                        <Border BorderThickness="1,1,1,1" 
                                BorderBrush="{StaticResource HeaderNormalBorderBrush}" 
                                Background="{StaticResource LightGradientBrush}">
                            <WrapPanel x:Name="RowsPanel" VerticalAlignment="Top" Margin="5,5,0,5"/>
                        </Border>
                    </Grid>
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ColumnFieldsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <Grid>
                        <Border BorderThickness="0,0,1,0" 
                                BorderBrush="{StaticResource HeaderNormalBorderBrush}" 
                                Background="{StaticResource LightGradientBrush}">
                            <WrapPanel x:Name="ColumnsPanel"  Margin="5,5,0,5"/>
                        </Border>
                    </Grid>
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="FiltersIconGeometry">
            <Setter.Value>
                <PathGeometry Figures="M0.5,0.5 L11.5,0.5 L7.4999995,5.5 L7.4999995,9.5 L4.4999995,9.5 L4.4999995,5.5 z" />
            </Setter.Value>
        </Setter>
        <Setter Property="RowsIconGeometry">
            <Setter.Value>
                <PathGeometry Figures="M0.5,8.5 L10.5,8.5 L10.5,10.5 L0.5,10.5 z M0.5,4.5 L10.5,4.5 L10.5,6.5 L0.5,6.5 z M0.5,0.5 L10.5,0.5 L10.5,2.5 L0.5,2.5 z" />
            </Setter.Value>
        </Setter>
        <Setter Property="ColumnsIconGeometry">
            <Setter.Value>
                <PathGeometry Figures="M8.5,0.5 L10.5,0.5 L10.5,10.5 L8.5,10.5 z M4.5,0.5 L6.5,0.5 L6.5,10.5 L4.5,10.5 z M0.5,0.5 L2.5,0.5 L2.5,10.5 L0.5,10.5 z" />
            </Setter.Value>
        </Setter>
        <Setter Property="MeasuresIconGeometry">
            <Setter.Value>
                <PathGeometry Figures="M8.5,2.5 L10.5,2.5 L10.5,10.5 L8.5,10.5 z M4.5,0.5 L6.5,0.5 L6.5,10.5 L4.5,10.5 z M0.5,4 L2.5,4 L2.5,10.5 L0.5,10.5 z" />
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="igPivot:PivotGridReportControl">
                    <Grid x:Name="ReportGrid" SnapsToDevicePixels="True"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="igPivot:PivotReportRowHeaderCellControl" BasedOn="{StaticResource {x:Type igPivot:PivotRowHeaderCellControl}}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="igPivot:PivotReportRowHeaderCellControl">
                    <Border BorderBrush="{TemplateBinding BorderBrush}">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal">
                                </VisualState>
                                <!--<VisualState x:Name="MouseOver">
                                    <Storyboard >
                                        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="fill" Storyboard.TargetProperty="Background">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{StaticResource HeaderHoverBackgroundBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="optionsPane" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>-->
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="SummaryStates">
                                <VisualState x:Name="SummaryValue">
                                    <Storyboard >
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="TotalText" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="SummaryTotal">
                                    <Storyboard >
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="TotalText" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HeaderPresenterColumn" Storyboard.TargetProperty="Width">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00" >
                                                <DiscreteObjectKeyFrame.Value>
                                                    <GridLength>Auto</GridLength>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CompactLayout">
                                <VisualState x:Name="OutlineLeftRightBottom">
                                    <Storyboard >
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="fill" Storyboard.TargetProperty="BorderThickness">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Thickness>1,0,1,1</Thickness>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="headerGrid" Storyboard.TargetProperty="VerticalAlignment">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <VerticalAlignment>Center</VerticalAlignment>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="OutlineRightBottom">
                                    <Storyboard >
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="fill" Storyboard.TargetProperty="BorderThickness">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Thickness>0,0,1,1</Thickness>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="OutlineLeftRightBottomAlignBottom">
                                    <Storyboard >
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="fill" Storyboard.TargetProperty="BorderThickness">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Thickness>1,0,1,1</Thickness>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="headerGrid" Storyboard.TargetProperty="VerticalAlignment">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <VerticalAlignment>Bottom</VerticalAlignment>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="OutlineRightBottomAlignBottom">
                                    <Storyboard >
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="fill" Storyboard.TargetProperty="BorderThickness">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Thickness>0,0,1,1</Thickness>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="headerGrid" Storyboard.TargetProperty="VerticalAlignment">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <VerticalAlignment>Bottom</VerticalAlignment>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="OutlineLeftRightBottomAlignTop">
                                    <Storyboard >
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="fill" Storyboard.TargetProperty="BorderThickness">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Thickness>1,0,1,1</Thickness>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="headerGrid" Storyboard.TargetProperty="VerticalAlignment">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <VerticalAlignment>Top</VerticalAlignment>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="OutlineRightBottomAlignTop">
                                    <Storyboard >
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="fill" Storyboard.TargetProperty="BorderThickness">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Thickness>0,0,1,1</Thickness>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="headerGrid" Storyboard.TargetProperty="VerticalAlignment">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <VerticalAlignment>Top</VerticalAlignment>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="OutlineAllAlignTop">
                                    <Storyboard >
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="fill" Storyboard.TargetProperty="BorderThickness">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Thickness>1</Thickness>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="fill" Storyboard.TargetProperty="Margin">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Thickness>0,-1,0,0</Thickness>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="headerGrid" Storyboard.TargetProperty="VerticalAlignment">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <VerticalAlignment>Top</VerticalAlignment>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="OutlineAll">
                                    <Storyboard >
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="fill" Storyboard.TargetProperty="BorderThickness">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Thickness>1</Thickness>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="fill" Storyboard.TargetProperty="Margin">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Thickness>0,-1,0,0</Thickness>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="NormalOutline">
                                    <Storyboard >
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="fill" Storyboard.TargetProperty="BorderThickness">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Thickness>0,0,1,1</Thickness>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="fill" Storyboard.TargetProperty="Margin">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Thickness>0</Thickness>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="headerGrid" Storyboard.TargetProperty="VerticalAlignment">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <VerticalAlignment>Center</VerticalAlignment>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="AllowHeaderSorting">
                                <VisualState x:Name="EnabledHeaderSortIndicator">
                                    <Storyboard >
                                        <!--<DoubleAnimation Duration="0" To="13" Storyboard.TargetProperty="Width" Storyboard.TargetName="SortIndicatorColumn"/>-->
                                        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HeaderSortBtn" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00" >
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="DisabledHeaderSortIndicator">
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="AllowRowHiding">
                                <VisualState x:Name="EnabledHidingIndicator">
                                    <Storyboard >
                                        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="columnHidingVisual" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="DisabledHidingIndicator">
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="SelectedStates">
                                <VisualState x:Name="NotSelected" />
                                <VisualState x:Name="Selected">
                                    <Storyboard >
                                        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="SelectedRect" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid igPrim:XamlHelper.SnapsToDevicePixels="True">
                            <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}"  x:Name="fill">
                                <Grid VerticalAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>
                                    <Border x:Name="SelectedRect" Background="{StaticResource CellItemSelectedBackgroundBrush}" BorderThickness="{TemplateBinding BorderThickness}"
												BorderBrush="{StaticResource CellItemSelectedBorderBrush}" Visibility="Collapsed" Margin="0,0,-1,-1" Grid.ColumnSpan="2"/>

                                    <ToggleButton Grid.Column="0" Name="ExpansionIndicator" Width="15" Height="15" Margin="3" VerticalAlignment="Center" Padding="0" Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Cell.IsReportToggleVisible, Converter={StaticResource boolToHiddenConverter}, Mode=OneWay}"
                                                  IsChecked="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsExpanded, Mode=TwoWay}"
												  Style="{TemplateBinding ExpansionIndicatorStyle}"/>
                                    <Grid x:Name="headerGrid" Grid.Column="1">
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="*" x:Name="HeaderPresenterColumn"/>
                                                <ColumnDefinition Width="Auto"/>
                                            </Grid.ColumnDefinitions>

                                            <ContentControl x:Name="HeaderPresenter" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}"
															Margin="{TemplateBinding Padding}"
                                                            Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Cell.IsReportCellContentVisible, Converter={StaticResource boolToVisibilityConverter}, Mode=OneWay}"
															HorizontalContentAlignment="Stretch" VerticalContentAlignment="Center"/>
                                            <TextBlock Grid.Column="1" VerticalAlignment="Center" Visibility="Collapsed" x:Name="TotalText" Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Cell.Grid.StringSetting.CellTotal}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="0, 0, 5, 0"
                                                       Foreground="{TemplateBinding Foreground}"/>
                                        </Grid>
                                        <Border x:Name="optionsPane" Background="{StaticResource HeaderHoverBackgroundBrush}" Margin="5,0,0,0" HorizontalAlignment="Right" Opacity="1" Visibility="Collapsed" >
                                            <Grid>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="Auto"/>
                                                    <ColumnDefinition Width="Auto"/>
                                                    <ColumnDefinition Width="Auto"/>
                                                </Grid.ColumnDefinitions>
                                                <ToggleButton x:Name="HeaderSortBtn" Grid.Column="0" Style="{StaticResource HeaderCellSortBtn}" IsThreeState="False" Margin="5" Visibility="Collapsed" >
                                                    <ig:Commanding.Command>
                                                        <igPivot:XamPivotGridCommandSource CommandType="SortAxisMember" EventName="Click"/>
                                                    </ig:Commanding.Command>
                                                </ToggleButton>
                                                <CheckBox x:Name="SortToggle" Grid.Column="2" Style="{StaticResource FilterCellSortBtn}" IsThreeState="True" Margin="5" Visibility="Collapsed" >
                                                    <ig:Commanding.Command>
                                                        <igPivot:PivotColumnCommandSource CommandType="SortToggle" EventName="Click"/>
                                                    </ig:Commanding.Command>
                                                </CheckBox>
                                                <Grid x:Name="columnHidingVisual" Background="{StaticResource TransparentBrush}" Width="20" Grid.Column="1" Cursor="Hand" Margin="0,5" Visibility="Collapsed">
                                                    <Path Data="M9.8222179,1.1322494E-06 L12.663995,1.1322494E-06 L8.6729612,5.0000014 L12.663995,10.000002 L9.8222179,10.000002 L5.8309941,4.9573879 z M3.9912238,0 L6.8330007,0 L2.8419673,5 L6.8330007,10 L3.9912238,10 L0,4.9573865 z" Fill="{StaticResource HeaderCellGlyphBrush}" VerticalAlignment="Center" Height="8" UseLayoutRounding="False" Width="12" HorizontalAlignment="Center" Stretch="Fill"/>
                                                    <ig:Commanding.Command>
                                                        <igPivot:XamPivotGridCommandSource CommandType="HideAxis" EventName="MouseLeftButtonDown"/>
                                                    </ig:Commanding.Command>
                                                </Grid>
                                            </Grid>
                                        </Border>
                                    </Grid>
                                </Grid>
                            </Border>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="igPivot:PivotReportColumnHeaderCellControl" BasedOn="{StaticResource {x:Type igPivot:PivotColumnHeaderCellControl}}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="igPivot:PivotReportColumnHeaderCellControl">
                    <Border BorderBrush="{TemplateBinding BorderBrush}">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal">
                                </VisualState>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard >
                                        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="fill" Storyboard.TargetProperty="Background">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{StaticResource HeaderHoverBackgroundBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="optionsPane" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="SortedStates">
                                <VisualState x:Name="NotSorted">
                                </VisualState>
                                <VisualState x:Name="Ascending">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="SortedAscending" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Descending">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="SortedDescending" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="SummaryStates">
                                <VisualState x:Name="SummaryTotal">
                                    <Storyboard >
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HeaderPresenterColumn" Storyboard.TargetProperty="Width">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00" >
                                                <DiscreteObjectKeyFrame.Value>
                                                    <GridLength>Auto</GridLength>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="AllowHeaderSorting">
                                <VisualState x:Name="EnabledHeaderSortIndicator">
                                    <Storyboard >
                                        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HeaderSortBtn" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="DisabledHeaderSortIndicator">
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="AllowColumnHiding">
                                <VisualState x:Name="EnabledHidingIndicator">
                                    <Storyboard >
                                        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="columnHidingVisual" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00" >
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="DisabledHidingIndicator">
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="AllowColumnSorting">
                                <VisualState x:Name="EnabledSortingIndicator">
                                    <Storyboard >
                                        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="SortToggle" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="DisabledSortingIndicator">
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="SelectedStates">
                                <VisualState x:Name="NotSelected" />
                                <VisualState x:Name="Selected">
                                    <Storyboard >
                                        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="SelectedRect" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid igPrim:XamlHelper.SnapsToDevicePixels="{TemplateBinding igPrim:XamlHelper.SnapsToDevicePixels}">
                            <Border BorderBrush="{TemplateBinding BorderBrush}"
							BorderThickness="{TemplateBinding BorderThickness}"
							Background="{TemplateBinding Background}"  x:Name="fill">
                                <Grid  VerticalAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>
                                    <Border x:Name="SelectedRect" Background="{StaticResource CellItemSelectedBackgroundBrush}" BorderThickness="{TemplateBinding BorderThickness}"
												BorderBrush="{StaticResource CellItemSelectedBorderBrush}" Visibility="Collapsed" Margin="0,0,-1,-1" Grid.ColumnSpan="3"/>
                                    <ToggleButton Grid.Column="0" Name="ExpansionIndicator" Width="15" Height="15" Margin="3" VerticalAlignment="Center" Padding="0"
										  Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Cell.IsReportToggleVisible, Converter={StaticResource boolToVisibilityConverter}, Mode=OneWay}"
										  IsChecked="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsExpanded, Mode=TwoWay}"
										  Style="{TemplateBinding ExpansionIndicatorStyle}"/>
                                    <Grid Grid.Column="1">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*" x:Name="HeaderPresenterColumn"/>
                                            <ColumnDefinition Width="Auto"/>
                                        </Grid.ColumnDefinitions>

                                        <ContentControl x:Name="HeaderPresenter" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}"
                                                        VerticalContentAlignment="Center" HorizontalContentAlignment="Stretch"
                                                        Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Cell.IsReportCellContentVisible, Converter={StaticResource boolToVisibilityConverter}, Mode=OneWay}"
                                                        Margin="{TemplateBinding Padding}" />
                                        <TextBlock Grid.Column="1" VerticalAlignment="Center"
                                                   Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Cell.IsTotalVisible, Converter={StaticResource boolToVisibilityConverter}, Mode=OneWay}"
                                                   x:Name="TotalText" Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Cell.Grid.StringSetting.CellTotal}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="0, 0, 5, 0"
                                                   Foreground="{TemplateBinding Foreground}" />
                                    </Grid>

                                    <Grid Grid.Column="2" Margin="0,0,5,0">
                                        <Path IsHitTestVisible="False"
													x:Name="SortedDescending"
													HorizontalAlignment="Center"
													VerticalAlignment="Center"
													Data="M 0 0 L 4 4 L 8 0 Z"
													Fill="{StaticResource HeaderCellGlyphBrush}"
													Visibility="Collapsed" />
                                        <Path IsHitTestVisible="False"
													x:Name="SortedAscending"
													HorizontalAlignment="Center"
													VerticalAlignment="Center"
													Data="M0,4 L8,4 L4,0 z"
													Fill="{StaticResource HeaderCellGlyphBrush}"
													Visibility="Collapsed"/>
                                    </Grid>
                                    <Border x:Name="optionsPane" Background="{StaticResource HeaderHoverBackgroundBrush}" Margin="5,0,0,0" Grid.ColumnSpan="4" HorizontalAlignment="Right" Visibility="Collapsed">
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto"/>
                                                <ColumnDefinition Width="Auto"/>
                                                <ColumnDefinition Width="Auto"/>
                                            </Grid.ColumnDefinitions>
                                            <ToggleButton x:Name="HeaderSortBtn" Grid.Column="0" Style="{StaticResource HeaderCellSortBtn}" IsThreeState="False" Margin="5" Visibility="Collapsed" >
                                                <ig:Commanding.Command>
                                                    <igPivot:XamPivotGridCommandSource CommandType="SortAxisMember" EventName="Click"/>
                                                </ig:Commanding.Command>
                                            </ToggleButton>
                                            <CheckBox x:Name="SortToggle" Grid.Column="2" Style="{StaticResource FilterCellSortBtn}" IsThreeState="True" Margin="5" Visibility="Collapsed" >
                                                <ig:Commanding.Command>
                                                    <igPivot:PivotColumnCommandSource CommandType="SortToggle" EventName="Click"/>
                                                </ig:Commanding.Command>
                                            </CheckBox>
                                            <Grid x:Name="columnHidingVisual" Background="{StaticResource TransparentBrush}" Width="20" Grid.Column="1" Cursor="Hand" Margin="0,5" Visibility="Collapsed">
                                                <Path Data="M9.8222179,1.1322494E-06 L12.663995,1.1322494E-06 L8.6729612,5.0000014 L12.663995,10.000002 L9.8222179,10.000002 L5.8309941,4.9573879 z M3.9912238,0 L6.8330007,0 L2.8419673,5 L6.8330007,10 L3.9912238,10 L0,4.9573865 z" Fill="{StaticResource HeaderCellGlyphBrush}" VerticalAlignment="Center" Height="8" UseLayoutRounding="False" Width="12" HorizontalAlignment="Center" Stretch="Fill"/>
                                                <ig:Commanding.Command>
                                                    <igPivot:XamPivotGridCommandSource CommandType="HideAxis" EventName="MouseLeftButtonDown"/>
                                                </ig:Commanding.Command>
                                            </Grid>
                                        </Grid>
                                    </Border>
                                </Grid>
                            </Border>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style TargetType="igPivot:PivotReportDataCellControl" BasedOn="{StaticResource {x:Type igPivot:PivotCellControl}}"/>

    <Style TargetType="igPivot:PivotReportFieldItemControl">
        <Setter Property="FontSize" Value="11" />        
        <Setter Property="Foreground" Value="#FFFFFFFF"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="Padding" Value="3,2,3,2"/>
        <Setter Property="Margin" Value="1,1,0,0"/>
        <Setter Property="Template">            
            <Setter.Value>
                <ControlTemplate TargetType="igPivot:PivotReportFieldItemControl">
                    <!--<ControlTemplate.Resources>
                        <ContentControl x:Key="FiltersIconItem" Margin="9,0,0,0" x:Name="FilterIconPath" Style="{StaticResource FilterIconPath}" VerticalAlignment="Center" HorizontalAlignment="Left" />
                        <ContentControl x:Key="ColumnsIconItem" Margin="9,0,0,0" x:Name="ColumnsIconPath" Style="{StaticResource ColumnsIconPath}" VerticalAlignment="Center" Grid.Row="1" Grid.Column="1" HorizontalAlignment="Left" />
                        <ContentControl x:Key="MeasuresIconItem" Margin="8,0,0,0" x:Name="MeasuresIconPath" Style="{StaticResource MeasuresIconPath}" VerticalAlignment="Center" Grid.Row="1" HorizontalAlignment="Left"/>
                        <ContentControl x:Key="RowsIconItem" Margin="9,0,0,0" x:Name="RowsIconPath"  Style="{StaticResource RowsIconPath}" VerticalAlignment="Center" Grid.Row="1" Grid.Column="1"  HorizontalAlignment="Left"  />
                    </ControlTemplate.Resources>-->
                    <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="2">

                        <Grid x:Name="Root" Background="Transparent">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <Border BorderBrush="DarkGray" BorderThickness="0" Background="Transparent">
                                <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                                  Margin="{TemplateBinding Padding}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                  Grid.Column="0"/>
                            </Border>

                        </Grid>

                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="igPivot:PivotReportMeasureFieldItemControl" BasedOn="{StaticResource {x:Type igPivot:PivotReportFieldItemControl}}">
        <Setter Property="Background">
            <Setter.Value>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <GradientStop Color="#FF252C31" Offset="1"/>
                    <GradientStop Color="#FF485762" Offset="0.05"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="BorderBrush" Value="#BFFFFFFF"/>
    </Style>

    <Style TargetType="igPivot:PivotReportHierarchyFieldItemControl" BasedOn="{StaticResource {x:Type igPivot:PivotReportFieldItemControl}}">
        <Setter Property="Background" Value="{StaticResource FieldItemBackground}"/>
        <Setter Property="BorderBrush" Value="{StaticResource UpdateButtonStroke}"/>
    </Style>

    <Style TargetType="igPivot:PivotReportFieldIconControl">
        <Setter Property="Background" Value="{StaticResource FieldItemBackground}"/>        
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="igPivot:PivotReportFieldIconControl">
                    <Path Fill="{TemplateBinding Background}" Margin="0 0 5 0"
                          Stroke="{TemplateBinding BorderBrush}" 
                          StrokeThickness="1"                          
                          Data="{TemplateBinding IconGeometry}" 
                          Width="12" Height="10" VerticalAlignment="Center" Stretch="Fill"
                          UseLayoutRounding="False" igPrim:XamlHelper.SnapsToDevicePixels="True"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>
