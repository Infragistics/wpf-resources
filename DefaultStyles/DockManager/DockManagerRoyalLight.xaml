<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:igDock="http://infragistics.com/DockManager"
                    xmlns:igWinThemes="http://infragistics.com/Themes"
                    xmlns:igWindows="http://infragistics.com/Windows"
                    xmlns:interop="clr-namespace:System.Windows.Interop;assembly=PresentationFramework">

    <!--  *********************************  RESOURCES  *********************************  -->
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="DockManagerGeneric.xaml" />
        <ResourceDictionary Source="DockManagerRoyalLight_Brushes.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <!--  ========== ToolWindow ==========  -->
  <Style BasedOn="{x:Static igWinThemes:PrimitivesRoyalLight.ToolWindow}" TargetType="{x:Type igDock:PaneToolWindow}" >
    <Setter Property="UseOSNonClientArea" Value="False"/>
  </Style>

    <!--  ========== PaneNavigatorItemsPanel.ScrollDownButtonStyleKey ==========  -->
    <Style x:Key="{x:Static igDock:PaneNavigatorItemsPanel.ScrollDownButtonStyleKey}" TargetType="{x:Type Button}">
        <Setter Property="Height" Value="24" />
        <Setter Property="MinHeight" Value="24" />
        <Setter Property="Foreground" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedDocumentGlyphFillKey}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid Background="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igDock:XamDockManager}, ResourceId=TransparentBrush}}">
                        <Path Width="10"
                              Height="6"
                              Data="{StaticResource VArrowDown}"
                              Fill="{TemplateBinding Foreground}"
                              Stretch="Fill" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="FrameworkElement.Loaded" />
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
                   <!--  IsMouseOver Button  -->
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.PaneCaptionButtonNotActiveHottrackCenterFillKey}}" />
            </Trigger>
            <!--  IsPressed Button  -->
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.PaneCaptionButtonNotActiveHottrackCenterFillKey}}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--  ========== PaneNavigatorItemsPanel.ScrollUpButtonStyleKey ==========  -->
    <Style x:Key="{x:Static igDock:PaneNavigatorItemsPanel.ScrollUpButtonStyleKey}" TargetType="{x:Type Button}">
        <Setter Property="Height" Value="24" />
        <Setter Property="MinHeight" Value="24" />
        <Setter Property="Foreground" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedDocumentGlyphFillKey}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid Background="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igDock:XamDockManager}, ResourceId=TransparentBrush}}">
                        <Path Width="10"
                              Height="6"
                              Data="{StaticResource VArrowTop}"
                              Fill="{TemplateBinding Foreground}"                              
                              Stretch="Fill"/>               
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
               <!--  IsMouseOver Button  -->
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.PaneCaptionButtonNotActiveHottrackCenterFillKey}}" />
            </Trigger>
            <!--  IsPressed Button  -->
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.PaneCaptionButtonNotActiveHottrackCenterFillKey}}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--  ========== PaneSplitter.PreviewStyleKey ==========  -->    
    <Style x:Key="{x:Static igDock:PaneSplitter.PreviewStyleKey}" TargetType="{x:Type Control}">        
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Control}">
                    <Rectangle Fill="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igDock:XamDockManager}, ResourceId=PreviewStyleKeyBackgroundBrush}}" SnapsToDevicePixels="True" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  ========== CaptionButtonStyleBase ==========  -->
    <!--  Base style for the buttons in the PaneHeaderPresenter  -->
    <Style x:Key="CaptionButtonStyleBase" BasedOn="{StaticResource ButtonStyleBase}" TargetType="{x:Type Button}">
        <Style.Triggers>

            <!--  HotTracked Button in an Active ContentPane  -->
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsMouseOver, RelativeSource={x:Static RelativeSource.Self}}" Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter Property="Opacity" Value="1" />
            </MultiDataTrigger>

            <!--  HotTracked Button in an Non-Active ContentPane  -->
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsMouseOver, RelativeSource={x:Static RelativeSource.Self}}" Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter Property="Opacity" Value="1" />
            </MultiDataTrigger>

            <!--  IsPressed Button  -->
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Opacity" Value="1" />
            </Trigger>

            <!--  IsEnabled Button  -->
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.3" />
            </Trigger>

            <Trigger Property="IsEnabled" Value="True" />

        </Style.Triggers>
    </Style>

    <Style x:Key="paneCaptionButtonStyleBase" BasedOn="{StaticResource CaptionButtonStyleBase}" TargetType="{x:Type Button}">
        <Setter Property="MinWidth" Value="24" />
        <Setter Property="MinHeight" Value="28" />
        <Setter Property="Foreground" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedDocumentGlyphFillKey}}" />
        <Setter Property="VerticalAlignment" Value="Top" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedDocumentGlyphHottrackFillKey}}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--  ========== PaneHeaderPresenter.MaximizeButtonStyleKey ==========  -->
    <Style x:Key="{x:Static igDock:PaneHeaderPresenter.MaximizeButtonStyleKey}" BasedOn="{StaticResource paneCaptionButtonStyleBase}" TargetType="{x:Type Button}">
        <Setter Property="ToolTip" Value="{StaticResource maximizeToolTip}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{TemplateBinding Border.CornerRadius}"
                            SnapsToDevicePixels="True">
                        <igWindows:CardPanel>
                            <Path x:Name="maximizeContent"
                                  Width="9"
                                  Height="9"
                                  Data="{StaticResource MaximizeIcon}"
                                  Fill="{TemplateBinding Foreground}"
                                  Stretch="Fill" />
                            <Path x:Name="restoreContent"
                                  Width="10"
                                  Height="10"
                                  Data="{StaticResource RestoreDownIcon}"
                                  Fill="{TemplateBinding Foreground}"
                                  Stretch="Fill"
                                  Visibility="Collapsed" />
                        </igWindows:CardPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="border" Property="Opacity" Value="0.3" />
                        </Trigger>
                        <DataTrigger Binding="{Binding Path=(igDock:PaneToolWindow.ToolWindow).WindowState, RelativeSource={x:Static RelativeSource.Self}}" Value="Maximized">
                            <Setter TargetName="maximizeContent" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="restoreContent" Property="Visibility" Value="Visible" />
                            <Setter Property="ToolTip" Value="{StaticResource restoreDownToolTip}" />
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  AS 6/24/11 FloatingWindowCaptionSource  -->
    <!--  ========== PaneHeaderPresenter.MinimizeButtonStyleKey ==========  -->
    <Style x:Key="{x:Static igDock:PaneHeaderPresenter.MinimizeButtonStyleKey}" BasedOn="{StaticResource paneCaptionButtonStyleBase}" TargetType="{x:Type Button}">
        <Setter Property="ToolTip" Value="{StaticResource minimizeToolTip}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" 
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{TemplateBinding Border.CornerRadius}"
                            SnapsToDevicePixels="True">
                        <igWindows:CardPanel>
                            <Path x:Name="minimizeContent"
                                  Width="9"
                                  Height="3"
                                  Data="{StaticResource MinimizeIcon}"
                                  Fill="{TemplateBinding Foreground}"
                                  Stretch="Fill" />
                            <Path x:Name="restoreContent"
                                  Width="10"
                                  Height="10"
                                  Data="{StaticResource RestoreDownIcon}"
                                  Fill="{TemplateBinding Foreground}"
                                  Stretch="Fill"
                                  Visibility="Collapsed" />
                        </igWindows:CardPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="border" Property="Opacity" Value="0.3" />
                        </Trigger>
                        <DataTrigger Binding="{Binding Path=(igDock:PaneToolWindow.ToolWindow).WindowState, RelativeSource={x:Static RelativeSource.Self}}" Value="Minimized">
                            <Setter TargetName="minimizeContent" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="restoreContent" Property="Visibility" Value="Visible" />
                            <Setter Property="ToolTip" Value="{StaticResource restoreUpToolTip}" />
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  ========== PaneHeaderPresenter.CloseButtonStyleKey ==========  -->
    <Style x:Key="{x:Static igDock:PaneHeaderPresenter.CloseButtonStyleKey}" BasedOn="{StaticResource paneCaptionButtonStyleBase}" TargetType="{x:Type Button}">
        <Setter Property="ToolTip" Value="{StaticResource closeToolTip}" />
        <Setter Property="Width" Value="24" />
        <Setter Property="Height" Value="24" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" 
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{TemplateBinding Border.CornerRadius}"
                            SnapsToDevicePixels="True">
                        <Path x:Name="CloseGlyph"
                              Width="10"
                              Height="9"
                              Data="{StaticResource CloseIcon}"
                              Fill="{TemplateBinding Foreground}"
                              Opacity="1"
                              Stretch="Fill" />
                    </Border>
                    <ControlTemplate.Triggers>
                         <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="border" Property="Opacity" Value="0.3" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  ========== PaneHeaderPresenter.PinButtonStyleKey ==========  -->
    <Style x:Key="{x:Static igDock:PaneHeaderPresenter.PinButtonStyleKey}" BasedOn="{StaticResource paneCaptionButtonStyleBase}" TargetType="{x:Type Button}">
        <Setter Property="ToolTip" Value="{StaticResource pinToolTip}" />
        <Setter Property="Padding" Value="1.5" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{TemplateBinding Border.CornerRadius}"
                            SnapsToDevicePixels="True">
                        <Grid>
                            <Path x:Name="PinnedGlyph"
                                  Width="7"
                                  Height="9"
                                  Data="{StaticResource PinnedIndicatorIcon}"
                                  Fill="{TemplateBinding Foreground}"
                                  Opacity="1"
                                  Stretch="Fill"
                                  Visibility="Visible" />
                            <Path x:Name="UnpinnedGlyph"
                                  Width="9"
                                  Height="7"
                                  Data="{StaticResource UnpinnedIndicatorIcon}"
                                  Fill="{TemplateBinding Foreground}"
                                  Opacity="1"
                                  Stretch="Fill"
                                  Visibility="Collapsed" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                         <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="border" Property="Opacity" Value="0.3" />
                        </Trigger>
                        <Trigger Property="igDock:XamDockManager.PaneLocation" Value="Unpinned">
                            <Setter TargetName="UnpinnedGlyph" Property="Visibility" Value="Visible" />
                            <Setter TargetName="PinnedGlyph" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="igDock:XamDockManager.PaneLocation" Value="Unpinned" />
        </Style.Triggers>
    </Style>

    <!--  ========== TabGroupPane.DocumentPaneNavigatorButtonStyleKey ==========  -->
    <Style x:Key="{x:Static igDock:TabGroupPane.DocumentPaneNavigatorButtonStyleKey}" BasedOn="{StaticResource paneCaptionButtonStyleBase}" TargetType="{x:Type Button}">
        <Setter Property="ToolTip" Value="{StaticResource showNavigatorToolTip}" />
        <Setter Property="MinWidth" Value="24" />
        <Setter Property="MinHeight" Value="24" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{TemplateBinding Border.CornerRadius}"
                            SnapsToDevicePixels="True">
                        <Path Width="12"
                              Height="10"
                              Data="{StaticResource PaneNavigatorIcon}"
                              Fill="{TemplateBinding Foreground}"
                              Opacity="1"
                              Stretch="Fill" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  ========== MenuItem_IconAreaBackground ==========  -->
    <Style x:Key="MenuItem_IconAreaBackground" TargetType="{x:Type Border}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Background" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.MenuItemIconGroupCenterFillKey}}" />
        <Setter Property="BorderBrush" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.MenuItemIconGroupBorderFillKey}}" />
        <Setter Property="BorderThickness" Value="0" />
    </Style>

    <!--  ========== SubMenuItemTemplate ==========  -->
    <ControlTemplate x:Key="{x:Static igDock:XamDockManager.SubMenuItemTemplateKey}" TargetType="{x:Type MenuItem}">
        <Grid MinHeight="24" Background="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igDock:XamDockManager}, ResourceId=TransparentBrush}}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition x:Name="iconColumn"
                                      Width="Auto"
                                      MaxWidth="24"
                                      SharedSizeGroup="MenuItemIconColumnGroup" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>

                <Border x:Name="IconAreaBackground" Style="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igDock:XamDockManager}, ResourceId=MenuItem_IconAreaBackground}}" />

                <!--  MenuItem Highlight  -->
                <Grid x:Name="Highlight"
                      Grid.ColumnSpan="2"
                      Visibility="Collapsed">
                    <Border x:Name="CenterAndBorderFill"
                            Background="{DynamicResource {x:Static igDock:DockManagerBrushKeys.MenuSelectionCenterFillKey}}"
                            SnapsToDevicePixels="True" />
                    <!--<Rectangle x:Name="InnerBorderFill"
                               Margin="1"
                               SnapsToDevicePixels="True"
                               Stroke="{DynamicResource {x:Static igDock:DockManagerBrushKeys.MenuSelectionInnerBorderFillKey}}"
                               StrokeThickness="{StaticResource DefaultStrokeThickness}" />-->
                </Grid>

                <!--  Icon  -->
                <ContentPresenter x:Name="Icon"
                                  Margin="4 3"
                                  Width="16"
                                  Height="16"
                                  HorizontalAlignment="Center"
                                  VerticalAlignment="Center"
                                  ContentSource="Icon" />

                <!--  CheckMark  -->
                <Grid x:Name="CheckMark" 
                      Visibility="Collapsed" 
                      VerticalAlignment="Center" 
                      HorizontalAlignment="Center">
                    <Border x:Name="CheckMarkBox"
                            Width="15"
                            Height="15"
                            Margin="4 3"
                            Background="{DynamicResource {x:Static igDock:DockManagerBrushKeys.MenuItemCheckmarkBoxHottrackCenterFillKey}}"
                            BorderBrush="{DynamicResource {x:Static igDock:DockManagerBrushKeys.MenuItemCheckmarkBoxHottrackOuterBorderFillKey}}"
                            BorderThickness="{StaticResource DefaultBorderThickness}"
                            SnapsToDevicePixels="True">

                        <Path x:Name="CheckMarkGlyph"
                              HorizontalAlignment="Center"
                              VerticalAlignment="Center"
                              Data="{StaticResource CheckBoxCheck}"
                              Fill="{DynamicResource {x:Static igDock:DockManagerBrushKeys.LightBrushKey}}"
                              FlowDirection="LeftToRight"
                              SnapsToDevicePixels="True" />

                    </Border>
                </Grid>

                <!--  ContentArea  -->
                <Grid Grid.Column="1" VerticalAlignment="Center">
                    <ContentPresenter x:Name="Content"
                                      Margin="8,4,8,5"
                                      ContentSource="Header"
                                      TextBlock.FontFamily="{StaticResource FontFamily}"
                                      TextBlock.FontSize="{StaticResource FontSize}"
                                      TextBlock.Foreground="{DynamicResource {x:Static igDock:DockManagerBrushKeys.PaneNavigatorDarkTextFillKey}}" />
                </Grid>
            </Grid>
        </Grid>
        <ControlTemplate.Triggers>

            <Trigger Property="IsHighlighted" Value="True">
                <Setter TargetName="Highlight" Property="Visibility" Value="Visible" />
                <Setter TargetName="Content" Property="TextBlock.Foreground" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.PaneNavigatorDarkTextFillKey}}" />
            </Trigger>

            <Trigger Property="IsChecked" Value="True">
                <Setter TargetName="CheckMark" Property="Visibility" Value="Visible" />
                <Setter TargetName="Icon" Property="Visibility" Value="Collapsed" />
            </Trigger>

            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsChecked" Value="True" />
                    <Condition Property="IsHighlighted" Value="True" />
                </MultiTrigger.Conditions>
                <Setter TargetName="CheckMarkBox" Property="BorderBrush" Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igDock:XamDockManager}, ResourceId=MenuItemCheckmarkBoxFocusedOuterBorderFillKey}}" />
            </MultiTrigger>

            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="Content" Property="Opacity" Value="0.3" />
            </Trigger>

        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!--  ========== TabGroupPane.DocumentFilesMenuItemStyleKey ==========  -->
    <Style x:Key="{x:Static igDock:TabGroupPane.DocumentFilesMenuItemStyleKey}" BasedOn="{StaticResource TopLevelHeaderMenuItemStyleBase}" TargetType="{x:Type MenuItem}">
        <Setter Property="ToolTip" Value="{StaticResource positionToolTip}" />
        <Setter Property="Width" Value="24" />
        <Setter Property="Height" Value="24" />
        <Setter Property="Foreground" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedDocumentGlyphFillKey}}" />
        <Setter Property="Background" Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igDock:XamDockManager}, ResourceId=TransparentBrush}}" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type MenuItem}">
                    <igWindows:CardPanel>
                        <Border Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="0"
                                SnapsToDevicePixels="True">
                            <Grid Width="24"
                                  Height="24"
                                  VerticalAlignment="Center">
                                <Path x:Name="AllItemsInViewGlyph"
                                      Width="8"
                                      Height="5"
                                      HorizontalAlignment="Center"
                                      VerticalAlignment="Center"
                                      Data="{StaticResource ArrowIcon}"
                                      Fill="{TemplateBinding Foreground}"
                                      Stretch="Fill" />
                                <Path x:Name="HasItemsOutOfViewGlyph"
                                      Width="8"
                                      Height="8"
                                      HorizontalAlignment="Center"
                                      VerticalAlignment="Center"
                                      Data="{StaticResource HasItemsOutOfViewIcon}"
                                      Fill="{TemplateBinding Foreground}"
                                      Stretch="Fill"
                                      Visibility="Collapsed" />
                            </Grid>
                        </Border>
                        <Popup x:Name="PART_Popup"
                               AllowsTransparency="true"
                               IsOpen="{Binding IsSubmenuOpen, RelativeSource={x:Static RelativeSource.TemplatedParent}}"
                               Placement="Bottom"
                               PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}">
                            <Grid x:Name="MenuItem"
                                  Width="Auto"
                                  Height="Auto">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="24" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <Rectangle Grid.ColumnSpan="2"
                                           Margin="0,0,0,0"
                                           HorizontalAlignment="Stretch"
                                           VerticalAlignment="Stretch"
                                           Fill="{DynamicResource {x:Static igDock:DockManagerBrushKeys.MenuItemCenterFillKey}}"
                                           Opacity="1"
                                           SnapsToDevicePixels="True"
                                           Stroke="{DynamicResource {x:Static igDock:DockManagerBrushKeys.MenuItemOuterBorderFillKey}}"
                                           StrokeThickness="{StaticResource DefaultStrokeThickness}" />
                                <ScrollViewer Grid.ColumnSpan="2"
                                              Margin="3"
                                              CanContentScroll="True"
                                              Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly={x:Type FrameworkElement}}}">
                                    <ItemsPresenter KeyboardNavigation.DirectionalNavigation="Cycle"
                                                    KeyboardNavigation.TabNavigation="Cycle"
                                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                </ScrollViewer>
                            </Grid>
                        </Popup>
                    </igWindows:CardPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.3" />
                        </Trigger>
                        <DataTrigger Binding="{Binding Path=(igDock:DocumentTabPanel.HasItemsOutOfView), RelativeSource={RelativeSource AncestorType={x:Type igDock:TabGroupPane}}}" Value="True">
                            <Setter TargetName="HasItemsOutOfViewGlyph" Property="Visibility" Value="Visible" />
                            <Setter TargetName="AllItemsInViewGlyph" Property="Visibility" Value="Collapsed" />
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <!--  Hottracked State  -->
            <DataTrigger Binding="{Binding IsHighlighted, RelativeSource={x:Static RelativeSource.Self}}" Value="True">
                <!--<Setter Property="BorderBrush" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.PaneCaptionButtonHottrackOuterBorderFillKey}}" />
                <Setter Property="Background" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.PaneCaptionButtonHottrackCenterFillKey}}" />-->
                <Setter Property="Foreground" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedDocumentGlyphHottrackFillKey}}" />
            </DataTrigger>

            <!--  IsSubmenuOpen State  -->
            <DataTrigger Binding="{Binding IsSubmenuOpen, RelativeSource={x:Static RelativeSource.Self}}" Value="True">
                <!--<Setter Property="BorderBrush" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.PaneCaptionButtonPressedOuterBorderFillKey}}" />
                <Setter Property="Background" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.PaneCaptionButtonPressedCenterFillKey}}" />-->
                <Setter Property="Foreground" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedDocumentGlyphHottrackFillKey}}" />
            </DataTrigger>

            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.3" />
            </Trigger>

        </Style.Triggers>
    </Style>

    <!--  ========== TabGroupPane.DocumentCloseButtonStyleKey ==========  -->
    <!--<Style x:Key="{x:Static igDock:TabGroupPane.DocumentCloseButtonStyleKey}" BasedOn="{StaticResource paneCaptionButtonStyleBase}" TargetType="{x:Type Button}">
        <Setter Property="ToolTip" Value="{StaticResource closeToolTip}" />
        <Setter Property="Width" Value="24" />
        <Setter Property="Height" Value="24" />
        <Setter Property="Foreground" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedDocumentGlyphFillKey}}" />
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{TemplateBinding Border.CornerRadius}"
                            SnapsToDevicePixels="True">
                        <Path x:Name="CloseGlyph"
                              Width="10"
                              Height="9"
                              Data="{StaticResource CloseIcon}"
                              Fill="{TemplateBinding Foreground}"
                              Opacity="1"
                              Stretch="Fill" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.3" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsMouseOver, RelativeSource={x:Static RelativeSource.Self}}" Value="True">
                <Setter Property="BorderBrush" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.PaneCaptionButtonHottrackOuterBorderFillKey}}" />
                <Setter Property="Background" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.PaneCaptionButtonHottrackCenterFillKey}}" />
                <Setter Property="Foreground" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedDocumentGlyphHottrackFillKey}}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding IsPressed, RelativeSource={x:Static RelativeSource.Self}}" Value="True">
                <Setter Property="BorderBrush" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.PaneCaptionButtonPressedOuterBorderFillKey}}" />
                <Setter Property="Background" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.PaneCaptionButtonPressedCenterFillKey}}" />
                <Setter Property="Foreground" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedDocumentGlyphHottrackFillKey}}" />
            </DataTrigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.3" />
            </Trigger>
        </Style.Triggers>
    </Style>-->

    <!--  ========== centerIndicator ==========  -->
    <ControlTemplate x:Key="centerIndicator" TargetType="{x:Type igDock:DockingIndicator}">
        <Grid x:Name="PART_DockCenter">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>

            <!--  borders  -->
            <Border x:Name="topBd"
                    Grid.RowSpan="2"
                    Grid.Column="2"
                    Margin="0,0,0,10"
                    Background="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igDock:XamDockManager}, ResourceId=DockIndicatorBackgroundBrush}}"
                    BorderBrush="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igDock:XamDockManager}, ResourceId=DockIndicatorBorderbrush}}"
                    BorderThickness="1,1,1,0" />
            <Border x:Name="leftBd"
                    Grid.Row="2"
                    Grid.ColumnSpan="2"
                    Margin="0,0,10,0"
                    Background="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igDock:XamDockManager}, ResourceId=DockIndicatorBackgroundBrush}}"
                    BorderBrush="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igDock:XamDockManager}, ResourceId=DockIndicatorBorderbrush}}"
                    BorderThickness="1,1,0,1" />
            <Border x:Name="rightBd"
                    Grid.Row="2"
                    Grid.Column="3"
                    Grid.ColumnSpan="2"
                    Margin="10,0,0,0"
                    Background="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igDock:XamDockManager}, ResourceId=DockIndicatorBackgroundBrush}}"
                    BorderBrush="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igDock:XamDockManager}, ResourceId=DockIndicatorBorderbrush}}"
                    BorderThickness="0,1,1,1" />
            <Border x:Name="bottomBd"
                    Grid.Row="3"
                    Grid.RowSpan="2"
                    Grid.Column="2"
                    Margin="0,10,0,0"
                    Background="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igDock:XamDockManager}, ResourceId=DockIndicatorBackgroundBrush}}"
                    BorderBrush="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igDock:XamDockManager}, ResourceId=DockIndicatorBorderbrush}}"
                    BorderThickness="1,0,1,1" />

            <!--  fill for remaining center - between diagonal paths and remaining unfilled space left by borders  -->
            <Path x:Name="centerOctFill"
                  Grid.Row="1"
                  Grid.RowSpan="3"
                  Grid.Column="1"
                  Grid.ColumnSpan="3"
                  Width="60"
                  Height="60"
                  Data="M 62,10.95 C62,10.95 51.04,0 51.04,0 51.04,0 10.95,0 10.95,0 10.95,0 0,10.95 0,10.95 0,10.95 0,51.04 0,51.04 0,51.04 10.95,62 10.95,62 10.95,62 51.04,62 51.04,62 51.04,62 62,51.04 62,51.04 62,51.04 62,10.95 62,10.95 z"
                  Fill="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igDock:XamDockManager}, ResourceId=DockIndicatorBackgroundBrush}}"
                  Stretch="Fill" />
            <!--  diagonal corner paths  -->
            <Path x:Name="topRight"
                  Grid.Row="1"
                  Grid.Column="3"
                  Width="11"
                  Height="11"
                  HorizontalAlignment="Left"
                  VerticalAlignment="Bottom"
                  Data="M 0,1.20 C0,1.20 9.79,11 9.79,11 9.79,11 11.20,11 11.20,11 11.20,11 0,-0.20 0,-0.20 0,-0.20 0,1.20 0,1.20 z"
                  Fill="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igDock:XamDockManager}, ResourceId=DockIndicatorBorderbrush}}"
                  Stretch="Fill" />
            <Path x:Name="bottomRight"
                  Grid.Row="3"
                  Grid.Column="3"
                  Width="11"
                  Height="11"
                  HorizontalAlignment="Left"
                  VerticalAlignment="Top"
                  Data="M 0,9.58 C0,9.58 9.79,-0.20 9.79,-0.20 9.79,-0.20 11.20,-0.20 11.20,-0.20 11.20,-0.20 0,11 0,11 0,11 0,9.58 0,9.58 z"
                  Fill="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igDock:XamDockManager}, ResourceId=DockIndicatorBorderbrush}}"
                  Stretch="Fill" />
            <Path x:Name="bottomLeft"
                  Grid.Row="3"
                  Grid.Column="1"
                  Width="11"
                  Height="11"
                  HorizontalAlignment="Right"
                  VerticalAlignment="Top"
                  Data="M 11.20,9.58 C11.20,9.58 1.40,-0.20 1.40,-0.20 1.40,-0.20 0,-0.20 0,-0.20 0,-0.20 11.20,11 11.20,11 11.20,11 11.20,9.58 11.20,9.58 z"
                  Fill="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igDock:XamDockManager}, ResourceId=DockIndicatorBorderbrush}}"
                  Stretch="Fill" />
            <Path x:Name="topLeft"
                  Grid.Row="1"
                  Grid.Column="1"
                  Width="11"
                  Height="11"
                  HorizontalAlignment="Right"
                  VerticalAlignment="Bottom"
                  Data="M 11.20,1.20 C11.20,1.20 1.40,11 1.40,11 1.40,11 0,11 0,11 0,11 11.20,-0.20 11.20,-0.20 11.20,-0.20 11.20,1.20 11.20,1.20 z"
                  Fill="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igDock:XamDockManager}, ResourceId=DockIndicatorBorderbrush}}"
                  Stretch="Fill" />

            <!--  Center Indicator  -->
            <igWindows:CardPanel x:Name="center"
                                 Grid.Row="2"
                                 Grid.Column="2"
                                 Background="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igDock:XamDockManager}, ResourceId=TransparentBrush}}"
                                 IsHitTestVisible="False"
                                 Opacity="0.75">
                <Grid HorizontalAlignment="Center"
                      VerticalAlignment="Center"
                      IsEnabled="{TemplateBinding CanDockCenter}">
                    <Border Width="32"
                            Height="32"
                            Margin="0"
                            Background="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igDock:XamDockManager}, ResourceId=DocTypeIndicatorLightBackgroundBrush}}"
                            BorderBrush="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igDock:XamDockManager}, ResourceId=DocTypeIndicatorLIghtStrokeBrush}}"
                            BorderThickness="1">
                        <Grid>
                            <Border Width="24"
                                    Height="24"
                                    Margin="3"
                                    Background="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igDock:XamDockManager}, ResourceId=DocTypeIndicatorBackgroundBrush}}"
                                    BorderBrush="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igDock:XamDockManager}, ResourceId=DockTypeIndicatorStrokeBrush}}"
                                    BorderThickness="1,3,1,1" />
                        </Grid>
                    </Border>
                </Grid>
            </igWindows:CardPanel>

            <!--  Right Indicator  -->
            <igWindows:CardPanel x:Name="PART_DockRight"
                                 Grid.Row="2"
                                 Grid.Column="4"
                                 Background="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igDock:XamDockManager}, ResourceId=TransparentBrush}}"
                                 Opacity="0.75">
                <Grid x:Name="rightIndicatorIcon" IsEnabled="{TemplateBinding CanDockRight}">
                    <Border Width="30"
                            Height="40"
                            BorderThickness="1">
                        <Border Width="32"
                                Height="32"
                                Margin="-10 0 0 0 "
                                Background="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igDock:XamDockManager}, ResourceId=DocTypeIndicatorLightBackgroundBrush}}"
                                BorderBrush="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igDock:XamDockManager}, ResourceId=DocTypeIndicatorLIghtStrokeBrush}}"
                                BorderThickness="1">
                            <Grid>
                                <Border Width="12"
                                        Height="24"
                                        Margin="14,3,4,3"
                                        Background="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igDock:XamDockManager}, ResourceId=DocTypeIndicatorBackgroundBrush}}"
                                        BorderBrush="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igDock:XamDockManager}, ResourceId=DockTypeIndicatorStrokeBrush}}"
                                        BorderThickness="1,3,1,1" />
                                <Path Width="8"
                                      Margin="1.396,13.422,0,12.578"
                                      HorizontalAlignment="Left"
                                      Data="M3.78125,0 L7.4533691,3.921875 L0.078248896,3.9061258 z"
                                      Fill="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedDocumentGlyphFillKey}}"
                                      RenderTransformOrigin="0.5,0.5"
                                      Stretch="Fill"
                                      Stroke="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedDocumentGlyphFillKey}}">
                                    <Path.RenderTransform>
                                        <RotateTransform Angle="810" />
                                    </Path.RenderTransform>
                                </Path>
                            </Grid>
                        </Border>
                    </Border>
                </Grid>
            </igWindows:CardPanel>

            <!--  Left Indicator  -->
            <igWindows:CardPanel x:Name="PART_DockLeft"
                                 Grid.Row="2"
                                 Grid.Column="0"
                                 Background="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igDock:XamDockManager}, ResourceId=TransparentBrush}}"
                                 Opacity="0.75">
                <Grid x:Name="leftIndicatorIcon" IsEnabled="{TemplateBinding CanDockLeft}">
                    <Border Width="30"
                            Height="40"
                            BorderThickness="1">
                        <Border Width="32"
                                Height="32"
                                Margin="0 0 -10 0 "
                                Background="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igDock:XamDockManager}, ResourceId=DocTypeIndicatorLightBackgroundBrush}}"
                                BorderBrush="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igDock:XamDockManager}, ResourceId=DocTypeIndicatorLIghtStrokeBrush}}"
                                BorderThickness="1">
                            <Grid>
                                <Border Width="12"
                                        Height="24"
                                        Margin="3,3,0,3"
                                        HorizontalAlignment="Left"
                                        Background="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igDock:XamDockManager}, ResourceId=DocTypeIndicatorBackgroundBrush}}"
                                        BorderBrush="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igDock:XamDockManager}, ResourceId=DockTypeIndicatorStrokeBrush}}"
                                        BorderThickness="1,3,1,1" />
                                <Path Width="8"
                                      Margin="0,13.172,3.604,12.828"
                                      HorizontalAlignment="Right"
                                      Data="M3.78125,0 L7.4533691,3.921875 L0.078248896,3.9061258 z"
                                      Fill="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedDocumentGlyphFillKey}}"
                                      RenderTransformOrigin="0.5,0.5"
                                      Stretch="Fill"
                                      Stroke="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedDocumentGlyphFillKey}}">
                                    <Path.RenderTransform>
                                        <RotateTransform Angle="270" />
                                    </Path.RenderTransform>
                                </Path>
                            </Grid>
                        </Border>
                    </Border>
                </Grid>
            </igWindows:CardPanel>

            <!--  Top Indicator  -->
            <igWindows:CardPanel x:Name="PART_DockTop"
                                 Grid.Row="0"
                                 Grid.Column="2"
                                 Background="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igDock:XamDockManager}, ResourceId=TransparentBrush}}"
                                 Opacity="0.75">
                <Grid x:Name="topIndicatorIcon" IsEnabled="{TemplateBinding CanDockTop}">
                    <Border Width="40"
                            Height="30"
                            BorderBrush="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igDock:XamDockManager}, ResourceId=DockTypeIndicatorTransparentBrush}}">
                        <Border Width="32"
                                Height="32"
                                Margin="0 0 0 -10 "
                                Background="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igDock:XamDockManager}, ResourceId=DocTypeIndicatorLightBackgroundBrush}}"
                                BorderThickness="1">
                            <Grid>
                                <Border Width="24"
                                        Height="12"
                                        Margin="3,3,3,0"
                                        VerticalAlignment="Top"
                                        Background="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igDock:XamDockManager}, ResourceId=DocTypeIndicatorBackgroundBrush}}"
                                        BorderBrush="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igDock:XamDockManager}, ResourceId=DockTypeIndicatorStrokeBrush}}"
                                        BorderThickness="1,3,1,1" />
                                <Path Width="8"
                                      Height="4"
                                      Margin="11.145,0,10.854,5.828"
                                      VerticalAlignment="Bottom"
                                      Data="M3.78125,0 L7.4533691,3.921875 L0.078248896,3.9061258 z"
                                      Fill="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedDocumentGlyphFillKey}}"
                                      Stretch="Fill"
                                      Stroke="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedDocumentGlyphFillKey}}" />
                            </Grid>
                        </Border>
                    </Border>
                </Grid>
            </igWindows:CardPanel>

            <!--  Bottom Indicator  -->
            <igWindows:CardPanel x:Name="PART_DockBottom"
                                 Grid.Row="4"
                                 Grid.Column="2"
                                 Background="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igDock:XamDockManager}, ResourceId=TransparentBrush}}"
                                 Opacity="0.75">
                <Grid x:Name="bottomIndicatorIcon" IsEnabled="{TemplateBinding CanDockBottom}">
                    <Border Width="40"
                            Height="30"
                            BorderThickness="1">
                        <Border Width="32"
                                Height="32"
                                  Margin="0 -10 0 0"
                                Background="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igDock:XamDockManager}, ResourceId=DocTypeIndicatorLightBackgroundBrush}}"
                                BorderBrush="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igDock:XamDockManager}, ResourceId=DocTypeIndicatorLIghtStrokeBrush}}"
                                BorderThickness="1">
                            <Grid>
                                <Border Width="24"
                                        Margin="3,14,3,4"
                                        Background="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igDock:XamDockManager}, ResourceId=DocTypeIndicatorBackgroundBrush}}"
                                        BorderBrush="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igDock:XamDockManager}, ResourceId=DockTypeIndicatorStrokeBrush}}"
                                        BorderThickness="1,3,1,1" />
                                <Path Width="8"
                                      Height="4"
                                      Margin="10.895,4.172,11.104,0"
                                      VerticalAlignment="Top"
                                      Data="M3.78125,0 L7.4533691,3.921875 L0.078248896,3.9061258 z"
                                      Fill="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedDocumentGlyphFillKey}}"
                                      RenderTransformOrigin="0.5,0.5"
                                      Stretch="Fill"
                                      Stroke="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedDocumentGlyphFillKey}}">
                                    <Path.RenderTransform>
                                        <RotateTransform Angle="180" />
                                    </Path.RenderTransform>
                                </Path>
                            </Grid>
                        </Border>
                    </Border>
                </Grid>
            </igWindows:CardPanel>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="HotTrackPosition" Value="Center" />
            <Trigger Property="HotTrackPosition" Value="Left" />
            <Trigger Property="HotTrackPosition" Value="Right" />
            <Trigger Property="HotTrackPosition" Value="Top" />
            <Trigger Property="HotTrackPosition" Value="Bottom" />
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!--  ================================  -->
    <!--  DockingIndicator  -->
    <!--  ================================  -->
    <Style TargetType="{x:Type igDock:DockingIndicator}">
        <Setter Property="BorderThickness" Value="{StaticResource DefaultBorderThickness}" />
        <Setter Property="Background" Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igDock:XamDockManager}, ResourceId=DockIndicatorBackgroundBrush}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type igDock:DockingIndicator}">
                    <Grid Background="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igDock:XamDockManager}, ResourceId=TransparentBrush}}">
                        <Grid x:Name="DockingIndicator">
                            <Border x:Name="DragIndicatorIcon"
                                    Width="36"
                                    Height="40"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igDock:XamDockManager}, ResourceId=DockTypeIndicatorTransparentBrush}}"
                                    BorderThickness="{StaticResource DefaultBorderThickness}">
                                <Border Width="32"
                                        Height="32"
                                        Background="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igDock:XamDockManager}, ResourceId=DocTypeIndicatorLightBackgroundBrush}}"
                                        BorderBrush="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igDock:XamDockManager}, ResourceId=DocTypeIndicatorLIghtStrokeBrush}}"
                                        BorderThickness="{StaticResource DefaultBorderThickness}">
                                    <Grid>
                                        <Border x:Name="DragIndicatorWindowIcon"
                                                Width="12"
                                                Height="24"
                                                Margin="3,3,0,3"
                                                HorizontalAlignment="Left"
                                                Background="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igDock:XamDockManager}, ResourceId=DocTypeIndicatorBackgroundBrush}}"
                                                BorderBrush="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igDock:XamDockManager}, ResourceId=DockTypeIndicatorStrokeBrush}}"
                                                BorderThickness="1,3,1,1" />
                                        <Path Width="8"
                                              Margin="0,13.172,3.604,12.828"
                                              HorizontalAlignment="Right"
                                              Data="M3.78125,0 L7.4533691,3.921875 L0.078248896,3.9061258 z"
                                              Fill="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedDocumentGlyphFillKey}}"
                                              RenderTransformOrigin="0.5,0.5"
                                              Stretch="Fill"
                                              Stroke="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedDocumentGlyphFillKey}}">
                                            <Path.RenderTransform>
                                                <RotateTransform Angle="270" />
                                            </Path.RenderTransform>
                                        </Path>
                                    </Grid>
                                </Border>
                            </Border>
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Position" Value="Left">
                            <Setter TargetName="DockingIndicator" Property="IsEnabled" Value="{Binding CanDockLeft, RelativeSource={x:Static RelativeSource.TemplatedParent}}" />
                        </Trigger>
                        <Trigger Property="Position" Value="Right">
                            <Setter TargetName="DragIndicatorWindowIcon" Property="BorderThickness" Value="1,1,1,3" />
                            <Setter TargetName="DragIndicatorIcon" Property="LayoutTransform">
                                <Setter.Value>
                                    <RotateTransform Angle="180" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="DockingIndicator" Property="IsEnabled" Value="{Binding CanDockRight, RelativeSource={x:Static RelativeSource.TemplatedParent}}" />
                        </Trigger>

                        <Trigger Property="Position" Value="Top">
                            <Setter TargetName="DragIndicatorWindowIcon" Property="BorderThickness" Value="3,1,1,1" />
                            <Setter TargetName="DragIndicatorIcon" Property="LayoutTransform">
                                <Setter.Value>
                                    <RotateTransform Angle="90" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="DockingIndicator" Property="IsEnabled" Value="{Binding CanDockTop, RelativeSource={x:Static RelativeSource.TemplatedParent}}" />
                        </Trigger>

                        <Trigger Property="Position" Value="Bottom">
                            <Setter TargetName="DragIndicatorWindowIcon" Property="BorderThickness" Value="1,1,3,1" />
                            <Setter TargetName="DragIndicatorIcon" Property="LayoutTransform">
                                <Setter.Value>
                                    <RotateTransform Angle="-90" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="DockingIndicator" Property="IsEnabled" Value="{Binding CanDockBottom, RelativeSource={x:Static RelativeSource.TemplatedParent}}" />
                        </Trigger>

                        <!--  HotTracking  -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Position" Value="Left" />
                                <Condition Property="HotTrackPosition" Value="Left" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="DockingIndicator" Property="Opacity" Value="1" />
                        </MultiTrigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Position" Value="Right" />
                                <Condition Property="HotTrackPosition" Value="Right" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="DockingIndicator" Property="Opacity" Value="1" />
                        </MultiTrigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Position" Value="Top" />
                                <Condition Property="HotTrackPosition" Value="Top" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="DockingIndicator" Property="Opacity" Value="1" />
                        </MultiTrigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Position" Value="Bottom" />
                                <Condition Property="HotTrackPosition" Value="Bottom" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="DockingIndicator" Property="Opacity" Value="1" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Position" Value="Center">
                <Setter Property="Template" Value="{StaticResource centerIndicator}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--  ========== DockableTabItemTemplate ==========  -->
    <ControlTemplate x:Key="{x:Static igDock:PaneTabItem.DockableTabItemTemplateKey}" TargetType="{x:Type igDock:PaneTabItem}">
        <Border x:Name="ctrlBorder"
                MinHeight="24"
                SnapsToDevicePixels="true">
            <igWindows:CardPanel>
                <igWindows:CardPanel x:Name="Background">
                    <Grid Width="Auto"
                          Height="Auto"
                          HorizontalAlignment="Stretch"
                          VerticalAlignment="Stretch">
                        <Border x:Name="Border"
                                Margin="0,0,0,0"
                                Background="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igDock:XamDockManager}, ResourceId=TransparentBrush}}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                SnapsToDevicePixels="True" />
                        <Border x:Name="HighlightBorder"
                                Margin="0"
                                BorderBrush="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedListNotActiveInnerBorderFillKey}}"
                                BorderThickness="0"
                                SnapsToDevicePixels="True" />
                    </Grid>
                </igWindows:CardPanel>
                <Border x:Name="Content"
                        Padding="{TemplateBinding Padding}"
                        BorderThickness="{StaticResource TabBorderThickness}"
                        BorderBrush="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedDocumentNotActiveOuterBorderFillKey}}"
                        Margin="0 0 0 -1"
                        Background="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igDock:XamDockManager}, ResourceId=TransparentBrush}}" >
                    <DockPanel x:Name="contentPanel">
                        <igWindows:AutoDisabledImage x:Name="image"
                                                     Margin="0,0,2,0"
                                                     DockPanel.Dock="Left"
                                                     Source="{Binding Pane.Image, RelativeSource={x:Static RelativeSource.TemplatedParent}}"
                                                     Stretch="None"
                                                     Visibility="{Binding Pane.HasImage, Converter={StaticResource BoolToVisConverter}, RelativeSource={x:Static RelativeSource.TemplatedParent}}" />
                        <ContentPresenter x:Name="contentHeader"
                                          Margin="4,2"
                                          HorizontalAlignment="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"
                                          VerticalAlignment="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"
                                          igWindows:ClippedTextToolTipService.AncestorTypeForToolTip="{x:Type ContentControl}"
                                          igWindows:ClippedTextToolTipService.ShowToolTipWhenClipped="True"
                                          igWindows:ClippedTextToolTipService.ToolTipStyleKey="{x:Static igDock:XamDockManager.ToolTipStyleKey}"
                                          ContentSource="Header"
                                          RecognizesAccessKey="true"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                          TextElement.Foreground="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedListNotActiveTextFillKey}}" />
                    </DockPanel>
                </Border>
            </igWindows:CardPanel>
        </Border>
        <ControlTemplate.Triggers>

            <Trigger Property="TabStripPlacement" Value="Top">
                <Setter TargetName="ctrlBorder" Property="Margin" Value="0,2,0,0" />
                  <Setter TargetName="Content" Property="BorderThickness" Value="0 2 0 0" />    
            </Trigger>
            <Trigger Property="TabStripPlacement" Value="Bottom">
                <Setter TargetName="ctrlBorder" Property="Margin" Value="0,0,0,2" />
                   <Setter TargetName="Content" Property="BorderThickness" Value="0 0 0 2" />
            </Trigger>
            <Trigger Property="TabStripPlacement" Value="Left">
                <Setter TargetName="Content" Property="BorderThickness" Value="2 0 0 0" />
                <Setter TargetName="Content" Property="LayoutTransform">
                    <Setter.Value>
                        <RotateTransform Angle="-90" />
                    </Setter.Value>
                </Setter>
            </Trigger>

            <Trigger Property="TabStripPlacement" Value="Right">
                <Setter TargetName="Content" Property="BorderThickness" Value="0 0 2 0" />
                <Setter TargetName="Content" Property="LayoutTransform">
                    <Setter.Value>
                        <RotateTransform Angle="90" />
                    </Setter.Value>
                </Setter>
            </Trigger>            

            <!--<Trigger Property="IsSelected" Value="true">
                <Setter TargetName="contentHeader" Property="TextElement.Foreground" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedListActiveTextFillKey}}" />
                <Setter Property="Panel.ZIndex" Value="1" />
                <Setter TargetName="Content" Property="Opacity" Value="1" />
                <Setter Property="Background" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedListActiveBottomCenterFillKey}}" />
                <Setter Property="BorderBrush" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedListActiveOuterBorderFillKey}}" />
            </Trigger>-->
            
              <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsSelected" Value="True" />
                    <Condition Property="IsMouseOverTab" Value="true" />
                </MultiTrigger.Conditions>
                  <Setter TargetName="contentHeader" Property="TextBlock.Foreground" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedDocumentGlyphHottrackFillKey}}" />
                  <Setter TargetName="Content" Property="BorderBrush" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedDocumentActiveOuterBorderFillKey}}" />
            </MultiTrigger>
            
              <Trigger Property="IsMouseOverTab" Value="true">
                <!--<Setter TargetName="gdContent" Property="Opacity" Value="1" />-->
                <Setter TargetName="Content" Property="BorderBrush" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedDocumentHottrackOuterBorderFillKey}}" />
                 <Setter TargetName="contentHeader" Property="TextBlock.Foreground" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedDocumentHottrackTextFillKey}}" />
            </Trigger>

            <Trigger Property="IsSelected" Value="true">             
                <!--<Setter TargetName="activebrFiller" Property="Visibility" Value="Visible" />
                <Setter TargetName="gdContent" Property="Opacity" Value="1" />-->
                 <!--<Setter TargetName="NormalContent" Property="Opacity" Value="0.7" />-->
                <Setter Property="Panel.ZIndex" Value="1" />
                <Setter TargetName="contentHeader" Property="TextBlock.Foreground" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedDocumentGlyphHottrackFillKey}}" />
                <Setter TargetName="Content" Property="BorderBrush" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedDocumentActiveOuterBorderFillKey}}" />
            </Trigger>

            <!--  ==================== IsMouseOverTab + TabStripPlacement ====================  -->
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOverTab" Value="True" />
                    <Condition Property="IsSelected" Value="False" />
                </MultiTrigger.Conditions>
                <Setter TargetName="Content" Property="Opacity" Value="1" />
            </MultiTrigger>

            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOverTab" Value="True" />
                    <Condition Property="TabStripPlacement" Value="Bottom" />
                    <Condition Property="IsSelected" Value="False" />
                </MultiTrigger.Conditions>
            </MultiTrigger>

            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOverTab" Value="True" />
                    <Condition Property="TabStripPlacement" Value="Top" />
                    <Condition Property="IsSelected" Value="False" />
                </MultiTrigger.Conditions>
            </MultiTrigger>

            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOverTab" Value="True" />
                    <Condition Property="TabStripPlacement" Value="Left" />
                    <Condition Property="IsSelected" Value="False" />
                </MultiTrigger.Conditions>
            </MultiTrigger>

            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOverTab" Value="True" />
                    <Condition Property="TabStripPlacement" Value="Right" />
                    <Condition Property="IsSelected" Value="False" />
                </MultiTrigger.Conditions>
            </MultiTrigger>

            <Trigger Property="IsEnabled" Value="false">
                <Setter TargetName="Content" Property="Opacity" Value="0.3" />
            </Trigger>

            <!--  ==================== IsSelected + TabStripPlacement ====================  -->
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsSelected" Value="True" />
                    <Condition Property="TabStripPlacement" Value="Bottom" />
                </MultiTrigger.Conditions>
            </MultiTrigger>

            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsSelected" Value="True" />
                    <Condition Property="TabStripPlacement" Value="Top" />
                </MultiTrigger.Conditions>
            </MultiTrigger>

            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsSelected" Value="True" />
                    <Condition Property="TabStripPlacement" Value="Left" />
                </MultiTrigger.Conditions>
            </MultiTrigger>

            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsSelected" Value="True" />
                    <Condition Property="TabStripPlacement" Value="Right" />
                </MultiTrigger.Conditions>
            </MultiTrigger>

            <!--  ========== If this is the First Tab in the series ==========  -->
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="igWindows:TabItemPanel.IsFirstTabInRow" Value="True" />
                </MultiTrigger.Conditions>
            </MultiTrigger>

            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsSelected" Value="False" />
                    <Condition Property="igWindows:TabItemPanel.IsFirstTabInRow" Value="True" />
                    <Condition Property="TabStripPlacement" Value="Bottom" />
                </MultiTrigger.Conditions>
            </MultiTrigger>

            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsSelected" Value="False" />
                    <Condition Property="igWindows:TabItemPanel.IsFirstTabInRow" Value="True" />
                    <Condition Property="TabStripPlacement" Value="Top" />
                </MultiTrigger.Conditions>
            </MultiTrigger>

            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsSelected" Value="False" />
                    <Condition Property="igWindows:TabItemPanel.IsFirstTabInRow" Value="True" />
                    <Condition Property="TabStripPlacement" Value="Left" />
                </MultiTrigger.Conditions>
            </MultiTrigger>

            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsSelected" Value="False" />
                    <Condition Property="igWindows:TabItemPanel.IsFirstTabInRow" Value="True" />
                    <Condition Property="TabStripPlacement" Value="Right" />
                </MultiTrigger.Conditions>
            </MultiTrigger>

            <!--  ========== If this is the First Tab and Selected in the series ==========  -->
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsSelected" Value="True" />
                    <Condition Property="igWindows:TabItemPanel.IsFirstTabInRow" Value="True" />
                    <Condition Property="TabStripPlacement" Value="Bottom" />
                </MultiTrigger.Conditions>
            </MultiTrigger>

            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsSelected" Value="True" />
                    <Condition Property="igWindows:TabItemPanel.IsFirstTabInRow" Value="True" />
                    <Condition Property="TabStripPlacement" Value="Top" />
                </MultiTrigger.Conditions>
                <Setter TargetName="contentHeader" Property="TextElement.Foreground" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedListActiveTextFillKey}}" />
            </MultiTrigger>

            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsSelected" Value="True" />
                    <Condition Property="igWindows:TabItemPanel.IsFirstTabInRow" Value="True" />
                    <Condition Property="TabStripPlacement" Value="Left" />
                </MultiTrigger.Conditions>
            </MultiTrigger>

            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsSelected" Value="True" />
                    <Condition Property="igWindows:TabItemPanel.IsFirstTabInRow" Value="True" />
                    <Condition Property="TabStripPlacement" Value="Right" />
                </MultiTrigger.Conditions>
            </MultiTrigger>

            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOverTab" Value="True" />
                    <Condition Property="IsSelected" Value="False" />
                </MultiTrigger.Conditions>
            </MultiTrigger>

        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!--  ========== UnpinnedTabItemTemplateKey ==========  -->
    <ControlTemplate x:Key="{x:Static igDock:PaneTabItem.UnpinnedTabItemTemplateKey}" TargetType="{x:Type igDock:PaneTabItem}">
        <Border x:Name="Container"
                MinWidth="24"
                MinHeight="24"
                SnapsToDevicePixels="true">
            <igWindows:CardPanel>
                <!--<igWindows:CardPanel x:Name="Background">
                    <Grid>
                        <Border x:Name="OuterBorder"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="0"
                                SnapsToDevicePixels="True" />
                    </Grid>
                </igWindows:CardPanel>-->
                <Border x:Name="Content"
                        Padding="{TemplateBinding Padding}"
                        BorderThickness="{StaticResource TabBorderThickness}"
                        BorderBrush="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedDocumentNotActiveOuterBorderFillKey}}"
                        Margin="0"
                        Background="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igDock:XamDockManager}, ResourceId=TransparentBrush}}" >
                    <DockPanel>
                        <igWindows:AutoDisabledImage Margin="0,0,5,0"
                                                     DockPanel.Dock="Left"
                                                     Source="{Binding Pane.Image, RelativeSource={x:Static RelativeSource.TemplatedParent}}"
                                                     Stretch="None"
                                                     Visibility="{Binding Pane.HasImage, Converter={StaticResource BoolToVisConverter}, RelativeSource={x:Static RelativeSource.TemplatedParent}}" />
                        <ContentPresenter x:Name="contentHeader"
                                          Margin="4,2"
                                          HorizontalAlignment="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"
                                          VerticalAlignment="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"
                                          igWindows:ClippedTextToolTipService.AncestorTypeForToolTip="{x:Type ContentControl}"
                                          igWindows:ClippedTextToolTipService.ShowToolTipWhenClipped="True"
                                          igWindows:ClippedTextToolTipService.ToolTipStyleKey="{x:Static igDock:XamDockManager.ToolTipStyleKey}"
                                          ContentSource="Header"
                                          RecognizesAccessKey="true"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                          TextBlock.Foreground="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedListNotActiveTextFillKey}}" />
                    </DockPanel>
                </Border>
            </igWindows:CardPanel>
        </Border>
        <ControlTemplate.Triggers>
               <Trigger Property="IsMouseOverTab" Value="true">
                <!--<Setter TargetName="gdContent" Property="Opacity" Value="1" />-->
                <Setter TargetName="Content" Property="BorderBrush" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedDocumentHottrackOuterBorderFillKey}}" />
                 <Setter TargetName="contentHeader" Property="TextBlock.Foreground" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedDocumentHottrackTextFillKey}}" />
            </Trigger>

            <Trigger Property="IsSelected" Value="true">             
                <!--<Setter TargetName="activebrFiller" Property="Visibility" Value="Visible" />
                <Setter TargetName="gdContent" Property="Opacity" Value="1" />-->
                 <!--<Setter TargetName="NormalContent" Property="Opacity" Value="0.7" />-->
                <Setter Property="Panel.ZIndex" Value="1" />
                <Setter TargetName="contentHeader" Property="TextBlock.Foreground" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedDocumentGlyphHottrackFillKey}}" />
                <Setter TargetName="Content" Property="BorderBrush" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedDocumentActiveOuterBorderFillKey}}" />
            </Trigger>

            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsSelected" Value="True" />
                    <Condition Property="IsMouseOverTab" Value="True" />
                </MultiTrigger.Conditions>
                <Setter TargetName="contentHeader" Property="TextBlock.Foreground" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedDocumentGlyphHottrackFillKey}}" />
                <Setter TargetName="Content" Property="BorderBrush" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedDocumentActiveOuterBorderFillKey}}" />
            </MultiTrigger>   
            
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="contentHeader" Property="Opacity" Value="0.3" />
            </Trigger>
            
            <Trigger Property="TabStripPlacement" Value="Top">
                  <Setter TargetName="Content" Property="BorderThickness" Value="0 2 0 0" />           
                <!--<Setter Property="Padding" Value="10,2" />-->
                <Setter Property="Margin" Value="0" />
                <!--<Setter TargetName="Container" Property="Margin" Value="3,6" />-->
            </Trigger>
            <Trigger Property="TabStripPlacement" Value="Bottom">
                <Setter TargetName="Content" Property="BorderThickness" Value="0 0 0 2" />
                <!--<Setter Property="Padding" Value="10,2" />-->
                <Setter Property="Margin" Value="0" />
                <!--<Setter TargetName="Container" Property="Margin" Value="3,6" />-->
            </Trigger>
            <Trigger Property="TabStripPlacement" Value="Left">
                 <Setter TargetName="Content" Property="BorderThickness" Value="0 0 0 2" />
                <!--<Setter Property="Padding" Value="10,2" />-->
                <Setter Property="Margin" Value="0" />
                <!--<Setter TargetName="Container" Property="Margin" Value="6,3" />-->
                <Setter TargetName="Content" Property="LayoutTransform">
                    <Setter.Value>
                        <RotateTransform Angle="90" />
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="TabStripPlacement" Value="Right">
                  <Setter TargetName="Content" Property="BorderThickness" Value="0 2 0 0" />
                <!--<Setter Property="Padding" Value="10,2" />-->
                <Setter Property="Margin" Value="0" />
                <!--<Setter TargetName="Container" Property="Margin" Value="6,3" />-->
                <Setter TargetName="Content" Property="LayoutTransform">
                    <Setter.Value>
                        <RotateTransform Angle="90" />
                    </Setter.Value>
                </Setter>
            </Trigger>      
          
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="True" />
                    <Condition Property="TabStripPlacement" Value="Top" />
                </MultiTrigger.Conditions>
                 <!--<Setter Property="Foreground" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedDocumentHottrackTextFillKey}}" />
                <Setter TargetName="Content" Property="BorderBrush" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedDocumentHottrackOuterBorderFillKey}}" />-->
                <!--<Setter Property="Background" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.UnpinnedTabItemTopHottrackCenterFillKey}}" />
                <Setter Property="BorderBrush" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.UnpinnedTabItemHottrackOuterBorderFillKey}}" />-->
            </MultiTrigger>

            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="True" />
                    <Condition Property="TabStripPlacement" Value="Bottom" />
                </MultiTrigger.Conditions>
                <!--<Setter Property="Foreground" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedDocumentHottrackTextFillKey}}" />
                <Setter TargetName="Content" Property="BorderBrush" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedDocumentHottrackOuterBorderFillKey}}" />-->
                <!--<Setter Property="Background" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.UnpinnedTabItemBottomHottrackCenterFillKey}}" />
                <Setter Property="BorderBrush" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.UnpinnedTabItemHottrackOuterBorderFillKey}}" />-->
            </MultiTrigger>

            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="True" />
                    <Condition Property="TabStripPlacement" Value="Left" />
                </MultiTrigger.Conditions>
                <!--<Setter Property="Foreground" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedDocumentHottrackTextFillKey}}" />
                <Setter TargetName="Content" Property="BorderBrush" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedDocumentHottrackOuterBorderFillKey}}" />-->
                <!--<Setter Property="Background" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.UnpinnedTabItemRightHottrackCenterFillKey}}" />
                <Setter Property="BorderBrush" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.UnpinnedTabItemHottrackOuterBorderFillKey}}" />-->
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="True" />
                    <Condition Property="TabStripPlacement" Value="Right" />
                </MultiTrigger.Conditions>
                <!--<Setter Property="Foreground" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedDocumentHottrackTextFillKey}}" />
                <Setter TargetName="Content" Property="BorderBrush" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedDocumentHottrackOuterBorderFillKey}}" />-->
                <!--<Setter Property="Background" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.UnpinnedTabItemLeftHottrackCenterFillKey}}" />
                <Setter Property="BorderBrush" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.UnpinnedTabItemHottrackOuterBorderFillKey}}" />-->
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="igDock:UnpinnedTabItemPanel.IsFirstInGroup" Value="True" />
                    <Condition Property="TabStripPlacement" Value="Bottom" />
                </MultiTrigger.Conditions>
                <Setter Property="Margin" Value="0,0,0,0" />
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="igDock:UnpinnedTabItemPanel.IsFirstInGroup" Value="True" />
                    <Condition Property="TabStripPlacement" Value="Top" />
                </MultiTrigger.Conditions>
                <Setter Property="Margin" Value="0,0,0,0" />
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="igDock:UnpinnedTabItemPanel.IsFirstInGroup" Value="True" />
                    <Condition Property="TabStripPlacement" Value="Left" />
                </MultiTrigger.Conditions>
                <Setter Property="Margin" Value="0,0,0,0" />
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="igDock:UnpinnedTabItemPanel.IsFirstInGroup" Value="True" />
                    <Condition Property="TabStripPlacement" Value="Right" />
                </MultiTrigger.Conditions>
                <Setter Property="Margin" Value="0,0,0,0" />
            </MultiTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!--  ========== XamDockManager.ToolTipStyleKey ==========  -->
    <Style x:Key="{x:Static igDock:XamDockManager.ToolTipStyleKey}" TargetType="{x:Type ToolTip}">
        <Setter Property="BorderBrush" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.ToolTipOuterBorderFillKey}}" />
        <Setter Property="Background" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.ToolTipCenterFillKey}}" />
        <Setter Property="Foreground" Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igDock:XamDockManager}, ResourceId=ForegroundBrush}}" />
        <Setter Property="FontSize" Value="{StaticResource FontSize}" />
        <Setter Property="FontFamily" Value="{StaticResource FontFamily}" />
        <Setter Property="Padding" Value="{StaticResource ToolTipPadding}" />
        <Setter Property="BorderThickness" Value="{StaticResource DefaultBorderThickness}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ContentControl">
                    <Grid>
                        <Rectangle Fill="{TemplateBinding Background}"
                                   Stroke="{TemplateBinding BorderBrush}"
                                   StrokeThickness="{TemplateBinding BorderThickness}" />
                        <ContentPresenter Margin="{TemplateBinding Padding}" Content="{TemplateBinding Content}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  ========== PaneHeaderPresenter.PositionMenuItemStyleKey ==========  -->
    <Style x:Key="{x:Static igDock:PaneHeaderPresenter.PositionMenuItemStyleKey}" BasedOn="{StaticResource TopLevelHeaderMenuItemStyleBase}" TargetType="{x:Type MenuItem}">
        <Setter Property="ToolTip" Value="{StaticResource positionToolTip}" />
        <Setter Property="Width" Value="24" />
        <Setter Property="Height" Value="24" />
        <Setter Property="Foreground" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedDocumentGlyphFillKey}}" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type MenuItem}">
                    <igWindows:CardPanel>
                        <Border Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="{TemplateBinding Border.CornerRadius}"
                                SnapsToDevicePixels="True">
                             <Path  Width="8"
                                    Height="5"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    Data="{StaticResource ArrowIcon}"
                                    Fill="{TemplateBinding Foreground}"
                                    Stretch="Fill"
                                    Opacity="1"/>
                            <!--<Path Width="10"
                                  Height="6"
                                  Data="M 3,8 C3,8 7.5,12.5 7.5,12.5 7.5,12.5 12,8 12,8 12,8 3,8 3,8 z"
                                  Fill="{TemplateBinding Foreground}"
                                  Opacity="1"
                                  Stretch="Fill" />-->
                        </Border>
                        <Popup x:Name="PART_Popup"
                               AllowsTransparency="true"
                               IsOpen="{Binding IsSubmenuOpen, RelativeSource={x:Static RelativeSource.TemplatedParent}}"
                               Placement="Bottom"
                               PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}">
                            <Grid x:Name="MenuItem"
                                  Width="Auto"
                                  Height="Auto">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="24" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <Rectangle Grid.ColumnSpan="2"
                                           Margin="0,0,0,0"
                                           HorizontalAlignment="Stretch"
                                           VerticalAlignment="Stretch"
                                           Fill="{DynamicResource {x:Static igDock:DockManagerBrushKeys.MenuItemCenterFillKey}}"
                                           Opacity="1"
                                           SnapsToDevicePixels="True"
                                           Stroke="{DynamicResource {x:Static igDock:DockManagerBrushKeys.MenuItemOuterBorderFillKey}}"
                                           StrokeThickness="{StaticResource DefaultStrokeThickness}" />
                                <ScrollViewer Grid.ColumnSpan="2"
                                              Margin="0"
                                              CanContentScroll="True"
                                              Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly={x:Type FrameworkElement}}}">
                                    <ItemsPresenter KeyboardNavigation.DirectionalNavigation="Cycle"
                                                    KeyboardNavigation.TabNavigation="Cycle"
                                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                </ScrollViewer>
                            </Grid>
                        </Popup>
                    </igWindows:CardPanel>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.3" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsMouseOver, RelativeSource={x:Static RelativeSource.Self}}" Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter Property="Foreground" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedDocumentGlyphHottrackFillKey}}" />
            </MultiDataTrigger>

            <!--  HotTracked Button in an Non-Active ContentPane  -->
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsMouseOver, RelativeSource={x:Static RelativeSource.Self}}" Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter Property="Foreground" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedDocumentGlyphHottrackFillKey}}" />
            </MultiDataTrigger>

            <!--  IsPressed Button  -->
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsSubmenuOpen, RelativeSource={x:Static RelativeSource.Self}}" Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter Property="Foreground" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedDocumentGlyphHottrackFillKey}}" />
            </MultiDataTrigger>

            <!--  IsEnabled Button  -->
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.3" />
            </Trigger>

        </Style.Triggers>
    </Style>

    <!--  ================================  -->
    <!--  ContentPane  -->
    <!--  ================================  -->
    <Style TargetType="{x:Type igDock:ContentPane}">
        <Setter Property="FontSize" Value="{StaticResource FontSize}" />
        <Setter Property="FontFamily" Value="{StaticResource FontFamily}" />
        <Setter Property="Foreground" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.PaneNavigatorDarkTextFillKey}}" />
        <Setter Property="Background" Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igDock:XamDockManager}, ResourceId=ContentPaneCenterFillKey}}" />
        <Setter Property="BorderBrush" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.ContentPaneBorderFillKey}}" />
        <Setter Property="BorderThickness" Value="{StaticResource DefaultBorderThickness}" />
        <Setter Property="TabHeader" Value="{Binding Header, Converter={StaticResource contentValidationConverter}, RelativeSource={x:Static RelativeSource.Self}}" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type igDock:ContentPane}">
                    <AdornerDecorator>
                        <Border Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                SnapsToDevicePixels="True">
                            <Grid Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                <Grid.RowDefinitions>
                                    <RowDefinition x:Name="captionRow" Height="Auto" />
                                    <RowDefinition x:Name="contentRow" Height="*" />
                                </Grid.RowDefinitions>
                                <igDock:PaneHeaderPresenter Content="{TemplateBinding Header}"
                                                            ContentTemplate="{TemplateBinding HeaderTemplate}"
                                                            ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}"
                                                            DataContext="{Binding RelativeSource={x:Static RelativeSource.TemplatedParent}}"
                                                            Visibility="{TemplateBinding HeaderVisibility}" />
                                <ContentControl Grid.Row="1"
                                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                Background="{TemplateBinding Background}"
                                                Foreground="{TemplateBinding Foreground}"
                                                Visibility="{TemplateBinding ContentVisibility}">
                                    <ContentPresenter x:Name="PART_Content"
                                                      Content="{TemplateBinding Content}"
                                                      ContentTemplate="{TemplateBinding ContentTemplate}"
                                                      ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}" >
                                        <ContentPresenter.Resources>
                                            <Style TargetType="{x:Type TextBlock}">
                                                <Setter Property="Padding" Value="{StaticResource ContentPadding}"/>
                                            </Style>
                                        </ContentPresenter.Resources>
                                        </ContentPresenter>
                                </ContentControl>
                            </Grid>
                        </Border>
                    </AdornerDecorator>
                    <ControlTemplate.Triggers>
                         <!--<Trigger Property="igDock:XamDockManager.PaneLocation" Value="FloatingOnly">
                             <Setter Property="BorderThickness" Value="0" />
                        </Trigger>
                        <Trigger Property="igDock:XamDockManager.PaneLocation" Value="Floating">
                             <Setter Property="BorderThickness" Value="0" />
                        </Trigger>-->
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsProvidingFloatingWindowCaption, RelativeSource={x:Static RelativeSource.Self}}" Value="True" />
                                <Condition Binding="{Binding Path=(igDock:PaneToolWindow.ToolWindow).WindowState, RelativeSource={x:Static RelativeSource.Self}}" Value="Minimized" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="PART_Content" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="captionRow" Property="Height" Value="*" />
                            <Setter TargetName="contentRow" Property="Height" Value="0" />
                        </MultiDataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
	<!-- ========== RootMenuStyle ========== -->
	<!-- Style for the root level menu containing a single menu item in the PaneHeaderPresenter and document TabGroupPane -->
	<Style x:Key="RootMenuStyle" TargetType="{x:Type Menu}">
		<Setter Property="Background" Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igDock:XamDockManager}, ResourceId=TransparentBrush}}" />
		<Setter Property="VerticalAlignment" Value="Center" />
		<Setter Property="ItemsPanel">
			<Setter.Value>
				<ItemsPanelTemplate>
					<igWindows:CardPanel />
				</ItemsPanelTemplate>
			</Setter.Value>
		</Setter>
	</Style>


    <!--  ================================  -->
    <!--  PaneHeaderPresenter  -->
    <!--  ================================  -->
    <Style TargetType="{x:Type igDock:PaneHeaderPresenter}">
        <Setter Property="TextBlock.TextTrimming" Value="CharacterEllipsis" />
        <Setter Property="Foreground" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.PaneHeaderNotActiveTextFillKey}}" />
        <Setter Property="Background" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.PaneNotActiveCaptionFillKey}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type igDock:PaneHeaderPresenter}">
                    <Grid>
                        <Border Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                SnapsToDevicePixels="True">
                            <DockPanel Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                <Button x:Name="closeBtn"
                                        VerticalAlignment="Center"
                                        Command="{x:Static igDock:ContentPaneCommands.Close}"
                                        CommandParameter="{TemplateBinding Pane}"
                                        DockPanel.Dock="Right"
                                        Style="{DynamicResource {x:Static igDock:PaneHeaderPresenter.CloseButtonStyleKey}}"
                                        Visibility="{Binding Pane.CloseButtonVisibility, RelativeSource={RelativeSource TemplatedParent}}" />
                                <Button x:Name="unpinBtn"
                                        VerticalAlignment="Center"
                                        Command="{x:Static igDock:ContentPaneCommands.TogglePinnedState}"
                                        CommandParameter="{TemplateBinding Pane}"
                                        DockPanel.Dock="Right"
                                        Style="{DynamicResource {x:Static igDock:PaneHeaderPresenter.PinButtonStyleKey}}"
                                        Visibility="{Binding Pane.PinButtonVisibility, RelativeSource={RelativeSource TemplatedParent}}" />
                                <Button x:Name="maxBtn"
                                        VerticalAlignment="Center"
                                        Command="{x:Static igDock:PaneToolWindow.MaximizeCommand}"
                                        CommandTarget="{Binding Path=(igDock:PaneToolWindow.ToolWindow), RelativeSource={RelativeSource Self}}"
                                        DockPanel.Dock="Right"
                                        Style="{DynamicResource {x:Static igDock:PaneHeaderPresenter.MaximizeButtonStyleKey}}"
                                        Visibility="Collapsed" />
                                <Button x:Name="minBtn"
                                        VerticalAlignment="Center"
                                        Command="{x:Static igDock:PaneToolWindow.MinimizeCommand}"
                                        CommandTarget="{Binding Path=(igDock:PaneToolWindow.ToolWindow), RelativeSource={RelativeSource Self}}"
                                        DockPanel.Dock="Right"
                                        Style="{DynamicResource {x:Static igDock:PaneHeaderPresenter.MinimizeButtonStyleKey}}"
                                        Visibility="Collapsed" />
                                <Menu x:Name="positionMenu"
                                      VerticalAlignment="Center"
                                      DockPanel.Dock="Right"
                                      Style="{StaticResource RootMenuStyle}"
                                      Visibility="{Binding Pane.WindowPositionMenuVisibility, RelativeSource={RelativeSource TemplatedParent}}">
                                    <MenuItem x:Name="PART_PositionMenuItem" Style="{DynamicResource {x:Static igDock:PaneHeaderPresenter.PositionMenuItemStyleKey}}" />
                                </Menu>
                                <ContentControl x:Name="contentControl"
                                                Margin="2,0,8,2"
                                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                Foreground="{DynamicResource {x:Static igDock:DockManagerBrushKeys.PaneHeaderNotActiveTextFillKey}}">
                                    <ContentPresenter />
                                </ContentControl>
                            </DockPanel>
                        </Border>
                        <Border x:Name="innerBorderHighlight"
                                BorderBrush="{DynamicResource {x:Static igDock:DockManagerBrushKeys.PaneNotActiveCaptionInnerBorderFillKey}}"
                                BorderThickness="1,1,1,0" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding Pane.IsActivePane, RelativeSource={x:Static RelativeSource.Self}}" Value="True">
                            <Setter Property="Background" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.PaneActiveCaptionFillKey}}" />
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.PaneHeaderActiveTextFillKey}}" />
                            <Setter TargetName="contentControl" Property="Foreground" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.PaneHeaderActiveTextFillKey}}" />
                            <Setter TargetName="innerBorderHighlight" Property="BorderBrush" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.PaneActiveCaptionInnerBorderFillKey}}" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Pane.IsProvidingFloatingWindowCaption, RelativeSource={x:Static RelativeSource.Self}}" Value="True">
                            <Setter TargetName="maxBtn" Property="Visibility" Value="{Binding Path=(igDock:PaneToolWindow.ToolWindow).MaximizeButtonVisibility, RelativeSource={x:Static RelativeSource.Self}}" />
                            <Setter TargetName="minBtn" Property="Visibility" Value="{Binding Path=(igDock:PaneToolWindow.ToolWindow).MinimizeButtonVisibility, RelativeSource={x:Static RelativeSource.Self}}" />
                        </DataTrigger>
                        <Trigger Property="igDock:XamDockManager.PaneLocation" Value="FloatingOnly">
                            <Setter TargetName="unpinBtn" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="igDock:XamDockManager.PaneLocation" Value="Floating">
                            <Setter TargetName="unpinBtn" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Pane.IsProvidingFloatingWindowCaption, RelativeSource={x:Static RelativeSource.Self}}" Value="True" />
                                <Condition Binding="{Binding Path=(igDock:PaneToolWindow.ToolWindow).WindowState, RelativeSource={x:Static RelativeSource.Self}}" Value="Minimized" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="closeBtn" Property="VerticalAlignment" Value="Center" />
                            <Setter TargetName="unpinBtn" Property="VerticalAlignment" Value="Center" />
                            <Setter TargetName="maxBtn" Property="VerticalAlignment" Value="Center" />
                            <Setter TargetName="minBtn" Property="VerticalAlignment" Value="Center" />
                            <Setter TargetName="positionMenu" Property="VerticalAlignment" Value="Center" />
                            <Setter TargetName="positionMenu" Property="Visibility" Value="Collapsed" />
                        </MultiDataTrigger>
                        <DataTrigger Binding="{Binding Path=(igDock:PaneToolWindow.ToolWindow).WindowState, RelativeSource={x:Static RelativeSource.Self}}" Value="Minimized">
                            <Setter TargetName="minBtn" Property="Command" Value="{x:Static igDock:PaneToolWindow.RestoreCommand}" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Path=(igDock:PaneToolWindow.ToolWindow).WindowState, RelativeSource={x:Static RelativeSource.Self}}" Value="Maximized">
                            <Setter TargetName="maxBtn" Property="Command" Value="{x:Static igDock:PaneToolWindow.RestoreCommand}" />
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <!--  ========== DocumentTabItemTemplateKey ==========  -->
    <ControlTemplate x:Key="{x:Static igDock:PaneTabItem.DocumentTabItemTemplateKey}" TargetType="{x:Type igDock:PaneTabItem}">
        <Border x:Name="Background" MinHeight="24">
            <Grid x:Name="TabbedDocumentTab"
                  HorizontalAlignment="Stretch"
                  VerticalAlignment="Stretch">
                <!--<Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>-->
                <Border x:Name="Border"
                        VerticalAlignment="Stretch"
                        Background="{TemplateBinding Background}" />
                <Rectangle x:Name="activebrFiller"
                           Width="1"
                           Height="1"
                           HorizontalAlignment="Right"
                           VerticalAlignment="Bottom"
                           Fill="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igDock:XamDockManager}, ResourceId=TransparentBrush}}"
                           Visibility="Collapsed" />

                <Border x:Name="Content"
                        Padding="{TemplateBinding Padding}"
                        BorderThickness="{StaticResource TabBorderThickness}"
                        BorderBrush="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedDocumentNotActiveOuterBorderFillKey}}"
                        Margin="0 0 0 -1"
                        Background="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igDock:XamDockManager}, ResourceId=TransparentBrush}}">
                    <DockPanel x:Name="ContentDock" VerticalAlignment="Center">
                        <igWindows:AutoDisabledImage Margin="0,0,5,0"
                                                     DockPanel.Dock="Left"
                                                     Source="{Binding Pane.Image, RelativeSource={x:Static RelativeSource.TemplatedParent}}"
                                                     Stretch="None"
                                                     Visibility="{Binding Pane.HasImage, Converter={StaticResource BoolToVisConverter}, RelativeSource={x:Static RelativeSource.TemplatedParent}}" />
                        <Grid x:Name="gdContent"
                              HorizontalAlignment="Stretch"
                              VerticalAlignment="Stretch">
                            <ContentPresenter x:Name="NormalContent"
                                              Margin="4 2"
                                              HorizontalAlignment="Center"
                                              VerticalAlignment="Center"
                                              igWindows:ClippedTextToolTipService.AncestorTypeForToolTip="{x:Type ContentControl}"
                                              igWindows:ClippedTextToolTipService.ShowToolTipWhenClipped="True"
                                              igWindows:ClippedTextToolTipService.ToolTipStyleKey="{x:Static igDock:XamDockManager.ToolTipStyleKey}"
                                              ContentSource="Header"
                                              RecognizesAccessKey="true"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                              TextBlock.Foreground="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedListNotActiveTextFillKey}}" />
                            <!--<ContentPresenter x:Name="NormalContentBold"
                                              Margin="6,4"
                                              HorizontalAlignment="Center"
                                              VerticalAlignment="Center"
                                              igWindows:ClippedTextToolTipService.AncestorTypeForToolTip="{x:Type ContentControl}"
                                              igWindows:ClippedTextToolTipService.ShowToolTipWhenClipped="True"
                                              igWindows:ClippedTextToolTipService.ToolTipStyleKey="{x:Static igDock:XamDockManager.ToolTipStyleKey}"
                                              ContentSource="Header"
                                              RecognizesAccessKey="true"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                              TextBlock.Foreground="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igDock:XamDockManager}, ResourceId=HighlightedForegroundBrush}}"
                                              Visibility="Hidden" />-->
                        </Grid>
                    </DockPanel>
                </Border>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>

            <Trigger Property="IsEnabled" Value="false">
                <Setter TargetName="gdContent" Property="Opacity" Value="0.3" />
            </Trigger>

            <Trigger Property="IsMouseOverTab" Value="true">
                <!--<Setter TargetName="gdContent" Property="Opacity" Value="1" />-->
                <Setter TargetName="Content" Property="BorderBrush" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedDocumentHottrackOuterBorderFillKey}}" />
                 <Setter TargetName="NormalContent" Property="TextBlock.Foreground" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedDocumentHottrackTextFillKey}}" />
            </Trigger>

            <Trigger Property="IsSelected" Value="true">             
                <!--<Setter TargetName="activebrFiller" Property="Visibility" Value="Visible" />
                <Setter TargetName="gdContent" Property="Opacity" Value="1" />-->
                 <!--<Setter TargetName="NormalContent" Property="Opacity" Value="0.7" />-->
                <Setter Property="Panel.ZIndex" Value="1" />
                <Setter TargetName="NormalContent" Property="TextBlock.Foreground" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedDocumentGlyphHottrackFillKey}}" />
                <Setter TargetName="Content" Property="BorderBrush" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedDocumentActiveOuterBorderFillKey}}" />
            </Trigger>
            
                 <!--<MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsSelected" Value="True" />
                    <Condition Property="IsMouseOverTab" Value="True" />
                </MultiTrigger.Conditions>
                            <Setter TargetName="NormalContent" Property="TextBlock.Foreground" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedDocumentGlyphHottrackFillKey}}" />
                     <Setter TargetName="Content" Property="BorderBrush" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedDocumentActiveOuterBorderFillKey}}" />
            </MultiTrigger>-->
   
            <DataTrigger Binding="{Binding Pane.IsActiveDocument, RelativeSource={x:Static RelativeSource.Self}}" Value="True">
                <!--<Setter TargetName="NormalContent" Property="Visibility" Value="Hidden" />
                <Setter TargetName="NormalContentBold" Property="Visibility" Value="Visible" />-->
                <Setter TargetName="NormalContent" Property="TextBlock.Foreground" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedDocumentGlyphHottrackFillKey}}" />
                <Setter TargetName="Content" Property="BorderBrush" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedDocumentActiveOuterBorderFillKey}}" />
            </DataTrigger>

            <!--  ========== TAB PLACEMENT : BOTTOM ==========  -->
            <Trigger Property="TabStripPlacement" Value="Bottom">
                <Setter Property="LayoutTransform">
                    <Setter.Value>
                        <ScaleTransform ScaleY="-1" />
                    </Setter.Value>
                </Setter>
                <Setter TargetName="ContentDock" Property="LayoutTransform">
                    <Setter.Value>
                        <ScaleTransform ScaleY="-1" />
                    </Setter.Value>
                </Setter>
            </Trigger>

            <!--  ========== TAB PLACEMENT : LEFT ==========  -->
            <Trigger Property="TabStripPlacement" Value="Left">
                <Setter Property="LayoutTransform">
                    <Setter.Value>
                        <RotateTransform Angle="-90" />
                    </Setter.Value>
                </Setter>
            </Trigger>

            <!--  ========== TAB PLACEMENT : RIGHT ==========  -->
            <Trigger Property="TabStripPlacement" Value="Right">
                <Setter Property="LayoutTransform">
                    <Setter.Value>
                        <RotateTransform Angle="90" />
                    </Setter.Value>
                </Setter>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!--  ========== DocumentTabGroupTemplate ==========  -->
    <ControlTemplate x:Key="{x:Static igDock:TabGroupPane.DocumentTabGroupTemplateKey}" TargetType="{x:Type igDock:TabGroupPane}">   
        <DockPanel ClipToBounds="True"
                   KeyboardNavigation.TabNavigation="Local"
                   SnapsToDevicePixels="True"
                   Background="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedDocumentNotActiveCenterFillKey}}">
            <DockPanel  DockPanel.Dock="{TemplateBinding TabStripPlacement}" >
                <DockPanel x:Name="PART_HeaderArea" Panel.ZIndex="1"/>
                <Rectangle Fill="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedDocumentNotActiveOuterBorderFillKey}}" 
                           Height="2" 
                           HorizontalAlignment="Stretch" 
                           DockPanel.Dock="Bottom" 
                           Margin="0 -1 0 0"/>
            <DockPanel>
                    <Button x:Name="closeBtn"
                            VerticalAlignment="Center"
                            Command="{x:Static igDock:TabGroupPane.CloseSelectedItemCommand}"
                            DockPanel.Dock="Right"
                            Style="{DynamicResource {x:Static igDock:PaneHeaderPresenter.CloseButtonStyleKey}}" /> 
                <Menu x:Name="filesMenu" 
                      DockPanel.Dock="Right" 
                      Style="{StaticResource RootMenuStyle}">
						<MenuItem x:Name="PART_FilesMenuItem"
                                  Style="{DynamicResource {x:Static igDock:TabGroupPane.DocumentFilesMenuItemStyleKey}}" />
					</Menu>
                    <!--<Menu x:Name="filesMenu"
                          VerticalAlignment="Center"
                          DockPanel.Dock="Right"
                          Style="{StaticResource RootMenuStyle}">
                        <MenuItem x:Name="PART_FilesMenuItem" 
                                  Style="{DynamicResource {x:Static igDock:PaneHeaderPresenter.PositionMenuItemStyleKey}}" />
                    </Menu>-->                              
                    <Button x:Name="showNavigatorButton"
                            Command="{x:Static igDock:DockManagerCommands.ShowPaneNavigator}"
                            CommandParameter="{TemplateBinding igDock:XamDockManager.DockManager}"
                            DockPanel.Dock="Right"
                            Style="{DynamicResource {x:Static igDock:TabGroupPane.DocumentPaneNavigatorButtonStyleKey}}"
                            Visibility="Collapsed" />                                    
                     <ItemsPresenter x:Name="PART_TabHeaderPanel"
                                    Margin="0,3,0,0"
                                    KeyboardNavigation.TabIndex="1" />                   
                </DockPanel>                      
            </DockPanel>
                           
            <Border x:Name="ContentPanel"
                    Background="{TemplateBinding Background}"
                    KeyboardNavigation.DirectionalNavigation="Contained"
                    KeyboardNavigation.TabIndex="2"
                    KeyboardNavigation.TabNavigation="Local"
                    SnapsToDevicePixels="True"
                    Visibility="Visible">
                <!--<Border x:Name="InnerBorder"
                        BorderBrush="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedPaneInnerBorderFillKey}}"
                        BorderThickness="0"
                        CornerRadius="0"
                        SnapsToDevicePixels="True">
                    <Border x:Name="ThickInnerBorder"
                            BorderBrush="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedPaneCenterFillKey}}"
                            BorderThickness="2"
                            SnapsToDevicePixels="True">
                        <Border x:Name="InnerMostBorder"
                                Background="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedPaneCenterFillKey}}"
                                BorderBrush="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedPaneOuterBorderFillKey}}"
                                BorderThickness="0"
                                SnapsToDevicePixels="True">-->
                            <ContentPresenter x:Name="PART_SelectedContentHost"
                                              Content="{TemplateBinding SelectedContent}"
                                              ContentSource="SelectedContent"
                                              ContentTemplate="{TemplateBinding SelectedContentTemplate}"
                                              ContentTemplateSelector="{TemplateBinding SelectedContentTemplateSelector}"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                <ContentPresenter.Resources>
                                    <Style TargetType="{x:Type TextBlock}">
                                        <Setter Property="Padding" Value="{StaticResource ContentPadding}"/> 
                                    </Style>
                                </ContentPresenter.Resources>
                            </ContentPresenter>
                        <!--</Border>
                    </Border>
                </Border>-->
            </Border>
        </DockPanel>
        <ControlTemplate.Triggers>

            <Trigger Property="igDock:XamDockManager.PaneLocation" Value="Document">
                <Setter Property="Padding" Value="2" />
                <Setter Property="TabStripPlacement" Value="Top" />
            </Trigger>
            <Trigger Property="TabStripPlacement" Value="Bottom">
                <Setter TargetName="PART_TabHeaderPanel" Property="Margin" Value="0" />
            </Trigger>
            <Trigger Property="TabStripPlacement" Value="Left">
                <Setter TargetName="PART_TabHeaderPanel" Property="Margin" Value="0" />
                <Setter TargetName="closeBtn" Property="DockPanel.Dock" Value="Bottom" />
                <Setter TargetName="filesMenu" Property="DockPanel.Dock" Value="Bottom" />
                <Setter TargetName="showNavigatorButton" Property="DockPanel.Dock" Value="Bottom" />
            </Trigger>
            <Trigger Property="TabStripPlacement" Value="Right">
                <Setter TargetName="PART_TabHeaderPanel" Property="Margin" Value="0" />
                <Setter TargetName="closeBtn" Property="DockPanel.Dock" Value="Bottom" />
                <Setter TargetName="filesMenu" Property="DockPanel.Dock" Value="Bottom" />
                <Setter TargetName="showNavigatorButton" Property="DockPanel.Dock" Value="Bottom" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="TextElement.Foreground" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.GrayTextBrushKey}}" />
            </Trigger>

            <!--  PaneNavigatorButtonDisplayMode  -->
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Source={x:Static interop:BrowserInteropHelper.IsBrowserHosted}}" Value="True" />
                    <Condition Binding="{Binding Path=(igDock:XamDockManager.DockManager).PaneNavigatorButtonDisplayMode, RelativeSource={x:Static RelativeSource.Self}}" Value="WhenHostedInBrowser" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="showNavigatorButton" Property="Visibility" Value="Visible" />
            </MultiDataTrigger>
            <DataTrigger Binding="{Binding Path=(igDock:XamDockManager.DockManager).PaneNavigatorButtonDisplayMode, RelativeSource={x:Static RelativeSource.Self}}" Value="Always">
                <Setter TargetName="showNavigatorButton" Property="Visibility" Value="Visible" />
            </DataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!--  ================================  -->
    <!--  UnpinnedTabFlyout  -->
    <!--  ================================  -->
    <Style TargetType="{x:Type igDock:UnpinnedTabFlyout}">
        <Setter Property="Background" Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igDock:XamDockManager}, ResourceId=PaneSplitterBackground}}" />
        <Setter Property="BorderBrush" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedDocumentNotActiveOuterBorderFillKey}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type igDock:UnpinnedTabFlyout}">
                    <Border x:Name="border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Padding="{TemplateBinding Padding}"
                            SnapsToDevicePixels="True">
                        <Grid SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                            <Border x:Name="HighlightStroke" SnapsToDevicePixels="true" />
                            <DockPanel>
                                <igDock:UnpinnedTabFlyoutSplitter x:Name="splitter"
                                                                  MinWidth="4"
                                                                  MinHeight="4"
                                                                  Background="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igDock:XamDockManager}, ResourceId=PaneSplitterBackground}}"
                                                                   />
                                <ContentPresenter x:Name="Content"
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                  Content="{TemplateBinding Pane}" />
                            </DockPanel>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <!--  Splitter Positions  -->
                        <!--  Splitters for Panes unpinned to LEFT & TOP are styled similarly, only different orientations  -->

                        <Trigger Property="Side" Value="Left">
                            <Setter TargetName="splitter" Property="DockPanel.Dock" Value="Right" />
                            <Setter TargetName="splitter" Property="Orientation" Value="Vertical" />
                            <!--<Setter TargetName="splitter" Property="Margin" Value="0" />-->
                            <!--<Setter Property="BorderThickness" Value="0,0,1,0" />-->
                            <!--<Setter TargetName="HighlightStroke" Property="Width" Value="1" />
                            <Setter TargetName="HighlightStroke" Property="HorizontalAlignment" Value="Right" />-->
                        </Trigger>

                        <!--  Pane Unpinned to Top  -->
                        <Trigger Property="Side" Value="Top">
                            <Setter TargetName="splitter" Property="DockPanel.Dock" Value="Bottom" />
                            <Setter TargetName="splitter" Property="Orientation" Value="Horizontal" />
                            <!--<Setter Property="BorderThickness" Value="0,0,0,1" />-->
                            <!--<Setter TargetName="HighlightStroke" Property="Height" Value="1" />
                            <Setter TargetName="HighlightStroke" Property="VerticalAlignment" Value="Bottom" />-->
                        </Trigger>

                        <!--  Splitters for Panes unpinned to RIGHT & BOTTOM are styled similarly, only different orientations  -->
                        <!--  Pane Unpinned to Right  -->
                        <Trigger Property="Side" Value="Right">
                            <Setter TargetName="splitter" Property="DockPanel.Dock" Value="Left" />
                            <Setter TargetName="splitter" Property="Orientation" Value="Vertical" />
                            <!--<Setter TargetName="HighlightStroke" Property="Width" Value="1" />
                            <Setter TargetName="HighlightStroke" Property="Margin" Value="1,0,0,0" />-->
                            <!--<Setter TargetName="HighlightStroke" Property="Background" Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igDock:XamDockManager}, ResourceId=PaneSplitterBackground}}" />
                            <Setter TargetName="HighlightStroke" Property="HorizontalAlignment" Value="Left" />-->
                        </Trigger>

                        <!--  Pane Unpinned to Bottom  -->
                        <Trigger Property="Side" Value="Bottom">
                            <Setter TargetName="splitter" Property="DockPanel.Dock" Value="Top" />
                            <Setter TargetName="splitter" Property="Orientation" Value="Horizontal" />
                            <!--<Setter TargetName="HighlightStroke" Property="Height" Value="1" />
                            <Setter TargetName="HighlightStroke" Property="Margin" Value="0,1,0,0" />-->
                            <!--<Setter TargetName="HighlightStroke" Property="Background" Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igDock:XamDockManager}, ResourceId=PaneSplitterBackground}}" />
                            <Setter TargetName="HighlightStroke" Property="VerticalAlignment" Value="Top" />-->
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="XamPagerButtonStyle" TargetType="{x:Type RepeatButton}">
        <Setter Property="Focusable" Value="False" />
        <Setter Property="MinHeight" Value="24" />
        <Setter Property="MinWidth" Value="24" />
        <Setter Property="Background" Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igDock:XamDockManager}, ResourceId=TransparentBrush}}" />
        <Setter Property="Foreground" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedDocumentGlyphFillKey}}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="BorderBrush" Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igDock:XamDockManager}, ResourceId=TransparentBrush}}" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="3" />
        <!--<Setter Property="Opacity" Value="0.7" />-->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <Path Margin="{TemplateBinding Padding}"
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                              Data="{Binding Content, RelativeSource={RelativeSource TemplatedParent}}"
                              Fill="{TemplateBinding Foreground}"
                              Opacity="{TemplateBinding Opacity}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                 <Setter Property="Foreground" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedDocumentGlyphHottrackFillKey}}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
               <Setter Property="Foreground" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedDocumentGlyphHottrackFillKey}}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="XamPagerStyle" TargetType="{x:Type igWindows:XamPager}">
        <Setter Property="Background" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedDocumentNotActiveCenterFillKey}}" />
        <Setter Property="ScrollLeftButtonStyle">
            <Setter.Value>
                <Style BasedOn="{StaticResource XamPagerButtonStyle}" TargetType="{x:Type RepeatButton}">
                    <Setter Property="Content" Value="{StaticResource VArrowLeft}" />
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="ScrollRightButtonStyle">
            <Setter.Value>
                <Style BasedOn="{StaticResource XamPagerButtonStyle}" TargetType="{x:Type RepeatButton}">
                    <Setter Property="Content" Value="{StaticResource VArrowRight}" />
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="ScrollUpButtonStyle">
            <Setter.Value>
                <Style BasedOn="{StaticResource XamPagerButtonStyle}" TargetType="{x:Type RepeatButton}">
                    <Setter Property="Content" Value="{StaticResource VArrowTop}" />
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="ScrollDownButtonStyle">
            <Setter.Value>
                <Style BasedOn="{StaticResource XamPagerButtonStyle}" TargetType="{x:Type RepeatButton}">
                    <Setter Property="Content" Value="{StaticResource VArrowDown}" />
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type igWindows:XamPager}">
                    <Grid Background="{TemplateBinding Background}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition x:Name="gridCol0" Width="Auto" />
                            <ColumnDefinition x:Name="gridCol1" Width="*" />
                            <ColumnDefinition x:Name="gridCol2" Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition x:Name="gridRow0" Height="Auto" />
                            <RowDefinition x:Name="gridRow1" Height="*" />
                            <RowDefinition x:Name="gridRow2" Height="Auto" />
                        </Grid.RowDefinitions>
                        <RepeatButton x:Name="PART_ScrollLeft"
                                      Grid.Row="1"
                                      Grid.Column="0"
                                      Panel.ZIndex="1"
                                      Command="ScrollBar.LineLeftCommand"
                                      CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                                      Style="{TemplateBinding ScrollLeftButtonStyle}"
                                      Visibility="{TemplateBinding ScrollLeftVisibility}" />
                        <RepeatButton x:Name="PART_ScrollUp"
                                      Grid.Row="0"
                                      Grid.Column="1"
                                      Panel.ZIndex="1"
                                      Command="ScrollBar.LineUpCommand"
                                      CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                                      Style="{TemplateBinding ScrollUpButtonStyle}"
                                      Visibility="{TemplateBinding ScrollUpVisibility}" />
                        <RepeatButton x:Name="PART_ScrollRight"
                                      Grid.Row="1"
                                      Grid.Column="2"
                                      Panel.ZIndex="1"
                                      Command="ScrollBar.LineRightCommand"
                                      CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                                      Style="{TemplateBinding ScrollRightButtonStyle}"
                                      Visibility="{TemplateBinding ScrollRightVisibility}" />
                        <RepeatButton x:Name="PART_ScrollDown"
                                      Grid.Row="2"
                                      Grid.Column="1"
                                      Panel.ZIndex="1"
                                      Command="ScrollBar.LineDownCommand"
                                      CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                                      Style="{TemplateBinding ScrollDownButtonStyle}"
                                      Visibility="{TemplateBinding ScrollDownVisibility}" />
                        <igWindows:PagerContentPresenter x:Name="PART_PagerContentPresenter"
                                                         Grid.Row="0"
                                                         Grid.RowSpan="3"
                                                         Grid.Column="0"
                                                         Grid.ColumnSpan="3"
                                                         Margin="{TemplateBinding Padding}"
                                                         Panel.ZIndex="0"
                                                         CanContentScroll="{TemplateBinding CanContentScroll}"
                                                         CanHorizontallyScroll="False"
                                                         CanVerticallyScroll="False"
                                                         Content="{TemplateBinding Content}"
                                                         ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                                         ContentTemplate="{TemplateBinding ContentTemplate}"
                                                         ScrollOwner="{x:Null}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HorizontalScrollBarVisibility" Value="Visible">
                            <Setter TargetName="PART_PagerContentPresenter" Property="Grid.Column" Value="1" />
                            <Setter TargetName="PART_PagerContentPresenter" Property="Grid.ColumnSpan" Value="1" />
                        </Trigger>
                        <Trigger Property="VerticalScrollBarVisibility" Value="Visible">
                            <Setter TargetName="PART_PagerContentPresenter" Property="Grid.Row" Value="1" />
                            <Setter TargetName="PART_PagerContentPresenter" Property="Grid.RowSpan" Value="1" />
                        </Trigger>
                        <Trigger Property="ComputedVerticalScrollBarVisibility" Value="Collapsed">
                            <Setter TargetName="gridRow0" Property="Height" Value="0" />
                            <Setter TargetName="gridRow2" Property="Height" Value="0" />
                            <Setter TargetName="PART_PagerContentPresenter" Property="Grid.Row" Value="1" />
                            <Setter TargetName="PART_PagerContentPresenter" Property="Grid.RowSpan" Value="1" />
                        </Trigger>
                        <Trigger Property="ComputedHorizontalScrollBarVisibility" Value="Collapsed">
                            <Setter TargetName="gridCol0" Property="Width" Value="0" />
                            <Setter TargetName="gridCol2" Property="Width" Value="0" />
                            <Setter TargetName="PART_PagerContentPresenter" Property="Grid.Row" Value="1" />
                            <Setter TargetName="PART_PagerContentPresenter" Property="Grid.RowSpan" Value="1" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.BasedOn>
            <Style TargetType="{x:Type ScrollViewer}">
                <Style.Triggers>
                    <Trigger Property="IsEnabled" Value="False">
                           <Setter Property="Opacity" Value="0.3" />
                        <!--<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />-->
                    </Trigger>
                </Style.Triggers>
            </Style>
        </Style.BasedOn>
    </Style>

    <!--  ================================  -->
    <!--  UnpinnedTabArea  -->
    <!--  ================================  -->
    <Style TargetType="{x:Type igDock:UnpinnedTabArea}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type igDock:UnpinnedTabArea}">
                    <Border x:Name="unpinnedBorder"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <igWindows:XamPager x:Name="TabItemScrollViewer"
                                            Focusable="False"
                                            Style="{StaticResource XamPagerStyle}">
                            <ItemsPresenter x:Name="PART_TabHeaderPanel" />
                        </igWindows:XamPager>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="TabStripPlacement" Value="Top">
                            <Setter Property="Margin" Value="0,0,0,0" />
                            <Setter TargetName="PART_TabHeaderPanel" Property="Margin" Value="0,-2,0,0" />
                            <Setter TargetName="TabItemScrollViewer" Property="ScrollViewer.VerticalScrollBarVisibility" Value="Disabled" />
                            <Setter TargetName="TabItemScrollViewer" Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
                            <Setter TargetName="unpinnedBorder" Property="BorderThickness" Value="0 2 0 0" />
                            <Setter TargetName="unpinnedBorder" Property="BorderBrush" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedDocumentNotActiveOuterBorderFillKey}}" />
                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Bottom">
                            <Setter Property="Margin" Value="0,0,0,0" />
                            <Setter TargetName="PART_TabHeaderPanel" Property="Margin" Value="0,0,0,-2" />
                            <Setter TargetName="TabItemScrollViewer" Property="ScrollViewer.VerticalScrollBarVisibility" Value="Disabled" />
                            <Setter TargetName="TabItemScrollViewer" Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
                            <Setter TargetName="unpinnedBorder" Property="BorderThickness" Value="0 0 0 2" />
                            <Setter TargetName="unpinnedBorder" Property="BorderBrush" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedDocumentNotActiveOuterBorderFillKey}}" />
                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Left">
                            <Setter Property="Margin" Value="0,0,0,0" />
                            <Setter TargetName="PART_TabHeaderPanel" Property="Margin" Value="-2,0,0,0" />
                            <Setter TargetName="TabItemScrollViewer" Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
                            <Setter TargetName="TabItemScrollViewer" Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled" />
                            <Setter TargetName="unpinnedBorder" Property="BorderThickness" Value="2 0 0 0" />
                            <Setter TargetName="unpinnedBorder" Property="BorderBrush" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedDocumentNotActiveOuterBorderFillKey}}" />
                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Right">
                            <Setter Property="Margin" Value="0,0,0,0" />
                            <Setter TargetName="PART_TabHeaderPanel" Property="Margin" Value="0,0,-2,0" />
                            <Setter TargetName="TabItemScrollViewer" Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
                            <Setter TargetName="TabItemScrollViewer" Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled" />
                             <Setter TargetName="unpinnedBorder" Property="BorderThickness" Value="0 0 2 0" />
                            <Setter TargetName="unpinnedBorder" Property="BorderBrush" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedDocumentNotActiveOuterBorderFillKey}}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="TextElement.Foreground" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.GrayTextBrushKey}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  ========== NoTabItemAreaTabGroupTemplate ==========  -->
    <ControlTemplate x:Key="NoTabItemAreaTabGroupTemplate" TargetType="{x:Type igDock:TabGroupPane}">
        <Grid>
            <!--  We need the itemspresenter to generate the elements  -->
            <ItemsPresenter MaxWidth="1"
                            MaxHeight="1"
                            Visibility="Hidden" />
            <ContentPresenter x:Name="PART_SelectedContentHost"
                              Content="{TemplateBinding SelectedContent}"
                              ContentSource="SelectedContent"
                              ContentTemplate="{TemplateBinding SelectedContentTemplate}"
                              ContentTemplateSelector="{TemplateBinding SelectedContentTemplateSelector}"
                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
        </Grid>
    </ControlTemplate>

    <!--  ================================  -->
    <!--  TabGroupPane  -->
    <!--  ================================  -->
    <Style TargetType="{x:Type igDock:TabGroupPane}">
        <Setter Property="TabStripPlacement" Value="Bottom" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="FontSize" Value="{StaticResource FontSize}" />
        <Setter Property="FontFamily" Value="{StaticResource FontFamily}" />
        <Setter Property="Foreground" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.PaneHeaderNotActiveTextFillKey}}" />
        <Setter Property="igWindows:TabItemPanel.TabLayoutStyle" Value="SingleRowJustified" />
        <Setter Property="BorderBrush" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.ContentPaneBorderFillKey}}" />
        <Setter Property="BorderThickness" Value="{StaticResource DefaultBorderThickness}" />
        <Setter Property="Background" Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igDock:XamDockManager}, ResourceId=ContentPaneCenterFillKey}}" />
        <Setter Property="Template" Value="{DynamicResource {x:Static igDock:TabGroupPane.DockableTabGroupTemplateKey}}" />
        <Style.Triggers>
            <Trigger Property="igDock:XamDockManager.PaneLocation" Value="Document">
                <Setter Property="Template" Value="{DynamicResource {x:Static igDock:TabGroupPane.DocumentTabGroupTemplateKey}}" />
                <Setter Property="Background" Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igDock:XamDockManager}, ResourceId=ContentPaneCenterFillKey}}" />
                <Setter Property="BorderBrush" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.ContentPaneBorderFillKey}}" />
                <Setter Property="BorderThickness" Value="{StaticResource DefaultBorderThickness}" />
                <Setter Property="ItemsPanel">
                    <Setter.Value>
                        <ItemsPanelTemplate>
                            <igDock:DocumentTabPanel Background="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igDock:XamDockManager}, ResourceId=TransparentBrush}}" TabStripPlacement="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type igDock:TabGroupPane}}}" />
                        </ItemsPanelTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="IsTabItemAreaVisible" Value="False">
                <Setter Property="Template" Value="{StaticResource NoTabItemAreaTabGroupTemplate}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--  ================================  -->
    <!--  XamDockManager  -->
    <!--  ================================  -->
    <Style TargetType="{x:Type igDock:XamDockManager}">
        <Setter Property="Background" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.XamDockManagerBackgroundFillKey}}" />
        <Setter Property="FontSize" Value="{StaticResource FontSize}" />
        <Setter Property="FontFamily" Value="{StaticResource FontFamily}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type igDock:XamDockManager}">
                    <AdornerDecorator>
                        <Border Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}">
                            <DockPanel Margin="{TemplateBinding Padding}" LastChildFill="True">
                                <!--  Top Unpinned Tab Area  -->
                                <DockPanel Panel.ZIndex="1"
                                           DockPanel.Dock="Top"
                                           LastChildFill="True">
                                    <FrameworkElement Width="{Binding ActualWidth, ElementName=PART_UnpinnedTabAreaLeft}"
                                                      Height="0"
                                                      DockPanel.Dock="Left"
                                                      Visibility="Hidden" />
                                    <FrameworkElement Width="{Binding ActualWidth, ElementName=PART_UnpinnedTabAreaRight}"
                                                      Height="0"
                                                      DockPanel.Dock="Right"
                                                      Visibility="Hidden" />
                                    <igDock:UnpinnedTabArea x:Name="PART_UnpinnedTabAreaTop" TabStripPlacement="Bottom" />
                                </DockPanel>

                                <!--  Bottom Unpinned Tab Area  -->
                                <DockPanel Panel.ZIndex="1"
                                           DockPanel.Dock="Bottom"
                                           LastChildFill="True">
                                    <FrameworkElement Width="{Binding ActualWidth, ElementName=PART_UnpinnedTabAreaLeft}"
                                                      Height="0"
                                                      DockPanel.Dock="Left"
                                                      Visibility="Hidden" />
                                    <FrameworkElement Width="{Binding ActualWidth, ElementName=PART_UnpinnedTabAreaRight}"
                                                      Height="0"
                                                      DockPanel.Dock="Right"
                                                      Visibility="Hidden" />
                                    <igDock:UnpinnedTabArea x:Name="PART_UnpinnedTabAreaBottom" TabStripPlacement="Top" />
                                </DockPanel>

                                <!--  Left Unpinned Tab Area  -->
                                <igDock:UnpinnedTabArea x:Name="PART_UnpinnedTabAreaLeft"
                                                        Panel.ZIndex="1"
                                                        DockPanel.Dock="Left"
                                                        TabStripPlacement="Right" />

                                <!--  Right Unpinned Tab Area  -->
                                <igDock:UnpinnedTabArea x:Name="PART_UnpinnedTabAreaRight"
                                                        Panel.ZIndex="1"
                                                        DockPanel.Dock="Right"
                                                        TabStripPlacement="Left" />

                                <!--  Root Panes container  -->
                                <igDock:DockManagerPanel x:Name="PART_Panel" Panel.ZIndex="0">
                                    <ContentPresenter x:Name="cp" />
                                </igDock:DockManagerPanel>
                            </DockPanel>
                        </Border>
                    </AdornerDecorator>
                    <ControlTemplate.Triggers>
                        <Trigger Property="FlyoutAnimation" Value="Slide">
                            <Setter TargetName="PART_Panel" Property="ClipToBounds" Value="True" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="HasContent" Value="False" />
                                <Condition Property="LayoutMode" Value="FillContainer" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="cp" Property="Visibility" Value="Collapsed" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  =====================================  -->
    <!--  DockedPaneSplitter  -->
    <!--  =====================================  -->
    <Style TargetType="{x:Type igDock:DockedPaneSplitter}">
        <Setter Property="MinWidth" Value="4" />
        <Setter Property="MinHeight" Value="4" />
        <Setter Property="Background" Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igDock:XamDockManager}, ResourceId=PaneSplitterBackground}}" />
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igDock:XamDockManager}, ResourceId=PaneSplitterHottrackBackground}}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--  =====================================  -->
    <!--  SplitPaneSplitter  -->
    <!--  =====================================  -->
    <Style TargetType="{x:Type igDock:SplitPaneSplitter}">
        <Setter Property="MinWidth" Value="4" />
        <Setter Property="MinHeight" Value="4" />
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Background" Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igDock:XamDockManager}, ResourceId=PaneSplitterBackground}}" />
          <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igDock:XamDockManager}, ResourceId=PaneSplitterHottrackBackground}}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--  ================================  -->
    <!--  PaneSplitter  -->
    <!--  ================================  -->
    <Style TargetType="{x:Type igDock:PaneSplitter}">
        <Setter Property="Margin" Value="1" />
        <Setter Property="Background" Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igDock:XamDockManager}, ResourceId=PaneSplitterBackground}}" />
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type igDock:PaneSplitter}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="True"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igDock:XamDockManager}, ResourceId=PaneSplitterHottrackBackground}}" />
            </Trigger>
            <Trigger Property="Orientation" Value="Vertical">
                <Setter Property="MinWidth" Value="4" />
                <Setter Property="Cursor" Value="{x:Static igDock:PaneSplitter.VerticalSplitterCursor}" />
            </Trigger>

            <Trigger Property="Orientation" Value="Horizontal">
                <Setter Property="MinHeight" Value="4" />
                <Setter Property="Cursor" Value="{x:Static igDock:PaneSplitter.HorizontalSplitterCursor}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--  ========== DockableTabGroupTemplate ==========  -->
    <ControlTemplate x:Key="{x:Static igDock:TabGroupPane.DockableTabGroupTemplateKey}" TargetType="{x:Type igDock:TabGroupPane}">
        <DockPanel Background="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igDock:XamDockManager}, ResourceId=DockableTabGroupTemplateBackground}}"
                   ClipToBounds="True"
                   KeyboardNavigation.TabNavigation="Local"
                   SnapsToDevicePixels="True">
            <DockPanel x:Name="PART_HeaderArea"
                       Panel.ZIndex="1"
                       DockPanel.Dock="{TemplateBinding TabStripPlacement}"
                       Background="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedDocumentNotActiveCenterFillKey}}">
                <igWindows:XamPager x:Name="PART_TabItemScrollViewer"
                                    CanContentScroll="True"
                                    ScrollViewer.HorizontalScrollBarVisibility="Auto"
                                    ScrollViewer.VerticalScrollBarVisibility="Disabled"
                                    Style="{StaticResource TabGroupXamPagerStyle}">
                    <ItemsPresenter x:Name="PART_TabHeaderPanel" KeyboardNavigation.TabIndex="1"/>
                </igWindows:XamPager>
            </DockPanel>
            <Border x:Name="ContentPanel"
                    KeyboardNavigation.DirectionalNavigation="Contained"
                    KeyboardNavigation.TabIndex="2"
                    KeyboardNavigation.TabNavigation="Local"
                    Padding="0"
                    SnapsToDevicePixels="true"
                    Visibility="Visible">
                <ContentPresenter x:Name="PART_SelectedContentHost"
                                  Content="{TemplateBinding SelectedContent}"
                                  ContentSource="SelectedContent"
                                  ContentTemplate="{TemplateBinding SelectedContentTemplate}"
                                  ContentTemplateSelector="{TemplateBinding SelectedContentTemplateSelector}"
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" >
                    <ContentPresenter.Resources>
                        <Style TargetType="{x:Type TextBlock}">
                            <Setter Property="Padding" Value="{StaticResource ContentPadding}"/>
                        </Style>
                    </ContentPresenter.Resources>
                </ContentPresenter>
            </Border>
        </DockPanel>
    </ControlTemplate>

    <!--  ================================  -->
    <!--  PaneNavigator  -->
    <!--  ================================  -->
    <Style TargetType="{x:Type igDock:PaneNavigator}">
        <Setter Property="Foreground" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.PaneNavigatorDarkTextFillKey}}" />
        <Setter Property="Background" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.PaneNavigatorCenterFillKey}}" />
        <Setter Property="BorderBrush" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.PaneNavigatorOuterBorderFillKey}}" />
        <Setter Property="FontSize" Value="{StaticResource FontSize}" />
        <Setter Property="FontFamily" Value="{StaticResource FontFamily}" />
        <Setter Property="BorderThickness" Value="{StaticResource DefaultBorderThickness}" />
        <Setter Property="MaxHeight" Value="322" />
        <Setter Property="SelectedPane" Value="{Binding Path=(FocusManager.FocusedElement).DataContext, Mode=OneWay, RelativeSource={x:Static RelativeSource.Self}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type igDock:PaneNavigator}">
                    <ControlTemplate.Resources>
                        <Style x:Key="itemStyle" TargetType="{x:Type ListBoxItem}">
                            <Style.Resources>
                                <!--
                                    There is a button in the listboxitem that we are using so that clicking on an item
                                    will activate that item and close the navigator as occurs in vs. This style is used
                                    for that button to provide a dummy visual appearance
                                -->
                                <Style TargetType="{x:Type Button}">
                                    <Setter Property="Focusable" Value="False" />
                                    <Setter Property="OverridesDefaultStyle" Value="True" />
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type Button}">
                                                <ContentPresenter />
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </Style.Resources>
                            <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.PaneNavigatorDarkTextFillKey}}" />
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                        <Grid MinHeight="24" Margin="0,0,0,1">
                                            <Button Command="{x:Static igDock:ContentPaneCommands.ActivatePane}">
                                                <igWindows:CardPanel Background="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igDock:XamDockManager}, ResourceId=TransparentBrush}}">
                                                 <Border x:Name="itemHottrack"
                                                         Background="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igDock:XamDockManager}, ResourceId=TransparentBrush}}"
                                                         BorderThickness="{StaticResource DefaultBorderThickness}"
                                                         CornerRadius="0"
                                                         Cursor="Hand"
                                                         SnapsToDevicePixels="True">
                                                        <DockPanel x:Name="pnl"
                                                                   Margin="1"
                                                                   SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                                            <Image MaxWidth="16"
                                                                   MaxHeight="16"
                                                                   Margin="0,0,6,0"
                                                                   VerticalAlignment="Center"
                                                                   DockPanel.Dock="Left"
                                                                   Source="{Binding Path=Content.Image, RelativeSource={x:Static RelativeSource.TemplatedParent}}" />
                                                            <ContentPresenter x:Name="contentItems"
                                                                              Margin="0,0,6,0"
                                                                              VerticalAlignment="Center"
                                                                              Content="{Binding Path=Content.Header, RelativeSource={x:Static RelativeSource.TemplatedParent}, Converter={StaticResource contentValidationConverter}}"
                                                                              ContentTemplate="{Binding Path=Content.HeaderTemplate, RelativeSource={x:Static RelativeSource.TemplatedParent}}"
                                                                              ContentTemplateSelector="{Binding Path=Content.HeaderTemplateSelector, RelativeSource={x:Static RelativeSource.TemplatedParent}}">
                                                                <ContentPresenter.Resources>
                                                                    <Style TargetType="TextBlock">
                                                                        <Setter Property="TextTrimming" Value="CharacterEllipsis" />
                                                                    </Style>
                                                                </ContentPresenter.Resources>
                                                            </ContentPresenter>
                                                        </DockPanel>
                                                    </Border>

                                                </igWindows:CardPanel>
                                            </Button>
                                        </Grid>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsMouseOver" Value="True">                                           
                                                <Setter TargetName="itemHottrack" Property="Background" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.PaneNavigatorItemHottrackCenterFillKey}}" />
                                                <Setter TargetName="contentItems" Property="TextElement.Foreground" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.PaneNavigatorDarkTextFillKey}}" />
                                            </Trigger>
                                            <Trigger Property="IsKeyboardFocusWithin" Value="True">
                                                <Setter TargetName="itemHottrack" Property="BorderBrush" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.MenuItemCheckmarkBoxHottrackCenterFillKey}}" />
                                               <Setter TargetName="itemHottrack" Property="Background" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.MenuItemCheckmarkBoxHottrackCenterFillKey}}" />
                                                <Setter TargetName="contentItems" Property="TextElement.Foreground" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.PaneNavigatorLightTextFillKey}}" />
                                            </Trigger>   
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </ControlTemplate.Resources>
                    <Border x:Name="border"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="0"
                            Padding="{TemplateBinding Padding}"
                            SnapsToDevicePixels="true">
                        <Grid SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="*" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <Rectangle Grid.RowSpan="3"
                                       Margin="-2"
                                       Stroke="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igDock:XamDockManager}, ResourceId=ForegroundBrush}}"
                                       StrokeThickness="{StaticResource DefaultStrokeThickness}" />
                            <!--  Row 0  -->
                            <Border x:Name="headerBackground"
                                    MinHeight="28"
                                    Background="{DynamicResource {x:Static igDock:DockManagerBrushKeys.PaneNavigatorHeaderFillKey}}"
                                    CornerRadius="0"
                                    SnapsToDevicePixels="true">
                                <Grid x:Name="header"
                                      Margin="3,0"
                                      VerticalAlignment="Center"
                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="Auto" />
                                    </Grid.RowDefinitions>
                                    <StackPanel Orientation="Horizontal">
                                        <Image MaxWidth="16"
                                               MaxHeight="16"
                                               VerticalAlignment="Center"
                                               Source="{Binding Path=SelectedPane.Image, RelativeSource={x:Static RelativeSource.TemplatedParent}}" />
                                        <ContentControl x:Name="selectedPaneHeader"
                                                        Margin="5,1,0,0"
                                                        Content="{Binding Path=SelectedPane.Header, RelativeSource={x:Static RelativeSource.TemplatedParent}, Converter={StaticResource contentValidationConverter}}"
                                                        ContentTemplate="{Binding Path=SelectedPane.HeaderTemplate, RelativeSource={x:Static RelativeSource.TemplatedParent}}"
                                                        ContentTemplateSelector="{Binding Path=SelectedPane.HeaderTemplateSelector, RelativeSource={x:Static RelativeSource.TemplatedParent}}"
                                                        Focusable="False"
                                                        TextElement.Foreground="{DynamicResource {x:Static igDock:DockManagerBrushKeys.DarkBrushKey}}" />
                                    </StackPanel>
                                    <ContentControl x:Name="selectedPaneTitle"
                                                    Grid.Row="1"
                                                    Content="{Binding Path=SelectedPane.NavigatorTitle, RelativeSource={x:Static RelativeSource.TemplatedParent}}"
                                                    ContentTemplate="{Binding Path=SelectedPane.NavigatorTitleTemplate, RelativeSource={x:Static RelativeSource.TemplatedParent}}"
                                                    ContentTemplateSelector="{Binding Path=SelectedPane.NavigatorTitleTemplateSelector, RelativeSource={x:Static RelativeSource.TemplatedParent}}"
                                                    Focusable="False" />
                                </Grid>
                            </Border>
                            <!--  Row 1  -->
                            <Border Grid.Row="1"
                                    Background="{TemplateBinding Background}"
                                    SnapsToDevicePixels="true">
                                <Grid x:Name="gridLists"
                                      Margin="12"
                                      KeyboardNavigation.ControlTabNavigation="Cycle"
                                      KeyboardNavigation.DirectionalNavigation="Cycle"
                                      KeyboardNavigation.TabNavigation="Cycle"
                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="Auto" />
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="*" />
                                    </Grid.RowDefinitions>

                                    <TextBlock x:Name="activeToolWindowsLabel"
                                               Margin="10,7,0,0"
                                               FontSize="{StaticResource FontSize}"
                                               FontWeight="{StaticResource FontSemiBold}"
                                               Foreground="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igDock:XamDockManager}, ResourceId=PaneNavigatorDarkTextFillKey}}"
                                               Text="{Binding Path=Value, Source={x:Static igDock:ResourcesDockManager.PaneNavigatorActiveToolWindowsLabel}}" />
                                    <TextBlock x:Name="documentsLabel"
                                               Grid.Column="1"
                                               Margin="10,7,0,0"
                                               FontSize="{StaticResource FontSize}"
                                               FontWeight="{StaticResource FontSemiBold}"
                                               Foreground="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igDock:XamDockManager}, ResourceId=PaneNavigatorDarkTextFillKey}}"
                                               Text="{Binding Path=Value, Source={x:Static igDock:ResourcesDockManager.PaneNavigatorActiveFilesLabel}}" />  
                                    <Border BorderBrush="{DynamicResource {x:Static igDock:DockManagerBrushKeys.PaneNavigatorItemHottrackInnerBorderFillKey}}"
                                            BorderThickness="{StaticResource DefaultBorderThickness}"
                                            Grid.Row="1"
                                            Margin="10,8,0,0">       
                                    <ListBox x:Name="lstPanes"                                             
                                             ItemContainerStyle="{StaticResource itemStyle}"
                                             ItemsSource="{Binding Path=Panes, RelativeSource={x:Static RelativeSource.TemplatedParent}}"
                                             KeyboardNavigation.DirectionalNavigation="Continue"
                                             KeyboardNavigation.TabNavigation="Continue"
                                             SelectedItem="{Binding Path=SelectedPane, Mode=OneWay, RelativeSource={x:Static RelativeSource.TemplatedParent}}">                                      
                                        <ListBox.ItemsPanel>
                                            <ItemsPanelTemplate>
                                                <igDock:PaneNavigatorItemsPanel ColumnWidth="179" MaxColumns="1" />
                                            </ItemsPanelTemplate>
                                        </ListBox.ItemsPanel>
                                    </ListBox>
                                    </Border>
                                     <Border BorderBrush="{DynamicResource {x:Static igDock:DockManagerBrushKeys.PaneNavigatorItemHottrackInnerBorderFillKey}}"
                                             BorderThickness="{StaticResource DefaultBorderThickness}"
                                             Grid.Row="1"
                                             Grid.Column="1"
                                             Margin="10,8,0,0">  
                                    <ListBox x:Name="lstDocuments"                                            
                                             ItemContainerStyle="{StaticResource itemStyle}"
                                             ItemsSource="{Binding Path=Documents, RelativeSource={x:Static RelativeSource.TemplatedParent}}"
                                             KeyboardNavigation.DirectionalNavigation="Continue"
                                             KeyboardNavigation.TabNavigation="Continue"
                                             SelectedItem="{Binding Path=SelectedPane, Mode=OneWay, RelativeSource={x:Static RelativeSource.TemplatedParent}}">
                                        <ListBox.ItemsPanel>
                                            <ItemsPanelTemplate>
                                                <igDock:PaneNavigatorItemsPanel ColumnWidth="179" MaxColumns="4" />
                                            </ItemsPanelTemplate>
                                        </ListBox.ItemsPanel>
                                    </ListBox>
                                     </Border>
                                    <!--  Preview  -->     
                                     <Border BorderBrush="{DynamicResource {x:Static igDock:DockManagerBrushKeys.PaneNavigatorItemHottrackInnerBorderFillKey}}"
                                             BorderThickness="{StaticResource DefaultBorderThickness}"
                                             Grid.Row="1"
                                             Grid.Column="2"
                                             Margin="10,8,10,0">  
                                    <Viewbox x:Name="viewbox"                                             
                                             Width="200"                                           
                                             HorizontalAlignment="Right"
                                             VerticalAlignment="Top"
                                             Stretch="None"
                                             StretchDirection="Both">
                                        <Rectangle Width="{Binding Path=SelectedPane.ActualWidth, RelativeSource={x:Static RelativeSource.TemplatedParent}}" 
                                                   Height="{Binding Path=SelectedPane.ActualHeight, RelativeSource={x:Static RelativeSource.TemplatedParent}}">
                                            <Rectangle.Fill>
                                                <VisualBrush AlignmentX="Left"
                                                             AlignmentY="Top"
                                                             AutoLayoutContent="False"
                                                             Stretch="None"
                                                             Visual="{Binding Path=SelectedPane, RelativeSource={x:Static RelativeSource.TemplatedParent}}" />
                                            </Rectangle.Fill>
                                        </Rectangle>
                                    </Viewbox>    
                                         </Border>
                                </Grid>
                            </Border>

                            <!--  Row 2  -->
                            <Grid Grid.Row="2" MinHeight="27">

                                <Border x:Name="footerBackground"
                                        Background="{DynamicResource {x:Static igDock:DockManagerBrushKeys.PaneNavigatorFooterFillKey}}"
                                        BorderBrush="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igDock:XamDockManager}, ResourceId=TransparentBrush}}"
                                        BorderThickness="{TemplateBinding BorderBrush}"
                                        SnapsToDevicePixels="true">
                                    <ContentControl x:Name="selectedPaneDescription"
                                                    Margin="8,0"
                                                    VerticalAlignment="Center"
                                                    Content="{Binding Path=SelectedPane.NavigatorDescription, RelativeSource={x:Static RelativeSource.TemplatedParent}}"
                                                    ContentTemplate="{Binding Path=SelectedPane.NavigatorDescriptionTemplate, RelativeSource={x:Static RelativeSource.TemplatedParent}}"
                                                    ContentTemplateSelector="{Binding Path=SelectedPane.NavigatorDescriptionTemplateSelector, RelativeSource={x:Static RelativeSource.TemplatedParent}}"
                                                    Focusable="False"
                                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                    TextBlock.FontFamily="{StaticResource FontFamily}"
                                                    TextBlock.FontSize="{StaticResource FontSize}"
                                                    TextBlock.Foreground="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igDock:XamDockManager}, ResourceId=ForegroundBrush}}" />
                                </Border>
                                <Rectangle Height="1"
                                           VerticalAlignment="Top"
                                           Fill="{TemplateBinding BorderBrush}" />
                            </Grid>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="SelectedPaneAspectRatioIsWide" Value="False" />
                                <Condition Property="SelectedPaneIsDocument" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="viewbox" Property="Stretch" Value="Uniform" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="SelectedPaneAspectRatioIsWide" Value="True" />
                                <Condition Property="SelectedPaneIsDocument" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="viewbox" Property="Stretch" Value="Uniform" />
                            <Setter TargetName="viewbox" Property="StretchDirection" Value="DownOnly" />
                        </MultiTrigger>

                        <DataTrigger Binding="{Binding Source={x:Static interop:BrowserInteropHelper.IsBrowserHosted}}" Value="True">
                            <Setter TargetName="border" Property="CornerRadius" Value="0" />
                            <Setter TargetName="footerBackground" Property="CornerRadius" Value="0" />
                            <Setter TargetName="headerBackground" Property="CornerRadius" Value="0" />
                        </DataTrigger>

                        <DataTrigger Binding="{Binding Path=(igDock:XamDockManager.DockManager).HasDocumentContentHost, RelativeSource={RelativeSource Self}}" Value="False">
                            <Setter TargetName="documentsLabel" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="lstDocuments" Property="Visibility" Value="Collapsed" />
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Resources>
            <Style TargetType="{x:Type ListBox}">
                <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Hidden" />
                <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Hidden" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ListBox}">
                            <ScrollViewer CanContentScroll="True" Opacity="0.8">
                                <ItemsPresenter />
                            </ScrollViewer>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </Style.Resources>
    </Style>

    <!--  ========== dropPreviewTabBottom ==========  -->
    <ControlTemplate x:Key="dropPreviewTabBottom" TargetType="{x:Type Control}">
        <Grid Margin="0,0,0,3">
            <Grid.RowDefinitions>
                <!--  We want to make sure a pixel of the body remains visible  -->
                <RowDefinition Height="*" MinHeight="4" />
                <!--  We want the majority of the space going to the tab section but it needs to be able to resize smaller  -->
                <RowDefinition Height="38" />
            </Grid.RowDefinitions>
            <Border Grid.Row="0"
                    Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="5,5,5,0" />
            <Grid Grid.Row="1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="5*" MaxWidth="50" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <Border Grid.Column="0"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="5,0,5,5" />
                <Border Grid.Column="1"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="0,5,0,0" />
            </Grid>
        </Grid>
    </ControlTemplate>

    <!--  ========== dropPreviewTabTop ==========  -->
    <ControlTemplate x:Key="dropPreviewTabTop" TargetType="{x:Type Control}">
        <Grid Margin="0,3,0,0">
            <Grid.RowDefinitions>
                <!--  We want the majority of the space going to the tab section but it needs to be able to resize smaller  -->
                <RowDefinition Height="38" />
                <!--  We want to make sure a pixel of the body remains visible  -->
                <RowDefinition Height="*" MinHeight="4" />
            </Grid.RowDefinitions>
            <Border Grid.Row="1"
                    Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="5,0,5,5" />
            <Grid Grid.Row="0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="5*" MaxWidth="50" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <Border Grid.Column="0"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="5,5,5,0" />
                <Border Grid.Column="1"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="0,0,0,5" />
            </Grid>
        </Grid>
    </ControlTemplate>

    <!--  ========== dropPreviewTabRight ==========  -->
    <ControlTemplate x:Key="dropPreviewTabRight" TargetType="{x:Type Control}">
        <Grid>
            <Grid.ColumnDefinitions>
                <!--  We want to make sure a pixel of the body remains visible  -->
                <ColumnDefinition Width="*" MinWidth="4" />
                <!--  We want the majority of the space going to the tab section but it needs to be able to resize smaller  -->
                <ColumnDefinition Width="4*" MaxWidth="24" />
            </Grid.ColumnDefinitions>
            <Border Grid.Column="0"
                    Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="3,3,0,3" />
            <Grid Grid.Column="1">
                <Grid.RowDefinitions>
                    <RowDefinition Height="*" MaxHeight="6" />
                    <RowDefinition Height="10*" MaxHeight="46" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>
                <Border Grid.Row="0"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="3,0,0,0" />
                <Border Grid.Row="1"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="0,3,3,3" />
                <Border Grid.Row="2"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="3,0,0,0" />
            </Grid>
        </Grid>
    </ControlTemplate>

    <!--  ========== dropPreviewTabLeft ==========  -->
    <ControlTemplate x:Key="dropPreviewTabLeft" TargetType="{x:Type Control}">
        <Grid>
            <Grid.ColumnDefinitions>
                <!--  We want the majority of the space going to the tab section but it needs to be able to resize smaller  -->
                <ColumnDefinition Width="4*" MaxWidth="24" />
                <!--  We want to make sure a pixel of the body remains visible  -->
                <ColumnDefinition Width="*" MinWidth="4" />
            </Grid.ColumnDefinitions>
            <Border Grid.Column="1"
                    Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="0,3,3,3" />
            <Grid Grid.Column="0">
                <Grid.RowDefinitions>
                    <RowDefinition Height="*" />
                    <RowDefinition Height="10*" MaxHeight="46" />
                    <RowDefinition Height="*" MaxHeight="6" />
                </Grid.RowDefinitions>
                <Border Grid.Row="0"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="0,0,3,0" />
                <Border Grid.Row="1"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="3,3,0,3" />
                <Border Grid.Row="2"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="0,0,3,0" />
            </Grid>
        </Grid>
    </ControlTemplate>

    <!--  ========== XamDockManager.DropPreviewStyleKey ==========  -->
    <Style x:Key="{x:Static igDock:XamDockManager.DropPreviewStyleKey}" TargetType="{x:Type Control}">
        <Setter Property="Background" Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igDock:XamDockManager}, ResourceId=PreviewIndicatorBackground}}" />
        <Setter Property="BorderBrush" Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igDock:XamDockManager}, ResourceId=PreviewIndicatorBorderBrush}}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Opacity" Value="0.3" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Control}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="igDock:XamDockManager.DropPreviewTabLocation" Value="Bottom">
                <Setter Property="Template" Value="{StaticResource dropPreviewTabBottom}" />
            </Trigger>
            <Trigger Property="igDock:XamDockManager.DropPreviewTabLocation" Value="Top">
                <Setter Property="Template" Value="{StaticResource dropPreviewTabTop}" />
            </Trigger>
            <Trigger Property="igDock:XamDockManager.DropPreviewTabLocation" Value="Right">
                <Setter Property="Template" Value="{StaticResource dropPreviewTabRight}" />
            </Trigger>
            <Trigger Property="igDock:XamDockManager.DropPreviewTabLocation" Value="Left">
                <Setter Property="Template" Value="{StaticResource dropPreviewTabLeft}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--  ========== XamDockManager.FloatingWindowPreviewStyleKey ==========  -->
    <Style x:Key="{x:Static igDock:XamDockManager.FloatingWindowPreviewStyleKey}" TargetType="{x:Type Control}">
        <Setter Property="Background" Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igDock:XamDockManager}, ResourceId=FloatingWindowBackgroundBrush}}" />
        <Setter Property="BorderBrush" Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igDock:XamDockManager}, ResourceId=FloatingWindowBorderBrush}}" />
        <Setter Property="BorderThickness" Value="3" />
        <Setter Property="Opacity" Value=".39" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Control}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>