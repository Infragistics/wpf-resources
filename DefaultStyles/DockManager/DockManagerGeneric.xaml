<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:igWindows="http://infragistics.com/Windows"
    xmlns:igDock="http://infragistics.com/DockManager"
    xmlns:luna="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Luna"
    xmlns:igThemes="http://infragistics.com/Themes"
    xmlns:interop="clr-namespace:System.Windows.Interop;assembly=PresentationFramework"
    xmlns:igWinThemes="http://infragistics.com/Themes"
	>

  <ResourceDictionary.MergedDictionaries>
		<!--<ResourceDictionary Source="DockManagerAero_Brushes.xaml" />-->
		<!--<igThemes:DockManagerAeroBrushes />-->
		<ResourceDictionary Source="DockManagerAero_Brushes.xaml" />
	</ResourceDictionary.MergedDictionaries>

	<!-- ========== Converters ========== -->
	<BooleanToVisibilityConverter x:Key="BoolToVisConverter"/>
  <!-- AS 6/29/10 TFS32553 -->
  <igDock:ContentValidationConverter x:Key="contentValidationConverter" ErrorMessage="{x:Static igDock:Resources.PaneHeaderContentValidationError}" />

	<!-- ========== ToolTips ========== -->
    <!-- AS 2/13/09 TFS14003 - Added x:Shared="false" so each element has its 
        own reference. otherwise the shared tooltip (or the deferredresourcereference 
        that wpf uses) causes the elements that used it to be rooted -->
	<ToolTip x:Key="closeToolTip" x:Shared="false" Style="{DynamicResource {x:Static igDock:XamDockManager.ToolTipStyleKey}}" Content="{x:Static igDock:ResourcesDockManager.CloseButtonToolTip}"/>
	<ToolTip x:Key="pinToolTip" x:Shared="false" Style="{DynamicResource {x:Static igDock:XamDockManager.ToolTipStyleKey}}" Content="{x:Static igDock:ResourcesDockManager.PinButtonToolTip}"/>
	<ToolTip x:Key="positionToolTip" x:Shared="false" Style="{DynamicResource {x:Static igDock:XamDockManager.ToolTipStyleKey}}" Content="{x:Static igDock:ResourcesDockManager.PositionMenuToolTip}"/>
	<ToolTip x:Key="filesToolTip" x:Shared="false" Style="{DynamicResource {x:Static igDock:XamDockManager.ToolTipStyleKey}}" Content="{x:Static igDock:ResourcesDockManager.DocumentFilesMenuToolTip}"/>
	<ToolTip x:Key="showNavigatorToolTip" x:Shared="false" Style="{DynamicResource {x:Static igDock:XamDockManager.ToolTipStyleKey}}" Content="{x:Static igDock:ResourcesDockManager.DocumentShowNavigatorToolTip}"/>

	<!-- AS 6/24/11 FloatingWindowCaptionSource -->
	<ToolTip x:Key="minimizeToolTip" x:Shared="false" Style="{DynamicResource {x:Static igDock:XamDockManager.ToolTipStyleKey}}" Content="{x:Static igWindows:ResourcesWindows.MinimizeButtonToolTip}"/>
	<ToolTip x:Key="maximizeToolTip" x:Shared="false" Style="{DynamicResource {x:Static igDock:XamDockManager.ToolTipStyleKey}}" Content="{x:Static igWindows:ResourcesWindows.MaximizeButtonToolTip}"/>
	<ToolTip x:Key="restoreUpToolTip" x:Shared="false" Style="{DynamicResource {x:Static igDock:XamDockManager.ToolTipStyleKey}}" Content="{x:Static igWindows:ResourcesWindows.RestoreUpButtonToolTip}"/>
	<ToolTip x:Key="restoreDownToolTip" x:Shared="false" Style="{DynamicResource {x:Static igDock:XamDockManager.ToolTipStyleKey}}" Content="{x:Static igWindows:ResourcesWindows.RestoreDownButtonToolTip}"/>

	<!-- ========== Repeat Buttons ========== -->
	<Style x:Key="ScrollLeftButtonStyle" BasedOn="{x:Null}" TargetType="{x:Type RepeatButton}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type RepeatButton}">
					<Grid x:Name="XamPagerButton" Margin="1,1,1,1" Width="Auto" Height="Auto" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
						<Border x:Name="Background" BorderBrush="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedListNotActiveOuterBorderFillKey}}" BorderThickness="1,1,1,1" CornerRadius="2,0,0,2" Background="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedListNotActiveBottomCenterFillKey}}" SnapsToDevicePixels="True"/>
						<Border x:Name="Highlight" CornerRadius="2,0,0,2" BorderThickness="1" BorderBrush="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedListNotActiveInnerBorderFillKey}}" Margin="1" SnapsToDevicePixels="True"/>
						<ContentPresenter Margin="2" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" RecognizesAccessKey="True" RenderTransformOrigin="0.5,0.5"/>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsFocused" Value="True"/>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter Property="Background" TargetName="Background" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedListHottrackBottomCenterFillKey}}" />
							<Setter Property="BorderBrush" TargetName="Background" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedListHottrackOuterBorderFillKey}}" />
						</Trigger>
						<Trigger Property="IsPressed" Value="True"/>
						<Trigger Property="IsEnabled" Value="False"/>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="ScrollRightButtonStyle" BasedOn="{x:Null}" TargetType="{x:Type RepeatButton}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type RepeatButton}">
					<Grid x:Name="XamPagerButton" Margin="1,1,1,1" Width="Auto" Height="Auto" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
						<Border x:Name="Background" BorderBrush="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedListNotActiveOuterBorderFillKey}}" BorderThickness="1,1,1,1" CornerRadius="0,2,2,0" Background="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedListNotActiveBottomCenterFillKey}}" SnapsToDevicePixels="True"/>
						<Border x:Name="Highlight" CornerRadius="0,2,2,0" BorderThickness="1" BorderBrush="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedListNotActiveInnerBorderFillKey}}" Margin="1" SnapsToDevicePixels="True"/>
						<ContentPresenter Margin="2" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" RecognizesAccessKey="True" RenderTransformOrigin="0.5,0.5"/>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsFocused" Value="True"/>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter Property="Background" TargetName="Background" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedListHottrackBottomCenterFillKey}}" />
							<Setter Property="BorderBrush" TargetName="Background" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedListHottrackOuterBorderFillKey}}" />
						</Trigger>
						<Trigger Property="IsPressed" Value="True"/>
						<Trigger Property="IsEnabled" Value="False"/>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="ScrollUpButtonStyle" BasedOn="{x:Null}" TargetType="{x:Type RepeatButton}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type RepeatButton}">
					<Grid x:Name="XamPagerButton" Margin="1,1,1,1" Width="Auto" Height="Auto" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
						<Border x:Name="Background" BorderBrush="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedListNotActiveOuterBorderFillKey}}" BorderThickness="1,1,1,1" CornerRadius="2,2,0,0" Background="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedListNotActiveBottomCenterFillKey}}" SnapsToDevicePixels="True"/>
						<Border x:Name="Highlight" CornerRadius="2,2,0,0" BorderThickness="1" BorderBrush="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedListNotActiveInnerBorderFillKey}}" Margin="1" SnapsToDevicePixels="True"/>
                        <ContentPresenter Margin="0,4,0,4" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" RecognizesAccessKey="True"/>
                    </Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsFocused" Value="True"/>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter Property="Background" TargetName="Background" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedListHottrackBottomCenterFillKey}}" />
							<Setter Property="BorderBrush" TargetName="Background" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedListHottrackOuterBorderFillKey}}" />
						</Trigger>
						<Trigger Property="IsPressed" Value="True"/>
						<Trigger Property="IsEnabled" Value="False"/>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="ScrollDownButtonStyle" BasedOn="{x:Null}" TargetType="{x:Type RepeatButton}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type RepeatButton}">
					<Grid x:Name="XamPagerButton" Margin="1,1,1,1" Width="Auto" Height="Auto" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
						<Border x:Name="Background" BorderBrush="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedListNotActiveOuterBorderFillKey}}" BorderThickness="1,1,1,1" CornerRadius="0,0,2,2" Background="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedListNotActiveBottomCenterFillKey}}" SnapsToDevicePixels="True"/>
						<Border x:Name="Highlight" CornerRadius="0,0,2,2" BorderThickness="1" BorderBrush="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedListNotActiveInnerBorderFillKey}}" Margin="1" SnapsToDevicePixels="True"/>
						<ContentPresenter Margin="0,5,0,4" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" RecognizesAccessKey="True" RenderTransformOrigin="0.5,0.5"/>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsFocused" Value="True"/>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter Property="Background" TargetName="Background" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedListHottrackBottomCenterFillKey}}" />
							<Setter Property="BorderBrush" TargetName="Background" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedListHottrackOuterBorderFillKey}}" />
						</Trigger>
						<Trigger Property="IsPressed" Value="True"/>
						<Trigger Property="IsEnabled" Value="False"/>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> -->
	<!--         Shared Values [Start]        -->
	<!-- >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> -->

	<!-- ========== TabGroupXamPagerStyle ========== -->
	<Style x:Key="TabGroupXamPagerStyle" TargetType="{x:Type igWindows:XamPager}">
		<Setter Property="Focusable" Value="False" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type igWindows:XamPager}">
					<DockPanel Background="{TemplateBinding Background}">
						<RepeatButton x:Name="PART_ScrollRight"
							DockPanel.Dock="Right"
							Style="{StaticResource ScrollRightButtonStyle}"  
							Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
							Command="{x:Static ScrollBar.LineRightCommand}"
							CommandTarget="{Binding RelativeSource={x:Static RelativeSource.TemplatedParent}}" >
							<Path HorizontalAlignment="Center" Width="3" Height="5" VerticalAlignment="Center" Stretch="Fill" Opacity="1" Data="M0,0L0,5 3,2.5z" Fill="#000000" />
						</RepeatButton>
						<RepeatButton x:Name="PART_ScrollLeft"
                            DockPanel.Dock="Right"
							Style="{StaticResource ScrollLeftButtonStyle}"  
							Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
							Command="{x:Static ScrollBar.LineLeftCommand}"
							CommandTarget="{Binding RelativeSource={x:Static RelativeSource.TemplatedParent}}" >
							<Path HorizontalAlignment="Center" Width="3" Height="5" VerticalAlignment="Center" Stretch="Fill" Opacity="1" Data="M3,0L3,5 0,2.5z" Fill="#000000" />
						</RepeatButton>
						<RepeatButton x:Name="PART_ScrollDown"
							DockPanel.Dock="Bottom"
							Style="{StaticResource ScrollDownButtonStyle}"  
							Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" 
							Command="{x:Static ScrollBar.LineDownCommand}"
							CommandTarget="{Binding RelativeSource={x:Static RelativeSource.TemplatedParent}}" >
							<Path HorizontalAlignment="Center" Width="5" Height="3" VerticalAlignment="Center" Stretch="Fill" Opacity="1" Data="M0,0L5,0 2.5,3z" Fill="#000000"/>
						</RepeatButton>
						<RepeatButton x:Name="PART_ScrollUp" 
							DockPanel.Dock="Bottom"
							Style="{StaticResource ScrollUpButtonStyle}"  
							Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" 
							Command="{x:Static ScrollBar.LineUpCommand}"
							CommandTarget="{Binding RelativeSource={x:Static RelativeSource.TemplatedParent}}" >
							<Path HorizontalAlignment="Center" Width="5" Height="3" VerticalAlignment="Center" Stretch="Fill" Opacity="1" Data="M0,2.5L5,2.5 2.5,0z" Fill="#000000" />
						</RepeatButton>
						<igWindows:PagerContentPresenter x:Name="PART_PagerContentPresenter"
							CanContentScroll="{TemplateBinding CanContentScroll}" 
							Margin="{TemplateBinding Padding}" />
					</DockPanel>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- ========== SimpleContentControl ========== -->
	<!-- Basic control template for buttons in the dockmanager -->
	<ControlTemplate x:Key="SimpleContentControlTemplate" TargetType="{x:Type ContentControl}">
		<Border Background="{TemplateBinding Background}"
                CornerRadius="{TemplateBinding Border.CornerRadius}"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}"
                SnapsToDevicePixels="True" 
                >


			<Path Data="{Binding Path=Content, RelativeSource={x:Static RelativeSource.TemplatedParent}}" 
                    Fill="{TemplateBinding Foreground}" 
                    Stretch="Uniform"
                    Margin="{TemplateBinding Padding}"
		            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
		            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                  SnapsToDevicePixels="True"
                      />
		</Border>
		<ControlTemplate.Triggers>
			<Trigger Property="IsEnabled" Value="False">
				<Setter Property="Foreground" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.GrayTextBrushKey}}" />
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>


	<!-- ========== SimpleMenuItem ========== -->
	<!-- Basic control template for root menu items in the dockmanager -->
	<ControlTemplate x:Key="SimpleMenuItemTemplate" TargetType="{x:Type MenuItem}">
		<igWindows:CardPanel>
			<Border Background="{TemplateBinding Background}"
                    CornerRadius="{TemplateBinding Border.CornerRadius}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    SnapsToDevicePixels="True" >
				<!--<ContentPresenter />-->
				<Path Data="{Binding Path=Header, RelativeSource={x:Static RelativeSource.TemplatedParent}}" 
                    Fill="{TemplateBinding Foreground}" 
                    Stretch="Uniform"
                    Margin="{TemplateBinding Padding}"
		            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
		            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                   SnapsToDevicePixels="True"   />
			</Border>


			<Popup x:Name="PART_Popup" 
                   AllowsTransparency="true" 
                   Placement="Bottom" 
                   PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}" 
                   IsOpen="{Binding Path=IsSubmenuOpen, RelativeSource={x:Static RelativeSource.TemplatedParent}}">
				<luna:SystemDropShadowChrome x:Name="Shdw" Color="Transparent">
					<Grid Height="Auto" Width="Auto" x:Name="MenuItem">
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="27" />
							<ColumnDefinition Width="*" />
						</Grid.ColumnDefinitions>
						<Rectangle
							Grid.ColumnSpan="2"
                                Opacity="1"
                                HorizontalAlignment="Stretch"
                                VerticalAlignment="Stretch"
                                Margin="0,0,0,0"
                                Stroke="{DynamicResource {x:Static igDock:DockManagerBrushKeys.MenuItemOuterBorderFillKey}}"
                                StrokeThickness="1"
                                Fill="{DynamicResource {x:Static igDock:DockManagerBrushKeys.MenuItemCenterFillKey}}" SnapsToDevicePixels="True" />

						<!-- Harry 03.20.2008 
                            Created icon area background template and moved
                            it to the MenuItem.SubMenuItemStyleKey -->

						<!--<Border Grid.ColumnSpan="1"
                                HorizontalAlignment="Stretch" VerticalAlignment="Stretch" 
                                BorderThickness="0,0,1,0"
                                BorderBrush="{DynamicResource {x:Static igDock:DockManagerBrushKeys.MenuItemIconGroupBorderFillKey}}" 
                                Background="{DynamicResource {x:Static igDock:DockManagerBrushKeys.MenuItemIconGroupCenterFillKey}}" 
                                Margin="3,3,0,3" 
                                SnapsToDevicePixels="True" />-->

						<ScrollViewer Grid.ColumnSpan="2" 
                                        CanContentScroll="True" 
							            Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly={x:Type FrameworkElement}}}"
                                        Margin="3">
							<ItemsPresenter 
                                KeyboardNavigation.TabNavigation="Cycle" 
                                KeyboardNavigation.DirectionalNavigation="Cycle" 
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                />
						</ScrollViewer>
					</Grid>
				</luna:SystemDropShadowChrome>
			</Popup>
		</igWindows:CardPanel>
		<ControlTemplate.Triggers>
			<Trigger Property="IsEnabled" Value="False">
				<Setter Property="Foreground" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.GrayTextBrushKey}}" />
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>


    <!-- ========== ButtonStyleBase ========== -->
	<!-- Base style for the buttons in the PaneHeaderPresenter and document TabGroupPane -->
	<Style x:Key="ButtonStyleBase" TargetType="{x:Type Button}">
		<Setter Property="ToolTipService.ShowOnDisabled" Value="True" />
		<Setter Property="Focusable" Value="False" />
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="BorderThickness" Value="1" />
		<Setter Property="BorderBrush" Value="Transparent" />
		<Setter Property="Template" Value="{StaticResource SimpleContentControlTemplate}" />
	</Style>


	<!-- ========== CaptionButtonStyleBase ========== -->
	<!-- Base style for the buttons in the PaneHeaderPresenter -->
	<Style x:Key="CaptionButtonStyleBase" TargetType="{x:Type Button}" BasedOn="{StaticResource ButtonStyleBase}">
		<Style.Triggers>

			<!-- HotTracked Button in an Active ContentPane -->
			<MultiDataTrigger>
				<MultiDataTrigger.Conditions>
					<Condition Binding="{Binding Path=Pane.IsActivePane, RelativeSource={RelativeSource AncestorType={x:Type igDock:PaneHeaderPresenter}}}" Value="True"/>
					<Condition Binding="{Binding Path=IsMouseOver, RelativeSource={x:Static RelativeSource.Self}}" Value="True"/>
				</MultiDataTrigger.Conditions>
				<Setter Property="BorderBrush" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.PaneCaptionButtonHottrackOuterBorderFillKey}}" />
				<Setter Property="Background" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.PaneCaptionButtonHottrackCenterFillKey}}" />
			</MultiDataTrigger>

			<!-- HotTracked Button in an Non-Active ContentPane -->
			<MultiDataTrigger>
				<MultiDataTrigger.Conditions>
					<Condition Binding="{Binding Path=Pane.IsActivePane, RelativeSource={RelativeSource AncestorType={x:Type igDock:PaneHeaderPresenter}}}" Value="False"/>
					<Condition Binding="{Binding Path=IsMouseOver, RelativeSource={x:Static RelativeSource.Self}}" Value="True"/>
				</MultiDataTrigger.Conditions>
				<Setter Property="BorderBrush" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.PaneCaptionButtonNotActiveHottrackOuterBorderFillKey}}" />
				<Setter Property="Background" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.PaneCaptionButtonNotActiveHottrackCenterFillKey}}" />
			</MultiDataTrigger>


			<!-- IsPressed Button -->
			<Trigger Property="IsPressed" Value="True">
				<Setter Property="BorderBrush" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.PaneCaptionButtonPressedOuterBorderFillKey}}" />
				<Setter Property="Background" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.PaneCaptionButtonPressedCenterFillKey}}" />
			</Trigger>

			<!-- IsEnabled Button -->
			<Trigger Property="IsEnabled" Value="False">
				<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}"/>
			</Trigger>

		</Style.Triggers>
	</Style>


	<!-- ========== RootMenuStyle ========== -->
	<!-- Style for the root level menu containing a single menu item in the PaneHeaderPresenter and document TabGroupPane -->
	<Style x:Key="RootMenuStyle" TargetType="{x:Type Menu}">
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="VerticalAlignment" Value="Top" />
		<Setter Property="ItemsPanel">
			<Setter.Value>
				<ItemsPanelTemplate>
					<igWindows:CardPanel />
				</ItemsPanelTemplate>
			</Setter.Value>
		</Setter>
	</Style>


	<!-- ========== TopLevelHeaderMenuItemStyleBase ========== -->
	<!-- Base style for the root level menu items in the PaneHeaderPresenter and document TabGroupPane -->
	<Style x:Key="TopLevelHeaderMenuItemStyleBase" TargetType="{x:Type MenuItem}">
		<Setter Property="ToolTipService.ShowOnDisabled" Value="True" />
		<!-- AS 4/22/08 Allow the menu item to be focusable so it can be navigated with the keyboard.
        <Setter Property="Focusable" Value="False" />
        -->
		<!-- AS 4/23/08 We don't want the element to receive focus unless explicitly set. -->
		<Setter Property="IsTabStop" Value="False" />
		<Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="Red" />
		<Setter Property="BorderThickness" Value="1" />
		<Setter Property="BorderBrush" Value="Transparent" />
		<Setter Property="Template" Value="{StaticResource SimpleMenuItemTemplate}" />
	</Style>


	<!-- ========== MenuItem_IconAreaBackground ========== -->
	<Style x:Key="MenuItem_IconAreaBackground" TargetType="{x:Type Border}">
		<Setter Property="SnapsToDevicePixels" Value="True"/>
		<Setter Property="Background" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.MenuItemIconGroupCenterFillKey}}"/>
		<Setter Property="BorderBrush" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.MenuItemIconGroupBorderFillKey}}"/>
		<Setter Property="BorderThickness" Value="0,0,1,0"/>
	</Style>


	<!-- ========== SubMenuItemTemplate ========== -->
	<ControlTemplate x:Key="{x:Static igDock:XamDockManager.SubMenuItemTemplateKey}"  TargetType="{x:Type MenuItem}">
		<Grid Background="Transparent">
			<Grid>
				<Grid.ColumnDefinitions>
					<ColumnDefinition MinWidth="27" Width="Auto" x:Name="iconColumn" SharedSizeGroup="MenuItemIconColumnGroup" />
					<ColumnDefinition Width="*" />
				</Grid.ColumnDefinitions>

				<Border x:Name="IconAreaBackground" Style="{StaticResource MenuItem_IconAreaBackground}"/>

				<!-- MenuItem Highlight -->
				<Grid x:Name="Highlight" Visibility="Collapsed" Grid.ColumnSpan="2" Margin="1,0,1,0">
					<Border
                        x:Name="CenterAndBorderFill"
                        Background="{DynamicResource {x:Static igDock:DockManagerBrushKeys.MenuSelectionCenterFillKey}}" 
                        BorderBrush="{DynamicResource {x:Static igDock:DockManagerBrushKeys.MenuSelectionOuterBorderFillKey}}"
                        BorderThickness="1"
                        SnapsToDevicePixels="True"
                        CornerRadius="3"/>
					<Rectangle 
                        x:Name="InnerBorderFill"
                        StrokeThickness="1"
                        Stroke="{DynamicResource {x:Static igDock:DockManagerBrushKeys.MenuSelectionInnerBorderFillKey}}"
                        RadiusX="2"
                        RadiusY="2"
                        Margin="1"
                        SnapsToDevicePixels="True"/>
				</Grid>

				<!-- Icon -->
				<ContentPresenter 
                        x:Name="Icon"
                        Width="16" Height="16" 
					    HorizontalAlignment="Center"
					    VerticalAlignment="Center"
					    ContentSource="Icon"/>

				<!-- CheckMark -->
				<Grid x:Name="CheckMark" Visibility="Collapsed">
					<Border x:Name="CheckMarkBox" 
                            Width="20" 
                            Height="20" 
                            SnapsToDevicePixels="True"
                            Background="{DynamicResource {x:Static igDock:DockManagerBrushKeys.MenuItemCheckmarkBoxNormalCenterFillKey}}"
                            BorderBrush="{DynamicResource {x:Static igDock:DockManagerBrushKeys.MenuItemCheckmarkBoxNormalOuterBorderFillKey}}"
                            BorderThickness="1,1,1,1">

						<Path x:Name="CheckMarkGlyph" 
                                  SnapsToDevicePixels="True"
                                  HorizontalAlignment="Center" 
                                  VerticalAlignment="Center" 
                                  Fill="{DynamicResource {x:Static igDock:DockManagerBrushKeys.DarkBrushKey}}" 
                                  Data="M0,2 L0,4.8 L2.5,7.4 L7.1,2.8 L7.1,0 L2.5,4.6 z" 
                                  FlowDirection="LeftToRight"/>

					</Border>
				</Grid>


				<!-- ContentArea -->
				<Grid Grid.Column="1" VerticalAlignment="Center">
					<ContentPresenter ContentSource="Header" Margin="8,4,8,4"/>
				</Grid>

			</Grid>
		</Grid>
		<ControlTemplate.Triggers>

			<Trigger Property="IsHighlighted" Value="True">
				<Setter TargetName="Highlight" Property="Visibility" Value="Visible"/>
                <Setter Property="Foreground" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.MenuSelectionHottrackTextFillKey}}"/>
			</Trigger>

			<Trigger Property="IsChecked" Value="True">
				<Setter TargetName="CheckMark" Property="Visibility" Value="Visible"/>
				<Setter TargetName="Icon" Property="Visibility" Value="Collapsed"/>
			</Trigger>

			<MultiTrigger>
				<MultiTrigger.Conditions>
					<Condition Property="IsChecked" Value="True"/>
					<Condition Property="IsHighlighted" Value="True"/>
				</MultiTrigger.Conditions>
				<Setter TargetName="CheckMarkBox" Property="Background" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.MenuItemCheckmarkBoxHottrackCenterFillKey}}"/>
				<Setter TargetName="CheckMarkBox" Property="BorderBrush" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.MenuItemCheckmarkBoxHottrackOuterBorderFillKey}}"/>
			</MultiTrigger>



			<Trigger Property="IsEnabled" Value="False">
				<Setter Property="Foreground" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.GrayTextBrushKey}}"/>
			</Trigger>

		</ControlTemplate.Triggers>
	</ControlTemplate>


	<!-- ========== NoTabItemAreaTabGroupTemplate ========== -->
	<ControlTemplate x:Key="NoTabItemAreaTabGroupTemplate" TargetType="{x:Type igDock:TabGroupPane}">
		<Grid>
			<!-- We need the itemspresenter to generate the elements -->
			<ItemsPresenter Visibility="Hidden" MaxHeight="1" MaxWidth="1" />
			<ContentPresenter ContentSource="SelectedContent"
			    Margin="{TemplateBinding Padding}"
			    x:Name="PART_SelectedContentHost"
			    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
			    ContentTemplateSelector="{TemplateBinding SelectedContentTemplateSelector}"
			    ContentTemplate="{TemplateBinding SelectedContentTemplate}"
			    Content="{TemplateBinding SelectedContent}" />
		</Grid>
	</ControlTemplate>


	<!-- ========== centerIndicator ========== -->
	<ControlTemplate x:Key="centerIndicator" TargetType="{x:Type igDock:DockingIndicator}">
		<!-- Note: I'm using the root element as the center to be a catch all so we don't have
            to put the corners and center portion into a single element. -->
		<Grid x:Name="PART_DockCenter">
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="34" />
				<ColumnDefinition Width="39" />
				<ColumnDefinition Width="34" />
			</Grid.ColumnDefinitions>
			<Grid.RowDefinitions>
				<RowDefinition Height="34" />
				<RowDefinition Height="37" />
				<RowDefinition Height="34" />
			</Grid.RowDefinitions>


			<!-- IndicatorGroupBackground -->
			<Grid x:Name="IndicatorGroupBackground" Width="77" Height="75" Opacity="0.75"
                  HorizontalAlignment="Center" VerticalAlignment="Center"
                  Grid.ColumnSpan="3" Grid.RowSpan="3">
				<Rectangle Opacity="1" Margin="0,0,0,0"
                           HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                           RadiusX="12" RadiusY="12"
                           Fill="{DynamicResource {x:Static igDock:DockManagerBrushKeys.LightBrushKey}}" 
                           SnapsToDevicePixels="True"/>
				<Rectangle Opacity="1" Margin="2,2,2,2"
                           HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                           RadiusX="11" RadiusY="12"
                           Stroke="{DynamicResource {x:Static igDock:DockManagerBrushKeys.AeroDockingIndicatorGroupNormalOuterBorderFillKey}}"
                           StrokeThickness="1" 
                           Fill="{DynamicResource {x:Static igDock:DockManagerBrushKeys.AeroDockingIndicatorGroupNormalCenterFillKey}}"
                           SnapsToDevicePixels="True"/>
				<Rectangle Opacity="1" Margin="3,3,3,3"
                           HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                           RadiusX="11" RadiusY="11"
                           Stroke="{DynamicResource {x:Static igDock:DockManagerBrushKeys.LightBrushKey}}"
                           StrokeThickness="1" 
                           SnapsToDevicePixels="True"/>
			</Grid>


			<!-- Top Indicator -->
			<igWindows:CardPanel Grid.Column="1" Grid.Row="0" 
                 x:Name="PART_DockTop" Background="Transparent" Opacity="0.75">
				<Grid Width="35" Height="34" x:Name="topIndicatorIcon" IsEnabled="{TemplateBinding CanDockTop}">
					<Border x:Name="topIndicatorIconShadow" Background="{DynamicResource {x:Static igDock:DockManagerBrushKeys.LightBrushKey}}" CornerRadius="4,4,0,0" Margin="0,0,0,17" SnapsToDevicePixels="True"/>
					<Rectangle x:Name="topIndicatorIconCenterAndOuterBorder" Fill="{DynamicResource {x:Static igDock:DockManagerBrushKeys.AeroDockingIndicatorGroupNormalCenterFillKey}}" Stroke="{DynamicResource {x:Static igDock:DockManagerBrushKeys.AeroDockingIndicatorGroupNormalOuterBorderFillKey}}" RadiusX="3" RadiusY="3" Margin="2,2,2,0" SnapsToDevicePixels="True" />
					<Rectangle x:Name="topIndicatorIconInnerBorder" Stroke="{DynamicResource {x:Static igDock:DockManagerBrushKeys.AeroDockingIndicatorGroupNormalInnerBorderFillKey}}" Margin="3,3,3,1" RadiusX="2" RadiusY="2" SnapsToDevicePixels="True" />
					<Path
                        VerticalAlignment="Bottom"
                        HorizontalAlignment="Center" 
                        Height="12"
                        Stretch="Fill"
                        Opacity="1"
                        Data="M 19,8 C19,8 19,15 19,15 19,15 15.5,11.5 15.5,11.5 15.5,11.5 19,8 19,8 z" 
                        Width="7" 
                        Margin="0,0,0,4" 
                        Fill="{DynamicResource {x:Static igDock:DockManagerBrushKeys.LightBrushKey}}">
						<Path.LayoutTransform>
							<RotateTransform Angle="90"/>
						</Path.LayoutTransform>
					</Path>
					<Path
                        VerticalAlignment="Bottom"
                        HorizontalAlignment="Center" 
                        Height="10"
                        Stretch="Fill"
                        Opacity="1"
                        Data="M 19,8 C19,8 19,15 19,15 19,15 15.5,11.5 15.5,11.5 15.5,11.5 19,8 19,8 z" 
                        Width="5" 
                        Margin="0,0,0,5" 
                        Fill="{DynamicResource {x:Static igDock:DockManagerBrushKeys.DockingIndicatorGlyphFillKey}}">
						<Path.LayoutTransform>
							<RotateTransform Angle="90"/>
						</Path.LayoutTransform>
					</Path>
				</Grid>
			</igWindows:CardPanel>


			<!-- Bottom Indicator -->
			<igWindows:CardPanel Grid.Column="1" Grid.Row="2" 
                 x:Name="PART_DockBottom" Background="Transparent" Opacity="0.75">
				<Grid Width="35" Height="34" x:Name="bottomIndicatorIcon" IsEnabled="{TemplateBinding CanDockBottom}">
					<Border x:Name="bottomIndicatorIconShadow" Background="{DynamicResource {x:Static igDock:DockManagerBrushKeys.LightBrushKey}}" CornerRadius="0,0,4,4" Margin="0,17,0,0" SnapsToDevicePixels="True"/>
					<Rectangle x:Name="bottomIndicatorIconCenterAndOuterBorder" Fill="{DynamicResource {x:Static igDock:DockManagerBrushKeys.AeroDockingIndicatorGroupNormalCenterFillKey}}" Stroke="{DynamicResource {x:Static igDock:DockManagerBrushKeys.AeroDockingIndicatorGroupNormalOuterBorderFillKey}}" RadiusX="3" RadiusY="3" Margin="2,0,2,2" SnapsToDevicePixels="True" />
					<Rectangle x:Name="bottomIndicatorIconInnerBorder" Stroke="{DynamicResource {x:Static igDock:DockManagerBrushKeys.AeroDockingIndicatorGroupNormalInnerBorderFillKey}}" Margin="3,1,3,3" RadiusX="2" RadiusY="2" SnapsToDevicePixels="True" />
					<Path
                        VerticalAlignment="Top"
                        HorizontalAlignment="Center" 
                        Height="12"
                        Stretch="Fill"
                        Opacity="1"
                        Data="M 19,8 C19,8 19,15 19,15 19,15 15.5,11.5 15.5,11.5 15.5,11.5 19,8 19,8 z" 
                        Width="7" 
                        Margin="0,4,0,0" 
                        Fill="{DynamicResource {x:Static igDock:DockManagerBrushKeys.LightBrushKey}}">
						<Path.LayoutTransform>
							<RotateTransform Angle="-90"/>
						</Path.LayoutTransform>
					</Path>
					<Path
                        VerticalAlignment="Top"
                        HorizontalAlignment="Center" 
                        Height="10"
                        Stretch="Fill"
                        Opacity="1"
                        Data="M 19,8 C19,8 19,15 19,15 19,15 15.5,11.5 15.5,11.5 15.5,11.5 19,8 19,8 z" 
                        Width="5" 
                        Margin="0,5,0,0" 
                        Fill="{DynamicResource {x:Static igDock:DockManagerBrushKeys.DockingIndicatorGlyphFillKey}}">
						<Path.LayoutTransform>
							<RotateTransform Angle="-90"/>
						</Path.LayoutTransform>
					</Path>
				</Grid>
			</igWindows:CardPanel>


			<!-- Left Indicator -->
			<igWindows:CardPanel Grid.Column="0" Grid.Row="1" 
                 x:Name="PART_DockLeft" Background="Transparent" Opacity="0.75">
				<Grid Width="34" Height="35" x:Name="leftIndicatorIcon" IsEnabled="{TemplateBinding CanDockLeft}">
					<Border x:Name="leftIndicatorIconShadow" Background="{DynamicResource {x:Static igDock:DockManagerBrushKeys.LightBrushKey}}" CornerRadius="4,0,0,4" Margin="0,0,17,0" SnapsToDevicePixels="True"/>
					<Rectangle x:Name="leftIndicatorIconCenterAndOuterBorder" Fill="{DynamicResource {x:Static igDock:DockManagerBrushKeys.AeroDockingIndicatorGroupNormalCenterFillKey}}" Stroke="{DynamicResource {x:Static igDock:DockManagerBrushKeys.AeroDockingIndicatorGroupNormalOuterBorderFillKey}}" RadiusX="3" RadiusY="3" Margin="2,2,0,2" SnapsToDevicePixels="True" />
					<Rectangle x:Name="leftIndicatorIconInnerBorder" Stroke="{DynamicResource {x:Static igDock:DockManagerBrushKeys.AeroDockingIndicatorGroupNormalInnerBorderFillKey}}" Margin="3,3,1,3" RadiusX="2" RadiusY="2" SnapsToDevicePixels="True" />
					<Path
                        VerticalAlignment="Center"
                        HorizontalAlignment="Right" 
                        Height="12"
                        Stretch="Fill"
                        Opacity="1"
                        Data="M 19,8 C19,8 19,15 19,15 19,15 15.5,11.5 15.5,11.5 15.5,11.5 19,8 19,8 z" 
                        Width="7" 
                        Margin="0,0,4,0" 
                        Fill="{DynamicResource {x:Static igDock:DockManagerBrushKeys.LightBrushKey}}"/>
					<Path
                        VerticalAlignment="Center"
                        HorizontalAlignment="Right" 
                        Height="10"
                        Stretch="Fill"
                        Opacity="1"
                        Data="M 19,8 C19,8 19,15 19,15 19,15 15.5,11.5 15.5,11.5 15.5,11.5 19,8 19,8 z" 
                        Width="5" 
                        Margin="0,0,5,0" 
                        Fill="{DynamicResource {x:Static igDock:DockManagerBrushKeys.DockingIndicatorGlyphFillKey}}"/>
				</Grid>
			</igWindows:CardPanel>


			<!-- Right Indicator -->
			<igWindows:CardPanel Grid.Column="2" Grid.Row="1" 
                 x:Name="PART_DockRight" Background="Transparent" Opacity="0.75">
				<Grid Width="34" Height="35" x:Name="rightIndicatorIcon" IsEnabled="{TemplateBinding CanDockRight}">
					<Border x:Name="rightIndicatorIconShadow" Background="{DynamicResource {x:Static igDock:DockManagerBrushKeys.LightBrushKey}}" CornerRadius="0,4,4,0" Margin="17,0,0,0" SnapsToDevicePixels="True"/>
					<Rectangle x:Name="rightIndicatorIconCenterAndOuterBorder" Fill="{DynamicResource {x:Static igDock:DockManagerBrushKeys.AeroDockingIndicatorGroupNormalCenterFillKey}}" Stroke="{DynamicResource {x:Static igDock:DockManagerBrushKeys.AeroDockingIndicatorGroupNormalOuterBorderFillKey}}" RadiusX="3" RadiusY="3" Margin="0,2,2,2" SnapsToDevicePixels="True" />
					<Rectangle x:Name="rightIndicatorIconInnerBorder" Stroke="{DynamicResource {x:Static igDock:DockManagerBrushKeys.AeroDockingIndicatorGroupNormalInnerBorderFillKey}}" Margin="1,3,3,3" RadiusX="2" RadiusY="2" SnapsToDevicePixels="True" />
					<Path
                        VerticalAlignment="Center"
                        HorizontalAlignment="Left" 
                        Height="12"
                        Stretch="Fill"
                        Opacity="1"
                        Data="M 19,8 C19,8 19,15 19,15 19,15 15.5,11.5 15.5,11.5 15.5,11.5 19,8 19,8 z" 
                        Width="7" 
                        Margin="4,0,0,0" 
                        Fill="{DynamicResource {x:Static igDock:DockManagerBrushKeys.LightBrushKey}}">
						<Path.LayoutTransform>
							<RotateTransform Angle="180"/>
						</Path.LayoutTransform>
					</Path>
					<Path
                        VerticalAlignment="Center"
                        HorizontalAlignment="Left" 
                        Height="10"
                        Stretch="Fill"
                        Opacity="1"
                        Data="M 19,8 C19,8 19,15 19,15 19,15 15.5,11.5 15.5,11.5 15.5,11.5 19,8 19,8 z" 
                        Width="5" 
                        Margin="5,0,0,0" 
                        Fill="{DynamicResource {x:Static igDock:DockManagerBrushKeys.DockingIndicatorGlyphFillKey}}">
						<Path.LayoutTransform>
							<RotateTransform Angle="180"/>
						</Path.LayoutTransform>
					</Path>
				</Grid>
			</igWindows:CardPanel>

			<!-- Center Indicator -->
			<igWindows:CardPanel Grid.Column="1" Grid.Row="1" 
                     x:Name="center"
                     Background="Transparent"
                     IsHitTestVisible="False"
                     Opacity="0.75">
				<Grid IsEnabled="{TemplateBinding CanDockCenter}"
                    Width="31" Height="30"
                    HorizontalAlignment="Center" VerticalAlignment="Center">
					<Path
				        Margin="21,26,0,0"
				        HorizontalAlignment="Left"
				        VerticalAlignment="Top"
				        Height="4"
				        Width="8"
				        Stretch="Fill"
				        Opacity="1"
				        Data="M 21,26 C21,26 21,28.625 21,28.625 21,29.3843994140625 21.44769287109375,30 22,30 22,30 27.1875,30 27.1875,30 27.73980712890625,30 29,29.0718994140625 29,28.3125 29,28.3125 29,26 29,26 29,26 21,26 21,26 z"
				        Stroke="{DynamicResource {x:Static igDock:DockManagerBrushKeys.AeroDockingIndicatorGroupNormalOuterBorderFillKey}}"
				        StrokeThickness="1"
                        Fill="{DynamicResource {x:Static igDock:DockManagerBrushKeys.AeroDockingIndicatorGroupNormalInnerBorderFillKey}}"
                        SnapsToDevicePixels="True"/>
					<Path
				        Margin="13,26,0,0"
				        HorizontalAlignment="Left" VerticalAlignment="Top"
				        Height="4" Width="9"
				        Stretch="Fill"
				        Opacity="1"
				        Data="M 13,26 C13,26 13,28.625 13,28.625 13,29.3843994140625 13.503662109375,30 14.125,30 14.125,30 20.875,30 20.875,30 21.496337890625,30 22,29.3843994140625 22,28.625 22,28.625 22,26 22,26 22,26 13,26 13,26 z"
				        Stroke="{DynamicResource {x:Static igDock:DockManagerBrushKeys.AeroDockingIndicatorGroupNormalOuterBorderFillKey}}"
				        StrokeThickness="1"
                        Fill="{DynamicResource {x:Static igDock:DockManagerBrushKeys.AeroDockingIndicatorGroupNormalInnerBorderFillKey}}"
                        SnapsToDevicePixels="True"/>
					<Path
                        x:Name="centerIndicatorIconCenterAndOuterBorder"
				        Margin="0,0,0,0"
				        HorizontalAlignment="Left"
				        VerticalAlignment="Top"
				        Height="30"
				        Width="31"
				        Stretch="Fill"
				        Opacity="1"
				        Data="M 2.70001220703125,0 C1.20880126953125,0 0,1.20880126953125 0,2.70001220703125 0,2.70001220703125 0,28.375 0,28.375 0,29.2724609375 0.7275390625,30 1.625,30 1.625,30 11.375,30 11.375,30 12.2724609375,30 13,29.2724609375 13,28.375 13,28.375 13,27 13,27 13,27 28.29998779296875,27 28.29998779296875,27 29.79119873046875,27 31,25.79119873046875 31,24.29998779296875 31,24.29998779296875 31,2.70001220703125 31,2.70001220703125 31,1.20880126953125 29.79119873046875,0 28.29998779296875,0 28.29998779296875,0 2.70001220703125,0 2.70001220703125,0 z"
				        Stroke="{DynamicResource {x:Static igDock:DockManagerBrushKeys.AeroDockingIndicatorGroupNormalOuterBorderFillKey}}"
				        StrokeThickness="1"
                        Fill="{DynamicResource {x:Static igDock:DockManagerBrushKeys.AeroDockingIndicatorGroupNormalCenterFillKey}}"
                        SnapsToDevicePixels="True"/>
					<Path
				        Margin="1,1,0,0"
				        HorizontalAlignment="Left"
				        VerticalAlignment="Top"
				        Height="28"
				        Width="29"
				        Stretch="Fill"
				        Opacity="1"
				        Data="M 3.52581787109375,1 C2.13079833984375,1 1,2.12823486328125 1,3.52001953125 1,3.52001953125 1,27.48333740234375 1,27.48333740234375 1,28.320953369140625 1.68060302734375,29 2.5201416015625,29 2.5201416015625,29 11.64111328125,29 11.64111328125,29 12.480712890625,29 13.161285400390625,26.20001220703125 13.161285400390625,26.20001220703125 13.161285400390625,26.20001220703125 27.47418212890625,26.20001220703125 27.47418212890625,26.20001220703125 28.869140625,26.20001220703125 30,25.07177734375 30,23.67999267578125 30,23.67999267578125 30,3.52001953125 30,3.52001953125 30,2.12823486328125 28.869140625,1 27.47418212890625,1 27.47418212890625,1 3.52581787109375,1 3.52581787109375,1 z"
				        Stroke="{DynamicResource {x:Static igDock:DockManagerBrushKeys.AeroDockingIndicatorGroupNormalInnerBorderFillKey}}"
				        StrokeThickness="1" 
                        SnapsToDevicePixels="True"/>
				</Grid>


			</igWindows:CardPanel>
		</Grid>
		<ControlTemplate.Triggers>
			<Trigger Property="HotTrackPosition" Value="Center">
				<Setter Property="Opacity" TargetName="IndicatorGroupBackground" Value="1" />
				<Setter Property="Opacity" TargetName="center" Value="1" />
				<Setter TargetName="centerIndicatorIconCenterAndOuterBorder" Property="Stroke" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.AeroDockingIndicatorGroupHottrackOuterBorderFillKey}}" />
				<Setter TargetName="centerIndicatorIconCenterAndOuterBorder" Property="Fill" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.AeroDockingIndicatorGroupHottrackCenterFillKey}}" />
			</Trigger>
			<Trigger Property="HotTrackPosition" Value="Left">
				<Setter Property="Opacity" TargetName="PART_DockLeft" Value="1" />
				<Setter TargetName="leftIndicatorIconCenterAndOuterBorder" Property="Stroke" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.AeroDockingIndicatorGroupHottrackOuterBorderFillKey}}" />
				<Setter TargetName="leftIndicatorIconCenterAndOuterBorder" Property="Fill" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.AeroDockingIndicatorGroupHottrackCenterFillKey}}" />
				<Setter TargetName="leftIndicatorIconInnerBorder" Property="Stroke" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.AeroDockingIndicatorGroupHottrackInnerBorderFillKey}}" />
			</Trigger>
			<Trigger Property="HotTrackPosition" Value="Right">
				<Setter Property="Opacity" TargetName="PART_DockRight" Value="1" />
				<Setter TargetName="rightIndicatorIconCenterAndOuterBorder" Property="Stroke" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.AeroDockingIndicatorGroupHottrackOuterBorderFillKey}}" />
				<Setter TargetName="rightIndicatorIconCenterAndOuterBorder" Property="Fill" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.AeroDockingIndicatorGroupHottrackCenterFillKey}}" />
				<Setter TargetName="rightIndicatorIconInnerBorder" Property="Stroke" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.AeroDockingIndicatorGroupHottrackInnerBorderFillKey}}" />
			</Trigger>
			<Trigger Property="HotTrackPosition" Value="Top">
				<Setter Property="Opacity" TargetName="PART_DockTop" Value="1" />
				<Setter TargetName="topIndicatorIconCenterAndOuterBorder" Property="Stroke" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.AeroDockingIndicatorGroupHottrackOuterBorderFillKey}}" />
				<Setter TargetName="topIndicatorIconCenterAndOuterBorder" Property="Fill" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.AeroDockingIndicatorGroupHottrackCenterFillKey}}" />
				<Setter TargetName="topIndicatorIconInnerBorder" Property="Stroke" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.AeroDockingIndicatorGroupHottrackInnerBorderFillKey}}" />
			</Trigger>
			<Trigger Property="HotTrackPosition" Value="Bottom">
				<Setter Property="Opacity" TargetName="PART_DockBottom" Value="1" />
				<Setter TargetName="bottomIndicatorIconCenterAndOuterBorder" Property="Stroke" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.AeroDockingIndicatorGroupHottrackOuterBorderFillKey}}" />
				<Setter TargetName="bottomIndicatorIconCenterAndOuterBorder" Property="Fill" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.AeroDockingIndicatorGroupHottrackCenterFillKey}}" />
				<Setter TargetName="bottomIndicatorIconInnerBorder" Property="Stroke" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.AeroDockingIndicatorGroupHottrackInnerBorderFillKey}}" />
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>


	<!-- ========== dropPreviewTabBottom ========== -->
	<ControlTemplate x:Key="dropPreviewTabBottom" TargetType="{x:Type Control}">
		<Grid>
			<Grid.RowDefinitions>
				<!-- We want to make sure a pixel of the body remains visible -->
				<RowDefinition Height="*" MinHeight="4" />
				<!-- We want the majority of the space going to the tab section but it needs to be able to resize smaller -->
				<RowDefinition Height="4*" MaxHeight="24" />
			</Grid.RowDefinitions>
			<Border Grid.Row="0" BorderThickness="3,3,3,0" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" />
			<Grid Grid.Row="1">
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="*" MaxWidth="6"/>
					<ColumnDefinition Width="10*" MaxWidth="46" />
					<ColumnDefinition Width="*" />
				</Grid.ColumnDefinitions>
				<Border BorderThickness="0,3,0,0" Grid.Column="0" BorderBrush="{TemplateBinding BorderBrush}"/>
				<Border BorderThickness="3,0,3,3" Grid.Column="1" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" />
				<Border BorderThickness="0,3,0,0" Grid.Column="2" BorderBrush="{TemplateBinding BorderBrush}" />
			</Grid>
		</Grid>
	</ControlTemplate>


	<!-- ========== dropPreviewTabTop ========== -->
	<ControlTemplate x:Key="dropPreviewTabTop" TargetType="{x:Type Control}">
		<Grid>
			<Grid.RowDefinitions>
				<!-- We want the majority of the space going to the tab section but it needs to be able to resize smaller -->
				<RowDefinition Height="4*" MaxHeight="24" />
				<!-- We want to make sure a pixel of the body remains visible -->
				<RowDefinition Height="*" MinHeight="4" />
			</Grid.RowDefinitions>
			<Border Grid.Row="1" BorderThickness="3,0,3,3" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" />
			<Grid Grid.Row="0">
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="*" MaxWidth="6"/>
					<ColumnDefinition Width="10*" MaxWidth="46" />
					<ColumnDefinition Width="*" />
				</Grid.ColumnDefinitions>
				<Border BorderThickness="0,0,0,3" Grid.Column="0" BorderBrush="{TemplateBinding BorderBrush}"/>
				<Border BorderThickness="3,3,3,0" Grid.Column="1" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" />
				<Border BorderThickness="0,0,0,3" Grid.Column="2" BorderBrush="{TemplateBinding BorderBrush}" />
			</Grid>
		</Grid>
	</ControlTemplate>


	<!-- ========== dropPreviewTabRight ========== -->
	<ControlTemplate x:Key="dropPreviewTabRight" TargetType="{x:Type Control}">
		<Grid>
			<Grid.ColumnDefinitions>
				<!-- We want to make sure a pixel of the body remains visible -->
				<ColumnDefinition Width="*" MinWidth="4" />
				<!-- We want the majority of the space going to the tab section but it needs to be able to resize smaller -->
				<ColumnDefinition Width="4*" MaxWidth="24" />
			</Grid.ColumnDefinitions>
			<Border Grid.Column="0" BorderThickness="3,3,0,3" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" />
			<Grid Grid.Column="1">
				<Grid.RowDefinitions>
					<RowDefinition Height="*" MaxHeight="6"/>
					<RowDefinition Height="10*" MaxHeight="46" />
					<RowDefinition Height="*" />
				</Grid.RowDefinitions>
				<Border BorderThickness="3,0,0,0" Grid.Row="0" BorderBrush="{TemplateBinding BorderBrush}"/>
				<Border BorderThickness="0,3,3,3" Grid.Row="1" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" />
				<Border BorderThickness="3,0,0,0" Grid.Row="2" BorderBrush="{TemplateBinding BorderBrush}" />
			</Grid>
		</Grid>
	</ControlTemplate>


	<!-- ========== dropPreviewTabLeft ========== -->
	<ControlTemplate x:Key="dropPreviewTabLeft" TargetType="{x:Type Control}">
		<Grid>
			<Grid.ColumnDefinitions>
				<!-- We want the majority of the space going to the tab section but it needs to be able to resize smaller -->
				<ColumnDefinition Width="4*" MaxWidth="24" />
				<!-- We want to make sure a pixel of the body remains visible -->
				<ColumnDefinition Width="*" MinWidth="4" />
			</Grid.ColumnDefinitions>
			<Border Grid.Column="1" BorderThickness="0,3,3,3" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" />
			<Grid Grid.Column="0">
				<Grid.RowDefinitions>
					<RowDefinition Height="*" />
					<RowDefinition Height="10*" MaxHeight="46" />
					<RowDefinition Height="*" MaxHeight="6"/>
				</Grid.RowDefinitions>
				<Border BorderThickness="0,0,3,0" Grid.Row="0" BorderBrush="{TemplateBinding BorderBrush}"/>
				<Border BorderThickness="3,3,0,3" Grid.Row="1" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" />
				<Border BorderThickness="0,0,3,0" Grid.Row="2" BorderBrush="{TemplateBinding BorderBrush}" />
			</Grid>
		</Grid>
	</ControlTemplate>


	<!-- <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<< -->
	<!--          Shared Values [End]         -->
	<!-- <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<< -->




	<!-- >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> -->
	<!--    ResourceKey Templates [Start]     -->
	<!-- >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> -->


	<!-- ========== DockableTabItemTemplate ========== -->
	<ControlTemplate x:Key="{x:Static igDock:PaneTabItem.DockableTabItemTemplateKey}" TargetType="{x:Type igDock:PaneTabItem}">
		<Border x:Name="ctrlBorder" SnapsToDevicePixels="true">
			<igWindows:CardPanel>
				<igWindows:CardPanel x:Name="Background">
					<Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="Auto" Height="Auto">
                        <!-- AS 1/6/10 TFS25270 - TemplateBind the background and borderbrush instead of setting here and in triggers for base color. -->
						<Border x:Name="Border" 
                                Margin="0,0,0,0" 
                                Background="{TemplateBinding Background}" 
                                BorderBrush="{TemplateBinding BorderBrush}" 
                                BorderThickness="1,0,1,1" 
                                SnapsToDevicePixels="True"/>
						<Rectangle x:Name="CurvedEdgesEffect" Margin="0,0,0,0" Fill="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedListActiveBottomCenterFillKey}}" VerticalAlignment="Top" Height="1" Visibility="Collapsed" SnapsToDevicePixels="True"/>
                        <Rectangle x:Name="firstTabCloseGap" Margin="0,-3,0,0" Stroke="{x:Null}" Width="1" Height="4" Fill="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedListNotActiveOuterBorderFillKey}}" HorizontalAlignment="Left" VerticalAlignment="Top"  Visibility="Collapsed" SnapsToDevicePixels="True"/>
						<Border x:Name="HighlightBorder" 
								Margin="1,0,1,1"
                                BorderBrush="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedListNotActiveInnerBorderFillKey}}" 
                                BorderThickness="1,0,1,1"
                                SnapsToDevicePixels="True"/>
					</Grid>
				</igWindows:CardPanel>
				<Border x:Name="Content"
					BorderThickness="{TemplateBinding BorderThickness}" 
					Padding="{TemplateBinding Padding}">
					<DockPanel x:Name="contentPanel">
						<igWindows:AutoDisabledImage x:Name="image"
                            Visibility="{Binding Path=Pane.HasImage, Converter={StaticResource BoolToVisConverter}, RelativeSource={x:Static RelativeSource.TemplatedParent}}"
                            DockPanel.Dock="Left"
                            Margin="0,0,2,0"
                            Stretch="None"
                            Source="{Binding Path=Pane.Image, RelativeSource={x:Static RelativeSource.TemplatedParent}}" />
						<ContentPresenter 
                            x:Name="contentHeader"
							ContentSource="Header" 
							SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
							RecognizesAccessKey="true" 
							HorizontalAlignment="{Binding Path=HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" 
							VerticalAlignment="{Binding Path=VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"
						    igWindows:ClippedTextToolTipService.ShowToolTipWhenClipped="True"
							igWindows:ClippedTextToolTipService.AncestorTypeForToolTip="{x:Type ContentControl}"
                            igWindows:ClippedTextToolTipService.ToolTipStyleKey="{x:Static igDock:XamDockManager.ToolTipStyleKey}"
                            TextElement.Foreground="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedListNotActiveTextFillKey}}"/>
					</DockPanel>
				</Border>
			</igWindows:CardPanel>
		</Border>
		<ControlTemplate.Triggers>
            
			<Trigger Property="TabStripPlacement" Value="Top">
                <Setter TargetName="ctrlBorder" Property="Margin" Value="0,2,0,0"/>
				<Setter Property="Foreground" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedListNotActiveTextFillKey}}" />
				<Setter Property="Padding" Value="3,3,4,1" />
                <Setter Property="Margin" Value="0,0,-1,0" />
                <Setter TargetName="Border" Property="BorderThickness" Value="1,1,1,0"/>
                <!-- AS 1/6/10 TFS25270 Moved to style trigger
                <Setter TargetName="Border" Property="Background" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedListNotActiveTopCenterFillKey}}"/>-->
                <Setter TargetName="CurvedEdgesEffect" Property="VerticalAlignment" Value="Bottom"/>
                <Setter TargetName="HighlightBorder" Property="BorderThickness" Value="1,1,1,0"/>
                <Setter TargetName="HighlightBorder" Property="Margin" Value="1,1,1,0"/>
            </Trigger>
			<Trigger Property="TabStripPlacement" Value="Bottom">
                <Setter TargetName="ctrlBorder" Property="Margin" Value="0,0,0,2"/>
				<Setter Property="Foreground" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedListNotActiveTextFillKey}}" />
				<Setter Property="Padding" Value="3,1,4,3" />
                <Setter Property="Margin" Value="0,0,-1,0" />
			</Trigger>
			<Trigger Property="TabStripPlacement" Value="Left">
                <Setter TargetName="ctrlBorder" Property="Margin" Value="2,0,0,0"/>
				<Setter Property="Foreground" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedListNotActiveTextFillKey}}" />
				<Setter Property="Padding" Value="3,3,4,1" />
                <Setter Property="Margin" Value="0,-1,0,0" />
				<Setter TargetName="Border" Property="BorderThickness" Value="1,1,0,1"/>
                <!-- AS 1/6/10 TFS25270 Moved to style trigger
                <Setter TargetName="Border" Property="Background" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedListNotActiveLeftCenterFillKey}}"/>-->
                <Setter TargetName="CurvedEdgesEffect" Property="VerticalAlignment" Value="Stretch"/>
                <Setter TargetName="CurvedEdgesEffect" Property="HorizontalAlignment" Value="Right"/>
                <Setter TargetName="CurvedEdgesEffect" Property="Height" Value="Auto"/>
                <Setter TargetName="CurvedEdgesEffect" Property="Width" Value="1"/>
                <Setter TargetName="HighlightBorder" Property="BorderThickness" Value="1,1,0,1"/>
                <Setter TargetName="HighlightBorder" Property="Margin" Value="1,1,0,1"/>
				<Setter Property="LayoutTransform" TargetName="Content">
					<Setter.Value>
						<RotateTransform Angle="-90" />
					</Setter.Value>
				</Setter>
			</Trigger>
            
			<Trigger Property="TabStripPlacement" Value="Right">
                <Setter TargetName="ctrlBorder" Property="Margin" Value="0,0,2,0"/>
				<Setter Property="Foreground" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedListNotActiveTextFillKey}}" />
				<Setter Property="Padding" Value="3,3,4,1" />
                <Setter Property="Margin" Value="0,0,0,-1" />
				<Setter TargetName="Border" Property="BorderThickness" Value="0,1,1,1"/>
                <!-- AS 1/6/10 TFS25270 Moved to style trigger
                <Setter TargetName="Border" Property="Background" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedListNotActiveRightCenterFillKey}}"/>-->
                <Setter TargetName="CurvedEdgesEffect" Property="VerticalAlignment" Value="Stretch"/>
                <Setter TargetName="CurvedEdgesEffect" Property="HorizontalAlignment" Value="Left"/>
                <Setter TargetName="CurvedEdgesEffect" Property="Height" Value="Auto"/>
                <Setter TargetName="CurvedEdgesEffect" Property="Width" Value="1"/>
                <Setter TargetName="HighlightBorder" Property="BorderThickness" Value="0,1,1,1"/>
                <Setter TargetName="HighlightBorder" Property="Margin" Value="0,1,1,1"/>
				<Setter Property="LayoutTransform" TargetName="Content">
					<Setter.Value>
						<RotateTransform Angle="90" />
					</Setter.Value>
				</Setter>
			</Trigger>

            <Trigger Property="IsSelected" Value="true">
                <Setter TargetName="contentHeader" Property="TextElement.Foreground" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedListActiveTextFillKey}}" />
                <Setter Property="Panel.ZIndex" Value="1" />
                <Setter Property="Visibility" TargetName="CurvedEdgesEffect" Value="Visible" />
                <Setter Property="Visibility" TargetName="HighlightBorder" Value="Collapsed" />
                <!-- AS 1/6/10 TFS25270 Removed TargetName="Border" so we use the template properties -->
                <Setter Property="Background" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedListActiveBottomCenterFillKey}}" />
                <Setter Property="BorderBrush" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedListActiveOuterBorderFillKey}}" />
            </Trigger>

            <!-- ==================== IsMouseOverTab + TabStripPlacement ==================== -->
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOverTab" Value="True" />
                    <Condition Property="TabStripPlacement" Value="Bottom" />
                    <Condition Property="IsSelected" Value="False"/>
                </MultiTrigger.Conditions>
                <!-- AS 1/6/10 TFS25270 Removed TargetName="Border" so we use the template properties -->
                <Setter Property="Background" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedListHottrackBottomCenterFillKey}}" />
                <Setter Property="BorderBrush" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedListHottrackOuterBorderFillKey}}" />
            </MultiTrigger>

            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOverTab" Value="True" />
                    <Condition Property="TabStripPlacement" Value="Top" />
                    <Condition Property="IsSelected" Value="False"/>
                </MultiTrigger.Conditions>
                <!-- AS 1/6/10 TFS25270 Removed TargetName="Border" so we use the template properties -->
                <Setter Property="Background" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedListHottrackTopCenterFillKey}}" />
                <Setter Property="BorderBrush" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedListHottrackOuterBorderFillKey}}" />
            </MultiTrigger>

            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOverTab" Value="True" />
                    <Condition Property="TabStripPlacement" Value="Left" />
                    <Condition Property="IsSelected" Value="False"/>
                </MultiTrigger.Conditions>
                <!-- AS 1/6/10 TFS25270 Removed TargetName="Border" so we use the template properties -->
                <Setter Property="Background" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedListHottrackLeftCenterFillKey}}" />
                <Setter Property="BorderBrush" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedListHottrackOuterBorderFillKey}}" />
            </MultiTrigger>

            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOverTab" Value="True" />
                    <Condition Property="TabStripPlacement" Value="Right" />
                    <Condition Property="IsSelected" Value="False"/>
                </MultiTrigger.Conditions>
                <!-- AS 1/6/10 TFS25270 Removed TargetName="Border" so we use the template properties -->
                <Setter Property="Background" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedListHottrackRightCenterFillKey}}" />
                <Setter Property="BorderBrush" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedListHottrackOuterBorderFillKey}}" />
            </MultiTrigger>

            <Trigger Property="IsEnabled" Value="false">
				<Setter Property="Foreground" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.GrayTextBrushKey}}" />
			</Trigger>
            
            
            <!-- ==================== IsSelected + TabStripPlacement ==================== -->
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsSelected" Value="True" />
                    <Condition Property="TabStripPlacement" Value="Bottom" />
                </MultiTrigger.Conditions>
                <Setter TargetName="contentHeader" Property="TextElement.Foreground" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedListActiveTextFillKey}}" />
                <Setter Property="Margin" Value="-1,-1,-2,-2" />
                <Setter Property="Padding" Value="4,0,5,0" />
            </MultiTrigger>

            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsSelected" Value="True" />
                    <Condition Property="TabStripPlacement" Value="Top" />
                </MultiTrigger.Conditions>
                <!-- AS 1/6/10 TFS25270 Removed TargetName="Border" so we use the template properties -->
                <Setter Property="Background" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedListActiveTopCenterFillKey}}" />
                <Setter Property="Margin" Value="-1,-2,-2,-1" />
                <Setter Property="Padding" Value="4,3,5,0" />
            </MultiTrigger>

            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsSelected" Value="True" />
                    <Condition Property="TabStripPlacement" Value="Left" />
                </MultiTrigger.Conditions>
                <!-- AS 1/6/10 TFS25270 Removed TargetName="Border" so we use the template properties -->
                <Setter Property="Background" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedListActiveLeftCenterFillKey}}" />
                <Setter Property="Margin" Value="-2,-2,-1,-1" />
                <Setter Property="Padding" Value="4,3,5,0" />
            </MultiTrigger>

            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsSelected" Value="True" />
                    <Condition Property="TabStripPlacement" Value="Right" />
                </MultiTrigger.Conditions>
                <!-- AS 1/6/10 TFS25270 Removed TargetName="Border" so we use the template properties -->
                <Setter Property="Background" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedListActiveRightCenterFillKey}}" />
                <Setter Property="Margin" Value="-1,-1,-2,-2" />
                <Setter Property="Padding" Value="4,3,5,0" />
            </MultiTrigger>


            <!-- ========== If this is the First Tab in the series ========== -->
			<MultiTrigger>
				<MultiTrigger.Conditions>
					<Condition Property="igWindows:TabItemPanel.IsFirstTabInRow" Value="True" />
				</MultiTrigger.Conditions>
                <Setter Property="Padding" Value="3,1,5,3" />
                <Setter Property="Margin" Value="-2,0,-1,0" />
			</MultiTrigger>
            
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsSelected" Value="False" />
                    <Condition Property="igWindows:TabItemPanel.IsFirstTabInRow" Value="True" />
                    <Condition Property="TabStripPlacement" Value="Bottom" />
                </MultiTrigger.Conditions>
                <Setter TargetName="contentHeader" Property="TextElement.Foreground" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedListNotActiveTextFillKey}}" />
                <Setter Property="Padding" Value="3,1,5,3" />
                <Setter Property="Margin" Value="-2,0,-1,0" />
            </MultiTrigger>
            
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsSelected" Value="False" />
                    <Condition Property="igWindows:TabItemPanel.IsFirstTabInRow" Value="True" />
                    <Condition Property="TabStripPlacement" Value="Top" />
                </MultiTrigger.Conditions>
                <Setter TargetName="contentHeader" Property="TextElement.Foreground" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedListNotActiveTextFillKey}}" />
                <Setter Property="Padding" Value="3,3,5,1" />
                <Setter Property="Margin" Value="-2,0,-1,0" />
            </MultiTrigger>
            
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsSelected" Value="False" />
                    <Condition Property="igWindows:TabItemPanel.IsFirstTabInRow" Value="True" />
                    <Condition Property="TabStripPlacement" Value="Left" />
                </MultiTrigger.Conditions>
                <Setter TargetName="contentHeader" Property="TextElement.Foreground" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedListNotActiveTextFillKey}}" />
                <Setter Property="Padding" Value="3,3,5,0" />
                <Setter Property="Margin" Value="0,-1,0,-2" />
            </MultiTrigger>
            
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsSelected" Value="False" />
                    <Condition Property="igWindows:TabItemPanel.IsFirstTabInRow" Value="True" />
                    <Condition Property="TabStripPlacement" Value="Right" />
                </MultiTrigger.Conditions>
                <Setter TargetName="contentHeader" Property="TextElement.Foreground" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedListNotActiveTextFillKey}}" />
                <Setter Property="Padding" Value="3,3,5,0" />
                <Setter Property="Margin" Value="0,-2,0,-1" />
            </MultiTrigger>
            
            
            
            
            <!-- ========== If this is the First Tab and Selected in the series ========== -->
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsSelected" Value="True" />
                    <Condition Property="igWindows:TabItemPanel.IsFirstTabInRow" Value="True" />
                    <Condition Property="TabStripPlacement" Value="Bottom" />
                </MultiTrigger.Conditions>
                <Setter Property="Padding" Value="3,0,5,0" />
                <Setter Property="Margin" Value="-2,-1,-1,-2" />
                <Setter Property="Visibility" TargetName="firstTabCloseGap" Value="Visible" />
                <Setter Property="Visibility" TargetName="CurvedEdgesEffect" Value="Visible" />
                <Setter TargetName="contentHeader" Property="TextElement.Foreground" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedListActiveTextFillKey}}" />
            </MultiTrigger>
            
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsSelected" Value="True" />
                    <Condition Property="igWindows:TabItemPanel.IsFirstTabInRow" Value="True" />
                    <Condition Property="TabStripPlacement" Value="Top" />
                </MultiTrigger.Conditions>
                <Setter Property="Padding" Value="3,3,5,0" />
                <Setter Property="Margin" Value="-2,-2,-1,-1" />
                <Setter Property="Visibility" TargetName="firstTabCloseGap" Value="Visible" />
                <Setter Property="VerticalAlignment" TargetName="firstTabCloseGap" Value="Bottom" />
                <Setter Property="HorizontalAlignment" TargetName="firstTabCloseGap" Value="Left" />
                <Setter Property="Margin" TargetName="firstTabCloseGap" Value="0,0,0,-2" />
                <Setter Property="Width" TargetName="firstTabCloseGap" Value="1" />
                <Setter Property="Height" TargetName="firstTabCloseGap" Value="4" />
                <Setter Property="Visibility" TargetName="CurvedEdgesEffect" Value="Visible" />
                <Setter Property="VerticalAlignment" TargetName="CurvedEdgesEffect" Value="Bottom"/>
                <Setter Property="Margin" TargetName="CurvedEdgesEffect" Value="1,0,0,0"/>
                <Setter TargetName="contentHeader" Property="TextElement.Foreground" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedListActiveTextFillKey}}" />
            </MultiTrigger>
            
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsSelected" Value="True" />
                    <Condition Property="igWindows:TabItemPanel.IsFirstTabInRow" Value="True" />
                    <Condition Property="TabStripPlacement" Value="Left" />
                </MultiTrigger.Conditions>
                <Setter Property="Padding" Value="3,3,5,0" />
                <Setter Property="Margin" Value="-2,-1,-1,-2" />
                <Setter Property="Visibility" TargetName="firstTabCloseGap" Value="Visible" />
                <Setter Property="VerticalAlignment" TargetName="firstTabCloseGap" Value="Bottom" />
                <Setter Property="HorizontalAlignment" TargetName="firstTabCloseGap" Value="Right" />
                <Setter Property="Height" TargetName="firstTabCloseGap" Value="1" />
                <Setter Property="Width" TargetName="firstTabCloseGap" Value="3" />
                <Setter Property="Margin" TargetName="firstTabCloseGap" Value="0,0,-2,0" />
                <Setter Property="Margin" TargetName="CurvedEdgesEffect" Value="0,0,0,1"/>
                <Setter Property="Visibility" TargetName="CurvedEdgesEffect" Value="Visible" />
                <Setter TargetName="contentHeader" Property="TextElement.Foreground" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedListActiveTextFillKey}}" />
            </MultiTrigger>
            
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsSelected" Value="True" />
                    <Condition Property="igWindows:TabItemPanel.IsFirstTabInRow" Value="True" />
                    <Condition Property="TabStripPlacement" Value="Right" />
                </MultiTrigger.Conditions>
                <Setter Property="Padding" Value="3,3,5,0" />
                <Setter Property="Margin" Value="-1,-2,-2,-1" />
                <Setter Property="Visibility" TargetName="firstTabCloseGap" Value="Visible" />
                <Setter Property="Margin" TargetName="firstTabCloseGap" Value="-2,0,0,0" />
                <Setter Property="VerticalAlignment" TargetName="firstTabCloseGap" Value="Top" />
                <Setter Property="HorizontalAlignment" TargetName="firstTabCloseGap" Value="Left" />
                <Setter Property="Height" TargetName="firstTabCloseGap" Value="1" />
                <Setter Property="Width" TargetName="firstTabCloseGap" Value="3" />
                <Setter TargetName="contentHeader" Property="TextElement.Foreground" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedListActiveTextFillKey}}" />
            </MultiTrigger>

            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOverTab" Value="True" />
                    <Condition Property="IsSelected" Value="False"/>
                </MultiTrigger.Conditions>
                <Setter TargetName="contentHeader" Property="TextElement.Foreground" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedListHottrackTextFillKey}}" />
            </MultiTrigger>

        </ControlTemplate.Triggers>
	</ControlTemplate>

	<!-- ========== DocumentTabItemTemplateKey ========== -->
	<ControlTemplate x:Key="{x:Static igDock:PaneTabItem.DocumentTabItemTemplateKey}" TargetType="{x:Type igDock:PaneTabItem}">
		<Border x:Name="Background" Margin="0,0,-10,0">
            <Grid x:Name="TabbedDocumentTab"
                  VerticalAlignment="Stretch" HorizontalAlignment="Stretch">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Grid x:Name="nonSelectedEnd">
                    <Path
                        Margin="0,2,0,0"
		                VerticalAlignment="Stretch"
		                Height="Auto"
		                Stretch="Fill"
		                Opacity="1"
		                Data="M 619,51 C619,51 616,51 616,51 608,51 606,54 606,54 606,54 594,66 594,66 594,66 619,66 619,66 619,66 619,51 619,51 z"
		                Fill="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedDocumentNotActiveOuterBorderFillKey}}" x:Name="nonSelectedOuterBorderSlice" />
                    <Path
		                Margin="1,3,0,0"
		                VerticalAlignment="Stretch"
		                Height="Auto"
		                Stretch="Fill"
		                Opacity="1"
		                Data="M 619,52 C619,52 617,52 617,52 609,52 607,55 607,55 607,55 596,66 596,66 596,66 619,66 619,66 619,66 619,52 619,52 z"
		                Fill="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedDocumentNotActiveInnerBorderFillKey}}" x:Name="nonSelectedInnerBorderSlice" />
                    <!-- AS 1/6/10 TFS25270 - TemplateBind to the background -->
                    <Path
		                Margin="2,3,0,0"
		                VerticalAlignment="Stretch"
		                Height="Auto"
		                Stretch="Fill"
		                Opacity="1"
		                Data="M 619,52 C619,52 618,52 618,52 610,52 608,55 608,55 608,55 597,66 597,66 597,66 619,66 619,66 619,66 619,52 619,52 z"
		                Fill="{TemplateBinding Background}" x:Name="nonSelectedCenterSlice" />
                </Grid>

                <!-- AS 3/5/09 TFS14746
                    selectedEnd was 1 pixel taller than the nonSelectedEnd so I added a negative margin to shift down and offset that pixel
                    I also adjusted the margins for the paths within since they were taller & wider than the non-selected end -->
                <Grid x:Name="selectedEnd" Visibility="Collapsed" Margin="0,0,0,-1">
                    <Path
                        x:Name="selectedOuterBorderSlice"
                        Stretch="Fill"
                        Data="M 490,65 C490,65 518,65 518,65 518,65 518,47 518,47 518,47 515,47 515,47 507,47 505,50 505,50 505,50 490,65 490,65 z"
                        Fill="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedDocumentActiveOuterBorderFillKey}}" SnapsToDevicePixels="True" 
                        Margin="0,0,-3,0"/>
                    <Path
                        x:Name="selectedInnerBorderSlice"
                        Stretch="Fill"
                        Data="M 518,48 C518,48 516,48 516,48 508,48 506,51 506,51 506,51 492,65 492,65 492,65 518,65 518,65 518,65 518,48 518,48 z"
                        Fill="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedDocumentActiveInnerBorderFillKey}}" SnapsToDevicePixels="True" 
                        Margin="1,1,-3,0"/>
                    <!-- AS 1/6/10 TFS25270 
                        TemplateBind to the background & changed margin from 0,1,-2,-2 to 0,1,-2,-1 since it was going too low -->
                    <Path
                        x:Name="selectedCenterSlice"
                        Stretch="Fill"
                        Data="M 492,66 C492,66 518,66 518,66 518,66 518,48 518,48 518,48 517,48 517,48 509,48 507,51 507,51 507,51 492,66 492,66 z" 
                        Fill="{TemplateBinding Background}" SnapsToDevicePixels="True"
                        Margin="0,1,-2,-1"
                        />
                </Grid>
                
                <Border x:Name="HighlightBorder" VerticalAlignment="Stretch" Grid.Column="1" Grid.ColumnSpan="1" 
                        Background="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedDocumentNotActiveInnerBorderFillKey}}" 
                        BorderBrush="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedDocumentNotActiveOuterBorderFillKey}}"
                        BorderThickness="0,1,1,0" CornerRadius="0,3,0,0" Margin="0,2,0,0"/>
                <!-- AS 1/6/10 TFS25270 - TemplateBind to the background -->
                <Border  x:Name="Border"  
                         Background="{TemplateBinding Background}" 
                         CornerRadius="0,1,0,0" Margin="0,3,2,0" VerticalAlignment="Stretch" Grid.Column="1"/>
                <Rectangle x:Name="activebrFiller" Grid.Column="1" Width="1" Height="1" 
                           VerticalAlignment="Bottom" HorizontalAlignment="Right" 
                           Fill="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedDocumentActiveInnerBorderFillKey}}" 
                           Margin="0,0,1,-1" 
                           Visibility="Collapsed"/>
                
				<Border x:Name="Content" Grid.Column="1"
							BorderThickness="{TemplateBinding BorderThickness}" >
					<DockPanel x:Name="ContentDock" Margin="-8,1,6,0" VerticalAlignment="Bottom">
						<igWindows:AutoDisabledImage Visibility="{Binding Path=Pane.HasImage, Converter={StaticResource BoolToVisConverter}, RelativeSource={x:Static RelativeSource.TemplatedParent}}"
                                DockPanel.Dock="Left"
                                Margin="0,0,5,0"
                                Stretch="None"
                                Source="{Binding Path=Pane.Image, RelativeSource={x:Static RelativeSource.TemplatedParent}}" />
						<Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch" x:Name="gdContent">
							<ContentPresenter x:Name="NormalContent"
                        		ContentSource="Header" 
                        		SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                        		RecognizesAccessKey="true"                                       
                        		HorizontalAlignment="Center" 
                        		VerticalAlignment="Center"
                                igWindows:ClippedTextToolTipService.ShowToolTipWhenClipped="True"
								igWindows:ClippedTextToolTipService.AncestorTypeForToolTip="{x:Type ContentControl}"
                                igWindows:ClippedTextToolTipService.ToolTipStyleKey="{x:Static igDock:XamDockManager.ToolTipStyleKey}"
								/>
                            
                            <ContentPresenter x:Name="NormalContentBold"
                        		ContentSource="Header" 
                        		SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                        		RecognizesAccessKey="true"                                       
                        		HorizontalAlignment="Center" 
                        		VerticalAlignment="Center"
                                igWindows:ClippedTextToolTipService.ShowToolTipWhenClipped="True"
								igWindows:ClippedTextToolTipService.AncestorTypeForToolTip="{x:Type ContentControl}"
                                igWindows:ClippedTextToolTipService.ToolTipStyleKey="{x:Static igDock:XamDockManager.ToolTipStyleKey}"
                                TextElement.FontWeight="Bold"
                                Margin="-4,0,-3,0"
                                Visibility="Hidden"/>
						</Grid>
					</DockPanel>
				</Border>
			</Grid>
		</Border>
		<ControlTemplate.Triggers>
            
			<Trigger Property="IsEnabled" Value="false">
				<Setter Property="Foreground" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.GrayTextBrushKey}}" />
			</Trigger>
            
			<Trigger Property="IsMouseOverTab" Value="true">
				<Setter Property="Fill" TargetName="nonSelectedOuterBorderSlice" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedDocumentHottrackOuterBorderFillKey}}" />
				<Setter Property="Fill" TargetName="nonSelectedInnerBorderSlice" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedDocumentHottrackInnerBorderFillKey}}" />
				<!-- AS 1/6/10 TFS25270
                    The center elements bind to the background so we need to change that.
                <Setter Property="Fill" TargetName="nonSelectedCenterSlice" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedDocumentHottrackCenterFillKey}}" />-->
				<Setter Property="BorderBrush" TargetName="HighlightBorder" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedDocumentHottrackOuterBorderFillKey}}"  />
                <Setter Property="Background" TargetName="HighlightBorder" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedDocumentHottrackInnerBorderFillKey}}"  />
				<!-- AS 1/6/10 TFS25270
                <Setter Property="Background" TargetName="Border" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedDocumentHottrackCenterFillKey}}"  />-->
                <Setter Property="Background" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedDocumentHottrackCenterFillKey}}" />
            </Trigger>
            
            <Trigger Property="IsSelected" Value="true">
                <Setter Property="Panel.ZIndex" Value="1" />
                <Setter Property="Visibility" TargetName="activebrFiller" Value="Visible"/>
                <Setter Property="Visibility" TargetName="selectedEnd" Value="Visible"/>
                <Setter Property="Visibility" TargetName="nonSelectedEnd" Value="Collapsed"/>
                <Setter Property="BorderBrush" TargetName="HighlightBorder" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedDocumentActiveOuterBorderFillKey}}"  />
                <Setter Property="Background" TargetName="HighlightBorder" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedDocumentActiveInnerBorderFillKey}}"  />
                <!-- AS 1/6/10 TFS25270
                    The center elements bind to the background so we need to change that.
                <Setter Property="Background" TargetName="Border" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedDocumentActiveCenterFillKey}}"/>-->
                <Setter Property="Background" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedDocumentActiveCenterFillKey}}"/>
                <!-- AS 3/5/09 TFS14746
                    Since this element only is visible when selected we don't need to change the margin
                    so I moved this up into the margin property of the element and adjusted it with the other 
                    elements.
                <Setter Property="Margin" TargetName="selectedCenterSlice" Value="0,1,0,-2" />-->
                <Setter Property="Margin" TargetName="HighlightBorder" Value="-4,0,0,0" />
                <Setter Property="Margin" TargetName="Border" Value="-4,1,2,-2" />
            </Trigger>
            
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsSelected" Value="False"/>
                    <Condition Property="IsMouseOverTab" Value="true"/>
                </MultiTrigger.Conditions>
                <Setter Property="Foreground" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedDocumentHottrackTextFillKey}}" />
            </MultiTrigger>
            
            <DataTrigger Binding="{Binding Path=Pane.IsActiveDocument, RelativeSource={x:Static RelativeSource.Self}}" Value="True">
				<Setter Property="Visibility" TargetName="NormalContent" Value="Hidden" />
                <Setter Property="Visibility" TargetName="NormalContentBold" Value="Visible" />
			</DataTrigger>

			<!-- ========== TAB PLACEMENT : BOTTOM ========== -->
			<Trigger Property="TabStripPlacement" Value="Bottom">
				<Setter Property="LayoutTransform">
					<Setter.Value>
						<ScaleTransform ScaleY="-1" />
					</Setter.Value>
				</Setter>
				<Setter Property="LayoutTransform" TargetName="ContentDock">
					<Setter.Value>
						<ScaleTransform ScaleY="-1" />
					</Setter.Value>
				</Setter>
			</Trigger>

			<!-- ========== TAB PLACEMENT : LEFT ========== -->
			<Trigger Property="TabStripPlacement" Value="Left">
				<Setter Property="LayoutTransform">
					<Setter.Value>
						<RotateTransform Angle="-90"/>
					</Setter.Value>
				</Setter>
			</Trigger>

			<!-- ========== TAB PLACEMENT : RIGHT ========== -->
			<Trigger Property="TabStripPlacement" Value="Right">
				<Setter Property="LayoutTransform">
					<Setter.Value>
						<RotateTransform Angle="90" />
					</Setter.Value>
				</Setter>
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>

	<!-- ========== DockableTabGroupTemplate ========== -->
	<ControlTemplate x:Key="{x:Static igDock:TabGroupPane.DockableTabGroupTemplateKey}" TargetType="{x:Type igDock:TabGroupPane}">
		<DockPanel ClipToBounds="True" SnapsToDevicePixels="True" KeyboardNavigation.TabNavigation="Local">
			<DockPanel x:Name="PART_HeaderArea" Panel.ZIndex="1" DockPanel.Dock="{TemplateBinding TabStripPlacement}">
				<igWindows:XamPager x:Name="PART_TabItemScrollViewer"
                    Style="{StaticResource TabGroupXamPagerStyle}"
                    CanContentScroll="True"
					ScrollViewer.VerticalScrollBarVisibility="Disabled"
					ScrollViewer.HorizontalScrollBarVisibility="Auto" >
					<ItemsPresenter x:Name="PART_TabHeaderPanel" Margin="2,2,2,0"
						KeyboardNavigation.TabIndex="1"/>
				</igWindows:XamPager>
			</DockPanel>
			<Border	x:Name="ContentPanel"
				KeyboardNavigation.TabIndex="2"
				KeyboardNavigation.TabNavigation="Local"
			    KeyboardNavigation.DirectionalNavigation="Contained"
				BorderThickness="{TemplateBinding BorderThickness}"
				BorderBrush="{TemplateBinding BorderBrush}"
				Background="{TemplateBinding Background}"
				SnapsToDevicePixels="true"
				Visibility="Visible">
				<ContentPresenter ContentSource="SelectedContent"
					Margin="{TemplateBinding Padding}"
					x:Name="PART_SelectedContentHost"
					SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
					ContentTemplateSelector="{TemplateBinding SelectedContentTemplateSelector}"
					ContentTemplate="{TemplateBinding SelectedContentTemplate}"
					Content="{TemplateBinding SelectedContent}" />
			</Border>
		</DockPanel>
		<ControlTemplate.Triggers>
			<Trigger Property="TabStripPlacement" Value="Top">
				<Setter Property="BorderThickness" Value="0,1,0,0" />
				<Setter Property="Padding" Value="0,2,0,0" />
			</Trigger>
			<Trigger Property="TabStripPlacement" Value="Bottom">
				<Setter Property="BorderThickness" Value="0,0,0,1" />
				<Setter Property="Padding" Value="0,0,0,2" />
				<Setter Property="Margin" TargetName="PART_TabHeaderPanel" Value="2,0,2,2"/>
			</Trigger>
			<Trigger Property="TabStripPlacement" Value="Left">
				<Setter Property="Margin" TargetName="PART_TabHeaderPanel" Value="2,2,0,2" />
				<Setter Property="ScrollViewer.VerticalScrollBarVisibility" TargetName="PART_TabItemScrollViewer" Value="Auto" />
				<Setter Property="ScrollViewer.HorizontalScrollBarVisibility" TargetName="PART_TabItemScrollViewer" Value="Disabled" />
				<Setter Property="BorderThickness" Value="1,0,0,0" />
				<Setter Property="Padding" Value="2,0,0,0" />
			</Trigger>
			<Trigger Property="TabStripPlacement" Value="Right">
				<Setter Property="Margin" TargetName="PART_TabHeaderPanel" Value="0,2,2,2"/>
				<Setter Property="ScrollViewer.VerticalScrollBarVisibility" TargetName="PART_TabItemScrollViewer" Value="Auto" />
				<Setter Property="ScrollViewer.HorizontalScrollBarVisibility" TargetName="PART_TabItemScrollViewer" Value="Disabled" />
				<Setter Property="BorderThickness" Value="0,0,1,0" />
				<Setter Property="Padding" Value="0,0,2,0" />
			</Trigger>
			<Trigger Property="IsEnabled" Value="False">
				<Setter Property="TextElement.Foreground" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.GrayTextBrushKey}}"/>
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>

	<!-- ========== DocumentTabGroupTemplate ========== -->
	<ControlTemplate x:Key="{x:Static igDock:TabGroupPane.DocumentTabGroupTemplateKey}" TargetType="{x:Type igDock:TabGroupPane}">
		<DockPanel ClipToBounds="True" SnapsToDevicePixels="True" KeyboardNavigation.TabNavigation="Local">
			<DockPanel x:Name="PART_HeaderArea" Panel.ZIndex="1" DockPanel.Dock="{TemplateBinding TabStripPlacement}">
				<DockPanel>
					<Button x:Name="closeBtn"
							DockPanel.Dock="Right"
							Command="{x:Static igDock:TabGroupPane.CloseSelectedItemCommand}"
							Style="{DynamicResource {x:Static igDock:TabGroupPane.DocumentCloseButtonStyleKey}}" 
							/>
					<Menu x:Name="filesMenu" DockPanel.Dock="Right" Style="{StaticResource RootMenuStyle}">
						<MenuItem x:Name="PART_FilesMenuItem"
                            Style="{DynamicResource {x:Static igDock:TabGroupPane.DocumentFilesMenuItemStyleKey}}" />
					</Menu>
                    <!-- AS 9/10/09 TFS19267 - Added CommandParameter -->
					<Button x:Name="showNavigatorButton"
                            DockPanel.Dock="Right"
                            Visibility="Collapsed"
                            Command="{x:Static igDock:DockManagerCommands.ShowPaneNavigator}" 
                            CommandParameter="{TemplateBinding igDock:XamDockManager.DockManager}"
							Style="{DynamicResource {x:Static igDock:TabGroupPane.DocumentPaneNavigatorButtonStyleKey}}" 
                            />
					<ItemsPresenter x:Name="PART_TabHeaderPanel" Margin="5,2,10,0"
										        KeyboardNavigation.TabIndex="1"/>
				</DockPanel>
			</DockPanel>
			<Border x:Name="ContentPanel"
                KeyboardNavigation.TabIndex="2"
                KeyboardNavigation.TabNavigation="Local"
                KeyboardNavigation.DirectionalNavigation="Contained"
                BorderThickness="{TemplateBinding BorderThickness}"
                CornerRadius="3"
                BorderBrush="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedPaneOuterBorderFillKey}}"
                Background="{TemplateBinding Background}"
                Visibility="Visible"
                SnapsToDevicePixels="True" >
				<Border x:Name="InnerBorder"
                        BorderThickness="1"
                        CornerRadius="1"
                        BorderBrush="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedPaneInnerBorderFillKey}}"
                        SnapsToDevicePixels="True" >
					<Border x:Name="ThickInnerBorder"
                        BorderThickness="2"
                        BorderBrush="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedPaneCenterFillKey}}"
                        SnapsToDevicePixels="True" >
						<Border x:Name="InnerMostBorder"
                        BorderThickness="1"
                        BorderBrush="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedPaneOuterBorderFillKey}}"
                        Background="{TemplateBinding Background}"
                        SnapsToDevicePixels="True" >
							<ContentPresenter ContentSource="SelectedContent"
                                 Margin="{TemplateBinding Padding}"
                                 x:Name="PART_SelectedContentHost"
                                 SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                 ContentTemplateSelector="{TemplateBinding SelectedContentTemplateSelector}"
                                 ContentTemplate="{TemplateBinding SelectedContentTemplate}"
                                 Content="{TemplateBinding SelectedContent}" />
						</Border>
					</Border>
				</Border>
			</Border>
		</DockPanel>
		<ControlTemplate.Triggers>

			<Trigger Property="igDock:XamDockManager.PaneLocation" Value="Document">
				<Setter Property="BorderThickness" Value="1" />
				<Setter Property="Padding" Value="2" />
				<Setter Property="TabStripPlacement" Value="Top" />
			</Trigger>
			<Trigger Property="TabStripPlacement" Value="Bottom">
				<Setter Property="Margin" TargetName="PART_TabHeaderPanel" Value="5,0,10,2"/>
			</Trigger>
			<Trigger Property="TabStripPlacement" Value="Left">
				<Setter Property="Margin" TargetName="PART_TabHeaderPanel" Value="2,10,0,5" />
				<!-- AS 6/24/08 BR34248
                <Setter Property="DockPanel.Dock" TargetName="closeBtn" Value="Top" />
				<Setter Property="DockPanel.Dock" TargetName="filesMenu" Value="Top" />
                <Setter Property="DockPanel.Dock" TargetName="showNavigatorButton" Value="Top" />-->
				<Setter Property="DockPanel.Dock" TargetName="closeBtn" Value="Bottom" />
				<Setter Property="DockPanel.Dock" TargetName="filesMenu" Value="Bottom" />
                <Setter Property="DockPanel.Dock" TargetName="showNavigatorButton" Value="Bottom" />
			</Trigger>
			<Trigger Property="TabStripPlacement" Value="Right">
				<Setter Property="Margin" TargetName="PART_TabHeaderPanel" Value="0,5,2,10"/>
				<Setter Property="DockPanel.Dock" TargetName="closeBtn" Value="Bottom" />
				<Setter Property="DockPanel.Dock" TargetName="filesMenu" Value="Bottom" />
                <Setter Property="DockPanel.Dock" TargetName="showNavigatorButton" Value="Bottom" />
			</Trigger>
			<Trigger Property="IsEnabled" Value="False">
				<Setter Property="TextElement.Foreground" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.GrayTextBrushKey}}"/>
			</Trigger>

			<!-- PaneNavigatorButtonDisplayMode -->
			<MultiDataTrigger>
				<MultiDataTrigger.Conditions>
					<Condition Binding="{Binding Source={x:Static interop:BrowserInteropHelper.IsBrowserHosted}}" Value="True" />
					<Condition Binding="{Binding Path=(igDock:XamDockManager.DockManager).PaneNavigatorButtonDisplayMode, RelativeSource={x:Static RelativeSource.Self}}" Value="WhenHostedInBrowser" />
				</MultiDataTrigger.Conditions>
				<Setter Property="Visibility" TargetName="showNavigatorButton" Value="Visible" />
			</MultiDataTrigger>
			<DataTrigger Binding="{Binding Path=(igDock:XamDockManager.DockManager).PaneNavigatorButtonDisplayMode, RelativeSource={x:Static RelativeSource.Self}}" Value="Always">
				<Setter Property="Visibility" TargetName="showNavigatorButton" Value="Visible" />
			</DataTrigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>

	<!-- ========== UnpinnedTabItemTemplateKey ========== -->
	<ControlTemplate x:Key="{x:Static igDock:PaneTabItem.UnpinnedTabItemTemplateKey}" TargetType="{x:Type igDock:PaneTabItem}">
		<Border SnapsToDevicePixels="true">
			<igWindows:CardPanel>
				<igWindows:CardPanel x:Name="Background">
					<Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="Auto" Height="Auto">
                        <!-- AS 1/6/10 TFS25270 - TemplateBind the background and borderbrush instead of setting here and in triggers for base color. -->
                        <Border x:Name="OuterBorder" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True" BorderThickness="0,1,1,1"/>
						<Border x:Name="InnerBorder" Margin="0,1,1,1" BorderThickness="0,1,1,1" BorderBrush="{DynamicResource {x:Static igDock:DockManagerBrushKeys.UnpinnedTabItemHighlightFillKey}}" SnapsToDevicePixels="True"/>
					</Grid>
				</igWindows:CardPanel>
				<Border x:Name="Content"
						BorderThickness="{TemplateBinding BorderThickness}" 
						Padding="{TemplateBinding Padding}">
					<DockPanel>
						<igWindows:AutoDisabledImage Visibility="{Binding Path=Pane.HasImage, RelativeSource={x:Static RelativeSource.TemplatedParent}, Converter={StaticResource BoolToVisConverter}}"
                            DockPanel.Dock="Left"
                            Margin="0,0,5,0"
                            Stretch="None"
                            Source="{Binding Path=Pane.Image, RelativeSource={x:Static RelativeSource.TemplatedParent}}" />
						<ContentPresenter 
                            x:Name="contentHeader"
							ContentSource="Header" 
							SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
							RecognizesAccessKey="true" 
							HorizontalAlignment="{Binding Path=HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" 
							VerticalAlignment="{Binding Path=VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"
							igWindows:ClippedTextToolTipService.ShowToolTipWhenClipped="True"
							igWindows:ClippedTextToolTipService.AncestorTypeForToolTip="{x:Type ContentControl}"
                            igWindows:ClippedTextToolTipService.ToolTipStyleKey="{x:Static igDock:XamDockManager.ToolTipStyleKey}"
                            TextElement.Foreground="{DynamicResource {x:Static igDock:DockManagerBrushKeys.ThemeColorTextFillKey}}"
							/>
					</DockPanel>
				</Border>
			</igWindows:CardPanel>
		</Border>
		<ControlTemplate.Triggers>
			<Trigger Property="IsMouseOverTab" Value="True">
				<!-- AS 1/6/10 TFS25270 Duplicate setter
                <Setter Property="Background" TargetName="OuterBorder" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.UnpinnedTabItemHottrackOuterBorderFillKey}}" />-->
				<Setter Property="BorderBrush" TargetName="InnerBorder" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.UnpinnedTabItemHottrackHighlightFillKey}}" />
				<!-- AS 1/6/10 TFS25270 Moved to style trigger
                <Setter Property="Background" TargetName="OuterBorder" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.UnpinnedTabItemLeftHottrackCenterFillKey}}" />-->
				<Setter TargetName="contentHeader" Property="TextElement.Foreground" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedListNotActiveTextFillKey}}" />
			</Trigger>
			<Trigger Property="TabStripPlacement" Value="Top">
				<Setter Property="Padding" Value="3,4,4,3" />
				<Setter Property="Margin" Value="-1,0,0,0" />
                <!-- AS 1/6/10 TFS25270 Moved to style trigger
                <Setter TargetName="OuterBorder" Property="Background" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.UnpinnedTabItemTopCenterFillKey}}" />-->
                <Setter TargetName="OuterBorder" Property="BorderThickness" Value="1,1,1,0"/>
                <Setter TargetName="InnerBorder" Property="BorderThickness" Value="1,1,1,0"/>
                <Setter TargetName="InnerBorder" Property="Margin" Value="1,1,1,0"/>
            </Trigger>
			<Trigger Property="TabStripPlacement" Value="Bottom">
				<Setter Property="Padding" Value="3,4,4,4" />
				<Setter Property="Margin" Value="-1,0,0,0" />
				<!-- AS 1/6/10 TFS25270 Moved to style trigger
                <Setter TargetName="OuterBorder" Property="Background" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.UnpinnedTabItemBottomCenterFillKey}}" />-->
                <Setter TargetName="OuterBorder" Property="BorderThickness" Value="1,0,1,1"/>
                <Setter TargetName="InnerBorder" Property="BorderThickness" Value="1,0,1,1"/>
                <Setter TargetName="InnerBorder" Property="Margin" Value="1,0,1,1"/>
			</Trigger>
			<Trigger Property="TabStripPlacement" Value="Left">
				<Setter Property="Padding" Value="4,5,4,3" />
				<Setter Property="Margin" Value="0,-1,0,0" />
                <!-- AS 1/6/10 TFS25270 Moved to style trigger
                <Setter TargetName="OuterBorder" Property="Background" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.UnpinnedTabItemRightCenterFillKey}}" />-->
                <Setter TargetName="OuterBorder" Property="BorderThickness" Value="1,1,0,1"/>
                <Setter TargetName="InnerBorder" Property="BorderThickness" Value="1,1,0,1"/>
                <Setter TargetName="InnerBorder" Property="Margin" Value="1,1,0,1"/>
                <Setter Property="LayoutTransform" TargetName="Content">
					<Setter.Value>
						<RotateTransform Angle="90" />
					</Setter.Value>
				</Setter>
			</Trigger>
			<Trigger Property="TabStripPlacement" Value="Right">
				<Setter Property="Padding" Value="4,5,4,3" />
				<Setter Property="Margin" Value="0,-1,0,0" />
                <Setter Property="LayoutTransform" TargetName="Content">
                    <Setter.Value>
                        <RotateTransform Angle="90" />
                    </Setter.Value>
                </Setter>
            </Trigger>
            
			<Trigger Property="IsEnabled" Value="false">
				<Setter Property="Foreground" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.GrayTextBrushKey}}" />
			</Trigger>
            
            
            <!-- Hottrack for UnpinnedTabItems -->
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="True"/>
                    <Condition Property="TabStripPlacement" Value="Top"/>
                </MultiTrigger.Conditions>
                <!-- AS 1/6/10 TFS25270 Removed TargetName="Border" so we use the template properties -->
                <Setter Property="Background" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.UnpinnedTabItemTopHottrackCenterFillKey}}" />
                <Setter Property="BorderBrush" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.UnpinnedTabItemHottrackOuterBorderFillKey}}" />
            </MultiTrigger>
            
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="True"/>
                    <Condition Property="TabStripPlacement" Value="Bottom"/>
                </MultiTrigger.Conditions>
                <!-- AS 1/6/10 TFS25270 Removed TargetName="Border" so we use the template properties -->
                <Setter Property="Background" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.UnpinnedTabItemBottomHottrackCenterFillKey}}" />
                <Setter Property="BorderBrush" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.UnpinnedTabItemHottrackOuterBorderFillKey}}" />
            </MultiTrigger>
            
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="True"/>
                    <Condition Property="TabStripPlacement" Value="Left"/>
                </MultiTrigger.Conditions>
                <!-- AS 1/6/10 TFS25270 Removed TargetName="Border" so we use the template properties -->
                <Setter Property="Background" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.UnpinnedTabItemRightHottrackCenterFillKey}}" />
                <Setter Property="BorderBrush" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.UnpinnedTabItemHottrackOuterBorderFillKey}}" />
            </MultiTrigger>
            
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="True"/>
                    <Condition Property="TabStripPlacement" Value="Right"/>
                </MultiTrigger.Conditions>
                <!-- AS 1/6/10 TFS25270 Removed TargetName="Border" so we use the template properties -->
                <Setter Property="Background" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.UnpinnedTabItemLeftHottrackCenterFillKey}}" />
                <Setter Property="BorderBrush" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.UnpinnedTabItemHottrackOuterBorderFillKey}}" />
            </MultiTrigger>
            
            <!-- Hottrack for UnpinnedTabItems -->
            
			<!-- IsFirstInGroup = True -->
			<MultiTrigger>
				<MultiTrigger.Conditions>
					<Condition Property="igDock:UnpinnedTabItemPanel.IsFirstInGroup" Value="True" />
					<Condition Property="TabStripPlacement" Value="Bottom" />
				</MultiTrigger.Conditions>
				<Setter Property="Margin" Value="15,0,0,0" />
			</MultiTrigger>
			<MultiTrigger>
				<MultiTrigger.Conditions>
					<Condition Property="igDock:UnpinnedTabItemPanel.IsFirstInGroup" Value="True" />
					<Condition Property="TabStripPlacement" Value="Top" />
				</MultiTrigger.Conditions>
				<Setter Property="Margin" Value="15,0,0,0" />
			</MultiTrigger>
			<MultiTrigger>
				<MultiTrigger.Conditions>
					<Condition Property="igDock:UnpinnedTabItemPanel.IsFirstInGroup" Value="True" />
					<Condition Property="TabStripPlacement" Value="Left" />
				</MultiTrigger.Conditions>
				<Setter Property="Margin" Value="0,15,0,0" />
			</MultiTrigger>
			<MultiTrigger>
				<MultiTrigger.Conditions>
					<Condition Property="igDock:UnpinnedTabItemPanel.IsFirstInGroup" Value="True" />
					<Condition Property="TabStripPlacement" Value="Right" />
				</MultiTrigger.Conditions>
				<Setter Property="Margin" Value="0,15,0,0" />
			</MultiTrigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>



	<!-- <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<< -->
	<!--      ResourceKey Templates [End]     -->
	<!-- <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<< -->




	<!-- >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> -->
	<!--      ResourceKey Styles [Start]      -->
	<!-- >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> -->

	<Style x:Key="paneCaptionButtonStyleBase" TargetType="{x:Type Button}" BasedOn="{StaticResource CaptionButtonStyleBase}">
		<Setter Property="Width" Value="16" />
		<Setter Property="Height" Value="15" />
		<Setter Property="Foreground" Value="{Binding Path=Foreground, RelativeSource={x:Static RelativeSource.TemplatedParent}}" />
		<Setter Property="VerticalAlignment" Value="Top" />
	</Style>

	<!-- AS 6/24/11 FloatingWindowCaptionSource -->
	<!-- ========== PaneHeaderPresenter.MaximizeButtonStyleKey ========== -->
	<Style x:Key="{x:Static igDock:PaneHeaderPresenter.MaximizeButtonStyleKey}" TargetType="{x:Type Button}" BasedOn="{StaticResource paneCaptionButtonStyleBase}">
		<Setter Property="ToolTip" Value="{StaticResource maximizeToolTip}" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
					<Border Background="{TemplateBinding Background}"
						 CornerRadius="{TemplateBinding Border.CornerRadius}"
						 BorderBrush="{TemplateBinding BorderBrush}"
						 BorderThickness="{TemplateBinding BorderThickness}"
						 SnapsToDevicePixels="True" 
						>
						<igWindows:CardPanel>
							<Path x:Name="maximizeContent" Margin="3,3,0,0" Data="F1M0,0L0,9 9,9 9,0 0,0 0,3 8,3 8,8 1,8 1,3z" Fill="{TemplateBinding Foreground}" />
							<Path x:Name="restoreContent" Margin="3,2,0,0" Data="F1M0,10L0,3 3,3 3,0 10,0 10,2 4,2 4,3 7,3 7,6 6,6 6,5 1,5 1,10z M1,10L7,10 7,7 10,7 10,2 9,2 9,6 6,6 6,9 1,9z" Fill="{TemplateBinding Foreground}" Visibility="Collapsed"/>
						</igWindows:CardPanel>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsEnabled" Value="False">
							<Setter Property="Foreground" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.GrayTextBrushKey}}" />
						</Trigger>
						<DataTrigger Binding="{Binding Path=(igWindows:ToolWindow.ToolWindow).WindowState, RelativeSource={x:Static RelativeSource.Self}}" Value="Maximized">
							<Setter TargetName="maximizeContent" Property="Visibility" Value="Collapsed" />
							<Setter TargetName="restoreContent" Property="Visibility" Value="Visible" />
							<Setter Property="ToolTip" Value="{StaticResource restoreDownToolTip}" />
						</DataTrigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- AS 6/24/11 FloatingWindowCaptionSource -->
	<!-- ========== PaneHeaderPresenter.MinimizeButtonStyleKey ========== -->
	<Style x:Key="{x:Static igDock:PaneHeaderPresenter.MinimizeButtonStyleKey}" TargetType="{x:Type Button}" BasedOn="{StaticResource paneCaptionButtonStyleBase}">
		<Setter Property="ToolTip" Value="{StaticResource minimizeToolTip}" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
					<Border Background="{TemplateBinding Background}"
						 CornerRadius="{TemplateBinding Border.CornerRadius}"
						 BorderBrush="{TemplateBinding BorderBrush}"
						 BorderThickness="{TemplateBinding BorderThickness}"
						 SnapsToDevicePixels="True" 
						>
						<igWindows:CardPanel>
							<Path x:Name="minimizeContent" Margin="3,3,0,0" Data="F1M0,9L7,9 7,8 0,8z" Fill="{TemplateBinding Foreground}" />
							<Path x:Name="restoreContent" Margin="3,2,0,0" Data="F1M0,10L0,3 3,3 3,0 10,0 10,2 4,2 4,3 7,3 7,6 6,6 6,5 1,5 1,10z M1,10L7,10 7,7 10,7 10,2 9,2 9,6 6,6 6,9 1,9z" Fill="{TemplateBinding Foreground}" Visibility="Collapsed"/>
						</igWindows:CardPanel>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsEnabled" Value="False">
							<Setter Property="Foreground" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.GrayTextBrushKey}}" />
						</Trigger>
						<DataTrigger Binding="{Binding Path=(igWindows:ToolWindow.ToolWindow).WindowState, RelativeSource={x:Static RelativeSource.Self}}" Value="Minimized">
							<Setter TargetName="minimizeContent" Property="Visibility" Value="Collapsed" />
							<Setter TargetName="restoreContent" Property="Visibility" Value="Visible" />
							<Setter Property="ToolTip" Value="{StaticResource restoreUpToolTip}" />
						</DataTrigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>


	<!-- ========== PaneHeaderPresenter.CloseButtonStyleKey ========== -->
	<Style x:Key="{x:Static igDock:PaneHeaderPresenter.CloseButtonStyleKey}" TargetType="{x:Type Button}" BasedOn="{StaticResource paneCaptionButtonStyleBase}">
		<Setter Property="ToolTip" Value="{StaticResource closeToolTip}" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
					<Border Background="{TemplateBinding Background}"
						 CornerRadius="{TemplateBinding Border.CornerRadius}"
						 BorderBrush="{TemplateBinding BorderBrush}"
						 BorderThickness="{TemplateBinding BorderThickness}"
						 SnapsToDevicePixels="True" 
						>
						<Path
							Margin="3,3,0,0"
							HorizontalAlignment="Left"
							VerticalAlignment="Top"
							Height="8"
							Width="8"
							Stretch="Fill"
							Opacity="1"
							Data="M 5,4 C5,4 4,5 4,5 4,5 7,8 7,8 7,8 4,11 4,11 4,11 5,12 5,12 5,12 8,9 8,9 8,9 11,12 11,12 11,12 12,11 12,11 12,11 9,8 9,8 9,8 12,5 12,5 12,5 11,4 11,4 11,4 8,7 8,7 8,7 5,4 5,4 z"
							Fill="{TemplateBinding Foreground}" />
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsEnabled" Value="False">
							<Setter Property="Foreground" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.GrayTextBrushKey}}" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- ========== PaneHeaderPresenter.PinButtonStyleKey ========== -->
	<Style x:Key="{x:Static igDock:PaneHeaderPresenter.PinButtonStyleKey}" TargetType="{x:Type Button}" BasedOn="{StaticResource paneCaptionButtonStyleBase}">
		<Setter Property="ToolTip" Value="{StaticResource pinToolTip}" />
		<Setter Property="Padding" Value="1.5" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
					<Border Background="{TemplateBinding Background}"
						 CornerRadius="{TemplateBinding Border.CornerRadius}"
						 BorderBrush="{TemplateBinding BorderBrush}"
						 BorderThickness="{TemplateBinding BorderThickness}"
						 SnapsToDevicePixels="True" 
						>
						<Grid>
							<Path
								x:Name="PinnedGlyph"
								Visibility="Visible"
								Margin="3,2,0,0"
								HorizontalAlignment="Left"
								VerticalAlignment="Top"
								Height="10"
								Width="7"
								Stretch="Fill"
								Opacity="1"
								Data="M 6,4 C6,4 8,4 8,4 8,4 8,9 8,9 8,9 6,9 6,9 6,9 6,4 6,4 zM 5,3 C5,3 5,9 5,9 5,9 4,9 4,9 4,9 4,10 4,10 4,10 7,10 7,10 7,10 7,13 7,13 7,13 8,13 8,13 8,13 8,10 8,10 8,10 11,10 11,10 11,10 11,9 11,9 11,9 10,9 10,9 10,9 10,3 10,3 10,3 5,3 5,3 z"
								Fill="{TemplateBinding Foreground}" />
							<Path
								x:Name="UnpinnedGlyph"
								Visibility="Collapsed"
								Margin="2,4,0,0"
								HorizontalAlignment="Left"
								VerticalAlignment="Top"
								Height="7"
								Width="10"
								Stretch="Fill"
								Opacity="1"
								Data="M 12,7 C12,7 12,9 12,9 12,9 7,9 7,9 7,9 7,7 7,7 7,7 12,7 12,7 zM 13,6 C13,6 7,6 7,6 7,6 7,5 7,5 7,5 6,5 6,5 6,5 6,8 6,8 6,8 3,8 3,8 3,8 3,9 3,9 3,9 6,9 6,9 6,9 6,12 6,12 6,12 7,12 7,12 7,12 7,11 7,11 7,11 13,11 13,11 13,11 13,6 13,6 z"
								Fill="{TemplateBinding Foreground}" />
						</Grid>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsEnabled" Value="False">
							<Setter Property="Foreground" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.GrayTextBrushKey}}" />
						</Trigger>
						<Trigger Property="igDock:XamDockManager.PaneLocation" Value="Unpinned">
							<Setter TargetName="UnpinnedGlyph" Property="Visibility" Value="Visible" />
							<Setter TargetName="PinnedGlyph" Property="Visibility" Value="Collapsed" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>

		<!--<Style.Triggers>
            <Trigger Property="igDock:XamDockManager.PaneLocation" Value="Unpinned">
                <Setter Property="Content" Value="M2,0.99999994 C2,1 2,5.9810929 2,6 2,6 3.1274426,6 4,6 L4,0.99999994 C3.1302817,1 2.0073345,1 2,0.99999994 z M0.99999999,0 C0.99999999,0 5.9810991,0 6,0 6,0 6,0.98652494 6,0.99999994 6,1 6,5.9810929 6,6 6,6 6.986525,6 7,6 7,6 7,6.9889135 7,7 7,7 4.0199432,7 4,7 4,7 4,9.9800549 4,10 4,10 3.0134742,10&#xa;3,10 3,10 3,7.0199466 3,7 3,7 0.019948542,7 4.4703484E-08,7 -1.4901161E-08,7 -1.4901161E-08,6.0110855 4.4703484E-08,6 -1.4901161E-08,6 0.98652671,6 0.99999999,6 0.99999999,6 0.99999999,1.0113275 0.99999999,0.99999994 0.99999999,1 0.99999999,0.0048444755 0.99999999,0 z" />
                <Setter Property="LayoutTransform">
                    <Setter.Value>
                        <RotateTransform Angle="90"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>-->
	</Style>

	<!-- ========== TabGroupPane.DocumentCloseButtonStyleKey ========== -->
	<Style x:Key="{x:Static igDock:TabGroupPane.DocumentCloseButtonStyleKey}" TargetType="{x:Type Button}" BasedOn="{StaticResource ButtonStyleBase}">
		<Setter Property="ToolTip" Value="{StaticResource closeToolTip}" />
		<Setter Property="Width" Value="14" />
		<Setter Property="Height" Value="13" />
		<Setter Property="Foreground" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabGroupPaneGlyphFillKey}}" />
		<Setter Property="VerticalAlignment" Value="Top" />
		<Setter Property="Margin" Value="0,3,0,0" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
					<Border Background="{TemplateBinding Background}"
						 CornerRadius="{TemplateBinding Border.CornerRadius}"
						 BorderBrush="{TemplateBinding BorderBrush}"
						 BorderThickness="{TemplateBinding BorderThickness}"
						 SnapsToDevicePixels="True" 
						>
						<Path
							Margin="2,1,0,0"
							HorizontalAlignment="Left"
							VerticalAlignment="Top"
							Height="8"
							Width="8"
							Stretch="Fill"
							Opacity="1"
							Data="M 1244,87 C1244,87 1243,88 1243,88 1243,88 1246,91 1246,91 1246,91 1243,94 1243,94 1243,94 1244,95 1244,95 1244,95 1247,92 1247,92 1247,92 1250,95 1250,95 1250,95 1251,94 1251,94 1251,94 1248,91 1248,91 1248,91 1251,88 1251,88 1251,88 1250,87 1250,87 1250,87 1247,90 1247,90 1247,90 1244,87 1244,87 z"
							Fill="{TemplateBinding Foreground}" />
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsEnabled" Value="False">
							<Setter Property="Foreground" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.GrayTextBrushKey}}" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Style.Triggers>

			<!-- Hottracked State -->
			<DataTrigger Binding="{Binding Path=IsMouseOver, RelativeSource={x:Static RelativeSource.Self}}" Value="True">
				<Setter Property="BorderBrush" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.PaneCaptionButtonHottrackOuterBorderFillKey}}" />
				<Setter Property="Background" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.PaneCaptionButtonHottrackCenterFillKey}}" />
			</DataTrigger>

			<!-- IsSubmenuOpen State -->
			<DataTrigger Binding="{Binding Path=IsPressed, RelativeSource={x:Static RelativeSource.Self}}" Value="True">
				<Setter Property="BorderBrush" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.PaneCaptionButtonPressedOuterBorderFillKey}}" />
				<Setter Property="Background" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.PaneCaptionButtonPressedCenterFillKey}}" />
			</DataTrigger>

			<Trigger Property="IsEnabled" Value="False">
				<Setter Property="Foreground" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.GrayTextBrushKey}}"/>
			</Trigger>


		</Style.Triggers>
	</Style>

	<!-- ========== TabGroupPane.DocumentPaneNavigatorButtonStyleKey ========== -->
	<Style x:Key="{x:Static igDock:TabGroupPane.DocumentPaneNavigatorButtonStyleKey}" TargetType="{x:Type Button}" BasedOn="{StaticResource ButtonStyleBase}">
		<Setter Property="ToolTip" Value="{StaticResource showNavigatorToolTip}" />
		<Setter Property="Width" Value="16" />
		<Setter Property="Height" Value="15" />
		<Setter Property="VerticalAlignment" Value="Top" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
					<Border Background="{TemplateBinding Background}"
						 CornerRadius="{TemplateBinding Border.CornerRadius}"
						 BorderBrush="{TemplateBinding BorderBrush}"
						 BorderThickness="{TemplateBinding BorderThickness}"
						 SnapsToDevicePixels="True" 
						>
						<Path
							Margin="2,4,0,0"
							HorizontalAlignment="Left"
							VerticalAlignment="Top"
							Height="8"
							Width="10"
							Stretch="Fill"
							Opacity="1"
							Data="M 4,6 C4,6 12,6 12,6 12,6 12,11 12,11 12,11 4,11 4,11 4,11 4,6 4,6 zM 3,4 C3,4 3,12 3,12 3,12 13,12 13,12 13,12 13,4 13,4 13,4 3,4 3,4 zM 9,7 C9,7 9,10 9,10 9,10 11,10 11,10 11,10 11,7 11,7 11,7 9,7 9,7 zM 7,9 C7,9 7,10 7,10 7,10 8,10 8,10 8,10 8,9 8,9 8,9 7,9 7,9 zM 7,7 C7,7 7,8 7,8 7,8 8,8 8,8 8,8 8,7 8,7 8,7 7,7 7,7 zM 5,7 C5,7 5,8 5,8 5,8 6,8 6,8 6,8 6,7 6,7 6,7 5,7 5,7 zM 5,9 C5,9 5,10 5,10 5,10 6,10 6,10 6,10 6,9 6,9 6,9 5,9 5,9 z"
							Fill="{TemplateBinding Foreground}" />
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsEnabled" Value="False">
							<Setter Property="Foreground" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.GrayTextBrushKey}}" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Style.Triggers>
			<!-- Hottracked State -->
			<DataTrigger Binding="{Binding Path=IsMouseOver, RelativeSource={x:Static RelativeSource.Self}}" Value="True">
				<Setter Property="BorderBrush" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.PaneCaptionButtonHottrackOuterBorderFillKey}}" />
				<Setter Property="Background" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.PaneCaptionButtonHottrackCenterFillKey}}" />
			</DataTrigger>

			<!-- IsSubmenuOpen State -->
			<DataTrigger Binding="{Binding Path=IsPressed, RelativeSource={x:Static RelativeSource.Self}}" Value="True">
				<Setter Property="BorderBrush" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.PaneCaptionButtonPressedOuterBorderFillKey}}" />
				<Setter Property="Background" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.PaneCaptionButtonPressedCenterFillKey}}" />
			</DataTrigger>

			<Trigger Property="IsEnabled" Value="False">
				<Setter Property="Foreground" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.GrayTextBrushKey}}"/>
			</Trigger>
		</Style.Triggers>
	</Style>

	<!-- ========== TabGroupPane.DocumentFilesMenuItemStyleKey ========== -->
	<Style x:Key="{x:Static igDock:TabGroupPane.DocumentFilesMenuItemStyleKey}" TargetType="{x:Type MenuItem}" BasedOn="{StaticResource TopLevelHeaderMenuItemStyleBase}">
		<Setter Property="ToolTip" Value="{StaticResource filesToolTip}" />
		<Setter Property="Width" Value="14" />
		<Setter Property="Height" Value="13" />
		<Setter Property="Foreground" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabGroupPaneGlyphFillKey}}" />
		<Setter Property="Margin" Value="0,3,0,0" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type MenuItem}">
					<igWindows:CardPanel>
						<Border Background="{TemplateBinding Background}"
							CornerRadius="{TemplateBinding Border.CornerRadius}"
							BorderBrush="{TemplateBinding BorderBrush}"
							BorderThickness="{TemplateBinding BorderThickness}"
							SnapsToDevicePixels="True" >
							<Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
								<Path
									x:Name="AllItemsInViewGlyph"
									Margin="2,4,0,0"
									HorizontalAlignment="Left"
									VerticalAlignment="Top"
									Height="4"
									Width="9"
									Stretch="Fill"
									Opacity="1"
									Data="M 3,4 C3,4 7.5,7.5 7.5,7.5 7.5,7.5 12,4 12,4 12,4 3,4 3,4 z"
									Fill="{TemplateBinding Foreground}" />
								<Path
									x:Name="HasItemsOutOfViewGlyph"
									Visibility="Collapsed"
									Margin="2,3,0,0"
									HorizontalAlignment="Left"
									VerticalAlignment="Top"
									Height="7"
									Width="9"
									Stretch="Fill"
									Opacity="1"
									Data="M0,3 C0,3 9,3 9,3 9,3 4.5,7.5 4.5,7.5 4.5,7.5 0,3 0,3 z M0,0 L9,0 9,2 0,2 0,0 z"
									Fill="{TemplateBinding Foreground}" />
							</Grid>
						</Border>
						<Popup x:Name="PART_Popup" 
						    AllowsTransparency="true" 
						    Placement="Bottom" 
						    PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}" 
						    IsOpen="{Binding Path=IsSubmenuOpen, RelativeSource={x:Static RelativeSource.TemplatedParent}}">
							<luna:SystemDropShadowChrome x:Name="Shdw" Color="Transparent">
								<Grid Height="Auto" Width="Auto" x:Name="MenuItem">
									<Grid.ColumnDefinitions>
										<ColumnDefinition Width="27" />
										<ColumnDefinition Width="*" />
									</Grid.ColumnDefinitions>
									<Rectangle
										Grid.ColumnSpan="2"
									  Opacity="1"
									  HorizontalAlignment="Stretch"
									  VerticalAlignment="Stretch"
									  Margin="0,0,0,0"
									  Stroke="{DynamicResource {x:Static igDock:DockManagerBrushKeys.MenuItemOuterBorderFillKey}}"
									  StrokeThickness="1"
									  Fill="{DynamicResource {x:Static igDock:DockManagerBrushKeys.MenuItemCenterFillKey}}" SnapsToDevicePixels="True" />

									<!-- Harry 03.20.2008 
                            Created icon area background template and moved
                            it to the MenuItem.SubMenuItemStyleKey -->

									<!--<Border Grid.ColumnSpan="1"
                                HorizontalAlignment="Stretch" VerticalAlignment="Stretch" 
                                BorderThickness="0,0,1,0"
                                BorderBrush="{DynamicResource {x:Static igDock:DockManagerBrushKeys.MenuItemIconGroupBorderFillKey}}" 
                                Background="{DynamicResource {x:Static igDock:DockManagerBrushKeys.MenuItemIconGroupCenterFillKey}}" 
                                Margin="3,3,0,3" 
                                SnapsToDevicePixels="True" />-->

									<ScrollViewer Grid.ColumnSpan="2" 
										 CanContentScroll="True" 
										Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly={x:Type FrameworkElement}}}"
										Margin="3">
										<ItemsPresenter 
										  KeyboardNavigation.TabNavigation="Cycle" 
										  KeyboardNavigation.DirectionalNavigation="Cycle" 
										  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
										  />
									</ScrollViewer>
								</Grid>
							</luna:SystemDropShadowChrome>
						</Popup>
					</igWindows:CardPanel>
					<ControlTemplate.Triggers>
						<Trigger Property="IsEnabled" Value="False">
							<Setter Property="Foreground" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.GrayTextBrushKey}}" />
						</Trigger>
						<DataTrigger Binding="{Binding Path=(igDock:DocumentTabPanel.HasItemsOutOfView), RelativeSource={RelativeSource AncestorType={x:Type igDock:TabGroupPane}}}" Value="True">
							<Setter TargetName="HasItemsOutOfViewGlyph" Property="Visibility" Value="Visible" />
							<Setter TargetName="AllItemsInViewGlyph" Property="Visibility" Value="Collapsed" />
						</DataTrigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Style.Triggers>
			<!-- Hottracked State -->
			<DataTrigger Binding="{Binding Path=IsHighlighted, RelativeSource={x:Static RelativeSource.Self}}" Value="True">
				<Setter Property="BorderBrush" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.PaneCaptionButtonHottrackOuterBorderFillKey}}" />
				<Setter Property="Background" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.PaneCaptionButtonHottrackCenterFillKey}}" />
			</DataTrigger>

			<!-- IsSubmenuOpen State -->
			<DataTrigger Binding="{Binding Path=IsSubmenuOpen, RelativeSource={x:Static RelativeSource.Self}}" Value="True">
				<Setter Property="BorderBrush" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.PaneCaptionButtonPressedOuterBorderFillKey}}" />
				<Setter Property="Background" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.PaneCaptionButtonPressedCenterFillKey}}" />
			</DataTrigger>

			<Trigger Property="IsEnabled" Value="False">
				<Setter Property="Foreground" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.GrayTextBrushKey}}"/>
			</Trigger>

		</Style.Triggers>
	</Style>

	<!-- ========== PaneHeaderPresenter.PositionMenuItemStyleKey ========== -->
	<Style x:Key="{x:Static igDock:PaneHeaderPresenter.PositionMenuItemStyleKey}" TargetType="{x:Type MenuItem}" BasedOn="{StaticResource TopLevelHeaderMenuItemStyleBase}">
		<Setter Property="ToolTip" Value="{StaticResource positionToolTip}" />
		<Setter Property="Width" Value="16" />
		<Setter Property="Height" Value="15" />
		<Setter Property="Foreground" Value="{Binding Path=Foreground, RelativeSource={x:Static RelativeSource.TemplatedParent}}" />
		<Setter Property="VerticalAlignment" Value="Top" />
		<Setter Property="Margin" Value="0,0,0,0" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type MenuItem}">
					<igWindows:CardPanel>
						<Border Background="{TemplateBinding Background}"
							 CornerRadius="{TemplateBinding Border.CornerRadius}"
							 BorderBrush="{TemplateBinding BorderBrush}"
							 BorderThickness="{TemplateBinding BorderThickness}"
							 SnapsToDevicePixels="True" 
							>
							<Path
								Margin="2,7,0,0"
								HorizontalAlignment="Left"
								VerticalAlignment="Top"
								Height="4.5"
								Width="9"
								Stretch="Fill"
								Opacity="1"
								Data="M 3,8 C3,8 7.5,12.5 7.5,12.5 7.5,12.5 12,8 12,8 12,8 3,8 3,8 z"
								Fill="{TemplateBinding Foreground}" />
						</Border>
					<Popup x:Name="PART_Popup" 
                   AllowsTransparency="true" 
                   Placement="Bottom" 
                   PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}" 
                   IsOpen="{Binding Path=IsSubmenuOpen, RelativeSource={x:Static RelativeSource.TemplatedParent}}">
						<luna:SystemDropShadowChrome x:Name="Shdw" Color="Transparent">
							<Grid Height="Auto" Width="Auto" x:Name="MenuItem">
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="27" />
									<ColumnDefinition Width="*" />
								</Grid.ColumnDefinitions>
								<Rectangle
							Grid.ColumnSpan="2"
                                Opacity="1"
                                HorizontalAlignment="Stretch"
                                VerticalAlignment="Stretch"
                                Margin="0,0,0,0"
                                Stroke="{DynamicResource {x:Static igDock:DockManagerBrushKeys.MenuItemOuterBorderFillKey}}"
                                StrokeThickness="1"
                                Fill="{DynamicResource {x:Static igDock:DockManagerBrushKeys.MenuItemCenterFillKey}}" SnapsToDevicePixels="True" />

								<!-- Harry 03.20.2008 
                            Created icon area background template and moved
                            it to the MenuItem.SubMenuItemStyleKey -->

								<!--<Border Grid.ColumnSpan="1"
                                HorizontalAlignment="Stretch" VerticalAlignment="Stretch" 
                                BorderThickness="0,0,1,0"
                                BorderBrush="{DynamicResource {x:Static igDock:DockManagerBrushKeys.MenuItemIconGroupBorderFillKey}}" 
                                Background="{DynamicResource {x:Static igDock:DockManagerBrushKeys.MenuItemIconGroupCenterFillKey}}" 
                                Margin="3,3,0,3" 
                                SnapsToDevicePixels="True" />-->

								<ScrollViewer Grid.ColumnSpan="2" 
                                        CanContentScroll="True" 
							            Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly={x:Type FrameworkElement}}}"
                                        Margin="3">
									<ItemsPresenter 
                                KeyboardNavigation.TabNavigation="Cycle" 
                                KeyboardNavigation.DirectionalNavigation="Cycle" 
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                />
								</ScrollViewer>
							</Grid>
						</luna:SystemDropShadowChrome>
					</Popup>
					</igWindows:CardPanel>

					<ControlTemplate.Triggers>
						<Trigger Property="IsEnabled" Value="False">
							<Setter Property="Foreground" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.GrayTextBrushKey}}" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Style.Triggers>
			<MultiDataTrigger>
				<MultiDataTrigger.Conditions>
					<Condition Binding="{Binding Path=Pane.IsActivePane, RelativeSource={RelativeSource AncestorType={x:Type igDock:PaneHeaderPresenter}}}" Value="True"/>
					<Condition Binding="{Binding Path=IsMouseOver, RelativeSource={x:Static RelativeSource.Self}}" Value="True"/>
				</MultiDataTrigger.Conditions>
				<Setter Property="BorderBrush" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.PaneCaptionButtonHottrackOuterBorderFillKey}}" />
				<Setter Property="Background" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.PaneCaptionButtonHottrackCenterFillKey}}" />
			</MultiDataTrigger>

			<!-- HotTracked Button in an Non-Active ContentPane -->
			<MultiDataTrigger>
				<MultiDataTrigger.Conditions>
					<Condition Binding="{Binding Path=Pane.IsActivePane, RelativeSource={RelativeSource AncestorType={x:Type igDock:PaneHeaderPresenter}}}" Value="False"/>
					<Condition Binding="{Binding Path=IsMouseOver, RelativeSource={x:Static RelativeSource.Self}}" Value="True"/>
				</MultiDataTrigger.Conditions>
				<Setter Property="BorderBrush" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.PaneCaptionButtonNotActiveHottrackOuterBorderFillKey}}" />
				<Setter Property="Background" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.PaneCaptionButtonNotActiveHottrackCenterFillKey}}" />
			</MultiDataTrigger>

			<!-- IsPressed Button -->
			<MultiDataTrigger>
				<MultiDataTrigger.Conditions>
					<Condition Binding="{Binding Path=IsSubmenuOpen, RelativeSource={x:Static RelativeSource.Self}}" Value="True"/>
				</MultiDataTrigger.Conditions>
				<Setter Property="BorderBrush" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.PaneCaptionButtonPressedOuterBorderFillKey}}" />
				<Setter Property="Background" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.PaneCaptionButtonPressedCenterFillKey}}" />
			</MultiDataTrigger>

			<!-- IsEnabled Button -->
			<Trigger Property="IsEnabled" Value="False">
				<Setter Property="Foreground" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.GrayTextBrushKey}}"/>
			</Trigger>

		</Style.Triggers>
	</Style>

	<!-- ========== XamDockManager.MenuItemSeparatorStyleKey ========== -->
	<Style x:Key="{x:Static igDock:XamDockManager.MenuItemSeparatorStyleKey}" TargetType="{x:Type Separator}">
		<Setter Property="MinHeight" Value="0"/>
		<Setter Property="Margin" Value="0"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Separator}">
					<Grid Height="{TemplateBinding Height}">
						<Grid.ColumnDefinitions>
							<ColumnDefinition MinWidth="27" Width="Auto" x:Name="iconColumn" SharedSizeGroup="MenuItemIconColumnGroup" />
							<ColumnDefinition Width="*" />
						</Grid.ColumnDefinitions>

						<Border x:Name="IconAreaBackground" Style="{StaticResource MenuItem_IconAreaBackground}"/>

						<Border 
                            Grid.Column="1"
                            Height="2" 
                            Margin="9,2,0,2"
                            Background="{DynamicResource {x:Static igDock:DockManagerBrushKeys.MenuItemSeparatorLightFillKey}}" 
                            BorderBrush="{DynamicResource {x:Static igDock:DockManagerBrushKeys.MenuItemSeparatorDarkFillKey}}"
                            BorderThickness="0,1,0,0"
                            SnapsToDevicePixels="True"/>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="SnapsToDevicePixels" Value="True"/>
		<Style.Triggers>
		</Style.Triggers>
	</Style>

	<!-- ========== XamDockManager.MenuItemStyleKey ========== -->
	<Style x:Key="{x:Static igDock:XamDockManager.MenuItemStyleKey}" TargetType="{x:Type MenuItem}">
		<Setter Property="Foreground" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.DarkBrushKey}}"/>
		<Setter Property="Control.Template" Value="{DynamicResource {x:Static igDock:XamDockManager.SubMenuItemTemplateKey}}"/>
		<Setter Property="SnapsToDevicePixels" Value="True"/>
		<Style.Triggers>
		</Style.Triggers>
	</Style>

	<!-- ========== XamDockManager.ContextMenuStyleKey ========== -->
	<Style x:Key="{x:Static igDock:XamDockManager.ContextMenuStyleKey}" TargetType="{x:Type ContextMenu}">
		<Setter Property="Background" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.MenuItemCenterFillKey}}" />
		<Setter Property="FontFamily" Value="{DynamicResource {x:Static SystemFonts.MenuFontFamilyKey}}" />
		<Setter Property="FontSize" Value="{DynamicResource {x:Static SystemFonts.MenuFontSizeKey}}" />
		<Setter Property="FontStyle" Value="{DynamicResource {x:Static SystemFonts.MenuFontStyleKey}}" />
		<Setter Property="FontWeight" Value="{DynamicResource {x:Static SystemFonts.MenuFontWeightKey}}" />
		<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" />
		<Setter Property="VerticalContentAlignment" Value="Center" />
		<Setter Property="BorderThickness" Value="1" />
		<Setter Property="BorderBrush" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.MenuItemOuterBorderFillKey}}" />
		<Setter Property="Padding" Value="2" />
		<Setter Property="Grid.IsSharedSizeScope" Value="true" />
		<Setter Property="HasDropShadow" Value="{DynamicResource {x:Static SystemParameters.DropShadowKey}}" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ContextMenu}">
					<luna:SystemDropShadowChrome Name="Shdw" Color="Transparent" SnapsToDevicePixels="true">
						<Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
							<ScrollViewer CanContentScroll="true" Style="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type FrameworkElement}, ResourceId=MenuScrollViewer}}">
								<ItemsPresenter Margin="{TemplateBinding Padding}" KeyboardNavigation.DirectionalNavigation="Cycle" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
							</ScrollViewer>
						</Border>
					</luna:SystemDropShadowChrome>
					<ControlTemplate.Triggers>
						<Trigger Property="HasDropShadow" Value="true">
							<Setter TargetName="Shdw" Property="Margin" Value="0,0,5,5" />
							<Setter TargetName="Shdw" Property="Color" Value="#71000000" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- ========== XamDockManager.ToolTipStyleKey ========== -->
	<Style x:Key="{x:Static igDock:XamDockManager.ToolTipStyleKey}" TargetType="{x:Type ToolTip}">
		<Setter Property="BorderBrush" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.ToolTipOuterBorderFillKey}}" />
		<Setter Property="Background" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.ToolTipCenterFillKey}}" />
	</Style>

	<!-- ========== PaneSplitter.PreviewStyleKey ========== -->
	<Style x:Key="{x:Static igDock:PaneSplitter.PreviewStyleKey}" TargetType="{x:Type Control}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Control}">
					<Rectangle Fill="#7F000000" SnapsToDevicePixels="True" />
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- ========== XamDockManager.DropPreviewStyleKey ========== -->
	<Style x:Key="{x:Static igDock:XamDockManager.DropPreviewStyleKey}" TargetType="{x:Type Control}">
		<Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
		<Setter Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.ActiveBorderBrushKey}}" />
		<Setter Property="Opacity" Value=".39" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Control}">
					<Border BorderThickness="3" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" />
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Style.Triggers>
			<Trigger Property="igDock:XamDockManager.DropPreviewTabLocation" Value="Bottom">
				<Setter Property="Template" Value="{StaticResource dropPreviewTabBottom}" />
			</Trigger>
			<Trigger Property="igDock:XamDockManager.DropPreviewTabLocation" Value="Top">
				<Setter Property="Template" Value="{StaticResource dropPreviewTabTop}" />
			</Trigger>
			<Trigger Property="igDock:XamDockManager.DropPreviewTabLocation" Value="Right">
				<Setter Property="Template" Value="{StaticResource dropPreviewTabRight}" />
			</Trigger>
			<Trigger Property="igDock:XamDockManager.DropPreviewTabLocation" Value="Left">
				<Setter Property="Template" Value="{StaticResource dropPreviewTabLeft}" />
			</Trigger>
		</Style.Triggers>
	</Style>

	<!-- ========== XamDockManager.FloatingWindowPreviewStyleKey ========== -->
	<Style x:Key="{x:Static igDock:XamDockManager.FloatingWindowPreviewStyleKey}" TargetType="{x:Type Control}">
		<Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
		<Setter Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.ActiveBorderBrushKey}}" />
        <Setter Property="BorderThickness" Value="3" />
        <Setter Property="Opacity" Value=".39" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Control}">
					<Border BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" />
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- ========== PaneNavigatorItemsPanel.ScrollUpButtonStyleKey ========== -->
	<Style x:Key="{x:Static igDock:PaneNavigatorItemsPanel.ScrollUpButtonStyleKey}" TargetType="{x:Type Button}">
		<Setter Property="Foreground" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.PaneNavigatorDarkTextFillKey}}"/>
		<Setter Property="Background" Value="Transparent"/>
		<Setter Property="Cursor" Value="Hand"/>
		<Setter Property="BorderBrush" Value="Transparent"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
					<Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
						<Grid>
							<Path Margin="0,4,0,4" HorizontalAlignment="Center" VerticalAlignment="Center" Height="4.5" Width="9" Stretch="Fill" Opacity="1" Data="M0,4.5L4.5,0 9,4.5z" Fill="{TemplateBinding Foreground}" />
						</Grid>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- ========== PaneNavigatorItemsPanel.ScrollDownButtonStyleKey ========== -->
	<Style x:Key="{x:Static igDock:PaneNavigatorItemsPanel.ScrollDownButtonStyleKey}" TargetType="{x:Type Button}">
		<Setter Property="Foreground" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.PaneNavigatorDarkTextFillKey}}"/>
		<Setter Property="Background" Value="Transparent"/>
		<Setter Property="Cursor" Value="Hand"/>
		<Setter Property="BorderBrush" Value="Transparent"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
					<Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
						<Grid>
							<Path Margin="0,4,0,4" HorizontalAlignment="Center" VerticalAlignment="Center" Height="4.5" Width="9" Stretch="Fill" Opacity="1" Data="M0,0L4.5,4.5 9,0z" Fill="{TemplateBinding Foreground}" />
						</Grid>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<< -->
	<!--       ResourceKey Styles [End]       -->
	<!-- <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<< -->




	<!-- >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> -->
	<!--           Elements [Start]           -->
	<!-- >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> -->

	<!-- ================================ -->
	<!--          XamDockManager          -->
	<!-- ================================ -->
	<Style TargetType="{x:Type igDock:XamDockManager}">
		<Setter Property="Background" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.XamDockManagerBackgroundFillKey}}"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type igDock:XamDockManager}">
					<AdornerDecorator>
						<Border Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}">
							<DockPanel LastChildFill="True" Margin="{TemplateBinding Padding}">
								<!-- Top Unpinned Tab Area -->
								<DockPanel DockPanel.Dock="Top" LastChildFill="True" Panel.ZIndex="1">
									<FrameworkElement Visibility="Hidden" DockPanel.Dock="Left" Height="0" Width="{Binding Path=ActualWidth, ElementName=PART_UnpinnedTabAreaLeft}"/>
									<FrameworkElement Visibility="Hidden" DockPanel.Dock="Right" Height="0" Width="{Binding Path=ActualWidth, ElementName=PART_UnpinnedTabAreaRight}"/>
									<igDock:UnpinnedTabArea x:Name="PART_UnpinnedTabAreaTop" TabStripPlacement="Bottom" />
								</DockPanel>

								<!-- Bottom Unpinned Tab Area -->
								<DockPanel DockPanel.Dock="Bottom" LastChildFill="True" Panel.ZIndex="1">
									<FrameworkElement Visibility="Hidden" DockPanel.Dock="Left" Height="0" Width="{Binding Path=ActualWidth, ElementName=PART_UnpinnedTabAreaLeft}"/>
									<FrameworkElement Visibility="Hidden" DockPanel.Dock="Right" Height="0" Width="{Binding Path=ActualWidth, ElementName=PART_UnpinnedTabAreaRight}"/>
									<igDock:UnpinnedTabArea x:Name="PART_UnpinnedTabAreaBottom" TabStripPlacement="Top" />
								</DockPanel>

								<!-- Left Unpinned Tab Area -->
								<igDock:UnpinnedTabArea x:Name="PART_UnpinnedTabAreaLeft" DockPanel.Dock="Left" TabStripPlacement="Right"  Panel.ZIndex="1"/>

								<!-- Right Unpinned Tab Area -->
								<igDock:UnpinnedTabArea x:Name="PART_UnpinnedTabAreaRight" DockPanel.Dock="Right" TabStripPlacement="Left"  Panel.ZIndex="1"/>

								<!-- Root Panes container -->
								<igDock:DockManagerPanel x:Name="PART_Panel" Panel.ZIndex="0">
                                    <ContentPresenter x:Name="cp" />
                                </igDock:DockManagerPanel>
							</DockPanel>
						</Border>
					</AdornerDecorator>
					<ControlTemplate.Triggers>
						<Trigger Property="FlyoutAnimation" Value="Slide">
							<Setter Property="ClipToBounds" Value="True" TargetName="PART_Panel" />
						</Trigger>
                        <!-- AS 10/5/09 NA 2010.1 - LayoutMode -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="HasContent" Value="False" />
                                <Condition Property="LayoutMode" Value="FillContainer" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="cp" Property="Visibility" Value="Collapsed" />
                        </MultiTrigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- ================================ -->
	<!--           PaneSplitter           -->
	<!-- ================================ -->
	<Style TargetType="{x:Type igDock:PaneSplitter}">
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type igDock:PaneSplitter}">
					<Border Background="{TemplateBinding Background}"
                  BorderBrush="{TemplateBinding BorderBrush}"
                  BorderThickness="{TemplateBinding BorderThickness}"/>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Style.Triggers>
			<Trigger Property="Orientation" Value="Vertical">
				<Setter Property="MinWidth" Value="4" />
				<Setter Property="Cursor" Value="{x:Static igDock:PaneSplitter.VerticalSplitterCursor}" />
			</Trigger>

			<Trigger Property="Orientation" Value="Horizontal">
				<Setter Property="MinHeight" Value="4" />
				<!--<Setter Property="Cursor" Value="../Cursors/horizontalSplitter.cur" />-->
				<Setter Property="Cursor" Value="{x:Static igDock:PaneSplitter.HorizontalSplitterCursor}" />
			</Trigger>
		</Style.Triggers>
	</Style>

	<!-- ================================ -->
	<!--           ContentPane            -->
	<!-- ================================ -->
	<Style TargetType="{x:Type igDock:ContentPane}">
		<Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
		<Setter Property="BorderBrush" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.ContentPaneBorderFillKey}}" />
		<Setter Property="BorderThickness" Value="1,1,1,1"/>
		<!-- AS 6/30/10 TFS14299
    <Setter Property="SnapsToDevicePixels" Value="True"/>-->
		<Setter Property="TabHeader" Value="{Binding Path=Header, RelativeSource={x:Static RelativeSource.Self}, Converter={StaticResource contentValidationConverter}}" />
        <!-- AS 10/16/08 TFS6264 -->
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type igDock:ContentPane}">
                    <!-- AS 10/10/08 TFS8068
                             We need to contain an adorner layer so any adorner stays with the 
                             adornered elements when the pane is moved. -->
                    <AdornerDecorator>
                        <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="True">
                            <!-- AS 1/4/12 TFS85418 
                                    Switched from DockPanel to Grid so we can handle positionign when minimized -->
                            <Grid Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                <Grid.RowDefinitions>
                                    <RowDefinition x:Name="captionRow" Height="Auto" />
                                    <RowDefinition x:Name="contentRow" Height="*" />
                                </Grid.RowDefinitions>
							    <igDock:PaneHeaderPresenter 
                                    Content="{TemplateBinding Header}"
                                    ContentTemplate="{TemplateBinding HeaderTemplate}"
                                    ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}"
                                    DataContext="{Binding RelativeSource={x:Static RelativeSource.TemplatedParent}}"
                                    Visibility="{TemplateBinding HeaderVisibility}"
                                   />
							    <ContentPresenter 
                                    Grid.Row="1"
                                    x:Name="PART_Content"
                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                    Visibility="{TemplateBinding ContentVisibility}"
                                    Content="{TemplateBinding Content}"
                                    ContentTemplate="{TemplateBinding ContentTemplate}"
                                    ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"/>
						    </Grid>
					    </Border>
                    </AdornerDecorator>
                    <ControlTemplate.Triggers>
                        <!-- AS 1/4/12 TFS85418 -->
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=IsProvidingFloatingWindowCaption, RelativeSource={x:Static RelativeSource.Self}}" Value="True" />
                                <Condition Binding="{Binding Path=(igWindows:ToolWindow.ToolWindow).WindowState, RelativeSource={x:Static RelativeSource.Self}}" Value="Minimized" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Visibility" TargetName="PART_Content" Value="Collapsed" />
                            <Setter Property="Height" TargetName="captionRow" Value="*" />
                            <Setter Property="Height" TargetName="contentRow" Value="0" />
                        </MultiDataTrigger>
                    </ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- ================================ -->
	<!--       PaneHeaderPresenter        -->
	<!-- ================================ -->
	<Style TargetType="{x:Type igDock:PaneHeaderPresenter}">
		<Setter Property="MinHeight" Value="{DynamicResource {x:Static SystemParameters.SmallCaptionHeightKey}}" />
		<Setter Property="TextBlock.TextTrimming" Value="CharacterEllipsis" />
		<Setter Property="Foreground" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.PaneHeaderNotActiveTextFillKey}}" />
		<Setter Property="Background" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.PaneNotActiveCaptionFillKey}}" />
		<Setter Property="Padding" Value="4,0,2,0" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type igDock:PaneHeaderPresenter}">
					<Grid>
						<Border Background="{TemplateBinding Background}"
                    SnapsToDevicePixels="True"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
							<DockPanel Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
								<Button x:Name="closeBtn"
                                  DockPanel.Dock="Right"
                                  Visibility="{Binding Path=Pane.CloseButtonVisibility, RelativeSource={RelativeSource TemplatedParent}}"
                                  Command="{x:Static igDock:ContentPaneCommands.Close}"
                                  CommandParameter="{TemplateBinding Pane}"
                                  Style="{DynamicResource {x:Static igDock:PaneHeaderPresenter.CloseButtonStyleKey}}" 
                                  />
								<Button x:Name="unpinBtn" 
                                  DockPanel.Dock="Right"
                                  Visibility="{Binding Path=Pane.PinButtonVisibility, RelativeSource={RelativeSource TemplatedParent}}"
                                  Command="{x:Static igDock:ContentPaneCommands.TogglePinnedState}"
                                  CommandParameter="{TemplateBinding Pane}"
                                  Style="{DynamicResource {x:Static igDock:PaneHeaderPresenter.PinButtonStyleKey}}" 
                                  />
								<!-- AS 6/24/11 FloatingWindowCaptionSource -->
								<Button x:Name="maxBtn" 
                                  DockPanel.Dock="Right"
                                  Visibility="Collapsed"
                                  Command="{x:Static igWindows:ToolWindow.MaximizeCommand}"
                                  CommandTarget="{Binding Path=(igWindows:ToolWindow.ToolWindow), RelativeSource={RelativeSource Self}}"
                                  Style="{DynamicResource {x:Static igDock:PaneHeaderPresenter.MaximizeButtonStyleKey}}" 
                                  />
								<!-- AS 6/24/11 FloatingWindowCaptionSource -->
								<Button x:Name="minBtn" 
                                  DockPanel.Dock="Right"
                                  Visibility="Collapsed"
                                  Command="{x:Static igWindows:ToolWindow.MinimizeCommand}"
                                  CommandTarget="{Binding Path=(igWindows:ToolWindow.ToolWindow), RelativeSource={RelativeSource Self}}"
                                  Style="{DynamicResource {x:Static igDock:PaneHeaderPresenter.MinimizeButtonStyleKey}}" 
                                  />
                                <Menu x:Name="positionMenu" 
                                    Visibility="{Binding Path=Pane.WindowPositionMenuVisibility, RelativeSource={RelativeSource TemplatedParent}}"
                                    VerticalAlignment="Top" 
                                    DockPanel.Dock="Right" 
                                    Style="{StaticResource RootMenuStyle}">
                                    <MenuItem x:Name="PART_PositionMenuItem"
                                    Style="{DynamicResource {x:Static igDock:PaneHeaderPresenter.PositionMenuItemStyleKey}}" />
								</Menu>
								<ContentPresenter 
                                   HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                   VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                   />
							</DockPanel>
						</Border>
						<Border x:Name="innerBorderHighlight" BorderThickness="1,1,1,0" BorderBrush="{DynamicResource {x:Static igDock:DockManagerBrushKeys.PaneNotActiveCaptionInnerBorderFillKey}}" />
					</Grid>
					<ControlTemplate.Triggers>
						<DataTrigger Binding="{Binding Path=Pane.IsActivePane, RelativeSource={x:Static RelativeSource.Self}}" Value="True">
							<Setter Property="Background" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.PaneActiveCaptionFillKey}}" />
							<Setter Property="Foreground" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.PaneHeaderActiveTextFillKey}}" />
							<Setter TargetName="innerBorderHighlight" Property="BorderBrush" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.PaneActiveCaptionInnerBorderFillKey}}" />

							<!-- AS 4/7/08 BR31678
                                 Foreground is an inherited property so we don't have to set it on the buttons themselves. Doing so
                                 is actually leading to an exception in the wpf framework.
                            <Setter Property="Foreground" TargetName="closeBtn" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.PaneHeaderActiveTextFillKey}}" />
                            <Setter Property="Foreground" TargetName="unpinBtn" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.PaneHeaderActiveTextFillKey}}" />
                            <Setter Property="Foreground" TargetName="PART_PositionMenuItem" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.PaneHeaderActiveTextFillKey}}" />
                            -->
						</DataTrigger>

						<!-- AS 6/24/11 FloatingWindowCaptionSource -->
						<DataTrigger Binding="{Binding Path=Pane.IsProvidingFloatingWindowCaption, RelativeSource={x:Static RelativeSource.Self}}" Value="True">
							<Setter TargetName="maxBtn" Property="Visibility" Value="{Binding Path=(igWindows:ToolWindow.ToolWindow).MaximizeButtonVisibility, RelativeSource={x:Static RelativeSource.Self}}" />
							<Setter TargetName="minBtn" Property="Visibility" Value="{Binding Path=(igWindows:ToolWindow.ToolWindow).MinimizeButtonVisibility, RelativeSource={x:Static RelativeSource.Self}}" />
						</DataTrigger>
						<Trigger Property="igDock:XamDockManager.PaneLocation"  Value="FloatingOnly">
							<Setter TargetName="unpinBtn" Property="Visibility" Value="Collapsed" />
						</Trigger>
						<Trigger Property="igDock:XamDockManager.PaneLocation"  Value="Floating">
							<Setter TargetName="unpinBtn" Property="Visibility" Value="Collapsed" />
						</Trigger>
                        <!-- AS 1/4/12 TFS85418 -->
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=Pane.IsProvidingFloatingWindowCaption, RelativeSource={x:Static RelativeSource.Self}}" Value="True" />
                                <Condition Binding="{Binding Path=(igWindows:ToolWindow.ToolWindow).WindowState, RelativeSource={x:Static RelativeSource.Self}}" Value="Minimized" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="closeBtn" Property="VerticalAlignment" Value="Center" />
                            <Setter TargetName="unpinBtn" Property="VerticalAlignment" Value="Center" />
                            <Setter TargetName="maxBtn" Property="VerticalAlignment" Value="Center" />
                            <Setter TargetName="minBtn" Property="VerticalAlignment" Value="Center" />
                            <Setter TargetName="positionMenu" Property="VerticalAlignment" Value="Center" />
                            <Setter TargetName="positionMenu" Property="Visibility" Value="Collapsed" />
                        </MultiDataTrigger>
						<DataTrigger Binding="{Binding Path=(igWindows:ToolWindow.ToolWindow).WindowState, RelativeSource={x:Static RelativeSource.Self}}" Value="Minimized">
							<Setter TargetName="minBtn" Property="Command" Value="{x:Static igWindows:ToolWindow.RestoreCommand}" />
                        </DataTrigger>
						<DataTrigger Binding="{Binding Path=(igWindows:ToolWindow.ToolWindow).WindowState, RelativeSource={x:Static RelativeSource.Self}}" Value="Maximized">
							<Setter TargetName="maxBtn" Property="Command" Value="{x:Static igWindows:ToolWindow.RestoreCommand}" />
						</DataTrigger>					
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- ================================ -->
	<!--          TabGroupPane            -->
	<!-- ================================ -->
	<Style TargetType="{x:Type igDock:TabGroupPane}">
		<Setter Property="TabStripPlacement" Value="Bottom" />
		<Setter Property="igWindows:TabItemPanel.TabLayoutStyle" Value="SingleRowJustified" />
		<Setter Property="BorderBrush" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.ContentPaneBorderFillKey}}" />
        <!-- AS 10/15/08 TFS6433
             Instead of using the same brush used by the tab item we should have one specifically for the group's background -->
		<Setter Property="Background" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedListGroupFillKey}}" />
		<!-- AS 6/30/10 TFS14299
    <Setter Property="SnapsToDevicePixels" Value="True" />-->
		<Setter Property="Template" Value="{DynamicResource {x:Static igDock:TabGroupPane.DockableTabGroupTemplateKey}}"/>
		<Style.Triggers>
			<Trigger Property="igDock:XamDockManager.PaneLocation" Value="Document">
				<Setter Property="Template" Value="{DynamicResource {x:Static igDock:TabGroupPane.DocumentTabGroupTemplateKey}}" />
                <!-- AS 10/15/08 TFS6433
                     Instead of explicitly binding to WindowBrushKey in the DocumentTabGroupTemplateKey, we should 
                     still template bind to background and set that color as the default background.-->
				<Setter Property="Background" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedDocumentGroupFillKey}}" />
				<Setter Property="ItemsPanel">
					<Setter.Value>
						<ItemsPanelTemplate>
                            <!-- AS 2/12/09 TFS13059 
                                 We need a non-null background so it will be visible to the wpf hittest logic -->
							<igDock:DocumentTabPanel 
                                Background="Transparent"
                                TabStripPlacement="{Binding Path=TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type igDock:TabGroupPane}}}" />
						</ItemsPanelTemplate>
					</Setter.Value>
				</Setter>
			</Trigger>
			<Trigger Property="IsTabItemAreaVisible" Value="False">
				<Setter Property="Template" Value="{StaticResource NoTabItemAreaTabGroupTemplate}" />
			</Trigger>
		</Style.Triggers>
	</Style>

	<!-- ================================ -->
	<!--           PaneTabItem            -->
	<!-- ================================ -->
	<Style TargetType="{x:Type igDock:PaneTabItem}">
		<Setter Property="TextBlock.TextTrimming" Value="CharacterEllipsis" />
        <!-- AS 1/6/10 TFS25270/TFS26279 
            Changed the Background/BorderBrush to bind to attached properties. The attached properties could be 
            set in the style setter or more specifically to address this issue in the style triggers. The style 
            setter would then bind the Background/BorderBrush to the value of that attached property. In that way 
            the style triggers would not (when used in a local style) take precedence over the template triggers.
        -->
        <!--<Setter Property="Background" Value="Transparent" />-->
        <!-- AS 1/6/10 TFS25270 Set default border brush for dockable tabs -->
		<!--<Setter Property="BorderBrush" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedListNotActiveOuterBorderFillKey}}" />-->

        <!-- AS 1/6/10 TFS25270/TFS26279 -->
        <Setter Property="igDock:DockManagerBrushHelper.Background" Value="Transparent" />
        <Setter Property="igDock:DockManagerBrushHelper.BorderBrush" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedListNotActiveOuterBorderFillKey}}" />
        <Setter Property="Background" Value="{Binding Path=(igDock:DockManagerBrushHelper.Background), RelativeSource={RelativeSource Self}}" />
        <Setter Property="BorderBrush" Value="{Binding Path=(igDock:DockManagerBrushHelper.BorderBrush), RelativeSource={RelativeSource Self}}" />

        <Setter Property="Template" Value="{DynamicResource {x:Static igDock:PaneTabItem.DockableTabItemTemplateKey}}"/>
		<Style.Triggers>
            <!-- AS 1/6/10 TFS25270/TFS26279 
                As mentioned above I am changing the setter of all of these style triggers such that they
                set the attached properties on the brushhelper.
            -->
            <!-- AS 1/6/10 TFS25270 Set default border brush for unpinned tabs -->
            <Trigger Property="igDock:XamDockManager.PaneLocation" Value="Unpinned">
                <Setter Property="igDock:DockManagerBrushHelper.BorderBrush" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.UnpinnedTabItemOuterBorderFillKey}}"  />
            </Trigger>

            <!-- AS 1/6/10 TFS25270 
                Add Background setters instead of using template triggers so the background for dockable/unpinned can 
                be controlled in style setters. You'd still have to use style triggers to override the background when 
                isselected/ismouseover if desired. -->
            <Trigger Property="TabStripPlacement" Value="Top">
                <Setter Property="igDock:DockManagerBrushHelper.Background" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedListNotActiveTopCenterFillKey}}"  />
            </Trigger>
            <Trigger Property="TabStripPlacement" Value="Bottom">
                <Setter Property="igDock:DockManagerBrushHelper.Background" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedListNotActiveBottomCenterFillKey}}"  />
            </Trigger>
            <Trigger Property="TabStripPlacement" Value="Left">
                <Setter Property="igDock:DockManagerBrushHelper.Background" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedListNotActiveLeftCenterFillKey}}"  />
            </Trigger>
            <Trigger Property="TabStripPlacement" Value="Right">
                <Setter Property="igDock:DockManagerBrushHelper.Background" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedListNotActiveRightCenterFillKey}}"  />
            </Trigger>

            <Trigger Property="igDock:XamDockManager.PaneLocation" Value="Document">
                <Setter Property="igDock:DockManagerBrushHelper.Background" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedDocumentNotActiveCenterFillKey}}"  />
            </Trigger>
            
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="igDock:XamDockManager.PaneLocation" Value="Unpinned" />
                    <Condition Property="TabStripPlacement" Value="Top" />
                </MultiTrigger.Conditions>
                <Setter Property="igDock:DockManagerBrushHelper.Background" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.UnpinnedTabItemTopCenterFillKey}}"  />
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="igDock:XamDockManager.PaneLocation" Value="Unpinned" />
                    <Condition Property="TabStripPlacement" Value="Bottom" />
                </MultiTrigger.Conditions>
                <Setter Property="igDock:DockManagerBrushHelper.Background" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.UnpinnedTabItemBottomCenterFillKey}}"  />
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="igDock:XamDockManager.PaneLocation" Value="Unpinned" />
                    <Condition Property="TabStripPlacement" Value="Left" />
                </MultiTrigger.Conditions>
                <Setter Property="igDock:DockManagerBrushHelper.Background" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.UnpinnedTabItemRightCenterFillKey}}"  />
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="igDock:XamDockManager.PaneLocation" Value="Unpinned" />
                    <Condition Property="TabStripPlacement" Value="Right" />
                </MultiTrigger.Conditions>
                <Setter Property="igDock:DockManagerBrushHelper.Background" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.UnpinnedTabItemLeftCenterFillKey}}"  />
            </MultiTrigger>
            
            <Trigger Property="igDock:XamDockManager.PaneLocation" Value="Document">
				<Setter Property="Template" Value="{DynamicResource {x:Static igDock:PaneTabItem.DocumentTabItemTemplateKey}}" />
			</Trigger>
			<Trigger Property="igDock:XamDockManager.PaneLocation" Value="Unpinned">
				<Setter Property="Template" Value="{DynamicResource {x:Static igDock:PaneTabItem.UnpinnedTabItemTemplateKey}}" />
			</Trigger>
		</Style.Triggers>
	</Style>

	<!-- ================================ -->
	<!--        DocumentContentHost       -->
	<!-- ================================ -->
	<Style TargetType="{x:Type igDock:DocumentContentHost}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type igDock:DocumentContentHost}">
					<Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
						<igDock:DocumentContentHostPanel 
                                x:Name="PART_Panel"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                Margin="{TemplateBinding Padding}" />
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- ================================ -->
	<!--         UnpinnedTabArea          -->
	<!-- ================================ -->
	<Style TargetType="{x:Type igDock:UnpinnedTabArea}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type igDock:UnpinnedTabArea}">
					<Border Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}">
						<igWindows:XamPager x:Name="TabItemScrollViewer" Focusable="False">
							<ItemsPresenter x:Name="PART_TabHeaderPanel" />
						</igWindows:XamPager>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="TabControl.TabStripPlacement" Value="Top">
							<Setter Property="Margin" Value="0,2,0,0" />
							<Setter Property="Margin" TargetName="PART_TabHeaderPanel" Value="-12,0,0,0"/>
							<Setter Property="ScrollViewer.VerticalScrollBarVisibility" TargetName="TabItemScrollViewer" Value="Disabled"/>
							<Setter Property="ScrollViewer.HorizontalScrollBarVisibility" TargetName="TabItemScrollViewer" Value="Auto"/>
						</Trigger>
						<Trigger Property="TabControl.TabStripPlacement" Value="Bottom">
							<Setter Property="Margin" Value="0,0,0,2" />
							<Setter Property="Margin" TargetName="PART_TabHeaderPanel" Value="-12,0,0,0"/>
							<Setter Property="ScrollViewer.VerticalScrollBarVisibility" TargetName="TabItemScrollViewer" Value="Disabled"/>
							<Setter Property="ScrollViewer.HorizontalScrollBarVisibility" TargetName="TabItemScrollViewer" Value="Auto"/>
						</Trigger>
						<Trigger Property="TabControl.TabStripPlacement" Value="Left">
							<Setter Property="Margin" Value="2,0,0,0" />
							<Setter Property="Margin" TargetName="PART_TabHeaderPanel" Value="0,-12,0,0"/>
							<Setter Property="ScrollViewer.VerticalScrollBarVisibility" TargetName="TabItemScrollViewer" Value="Auto"/>
							<Setter Property="ScrollViewer.HorizontalScrollBarVisibility" TargetName="TabItemScrollViewer" Value="Disabled"/>
						</Trigger>
						<Trigger Property="TabControl.TabStripPlacement" Value="Right">
							<Setter Property="Margin" Value="0,0,2,0" />
							<Setter Property="Margin" TargetName="PART_TabHeaderPanel" Value="0,-12,0,0"/>
							<Setter Property="ScrollViewer.VerticalScrollBarVisibility" TargetName="TabItemScrollViewer" Value="Auto"/>
							<Setter Property="ScrollViewer.HorizontalScrollBarVisibility" TargetName="TabItemScrollViewer" Value="Disabled"/>
						</Trigger>
						<Trigger Property="UIElement.IsEnabled" Value="False">
							<Setter Property="TextElement.Foreground" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.GrayTextBrushKey}}"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- ================================ -->
	<!--         UnpinnedTabFlyout        -->
	<!-- ================================ -->
	<Style TargetType="{x:Type igDock:UnpinnedTabFlyout}">
		<Setter Property="Background" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.UnpinnedTabFlyoutSplitterLightStrokeFillKey}}" />
		<Setter Property="BorderBrush" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.DarkBrushKey}}" />
		<!-- AS 6/30/10 TFS14299
    <Setter Property="SnapsToDevicePixels" Value="True" />-->
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type igDock:UnpinnedTabFlyout}">
					<Border x:Name="border"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        Padding="{TemplateBinding Padding}" 
                        SnapsToDevicePixels="true">
						<Grid SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
							<Border x:Name="HighlightStroke" Background="{DynamicResource {x:Static igDock:DockManagerBrushKeys.UnpinnedTabFlyoutSplitterDarkStrokeFillKey}}" SnapsToDevicePixels="true"/>
							<DockPanel>
								<igDock:UnpinnedTabFlyoutSplitter x:Name="splitter"/>
								<ContentPresenter 
                                    x:Name="Content"
                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                    Content="{TemplateBinding Pane}" />
							</DockPanel>
						</Grid>
					</Border>
					<ControlTemplate.Triggers>
						<!-- Splitter Positions -->

						<!-- Splitters for Panes unpinned to LEFT & TOP are styled similarly, only different orientations -->

						<!-- Pane Unpinned to Left -->
						<Trigger Property="Side" Value="Left">
							<Setter Property="DockPanel.Dock" TargetName="splitter" Value="Right"/>
							<Setter Property="Orientation" TargetName="splitter" Value="Vertical"/>
							<Setter Property="BorderThickness" Value="0,0,1,0"/>
							<Setter TargetName="HighlightStroke" Property="Width" Value="1"/>
							<Setter TargetName="HighlightStroke" Property="HorizontalAlignment" Value="Right"/>
						</Trigger>

						<!-- Pane Unpinned to Top -->
						<Trigger Property="Side" Value="Top">
							<Setter Property="DockPanel.Dock" TargetName="splitter" Value="Bottom"/>
							<Setter Property="Orientation" TargetName="splitter" Value="Horizontal"/>
							<Setter Property="BorderThickness" Value="0,0,0,1"/>
							<Setter TargetName="HighlightStroke" Property="Height" Value="1"/>
							<Setter TargetName="HighlightStroke" Property="VerticalAlignment" Value="Bottom"/>
						</Trigger>



						<!-- Splitters for Panes unpinned to RIGHT & BOTTOM are styled similarly, only different orientations -->

						<!-- Pane Unpinned to Right -->
						<Trigger Property="Side" Value="Right">
							<Setter Property="DockPanel.Dock" TargetName="splitter" Value="Left"/>
							<Setter Property="Orientation" TargetName="splitter" Value="Vertical" />
							<Setter TargetName="HighlightStroke" Property="Width" Value="1"/>
							<Setter TargetName="HighlightStroke" Property="Margin" Value="1,0,0,0"/>
							<Setter TargetName="HighlightStroke" Property="Background" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.LightBrushKey}}"/>
							<Setter TargetName="HighlightStroke" Property="HorizontalAlignment" Value="Left"/>
						</Trigger>

						<!-- Pane Unpinned to Bottom -->
						<Trigger Property="Side" Value="Bottom">
							<Setter Property="DockPanel.Dock" TargetName="splitter" Value="Top"/>
							<Setter Property="Orientation" TargetName="splitter" Value="Horizontal"/>
							<Setter TargetName="HighlightStroke" Property="Height" Value="1"/>
							<Setter TargetName="HighlightStroke" Property="Margin" Value="0,1,0,0"/>
							<Setter TargetName="HighlightStroke" Property="Background" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.LightBrushKey}}"/>
							<Setter TargetName="HighlightStroke" Property="VerticalAlignment" Value="Top"/>
						</Trigger>

					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- ================================ -->
	<!--           PaneNavigator          -->
	<!-- ================================ -->
	<Style TargetType="{x:Type igDock:PaneNavigator}">
		<Setter Property="Foreground" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.PaneNavigatorDarkTextFillKey}}" />
		<Setter Property="Background" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.PaneNavigatorCenterFillKey}}" />
		<Setter Property="BorderBrush" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.PaneNavigatorOuterBorderFillKey}}" />
		<Setter Property="BorderThickness" Value="1" />
		<!-- AS 6/30/10 TFS14299
    <Setter Property="SnapsToDevicePixels" Value="True" />-->
		<Setter Property="MaxHeight" Value="322"/>
		<!--<Setter Property="TextElement.FontSize" Value="12"/>
        <Setter Property="TextElement.FontWeight" Value="Bold"/>-->
		<Setter Property="SelectedPane" Value="{Binding Path=(FocusManager.FocusedElement).DataContext, Mode=OneWay, RelativeSource={x:Static RelativeSource.Self}}" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type igDock:PaneNavigator}">
					<ControlTemplate.Resources>
						<Style x:Key="itemStyle" TargetType="{x:Type ListBoxItem}">
							<Style.Resources>
								<!-- There is a button in the listboxitem that we are using so that clicking on an item
                                    will activate that item and close the navigator as occurs in vs. This style is used 
                                    for that button to provide a dummy visual appearance -->
								<Style TargetType="{x:Type Button}">
									<Setter Property="Focusable" Value="False" />
									<Setter Property="OverridesDefaultStyle" Value="True" />
									<Setter Property="Template">
										<Setter.Value>
											<ControlTemplate TargetType="{x:Type Button}">
												<ContentPresenter />
											</ControlTemplate>
										</Setter.Value>
									</Setter>
								</Style>
							</Style.Resources>
							<Setter Property="FocusVisualStyle" Value="{x:Null}" />
							<Setter Property="Foreground" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.PaneNavigatorDarkTextFillKey}}" />
							<Setter Property="Template">
								<Setter.Value>
									<ControlTemplate TargetType="{x:Type ListBoxItem}">
										<Grid Margin="0,0,0,1">
                                            <Button Command="{x:Static igDock:ContentPaneCommands.ActivatePane}">
                                                <igWindows:CardPanel Background="Transparent">
                                                    <Border x:Name="itemHottrack" SnapsToDevicePixels="True" BorderThickness="1" CornerRadius="3" Background="Transparent" Cursor="Hand">
                                                        <!-- AS 5/8/12 TFS110360 - Switched from Horz StackPanel to DockPanel -->
                                                        <DockPanel x:Name="pnl" Margin="1" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
													        <Image DockPanel.Dock="Left" VerticalAlignment="Center" Width="16" Height="16" Source="{Binding Path=Content.Image, RelativeSource={x:Static RelativeSource.TemplatedParent}}" Margin="0,0,6,0"/>
                                                            <ContentPresenter x:Name="contentItems"
                                                            Content="{Binding Path=Content.Header, RelativeSource={x:Static RelativeSource.TemplatedParent}, Converter={StaticResource contentValidationConverter}}" 
                                                            ContentTemplate="{Binding Path=Content.HeaderTemplate, RelativeSource={x:Static RelativeSource.TemplatedParent}}" 
                                                            ContentTemplateSelector="{Binding Path=Content.HeaderTemplateSelector, RelativeSource={x:Static RelativeSource.TemplatedParent}}" 
                                                            VerticalAlignment="Center" Margin="0,0,0,1">
                                                                <ContentPresenter.Resources>
                                                                    <!-- AS 5/8/12 TFS110360 -->
                                                                    <Style TargetType="TextBlock">
                                                                        <Setter Property="TextTrimming" Value="CharacterEllipsis" />
                                                                    </Style>
                                                                </ContentPresenter.Resources>
                                                            </ContentPresenter>
                                                        </DockPanel>
											        </Border>
											        <Border x:Name="itemHottrackInnerBorder" CornerRadius="2" BorderThickness="1" Margin="1" Cursor="Hand"/>
                                                </igWindows:CardPanel>
                                            </Button>
                                        </Grid>
										<ControlTemplate.Triggers>
											<Trigger Property="IsMouseOver" Value="True">
												<Setter TargetName="itemHottrackInnerBorder" Property="BorderBrush" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.PaneNavigatorItemHottrackInnerBorderFillKey}}"/>
												<Setter TargetName="itemHottrack" Property="BorderBrush" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.PaneNavigatorItemHottrackOuterBorderFillKey}}"/>
												<Setter TargetName="itemHottrack" Property="Background" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.PaneNavigatorItemHottrackCenterFillKey}}" />
											</Trigger>
											<Trigger Property="IsKeyboardFocusWithin" Value="True">
												<Setter TargetName="itemHottrackInnerBorder" Property="BorderBrush" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.PaneNavigatorItemHottrackInnerBorderFillKey}}"/>
												<Setter TargetName="itemHottrack" Property="BorderBrush" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.PaneNavigatorItemHottrackOuterBorderFillKey}}"/>
												<Setter TargetName="itemHottrack" Property="Background" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.PaneNavigatorItemHottrackCenterFillKey}}" />
												<Setter TargetName="contentItems" Property="TextElement.Foreground" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.PaneNavigatorLightTextFillKey}}" />
											</Trigger>
											<!-- AS 4/25/08
                                                Since the selection is inconsistent (e.g. allows unselection when 
                                                holding the ctrl key), we decided to tie the navigator around the
                                                keyboard focus.
                                            <Trigger Property="IsKeyboardFocused" Value="True">
                                                <Setter Property="IsSelected" Value="True" />
											</Trigger>-->
										</ControlTemplate.Triggers>
									</ControlTemplate>
								</Setter.Value>
							</Setter>
						</Style>
					</ControlTemplate.Resources>
					<Border x:Name="border"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        Padding="{TemplateBinding Padding}" 
                        SnapsToDevicePixels="true"
                        CornerRadius="5">
						<Grid SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
							<Grid.RowDefinitions>
								<RowDefinition Height="Auto" />
								<RowDefinition Height="*" />
								<RowDefinition Height="Auto" />
							</Grid.RowDefinitions>
							<!-- Row 0 -->
							<Border 
                x:Name="headerBackground" 
                MinHeight="54" 
                Background="{DynamicResource {x:Static igDock:DockManagerBrushKeys.PaneNavigatorHeaderFillKey}}" 
                SnapsToDevicePixels="true"
                CornerRadius="4,4,0,0">
								<Grid x:Name="header" Margin="15,9,0,0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
									<Grid.RowDefinitions>
										<RowDefinition Height="Auto"/>
										<RowDefinition Height="Auto"/>
									</Grid.RowDefinitions>
									<StackPanel Orientation="Horizontal" >
										<Image VerticalAlignment="Center" Width="16" Height="16" Source="{Binding Path=SelectedPane.Image, RelativeSource={x:Static RelativeSource.TemplatedParent}}" />
										<ContentControl x:Name="selectedPaneHeader"
                                                Focusable="False"
                                                TextElement.FontSize="12"
                                                TextElement.FontWeight="Bold"
                                                TextElement.Foreground="{DynamicResource {x:Static igDock:DockManagerBrushKeys.LightBrushKey}}"
                                                Content="{Binding Path=SelectedPane.Header, RelativeSource={x:Static RelativeSource.TemplatedParent}, Converter={StaticResource contentValidationConverter}}" 
                                                ContentTemplate="{Binding Path=SelectedPane.HeaderTemplate, RelativeSource={x:Static RelativeSource.TemplatedParent}}" 
                                                ContentTemplateSelector="{Binding Path=SelectedPane.HeaderTemplateSelector, RelativeSource={x:Static RelativeSource.TemplatedParent}}" 
                                                Margin="5,1,0,0"/>
									</StackPanel>
									<ContentControl x:Name="selectedPaneTitle"
												Grid.Row="1"
                                                Focusable="False"
                                                Content="{Binding Path=SelectedPane.NavigatorTitle, RelativeSource={x:Static RelativeSource.TemplatedParent}}" 
                                                ContentTemplate="{Binding Path=SelectedPane.NavigatorTitleTemplate, RelativeSource={x:Static RelativeSource.TemplatedParent}}" 
                                                ContentTemplateSelector="{Binding Path=SelectedPane.NavigatorTitleTemplateSelector, RelativeSource={x:Static RelativeSource.TemplatedParent}}" 
                                                Margin="0,8,0,0"/>
								</Grid>
							</Border>
							<!-- Row 1 -->
                            <Border Background="{TemplateBinding Background}" Grid.Row="1" SnapsToDevicePixels="true">
                                <Grid x:Name="gridLists" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
								      KeyboardNavigation.ControlTabNavigation="Cycle" 
								      KeyboardNavigation.TabNavigation="Cycle" 
								      KeyboardNavigation.DirectionalNavigation="Cycle">
								    <Grid.ColumnDefinitions>
									    <ColumnDefinition Width="Auto" />
									    <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="Auto" />
								    </Grid.ColumnDefinitions>
								    <Grid.RowDefinitions>
									    <RowDefinition Height="Auto"/>
									    <RowDefinition Height="*" />
								    </Grid.RowDefinitions>


								    <TextBlock x:Name="activeToolWindowsLabel" Text="{Binding Path=Value, Source={x:Static igDock:ResourcesDockManager.PaneNavigatorActiveToolWindowsLabel}}" Margin="14,7,0,0" TextElement.FontWeight="Bold"/>
                                    <TextBlock x:Name="documentsLabel" Grid.Column ="1" Text="{Binding Path=Value, Source={x:Static igDock:ResourcesDockManager.PaneNavigatorActiveFilesLabel}}" Margin="6,7,0,0" TextElement.FontWeight="Bold"/>
                                    <ListBox x:Name="lstPanes"
                                             Grid.Row="1"
                                             ItemContainerStyle="{StaticResource itemStyle}"
                                             SelectedItem="{Binding Path=SelectedPane, Mode=OneWay, RelativeSource={x:Static RelativeSource.TemplatedParent}}"
                                             ItemsSource="{Binding Path=Panes, RelativeSource={x:Static RelativeSource.TemplatedParent}}"
                                             KeyboardNavigation.DirectionalNavigation="Continue" 
                                             KeyboardNavigation.TabNavigation="Continue"
                                             Margin="14,8,0,0">
									    <ListBox.ItemsPanel>
										    <ItemsPanelTemplate>
											    <igDock:PaneNavigatorItemsPanel ColumnWidth="179" MaxColumns="1"/>
										    </ItemsPanelTemplate>
									    </ListBox.ItemsPanel>
								    </ListBox>
                                    <ListBox x:Name="lstDocuments"
                                             Grid.Row="1"
                                             ItemContainerStyle="{StaticResource itemStyle}"
                                             SelectedItem="{Binding Path=SelectedPane, Mode=OneWay, RelativeSource={x:Static RelativeSource.TemplatedParent}}"
                                             KeyboardNavigation.DirectionalNavigation="Continue" 
                                             KeyboardNavigation.TabNavigation="Continue"
                                             Grid.Column="1" 
                                             ItemsSource="{Binding Path=Documents, RelativeSource={x:Static RelativeSource.TemplatedParent}}"
                                             Margin="6,8,0,0">
									    <ListBox.ItemsPanel>
										    <ItemsPanelTemplate>
											    <igDock:PaneNavigatorItemsPanel ColumnWidth="179" MaxColumns="4"/>
										    </ItemsPanelTemplate>
									    </ListBox.ItemsPanel>
								    </ListBox>

                                    <!-- Preview -->
                                    <Viewbox x:Name="viewbox" Grid.Column="2" Grid.Row="1" Stretch="None" StretchDirection="Both" 
								         MinHeight="200"
								         HorizontalAlignment="Right"
								         VerticalAlignment="Top"
								         Margin="10,10,15,10"
								         Width="200">
                                        <Rectangle 
								            Width="{Binding Path=SelectedPane.ActualWidth, RelativeSource={x:Static RelativeSource.TemplatedParent}}"
								            Height="{Binding Path=SelectedPane.ActualHeight, RelativeSource={x:Static RelativeSource.TemplatedParent}}"
    										>
                                            <Rectangle.Fill>
                                                <VisualBrush AlignmentX="Left" AlignmentY="Top" Stretch="None"  AutoLayoutContent="False" Visual="{Binding Path=SelectedPane, RelativeSource={x:Static RelativeSource.TemplatedParent}}" />
                                            </Rectangle.Fill>
                                        </Rectangle>
                                    </Viewbox>
                                </Grid>
                            </Border>

							<!-- Row 2 -->
							<Grid Grid.Row="2" MinHeight="27">
								<Border 
                  x:Name="footerBackground" 
                  Background="{DynamicResource {x:Static igDock:DockManagerBrushKeys.PaneNavigatorFooterFillKey}}" 
                  SnapsToDevicePixels="true"
                  CornerRadius="0,0,4,4">
                                    <ContentControl x:Name="selectedPaneDescription" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
									    Focusable="False"
									    Content="{Binding Path=SelectedPane.NavigatorDescription, RelativeSource={x:Static RelativeSource.TemplatedParent}}" 
									    ContentTemplate="{Binding Path=SelectedPane.NavigatorDescriptionTemplate, RelativeSource={x:Static RelativeSource.TemplatedParent}}" 
									    ContentTemplateSelector="{Binding Path=SelectedPane.NavigatorDescriptionTemplateSelector, RelativeSource={x:Static RelativeSource.TemplatedParent}}"
                                        VerticalAlignment="Center"
                                        Margin="13,0,13,0"/>
								</Border>
							</Grid>
						</Grid>
					</Border>
					<ControlTemplate.Triggers>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="SelectedPaneAspectRatioIsWide" Value="False"/>
								<Condition Property="SelectedPaneIsDocument" Value="False"/>
							</MultiTrigger.Conditions>
							<Setter TargetName="viewbox" Property="Stretch" Value="Uniform"/>
						</MultiTrigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="SelectedPaneAspectRatioIsWide" Value="True"/>
								<Condition Property="SelectedPaneIsDocument" Value="True"/>
							</MultiTrigger.Conditions>
							<Setter TargetName="viewbox" Property="Stretch" Value="Uniform"/>
							<Setter TargetName="viewbox" Property="StretchDirection" Value="DownOnly"/>
						</MultiTrigger>

						<DataTrigger Binding="{Binding Source={x:Static interop:BrowserInteropHelper.IsBrowserHosted}}" Value="True">
							<Setter TargetName="border" Property="CornerRadius" Value="0"/>
							<Setter TargetName="footerBackground" Property="CornerRadius" Value="0"/>
							<Setter TargetName="headerBackground" Property="CornerRadius" Value="0"/>
						</DataTrigger>

                        <!-- AS 10/5/09 NA 2010.1 - LayoutMode -->
                        <DataTrigger Binding="{Binding Path=(igDock:XamDockManager.DockManager).HasDocumentContentHost, RelativeSource={RelativeSource Self}}" Value="False">
                            <Setter TargetName="documentsLabel" Property="Visibility" Value="Collapsed"/>
                            <Setter TargetName="lstDocuments" Property="Visibility" Value="Collapsed"/>
                        </DataTrigger>
                    </ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Style.Resources>
			<Style TargetType="{x:Type ListBox}">
				<Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Hidden" />
				<Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Hidden" />
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="{x:Type ListBox}">
							<ScrollViewer CanContentScroll="True">
								<ItemsPresenter />
							</ScrollViewer>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>
		</Style.Resources>
	</Style>

	<!-- ================================ -->
	<!--         DockingIndicator         -->
	<!-- ================================ -->
	<Style TargetType="{x:Type igDock:DockingIndicator}">
		<Setter Property="BorderThickness" Value="1" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type igDock:DockingIndicator}">
					<!--<Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}" 
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <TextBlock x:Name="tempFiller" Margin="6"/>
                    </Border>-->
                    <!-- AS 1/13/11 TFS61174 Added outer element with transparent background for hittesting when IsEnabled of DockingIndicator gets set to false -->
                    <Grid Background="Transparent">
					<Grid Width="36" Height="35" x:Name="DockingIndicator" Opacity="0.5">
						<Rectangle Fill="{DynamicResource {x:Static igDock:DockManagerBrushKeys.LightBrushKey}}" RadiusX="5" RadiusY="5" SnapsToDevicePixels="True" x:Name="DockingIndicatorBackground"/>
						<Rectangle Fill="{DynamicResource {x:Static igDock:DockManagerBrushKeys.AeroDockingIndicatorGroupNormalCenterFillKey}}" Stroke="{DynamicResource {x:Static igDock:DockManagerBrushKeys.AeroDockingIndicatorGroupNormalOuterBorderFillKey}}" RadiusX="4" RadiusY="4" Margin="2,2,2,2" SnapsToDevicePixels="True" x:Name="DockingIndicatorOuterBorderCenter"/>
						<Rectangle Stroke="{DynamicResource {x:Static igDock:DockManagerBrushKeys.AeroDockingIndicatorGroupNormalInnerBorderFillKey}}" Margin="3,3,3,3" RadiusX="3" RadiusY="3" SnapsToDevicePixels="True" x:Name="DockingIndicatorInnerBorder"/>
						<Path x:Name="DockingIndicatorGlyph"
                            VerticalAlignment="Center"
                            HorizontalAlignment="Right" 
                            Height="9"
                            Stretch="Fill"
                            Opacity="1"
                            Data="M 19,8 C19,8 19,15 19,15 19,15 15.5,11.5 15.5,11.5 15.5,11.5 19,8 19,8 z" 
                            Width="4.5" 
                            Margin="0,0,7,0" 
                            Fill="{DynamicResource {x:Static igDock:DockManagerBrushKeys.DockingIndicatorGlyphFillKey}}"/>
                    </Grid>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="Position" Value="Left">
							<Setter TargetName="DockingIndicator" Property="IsEnabled" Value="{Binding Path=CanDockLeft, RelativeSource={x:Static RelativeSource.TemplatedParent}}" />
						</Trigger>

						<Trigger Property="Position" Value="Right">
							<Setter TargetName="DockingIndicatorGlyph" Property="HorizontalAlignment" Value="Left"/>
							<Setter TargetName="DockingIndicatorGlyph" Property="VerticalAlignment" Value="Center"/>
							<Setter TargetName="DockingIndicatorGlyph" Property="Margin" Value="7,0,0,0"/>
							<Setter Property="LayoutTransform" TargetName="DockingIndicatorGlyph">
								<Setter.Value>
									<RotateTransform Angle="180" />
								</Setter.Value>
							</Setter>
							<Setter TargetName="DockingIndicator" Property="IsEnabled" Value="{Binding Path=CanDockRight, RelativeSource={x:Static RelativeSource.TemplatedParent}}" />
						</Trigger>

						<Trigger Property="Position" Value="Top">
							<Setter TargetName="DockingIndicatorGlyph" Property="HorizontalAlignment" Value="Center"/>
							<Setter TargetName="DockingIndicatorGlyph" Property="VerticalAlignment" Value="Bottom"/>
							<Setter TargetName="DockingIndicatorGlyph" Property="Margin" Value="0,0,0,7"/>
							<Setter Property="LayoutTransform" TargetName="DockingIndicatorGlyph">
								<Setter.Value>
									<RotateTransform Angle="90" />
								</Setter.Value>
							</Setter>
							<Setter TargetName="DockingIndicator" Property="IsEnabled" Value="{Binding Path=CanDockTop, RelativeSource={x:Static RelativeSource.TemplatedParent}}" />
						</Trigger>

						<Trigger Property="Position" Value="Bottom">
							<Setter TargetName="DockingIndicatorGlyph" Property="HorizontalAlignment" Value="Center"/>
							<Setter TargetName="DockingIndicatorGlyph" Property="VerticalAlignment" Value="Top"/>
							<Setter TargetName="DockingIndicatorGlyph" Property="Margin" Value="0,7,0,0"/>
							<Setter Property="LayoutTransform" TargetName="DockingIndicatorGlyph">
								<Setter.Value>
									<RotateTransform Angle="-90" />
								</Setter.Value>
							</Setter>
							<Setter TargetName="DockingIndicator" Property="IsEnabled" Value="{Binding Path=CanDockBottom, RelativeSource={x:Static RelativeSource.TemplatedParent}}" />
						</Trigger>

						<!-- HotTracking -->
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="Position" Value="Left"/>
								<Condition Property="HotTrackPosition" Value="Left" />
							</MultiTrigger.Conditions>
							<Setter TargetName="DockingIndicatorOuterBorderCenter" Property="Stroke" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.AeroDockingIndicatorGroupHottrackOuterBorderFillKey}}" />
							<Setter TargetName="DockingIndicatorOuterBorderCenter" Property="Fill" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.AeroDockingIndicatorGroupHottrackCenterFillKey}}" />
							<Setter TargetName="DockingIndicatorInnerBorder" Property="Stroke" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.AeroDockingIndicatorGroupHottrackInnerBorderFillKey}}" />
							<Setter TargetName="DockingIndicator" Property="Opacity" Value="1" />
						</MultiTrigger>

						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="Position" Value="Right"/>
								<Condition Property="HotTrackPosition" Value="Right" />
							</MultiTrigger.Conditions>
							<Setter TargetName="DockingIndicatorOuterBorderCenter" Property="Stroke" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.AeroDockingIndicatorGroupHottrackOuterBorderFillKey}}" />
							<Setter TargetName="DockingIndicatorOuterBorderCenter" Property="Fill" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.AeroDockingIndicatorGroupHottrackCenterFillKey}}" />
							<Setter TargetName="DockingIndicatorInnerBorder" Property="Stroke" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.AeroDockingIndicatorGroupHottrackInnerBorderFillKey}}" />
							<Setter TargetName="DockingIndicator" Property="Opacity" Value="1" />
						</MultiTrigger>

						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="Position" Value="Top"/>
								<Condition Property="HotTrackPosition" Value="Top" />
							</MultiTrigger.Conditions>
							<Setter TargetName="DockingIndicatorOuterBorderCenter" Property="Stroke" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.AeroDockingIndicatorGroupHottrackOuterBorderFillKey}}" />
							<Setter TargetName="DockingIndicatorOuterBorderCenter" Property="Fill" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.AeroDockingIndicatorGroupHottrackCenterFillKey}}" />
							<Setter TargetName="DockingIndicatorInnerBorder" Property="Stroke" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.AeroDockingIndicatorGroupHottrackInnerBorderFillKey}}" />
							<Setter TargetName="DockingIndicator" Property="Opacity" Value="1" />
						</MultiTrigger>

						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="Position" Value="Bottom"/>
								<Condition Property="HotTrackPosition" Value="Bottom" />
							</MultiTrigger.Conditions>
							<Setter TargetName="DockingIndicatorOuterBorderCenter" Property="Stroke" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.AeroDockingIndicatorGroupHottrackOuterBorderFillKey}}" />
							<Setter TargetName="DockingIndicatorOuterBorderCenter" Property="Fill" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.AeroDockingIndicatorGroupHottrackCenterFillKey}}" />
							<Setter TargetName="DockingIndicatorInnerBorder" Property="Stroke" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.AeroDockingIndicatorGroupHottrackInnerBorderFillKey}}" />
							<Setter TargetName="DockingIndicator" Property="Opacity" Value="1" />
						</MultiTrigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Style.Triggers>
			<Trigger Property="Position" Value="Center">
				<Setter Property="Template" Value="{StaticResource centerIndicator}" />
			</Trigger>
		</Style.Triggers>
	</Style>


    <!-- <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<< -->
	<!--            Elements [End]            -->
	<!-- <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<< -->

</ResourceDictionary>
