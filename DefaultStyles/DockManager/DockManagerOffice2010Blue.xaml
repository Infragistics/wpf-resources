<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:igWindows="http://infragistics.com/Windows"
                    xmlns:igDock="http://infragistics.com/DockManager" 
                    xmlns:igWinThemes="http://infragistics.com/Themes"
                    xmlns:luna="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Luna"
    xmlns:igThemes="http://infragistics.com/Themes"
	>
    <ResourceDictionary.MergedDictionaries>
        <!--<igThemes:DockManagerGeneric />
        <igThemes:DockManagerOffice2k7Black />
        <igThemes:DockManagerOffice2k7BlueBrushes />-->
        <ResourceDictionary Source="DockManagerOffice2k7Black.xaml" />
        <ResourceDictionary Source="DockManagerOffice2010Blue_Brushes.xaml" />
    </ResourceDictionary.MergedDictionaries>
 
 <!--  ========== ToolWindow ==========  -->
 <Style BasedOn="{x:Static igWinThemes:PrimitivesOffice2010Blue.ToolWindow}" TargetType="{x:Type igDock:PaneToolWindow}">
  <Setter Property="UseOSNonClientArea" Value="False" />
 </Style>

 <!--  ========== centerIndicator ==========  -->
 <ControlTemplate x:Key="centerIndicator" TargetType="{x:Type igDock:DockingIndicator}">
  <Grid x:Name="PART_DockCenter">
   <Grid.ColumnDefinitions>
    <ColumnDefinition Width="Auto" />
    <ColumnDefinition Width="Auto" />
    <ColumnDefinition Width="Auto" />
    <ColumnDefinition Width="Auto" />
    <ColumnDefinition Width="Auto" />
   </Grid.ColumnDefinitions>
   <Grid.RowDefinitions>
    <RowDefinition Height="Auto" />
    <RowDefinition Height="Auto" />
    <RowDefinition Height="Auto" />
    <RowDefinition Height="Auto" />
    <RowDefinition Height="Auto" />
   </Grid.RowDefinitions>

   <!--  borders  -->
   <Border x:Name="topBd" Grid.RowSpan="2" Grid.Column="2" Margin="0,0,0,10" Background="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igDock:XamDockManager}, ResourceId=DockIndicatorBackgroundBrush}}" BorderBrush="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igDock:XamDockManager}, ResourceId=DockIndicatorBorderbrush}}" BorderThickness="1,1,1,0" />
   <Border x:Name="leftBd" Grid.Row="2" Grid.ColumnSpan="2" Margin="0,0,10,0" Background="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igDock:XamDockManager}, ResourceId=DockIndicatorBackgroundBrush}}" BorderBrush="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igDock:XamDockManager}, ResourceId=DockIndicatorBorderbrush}}" BorderThickness="1,1,0,1" />
   <Border x:Name="rightBd" Grid.Row="2" Grid.Column="3" Grid.ColumnSpan="2" Margin="10,0,0,0" Background="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igDock:XamDockManager}, ResourceId=DockIndicatorBackgroundBrush}}" BorderBrush="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igDock:XamDockManager}, ResourceId=DockIndicatorBorderbrush}}" BorderThickness="0,1,1,1" />
   <Border x:Name="bottomBd" Grid.Row="3" Grid.RowSpan="2" Grid.Column="2" Margin="0,10,0,0" Background="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igDock:XamDockManager}, ResourceId=DockIndicatorBackgroundBrush}}" BorderBrush="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igDock:XamDockManager}, ResourceId=DockIndicatorBorderbrush}}" BorderThickness="1,0,1,1" />

   <!--  fill for remaining center - between diagonal paths and remaining unfilled space left by borders  -->
   <Path x:Name="centerOctFill" Grid.Row="1" Grid.RowSpan="3" Grid.Column="1" Grid.ColumnSpan="3" Width="60" Height="60" Data="M 62,10.95 C62,10.95 51.04,0 51.04,0 51.04,0 10.95,0 10.95,0 10.95,0 0,10.95 0,10.95 0,10.95 0,51.04 0,51.04 0,51.04 10.95,62 10.95,62 10.95,62 51.04,62 51.04,62 51.04,62 62,51.04 62,51.04 62,51.04 62,10.95 62,10.95 z" Fill="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igDock:XamDockManager}, ResourceId=DockIndicatorBackgroundBrush}}" Stretch="Fill" />
   <!--  diagonal corner paths  -->
   <Path x:Name="topRight" Grid.Row="1" Grid.Column="3" Width="11" Height="11" HorizontalAlignment="Left" VerticalAlignment="Bottom" Data="M 0,1.20 C0,1.20 9.79,11 9.79,11 9.79,11 11.20,11 11.20,11 11.20,11 0,-0.20 0,-0.20 0,-0.20 0,1.20 0,1.20 z" Fill="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igDock:XamDockManager}, ResourceId=DockIndicatorBorderbrush}}" Stretch="Fill" />
   <Path x:Name="bottomRight" Grid.Row="3" Grid.Column="3" Width="11" Height="11" HorizontalAlignment="Left" VerticalAlignment="Top" Data="M 0,9.58 C0,9.58 9.79,-0.20 9.79,-0.20 9.79,-0.20 11.20,-0.20 11.20,-0.20 11.20,-0.20 0,11 0,11 0,11 0,9.58 0,9.58 z" Fill="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igDock:XamDockManager}, ResourceId=DockIndicatorBorderbrush}}" Stretch="Fill" />
   <Path x:Name="bottomLeft" Grid.Row="3" Grid.Column="1" Width="11" Height="11" HorizontalAlignment="Right" VerticalAlignment="Top" Data="M 11.20,9.58 C11.20,9.58 1.40,-0.20 1.40,-0.20 1.40,-0.20 0,-0.20 0,-0.20 0,-0.20 11.20,11 11.20,11 11.20,11 11.20,9.58 11.20,9.58 z" Fill="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igDock:XamDockManager}, ResourceId=DockIndicatorBorderbrush}}" Stretch="Fill" />
   <Path x:Name="topLeft" Grid.Row="1" Grid.Column="1" Width="11" Height="11" HorizontalAlignment="Right" VerticalAlignment="Bottom" Data="M 11.20,1.20 C11.20,1.20 1.40,11 1.40,11 1.40,11 0,11 0,11 0,11 11.20,-0.20 11.20,-0.20 11.20,-0.20 11.20,1.20 11.20,1.20 z" Fill="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igDock:XamDockManager}, ResourceId=DockIndicatorBorderbrush}}" Stretch="Fill" />

   <!--  Center Indicator  -->
   <igWindows:CardPanel x:Name="center" Grid.Row="2" Grid.Column="2" Background="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igDock:XamDockManager}, ResourceId=TransparentBrush}}" IsHitTestVisible="False" Opacity="0.75">
    <Grid HorizontalAlignment="Center" VerticalAlignment="Center" IsEnabled="{TemplateBinding CanDockCenter}">
     <Border Width="32" Height="32" Margin="0" Background="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igDock:XamDockManager}, ResourceId=DocTypeIndicatorLightBackgroundBrush}}" BorderBrush="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igDock:XamDockManager}, ResourceId=DocTypeIndicatorLIghtStrokeBrush}}" BorderThickness="1">
      <Grid>
       <Border Width="24" Height="24" Margin="3" Background="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igDock:XamDockManager}, ResourceId=DocTypeIndicatorBackgroundBrush}}" BorderBrush="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igDock:XamDockManager}, ResourceId=DockTypeIndicatorStrokeBrush}}" BorderThickness="1,3,1,1" />
      </Grid>
     </Border>
    </Grid>
   </igWindows:CardPanel>

   <!--  Right Indicator  -->
   <igWindows:CardPanel x:Name="PART_DockRight" Grid.Row="2" Grid.Column="4" Background="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igDock:XamDockManager}, ResourceId=TransparentBrush}}" Opacity="0.75">
    <Grid x:Name="rightIndicatorIcon" IsEnabled="{TemplateBinding CanDockRight}">
     <Border Width="30" Height="40" BorderThickness="1">
      <Border Width="32" Height="32" Margin="-10 0 0 0 " Background="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igDock:XamDockManager}, ResourceId=DocTypeIndicatorLightBackgroundBrush}}" BorderBrush="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igDock:XamDockManager}, ResourceId=DocTypeIndicatorLIghtStrokeBrush}}" BorderThickness="1">
       <Grid>
        <Border Width="12" Height="24" Margin="14,3,4,3" Background="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igDock:XamDockManager}, ResourceId=DocTypeIndicatorBackgroundBrush}}" BorderBrush="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igDock:XamDockManager}, ResourceId=DockTypeIndicatorStrokeBrush}}" BorderThickness="1,3,1,1" />
        <Path Width="8" Margin="1.396,13.422,0,12.578" HorizontalAlignment="Left" Data="M3.78125,0 L7.4533691,3.921875 L0.078248896,3.9061258 z" Fill="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedDocumentGlyphFillKey}}" RenderTransformOrigin="0.5,0.5" Stretch="Fill" Stroke="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedDocumentGlyphFillKey}}">
         <Path.RenderTransform>
          <RotateTransform Angle="810" />
         </Path.RenderTransform>
        </Path>
       </Grid>
      </Border>
     </Border>
    </Grid>
   </igWindows:CardPanel>

   <!--  Left Indicator  -->
   <igWindows:CardPanel x:Name="PART_DockLeft" Grid.Row="2" Grid.Column="0" Background="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igDock:XamDockManager}, ResourceId=TransparentBrush}}" Opacity="0.75">
    <Grid x:Name="leftIndicatorIcon" IsEnabled="{TemplateBinding CanDockLeft}">
     <Border Width="30" Height="40" BorderThickness="1">
      <Border Width="32" Height="32" Margin="0 0 -10 0 " Background="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igDock:XamDockManager}, ResourceId=DocTypeIndicatorLightBackgroundBrush}}" BorderBrush="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igDock:XamDockManager}, ResourceId=DocTypeIndicatorLIghtStrokeBrush}}" BorderThickness="1">
       <Grid>
        <Border Width="12" Height="24" Margin="3,3,0,3" HorizontalAlignment="Left" Background="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igDock:XamDockManager}, ResourceId=DocTypeIndicatorBackgroundBrush}}" BorderBrush="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igDock:XamDockManager}, ResourceId=DockTypeIndicatorStrokeBrush}}" BorderThickness="1,3,1,1" />
        <Path Width="8" Margin="0,13.172,3.604,12.828" HorizontalAlignment="Right" Data="M3.78125,0 L7.4533691,3.921875 L0.078248896,3.9061258 z" Fill="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedDocumentGlyphFillKey}}" RenderTransformOrigin="0.5,0.5" Stretch="Fill" Stroke="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedDocumentGlyphFillKey}}">
         <Path.RenderTransform>
          <RotateTransform Angle="270" />
         </Path.RenderTransform>
        </Path>
       </Grid>
      </Border>
     </Border>
    </Grid>
   </igWindows:CardPanel>

   <!--  Top Indicator  -->
   <igWindows:CardPanel x:Name="PART_DockTop" Grid.Row="0" Grid.Column="2" Background="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igDock:XamDockManager}, ResourceId=TransparentBrush}}" Opacity="0.75">
    <Grid x:Name="topIndicatorIcon" IsEnabled="{TemplateBinding CanDockTop}">
     <Border Width="40" Height="30" BorderThickness="1">
      <Border Width="32" Height="32" Margin="0 0 0 -10 " Background="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igDock:XamDockManager}, ResourceId=DocTypeIndicatorLightBackgroundBrush}}" BorderBrush="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igDock:XamDockManager}, ResourceId=DocTypeIndicatorLIghtStrokeBrush}}" BorderThickness="1">
       <Grid>
        <Border Width="24" Height="12" Margin="3,3,3,0" VerticalAlignment="Top" Background="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igDock:XamDockManager}, ResourceId=DocTypeIndicatorBackgroundBrush}}" BorderBrush="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igDock:XamDockManager}, ResourceId=DockTypeIndicatorStrokeBrush}}" BorderThickness="1,3,1,1" />
        <Path Width="8" Height="4" Margin="11.145,0,10.854,5.828" VerticalAlignment="Bottom" Data="M3.78125,0 L7.4533691,3.921875 L0.078248896,3.9061258 z" Fill="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedDocumentGlyphFillKey}}" Stretch="Fill" Stroke="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedDocumentGlyphFillKey}}" />
       </Grid>
      </Border>
     </Border>
    </Grid>
   </igWindows:CardPanel>

   <!--  Bottom Indicator  -->
   <igWindows:CardPanel x:Name="PART_DockBottom" Grid.Row="4" Grid.Column="2" Background="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igDock:XamDockManager}, ResourceId=TransparentBrush}}" Opacity="0.75">
    <Grid x:Name="bottomIndicatorIcon" IsEnabled="{TemplateBinding CanDockBottom}">
     <Border Width="40" Height="30" BorderThickness="1">
      <Border Width="32" Height="32" Margin="0 -10 0 0" Background="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igDock:XamDockManager}, ResourceId=DocTypeIndicatorLightBackgroundBrush}}" BorderBrush="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igDock:XamDockManager}, ResourceId=DocTypeIndicatorLIghtStrokeBrush}}" BorderThickness="1">
       <Grid>
        <Border Width="24" Margin="3,14,3,4" Background="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igDock:XamDockManager}, ResourceId=DocTypeIndicatorBackgroundBrush}}" BorderBrush="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igDock:XamDockManager}, ResourceId=DockTypeIndicatorStrokeBrush}}" BorderThickness="1,3,1,1" />
        <Path Width="8" Height="4" Margin="10.895,4.172,11.104,0" VerticalAlignment="Top" Data="M3.78125,0 L7.4533691,3.921875 L0.078248896,3.9061258 z" Fill="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedDocumentGlyphFillKey}}" RenderTransformOrigin="0.5,0.5" Stretch="Fill" Stroke="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedDocumentGlyphFillKey}}">
         <Path.RenderTransform>
          <RotateTransform Angle="180" />
         </Path.RenderTransform>
        </Path>
       </Grid>
      </Border>
     </Border>
    </Grid>
   </igWindows:CardPanel>
  </Grid>
  <ControlTemplate.Triggers>
   <Trigger Property="HotTrackPosition" Value="Center" />
   <Trigger Property="HotTrackPosition" Value="Left" />
   <Trigger Property="HotTrackPosition" Value="Right" />
   <Trigger Property="HotTrackPosition" Value="Top" />
   <Trigger Property="HotTrackPosition" Value="Bottom" />
  </ControlTemplate.Triggers>
 </ControlTemplate>

 <!--  ================================  -->
 <!--  DockingIndicator  -->
 <!--  ================================  -->
 <Style TargetType="{x:Type igDock:DockingIndicator}">
  <Setter Property="BorderThickness" Value="1" />
  <Setter Property="Background" Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igDock:XamDockManager}, ResourceId=DockIndicatorBackgroundBrush}}" />
  <Setter Property="Template">
   <Setter.Value>
    <ControlTemplate TargetType="{x:Type igDock:DockingIndicator}">
     <Grid Background="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igDock:XamDockManager}, ResourceId=TransparentBrush}}">
      <Grid x:Name="DockingIndicator">
       <Border x:Name="DragIndicatorIcon" Width="36" Height="40" Background="{TemplateBinding Background}" BorderBrush="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igDock:XamDockManager}, ResourceId=DockTypeIndicatorTransparentBrush}}" BorderThickness="1">
        <Border Width="32" Height="32" Background="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igDock:XamDockManager}, ResourceId=DocTypeIndicatorLightBackgroundBrush}}" BorderBrush="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igDock:XamDockManager}, ResourceId=DocTypeIndicatorLIghtStrokeBrush}}" BorderThickness="1">
         <Grid>
          <Border x:Name="DragIndicatorWindowIcon" Width="12" Height="24" Margin="3,3,0,3" HorizontalAlignment="Left" Background="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igDock:XamDockManager}, ResourceId=DocTypeIndicatorBackgroundBrush}}" BorderBrush="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igDock:XamDockManager}, ResourceId=DockTypeIndicatorStrokeBrush}}" BorderThickness="1,3,1,1" />
          <Path Width="8" Margin="0,13.172,3.604,12.828" HorizontalAlignment="Right" Data="M3.78125,0 L7.4533691,3.921875 L0.078248896,3.9061258 z" Fill="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedDocumentGlyphFillKey}}" RenderTransformOrigin="0.5,0.5" Stretch="Fill" Stroke="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedDocumentGlyphFillKey}}">
           <Path.RenderTransform>
            <RotateTransform Angle="270" />
           </Path.RenderTransform>
          </Path>
         </Grid>
        </Border>
       </Border>
      </Grid>
     </Grid>
     <ControlTemplate.Triggers>
      <Trigger Property="Position" Value="Left">
       <Setter TargetName="DockingIndicator" Property="IsEnabled" Value="{Binding CanDockLeft, RelativeSource={x:Static RelativeSource.TemplatedParent}}" />
      </Trigger>
      <Trigger Property="Position" Value="Right">
       <Setter TargetName="DragIndicatorWindowIcon" Property="BorderThickness" Value="1,1,1,3" />
       <Setter TargetName="DragIndicatorIcon" Property="LayoutTransform">
        <Setter.Value>
         <RotateTransform Angle="180" />
        </Setter.Value>
       </Setter>
       <Setter TargetName="DockingIndicator" Property="IsEnabled" Value="{Binding CanDockRight, RelativeSource={x:Static RelativeSource.TemplatedParent}}" />
      </Trigger>

      <Trigger Property="Position" Value="Top">
       <Setter TargetName="DragIndicatorWindowIcon" Property="BorderThickness" Value="3,1,1,1" />
       <Setter TargetName="DragIndicatorIcon" Property="LayoutTransform">
        <Setter.Value>
         <RotateTransform Angle="90" />
        </Setter.Value>
       </Setter>
       <Setter TargetName="DockingIndicator" Property="IsEnabled" Value="{Binding CanDockTop, RelativeSource={x:Static RelativeSource.TemplatedParent}}" />
      </Trigger>

      <Trigger Property="Position" Value="Bottom">
       <Setter TargetName="DragIndicatorWindowIcon" Property="BorderThickness" Value="1,1,3,1" />
       <Setter TargetName="DragIndicatorIcon" Property="LayoutTransform">
        <Setter.Value>
         <RotateTransform Angle="-90" />
        </Setter.Value>
       </Setter>
       <Setter TargetName="DockingIndicator" Property="IsEnabled" Value="{Binding CanDockBottom, RelativeSource={x:Static RelativeSource.TemplatedParent}}" />
      </Trigger>

      <!--  HotTracking  -->
      <MultiTrigger>
       <MultiTrigger.Conditions>
        <Condition Property="Position" Value="Left" />
        <Condition Property="HotTrackPosition" Value="Left" />
       </MultiTrigger.Conditions>
       <Setter TargetName="DockingIndicator" Property="Opacity" Value="1" />
      </MultiTrigger>

      <MultiTrigger>
       <MultiTrigger.Conditions>
        <Condition Property="Position" Value="Right" />
        <Condition Property="HotTrackPosition" Value="Right" />
       </MultiTrigger.Conditions>
       <Setter TargetName="DockingIndicator" Property="Opacity" Value="1" />
      </MultiTrigger>

      <MultiTrigger>
       <MultiTrigger.Conditions>
        <Condition Property="Position" Value="Top" />
        <Condition Property="HotTrackPosition" Value="Top" />
       </MultiTrigger.Conditions>
       <Setter TargetName="DockingIndicator" Property="Opacity" Value="1" />
      </MultiTrigger>

      <MultiTrigger>
       <MultiTrigger.Conditions>
        <Condition Property="Position" Value="Bottom" />
        <Condition Property="HotTrackPosition" Value="Bottom" />
       </MultiTrigger.Conditions>
       <Setter TargetName="DockingIndicator" Property="Opacity" Value="1" />
      </MultiTrigger>
     </ControlTemplate.Triggers>
    </ControlTemplate>
   </Setter.Value>
  </Setter>
  <Style.Triggers>
   <Trigger Property="Position" Value="Center">
    <Setter Property="Template" Value="{StaticResource centerIndicator}" />
   </Trigger>
  </Style.Triggers>
 </Style>

 <!--  ========== XamDockManager.FloatingWindowPreviewStyleKey ==========  -->
 <Style x:Key="{x:Static igDock:XamDockManager.FloatingWindowPreviewStyleKey}" TargetType="{x:Type Control}">
  <Setter Property="Background" Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igDock:XamDockManager}, ResourceId=FloatingWindowBackgroundBrush}}" />
  <Setter Property="BorderBrush" Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igDock:XamDockManager}, ResourceId=FloatingWindowBorderBrush}}" />
  <Setter Property="BorderThickness" Value="3" />
  <Setter Property="Opacity" Value=".39" />
  <Setter Property="Template">
   <Setter.Value>
    <ControlTemplate TargetType="{x:Type Control}">
     <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" />
    </ControlTemplate>
   </Setter.Value>
  </Setter>
 </Style>

</ResourceDictionary>