<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:igWindows="http://infragistics.com/Windows"
                    xmlns:igDock="http://infragistics.com/DockManager"
                    xmlns:luna="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Luna"
                    xmlns:igThemes="http://infragistics.com/Themes"
                    xmlns:igWinThemes="http://infragistics.com/Themes"	>
 
	<ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="DockManagerGeneric.xaml" />
        <ResourceDictionary Source="DockManagerIGTheme_Brushes.xaml" />
	</ResourceDictionary.MergedDictionaries>
 
     <!--  ========== ToolWindow ==========  -->
  <Style BasedOn="{x:Static igWinThemes:PrimitivesIGTheme.ToolWindow}" TargetType="{x:Type igDock:PaneToolWindow}" >
    <Setter Property="UseOSNonClientArea" Value="False"/>
  </Style>

    <!-- ========== TabGroupPane.DocumentPaneNavigatorButtonStyleKey ========== -->
    <Style x:Key="{x:Static igDock:TabGroupPane.DocumentPaneNavigatorButtonStyleKey}" TargetType="{x:Type Button}" BasedOn="{StaticResource ButtonStyleBase}">
        <Setter Property="ToolTip" Value="{StaticResource showNavigatorToolTip}" />
        <Setter Property="Width" Value="16" />
        <Setter Property="Height" Value="15" />
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}"
						 CornerRadius="{TemplateBinding Border.CornerRadius}"
						 BorderBrush="{TemplateBinding BorderBrush}"
						 BorderThickness="{TemplateBinding BorderThickness}"
						 SnapsToDevicePixels="True" >
                        <Path
							Margin="2,4,0,0"
							HorizontalAlignment="Left"
							VerticalAlignment="Top"
							Height="8"
							Width="10"
							Stretch="Fill"
							Opacity="1"
							Data="M 4,6 C4,6 12,6 12,6 12,6 12,11 12,11 12,11 4,11 4,11 4,11 4,6 4,6 zM 3,4 C3,4 3,12 3,12 3,12 13,12 13,12 13,12 13,4 13,4 13,4 3,4 3,4 zM 9,7 C9,7 9,10 9,10 9,10 11,10 11,10 11,10 11,7 11,7 11,7 9,7 9,7 zM 7,9 C7,9 7,10 7,10 7,10 8,10 8,10 8,10 8,9 8,9 8,9 7,9 7,9 zM 7,7 C7,7 7,8 7,8 7,8 8,8 8,8 8,8 8,7 8,7 8,7 7,7 7,7 zM 5,7 C5,7 5,8 5,8 5,8 6,8 6,8 6,8 6,7 6,7 6,7 5,7 5,7 zM 5,9 C5,9 5,10 5,10 5,10 6,10 6,10 6,10 6,9 6,9 6,9 5,9 5,9 z"
							Fill="{TemplateBinding Foreground}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <DataTrigger Binding="{Binding Path=IsMouseOver, RelativeSource={x:Static RelativeSource.Self}}" Value="True">
                <Setter Property="BorderBrush" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.PaneCaptionButtonHottrackOuterBorderFillKey}}" />
                <Setter Property="Background" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.PaneCaptionButtonHottrackCenterFillKey}}" />
                <Setter Property="Foreground" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedDocumentGlyphHottrackFillKey}}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=IsPressed, RelativeSource={x:Static RelativeSource.Self}}" Value="True">
                <Setter Property="BorderBrush" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.PaneCaptionButtonPressedOuterBorderFillKey}}" />
                <Setter Property="Background" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.PaneCaptionButtonPressedCenterFillKey}}" />
                <Setter Property="Foreground" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedDocumentGlyphHottrackFillKey}}" />
            </DataTrigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.GrayTextBrushKey}}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    


    <!-- ========== TabGroupPane.DocumentFilesMenuItemStyleKey ========== -->
    <Style x:Key="{x:Static igDock:TabGroupPane.DocumentFilesMenuItemStyleKey}" TargetType="{x:Type MenuItem}" BasedOn="{StaticResource TopLevelHeaderMenuItemStyleBase}">
        <Setter Property="ToolTip" Value="{StaticResource filesToolTip}" />
        <Setter Property="Width" Value="14" />
        <Setter Property="Height" Value="13" />
        <Setter Property="Foreground" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedDocumentGlyphFillKey}}" />
        <Setter Property="Margin" Value="0,3,0,0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type MenuItem}">
                    <igWindows:CardPanel>
                        <Border Background="{TemplateBinding Background}"
							CornerRadius="{TemplateBinding Border.CornerRadius}"
							BorderBrush="{TemplateBinding BorderBrush}"
							BorderThickness="{TemplateBinding BorderThickness}"
							SnapsToDevicePixels="True" >
                            <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                                <Path
									x:Name="AllItemsInViewGlyph"
									Margin="2,4,0,0"
									HorizontalAlignment="Left"
									VerticalAlignment="Top"
									Height="4"
									Width="9"
									Stretch="Fill"
									Opacity="1"
									Data="M 3,4 C3,4 7.5,7.5 7.5,7.5 7.5,7.5 12,4 12,4 12,4 3,4 3,4 z"
									Fill="{TemplateBinding Foreground}" />
                                <Path
									x:Name="HasItemsOutOfViewGlyph"
									Visibility="Collapsed"
									Margin="2,3,0,0"
									HorizontalAlignment="Left"
									VerticalAlignment="Top"
									Height="7"
									Width="9"
									Stretch="Fill"
									Opacity="1"
									Data="M0,3 C0,3 9,3 9,3 9,3 4.5,7.5 4.5,7.5 4.5,7.5 0,3 0,3 z M0,0 L9,0 9,2 0,2 0,0 z"
									Fill="{TemplateBinding Foreground}" />
                            </Grid>
                        </Border>
                        <Popup x:Name="PART_Popup" 
						    AllowsTransparency="true" 
						    Placement="Bottom" 
						    PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}" 
						    IsOpen="{Binding Path=IsSubmenuOpen, RelativeSource={x:Static RelativeSource.TemplatedParent}}">
                            <luna:SystemDropShadowChrome x:Name="Shdw" Color="{StaticResource Color_050}">
                                <Grid Height="Auto" Width="Auto" x:Name="MenuItem">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="27" />
                                        <ColumnDefinition Width="*" />
                                    </Grid.ColumnDefinitions>
                                    <Rectangle
										Grid.ColumnSpan="2"
									  Opacity="1"
									  HorizontalAlignment="Stretch"
									  VerticalAlignment="Stretch"
									  Margin="0,0,0,0"
									  Stroke="{DynamicResource {x:Static igDock:DockManagerBrushKeys.MenuItemOuterBorderFillKey}}"
									  StrokeThickness="1"
									  Fill="{DynamicResource {x:Static igDock:DockManagerBrushKeys.MenuItemCenterFillKey}}" SnapsToDevicePixels="True" />
                                    <ScrollViewer Grid.ColumnSpan="2" 
										 CanContentScroll="True" 
										Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly={x:Type FrameworkElement}}}"
										Margin="3">
                                        <ItemsPresenter 
										  KeyboardNavigation.TabNavigation="Cycle" 
										  KeyboardNavigation.DirectionalNavigation="Cycle" 
										  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
										  />
                                    </ScrollViewer>
                                </Grid>
                            </luna:SystemDropShadowChrome>
                        </Popup>
                    </igWindows:CardPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.GrayTextBrushKey}}" />
                        </Trigger>
                        <DataTrigger Binding="{Binding Path=(igDock:DocumentTabPanel.HasItemsOutOfView), RelativeSource={RelativeSource AncestorType={x:Type igDock:TabGroupPane}}}" Value="True">
                            <Setter TargetName="HasItemsOutOfViewGlyph" Property="Visibility" Value="Visible" />
                            <Setter TargetName="AllItemsInViewGlyph" Property="Visibility" Value="Collapsed" />
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <!-- Hottracked State -->
            <DataTrigger Binding="{Binding Path=IsHighlighted, RelativeSource={x:Static RelativeSource.Self}}" Value="True">
                <Setter Property="BorderBrush" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.PaneCaptionButtonHottrackOuterBorderFillKey}}" />
                <Setter Property="Background" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.PaneCaptionButtonHottrackCenterFillKey}}" />
                <Setter Property="Foreground" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedDocumentGlyphHottrackFillKey}}" />
            </DataTrigger>

            <!-- IsSubmenuOpen State -->
            <DataTrigger Binding="{Binding Path=IsSubmenuOpen, RelativeSource={x:Static RelativeSource.Self}}" Value="True">
                <Setter Property="BorderBrush" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.PaneCaptionButtonPressedOuterBorderFillKey}}" />
                <Setter Property="Background" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.PaneCaptionButtonPressedCenterFillKey}}" />
                <Setter Property="Foreground" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedDocumentGlyphHottrackFillKey}}" />
            </DataTrigger>

            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.GrayTextBrushKey}}"/>
            </Trigger>

        </Style.Triggers>
    </Style>

 
 <!--  ========== centerIndicator ==========  -->
 <ControlTemplate x:Key="centerIndicator" TargetType="{x:Type igDock:DockingIndicator}">
  <Grid x:Name="PART_DockCenter">
   <Grid.ColumnDefinitions>
    <ColumnDefinition Width="Auto" />
    <ColumnDefinition Width="Auto" />
    <ColumnDefinition Width="Auto" />
    <ColumnDefinition Width="Auto" />
    <ColumnDefinition Width="Auto" />
   </Grid.ColumnDefinitions>
   <Grid.RowDefinitions>
    <RowDefinition Height="Auto" />
    <RowDefinition Height="Auto" />
    <RowDefinition Height="Auto" />
    <RowDefinition Height="Auto" />
    <RowDefinition Height="Auto" />
   </Grid.RowDefinitions>

   <!--  borders  -->
   <Border x:Name="topBd" Grid.RowSpan="2" Grid.Column="2" Margin="0,0,0,10" Background="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igDock:XamDockManager}, ResourceId=DockIndicatorBackgroundBrush}}" BorderBrush="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igDock:XamDockManager}, ResourceId=DockIndicatorBorderbrush}}" BorderThickness="1,1,1,0" />
   <Border x:Name="leftBd" Grid.Row="2" Grid.ColumnSpan="2" Margin="0,0,10,0" Background="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igDock:XamDockManager}, ResourceId=DockIndicatorBackgroundBrush}}" BorderBrush="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igDock:XamDockManager}, ResourceId=DockIndicatorBorderbrush}}" BorderThickness="1,1,0,1" />
   <Border x:Name="rightBd" Grid.Row="2" Grid.Column="3" Grid.ColumnSpan="2" Margin="10,0,0,0" Background="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igDock:XamDockManager}, ResourceId=DockIndicatorBackgroundBrush}}" BorderBrush="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igDock:XamDockManager}, ResourceId=DockIndicatorBorderbrush}}" BorderThickness="0,1,1,1" />
   <Border x:Name="bottomBd" Grid.Row="3" Grid.RowSpan="2" Grid.Column="2" Margin="0,10,0,0" Background="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igDock:XamDockManager}, ResourceId=DockIndicatorBackgroundBrush}}" BorderBrush="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igDock:XamDockManager}, ResourceId=DockIndicatorBorderbrush}}" BorderThickness="1,0,1,1" />

   <!--  fill for remaining center - between diagonal paths and remaining unfilled space left by borders  -->
   <Path x:Name="centerOctFill" Grid.Row="1" Grid.RowSpan="3" Grid.Column="1" Grid.ColumnSpan="3" Width="60" Height="60" Data="M 62,10.95 C62,10.95 51.04,0 51.04,0 51.04,0 10.95,0 10.95,0 10.95,0 0,10.95 0,10.95 0,10.95 0,51.04 0,51.04 0,51.04 10.95,62 10.95,62 10.95,62 51.04,62 51.04,62 51.04,62 62,51.04 62,51.04 62,51.04 62,10.95 62,10.95 z" Fill="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igDock:XamDockManager}, ResourceId=DockIndicatorBackgroundBrush}}" Stretch="Fill" />
   <!--  diagonal corner paths  -->
   <Path x:Name="topRight" Grid.Row="1" Grid.Column="3" Width="11" Height="11" HorizontalAlignment="Left" VerticalAlignment="Bottom" Data="M 0,1.20 C0,1.20 9.79,11 9.79,11 9.79,11 11.20,11 11.20,11 11.20,11 0,-0.20 0,-0.20 0,-0.20 0,1.20 0,1.20 z" Fill="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igDock:XamDockManager}, ResourceId=DockIndicatorBorderbrush}}" Stretch="Fill" />
   <Path x:Name="bottomRight" Grid.Row="3" Grid.Column="3" Width="11" Height="11" HorizontalAlignment="Left" VerticalAlignment="Top" Data="M 0,9.58 C0,9.58 9.79,-0.20 9.79,-0.20 9.79,-0.20 11.20,-0.20 11.20,-0.20 11.20,-0.20 0,11 0,11 0,11 0,9.58 0,9.58 z" Fill="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igDock:XamDockManager}, ResourceId=DockIndicatorBorderbrush}}" Stretch="Fill" />
   <Path x:Name="bottomLeft" Grid.Row="3" Grid.Column="1" Width="11" Height="11" HorizontalAlignment="Right" VerticalAlignment="Top" Data="M 11.20,9.58 C11.20,9.58 1.40,-0.20 1.40,-0.20 1.40,-0.20 0,-0.20 0,-0.20 0,-0.20 11.20,11 11.20,11 11.20,11 11.20,9.58 11.20,9.58 z" Fill="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igDock:XamDockManager}, ResourceId=DockIndicatorBorderbrush}}" Stretch="Fill" />
   <Path x:Name="topLeft" Grid.Row="1" Grid.Column="1" Width="11" Height="11" HorizontalAlignment="Right" VerticalAlignment="Bottom" Data="M 11.20,1.20 C11.20,1.20 1.40,11 1.40,11 1.40,11 0,11 0,11 0,11 11.20,-0.20 11.20,-0.20 11.20,-0.20 11.20,1.20 11.20,1.20 z" Fill="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igDock:XamDockManager}, ResourceId=DockIndicatorBorderbrush}}" Stretch="Fill" />

   <!--  Center Indicator  -->
   <igWindows:CardPanel x:Name="center" Grid.Row="2" Grid.Column="2" Background="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igDock:XamDockManager}, ResourceId=TransparentBrush}}" IsHitTestVisible="False" Opacity="0.75">
    <Grid HorizontalAlignment="Center" VerticalAlignment="Center" IsEnabled="{TemplateBinding CanDockCenter}">
     <Border Width="32" Height="32" Margin="0" Background="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igDock:XamDockManager}, ResourceId=DocTypeIndicatorLightBackgroundBrush}}" BorderBrush="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igDock:XamDockManager}, ResourceId=DocTypeIndicatorLIghtStrokeBrush}}" BorderThickness="1">
      <Grid>
       <Border Width="24" Height="24" Margin="3" Background="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igDock:XamDockManager}, ResourceId=DocTypeIndicatorBackgroundBrush}}" BorderBrush="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igDock:XamDockManager}, ResourceId=DockTypeIndicatorStrokeBrush}}" BorderThickness="1,3,1,1" />
      </Grid>
     </Border>
    </Grid>
   </igWindows:CardPanel>

   <!--  Right Indicator  -->
   <igWindows:CardPanel x:Name="PART_DockRight" Grid.Row="2" Grid.Column="4" Background="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igDock:XamDockManager}, ResourceId=TransparentBrush}}" Opacity="0.75">
    <Grid x:Name="rightIndicatorIcon" IsEnabled="{TemplateBinding CanDockRight}">
     <Border Width="30" Height="40" BorderThickness="1">
      <Border Width="32" Height="32" Margin="-10 0 0 0 " Background="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igDock:XamDockManager}, ResourceId=DocTypeIndicatorLightBackgroundBrush}}" BorderBrush="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igDock:XamDockManager}, ResourceId=DocTypeIndicatorLIghtStrokeBrush}}" BorderThickness="1">
       <Grid>
        <Border Width="12" Height="24" Margin="14,3,4,3" Background="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igDock:XamDockManager}, ResourceId=DocTypeIndicatorBackgroundBrush}}" BorderBrush="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igDock:XamDockManager}, ResourceId=DockTypeIndicatorStrokeBrush}}" BorderThickness="1,3,1,1" />
        <Path Width="8" Margin="1.396,13.422,0,12.578" HorizontalAlignment="Left" Data="M3.78125,0 L7.4533691,3.921875 L0.078248896,3.9061258 z" Fill="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedDocumentGlyphFillKey}}" RenderTransformOrigin="0.5,0.5" Stretch="Fill" Stroke="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedDocumentGlyphFillKey}}">
         <Path.RenderTransform>
          <RotateTransform Angle="810" />
         </Path.RenderTransform>
        </Path>
       </Grid>
      </Border>
     </Border>
    </Grid>
   </igWindows:CardPanel>

   <!--  Left Indicator  -->
   <igWindows:CardPanel x:Name="PART_DockLeft" Grid.Row="2" Grid.Column="0" Background="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igDock:XamDockManager}, ResourceId=TransparentBrush}}" Opacity="0.75">
    <Grid x:Name="leftIndicatorIcon" IsEnabled="{TemplateBinding CanDockLeft}">
     <Border Width="30" Height="40" BorderThickness="1">
      <Border Width="32" Height="32" Margin="0 0 -10 0 " Background="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igDock:XamDockManager}, ResourceId=DocTypeIndicatorLightBackgroundBrush}}" BorderBrush="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igDock:XamDockManager}, ResourceId=DocTypeIndicatorLIghtStrokeBrush}}" BorderThickness="1">
       <Grid>
        <Border Width="12" Height="24" Margin="3,3,0,3" HorizontalAlignment="Left" Background="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igDock:XamDockManager}, ResourceId=DocTypeIndicatorBackgroundBrush}}" BorderBrush="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igDock:XamDockManager}, ResourceId=DockTypeIndicatorStrokeBrush}}" BorderThickness="1,3,1,1" />
        <Path Width="8" Margin="0,13.172,3.604,12.828" HorizontalAlignment="Right" Data="M3.78125,0 L7.4533691,3.921875 L0.078248896,3.9061258 z" Fill="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedDocumentGlyphFillKey}}" RenderTransformOrigin="0.5,0.5" Stretch="Fill" Stroke="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedDocumentGlyphFillKey}}">
         <Path.RenderTransform>
          <RotateTransform Angle="270" />
         </Path.RenderTransform>
        </Path>
       </Grid>
      </Border>
     </Border>
    </Grid>
   </igWindows:CardPanel>

   <!--  Top Indicator  -->
   <igWindows:CardPanel x:Name="PART_DockTop" Grid.Row="0" Grid.Column="2" Background="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igDock:XamDockManager}, ResourceId=TransparentBrush}}" Opacity="0.75">
    <Grid x:Name="topIndicatorIcon" IsEnabled="{TemplateBinding CanDockTop}">
     <Border Width="40" Height="30" BorderThickness="1">
      <Border Width="32" Height="32" Margin="0 0 0 -10 " Background="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igDock:XamDockManager}, ResourceId=DocTypeIndicatorLightBackgroundBrush}}" BorderBrush="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igDock:XamDockManager}, ResourceId=DocTypeIndicatorLIghtStrokeBrush}}" BorderThickness="1">
       <Grid>
        <Border Width="24" Height="12" Margin="3,3,3,0" VerticalAlignment="Top" Background="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igDock:XamDockManager}, ResourceId=DocTypeIndicatorBackgroundBrush}}" BorderBrush="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igDock:XamDockManager}, ResourceId=DockTypeIndicatorStrokeBrush}}" BorderThickness="1,3,1,1" />
        <Path Width="8" Height="4" Margin="11.145,0,10.854,5.828" VerticalAlignment="Bottom" Data="M3.78125,0 L7.4533691,3.921875 L0.078248896,3.9061258 z" Fill="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedDocumentGlyphFillKey}}" Stretch="Fill" Stroke="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedDocumentGlyphFillKey}}" />
       </Grid>
      </Border>
     </Border>
    </Grid>
   </igWindows:CardPanel>

   <!--  Bottom Indicator  -->
   <igWindows:CardPanel x:Name="PART_DockBottom" Grid.Row="4" Grid.Column="2" Background="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igDock:XamDockManager}, ResourceId=TransparentBrush}}" Opacity="0.75">
    <Grid x:Name="bottomIndicatorIcon" IsEnabled="{TemplateBinding CanDockBottom}">
     <Border Width="40" Height="30" BorderThickness="1">
      <Border Width="32" Height="32" Margin="0 -10 0 0" Background="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igDock:XamDockManager}, ResourceId=DocTypeIndicatorLightBackgroundBrush}}" BorderBrush="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igDock:XamDockManager}, ResourceId=DocTypeIndicatorLIghtStrokeBrush}}" BorderThickness="1">
       <Grid>
        <Border Width="24" Margin="3,14,3,4" Background="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igDock:XamDockManager}, ResourceId=DocTypeIndicatorBackgroundBrush}}" BorderBrush="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igDock:XamDockManager}, ResourceId=DockTypeIndicatorStrokeBrush}}" BorderThickness="1,3,1,1" />
        <Path Width="8" Height="4" Margin="10.895,4.172,11.104,0" VerticalAlignment="Top" Data="M3.78125,0 L7.4533691,3.921875 L0.078248896,3.9061258 z" Fill="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedDocumentGlyphFillKey}}" RenderTransformOrigin="0.5,0.5" Stretch="Fill" Stroke="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedDocumentGlyphFillKey}}">
         <Path.RenderTransform>
          <RotateTransform Angle="180" />
         </Path.RenderTransform>
        </Path>
       </Grid>
      </Border>
     </Border>
    </Grid>
   </igWindows:CardPanel>
  </Grid>
  <ControlTemplate.Triggers>
   <Trigger Property="HotTrackPosition" Value="Center" />
   <Trigger Property="HotTrackPosition" Value="Left" />
   <Trigger Property="HotTrackPosition" Value="Right" />
   <Trigger Property="HotTrackPosition" Value="Top" />
   <Trigger Property="HotTrackPosition" Value="Bottom" />
  </ControlTemplate.Triggers>
 </ControlTemplate>

 <!--  ================================  -->
 <!--  DockingIndicator  -->
 <!--  ================================  -->
 <Style TargetType="{x:Type igDock:DockingIndicator}">
  <Setter Property="BorderThickness" Value="1" />
  <Setter Property="Background" Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igDock:XamDockManager}, ResourceId=DockIndicatorBackgroundBrush}}" />
  <Setter Property="Template">
   <Setter.Value>
    <ControlTemplate TargetType="{x:Type igDock:DockingIndicator}">
     <Grid Background="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igDock:XamDockManager}, ResourceId=TransparentBrush}}">
      <Grid x:Name="DockingIndicator">
       <Border x:Name="DragIndicatorIcon" Width="36" Height="40" Background="{TemplateBinding Background}" BorderBrush="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igDock:XamDockManager}, ResourceId=DockTypeIndicatorTransparentBrush}}" BorderThickness="1">
        <Border Width="32" Height="32" Background="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igDock:XamDockManager}, ResourceId=DocTypeIndicatorLightBackgroundBrush}}" BorderBrush="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igDock:XamDockManager}, ResourceId=DocTypeIndicatorLIghtStrokeBrush}}" BorderThickness="1">
         <Grid>
          <Border x:Name="DragIndicatorWindowIcon" Width="12" Height="24" Margin="3,3,0,3" HorizontalAlignment="Left" Background="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igDock:XamDockManager}, ResourceId=DocTypeIndicatorBackgroundBrush}}" BorderBrush="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igDock:XamDockManager}, ResourceId=DockTypeIndicatorStrokeBrush}}" BorderThickness="1,3,1,1" />
          <Path Width="8" Margin="0,13.172,3.604,12.828" HorizontalAlignment="Right" Data="M3.78125,0 L7.4533691,3.921875 L0.078248896,3.9061258 z" Fill="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedDocumentGlyphFillKey}}" RenderTransformOrigin="0.5,0.5" Stretch="Fill" Stroke="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedDocumentGlyphFillKey}}">
           <Path.RenderTransform>
            <RotateTransform Angle="270" />
           </Path.RenderTransform>
          </Path>
         </Grid>
        </Border>
       </Border>
      </Grid>
     </Grid>
     <ControlTemplate.Triggers>
      <Trigger Property="Position" Value="Left">
       <Setter TargetName="DockingIndicator" Property="IsEnabled" Value="{Binding CanDockLeft, RelativeSource={x:Static RelativeSource.TemplatedParent}}" />
      </Trigger>
      <Trigger Property="Position" Value="Right">
       <Setter TargetName="DragIndicatorWindowIcon" Property="BorderThickness" Value="1,1,1,3" />
       <Setter TargetName="DragIndicatorIcon" Property="LayoutTransform">
        <Setter.Value>
         <RotateTransform Angle="180" />
        </Setter.Value>
       </Setter>
       <Setter TargetName="DockingIndicator" Property="IsEnabled" Value="{Binding CanDockRight, RelativeSource={x:Static RelativeSource.TemplatedParent}}" />
      </Trigger>

      <Trigger Property="Position" Value="Top">
       <Setter TargetName="DragIndicatorWindowIcon" Property="BorderThickness" Value="3,1,1,1" />
       <Setter TargetName="DragIndicatorIcon" Property="LayoutTransform">
        <Setter.Value>
         <RotateTransform Angle="90" />
        </Setter.Value>
       </Setter>
       <Setter TargetName="DockingIndicator" Property="IsEnabled" Value="{Binding CanDockTop, RelativeSource={x:Static RelativeSource.TemplatedParent}}" />
      </Trigger>

      <Trigger Property="Position" Value="Bottom">
       <Setter TargetName="DragIndicatorWindowIcon" Property="BorderThickness" Value="1,1,3,1" />
       <Setter TargetName="DragIndicatorIcon" Property="LayoutTransform">
        <Setter.Value>
         <RotateTransform Angle="-90" />
        </Setter.Value>
       </Setter>
       <Setter TargetName="DockingIndicator" Property="IsEnabled" Value="{Binding CanDockBottom, RelativeSource={x:Static RelativeSource.TemplatedParent}}" />
      </Trigger>

      <!--  HotTracking  -->
      <MultiTrigger>
       <MultiTrigger.Conditions>
        <Condition Property="Position" Value="Left" />
        <Condition Property="HotTrackPosition" Value="Left" />
       </MultiTrigger.Conditions>
       <Setter TargetName="DockingIndicator" Property="Opacity" Value="1" />
      </MultiTrigger>

      <MultiTrigger>
       <MultiTrigger.Conditions>
        <Condition Property="Position" Value="Right" />
        <Condition Property="HotTrackPosition" Value="Right" />
       </MultiTrigger.Conditions>
       <Setter TargetName="DockingIndicator" Property="Opacity" Value="1" />
      </MultiTrigger>

      <MultiTrigger>
       <MultiTrigger.Conditions>
        <Condition Property="Position" Value="Top" />
        <Condition Property="HotTrackPosition" Value="Top" />
       </MultiTrigger.Conditions>
       <Setter TargetName="DockingIndicator" Property="Opacity" Value="1" />
      </MultiTrigger>

      <MultiTrigger>
       <MultiTrigger.Conditions>
        <Condition Property="Position" Value="Bottom" />
        <Condition Property="HotTrackPosition" Value="Bottom" />
       </MultiTrigger.Conditions>
       <Setter TargetName="DockingIndicator" Property="Opacity" Value="1" />
      </MultiTrigger>
     </ControlTemplate.Triggers>
    </ControlTemplate>
   </Setter.Value>
  </Setter>
  <Style.Triggers>
   <Trigger Property="Position" Value="Center">
    <Setter Property="Template" Value="{StaticResource centerIndicator}" />
   </Trigger>
  </Style.Triggers>
 </Style>


    <!-- ========== TabGroupPane.DocumentCloseButtonStyleKey ========== -->
    <Style x:Key="{x:Static igDock:TabGroupPane.DocumentCloseButtonStyleKey}" TargetType="{x:Type Button}" BasedOn="{StaticResource ButtonStyleBase}">
        <Setter Property="ToolTip" Value="{StaticResource closeToolTip}" />
        <Setter Property="Width" Value="14" />
        <Setter Property="Height" Value="13" />
        <Setter Property="Foreground" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedDocumentGlyphFillKey}}" />
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="Margin" Value="0,3,0,0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}"
						 CornerRadius="{TemplateBinding Border.CornerRadius}"
						 BorderBrush="{TemplateBinding BorderBrush}"
						 BorderThickness="{TemplateBinding BorderThickness}"
						 SnapsToDevicePixels="True">
                        <Path
							Margin="2,1,0,0"
							HorizontalAlignment="Left"
							VerticalAlignment="Top"
							Height="8"
							Width="8"
							Stretch="Fill"
							Opacity="1"
							Data="M 1244,87 C1244,87 1243,88 1243,88 1243,88 1246,91 1246,91 1246,91 1243,94 1243,94 1243,94 1244,95 1244,95 1244,95 1247,92 1247,92 1247,92 1250,95 1250,95 1250,95 1251,94 1251,94 1251,94 1248,91 1248,91 1248,91 1251,88 1251,88 1251,88 1250,87 1250,87 1250,87 1247,90 1247,90 1247,90 1244,87 1244,87 z"
							Fill="{TemplateBinding Foreground}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.GrayTextBrushKey}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <DataTrigger Binding="{Binding Path=IsMouseOver, RelativeSource={x:Static RelativeSource.Self}}" Value="True">
                <Setter Property="BorderBrush" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.PaneCaptionButtonHottrackOuterBorderFillKey}}" />
                <Setter Property="Background" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.PaneCaptionButtonHottrackCenterFillKey}}" />
                <Setter Property="Foreground" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedDocumentGlyphHottrackFillKey}}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=IsPressed, RelativeSource={x:Static RelativeSource.Self}}" Value="True">
                <Setter Property="BorderBrush" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.PaneCaptionButtonPressedOuterBorderFillKey}}" />
                <Setter Property="Background" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.PaneCaptionButtonPressedCenterFillKey}}" />
                <Setter Property="Foreground" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedDocumentGlyphHottrackFillKey}}" />
            </DataTrigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.GrayTextBrushKey}}"/>
            </Trigger>
        </Style.Triggers>
    </Style>



    <!-- ========== UnpinnedTabItemTemplateKey ========== -->
    <ControlTemplate x:Key="{x:Static igDock:PaneTabItem.UnpinnedTabItemTemplateKey}" TargetType="{x:Type igDock:PaneTabItem}">
        <Border SnapsToDevicePixels="true">
            <igWindows:CardPanel>
                <igWindows:CardPanel x:Name="Background">
                    <Grid>
                        <Border x:Name="OuterBorder" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True" BorderThickness="0,1,1,1"/>
                        <Border x:Name="InnerBorder" BorderThickness="0,1,1,1" BorderBrush="{DynamicResource {x:Static igDock:DockManagerBrushKeys.UnpinnedTabItemHighlightFillKey}}" SnapsToDevicePixels="True"/>
                    </Grid>
                </igWindows:CardPanel>
                <Border x:Name="Content"
						BorderThickness="{TemplateBinding BorderThickness}" 
						Padding="{TemplateBinding Padding}">
                    <DockPanel>
                        <igWindows:AutoDisabledImage Visibility="{Binding Path=Pane.HasImage, RelativeSource={x:Static RelativeSource.TemplatedParent}, Converter={StaticResource BoolToVisConverter}}"
                            DockPanel.Dock="Left"
                            Margin="0,0,5,0"
                            Stretch="None"
                            Source="{Binding Path=Pane.Image, RelativeSource={x:Static RelativeSource.TemplatedParent}}"/>
                        <ContentPresenter 
                            x:Name="contentHeader"
							ContentSource="Header" 
							SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
							RecognizesAccessKey="true" 
							HorizontalAlignment="{Binding Path=HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" 
							VerticalAlignment="{Binding Path=VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"
							igWindows:ClippedTextToolTipService.ShowToolTipWhenClipped="True"
							igWindows:ClippedTextToolTipService.AncestorTypeForToolTip="{x:Type ContentControl}"
                            igWindows:ClippedTextToolTipService.ToolTipStyleKey="{x:Static igDock:XamDockManager.ToolTipStyleKey}"
                            TextElement.Foreground="{DynamicResource {x:Static igDock:DockManagerBrushKeys.ThemeColorTextFillKey}}"
							/>
                    </DockPanel>
                </Border>
            </igWindows:CardPanel>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOverTab" Value="True">
                <Setter Property="BorderBrush" TargetName="InnerBorder" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.UnpinnedTabItemHottrackHighlightFillKey}}" />
                <Setter TargetName="contentHeader" Property="TextElement.Foreground" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedListHottrackTextFillKey}}" />
            </Trigger>
            <Trigger Property="TabStripPlacement" Value="Top">
                <Setter Property="Padding" Value="3,4,4,3" />
                <Setter Property="Margin" Value="-1,0,0,0" />
                <Setter TargetName="OuterBorder" Property="BorderThickness" Value="1,1,1,0"/>
                <Setter TargetName="InnerBorder" Property="BorderThickness" Value="1,1,1,0"/>
                <Setter TargetName="InnerBorder" Property="Margin" Value="1,1,1,0"/>
            </Trigger>
            <Trigger Property="TabStripPlacement" Value="Bottom">
                <Setter Property="Padding" Value="3,4,4,4" />
                <Setter Property="Margin" Value="-1,0,0,0" />
                <Setter TargetName="OuterBorder" Property="BorderThickness" Value="1,0,1,1"/>
                <Setter TargetName="InnerBorder" Property="BorderThickness" Value="1,0,1,1"/>
                <Setter TargetName="InnerBorder" Property="Margin" Value="1,0,1,1"/>
            </Trigger>
            <Trigger Property="TabStripPlacement" Value="Left">
                <Setter Property="Padding" Value="4,5,4,3" />
                <Setter Property="Margin" Value="0,-1,0,0" />
                <Setter TargetName="OuterBorder" Property="BorderThickness" Value="1,1,0,1"/>
                <Setter TargetName="InnerBorder" Property="BorderThickness" Value="1,1,0,1"/>
                <Setter TargetName="InnerBorder" Property="Margin" Value="1,1,0,1"/>
                <Setter Property="LayoutTransform" TargetName="Content">
                    <Setter.Value>
                        <RotateTransform Angle="90" />
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="TabStripPlacement" Value="Right">
                <Setter Property="Padding" Value="4,5,4,3" />
                <Setter Property="Margin" Value="0,-1,0,0" />
                <Setter Property="LayoutTransform" TargetName="Content">
                    <Setter.Value>
                        <RotateTransform Angle="90" />
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Foreground" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.GrayTextBrushKey}}" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="True"/>
                    <Condition Property="TabStripPlacement" Value="Top"/>
                </MultiTrigger.Conditions>
                <Setter Property="Background" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.UnpinnedTabItemTopHottrackCenterFillKey}}" />
                <Setter Property="BorderBrush" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.UnpinnedTabItemHottrackOuterBorderFillKey}}" />
            </MultiTrigger>

            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="True"/>
                    <Condition Property="TabStripPlacement" Value="Bottom"/>
                </MultiTrigger.Conditions>
                <Setter Property="Background" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.UnpinnedTabItemBottomHottrackCenterFillKey}}" />
                <Setter Property="BorderBrush" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.UnpinnedTabItemHottrackOuterBorderFillKey}}" />
            </MultiTrigger>

            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="True"/>
                    <Condition Property="TabStripPlacement" Value="Left"/>
                </MultiTrigger.Conditions>
                <Setter Property="Background" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.UnpinnedTabItemRightHottrackCenterFillKey}}" />
                <Setter Property="BorderBrush" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.UnpinnedTabItemHottrackOuterBorderFillKey}}" />
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="True"/>
                    <Condition Property="TabStripPlacement" Value="Right"/>
                </MultiTrigger.Conditions>
                <Setter Property="Background" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.UnpinnedTabItemLeftHottrackCenterFillKey}}" />
                <Setter Property="BorderBrush" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.UnpinnedTabItemHottrackOuterBorderFillKey}}" />
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="igDock:UnpinnedTabItemPanel.IsFirstInGroup" Value="True" />
                    <Condition Property="TabStripPlacement" Value="Bottom" />
                </MultiTrigger.Conditions>
                <Setter Property="Margin" Value="15,0,0,0" />
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="igDock:UnpinnedTabItemPanel.IsFirstInGroup" Value="True" />
                    <Condition Property="TabStripPlacement" Value="Top" />
                </MultiTrigger.Conditions>
                <Setter Property="Margin" Value="15,0,0,0" />
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="igDock:UnpinnedTabItemPanel.IsFirstInGroup" Value="True" />
                    <Condition Property="TabStripPlacement" Value="Left" />
                </MultiTrigger.Conditions>
                <Setter Property="Margin" Value="0,15,0,0" />
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="igDock:UnpinnedTabItemPanel.IsFirstInGroup" Value="True" />
                    <Condition Property="TabStripPlacement" Value="Right" />
                </MultiTrigger.Conditions>
                <Setter Property="Margin" Value="0,15,0,0" />
            </MultiTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!-- ********************************* DropPreview Style ********************************* -->
    <Style x:Key="{x:Static igDock:XamDockManager.DropPreviewStyleKey}" TargetType="{x:Type Control}">
        <Setter Property="Background" Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igDock:XamDockManager}, ResourceId=PreviewIndicatorBackground}}" />
        <Setter Property="BorderBrush" Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igDock:XamDockManager}, ResourceId=PreviewIndicatorBorderBrush}}" />
        <Setter Property="Opacity" Value="0.2" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Control}">
                    <Border BorderThickness="5" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="igDock:XamDockManager.DropPreviewTabLocation" Value="Bottom">
                <Setter Property="Template" Value="{StaticResource dropPreviewTabBottom}" />
            </Trigger>
            <Trigger Property="igDock:XamDockManager.DropPreviewTabLocation" Value="Top">
                <Setter Property="Template" Value="{StaticResource dropPreviewTabTop}" />
            </Trigger>
            <Trigger Property="igDock:XamDockManager.DropPreviewTabLocation" Value="Right">
                <Setter Property="Template" Value="{StaticResource dropPreviewTabRight}" />
            </Trigger>
            <Trigger Property="igDock:XamDockManager.DropPreviewTabLocation" Value="Left">
                <Setter Property="Template" Value="{StaticResource dropPreviewTabLeft}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    
    <!-- ========== XamDockManager.FloatingWindowPreviewStyleKey ========== -->
    <Style x:Key="{x:Static igDock:XamDockManager.FloatingWindowPreviewStyleKey}" TargetType="{x:Type Control}">
        <Setter Property="Background" Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igDock:XamDockManager}, ResourceId=FloatingWindowBackgroundBrush}}" />
        <Setter Property="BorderBrush" Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igDock:XamDockManager}, ResourceId=FloatingWindowBorderBrush}}" />
        <Setter Property="BorderThickness" Value="3" />
        <Setter Property="Opacity" Value=".39" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Control}">
                    <Border BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>