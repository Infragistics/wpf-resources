<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:igEditors="http://schemas.infragistics.com/xaml"
	xmlns:igEditorsPrim="http://schemas.infragistics.com/xaml/primitives"
	xmlns:ig="http://schemas.infragistics.com/xaml"
	xmlns:igBase="http://schemas.infragistics.com/xaml"
	xmlns:igPrim="http://schemas.infragistics.com/xaml/primitives"
	xmlns:igPrimLocal="http://schemas.infragistics.com/xaml/primitives"
	xmlns:sys="clr-namespace:System;assembly=mscorlib"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

	<!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
	<!--                             IMPORTANT NOTE:                                -->
	<!--                                                                            -->
	<!-- Only place resources in this ResourceDictionary that can be shared between -->
	<!-- Silverlight and WPF.  This file is merged into the platform-specific       -->
	<!-- specific ResourceDictionaries (i.e., generic.sl.xaml and generic.wpf.xaml) -->
	<!-- and the appropriate platform-specific ResourceDictionary is copied in the  -->
	<!-- pre-build steps so that it overwrites generic.xaml (which  by default has  -->
	<!-- no content)                                                                           -->
	<!--                                                                            -->
	<!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->

	<!-- ======================== -->
	<!-- ValueConverters          -->
	<!-- ======================== -->

    <!--SS 08/02/16 TFS222433 - Add vertical scrolling-->
    <igPrim:ValueConverterGroup x:Key="scrollDirectionToTransformConverter" >
        <igPrim:FixedValueConverter>
            <igPrim:FixedValueConverter.SourceValue>
                <Orientation>Vertical</Orientation>
            </igPrim:FixedValueConverter.SourceValue>
            <igPrim:FixedValueConverter.DestinationValue>
                <RotateTransform Angle="90" CenterX="0.5" CenterY="0.5"/>
            </igPrim:FixedValueConverter.DestinationValue>
        </igPrim:FixedValueConverter>
    </igPrim:ValueConverterGroup>

	<igPrim:ValueConverterGroup x:Key="boolToFontBold">
		<!-- if true sets FontWeight to Bold -->
		<igPrim:FixedValueConverter>
			<igPrim:FixedValueConverter.SourceValue>
				<sys:Boolean>True</sys:Boolean>
			</igPrim:FixedValueConverter.SourceValue>
			<igPrim:FixedValueConverter.DestinationValue>
				<FontWeight>Bold</FontWeight>
			</igPrim:FixedValueConverter.DestinationValue>
		</igPrim:FixedValueConverter>

		<!-- if false sets TextWrapping to Wrap --><!--
		<igPrim:FixedValueConverter>
			<igPrim:FixedValueConverter.DestinationValue>
				<TextWrapping>Wrap</TextWrapping>
			</igPrim:FixedValueConverter.DestinationValue>
		</igPrim:FixedValueConverter>-->
	</igPrim:ValueConverterGroup>

	<!-- Visibility to '52' -->
	<igPrim:ValueConverterGroup x:Key="visibilityTo52Converter">
		<igPrim:FixedValueConverter>
		<igPrim:FixedValueConverter.SourceValue>
			<Visibility>Visible</Visibility>
		</igPrim:FixedValueConverter.SourceValue>
		<igPrim:FixedValueConverter.DestinationValue>
			<sys:Int32>52</sys:Int32>
		</igPrim:FixedValueConverter.DestinationValue>
	</igPrim:FixedValueConverter>
	
		<igPrim:FixedValueConverter DestinationValue="{x:Null}">
		<igPrim:FixedValueConverter.SourceValue>
			<Visibility>Collapsed</Visibility>
		</igPrim:FixedValueConverter.SourceValue>
	</igPrim:FixedValueConverter>
		
	</igPrim:ValueConverterGroup>

	<!-- ======================== -->
	<!-- Control Styles           -->
	<!-- ======================== -->
	<Style x:Key="BorderlessButtonStyle" TargetType="Button">
		<!--<Setter Property="OverridesDefaultStyle" Value="True" />-->
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="Button">
					<Border Background="Transparent">
						<ContentPresenter
							HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
							VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!--  _________________________ CalendarBase __________________________________________  -->

	<!-- _________________________ Resource Keys Start  ______________________________________ -->


	<!-- _________________________ CalendarItem ______________________________________ -->
	<ControlTemplate x:Key="CalendarItemInner" TargetType="igEditorsPrim:CalendarItem">
		<Grid>
			<VisualStateManager.VisualStateGroups>
				<VisualStateGroup x:Name="FocusStates">
					<VisualState x:Name="Unfocused"/>
					<VisualState x:Name="Focused">
						<Storyboard TargetProperty="Visibility" TargetName="focusRect">
							<ObjectAnimationUsingKeyFrames>
								<DiscreteObjectKeyFrame KeyTime="0">
									<DiscreteObjectKeyFrame.Value>
										<Visibility>Visible</Visibility>
									</DiscreteObjectKeyFrame.Value>
								</DiscreteObjectKeyFrame>
							</ObjectAnimationUsingKeyFrames>
						</Storyboard>
					</VisualState>
				</VisualStateGroup>
			</VisualStateManager.VisualStateGroups>
			<Border x:Name="OuterBorder"
							igPrim:XamlHelper.SnapsToDevicePixels="True"
							HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
							VerticalAlignment="{TemplateBinding VerticalAlignment}"
							BorderThickness="{TemplateBinding BorderThickness}"
							BorderBrush="{TemplateBinding ComputedBorderBrush}"
							CornerRadius="{Binding Path=(igEditors:CalendarBase.Calendar).ResourceProviderResolved[ItemCorderRadius], RelativeSource={RelativeSource TemplatedParent}}"
							Background="{TemplateBinding ComputedBackground}">
				<Border x:Name="InnerBorder"
								CornerRadius="{Binding Path=CornerRadius, ElementName=OuterBorder}"
								BorderBrush="{TemplateBinding ComputedInnerBorderBrush}"
								BorderThickness="1">
					<TextBlock
						Text="{TemplateBinding Content}"
							HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
							VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
							igPrim:XamlHelper.SnapsToDevicePixels="{TemplateBinding igPrim:XamlHelper.SnapsToDevicePixels}"
							Foreground="{TemplateBinding ComputedForeground}"
							FontWeight="{Binding Path=IsHighlighted, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource boolToFontBold}}"
							Margin="{TemplateBinding Padding}" />
				</Border>
			</Border>
			<Rectangle x:Name="focusRect" Visibility="Collapsed" Stroke="#D0000000" StrokeThickness="1" StrokeDashArray="1 2" />
			</Grid>
	</ControlTemplate>


	<Style x:Key="CalendarItemBase" TargetType="igEditorsPrim:CalendarItem">
		<Setter Property="IsTabStop" Value="False"/>
		<Setter Property="HorizontalAlignment" Value="Stretch"/>
		<Setter Property="VerticalAlignment" Value="Stretch"/>
		<Setter Property="HorizontalContentAlignment" Value="Center"/>
		<Setter Property="VerticalContentAlignment" Value="Center"/>
		<Setter Property="BorderThickness" Value="1" />
		<Setter Property="Padding" Value="4,1,4,1"/>
		<Setter Property="Template" Value="{StaticResource CalendarItemInner}" />
	</Style>
	<Style TargetType="igEditorsPrim:CalendarItem" BasedOn="{StaticResource CalendarItemBase}">
		
		<!--  JJD 4/18/11 - TFS72229
				Leave a half pixel margin on the right and bottom which prevents clipping of the border in SL due to layout rounding -->
		<Setter Property="Margin" Value="0,0,.5,.5"/>
		
	</Style>

	<!-- _________________________ CalendarDay ______________________________________ -->
	<Style x:Key="CalendarDayBase" TargetType="igEditorsPrim:CalendarDay" BasedOn="{StaticResource CalendarItemBase}">
        <!-- JJD 06/02/15 - TFS194632 
             Adjust margin slightly to account for the fact that we are now measuring highlighted days which
             measure slightly wider because of bold text -->
		<!--<Setter Property="Padding" Value="4,1,4,1"/>-->
		<Setter Property="Padding" Value="3,1,4,1"/>
	</Style>
	<Style TargetType="igEditorsPrim:CalendarDay" BasedOn="{StaticResource CalendarDayBase}"/>

	<!-- _________________________ CalendarDayOfWeek ______________________________________ -->
	<Style x:Key="CalendarDayOfWeekBase" TargetType="igEditorsPrim:CalendarDayOfWeek">
		<Setter Property="igPrim:XamlHelper.Focusable" Value="False"/>
		<Setter Property="HorizontalContentAlignment" Value="Center"/>
		<Setter Property="VerticalContentAlignment" Value="Center"/>
        <!-- JJD 3/4/13 - TFS134569 - added computed fore and back brushes to easily support the color changes when the control is disabled
		<Setter Property="Background" Value="Transparent" />-->
        <Setter Property="Background" Value="{Binding Path=ComputedBackground, RelativeSource={RelativeSource Self}}" />
        <Setter Property="Foreground" Value="{Binding Path=ComputedForeground, RelativeSource={RelativeSource Self}}" />
		<Setter Property="BorderBrush" Value="{x:Null}" />
		<Setter Property="BorderThickness" Value="1" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="igEditorsPrim:CalendarDayOfWeek">
					<Border HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                      VerticalAlignment="{TemplateBinding VerticalAlignment}"
                      BorderBrush="{TemplateBinding BorderBrush}"
                      BorderThickness="{TemplateBinding BorderThickness}"
                      CornerRadius="0"
                      Background="{TemplateBinding Background}"
                      Padding="{TemplateBinding Padding}">
                          <!-- JJD 3/4/13 - TFS134569 - added computed fore and back brushes to easily support the color changes when the control is disabled
                            Foreground="{Binding Path=(igEditors:CalendarBase.Calendar).ResourceProviderResolved[DayOfWeekForegroundBrush], RelativeSource={RelativeSource TemplatedParent} }"-->
						<TextBlock
							Text="{TemplateBinding DisplayText}"
                           VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                          igPrim:XamlHelper.SnapsToDevicePixels="{TemplateBinding igPrim:XamlHelper.SnapsToDevicePixels}"
                          >
						</TextBlock>

					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style TargetType="igEditorsPrim:CalendarDayOfWeek" BasedOn="{StaticResource CalendarDayOfWeekBase}"/>

	<!-- _________________________ CalendarWeekNumber ______________________________________ -->
	<Style x:Key="CalendarWeekNumberBase" TargetType="igEditorsPrim:CalendarWeekNumber">
		<Setter Property="igPrim:XamlHelper.Focusable" Value="False"/>
		<Setter Property="HorizontalContentAlignment" Value="Center"/>
		<Setter Property="VerticalContentAlignment" Value="Center"/>
		<Setter Property="BorderBrush" Value="{x:Null}" />
		<Setter Property="BorderThickness" Value="0" />
		<Setter Property="Padding" Value="1,0" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="igEditorsPrim:CalendarWeekNumber">
					<Border HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                          VerticalAlignment="{TemplateBinding VerticalAlignment}"
                          BorderBrush="{TemplateBinding BorderBrush}"
                          BorderThickness="{TemplateBinding BorderThickness}"
                          CornerRadius="0"
                          Background="{TemplateBinding ComputedBackground}">
						<TextBlock
								Margin="{TemplateBinding Padding}"
												MinWidth="6"
                          Foreground="{TemplateBinding ComputedForeground}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            igPrim:XamlHelper.SnapsToDevicePixels="{TemplateBinding igPrim:XamlHelper.SnapsToDevicePixels}"
                            Text="{Binding}" />
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style TargetType="igEditorsPrim:CalendarWeekNumber" BasedOn="{StaticResource CalendarWeekNumberBase}" />

	<!-- _________________________ CalendarItemGroupTitle _________________________________ -->
	<Style x:Key="CalendarItemGroupTitleBase" TargetType="igEditorsPrim:CalendarItemGroupTitle">
		<Setter Property="igPrim:XamlHelper.Focusable" Value="False"/>
		<Setter Property="HorizontalContentAlignment" Value="Center"/>
		<Setter Property="VerticalContentAlignment" Value="Center"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="igEditorsPrim:CalendarItemGroupTitle">
					<Border BorderBrush="{TemplateBinding BorderBrush}"
                          BorderThickness="{TemplateBinding BorderThickness}"
                          HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                          VerticalAlignment="{TemplateBinding VerticalAlignment}"
                          CornerRadius="0"
                          Background="{TemplateBinding ComputedBackground}"
                          igPrim:XamlHelper.SnapsToDevicePixels="True"
                          Padding="{TemplateBinding Padding}">
						<Grid>
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width ="Auto"/>
								<ColumnDefinition Width ="*"/>
								<ColumnDefinition Width ="Auto"/>
							</Grid.ColumnDefinitions>
							
							<!--
								JJD 12//21/12 - TFS129404
								Changed to colum 0 with a span of 3 so that the title will always be centered even
								if only one of the prev/next buttons are visible
							<Button x:Name="headerContent"  Grid.Column="1" -->
							<Button x:Name="headerContent"  Grid.Column="0" Grid.ColumnSpan="3"
														Foreground="{TemplateBinding ComputedForeground}"
                               HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
																IsTabStop="False"
                                igPrim:XamlHelper.Focusable="False"
                                VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                Style="{StaticResource BorderlessButtonStyle}"
                                igPrim:XamlHelper.SnapsToDevicePixels="{TemplateBinding igPrim:XamlHelper.SnapsToDevicePixels}"
                                ContentTemplate="{TemplateBinding ContentTemplate}"
                                Content="{TemplateBinding Content}">
								<ig:Commanding.Command>
									<igEditorsPrim:CalendarCommandSource EventName="Click" CommandType="ZoomOutCalendarMode" ParameterBinding="{Binding Path=Group, RelativeSource={RelativeSource TemplatedParent}}"/>
								</ig:Commanding.Command>

							</Button>

                            <RepeatButton Grid.Column="0" x:Name="previousMonth"
														IsTabStop="False"
														Foreground="{TemplateBinding ComputedForeground}"
                            RenderTransform="{Binding Path=(igEditors:CalendarBase.Calendar).ScrollDirection, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource scrollDirectionToTransformConverter}}"
                            RenderTransformOrigin="0.5,0.5"
                            igPrim:XamlHelper.Focusable="False"
                            Visibility="{Binding Path=Group.ScrollPreviousButtonVisibility, 
                                    RelativeSource={RelativeSource TemplatedParent}}"
                            Style="{Binding Path=(igEditors:CalendarBase.Calendar).ScrollPreviousRepeatButtonStyleResolved, RelativeSource={RelativeSource TemplatedParent}}"
														Content="&lt;">
								<ig:Commanding.Command>
									<igEditorsPrim:CalendarCommandSource EventName="Click" CommandType="ScrollPreviousGroup"/>
								</ig:Commanding.Command>                                
							</RepeatButton>
							<RepeatButton   Grid.Column="2" x:Name="nextMonth"
																IsTabStop="False"
														Foreground="{TemplateBinding ComputedForeground}"
                               RenderTransform="{Binding Path=(igEditors:CalendarBase.Calendar).ScrollDirection, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource scrollDirectionToTransformConverter}}"
                               RenderTransformOrigin="0.5,0.5"
                               igPrim:XamlHelper.Focusable="False"
                                Visibility="{Binding Path=Group.ScrollNextButtonVisibility, 
                                    RelativeSource={RelativeSource TemplatedParent}}"
                                Style="{Binding Path=(igEditors:CalendarBase.Calendar).ScrollNextRepeatButtonStyleResolved, RelativeSource={RelativeSource TemplatedParent}}"
                                Content="&gt;">

                                <ig:Commanding.Command>
                                    <igEditorsPrim:CalendarCommandSource EventName="Click" CommandType="ScrollNextGroup"/>
                                </ig:Commanding.Command>
                            </RepeatButton>

						</Grid>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="Padding" Value="0,0,0,0"/>
	</Style>
	<Style TargetType="igEditorsPrim:CalendarItemGroupTitle" BasedOn="{StaticResource CalendarItemGroupTitleBase}">
	</Style>

	<!-- _________________________ CalendarItemGroup ______________________________________ -->
	<Style TargetType="igEditorsPrim:CalendarItemGroup">
		<Setter Property="igPrim:XamlHelper.Focusable" Value="False"/>
		<Setter Property="Background" Value="Transparent" />
		<!--<Setter Property="ScrollNextButtonVisibility" Value="{Binding Path=(igEditors:CalendarBase.Calendar).ScrollButtonVisibility, RelativeSource={RelativeSource Self}}" />
		<Setter Property="ScrollPreviousButtonVisibility" Value="{Binding Path=(igEditors:CalendarBase.Calendar).ScrollButtonVisibility, RelativeSource={RelativeSource Self}}" />-->
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="igEditorsPrim:CalendarItemGroup">
					<Border BorderBrush="{TemplateBinding BorderBrush}"
                      BorderThickness="{TemplateBinding BorderThickness}"
                      Background="{TemplateBinding Background}"
                      igPrim:XamlHelper.SnapsToDevicePixels="True"
                      Padding="{TemplateBinding Padding}">
						<Grid igPrim:XamlHelper.SnapsToDevicePixels="{TemplateBinding igPrim:XamlHelper.SnapsToDevicePixels}">

							<Grid.RowDefinitions>
								<RowDefinition Height="Auto"/>
								<RowDefinition Height="*"/>
							</Grid.RowDefinitions>
							 <!--Title--> 
							<igEditorsPrim:CalendarItemGroupTitle x:Name="groupTitle" 
																									 Content="{TemplateBinding Title}"/>

							<igEditorsPrim:CalendarItemAreaPanel Grid.Row="1" />
						</Grid>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- _________________________ CalendarItemArea ______________________________________ -->
	<Style x:Key="CalendarItemAreaBase" TargetType="igEditorsPrim:CalendarItemArea">
		<Setter Property="igPrim:XamlHelper.Focusable" Value="False"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="igEditorsPrim:CalendarItemArea">
						<Border BorderBrush="{TemplateBinding BorderBrush}"
							BorderThickness="{TemplateBinding BorderThickness}"
							Background="{TemplateBinding Background}"
							igPrim:XamlHelper.SnapsToDevicePixels="True"
							Padding="{TemplateBinding Padding}">
							<Grid>
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="Auto" />
									 <!--week numbers--> 
									<ColumnDefinition Width="*" />
									 <!--Calendar--> 
								</Grid.ColumnDefinitions>
								<Grid.RowDefinitions>
									<RowDefinition Height="Auto" />
									 <!--Days of Week--> 
									<RowDefinition />
									 <!--Calendar--> 
								</Grid.RowDefinitions>

								 <!--Day Of Week Header--> 
								<igEditorsPrim:CalendarDayOfWeekPanel
									x:Name="DayOfWeekPanel"
										Grid.Column="1"
										Visibility="{TemplateBinding DayOfWeekHeaderVisibility}"
										igPrim:XamlHelper.Focusable="False"
										Background="{Binding Path=(igEditors:CalendarBase.Calendar).ResourceProviderResolved[DayOfWeekBackgroundBrush], RelativeSource={RelativeSource TemplatedParent}}"/>

								 <!--Week Numbers--> 
								<Grid
									Grid.Column="0"
									Grid.Row="1"
									x:Name="weekNumbers"
									Visibility="{TemplateBinding WeekNumberVisibility}" Margin="0,1,0,0"
                                    >
									 <!--This is there to ensure the column is wide enough--> 
									<igEditorsPrim:CalendarWeekNumber 
										DataContext="{Binding Path=(igEditors:CalendarBase.Calendar).WeekNumberVisibility, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource visibilityTo52Converter}}" 
										Opacity="0" IsHitTestVisible="False"/>

									<igEditorsPrim:CalendarWeekNumberPanel
												x:Name="WeekNumberPanel"
												FirstRow="{TemplateBinding Property=FirstItemRowOffset}"/>
								</Grid>

								 <!--Items of Group - e.g. Days Of Month--> 
								<Border
										x:Name="itemsList"
										Grid.Column="1"
										Grid.Row="1"
										BorderBrush="{Binding Path=(igEditors:CalendarBase.Calendar).ResourceProviderResolved[DayOfWeekSeparatorBrush], RelativeSource={RelativeSource TemplatedParent}}"
										BorderThickness="{TemplateBinding ComputedItemsBorderThickness}"
									>
									<igPrim:UniformGrid
										x:Name="ItemPanel"
											igPrim:XamlHelper.Focusable="False"
											FirstColumn="{TemplateBinding FirstItemColumnOffset}"
											FirstRow="{TemplateBinding FirstItemRowOffset}"
											Rows="{TemplateBinding ItemRows}"
											Columns="{TemplateBinding ItemColumns}"
											/>
								</Border>
							</Grid>
						</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style TargetType="igEditorsPrim:CalendarItemArea" BasedOn="{StaticResource CalendarItemAreaBase}">
		<Setter Property="Margin" Value="0,5,0,0" />
	</Style>

	<!-- _________________________ XamCalendar ______________________________________ -->
	<Style TargetType="igEditors:XamCalendar">
		<Setter Property="HorizontalContentAlignment" Value="Stretch"/>
		<Setter Property="VerticalContentAlignment" Value="Stretch"/>
		<Setter Property="igPrim:XamlHelper.Focusable" Value="True"/>
        <Setter Property="Background" Value="{Binding Path=ResourceProviderResolved[CalendarBackgroundBrush], RelativeSource={RelativeSource Self}}"/>

		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="igEditors:XamCalendar">
					<Border BorderBrush="{TemplateBinding BorderBrush}"
						BorderThickness="{TemplateBinding BorderThickness}"
						Background="{TemplateBinding Background}"
						igPrim:XamlHelper.SnapsToDevicePixels="True"
						Padding="{TemplateBinding Padding}">
						<Grid x:Name="RootPanel" igPrim:XamlHelper.SnapsToDevicePixels="{TemplateBinding igPrim:XamlHelper.SnapsToDevicePixels}">

							<Grid.RowDefinitions>
								<RowDefinition Height="*"/>
								<RowDefinition Height="Auto"/>
							</Grid.RowDefinitions>
							<!--Today button-->
							<Button Grid.Row="1"
									IsTabStop="False"
									Content="{TemplateBinding TodayButtonCaption}"
									Style="{TemplateBinding TodayButtonStyleResolved}"
									Visibility="{TemplateBinding TodayButtonVisibility}">
								<ig:Commanding.Command>
									<igEditorsPrim:CalendarCommandSource EventName="Click" CommandType="Today"/>
								</ig:Commanding.Command>
							</Button>

							<!--Months-->
							<igEditorsPrim:CalendarItemGroupPanel
									HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
									VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>


						</Grid>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
</Style>

	<!-- _________________________ Resource Keys End  ______________________________________ -->
</ResourceDictionary>
