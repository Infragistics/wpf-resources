<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:local="http://schemas.infragistics.com/xaml"
    xmlns:localPrim="http://schemas.infragistics.com/xaml/primitives"
	xmlns:ig="http://schemas.infragistics.com/xaml"
	xmlns:igBase="http://schemas.infragistics.com/xaml"
	xmlns:igPrim="http://schemas.infragistics.com/xaml/primitives"
	xmlns:igPrimLocal="http://schemas.infragistics.com/xaml/primitives"
	xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
	xmlns:PresentationOptions="http://schemas.microsoft.com/winfx/2006/xaml/presentation/options"
  xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
	mc:Ignorable="PresentationOptions d"
	xmlns:sys="clr-namespace:System;assembly=mscorlib"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

	<!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
	<!--                             IMPORTANT NOTE:                                -->
	<!--                                                                            -->
	<!-- Only place resources in this ResourceDictionary that can be shared between -->
	<!-- Silverlight and WPF.  This file is merged into the platform-specific       -->
	<!-- specific ResourceDictionaries (i.e., generic.sl.xaml and generic.wpf.xaml) -->
	<!-- and the appropriate platform-specific ResourceDictionary is copied in the  -->
	<!-- pre-build steps so that it overwrites generic.xaml (which  by default has  -->
	<!-- no content)                                                                -->
	<!--                                                                            -->
	<!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->

	<igPrim:SystemResourceProvider x:Key="SRP"/>

	<!-- ======================== -->
	<!-- Brushes                  -->
	<!-- ======================== -->

	<SolidColorBrush PresentationOptions:Freeze="true" x:Key="DropdownBtnNormalOuterBorderFillKey" Color="#FF9EAAB5"/>
	<LinearGradientBrush PresentationOptions:Freeze="true" x:Key="DropdownBtnNormalInnerBorderFillKey" StartPoint="0.5,0" EndPoint="0.5,1">
		<LinearGradientBrush.GradientStops>
			<GradientStopCollection>
				<GradientStop Offset="0" Color="#FFfcfcfc"/>
				<GradientStop Offset="0.69" Color="#FFf9f9f9"/>
				<GradientStop Offset="0.69" Color="#FFf3f3f3"/>
				<GradientStop Offset="1" Color="#FFf3f3f3"/>
			</GradientStopCollection>
		</LinearGradientBrush.GradientStops>
	</LinearGradientBrush>
	<LinearGradientBrush PresentationOptions:Freeze="true" x:Key="DropdownBtnNormalCenterFillKey" EndPoint=".7,1" StartPoint=".7,0">
		<GradientStop Color="#FFCBD2D7" Offset="0.888"/>
		<GradientStop Color="#FFF7F9F9" Offset="0.276"/>
	</LinearGradientBrush>
	
	<LinearGradientBrush PresentationOptions:Freeze="true" x:Key="DropdownBtnHoverCenterFillKey" EndPoint=".7,1" StartPoint=".7,0">
		<GradientStop Color="#FFF7F9F9" Offset="0.369"/>
		<GradientStop Color="#FFCBD2D7" Offset="0.969"/>
	</LinearGradientBrush>
	
	<SolidColorBrush x:Key="DropdownBtnHoverBorderFillKey" Color="#FF5CBBCE"/>
	
	<SolidColorBrush PresentationOptions:Freeze="true" x:Key="DropdownBtnHottrackOuterBorderFillKey" Color="#FF3C7FB1"/>
	<LinearGradientBrush PresentationOptions:Freeze="true" x:Key="DropdownBtnHottrackInnerBorderFillKey" StartPoint="0.5,0" EndPoint="0.5,1">
		<LinearGradientBrush.GradientStops>
			<GradientStopCollection>
				<GradientStop Color="#FFfafdfe" Offset="0" />
				<GradientStop Color="#FFf5fbfe" Offset="0.5" />
				<GradientStop Color="#FFeff9fe" Offset="0.5009999871253967" />
				<GradientStop Color="#FFe8f5fc" Offset="1" />
			</GradientStopCollection>
		</LinearGradientBrush.GradientStops>
	</LinearGradientBrush>
	<LinearGradientBrush PresentationOptions:Freeze="true" x:Key="DropdownBtnHottrackCenterFillKey" StartPoint="0.5,0" EndPoint="0.5,1">
		<LinearGradientBrush.GradientStops>
			<GradientStopCollection>
				<GradientStop Color="#FFeaf6fd" Offset="0" />
				<GradientStop Color="#FFd9f0fc" Offset="0.5" />
				<GradientStop Color="#FFbee6fd" Offset="0.5009999871253967" />
				<GradientStop Color="#FFa7d9f5" Offset="1" />
			</GradientStopCollection>
		</LinearGradientBrush.GradientStops>
	</LinearGradientBrush>
	<SolidColorBrush PresentationOptions:Freeze="true" x:Key="DropdownBtnPressedOuterBorderFillKey" Color="#FF2C628B"/>	
	<LinearGradientBrush PresentationOptions:Freeze="true" x:Key="DropdownBtnPressedInnerBorderFillKey" StartPoint="0.5,0" EndPoint="0.5,1">
		<LinearGradientBrush.GradientStops>
			<GradientStopCollection>
				<GradientStop Color="#FF9eb0ba" Offset="0" />
				<GradientStop Color="#FF9abacb" Offset="0.5" />
				<GradientStop Color="#FF78aac5" Offset="0.5008999705314636" />
				<GradientStop Color="#FF5a96b8" Offset="0.8999999761581421" />
				<GradientStop Color="#FF68b2da" Offset="1" />
			</GradientStopCollection>
		</LinearGradientBrush.GradientStops>
	</LinearGradientBrush>
	<LinearGradientBrush x:Key="DropdownBtnPressedCenterFillKey" EndPoint="0.5,1" StartPoint="0.5,0">
		<GradientStop Color="#FFDDEBF4" Offset="0.016"/>
		<GradientStop Color="#FFD1E2F1" Offset="0.375"/>
		<GradientStop Color="#FF6DA7D5" Offset="0.984"/>
	</LinearGradientBrush>
	<SolidColorBrush x:Key="DropdownBtnPressedBorderFillKey" Color="#FF6DBDD1"/>

	<SolidColorBrush PresentationOptions:Freeze="true" x:Key="DropdownBtnGlyphNormalForegroundFillKey" Color="#FF000000" />
	<SolidColorBrush PresentationOptions:Freeze="true" x:Key="DropdownBtnGlyphHottrackForegroundFillKey" Color="#FF000000" />
		
	<LinearGradientBrush x:Key="SilverlightDarkBrush" EndPoint="0.5,1" StartPoint="0.5,0">
		<GradientStop Color="#FFA3AEB9" Offset="0"/>
		<GradientStop Color="#FF8399A9" Offset="0.375"/>
		<GradientStop Color="#FF718597" Offset="0.375"/>
		<GradientStop Color="#FF617584" Offset="1"/>
	</LinearGradientBrush>

	
	
	<!-- ======================== -->
	<!-- ValueConverters          -->
	<!-- ======================== -->
	
	<igPrim:ValueConverterGroup x:Key="horizToTextAlignmentConverter">
		<!-- Left to Left -->
		<igPrim:FixedValueConverter>
			<igPrim:FixedValueConverter.SourceValue>
				<HorizontalAlignment>Left</HorizontalAlignment>
			</igPrim:FixedValueConverter.SourceValue>
			<igPrim:FixedValueConverter.DestinationValue>
				<TextAlignment>Left</TextAlignment>
			</igPrim:FixedValueConverter.DestinationValue>
		</igPrim:FixedValueConverter>
		
		<!-- Center to Center -->
		<igPrim:FixedValueConverter>
			<igPrim:FixedValueConverter.SourceValue>
				<HorizontalAlignment>Center</HorizontalAlignment>
			</igPrim:FixedValueConverter.SourceValue>
			<igPrim:FixedValueConverter.DestinationValue>
				<TextAlignment>Center</TextAlignment>
			</igPrim:FixedValueConverter.DestinationValue>
		</igPrim:FixedValueConverter>
		
		<!-- Right to Right -->
		<igPrim:FixedValueConverter>
			<igPrim:FixedValueConverter.SourceValue>
				<HorizontalAlignment>Right</HorizontalAlignment>
			</igPrim:FixedValueConverter.SourceValue>
			<igPrim:FixedValueConverter.DestinationValue>
				<TextAlignment>Right</TextAlignment>
			</igPrim:FixedValueConverter.DestinationValue>
		</igPrim:FixedValueConverter>
		
		<!-- Stretch to Left -->
		<igPrim:FixedValueConverter>
			<igPrim:FixedValueConverter.SourceValue>
				<HorizontalAlignment>Stretch</HorizontalAlignment>
			</igPrim:FixedValueConverter.SourceValue>
			<igPrim:FixedValueConverter.DestinationValue>
				<TextAlignment>Left</TextAlignment>
			</igPrim:FixedValueConverter.DestinationValue>
		</igPrim:FixedValueConverter>

	</igPrim:ValueConverterGroup>

	<igPrim:ValueConverterGroup x:Key="complementConverter">
		<!-- True to False -->
		<igPrim:FixedValueConverter>
			<igPrim:FixedValueConverter.SourceValue>
				<sys:Boolean>True</sys:Boolean>
			</igPrim:FixedValueConverter.SourceValue>
			<igPrim:FixedValueConverter.DestinationValue>
				<sys:Boolean>False</sys:Boolean>
			</igPrim:FixedValueConverter.DestinationValue>
		</igPrim:FixedValueConverter>

		<!-- False to True -->
		<igPrim:FixedValueConverter>
			<igPrim:FixedValueConverter.SourceValue>
				<sys:Boolean>False</sys:Boolean>
			</igPrim:FixedValueConverter.SourceValue>
			<igPrim:FixedValueConverter.DestinationValue>
				<sys:Boolean>True</sys:Boolean>
			</igPrim:FixedValueConverter.DestinationValue>
		</igPrim:FixedValueConverter>

	</igPrim:ValueConverterGroup>
	
	<!-- dims the glyph when the control is disabled -->
	<igPrim:FixedValueConverter x:Key="enabledToOpacity">
		<igPrim:FixedValueConverter.SourceValue>
			<sys:Boolean>False</sys:Boolean>
		</igPrim:FixedValueConverter.SourceValue>
		<igPrim:FixedValueConverter.DestinationValue>
			<sys:Double>25e-2</sys:Double>
		</igPrim:FixedValueConverter.DestinationValue>
	</igPrim:FixedValueConverter>

	<igPrim:ValueConverterGroup x:Key="defaultBtnOuterBorderConverter">
		<!-- True (IsChecked}-->
		<igPrim:FixedValueConverter DestinationValue="{StaticResource DropdownBtnPressedOuterBorderFillKey}">
			<igPrim:FixedValueConverter.SourceValue>
				<sys:Boolean>True</sys:Boolean>
			</igPrim:FixedValueConverter.SourceValue>
		</igPrim:FixedValueConverter>

		<!-- False (IsChecked}-->
		<igPrim:FixedValueConverter DestinationValue="{StaticResource DropdownBtnNormalOuterBorderFillKey}">
			<igPrim:FixedValueConverter.SourceValue>
				<sys:Boolean>False</sys:Boolean>
			</igPrim:FixedValueConverter.SourceValue>
		</igPrim:FixedValueConverter>
	</igPrim:ValueConverterGroup>

	<igPrim:ValueConverterGroup x:Key="defaultBtnInnerBorderConverter">
		<!-- True (IsChecked}-->
		<igPrim:FixedValueConverter DestinationValue="{StaticResource DropdownBtnPressedInnerBorderFillKey}">
			<igPrim:FixedValueConverter.SourceValue>
				<sys:Boolean>True</sys:Boolean>
			</igPrim:FixedValueConverter.SourceValue>
		</igPrim:FixedValueConverter>

		<!-- False (IsChecked}-->
		<igPrim:FixedValueConverter DestinationValue="{StaticResource DropdownBtnNormalInnerBorderFillKey}">
			<igPrim:FixedValueConverter.SourceValue>
				<sys:Boolean>False</sys:Boolean>
			</igPrim:FixedValueConverter.SourceValue>
		</igPrim:FixedValueConverter>
	</igPrim:ValueConverterGroup>

	<igPrim:ValueConverterGroup x:Key="defaultBtnCenterConverter">
		<!-- True (IsChecked}-->
		<igPrim:FixedValueConverter DestinationValue="{StaticResource DropdownBtnPressedCenterFillKey}">
			<igPrim:FixedValueConverter.SourceValue>
				<sys:Boolean>True</sys:Boolean>
			</igPrim:FixedValueConverter.SourceValue>
		</igPrim:FixedValueConverter>

		<!-- False (IsChecked}-->
		<igPrim:FixedValueConverter DestinationValue="{StaticResource DropdownBtnNormalCenterFillKey}">
			<igPrim:FixedValueConverter.SourceValue>
				<sys:Boolean>False</sys:Boolean>
			</igPrim:FixedValueConverter.SourceValue>
		</igPrim:FixedValueConverter>
	</igPrim:ValueConverterGroup>

	<!-- ======================== -->
	<!-- Control Styles           -->
	<!-- ======================== -->


	<DataTemplate x:Key="IncreaseGlyphKey">
		<Path
	Width="7"
	Height="4"
	Data="M 0,3 C0,3 0,4 0,4 0,4 3,4 3,4 3,4 3,3 3,3 3,3 4,3 4,3 4,3 4,4 4,4 4,4 7,4 7,4 7,4 7,3 7,3 7,3 6,3 6,3 6,3 6,2 6,2 6,2 5,2 5,2 5,2 5,1 5,1 5,1 4,1 4,1 4,1 4,0 4,0 4,0 3,0 3,0 3,0 3,1 3,1 3,1 2,1 2,1 2,1 2,2 2,2 2,2 1,2 1,2 1,2 1,3 1,3 1,3 0,3 0,3 z"
	Fill="Black"/>
	</DataTemplate>

	<DataTemplate x:Key="DecreaseGlyphKey">
		<Path
	Width="7"
	Height="4"
	Data="M 0,1 C0,1 0,0 0,0 0,0 3,0 3,0 3,0 3,1 3,1 3,1 4,1 4,1 4,1 4,0 4,0 4,0 7,0 7,0 7,0 7,1 7,1 7,1 6,1 6,1 6,1 6,2 6,2 6,2 5,2 5,2 5,2 5,3 5,3 5,3 4,3 4,3 4,3 4,4 4,4 4,4 3,4 3,4 3,4 3,3 3,3 3,3 2,3 2,3 2,3 2,2 2,2 2,2 1,2 1,2 1,2 1,1 1,1 1,1 0,1 0,1 z"
	Fill="Black"/>
	</DataTemplate>

	<Style x:Key="spinButtonStyle" TargetType="RepeatButton">
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="Padding" Value="3,1"/>
		<Setter Property="IsTabStop" Value="False"/>
		<Setter Property="igPrim:XamlHelper.Focusable" Value="False"/>
	</Style>

	<Style x:Key="maskedInputTextBoxStyle" TargetType="TextBox">
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="BorderBrush" Value="Transparent" />
		<Setter Property="BorderThickness" Value="0" />
	</Style>
	
	<!--  _________________________ DropDownButtonStyle __________________________________________  -->
	
	<Style x:Key="DropDownButtonStyle" TargetType="ToggleButton">
        <Setter Property="Foreground" Value="#FF333333"/>
        <Setter Property="BorderBrush" Value="{StaticResource SilverlightDarkBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Padding" Value="2"/>
		<Setter Property="Cursor" Value="Hand"/>
		<Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Grid>
                		<VisualStateManager.VisualStateGroups>
                			<VisualStateGroup x:Name="CommonStates">
                				<VisualState x:Name="Normal"/>
                				<VisualState x:Name="MouseOver">
                					<Storyboard>
                						<DoubleAnimationUsingKeyFrames Storyboard.TargetName="BackgroundOverlay" Storyboard.TargetProperty="Opacity">
                							<SplineDoubleKeyFrame KeyTime="0" Value="1"/>
                						</DoubleAnimationUsingKeyFrames>
                						<ColorAnimationUsingKeyFrames Storyboard.TargetName="BackgroundGradient" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[3].(GradientStop.Color)">
                							<SplineColorKeyFrame KeyTime="0" Value="#7FFFFFFF"/>
                						</ColorAnimationUsingKeyFrames>
                						<ColorAnimationUsingKeyFrames Storyboard.TargetName="BackgroundGradient" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[2].(GradientStop.Color)">
                							<SplineColorKeyFrame KeyTime="0" Value="#CCFFFFFF"/>
                						</ColorAnimationUsingKeyFrames>
                						<ColorAnimationUsingKeyFrames Storyboard.TargetName="BackgroundGradient" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
                							<SplineColorKeyFrame KeyTime="0" Value="#F2FFFFFF"/>
                						</ColorAnimationUsingKeyFrames>
                					</Storyboard>
                				</VisualState>
                				<VisualState x:Name="Pressed">
                					<Storyboard>
                						<DoubleAnimationUsingKeyFrames Storyboard.TargetName="BackgroundOverlay2" Storyboard.TargetProperty="Opacity">
                							<SplineDoubleKeyFrame KeyTime="0" Value="1"/>
                						</DoubleAnimationUsingKeyFrames>
                						<DoubleAnimationUsingKeyFrames Storyboard.TargetName="Highlight" Storyboard.TargetProperty="(UIElement.Opacity)">
                							<SplineDoubleKeyFrame KeyTime="0" Value="1"/>
                						</DoubleAnimationUsingKeyFrames>
                						<ColorAnimationUsingKeyFrames Storyboard.TargetName="BackgroundGradient" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
                							<SplineColorKeyFrame KeyTime="0" Value="#E5FFFFFF"/>
                						</ColorAnimationUsingKeyFrames>
                						<ColorAnimationUsingKeyFrames Storyboard.TargetName="BackgroundGradient" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[2].(GradientStop.Color)">
                							<SplineColorKeyFrame KeyTime="0" Value="#BCFFFFFF"/>
                						</ColorAnimationUsingKeyFrames>
                						<ColorAnimationUsingKeyFrames Storyboard.TargetName="BackgroundGradient" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[3].(GradientStop.Color)">
                							<SplineColorKeyFrame KeyTime="0" Value="#6BFFFFFF"/>
                						</ColorAnimationUsingKeyFrames>
                						<ColorAnimationUsingKeyFrames Storyboard.TargetName="BackgroundGradient" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[0].(GradientStop.Color)">
                							<SplineColorKeyFrame KeyTime="0" Value="#F2FFFFFF"/>
                						</ColorAnimationUsingKeyFrames>
                					</Storyboard>
                				</VisualState>
                				<VisualState x:Name="Disabled">
                					<Storyboard>
                						<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="DisabledVisualElement">
                							<EasingDoubleKeyFrame KeyTime="0" Value=".55"/>
                						</DoubleAnimationUsingKeyFrames>
                						<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="BtnArrowDisabled">
                							<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                						</DoubleAnimationUsingKeyFrames>
                					</Storyboard>
                				</VisualState>
                			</VisualStateGroup>
                			<VisualStateGroup x:Name="CheckStates">
                				<VisualState x:Name="Checked">
                					<Storyboard>
                						<DoubleAnimationUsingKeyFrames Storyboard.TargetName="BackgroundOverlay3" Storyboard.TargetProperty="(UIElement.Opacity)">
                							<SplineDoubleKeyFrame KeyTime="0" Value="1"/>
                						</DoubleAnimationUsingKeyFrames>
                						<DoubleAnimationUsingKeyFrames Storyboard.TargetName="Highlight" Storyboard.TargetProperty="(UIElement.Opacity)">
                							<SplineDoubleKeyFrame KeyTime="0" Value="1"/>
                						</DoubleAnimationUsingKeyFrames>
                						<DoubleAnimationUsingKeyFrames Storyboard.TargetName="BackgroundGradient2" Storyboard.TargetProperty="(UIElement.Opacity)">
                							<SplineDoubleKeyFrame KeyTime="0" Value="1"/>
                						</DoubleAnimationUsingKeyFrames>
                						<ColorAnimationUsingKeyFrames Storyboard.TargetName="BackgroundGradient2" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
                							<SplineColorKeyFrame KeyTime="0" Value="#E5FFFFFF"/>
                						</ColorAnimationUsingKeyFrames>
                						<ColorAnimationUsingKeyFrames Storyboard.TargetName="BackgroundGradient2" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[2].(GradientStop.Color)">
                							<SplineColorKeyFrame KeyTime="0" Value="#BCFFFFFF"/>
                						</ColorAnimationUsingKeyFrames>
                						<ColorAnimationUsingKeyFrames Storyboard.TargetName="BackgroundGradient2" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[3].(GradientStop.Color)">
                							<SplineColorKeyFrame KeyTime="0" Value="#6BFFFFFF"/>
                						</ColorAnimationUsingKeyFrames>
                						<ColorAnimationUsingKeyFrames Storyboard.TargetName="BackgroundGradient2" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[0].(GradientStop.Color)">
                							<SplineColorKeyFrame KeyTime="0" Value="#F2FFFFFF"/>
                						</ColorAnimationUsingKeyFrames>
                					</Storyboard>
                				</VisualState>
                				<VisualState x:Name="Unchecked"/>
                				<VisualState x:Name="Indeterminate"/>
                			</VisualStateGroup>
                			<VisualStateGroup x:Name="FocusStates">
                				<VisualState x:Name="Focused">
                					<Storyboard>
                						<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="FocusVisualElement" Storyboard.TargetProperty="Visibility">
                							<DiscreteObjectKeyFrame KeyTime="0">
                								<DiscreteObjectKeyFrame.Value>
                									<Visibility>Visible</Visibility>
                								</DiscreteObjectKeyFrame.Value>
                							</DiscreteObjectKeyFrame>
                						</ObjectAnimationUsingKeyFrames>
                					</Storyboard>
                				</VisualState>
                				<VisualState x:Name="Unfocused"/>
                			</VisualStateGroup>
                			<VisualStateGroup x:Name="ValidationStates">
                				<VisualState x:Name="Valid"/>
                				<VisualState x:Name="InvalidFocused"/>
                				<VisualState x:Name="InvalidUnfocused"/>
                			</VisualStateGroup>
                		</VisualStateManager.VisualStateGroups>
                    	<Grid>
                    		<Border x:Name="Background" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="2"/>
                    		<Border x:Name="BackgroundOverlay" Background="#FF448DCA" BorderBrush="#FF448DCA" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="2" Opacity="0"/>
                    		<Border x:Name="BackgroundOverlay2" Background="#FF448DCA" BorderBrush="#00000000" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="1" Opacity="0"/>
                    		<Border x:Name="BackgroundGradient" BorderBrush="#FFFFFFFF" BorderThickness="1" CornerRadius="1" Margin="{TemplateBinding BorderThickness}">
                    			<Border.Background>
                    				<LinearGradientBrush EndPoint=".7,1" StartPoint=".7,0">
                    					<GradientStop Color="#FFFFFFFF" Offset="0"/>
                    					<GradientStop Color="#F9FFFFFF" Offset="0.375"/>
                    					<GradientStop Color="#E5FFFFFF" Offset="0.625"/>
                    					<GradientStop Color="#C6FFFFFF" Offset="1"/>
                    				</LinearGradientBrush>
                    			</Border.Background>
                    		</Border>
                    		<Border x:Name="BackgroundOverlay3" Background="#FF448DCA" BorderBrush="#00000000" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="1" Opacity="0"/>
                    		<Border x:Name="BackgroundGradient2" BorderBrush="#FFFFFFFF" BorderThickness="1" CornerRadius="0,1,1,0" Margin="{TemplateBinding BorderThickness}" Opacity="0">
                    			<Border.Background>
                    				<LinearGradientBrush EndPoint=".7,1" StartPoint=".7,0">
                    					<GradientStop Color="#FFFFFFFF" Offset="0"/>
                    					<GradientStop Color="#F9FFFFFF" Offset="0.375"/>
                    					<GradientStop Color="#E5FFFFFF" Offset="0.625"/>
                    					<GradientStop Color="#C6FFFFFF" Offset="1"/>
                    				</LinearGradientBrush>
                    			</Border.Background>
                    		</Border>
                    		<Border x:Name="Highlight" BorderBrush="#FF6DBDD1" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="1" Margin="{TemplateBinding BorderThickness}" IsHitTestVisible="false" Opacity="0"/>
                    		<Border x:Name="FocusVisualElement" BorderBrush="#FF6DBDD1" BorderThickness="1" CornerRadius="1" Margin="1" IsHitTestVisible="false" Visibility="Collapsed"/>
                    		<Rectangle x:Name="DisabledVisualElement" RadiusX="3" RadiusY="3" Fill="#FFFFFFFF" Opacity="0" IsHitTestVisible="false" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" />
                    	</Grid>
                    	<Grid VerticalAlignment="Center" Margin="0" HorizontalAlignment="Center">
                    		<Path x:Name="BtnArrowBackground" Stretch="Fill" Height="4" Margin="0,2,0,0"
                    			Width="7" Data="M 0,0 C0,0 7,0 7,0 7,0 3.5,3.5 3.5,3.5 3.5,3.5 0,0 0,0 z">
                    			<Path.Fill>
                    				<SolidColorBrush x:Name="BtnArrowColorBackground" Color="#FFFFFFFF"/>
                    			</Path.Fill>
                    		</Path>
                    		<Path x:Name="BtnArrowForeground" Stretch="Fill" Height="4"  
                    			Width="7" Data="M 0,0 C0,0 7,0 7,0 7,0 3.5,3.5 3.5,3.5 3.5,3.5 0,0 0,0 z">
                    			<Path.Fill>
                    				<SolidColorBrush x:Name="BtnArrowColorForeground" Color="#FF333333"/>
                    			</Path.Fill>
                    		</Path>
							<Path x:Name="BtnArrowDisabled" Stretch="Fill" Height="4"  
                    			Width="7" Data="M 0,0 C0,0 7,0 7,0 7,0 3.5,3.5 3.5,3.5 3.5,3.5 0,0 0,0 z" Opacity="0">
                    			<Path.Fill>
                    				<SolidColorBrush x:Name="BtnArrowColorDisabled" Color="#FF8D8D8D"/>
                    			</Path.Fill>
                    		</Path>
                    	</Grid>
                	</Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
	
	<!--  _________________________ XamDateTimeInput __________________________________________  -->

    <Style TargetType="local:XamDateTimeInput">
        <Setter Property="igPrim:XamlHelper.SnapsToDevicePixels" Value="True" />
        <Setter Property="Background" Value="White"/>
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="BorderBrush" Value="{StaticResource SilverlightDarkBrush}"/>
        <Setter Property="SpinButtonStyle" Value="{StaticResource spinButtonStyle}" />
        <Setter Property="DropDownButtonStyle" Value="{StaticResource DropDownButtonStyle}" />
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="MinHeight" Value="22"/>
        <Setter Property="Padding" Value="1"></Setter>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:XamDateTimeInput">
                    <igPrim:ValidationDecorator x:Name="MainGrid">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="FocusedDropDown"/>
                                <VisualState x:Name="Unfocused"/>
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="OverBorder">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="OverBorder">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="PART_InputTextBox">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="0.25"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="ReadOnly"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <!-- SSP 10/11/11 TFS91203 - This border element was by itself, sibling of the below grid element. I made it wrap 
                                the below grid instead because otherwise when the border thickness is a large value, it covers the contents. -->
                        <Border x:Name="BgBorder"
											Background="{TemplateBinding Background}"
											BorderBrush="{TemplateBinding BorderBrush}" 
											BorderThickness="{TemplateBinding BorderThickness}" 
											CornerRadius="2" Margin="0">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <Border x:Name="OverBorder" BorderThickness="1" CornerRadius="1" Opacity="0" BorderBrush="{StaticResource DropdownBtnPressedBorderFillKey}" Margin="0,0,1,0" />
                                <Grid x:Name="PART_SpinButtons" Grid.Column="1" Visibility="{TemplateBinding SpinButtonVisibilityResolved}" Margin="0,1,1,1">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="*"/>
                                        <RowDefinition Height="1"/>
                                        <RowDefinition Height="*"/>
                                    </Grid.RowDefinitions>
                                    <RepeatButton x:Name="spinUp" Style="{TemplateBinding SpinButtonStyle}" ContentTemplate="{StaticResource IncreaseGlyphKey}" >
                                        <ig:Commanding.Command>
                                            <igPrim:MaskedInputCommandSource EventName="Click" CommandId="SpinUp" />
                                        </ig:Commanding.Command>
                                    </RepeatButton>
                                    <RepeatButton x:Name="spinDown" Style="{TemplateBinding SpinButtonStyle}" Grid.Row="2" ContentTemplate="{StaticResource DecreaseGlyphKey}">
                                        <ig:Commanding.Command>
                                            <igPrim:MaskedInputCommandSource EventName="Click" CommandId="SpinDown" />
                                        </ig:Commanding.Command>
                                    </RepeatButton>
                                </Grid>
                                <igPrim:MaskedInputTextBox
									x:Name="PART_InputTextBox"
									Style="{StaticResource maskedInputTextBoxStyle}"
									HorizontalAlignment="Stretch"
									HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
									VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
									TextAlignment="{Binding HorizontalContentAlignment, Converter={StaticResource horizToTextAlignmentConverter}, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
									InputMethod.PreferredImeState="{TemplateBinding InputMethod.PreferredImeState}" 
									Margin="{TemplateBinding Padding}"
                                    VerticalAlignment="Stretch"
                                    igPrim:XamlHelper.Focusable="{TemplateBinding igPrim:XamlHelper.Focusable}"
                                    IsTabStop="{TemplateBinding IsTabStop}"
							    />
                                <ToggleButton
									x:Name="PART_DropDownButton"
									Grid.Column="2"
									Grid.RowSpan="3"
									ClickMode="Press"
									IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
									IsEnabled="{Binding IsReadOnly, Converter={StaticResource complementConverter}, RelativeSource={RelativeSource TemplatedParent}}"
									Style="{TemplateBinding DropDownButtonStyle}"
									Visibility="{TemplateBinding DropDownButtonVisibility}"
									igPrim:XamlHelper.Focusable="False" IsTabStop="False" Margin="0,1,1,1"
                                />
                                <Popup x:Name="PART_Popup">
                                    <Border 
										Background="{Binding [WindowBrush], Source={StaticResource SRP}}"
										BorderBrush="{Binding [WindowFrameBrush], Source={StaticResource SRP}}"
										BorderThickness="1"
										Padding="1">
                                        <ig:XamCalendar x:Name="PART_Calendar"
											MinDate="{TemplateBinding ComputedMinDate}"
											MaxDate="{TemplateBinding ComputedMaxDate}"
                                            ScrollDirection="{TemplateBinding ScrollDirection}"
											MinCalendarMode="{TemplateBinding ComputedMinCalendarMode}"
											SelectedDate="{Binding DateValue, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
											SelectionMode="SingleDate" />
                                    </Border>
                                </Popup>
                            </Grid>
                        </Border>
                    </igPrim:ValidationDecorator>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>
