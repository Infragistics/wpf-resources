     <ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:controls="http://infragistics.com/Controls"
                    xmlns:shared="http://schemas.infragistics.com/xaml"
                    xmlns:dv="http://infragistics.com/DataVisualization"
                    xmlns:local="http://schemas.infragistics.com/xaml"
                    xmlns:ig="http://schemas.infragistics.com/xaml"
                    xmlns:System="clr-namespace:System;assembly=mscorlib"
                    xmlns:mscorlib="clr-namespace:System;assembly=mscorlib">
 
  <ResourceDictionary.MergedDictionaries>
    <local:LegendTemplatesDictionary  />
  </ResourceDictionary.MergedDictionaries>
  
  <!-- ******************* colors of series at index 1-10 *************** -->
  <Color x:Key="Color_001">#FF8BDC5C</Color> 
  <Color x:Key="Color_002">#FF8961A9</Color>
  <Color x:Key="Color_003">#FF6DB1FF</Color>
  <Color x:Key="Color_004">#FF82E9D9</Color>
  <Color x:Key="Color_005">#FFEA3C63</Color>
  <Color x:Key="Color_006">#FF735656</Color>
  <Color x:Key="Color_007">#FFF8CE4F</Color>
  <Color x:Key="Color_008">#FFA8A8B7</Color>
  <Color x:Key="Color_009">#FFE051A9</Color>
  <Color x:Key="Color_010">#FFFF903B</Color>
  <!-- ******************* other colors ******************* -->
  <Color x:Key="Color_011">#ff565656</Color>
  <Color x:Key="Color_012">#ffee5879</Color> <!--color for negative elements-->
  <Color x:Key="Color_013">#FF666666</Color>
  <Color x:Key="Color_014">#FF888888</Color>
  <Color x:Key="Color_015">#26666666</Color>
  <Color x:Key="Color_016">#66666666</Color>
  <Color x:Key="Color_017">#F2FFFFFF</Color>
  <Color x:Key="Color_018">#FFBBBBBB</Color>
  <Color x:Key="Color_019">#8C666666</Color>
  <Color x:Key="Color_020">#3F666666</Color>
  <Color x:Key="Color_021">#FFFFFFFF</Color>
  <Color x:Key="Color_022">#CC333333</Color>
  <Color x:Key="Color_023">#FF000000</Color>
  <Color x:Key="Color_024">#FFE8E8E8</Color>

  <!-- ******************* BRUSHES *******************-->
  <SolidColorBrush x:Key="ForegroundBrush" Color="#FF4E4E4E"/>
  <SolidColorBrush x:Key="TransparentBrush" Color="Transparent"/>
  <SolidColorBrush x:Key="LegendForegroundBrush" Color="#FF252525"/>

  <SolidColorBrush x:Key="PreviewPathBrush" Color="{StaticResource Color_016}"/>
  <SolidColorBrush x:Key="ChartBackgroundBrush" Color="{StaticResource Color_021}"/>
  <SolidColorBrush x:Key="PlotAreaBackgroundBrush" Color="Transparent"/>
  <SolidColorBrush x:Key="PlotAreaBorderBrush" Color="Transparent"/>
  <SolidColorBrush x:Key="NegativeBrush" Color="{StaticResource Color_012}"/>
  <SolidColorBrush x:Key="OutlineBrush" Color="Transparent"/>
  <SolidColorBrush x:Key="TrendlineBaseBrush" Color="{StaticResource Color_011}"/>

  <!-- Axis Brushes -->
  <!--<SolidColorBrush x:Key="AxisLineStroke" Color="{StaticResource Color_016}"/>-->
  <!--<SolidColorBrush x:Key="AxisTickStroke" Color="{StaticResource Color_019}"/>-->
  <!--<SolidColorBrush x:Key="AxisMajorStrokeBrush" Color="{StaticResource Color_020}"/>-->
  <!--<SolidColorBrush x:Key="AxisMinorStroke" Color="Transparent"/>-->
  <SolidColorBrush x:Key="AxisLabelsBrush" Color="#FF4E4E4E"/>
  <SolidColorBrush x:Key="AxisTitleBrush" Color="#FF4E4E4E"/>
  <!--<SolidColorBrush x:Key="AxisStrokeBrush" Color="{StaticResource Color_019}"/>-->

  <!-- Legend Brushes -->
  <SolidColorBrush x:Key="LegendBackgroundBrush" Color="Transparent"/>
  <SolidColorBrush x:Key="LegendBorderBrush" Color="Transparent"/>

  <LinearGradientBrush x:Key="LegendScaleFill">
    <GradientStop Color="{StaticResource Color_015}" Offset="0"/>
    <GradientStop Color="{StaticResource Color_016}" Offset="1"/>
  </LinearGradientBrush>
  <SolidColorBrush x:Key="FinancialLegendBackgroundBrush"  Color="{StaticResource Color_024}"/>

   <!-- Tooltip Brushes -->
  <SolidColorBrush x:Key="TooltipBackgroundBrush" Color="{StaticResource Color_017}"/>
  <SolidColorBrush x:Key="TooltipBorderBrush" Color="{StaticResource Color_014}" Opacity="0.7"/>
  <SolidColorBrush x:Key="TooltipPointerBackgroundBrush" Color="{StaticResource Color_017}" Opacity="0.8" />
  <SolidColorBrush x:Key="TooltipLayerBrush" Color="{StaticResource Color_017}"/>
  <SolidColorBrush x:Key="TooltipLayerOutline" Color="{StaticResource Color_014}"/>

  <!-- Selection Brushes -->
  <SolidColorBrush x:Key="SliceSelectedBorderBrush" Color="{StaticResource Color_023}" Opacity="0.2"/>

  <!-- Brushes for Scatter(*)Series  -->
  <SolidColorBrush x:Key="SeriesPolylineStroke" Color="{StaticResource Color_013}" />
  <SolidColorBrush x:Key="SeriesPolygonFill" Color="{StaticResource Color_013}" />
  <SolidColorBrush x:Key="SeriesPolygonStroke" Color="{StaticResource Color_013}" />
  
  <!-- collection of fill brushes for series ******************* -->
  <shared:BrushCollection x:Key="ChartBrushes">
    <SolidColorBrush Color="{StaticResource Color_001}"/>
    <SolidColorBrush Color="{StaticResource Color_002}"/>
    <SolidColorBrush Color="{StaticResource Color_003}"/>
    <SolidColorBrush Color="{StaticResource Color_004}"/>
    <SolidColorBrush Color="{StaticResource Color_005}"/>
    <SolidColorBrush Color="{StaticResource Color_006}"/>
    <SolidColorBrush Color="{StaticResource Color_007}"/>
    <SolidColorBrush Color="{StaticResource Color_008}"/>
    <SolidColorBrush Color="{StaticResource Color_009}"/>
    <SolidColorBrush Color="{StaticResource Color_010}"/>
  </shared:BrushCollection>

  <!-- collection of outlines brushes for series ******************* -->
  <shared:BrushCollection x:Key="ChartOutlines">
    <SolidColorBrush Color="{StaticResource Color_001}"/>
    <SolidColorBrush Color="{StaticResource Color_002}"/>
    <SolidColorBrush Color="{StaticResource Color_003}"/>
    <SolidColorBrush Color="{StaticResource Color_004}"/>
    <SolidColorBrush Color="{StaticResource Color_005}"/>
    <SolidColorBrush Color="{StaticResource Color_006}"/>
    <SolidColorBrush Color="{StaticResource Color_007}"/>
    <SolidColorBrush Color="{StaticResource Color_008}"/>
    <SolidColorBrush Color="{StaticResource Color_009}"/>
    <SolidColorBrush Color="{StaticResource Color_010}"/>
  </shared:BrushCollection>

  <!-- collection of fill brushes for markers ******************* -->
  <shared:BrushCollection x:Key="MarkerBrushes">
    <SolidColorBrush Color="White"/>
  </shared:BrushCollection>

       <!-- collection of outline brushes for markers ******************* -->
  <shared:BrushCollection x:Key="MarkerOutlines">
    <SolidColorBrush Color="{StaticResource Color_001}" />
    <SolidColorBrush Color="{StaticResource Color_002}" />
    <SolidColorBrush Color="{StaticResource Color_003}" />
    <SolidColorBrush Color="{StaticResource Color_004}" />
    <SolidColorBrush Color="{StaticResource Color_005}" />
    <SolidColorBrush Color="{StaticResource Color_006}" />
    <SolidColorBrush Color="{StaticResource Color_007}" />
    <SolidColorBrush Color="{StaticResource Color_008}" />
    <SolidColorBrush Color="{StaticResource Color_009}" />
    <SolidColorBrush Color="{StaticResource Color_010}" />
  </shared:BrushCollection>

  <shared:BrushCollection x:Key="ChartNegativeBrushes">
    <SolidColorBrush Color="{StaticResource Color_012}" /> 
  </shared:BrushCollection>
  
  <!-- ******************* Tooltip variables ******************* -->
  <System:Double x:Key="TooltipBadgeWidth">8</System:Double>
  <Thickness     x:Key="TooltipBorderThickness">1</Thickness>
  <Thickness     x:Key="TooltipContentPadding">8</Thickness>

  <!-- ******************* Crosshair variables ******************* -->
  <Thickness     x:Key="CrosshairTooltipItemPadding">0 4 0 4</Thickness>

  <!-- ******************* Series/Axis Strokes ******************* -->
  <!--<System:Double x:Key="AxisTickStrokeThickness">2</System:Double>-->
  <!--<System:Double x:Key="AxisLineStrokeThickness">2</System:Double>-->
  <!--<System:Double x:Key="AxisMajorStrokeThickness">1</System:Double>-->
  <!--<System:Double x:Key="AxisMinorStrokeThickness">1</System:Double>-->
  <System:Double x:Key="LineSeriesStrokeThickness">2</System:Double>   <!-- not used - see Series.Thickness prop value in code behind -->
  <!--<System:Double x:Key="ColumnSeriesStrokeThickness">1</System:Double>--> <!-- used by column, bar, range column, waterfall series -->
  <System:Double x:Key="FinancialSeriesStrokeThickness">1</System:Double>
  
  <System:Double x:Key="ChartSmallFontSize">11</System:Double>
  <System:Double x:Key="ChartTitleFontSize">16</System:Double>

  <!-- ******************* Financial Legend variables ******************* -->
  <Thickness  x:Key="FinancialLegendMargin">5</Thickness>
  <Thickness  x:Key="FinancialLegendPadding">4 4 4 6</Thickness>
    
  <!-- ******************* Markers and MarkerTemplates *******************-->
  <Style TargetType="local:Marker">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="local:Marker">
          <Grid>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal">
                  <!-- <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="Offset" Storyboard.TargetProperty="X" To="0.0" Duration="0:0:0.5"/>
                                        <DoubleAnimation Storyboard.TargetName="Offset" Storyboard.TargetProperty="Y" To="0.0" Duration="0:0:0.5"/>
                                    </Storyboard> -->
                </VisualState>
                <VisualState x:Name="MouseOver">
                  <!-- <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="Offset" Storyboard.TargetProperty="X" To="-4.0" Duration="0:0:0.2"/>
                                        <DoubleAnimation Storyboard.TargetName="Offset" Storyboard.TargetProperty="Y" To="-4.0" Duration="0:0:0.2"/>
                                    </Storyboard> -->
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>

            <ContentPresenter VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Margin="{TemplateBinding Margin}" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}">
              <ContentPresenter.RenderTransform>
                <TranslateTransform  x:Name="Offset" X="0" Y="0"/>
              </ContentPresenter.RenderTransform>
            </ContentPresenter>
            <!--
                        <Ellipse x:Name="Halo" IsHitTestVisible="False" Opacity="0" Stroke="Transparent" StrokeThickness="1">
                            <Ellipse.Fill>
                                <RadialGradientBrush GradientOrigin="0.5, 0.5" Center="0.5, 0.5" RadiusX="0.5" RadiusY="0.5">
                                    <RadialGradientBrush.GradientStops>
                                        <GradientStop Color="#0098C1DC" Offset="0.0"/>
                                        <GradientStop Color="#2098C1DC" Offset="0.5"/>
                                        <GradientStop Color="#ff98C1DC" Offset="1"/>
                                    </RadialGradientBrush.GradientStops>
                                </RadialGradientBrush>
                            </Ellipse.Fill>
                        </Ellipse>
-->
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!--Replace this template with one that doesn't need minwidth/minheight for scatter-base charts-->
  <!--<DataTemplate x:Key="CircleMarkerTemplate">
        <Ellipse Stretch="Fill" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Fill="{Binding ActualItemBrush}" Stroke="{Binding ActualItemOutline}" StrokeThickness="{Binding Series.MarkerThickness}" MinWidth="10" MinHeight="10"/>
    </DataTemplate>-->

  <!-- ******************* Marker Templates ******************* -->
  <DataTemplate x:Key="CircleMarkerTemplate">
    <Path Stretch="Fill" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" 
          Fill="{Binding ActualItemBrush}" 
          Stroke="{Binding ActualItemOutline}" 
          StrokeThickness="{Binding Series.MarkerThickness}">
      <Path.Data>
        <PathGeometry>
          <PathGeometry.Figures>
            <PathFigure StartPoint="0,0" >
              <PathFigure.Segments>
                <ArcSegment Size="4,4" RotationAngle="0" IsLargeArc="True" SweepDirection="Clockwise" Point="0,1"/>
                <ArcSegment Size="4,4" RotationAngle="0" IsLargeArc="False" SweepDirection="Clockwise" Point="0,0"/>
              </PathFigure.Segments>
            </PathFigure >
          </PathGeometry.Figures>
        </PathGeometry>
      </Path.Data>
    </Path>
  </DataTemplate>

  <DataTemplate x:Key="TriangleMarkerTemplate">
        <Polygon Points="0, 0 4, 8 8, 0" Stretch="Fill" Fill="{Binding ActualItemBrush}" Stroke="{Binding ActualItemOutline}" StrokeThickness="{Binding Series.MarkerThickness}" />
  </DataTemplate>

  <DataTemplate x:Key="PyramidMarkerTemplate">
        <Polygon Points="0, 8 4, 0 8, 8" Stretch="Fill" Fill="{Binding ActualItemBrush}" Stroke="{Binding ActualItemOutline}" StrokeThickness="{Binding Series.MarkerThickness}" />
  </DataTemplate>

  <DataTemplate x:Key="SquareMarkerTemplate">
        <Polygon Points="0 0 0 8 8 8 8 0" Stretch="Fill" Fill="{Binding ActualItemBrush}" Stroke="{Binding ActualItemOutline}" StrokeThickness="{Binding Series.MarkerThickness}"/>
  </DataTemplate>

  <DataTemplate x:Key="DiamondMarkerTemplate">
        <Polygon Points="0 4 4 8 8 4 4 0" Stretch="Fill" Fill="{Binding ActualItemBrush}" Stroke="{Binding ActualItemOutline}" StrokeThickness="{Binding Series.MarkerThickness}" />
  </DataTemplate>

  <DataTemplate x:Key="PentagonMarkerTemplate">
        <Polygon Points="4 0 0.1956 2.764 1.65 7.236 6.35 7.236 7.8044 2.764" Stretch="Fill" Fill="{Binding ActualItemBrush}" Stroke="{Binding ActualItemOutline}" StrokeThickness="{Binding Series.MarkerThickness}"/>
  </DataTemplate>

  <DataTemplate x:Key="HexagonMarkerTemplate">
        <Polygon Points="4 0 0.536 2 0.536 6 4 8 7.464 6 7.464 2" Stretch="Fill" Fill="{Binding ActualItemBrush}" Stroke="{Binding ActualItemOutline}" StrokeThickness="{Binding Series.MarkerThickness}"/>
  </DataTemplate>

  <DataTemplate x:Key="TetragramMarkerTemplate">
        <Polygon Points="4 0 2.5856 2.5856 0 4 2.5856 5.4144 4 8 5.4144 5.4144 8 4 5.4144 2.5856" Stretch="Fill" Fill="{Binding ActualItemBrush}" Stroke="{Binding ActualItemOutline}" StrokeThickness="{Binding Series.MarkerThickness}"/>
  </DataTemplate>

  <DataTemplate x:Key="PentagramMarkerTemplate">
        <Polygon Points="4 0 2.8244 2.382 0.1956 2.764 2.098 4.618 1.6488 7.236 4 6 6.3512 7.236 5.902 4.618 7.8044 2.764 5.1756 2.382" Stretch="Fill" Fill="{Binding ActualItemBrush}" Stroke="{Binding ActualItemOutline}" StrokeThickness="{Binding Series.MarkerThickness}"/>
  </DataTemplate>

  <DataTemplate x:Key="HexagramMarkerTemplate">
        <Polygon Points="4 0 3 2.268 0.536 2 2 4 0.536 6 3 5.732 4 8 5 5.732 7.464 6 6 4 7.464 2 5 2.268" Stretch="Fill"  Fill="{Binding ActualItemBrush}" Stroke="{Binding ActualItemOutline}" StrokeThickness="{Binding Series.MarkerThickness}"/>
  </DataTemplate>

  <!-- ******************* ToolTip Style ******************* -->
  <Style x:Key="ToolTipStyle" TargetType="ContentControl">
    <Setter Property="Background" Value="{StaticResource TooltipBackgroundBrush}"/>
    <Setter Property="BorderBrush" Value="{StaticResource TooltipBorderBrush}"/>
    <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}"/>
    <Setter Property="FontSize" Value="{x:Static shared:FontDefaults.ChartFontSize}"/>
    <Setter Property="FontFamily" Value="{x:Static shared:FontDefaults.ChartFontFamily}"/>
    <Setter Property="Padding" Value="{StaticResource TooltipContentPadding}"/>
    <Setter Property="BorderThickness" Value="{StaticResource TooltipBorderThickness}"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="ContentControl">
          <Grid>
            <Border Background="{TemplateBinding Background}"
                    BorderBrush="{Binding Series.ActualOutline}"
                    BorderThickness="{TemplateBinding BorderThickness}">
              <StackPanel Orientation="Horizontal" Margin="{TemplateBinding Padding}">
                <ContentPresenter Content="{Binding}" ContentTemplate="{Binding Series.ActualLegendItemBadgeTemplate}"/>
                <!--<ContentPresenter Margin="{TemplateBinding Padding}" Content="{TemplateBinding Content}"/>-->
                <!-- NOTE-MT shifted FontFamily/FontSize from ToolTip -->
                <ContentControl Grid.Row="0" FontSize="{TemplateBinding FontSize}" FontFamily="{TemplateBinding FontFamily}" >
                  <ContentControl.Resources>
                    <Style TargetType="ContentControl">
                      <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
                    </Style>
                  </ContentControl.Resources>
                  <ContentPresenter Content="{TemplateBinding Content}"/>
                </ContentControl>
              </StackPanel>
            </Border>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- ******************* PieChartToolTipStyle ******************* -->
  <Style x:Key="PieChartToolTipStyle" TargetType="ContentControl"  >
    <Setter Property="Background" Value="{StaticResource TooltipBackgroundBrush}"/>
    <Setter Property="BorderBrush" Value="{StaticResource TooltipBorderBrush}"/>
    <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}"/>
    <Setter Property="FontSize" Value="{x:Static shared:FontDefaults.ChartFontSize}"/>
    <Setter Property="FontFamily" Value="{x:Static shared:FontDefaults.ChartFontFamily}"/>
    <Setter Property="Padding" Value="{StaticResource TooltipContentPadding}"/>
    <Setter Property="BorderThickness" Value="{StaticResource TooltipBorderThickness}"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="ContentControl">
          <Grid>
            <Border Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}">
              <StackPanel Orientation="Horizontal" Margin="{TemplateBinding Padding}">
                <ContentPresenter Content="{Binding}" ContentTemplate="{Binding Series.LegendItemBadgeTemplate}"/>
                <!--<ContentPresenter Margin="{TemplateBinding Padding}" Content="{TemplateBinding Content}"/>-->
                <!-- NOTE-MT shifted FontFamily/FontSize from ToolTip -->
                <ContentControl Grid.Row="0" FontSize="{TemplateBinding FontSize}" FontFamily="{TemplateBinding FontFamily}" >
                  <ContentControl.Resources>
                    <Style TargetType="ContentControl">
                      <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}"/>
                    </Style>
                  </ContentControl.Resources>
                  <ContentPresenter Content="{TemplateBinding Content}"/>
                </ContentControl>
              </StackPanel>
            </Border>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- ******************* CrosshairTooltipItemTemplate ******************* -->
  <DataTemplate x:Key="CrosshairTooltipItemTemplate">
    <StackPanel Orientation="Horizontal" Margin="{StaticResource CrosshairTooltipItemPadding}">
      <ContentPresenter Content="{Binding ItemContext}" DataContext="{Binding ItemContext}" ContentTemplate="{Binding Series.ActualLegendItemBadgeTemplate}" />
      <!--<ContentPresenter Content="{Binding SubContent}" />-->
      <!-- NOTE-MT shifted FontFamily/FontSize from ToolTip -->
      <ContentControl Grid.Row="0" FontSize="{x:Static shared:FontDefaults.ChartFontSize}" FontFamily="{x:Static shared:FontDefaults.ChartFontFamily}">
        <ContentControl.Resources>
          <Style TargetType="ContentControl">
            <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
          </Style>
        </ContentControl.Resources>
        <ContentPresenter Content="{Binding SubContent}" />
      </ContentControl>
    </StackPanel>
  </DataTemplate>

  <!-- ******************* ToolTipStyle NoBadge ******************* -->
  <Style x:Key="ToolTipNoBadgeStyle" TargetType="ContentControl">
    <Setter Property="Background" Value="{StaticResource TooltipBackgroundBrush}" />
    <Setter Property="BorderBrush" Value="{StaticResource TooltipBorderBrush}" />
    <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
    <Setter Property="FontSize" Value="{x:Static shared:FontDefaults.ChartFontSize}"/>
    <Setter Property="FontFamily" Value="{x:Static shared:FontDefaults.ChartFontFamily}"/>
    <Setter Property="Padding" Value="{StaticResource TooltipContentPadding}"/>
    <Setter Property="BorderThickness" Value="{StaticResource TooltipBorderThickness}"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="ContentControl">
          <Border BorderBrush="{TemplateBinding BorderBrush}"
                  Background="{TemplateBinding Background}"
                  BorderThickness="{TemplateBinding BorderThickness}">
            <StackPanel Orientation="Horizontal" Margin="{TemplateBinding Padding}">
              <!--<ContentPresenter Margin="{TemplateBinding Padding}" Content="{TemplateBinding Content}"/>-->
              <!-- NOTE-MT shifted FontFamily/FontSize from ToolTip -->
              <ContentControl Grid.Row="0" FontSize="{TemplateBinding FontSize}" FontFamily="{TemplateBinding FontFamily}">
                <ContentControl.Resources>
                  <Style TargetType="ContentControl">
                    <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
                  </Style>
                </ContentControl.Resources>
                <ContentPresenter Content="{TemplateBinding Content}"/>
              </ContentControl>
            </StackPanel>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  
  <!-- ******************* Legend Style ******************* -->
    <Style TargetType="local:XamDataLegend">
        <Setter Property="Background" Value="{StaticResource LegendBackgroundBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource LegendBorderBrush}"/>
        <Setter Property="BorderThickness" Value="{StaticResource LegendBorderThickness}"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:XamDataLegend">
                    <Grid HorizontalAlignment="{TemplateBinding HorizontalAlignment}">
                        <Border BorderThickness="{TemplateBinding BorderThickness}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                Background="{TemplateBinding Background}" 
                                HorizontalAlignment="Stretch" VerticalAlignment="Stretch" >
                            <Canvas x:Name="PART_CONTENT" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                            </Canvas>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style TargetType="local:Legend">
    <Setter Property="Background" Value="{StaticResource LegendBackgroundBrush}"/>
    <Setter Property="BorderBrush" Value="{StaticResource LegendBorderBrush}"/>
    <Setter Property="BorderThickness" Value="{StaticResource LegendBorderThickness}"/>
    <Setter Property="Orientation" Value="Vertical"/>
    <Setter Property="Padding" Value="{StaticResource LegendPadding}"/>
    <Setter Property="Margin" Value="{StaticResource LegendMargin}"/>
    <Setter Property="HorizontalAlignment" Value="Right"/>
    <Setter Property="VerticalAlignment" Value="Top"/>
    <!--legend items' properties-->
    <Setter Property="ItemsForeground" Value="{StaticResource LegendForegroundBrush}"/>
    <Setter Property="ItemsFontFamily" Value="{x:Static shared:FontDefaults.ChartFontFamily}"/>
    <Setter Property="ItemsFontStretch" Value="{x:Static shared:FontDefaults.ChartFontStretch}"/>
    <Setter Property="ItemsFontStyle" Value="{x:Static shared:FontDefaults.ChartFontStyle}"/>
    <Setter Property="ItemsFontWeight" Value="{x:Static shared:FontDefaults.ChartFontWeight}"/>
    <Setter Property="ItemsFontSize" Value="{x:Static shared:FontDefaults.ChartFontSize}"/>
    <Setter Property="ItemsHorizontalAlignment" Value="Left"/>
    <Setter Property="ItemsVerticalAlignment" Value="Top"/>
    <!--legend title properties-->
    <Setter Property="TitleForeground" Value="{StaticResource LegendForegroundBrush}"/>
    <Setter Property="TitleFontFamily" Value="{x:Static shared:FontDefaults.ChartFontFamily}"/>
    <Setter Property="TitleFontStretch" Value="{x:Static shared:FontDefaults.ChartFontStretch}"/>
    <Setter Property="TitleFontStyle" Value="{x:Static shared:FontDefaults.ChartFontStyle}"/>
    <Setter Property="TitleFontWeight" Value="{x:Static shared:FontDefaults.ChartFontWeight}"/>
    <Setter Property="TitleFontSize" Value="{x:Static shared:FontDefaults.ChartTitleFontSize}"/>
    <Setter Property="TitleHorizontalAlignment" Value="Left"/>
    <Setter Property="TitleVerticalAlignment" Value="Top"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="local:Legend">
          <Grid HorizontalAlignment="{TemplateBinding HorizontalAlignment}">
            <Border BorderThickness="{TemplateBinding BorderThickness}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    Background="{TemplateBinding Background}">
              <Grid Margin="{TemplateBinding Padding}">
                <Grid.RowDefinitions>
                  <RowDefinition Height="auto"/>
                  <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <Rectangle Fill="Transparent" Grid.RowSpan="2"/>
                <ContentControl Grid.Row="0"
                                HorizontalAlignment="{TemplateBinding TitleHorizontalAlignment}"
                                VerticalAlignment="{TemplateBinding TitleVerticalAlignment}"
                                Foreground="{TemplateBinding TitleForeground}"
                                FontStretch="{TemplateBinding TitleFontStretch}"
                                FontStyle="{TemplateBinding TitleFontStyle}"
                                FontWeight="{TemplateBinding TitleFontWeight}"
                                FontSize="{TemplateBinding TitleFontSize}"
                                FontFamily="{TemplateBinding TitleFontFamily}">
                  <ContentPresenter Content="{TemplateBinding Content}" />
                </ContentControl>
                <!--NOTE that ItemsFont* and ItemsForeground properties are set in LegendItemTemplates -->
                <ScrollViewer Grid.Row="1" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto"
                              BorderThickness="0" Background="Transparent"
                              HorizontalAlignment="{TemplateBinding ItemsHorizontalAlignment}"
                              VerticalAlignment="{TemplateBinding ItemsVerticalAlignment}" >
                  <ContentPresenter x:Name="ContentPresenter" />
                </ScrollViewer>
              </Grid>
            </Border>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- ******************* ItemLegend style ******************* -->
  <Style TargetType="local:ItemLegend">
    <Setter Property="Background" Value="{StaticResource LegendBackgroundBrush}"/>
    <Setter Property="BorderBrush" Value="{StaticResource LegendBorderBrush}"/>
    <Setter Property="BorderThickness" Value="{StaticResource LegendBorderThickness}"/>
    <Setter Property="Padding" Value="{StaticResource LegendPadding}"/>
    <Setter Property="Margin" Value="{StaticResource LegendMargin}"/>
    <Setter Property="HorizontalAlignment" Value="Right"/>
    <Setter Property="VerticalAlignment" Value="Top"/>
    <!--legend items' properties-->
    <Setter Property="ItemsForeground" Value="{StaticResource ForegroundBrush}"/>
    <Setter Property="ItemsFontFamily" Value="{x:Static shared:FontDefaults.ChartFontFamily}"/>
    <Setter Property="ItemsFontStretch" Value="{x:Static shared:FontDefaults.ChartFontStretch}"/>
    <Setter Property="ItemsFontStyle" Value="{x:Static shared:FontDefaults.ChartFontStyle}"/>
    <Setter Property="ItemsFontWeight" Value="{x:Static shared:FontDefaults.ChartFontWeight}"/>
    <Setter Property="ItemsFontSize" Value="{x:Static shared:FontDefaults.ChartFontSize}"/>
    <Setter Property="ItemsHorizontalAlignment" Value="Left"/>
    <Setter Property="ItemsVerticalAlignment" Value="Top"/>
    <!--legend title properties-->
    <Setter Property="TitleForeground" Value="{StaticResource ForegroundBrush}"/>
    <Setter Property="TitleFontFamily" Value="{x:Static shared:FontDefaults.ChartFontFamily}"/>
    <Setter Property="TitleFontStretch" Value="{x:Static shared:FontDefaults.ChartFontStretch}"/>
    <Setter Property="TitleFontStyle" Value="{x:Static shared:FontDefaults.ChartFontStyle}"/>
    <Setter Property="TitleFontWeight" Value="{x:Static shared:FontDefaults.ChartFontWeight}"/>
    <Setter Property="TitleFontSize" Value="{x:Static shared:FontDefaults.ChartFontSize}"/>
    <Setter Property="TitleHorizontalAlignment" Value="Left"/>
    <Setter Property="TitleVerticalAlignment" Value="Top"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="local:ItemLegend">
          <Grid>
            <Border BorderThickness="{TemplateBinding BorderThickness}" 
                    BorderBrush="{TemplateBinding BorderBrush}"  
                    Background="{TemplateBinding Background}">
              <Grid Margin="{TemplateBinding Padding}">
                <Grid.RowDefinitions>
                  <RowDefinition Height="auto"/>
                  <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <Rectangle Fill="Transparent" Grid.RowSpan="2"/>
                <ContentControl Grid.Row="0"
                                Foreground="{TemplateBinding TitleForeground}"
                                HorizontalAlignment="{TemplateBinding TitleHorizontalAlignment}"
                                VerticalAlignment="{TemplateBinding TitleVerticalAlignment}"
                                FontStretch="{TemplateBinding TitleFontStretch}"
                                FontStyle="{TemplateBinding TitleFontStyle}"
                                FontWeight="{TemplateBinding TitleFontWeight}"
                                FontSize="{TemplateBinding TitleFontSize}"
                                FontFamily="{TemplateBinding TitleFontFamily}" >
                  <ContentPresenter Grid.Row="0" Content="{TemplateBinding Content}"/>
                </ContentControl>
                <!--NOTE that ItemsFont* and ItemsForeground properties are set in LegendItemTemplates -->
                <ScrollViewer Grid.Row="1" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto"
                              BorderThickness="0" Background="Transparent"
                              HorizontalAlignment="{TemplateBinding ItemsHorizontalAlignment}"
                              VerticalAlignment="{TemplateBinding ItemsVerticalAlignment}">
                  <ContentPresenter x:Name="ContentPresenter" />
                </ScrollViewer>
              </Grid>
            </Border>
            <!--<Border IsHitTestVisible="False" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="Transparent" Background="Transparent" />-->
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- ******************* ScaleLegend style ******************* -->
  <Style TargetType="local:ScaleLegend">
    <Setter Property="Background" Value="{StaticResource LegendBackgroundBrush}"/>
    <Setter Property="BorderBrush" Value="{StaticResource LegendBorderBrush}"/>
    <Setter Property="BorderThickness" Value="{StaticResource LegendBorderThickness}"/>
    <Setter Property="Padding" Value="{StaticResource LegendPadding}"/>
    <Setter Property="Margin" Value="{StaticResource LegendMargin}"/>
    <Setter Property="MinHeight" Value="150"/>
    <Setter Property="HorizontalAlignment" Value="Right"/>
    <Setter Property="VerticalAlignment" Value="Top"/>
    <!--legend items' properties-->
    <Setter Property="ItemsForeground" Value="{StaticResource ForegroundBrush}"/>
    <Setter Property="ItemsFontFamily" Value="{x:Static shared:FontDefaults.ChartFontFamily}"/>
    <Setter Property="ItemsFontStretch" Value="{x:Static shared:FontDefaults.ChartFontStretch}"/>
    <Setter Property="ItemsFontStyle" Value="{x:Static shared:FontDefaults.ChartFontStyle}"/>
    <Setter Property="ItemsFontWeight" Value="{x:Static shared:FontDefaults.ChartFontWeight}"/>
    <Setter Property="ItemsFontSize" Value="{x:Static shared:FontDefaults.ChartFontSize}"/>
    <Setter Property="ItemsHorizontalAlignment" Value="Stretch"/>
    <Setter Property="ItemsVerticalAlignment" Value="Stretch"/>
    <!--legend title properties-->
    <Setter Property="TitleForeground" Value="{StaticResource ForegroundBrush}"/>
    <Setter Property="TitleFontFamily" Value="{x:Static shared:FontDefaults.ChartFontFamily}"/>
    <Setter Property="TitleFontStretch" Value="{x:Static shared:FontDefaults.ChartFontStretch}"/>
    <Setter Property="TitleFontStyle" Value="{x:Static shared:FontDefaults.ChartFontStyle}"/>
    <Setter Property="TitleFontWeight" Value="{x:Static shared:FontDefaults.ChartFontWeight}"/>
    <Setter Property="TitleFontSize" Value="{x:Static shared:FontDefaults.ChartFontSize}"/>
    <Setter Property="TitleHorizontalAlignment" Value="Stretch"/>
    <Setter Property="TitleVerticalAlignment" Value="Top"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="local:ScaleLegend">
          <Grid>
            <Border BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}"  Background="{TemplateBinding Background}">
              <Grid Margin="{TemplateBinding Padding}">
                <Grid.RowDefinitions>
                  <RowDefinition Height="auto"/>
                  <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <Rectangle Fill="Transparent" Grid.RowSpan="2"/>
                <ContentControl Grid.Row="0"
                                HorizontalAlignment="{TemplateBinding TitleHorizontalAlignment}"
                                VerticalAlignment="{TemplateBinding TitleVerticalAlignment}"
                                Foreground="{TemplateBinding TitleForeground}"
                                FontStretch="{TemplateBinding TitleFontStretch}"
                                FontStyle="{TemplateBinding TitleFontStyle}"
                                FontWeight="{TemplateBinding TitleFontWeight}"
                                FontSize="{TemplateBinding TitleFontSize}"
                                FontFamily="{TemplateBinding TitleFontFamily}" >
                  <ContentPresenter Grid.Row="0" Content="{TemplateBinding Content}"/>
                </ContentControl>
                <ScrollViewer Grid.Row="1" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto" BorderThickness="0"
                              HorizontalAlignment="{TemplateBinding ItemsHorizontalAlignment}"
                              VerticalAlignment="{TemplateBinding ItemsVerticalAlignment}"
                              Foreground="{TemplateBinding ItemsForeground}"
                              FontStretch="{TemplateBinding ItemsFontStretch}"
                              FontStyle="{TemplateBinding ItemsFontStyle}"
                              FontWeight="{TemplateBinding ItemsFontWeight}"
                              FontSize="{TemplateBinding ItemsFontSize}"
                              FontFamily="{TemplateBinding ItemsFontFamily}">
                  <ContentPresenter Grid.Row="1" x:Name="ContentPresenter">
                    <ContentPresenter.Content>
                      <Grid>
                        <Grid.ColumnDefinitions>
                          <ColumnDefinition Width="*" />
                          <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Polygon x:Name="LegendScale" Points="3 0, 5 0, 5 1, 0 1, 3 0" Stretch="Fill"
                                 Grid.Column="0" Margin="2,2,5,2"
                                 Fill="{StaticResource LegendScaleFill}"/>
                        <TextBlock x:Name="MinText" Text="Min" Grid.Column="1" VerticalAlignment="Top"/>
                        <TextBlock x:Name="MaxText" Text="Max" Grid.Column="1" VerticalAlignment="Bottom"/>
                      </Grid>
                    </ContentPresenter.Content>
                  </ContentPresenter>
                </ScrollViewer>
              </Grid>
            </Border>
            <!--<Border IsHitTestVisible="False" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="Transparent" Background="Transparent"/>-->
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!--
    <DataTemplate x:Key="LegendItemColorTemplate">
        <local:ColorScaleLegendItem Width="100"
                                    Height="50"
                                    Scale="{Binding Series.Scale}" />
    </DataTemplate>

    <Style TargetType="local:ColorScaleLegendItem" >
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:ColorScaleLegendItem">
                    <Border Background="{TemplateBinding Background}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            BorderBrush="{TemplateBinding BorderBrush}">
                        <ContentPresenter x:Name="ContentPresenter" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>    -->

  <!-- ******************* Legend Item Templates *******************-->

  <!-- Basic LegendItemTemplate - used by BasicLegend with all series except Bubble Series-->
  <DataTemplate x:Key="LegendItemTemplate">
    <Grid>
      <StackPanel Orientation="Horizontal" Margin="{StaticResource LegendItemMargin}">
        <StackPanel.Style>
          <Style TargetType="StackPanel">
            <Style.Triggers>
              <DataTrigger Binding="{Binding Visibility, ElementName=financialLegendContent}" Value="Visible">
                <Setter Property="Visibility" Value="Collapsed" />
              </DataTrigger>
              <DataTrigger Binding="{Binding Series.Visibility}" Value="Collapsed">
                <Setter Property="Visibility" Value="Collapsed" />
              </DataTrigger>
            </Style.Triggers>
          </Style>
        </StackPanel.Style>
        <ContentPresenter Content="{Binding}" 
                          ContentTemplate="{Binding Series.ActualLegendItemBadgeTemplate}" 
                          Margin="{StaticResource LegendItemBadgeMargin}"/>
        <ContentControl Foreground="{Binding Series.ActualLegend.ItemsForeground}"
                        FontStretch="{Binding Series.ActualLegend.ItemsFontStretch}"
                        FontStyle="{Binding Series.ActualLegend.ItemsFontStyle}"
                        FontWeight="{Binding Series.ActualLegend.ItemsFontWeight}"
                        FontSize="{Binding Series.ActualLegend.ItemsFontSize}"
                        FontFamily="{Binding Series.ActualLegend.ItemsFontFamily}">
          <ContentPresenter Content="{Binding Series.Title, TargetNullValue=Series Title}" />
        </ContentControl>
      </StackPanel>
      <ContentControl x:Name="financialLegendContent"
                      Foreground="{Binding Series.ActualLegend.ItemsForeground}"
                      FontStretch="{Binding Series.ActualLegend.ItemsFontStretch}"
                      FontStyle="{Binding Series.ActualLegend.ItemsFontStyle}"
                      FontWeight="{Binding Series.ActualLegend.ItemsFontWeight}"
                      FontSize="{Binding Series.ActualLegend.ItemsFontSize}"
                      FontFamily="{x:Static shared:FontDefaults.ChartFontFamily}">
            <ContentControl.Style>
            <Style TargetType="ContentControl">
              <Style.Triggers>
                <!--MT: Fixed binding issue with using FindAncestor when FinancialLegend is not in visual tree: --> 
                <!--Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=local:FinancialLegend}}"-->
                <DataTrigger Binding="{Binding Series.IsActualLegendFinancial}" Value="False">
                  <Setter Property="Visibility" Value="Collapsed" />
                </DataTrigger>
              <DataTrigger Binding="{Binding Series.Visibility}" Value="Collapsed">
                <Setter Property="Visibility" Value="Collapsed" />
              </DataTrigger>
            </Style.Triggers>
            </Style>
          </ContentControl.Style>
          <Border Background="{StaticResource FinancialLegendBackgroundBrush}" Padding="{StaticResource FinancialLegendPadding}" Margin="{StaticResource FinancialLegendMargin}">
          <StackPanel Orientation="Horizontal">
            <StackPanel.Resources>
              <local:IsInstanceOfTypeConverter x:Key="isInstanceOfType" />
            </StackPanel.Resources>
            <ContentPresenter Content="{Binding}" ContentTemplate="{Binding Series.ActualLegendItemBadgeTemplate}" Margin="{StaticResource LegendItemBadgeMargin}"/>
            <ContentPresenter Content="{Binding Series.Title, TargetNullValue=Series Title}" />
            <TextBlock Text=": " Visibility="{Binding Visibility, ElementName=finalValue}" />
            <TextBlock x:Name="finalValue" FontWeight="{x:Static shared:FontDefaults.ChartTitleFontWeight}" Text="{Binding Series.FinalValue, StringFormat={}{0:0.00}}">
              <TextBlock.Style>
                <Style TargetType="TextBlock">
                  <Style.Triggers>
                    <Trigger Property="Text" Value="NaN">
                      <Setter Property="Visibility" Value="Collapsed" />
                    </Trigger>
                    <DataTrigger Binding="{Binding Series, Converter={StaticResource isInstanceOfType}, ConverterParameter={x:Type local:FinancialOverlay}}" Value="True">
                      <Setter Property="Visibility" Value="Collapsed" />
                    </DataTrigger>
                  </Style.Triggers>
                </Style>
              </TextBlock.Style>
            </TextBlock>
            <TextBlock Text="{Binding Series.PercentChange, StringFormat=' ({0:0.00}%)'}">
              <TextBlock.Style>
                <Style TargetType="TextBlock">
                  <Style.Triggers>
                    <Trigger Property="Text" Value=" (NaN%)">
                      <Setter Property="Visibility" Value="Collapsed" />
                    </Trigger>
                    <DataTrigger Binding="{Binding Series, Converter={StaticResource isInstanceOfType}, ConverterParameter={x:Type local:FinancialOverlay}}" Value="True">
                      <Setter Property="Visibility" Value="Collapsed" />
                    </DataTrigger>
                  </Style.Triggers>
                </Style>
              </TextBlock.Style>
            </TextBlock>
          </StackPanel>
        </Border>
        </ContentControl>
    </Grid>
  </DataTemplate>

  <!-- Overlay LegendItemTemplate - used by BasicLegend with overlay Series-->
  <DataTemplate x:Key="OverlayLegendItemTemplate">
      <StackPanel Orientation="Horizontal" Margin="{StaticResource LegendItemMargin}" Visibility="{Binding Series.Visibility}">
      <ContentPresenter Content="{Binding}" ContentTemplate="{Binding Series.ActualLegendItemBadgeTemplate}" />
      <ContentControl Foreground="{Binding Series.ActualLegend.ItemsForeground}"
                      FontStretch="{Binding Series.ActualLegend.ItemsFontStretch}"
                      FontStyle="{Binding Series.ActualLegend.ItemsFontStyle}"
                      FontWeight="{Binding Series.ActualLegend.ItemsFontWeight}"
                      FontSize="{Binding Series.ActualLegend.ItemsFontSize}"
                      FontFamily="{Binding Series.ActualLegend.ItemsFontFamily}">
        <ContentPresenter Content="{Binding Series.Title, TargetNullValue=Overlay Title}"/>
      </ContentControl>
    </StackPanel>
  </DataTemplate>

  <!-- Discrete LegendItemTemplate - used by ItemLegend with Bubble Series-->
  <DataTemplate x:Key="DiscreteLegendItemTemplate">
    <StackPanel Orientation="Horizontal" Margin="{StaticResource LegendItemMargin}" Visibility="{Binding Series.Visibility}">
      <ContentPresenter Content="{Binding}" 
                        ContentTemplate="{Binding Series.ActualLegendItemBadgeTemplate}"
                        Margin="{StaticResource LegendItemBadgeMargin}"/>
      <ContentControl Foreground="{Binding Series.ActualLegend.ItemsForeground}"
                      FontStretch="{Binding Series.ActualLegend.ItemsFontStretch}"
                      FontStyle="{Binding Series.ActualLegend.ItemsFontStyle}"
                      FontWeight="{Binding Series.ActualLegend.ItemsFontWeight}"
                      FontSize="{Binding Series.ActualLegend.ItemsFontSize}"
                      FontFamily="{Binding Series.ActualLegend.ItemsFontFamily}">
        <ContentPresenter Content="{Binding ItemLabel, TargetNullValue=Series Item}"/>
      </ContentControl>
    </StackPanel>
  </DataTemplate>

  <!-- FunnelChart's LegendItemTemplate - used by ItemLegend with XamFunnelChart -->
  <DataTemplate x:Key="FunnelChartLegendItemTemplate">
    <StackPanel Orientation="Horizontal" Margin="{StaticResource LegendItemMargin}" Visibility="{Binding Series.Visibility}">
      <ContentPresenter Content="{Binding}" 
                        ContentTemplate="{Binding Series.LegendItemBadgeTemplate}"
                        Margin="{StaticResource LegendItemBadgeMargin}" />
      <ContentControl Foreground="{Binding Series.Legend.ItemsForeground}"
                      FontStretch="{Binding Series.Legend.ItemsFontStretch}"
                      FontStyle="{Binding Series.Legend.ItemsFontStyle}"
                      FontWeight="{Binding Series.Legend.ItemsFontWeight}"
                      FontSize="{Binding Series.Legend.ItemsFontSize}"
                      FontFamily="{Binding Series.Legend.ItemsFontFamily}">
        <ContentPresenter Content="{Binding ItemLabel, TargetNullValue=Series Item}"/>
      </ContentControl>
    </StackPanel>
  </DataTemplate>

  <!-- PieChart LegendItemTemplate - used by ItemLegend with XamPieChart and XamDoughnutChart's ring series -->
  <DataTemplate x:Key="PieLegendItemTemplate">
    <StackPanel Orientation="Horizontal" Margin="{StaticResource LegendItemMargin}" Visibility="{Binding Series.Visibility}">
      <ContentPresenter Content="{Binding}" 
                        ContentTemplate="{Binding Series.LegendItemBadgeTemplate}"
                        Margin="{StaticResource LegendItemBadgeMargin}"/>
      <ContentControl Foreground="{Binding Series.Legend.ItemsForeground}"
                      FontStretch="{Binding Series.Legend.ItemsFontStretch}"
                      FontStyle="{Binding Series.Legend.ItemsFontStyle}"
                      FontWeight="{Binding Series.Legend.ItemsFontWeight}"
                      FontSize="{Binding Series.Legend.ItemsFontSize}"
                      FontFamily="{Binding Series.Legend.ItemsFontFamily}">
        <ContentPresenter Content="{Binding LegendLabel, TargetNullValue=Pie Item}"/>
      </ContentControl>
    </StackPanel>
  </DataTemplate>

  
  <!-- ******************* Chart preview path style ******************* -->
  <Style x:Key="PreviewPathStyle" TargetType="Path">
    <Setter Property="Fill" Value="{StaticResource PreviewPathBrush}"/>
    <Setter Property="Opacity" Value="0.4"/>
  </Style>

  <!-- ******************* Chart crosshair line style ******************* -->
  <Style x:Key="CrosshairLineStyle" TargetType="Line">
    <Setter Property="Stroke"          Value="{x:Static local:Defaults.CrosshairLineBrush}"/>
    <Setter Property="StrokeThickness" Value="{x:Static local:Defaults.CrosshairLineThickness}"/>
    <Setter Property="shared:SafeSetters.Setters">
      <Setter.Value>
        <shared:SafeSetterCollection>
          <shared:SafeSetter PropertyName="Effect">
            <shared:SafeSetter.ValueAsXamlString>
              &lt;DropShadowEffect xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" Opacity="0.3"/&gt;
            </shared:SafeSetter.ValueAsXamlString>
          </shared:SafeSetter>
        </shared:SafeSetterCollection>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- ******************* Chart style ******************* -->
  <ig:SRProvider x:Key="Strings" />
  <Style TargetType="local:XamDataChart" >
    <Setter Property="Background" Value="{StaticResource ChartBackgroundBrush}"/>
    <Setter Property="TitleForeground" Value="{StaticResource AxisTitleBrush}" />
    <Setter Property="TitleFontSize" Value="{StaticResource ChartTitleFontSize}" />
    <Setter Property="TitleFontStyle" Value="{x:Static shared:FontDefaults.ChartFontStyle}" />
    <Setter Property="TitleFontFamily" Value="{x:Static shared:FontDefaults.ChartFontFamily}" />
    <Setter Property="TitleHorizontalAlignment" Value="Center" />
    <Setter Property="TitleMargin" Value="0 0 0 5" />
    <Setter Property="SubtitleForeground" Value="{StaticResource AxisTitleBrush}" />
    <Setter Property="SubtitleFontSize" Value="{StaticResource ChartSmallFontSize}" />
    <Setter Property="SubtitleFontStyle" Value="{x:Static shared:FontDefaults.ChartFontStyle}" />
    <Setter Property="SubtitleFontFamily" Value="{x:Static shared:FontDefaults.ChartFontFamily}"/>
    <Setter Property="SubtitleHorizontalAlignment" Value="Center" />
    <Setter Property="SubtitleMargin" Value="0 0 0 5" />
    <Setter Property="Brushes" Value="{StaticResource ChartBrushes}"/>
    <Setter Property="MarkerBrushes" Value="{StaticResource MarkerBrushes}"/>
    <Setter Property="Outlines" Value="{StaticResource ChartOutlines}"/>
    <Setter Property="MarkerOutlines" Value="{StaticResource MarkerOutlines}" />
    <Setter Property="CircleMarkerTemplate" Value="{StaticResource CircleMarkerTemplate}"/>
    <Setter Property="TriangleMarkerTemplate" Value="{StaticResource TriangleMarkerTemplate}"/>
    <Setter Property="PyramidMarkerTemplate" Value="{StaticResource PyramidMarkerTemplate}"/>
    <Setter Property="SquareMarkerTemplate" Value="{StaticResource SquareMarkerTemplate}"/>
    <Setter Property="DiamondMarkerTemplate" Value="{StaticResource DiamondMarkerTemplate}"/>
    <Setter Property="PentagonMarkerTemplate" Value="{StaticResource PentagonMarkerTemplate}"/>
    <Setter Property="HexagonMarkerTemplate" Value="{StaticResource HexagonMarkerTemplate}"/>
    <Setter Property="TetragramMarkerTemplate" Value="{StaticResource TetragramMarkerTemplate}"/>
    <Setter Property="PentagramMarkerTemplate" Value="{StaticResource PentagramMarkerTemplate}"/>
    <Setter Property="HexagramMarkerTemplate" Value="{StaticResource HexagramMarkerTemplate}"/>
    <Setter Property="Margin" Value="2"/>
    <Setter Property="PlotAreaMinWidth" Value="50"/>
    <Setter Property="PlotAreaMinHeight" Value="50"/>
    <Setter Property="Padding" Value="2"/>
    <Setter Property="PlotAreaBackground" Value="{StaticResource PlotAreaBackgroundBrush}" />
    <Setter Property="DefaultPlotAreaBorderBrush" Value="{StaticResource PlotAreaBorderBrush}"/>
    <Setter Property="DefaultPlotAreaBorderBrush" Value="{StaticResource PlotAreaBorderBrush}"/>
    <Setter Property="PlotAreaBorderBrush" Value="{x:Null}"/>
    <Setter Property="PlotAreaBorderThickness" Value="0"/>
    <Setter Property="PreviewPathStyle" Value="{StaticResource PreviewPathStyle}"/>
    <Setter Property="CrosshairLineStyle" Value="{StaticResource CrosshairLineStyle}"/>
    <Setter Property="CrosshairVisibility" Value="Collapsed" />
    <Setter Property="ToolTipStyle" Value="{StaticResource ToolTipStyle}"/>
    <Setter Property="CrosshairTooltipStyle" Value="{StaticResource ToolTipNoBadgeStyle}" />
    <Setter Property="CrosshairTooltipItemTemplate" Value="{StaticResource CrosshairTooltipItemTemplate}" />
    <Setter Property="DefaultAxisStroke"      Value="{x:Static local:AxisDefaults.Axis_LineBrush}"/>
    <Setter Property="DefaultAxisMajorStroke" Value="{x:Static local:AxisDefaults.Axis_MajorBrush}"/>
    <Setter Property="DefaultAxisMinorStroke" Value="{x:Static local:AxisDefaults.Axis_MinorBrush}"/>
    <Setter Property="OverviewPlusDetailPaneStyle">
      <Setter.Value>
        <Style TargetType="ig:XamOverviewPlusDetailPane">
          <Setter Property="ZoomTo100ButtonVisibility" Value="Collapsed" />
          <Setter Property="InteractionStatesToolVisibility" Value="Visible" />
          <Setter Property="ScaleToFitButtonToolTip" Value="{Binding OPD_ScaleToFit_SeriesViewer, Source={StaticResource Strings}}" />
          <Setter Property="ZoomLevelLargeChange" Value="0.2" />
        </Style>
      </Setter.Value>
    </Setter>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="local:XamDataChart">
          <Grid x:Name="RootLayout" UseLayoutRounding="False">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="MouseStates">
                <VisualState x:Name="Idle"/>
                <VisualState x:Name="Dragging"/>
                <VisualState x:Name="Panning"/>
                <VisualState x:Name="Inking"/>
                <VisualState x:Name="Erasing"/>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>

            <Border BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}"  Background="{TemplateBinding Background}">
              <Grid Margin="2" >
                <ContentPresenter x:Name="ContentPresenter" Margin="{TemplateBinding Padding}" />
                <Rectangle x:Name="Overlay" IsHitTestVisible="False">
                  <Rectangle.Fill>
                    <ImageBrush/>
                  </Rectangle.Fill>
                </Rectangle>
              </Grid>
            </Border>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- ******************* AXIS ******************* -->
  <Style TargetType="local:Axis" x:Key="Axis">
    <Setter Property="TickLength"          Value="{x:Static local:AxisDefaults.Axis_TickLength}"/>
    <Setter Property="TickStrokeThickness" Value="{x:Static local:AxisDefaults.Axis_TickStroke}" />
    <Setter Property="TickStroke"          Value="{x:Static local:AxisDefaults.Axis_TickBrush}"/>
    <Setter Property="Stroke" Value="{x:Null}" />
    <Setter Property="StrokeThickness" Value="{x:Static local:AxisDefaults.Axis_LineStroke}"/>
    <!-- <Setter Property="StrokeDashArray" Value="1 2 3 4"/> -->
    <!-- <Setter Property="Strip" Value="#2080ff80"/> -->
    <Setter Property="MajorStroke" Value="{x:Null}" />
    <Setter Property="MajorStrokeThickness" Value="{x:Static local:AxisDefaults.Axis_MajorStroke}" />
    <!-- <Setter Property="MajorStrokeDashArray" Value="1 2 3 4"/> -->
    <!-- <Setter Property="MinorStroke" Value="#80604000" /> -->
    <Setter Property="MinorStrokeThickness" Value="{x:Static local:AxisDefaults.Axis_MinorStroke}" />
    <!-- <Setter Property="MinorStrokeDashArray" Value="1 2 3 4"/> -->
    <Setter Property="IsInverted" Value="False" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="local:Axis">
          <Canvas x:Name="RootCanvas"/>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!--style shared between all x-axes-->
  <Style TargetType="local:Axis" x:Key="XAxis" BasedOn="{StaticResource Axis}">
    <Setter Property="LabelSettings">
      <Setter.Value>
        <local:AxisLabelSettings FontSize="{x:Static shared:FontDefaults.ChartFontSize}" 
                                 FontFamily="{x:Static shared:FontDefaults.ChartFontFamily}" 
                                 Margin="{x:Static shared:FontDefaults.ChartXAxisLabelsMargin}" 
                                 Foreground="{StaticResource AxisLabelsBrush}" 
                                 Location="OutsideBottom" />
      </Setter.Value>
    </Setter>
    <Setter Property="TitleSettings">
      <Setter.Value>
        <local:TitleSettings FontSize="{x:Static shared:FontDefaults.ChartFontSize}" FontFamily="{x:Static shared:FontDefaults.ChartFontFamily}" Angle="0" Foreground="{StaticResource AxisTitleBrush}" Position="Auto"/>
      </Setter.Value>
    </Setter>
  </Style>

  <!--style shared between all y-axes-->
  <Style TargetType="local:Axis" x:Key="YAxis" BasedOn="{StaticResource Axis}">
    <Setter Property="LabelSettings">
      <Setter.Value>
        <local:AxisLabelSettings FontSize="{x:Static shared:FontDefaults.ChartFontSize}" 
                                 FontFamily="{x:Static shared:FontDefaults.ChartFontFamily}" 
                                 Margin="{x:Static shared:FontDefaults.ChartYAxisLabelsMargin}" 
                                 Foreground="{StaticResource AxisLabelsBrush}" 
                                 Location="OutsideLeft" />
      </Setter.Value>
    </Setter>
    <Setter Property="TitleSettings">
      <Setter.Value>
        <local:TitleSettings FontSize="{x:Static shared:FontDefaults.ChartFontSize}" FontFamily="{x:Static shared:FontDefaults.ChartFontFamily}" Angle="-90" Foreground="{StaticResource AxisTitleBrush}" Position="Auto"/>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- ******************* Category Axis ******************* -->
  <Style TargetType="local:CategoryYAxis" BasedOn="{StaticResource YAxis}">
    <Setter Property="TickLength" Value="{x:Static local:AxisDefaults.CategoryAxis_TickLength}"/>
  </Style>

  <Style TargetType="local:CategoryXAxis" BasedOn="{StaticResource XAxis}">
    <Setter Property="TickLength" Value="{x:Static local:AxisDefaults.CategoryAxis_TickLength}"/>
  </Style>

  <Style TargetType="local:CategoryDateTimeXAxis" BasedOn="{StaticResource XAxis}">
    <Setter Property="TickLength" Value="{x:Static local:AxisDefaults.CategoryAxis_TickLength}"/>
  </Style>

  <Style TargetType="local:CategoryAngleAxis" BasedOn="{StaticResource Axis}">
    <Setter Property="MajorStroke" Value="{x:Static local:AxisDefaults.Axis_MajorBrush}" />
    <Setter Property="Stroke"      Value="{x:Static local:AxisDefaults.Axis_LineBrush}"/>
    <Setter Property="LabelSettings">
      <Setter.Value>
        <local:AxisLabelSettings FontSize="{x:Static shared:FontDefaults.ChartFontSize}" FontFamily="{x:Static shared:FontDefaults.ChartFontFamily}" Foreground="{StaticResource AxisLabelsBrush}" Location="InsideTop" />
      </Setter.Value>
    </Setter>
  </Style>

  <!-- ******************* Numeric Axis ******************* -->
  <Style TargetType="local:NumericXAxis" BasedOn="{StaticResource XAxis}">
    <Setter Property="MajorStroke" Value="{x:Static local:AxisDefaults.Axis_MajorBrush}" />
  </Style>

  <Style TargetType="local:NumericYAxis" BasedOn="{StaticResource YAxis}">
    <Setter Property="MajorStroke" Value="{x:Static local:AxisDefaults.Axis_MajorBrush}" />
  </Style>

  <Style TargetType="local:NumericAngleAxis" BasedOn="{StaticResource Axis}">
    <Setter Property="MajorStroke" Value="{x:Static local:AxisDefaults.Axis_MajorBrush}" />
    <Setter Property="Stroke"      Value="{x:Static local:AxisDefaults.Axis_LineBrush}"/>
    <Setter Property="LabelSettings">
      <Setter.Value>
        <local:AxisLabelSettings FontSize="{x:Static shared:FontDefaults.ChartFontSize}" FontFamily="{x:Static shared:FontDefaults.ChartFontFamily}" Foreground="{StaticResource AxisLabelsBrush}" Location="InsideTop" />
      </Setter.Value>
    </Setter>
  </Style>

  <Style TargetType="local:NumericRadiusAxis" BasedOn="{StaticResource Axis}">
    <Setter Property="MajorStroke" Value="{x:Static local:AxisDefaults.Axis_MajorBrush}" />
    <Setter Property="Stroke"      Value="{x:Static local:AxisDefaults.Axis_LineBrush}"/>
    <Setter Property="LabelSettings">
      <Setter.Value>
        <local:AxisLabelSettings FontSize="{x:Static shared:FontDefaults.ChartFontSize}" FontFamily="{x:Static shared:FontDefaults.ChartFontFamily}" Foreground="{StaticResource AxisLabelsBrush}" Location="InsideBottom" />
      </Setter.Value>
    </Setter>
  </Style>

  <!-- ******************* SERIES ******************* -->
  <Style x:Key="Series" TargetType="local:Series">
    <Setter Property="AreaFillOpacity" Value="0.8"/>
    <Setter Property="MinWidth" Value="8"/>
    <Setter Property="MinHeight" Value="8"/>
    <Setter Property="ShadowOpacity" Value="0.4"/>
    <Setter Property="ShadowColor" Value="Black"/>
    <Setter Property="ShadowBlur" Value="5"/>
    <Setter Property="ShadowDepth" Value="5"/>
    <Setter Property="ShadowDirection" Value="315"/>
    <!-- do not set a default value for Outline, or else the XamDataChart.Outlines property will be ineffective. -->
    <Setter Property="LegendItemTemplate" Value="{StaticResource LegendItemTemplate}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="local:Series">
          <Canvas x:Name="RootCanvas">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal">
                  <!-- <Storyboard>
                      <DoubleAnimation
                      Storyboard.TargetName="RootCanvas"
                      Storyboard.TargetProperty="Opacity"
                      To="0.75"
                      Duration="0:0:0.4"/>
                      </Storyboard> -->
                </VisualState>
                <VisualState x:Name="MouseOver">
                  <!-- <Storyboard>
                      <DoubleAnimation
                      Storyboard.TargetName="RootCanvas"
                      Storyboard.TargetProperty="Opacity"
                      To="1.0"
                      Duration="0:0:0.2"/>
                      </Storyboard> -->
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
          </Canvas>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- <Style TargetType="local:PieSeries" BasedOn="{StaticResource Series}">
          <Setter Property="LegendItemBadgeTemplate" Value="{StaticResource LegendBadgeTemplate_MarkerShape_MatchSeries}"/>
          <Setter Property="MarkerType" Value="None"/>
  </Style>

  <Style TargetType="local:DoughnutSeries" BasedOn="{StaticResource Series}">
      <Setter Property="LegendItemBadgeTemplate" Value="{StaticResource LegendBadgeTemplate_MarkerShape_MatchSeries}"/>
      <Setter Property="MarkerType" Value="None"/>
  </Style>

  <Style TargetType="local:PointSeries" BasedOn="{StaticResource Series}">
      <Setter Property="LegendItemBadgeTemplate" Value="{StaticResource LegendBadgeTemplate_MarkerShape_MatchSeries}"/>
      <Setter Property="LegendItemColorTemplate" Value="{StaticResource LegendItemColorTemplate}" />
      <Setter Property="MarkerType" Value="Automatic"/>
      <Setter Property="Resolution" Value="4"/>
      <Setter Property="Template">
          <Setter.Value>
              <ControlTemplate TargetType="local:Series">
                  <Canvas x:Name="RootCanvas">
                      <VisualStateManager.VisualStateGroups>
                          <VisualStateGroup x:Name="CommonStates">
                              <VisualState x:Name="Normal">
                              </VisualState>
                              <VisualState x:Name="MouseOver">
                              </VisualState>
                          </VisualStateGroup>
                      </VisualStateManager.VisualStateGroups>
                  </Canvas>
              </ControlTemplate>
          </Setter.Value>
      </Setter>
  </Style>
  -->

  <!-- ******************* CATEGORY SERIES ******************* -->
  <Style TargetType="local:AreaSeries" BasedOn="{StaticResource Series}">
    <!--<Setter Property="LegendItemBadgeTemplate" Value="{StaticResource LegendBadgeTemplate_RectShape_MatchSeries}"/>-->
    <Setter Property="MarkerType" Value="{x:Static local:Defaults.MarkerSeries_MarkerType}"/>
    <Setter Property="ShadowDirection" Value="90"/>
  </Style>

  <Style TargetType="local:BarSeries" BasedOn="{StaticResource Series}">
    <!--<Setter Property="LegendItemBadgeTemplate" Value="{StaticResource LegendBadgeTemplate_RectShape_MatchSeries}"/>-->
    <Setter Property="MarkerType" Value="{x:Static local:Defaults.ColumnSeries_MarkerType}"/>
    <!--<Setter Property="Resolution" Value="{x:Static local:Defaults.ColumnSeries_Resolution}"/>-->
    <Setter Property="Thickness"  Value="{x:Static local:Defaults.ColumnSeries_Thickness}" />
    <Setter Property="ShadowDirection" Value="45"/>
  </Style>

  <Style TargetType="local:ColumnSeries" BasedOn="{StaticResource Series}">
    <!--<Setter Property="LegendItemBadgeTemplate" Value="{StaticResource LegendBadgeTemplate_RectShape_MatchSeries}"/>-->
    <Setter Property="MarkerType" Value="{x:Static local:Defaults.ColumnSeries_MarkerType}"/>
    <!--<Setter Property="Resolution" Value="{x:Static local:Defaults.ColumnSeries_Resolution}"/>-->
    <Setter Property="Thickness"  Value="{x:Static local:Defaults.ColumnSeries_Thickness}" />
  </Style>

  <Style TargetType="local:LineSeries" BasedOn="{StaticResource Series}">
    <!--<Setter Property="LegendItemBadgeTemplate" Value="{StaticResource LegendBadgeTemplate_LineShape_MatchSeries}"/>-->
    <Setter Property="MarkerType" Value="{x:Static local:Defaults.MarkerSeries_MarkerType}"/>
  </Style>

  <Style TargetType="local:PointSeries" BasedOn="{StaticResource Series}">
    <!--<Setter Property="LegendItemBadgeTemplate" Value="{StaticResource LegendBadgeTemplate_MarkerShape_MatchSeries}"/>-->
    <Setter Property="MarkerType" Value="{x:Static local:Defaults.MarkerSeries_MarkerType}"/>
  </Style>

  <Style TargetType="local:StepLineSeries" BasedOn="{StaticResource Series}">
    <!--<Setter Property="LegendItemBadgeTemplate" Value="{StaticResource LegendBadgeTemplate_LineShape_MatchSeries}"/>-->
    <Setter Property="MarkerType" Value="{x:Static local:Defaults.ColumnSeries_MarkerType}"/>
  </Style>

  <Style TargetType="local:StepAreaSeries" BasedOn="{StaticResource Series}">
    <!--<Setter Property="LegendItemBadgeTemplate" Value="{StaticResource LegendBadgeTemplate_RectShape_MatchSeries}"/>-->
    <Setter Property="MarkerType" Value="{x:Static local:Defaults.ColumnSeries_MarkerType}"/>
  </Style>

  <Style TargetType="local:SplineSeries" BasedOn="{StaticResource Series}">
    <!--<Setter Property="LegendItemBadgeTemplate" Value="{StaticResource LegendBadgeTemplate_LineShape_MatchSeries}"/>-->
    <Setter Property="MarkerType" Value="{x:Static local:Defaults.MarkerSeries_MarkerType}"/>
  </Style>

  <Style TargetType="local:SplineAreaSeries" BasedOn="{StaticResource Series}">
    <!--<Setter Property="LegendItemBadgeTemplate" Value="{StaticResource LegendBadgeTemplate_RectShape_MatchSeries}"/>-->
    <Setter Property="MarkerType" Value="{x:Static local:Defaults.MarkerSeries_MarkerType}"/>
    <Setter Property="ShadowDirection" Value="90"/>
  </Style>

  <Style TargetType="local:RangeColumnSeries" BasedOn="{StaticResource Series}">
    <!--<Setter Property="LegendItemBadgeTemplate" Value="{StaticResource LegendBadgeTemplate_RectShape_MatchSeries}"/>-->
    <Setter Property="MarkerType" Value="{x:Static local:Defaults.ColumnSeries_MarkerType}"/>
    <Setter Property="Thickness"  Value="{x:Static local:Defaults.ColumnSeries_Thickness}" />
    <!--<Setter Property="Resolution" Value="{x:Static local:Defaults.ColumnSeries_Resolution}"/>-->
  </Style>

  <Style TargetType="local:RangeAreaSeries" BasedOn="{StaticResource Series}">
    <!--<Setter Property="LegendItemBadgeTemplate" Value="{StaticResource LegendBadgeTemplate_RectShape_MatchSeries}"/>-->
    <Setter Property="MarkerType" Value="None"/>
  </Style>

  <Style TargetType="local:WaterfallSeries" BasedOn="{StaticResource Series}">
    <!--<Setter Property="LegendItemBadgeTemplate" Value="{StaticResource LegendBadgeTemplate_RectFinancial_MatchSeries}"/>-->
    <Setter Property="MarkerType"      Value="{x:Static local:Defaults.ColumnSeries_MarkerType}"/>
    <!--<Setter Property="Resolution"      Value="{x:Static local:Defaults.ColumnSeries_Resolution}"/>-->
    <Setter Property="Thickness"       Value="{x:Static local:Defaults.ColumnSeries_Thickness}" />
    <Setter Property="NegativeBrush"   Value="{x:Static local:Defaults.FinancialSeries_NegativeBrush}" />
    <Setter Property="NegativeOutline" Value="{x:Static local:Defaults.FinancialSeries_NegativeOutline}" />
  </Style>

  <!-- ******************* STACKED SERIES ******************* -->
  <Style TargetType="local:StackedColumnSeries" BasedOn="{StaticResource Series}">
    <Setter Property="MarkerType" Value="{x:Static local:Defaults.ColumnSeries_MarkerType}"/>
    <!--<Setter Property="Resolution" Value="{x:Static local:Defaults.ColumnSeries_Resolution}"/>-->
    <Setter Property="Thickness"  Value="{x:Static local:Defaults.ColumnSeries_Thickness}" />
  </Style>

  <Style TargetType="local:StackedBarSeries" BasedOn="{StaticResource Series}">
    <Setter Property="MarkerType" Value="{x:Static local:Defaults.ColumnSeries_MarkerType}"/>
    <!--<Setter Property="Resolution" Value="{x:Static local:Defaults.ColumnSeries_Resolution}"/>-->
    <Setter Property="Thickness"  Value="{x:Static local:Defaults.ColumnSeries_Thickness}" />
    <Setter Property="ShadowDirection" Value="135"/>
  </Style>

  <Style TargetType="local:Stacked100ColumnSeries" BasedOn="{StaticResource Series}">
    <Setter Property="MarkerType" Value="{x:Static local:Defaults.ColumnSeries_MarkerType}"/>
    <!--<Setter Property="Resolution" Value="{x:Static local:Defaults.ColumnSeries_Resolution}"/>-->
    <Setter Property="Thickness"  Value="{x:Static local:Defaults.ColumnSeries_Thickness}" />
  </Style>

  <Style TargetType="local:Stacked100BarSeries" BasedOn="{StaticResource Series}">
    <Setter Property="MarkerType" Value="{x:Static local:Defaults.ColumnSeries_MarkerType}"/>
    <!--<Setter Property="Resolution" Value="{x:Static local:Defaults.ColumnSeries_Resolution}"/>-->
    <Setter Property="Thickness"  Value="{x:Static local:Defaults.ColumnSeries_Thickness}" />
    <Setter Property="ShadowDirection" Value="135"/>
  </Style>

  <Style TargetType="local:StackedLineSeries" BasedOn="{StaticResource Series}">
    <Setter Property="MarkerType" Value="{x:Static local:Defaults.MarkerSeries_MarkerType}"/>
  </Style>

  <Style TargetType="local:Stacked100LineSeries" BasedOn="{StaticResource Series}">
    <Setter Property="MarkerType" Value="{x:Static local:Defaults.MarkerSeries_MarkerType}"/>
  </Style>

  <Style TargetType="local:StackedSplineSeries" BasedOn="{StaticResource Series}">
    <Setter Property="MarkerType" Value="{x:Static local:Defaults.MarkerSeries_MarkerType}"/>
  </Style>

  <Style TargetType="local:Stacked100SplineSeries" BasedOn="{StaticResource Series}">
    <Setter Property="MarkerType" Value="{x:Static local:Defaults.MarkerSeries_MarkerType}"/>
  </Style>

  <Style TargetType="local:StackedAreaSeries" BasedOn="{StaticResource Series}">
    <Setter Property="MarkerType" Value="{x:Static local:Defaults.MarkerSeries_MarkerType}"/>
    <Setter Property="ShadowDirection" Value="90"/>
  </Style>

  <Style TargetType="local:StackedSplineAreaSeries" BasedOn="{StaticResource Series}">
    <Setter Property="MarkerType" Value="{x:Static local:Defaults.MarkerSeries_MarkerType}"/>
    <Setter Property="ShadowDirection" Value="90"/>
  </Style>

  <Style TargetType="local:Stacked100AreaSeries" BasedOn="{StaticResource Series}">
    <Setter Property="MarkerType" Value="{x:Static local:Defaults.MarkerSeries_MarkerType}"/>
    <Setter Property="ShadowDirection" Value="90"/>
  </Style>

  <Style TargetType="local:Stacked100SplineAreaSeries" BasedOn="{StaticResource Series}">
    <Setter Property="MarkerType" Value="{x:Static local:Defaults.MarkerSeries_MarkerType}"/>
    <Setter Property="ShadowDirection" Value="90"/>
  </Style>

  <Style TargetType="local:ColumnFragment" BasedOn="{StaticResource Series}">
    <!--<Setter Property="LegendItemBadgeTemplate" Value="{StaticResource LegendBadgeTemplate_RectShape_MatchSeries}"/>-->
    <Setter Property="MarkerType" Value="{x:Static local:Defaults.ColumnSeries_MarkerType}"/>
    <!--<Setter Property="Resolution" Value="{x:Static local:Defaults.ColumnSeries_Resolution}"/>-->
  </Style>

  <Style TargetType="local:BarFragment" BasedOn="{StaticResource Series}">
    <!--<Setter Property="LegendItemBadgeTemplate" Value="{StaticResource LegendBadgeTemplate_RectShape_MatchSeries}"/>-->
    <Setter Property="MarkerType" Value="{x:Static local:Defaults.ColumnSeries_MarkerType}"/>
    <!--<Setter Property="Resolution" Value="{x:Static local:Defaults.ColumnSeries_Resolution}"/>-->
  </Style>

  <Style TargetType="local:LineFragment" BasedOn="{StaticResource Series}">
    <!--<Setter Property="LegendItemBadgeTemplate" Value="{StaticResource LegendBadgeTemplate_LineShape_MatchSeries}"/>-->
    <Setter Property="MarkerType" Value="{x:Static local:Defaults.MarkerSeries_MarkerType}"/>
  </Style>

  <Style TargetType="local:SplineFragment" BasedOn="{StaticResource Series}">
    <!--<Setter Property="LegendItemBadgeTemplate" Value="{StaticResource LegendBadgeTemplate_LineShape_MatchSeries}"/>-->
    <Setter Property="MarkerType" Value="{x:Static local:Defaults.MarkerSeries_MarkerType}"/>
  </Style>

  <Style TargetType="local:AreaFragment" BasedOn="{StaticResource Series}">
    <!--<Setter Property="LegendItemBadgeTemplate" Value="{StaticResource LegendBadgeTemplate_RectShape_MatchSeries}"/>-->
    <Setter Property="MarkerType" Value="{x:Static local:Defaults.MarkerSeries_MarkerType}"/>
  </Style>

  <Style TargetType="local:SplineAreaFragment" BasedOn="{StaticResource Series}">
    <!--<Setter Property="LegendItemBadgeTemplate" Value="{StaticResource LegendBadgeTemplate_RectShape_MatchSeries}"/>-->
    <Setter Property="MarkerType" Value="{x:Static local:Defaults.MarkerSeries_MarkerType}"/>
  </Style>

  <!-- ******************* SCATTER SERIES ******************* -->
  <Style TargetType="local:ScatterSeries" BasedOn="{StaticResource Series}">
    <!--<Setter Property="LegendItemBadgeTemplate" Value="{StaticResource LegendBadgeTemplate_MarkerShape_MatchSeries}"/>-->
    <Setter Property="MarkerType" Value="{x:Static local:Defaults.MarkerSeries_MarkerType}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="local:Series">
          <Canvas x:Name="RootCanvas">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal"/>
                <VisualState x:Name="MouseOver"/>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
          </Canvas>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style TargetType="local:HighDensityScatterSeries" BasedOn="{StaticResource Series}">
    <Setter Property="HeatMaximumColor" Value="{x:Static local:Defaults.HighDensityScatterSeries_HeatMaximumColor}" />
    <Setter Property="HeatMinimumColor" Value="{x:Static local:Defaults.HighDensityScatterSeries_HeatMinimumColor}" />
    <!--<Setter Property="Resolution"       Value="{x:Static local:Defaults.HighDensityScatterSeries_Resolution}" />-->
    <!--these settings are used only in legend badge:-->
    <Setter Property="Brush"            Value="{x:Static local:Defaults.HighDensityScatterSeries_HeatMaximumBrush}" />
    <Setter Property="Outline"          Value="{x:Static local:Defaults.HighDensityScatterSeries_HeatMinimumBrush}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="local:Series">
          <Canvas x:Name="RootCanvas"/>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style TargetType="local:ScatterLineSeries" BasedOn="{StaticResource Series}">
    <!--<Setter Property="LegendItemBadgeTemplate" Value="{StaticResource LegendBadgeTemplate_LineShape_MatchSeries}"/>-->
    <!--<Setter Property="Resolution" Value="{x:Static local:Defaults.ScatterLineSeries_Resolution}"/>-->
    <Setter Property="MarkerType" Value="{x:Static local:Defaults.MarkerSeries_MarkerType}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="local:Series">
          <Canvas x:Name="RootCanvas">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal"/>
                <VisualState x:Name="MouseOver"/>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
          </Canvas>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style TargetType="local:ScatterSplineSeries" BasedOn="{StaticResource Series}">
    <!--<Setter Property="LegendItemBadgeTemplate" Value="{StaticResource LegendBadgeTemplate_LineShape_MatchSeries}"/>-->
    <!--<Setter Property="Resolution" Value="{x:Static local:Defaults.ScatterLineSeries_Resolution}"/>-->
    <Setter Property="MarkerType" Value="{x:Static local:Defaults.MarkerSeries_MarkerType}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="local:Series">
          <Canvas x:Name="RootCanvas">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal"/>
                <VisualState x:Name="MouseOver"/>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
          </Canvas>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style TargetType="local:BubbleSeries" BasedOn="{StaticResource Series}">
    <!--<Setter Property="LegendItemBadgeTemplate" Value="{StaticResource LegendBadgeTemplate_MarkerShape_MatchSeries}"/>-->
    <Setter Property="LegendItemTemplate" Value="{StaticResource LegendItemTemplate}"/>
    <Setter Property="DiscreteLegendItemTemplate" Value="{StaticResource DiscreteLegendItemTemplate}"/>
    <Setter Property="MarkerType" Value="{x:Static local:Defaults.MarkerSeries_MarkerType}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="local:Series">
          <Canvas x:Name="RootCanvas">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal"/>
                <VisualState x:Name="MouseOver"/>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
          </Canvas>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- ******************* FINANCIAL SERIES ******************* -->
  <Style TargetType="local:FinancialPriceSeries" BasedOn="{StaticResource Series}">
    <!--<Setter Property="LegendItemBadgeTemplate" Value="{StaticResource LegendBadgeTemplate_RectFinancial_MatchSeries}"/>-->
    <!--<Setter Property="Resolution"      Value="{x:Static local:Defaults.FinancialSeries_Resolution}"/>-->
    <Setter Property="DisplayType"     Value="{x:Static local:Defaults.FinancialSeries_DisplayType}" />
    <Setter Property="NegativeBrush"   Value="{x:Static local:Defaults.FinancialSeries_NegativeBrush}" />
    <Setter Property="NegativeOutline" Value="{x:Static local:Defaults.FinancialSeries_NegativeOutline}" />
    <Setter Property="Thickness"       Value="{x:Static local:Defaults.FinancialSeries_Thickness}"/>
    <Setter Property="Outline" Value="{Binding Series.ActualOutline}"/>
    <Setter Property="Opacity" Value="1"/>
  </Style>

  <Style TargetType="local:BollingerBandsOverlay" BasedOn="{StaticResource Series}">
    <!--<Setter Property="LegendItemBadgeTemplate" Value="{StaticResource LegendBadgeTemplate_RectShape_MatchSeries}"/>-->
    <Setter Property="DashArray" Value="2 4 8 4" />
  </Style>

  <Style TargetType="local:PriceChannelOverlay" BasedOn="{StaticResource Series}">
    <!--<Setter Property="LegendItemBadgeTemplate" Value="{StaticResource LegendBadgeTemplate_RectShape_MatchSeries}"/>-->
  </Style>

  <Style TargetType="local:AbsoluteVolumeOscillatorIndicator" BasedOn="{StaticResource Series}">
    <!--<Setter Property="LegendItemBadgeTemplate" Value="{StaticResource LegendBadgeTemplate_RectIndicator_MatchSeries}"/>-->
    <Setter Property="DisplayType" Value="Line"/>
    <Setter Property="NegativeBrush" Value="{x:Static local:Defaults.FinancialSeries_NegativeBrush}"/>
  </Style>

  <Style TargetType="local:AccumulationDistributionIndicator" BasedOn="{StaticResource Series}">
    <!--<Setter Property="LegendItemBadgeTemplate" Value="{StaticResource LegendBadgeTemplate_RectIndicator_MatchSeries}"/>-->
    <Setter Property="DisplayType" Value="Line"/>
    <Setter Property="NegativeBrush" Value="{x:Static local:Defaults.FinancialSeries_NegativeBrush}"/>
  </Style>

  <Style TargetType="local:AverageTrueRangeIndicator" BasedOn="{StaticResource Series}">
    <!--<Setter Property="LegendItemBadgeTemplate" Value="{StaticResource LegendBadgeTemplate_RectIndicator_MatchSeries}"/>-->
    <Setter Property="DisplayType" Value="Line"/>
    <Setter Property="NegativeBrush" Value="{x:Static local:Defaults.FinancialSeries_NegativeBrush}"/>
  </Style>

  <Style TargetType="local:CommodityChannelIndexIndicator" BasedOn="{StaticResource Series}">
    <!--<Setter Property="LegendItemBadgeTemplate" Value="{StaticResource LegendBadgeTemplate_RectIndicator_MatchSeries}"/>-->
    <Setter Property="DisplayType" Value="Line"/>
    <Setter Property="NegativeBrush" Value="{x:Static local:Defaults.FinancialSeries_NegativeBrush}"/>
  </Style>

  <Style TargetType="local:ForceIndexIndicator" BasedOn="{StaticResource Series}">
    <!--<Setter Property="LegendItemBadgeTemplate" Value="{StaticResource LegendBadgeTemplate_RectIndicator_MatchSeries}"/>-->
    <Setter Property="DisplayType" Value="Area"/>
    <Setter Property="NegativeBrush" Value="{x:Static local:Defaults.FinancialSeries_NegativeBrush}"/>
  </Style>

  <Style TargetType="local:MoneyFlowIndexIndicator" BasedOn="{StaticResource Series}">
    <!--<Setter Property="LegendItemBadgeTemplate" Value="{StaticResource LegendBadgeTemplate_RectIndicator_MatchSeries}"/>-->
    <Setter Property="DisplayType" Value="Area"/>
    <Setter Property="NegativeBrush" Value="{x:Static local:Defaults.FinancialSeries_NegativeBrush}"/>
  </Style>

  <Style TargetType="local:MovingAverageConvergenceDivergenceIndicator" BasedOn="{StaticResource Series}">
    <!--<Setter Property="LegendItemBadgeTemplate" Value="{StaticResource LegendBadgeTemplate_RectIndicator_MatchSeries}"/>-->
    <Setter Property="DisplayType" Value="Area"/>
    <Setter Property="NegativeBrush" Value="{x:Static local:Defaults.FinancialSeries_NegativeBrush}"/>
    <Setter Property="TrendLineBrush" Value="{StaticResource TrendlineBaseBrush}"/>
    <Setter Property="TrendLineType" Value="ExponentialAverage" />
    <Setter Property="TrendLinePeriod" Value="9" />
  </Style>

  <Style TargetType="local:OnBalanceVolumeIndicator" BasedOn="{StaticResource Series}">
    <!--<Setter Property="LegendItemBadgeTemplate" Value="{StaticResource LegendBadgeTemplate_RectIndicator_MatchSeries}"/>-->
    <Setter Property="DisplayType" Value="Line"/>
    <Setter Property="NegativeBrush" Value="{x:Static local:Defaults.FinancialSeries_NegativeBrush}"/>
  </Style>

  <Style TargetType="local:PercentagePriceOscillatorIndicator" BasedOn="{StaticResource Series}">
    <!--<Setter Property="LegendItemBadgeTemplate" Value="{StaticResource LegendBadgeTemplate_RectIndicator_MatchSeries}"/>-->
    <Setter Property="DisplayType" Value="Line"/>
    <Setter Property="NegativeBrush" Value="{x:Static local:Defaults.FinancialSeries_NegativeBrush}"/>
  </Style>

  <Style TargetType="local:PercentageVolumeOscillatorIndicator" BasedOn="{StaticResource Series}">
    <!--<Setter Property="LegendItemBadgeTemplate" Value="{StaticResource LegendBadgeTemplate_RectIndicator_MatchSeries}"/>-->
    <Setter Property="DisplayType" Value="Line"/>
    <Setter Property="NegativeBrush" Value="{x:Static local:Defaults.FinancialSeries_NegativeBrush}"/>
  </Style>

  <Style TargetType="local:PriceVolumeTrendIndicator" BasedOn="{StaticResource Series}">
    <!--<Setter Property="LegendItemBadgeTemplate" Value="{StaticResource LegendBadgeTemplate_RectIndicator_MatchSeries}"/>-->
    <Setter Property="DisplayType" Value="Line"/>
    <Setter Property="NegativeBrush" Value="{x:Static local:Defaults.FinancialSeries_NegativeBrush}"/>
  </Style>

  <Style TargetType="local:RateOfChangeAndMomentumIndicator" BasedOn="{StaticResource Series}">
    <!--<Setter Property="LegendItemBadgeTemplate" Value="{StaticResource LegendBadgeTemplate_RectIndicator_MatchSeries}"/>-->
    <Setter Property="DisplayType" Value="Line"/>
    <Setter Property="NegativeBrush" Value="{x:Static local:Defaults.FinancialSeries_NegativeBrush}"/>
  </Style>

  <Style TargetType="local:TypicalPriceIndicator" BasedOn="{StaticResource Series}">
    <!--<Setter Property="LegendItemBadgeTemplate" Value="{StaticResource LegendBadgeTemplate_RectIndicator_MatchSeries}"/>-->
    <Setter Property="DisplayType" Value="Line"/>
    <Setter Property="NegativeBrush" Value="{x:Static local:Defaults.FinancialSeries_NegativeBrush}"/>
  </Style>

  <Style TargetType="local:MarketFacilitationIndexIndicator" BasedOn="{StaticResource Series}">
    <!--<Setter Property="LegendItemBadgeTemplate" Value="{StaticResource LegendBadgeTemplate_RectIndicator_MatchSeries}"/>-->
    <Setter Property="DisplayType" Value="Area"/>
    <Setter Property="NegativeBrush" Value="{x:Static local:Defaults.FinancialSeries_NegativeBrush}"/>
  </Style>

  <Style TargetType="local:RelativeStrengthIndexIndicator" BasedOn="{StaticResource Series}">
    <!--<Setter Property="LegendItemBadgeTemplate" Value="{StaticResource LegendBadgeTemplate_RectIndicator_MatchSeries}"/>-->
    <Setter Property="DisplayType" Value="Area"/>
    <Setter Property="NegativeBrush" Value="{x:Static local:Defaults.FinancialSeries_NegativeBrush}"/>
  </Style>

  <Style TargetType="local:WeightedCloseIndicator" BasedOn="{StaticResource Series}">
    <!--<Setter Property="LegendItemBadgeTemplate" Value="{StaticResource LegendBadgeTemplate_RectIndicator_MatchSeries}"/>-->
    <Setter Property="DisplayType" Value="Line"/>
    <Setter Property="NegativeBrush" Value="{x:Static local:Defaults.FinancialSeries_NegativeBrush}"/>
  </Style>

  <Style TargetType="local:MedianPriceIndicator" BasedOn="{StaticResource Series}">
    <!--<Setter Property="LegendItemBadgeTemplate" Value="{StaticResource LegendBadgeTemplate_RectIndicator_MatchSeries}"/>-->
    <Setter Property="DisplayType" Value="Line"/>
    <Setter Property="NegativeBrush" Value="{x:Static local:Defaults.FinancialSeries_NegativeBrush}"/>
  </Style>

  <Style TargetType="local:DetrendedPriceOscillatorIndicator" BasedOn="{StaticResource Series}">
    <!--<Setter Property="LegendItemBadgeTemplate" Value="{StaticResource LegendBadgeTemplate_RectIndicator_MatchSeries}"/>-->
    <Setter Property="DisplayType" Value="Line"/>
    <Setter Property="NegativeBrush" Value="{x:Static local:Defaults.FinancialSeries_NegativeBrush}"/>
  </Style>

  <Style TargetType="local:EaseOfMovementIndicator" BasedOn="{StaticResource Series}">
    <!--<Setter Property="LegendItemBadgeTemplate" Value="{StaticResource LegendBadgeTemplate_RectIndicator_MatchSeries}"/>-->
    <Setter Property="DisplayType" Value="Line"/>
    <Setter Property="NegativeBrush" Value="{x:Static local:Defaults.FinancialSeries_NegativeBrush}"/>
  </Style>

  <Style TargetType="local:MassIndexIndicator" BasedOn="{StaticResource Series}">
    <!--<Setter Property="LegendItemBadgeTemplate" Value="{StaticResource LegendBadgeTemplate_RectIndicator_MatchSeries}"/>-->
    <Setter Property="DisplayType" Value="Line"/>
    <Setter Property="NegativeBrush" Value="{x:Static local:Defaults.FinancialSeries_NegativeBrush}"/>
  </Style>

  <Style TargetType="local:NegativeVolumeIndexIndicator" BasedOn="{StaticResource Series}">
    <!--<Setter Property="LegendItemBadgeTemplate" Value="{StaticResource LegendBadgeTemplate_RectIndicator_MatchSeries}"/>-->
    <Setter Property="DisplayType" Value="Line"/>
    <Setter Property="NegativeBrush" Value="{x:Static local:Defaults.FinancialSeries_NegativeBrush}"/>
  </Style>

  <Style TargetType="local:PositiveVolumeIndexIndicator" BasedOn="{StaticResource Series}">
    <!--<Setter Property="LegendItemBadgeTemplate" Value="{StaticResource LegendBadgeTemplate_RectIndicator_MatchSeries}"/>-->
    <Setter Property="DisplayType" Value="Line"/>
    <Setter Property="NegativeBrush" Value="{x:Static local:Defaults.FinancialSeries_NegativeBrush}"/>
  </Style>

  <Style TargetType="local:AverageDirectionalIndexIndicator" BasedOn="{StaticResource Series}">
    <!--<Setter Property="LegendItemBadgeTemplate" Value="{StaticResource LegendBadgeTemplate_RectIndicator_MatchSeries}"/>-->
    <Setter Property="DisplayType" Value="Line"/>
    <Setter Property="NegativeBrush" Value="{x:Static local:Defaults.FinancialSeries_NegativeBrush}"/>
  </Style>

  <Style TargetType="local:BollingerBandWidthIndicator" BasedOn="{StaticResource Series}">
    <!--<Setter Property="LegendItemBadgeTemplate" Value="{StaticResource LegendBadgeTemplate_RectIndicator_MatchSeries}"/>-->
    <Setter Property="DisplayType" Value="Line"/>
    <Setter Property="NegativeBrush" Value="{x:Static local:Defaults.FinancialSeries_NegativeBrush}"/>
  </Style>

  <Style TargetType="local:ChaikinVolatilityIndicator" BasedOn="{StaticResource Series}">
    <!--<Setter Property="LegendItemBadgeTemplate" Value="{StaticResource LegendBadgeTemplate_RectIndicator_MatchSeries}"/>-->
    <Setter Property="DisplayType" Value="Line"/>
    <Setter Property="NegativeBrush" Value="{x:Static local:Defaults.FinancialSeries_NegativeBrush}"/>
  </Style>

  <Style TargetType="local:ChaikinOscillatorIndicator" BasedOn="{StaticResource Series}">
    <!--<Setter Property="LegendItemBadgeTemplate" Value="{StaticResource LegendBadgeTemplate_RectIndicator_MatchSeries}"/>-->
    <Setter Property="DisplayType" Value="Line"/>
    <Setter Property="NegativeBrush" Value="{x:Static local:Defaults.FinancialSeries_NegativeBrush}"/>
  </Style>

  <Style TargetType="local:StandardDeviationIndicator" BasedOn="{StaticResource Series}">
    <!--<Setter Property="LegendItemBadgeTemplate" Value="{StaticResource LegendBadgeTemplate_RectIndicator_MatchSeries}"/>-->
    <Setter Property="DisplayType" Value="Line"/>
    <Setter Property="NegativeBrush" Value="{x:Static local:Defaults.FinancialSeries_NegativeBrush}"/>
  </Style>

  <Style TargetType="local:TRIXIndicator" BasedOn="{StaticResource Series}">
    <!--<Setter Property="LegendItemBadgeTemplate" Value="{StaticResource LegendBadgeTemplate_RectIndicator_MatchSeries}"/>-->
    <Setter Property="DisplayType" Value="Line"/>
    <Setter Property="NegativeBrush" Value="{x:Static local:Defaults.FinancialSeries_NegativeBrush}"/>
    <Setter Property="TrendLineBrush" Value="{StaticResource TrendlineBaseBrush}"/>
    <Setter Property="TrendLineType" Value="SimpleAverage" />
    <Setter Property="TrendLinePeriod" Value="9" />
  </Style>

  <Style TargetType="local:UltimateOscillatorIndicator" BasedOn="{StaticResource Series}">
    <!--<Setter Property="LegendItemBadgeTemplate" Value="{StaticResource LegendBadgeTemplate_RectIndicator_MatchSeries}"/>-->
    <Setter Property="DisplayType" Value="Line"/>
    <Setter Property="NegativeBrush" Value="{x:Static local:Defaults.FinancialSeries_NegativeBrush}"/>
  </Style>

  <Style TargetType="local:WilliamsPercentRIndicator" BasedOn="{StaticResource Series}">
    <!--<Setter Property="LegendItemBadgeTemplate" Value="{StaticResource LegendBadgeTemplate_RectIndicator_MatchSeries}"/>-->
    <Setter Property="DisplayType" Value="Line"/>
    <Setter Property="NegativeBrush" Value="{x:Static local:Defaults.FinancialSeries_NegativeBrush}"/>
  </Style>

  <Style TargetType="local:FastStochasticOscillatorIndicator" BasedOn="{StaticResource Series}">
    <!--<Setter Property="LegendItemBadgeTemplate" Value="{StaticResource LegendBadgeTemplate_RectIndicator_MatchSeries}"/>-->
    <Setter Property="DisplayType" Value="Line"/>
    <Setter Property="NegativeBrush" Value="{x:Static local:Defaults.FinancialSeries_NegativeBrush}"/>
    <Setter Property="TrendLineBrush" Value="{StaticResource TrendlineBaseBrush}"/>
    <Setter Property="TrendLineType" Value="ExponentialAverage" />
    <Setter Property="TrendLinePeriod" Value="3" />
  </Style>

  <Style TargetType="local:SlowStochasticOscillatorIndicator" BasedOn="{StaticResource Series}">
    <!--<Setter Property="LegendItemBadgeTemplate" Value="{StaticResource LegendBadgeTemplate_RectIndicator_MatchSeries}"/>-->
    <Setter Property="DisplayType" Value="Line"/>
    <Setter Property="NegativeBrush" Value="{x:Static local:Defaults.FinancialSeries_NegativeBrush}"/>
    <Setter Property="TrendLineBrush" Value="{StaticResource TrendlineBaseBrush}"/>
    <Setter Property="TrendLineType" Value="ExponentialAverage" />
    <Setter Property="TrendLinePeriod" Value="3" />
  </Style>

  <Style TargetType="local:FullStochasticOscillatorIndicator" BasedOn="{StaticResource Series}">
    <!--<Setter Property="LegendItemBadgeTemplate" Value="{StaticResource LegendBadgeTemplate_RectIndicator_MatchSeries}"/>-->
    <Setter Property="DisplayType" Value="Line"/>
    <Setter Property="NegativeBrush" Value="{x:Static local:Defaults.FinancialSeries_NegativeBrush}"/>
    <Setter Property="TrendLineBrush" Value="{StaticResource TrendlineBaseBrush}"/>
    <Setter Property="TrendLineType" Value="ExponentialAverage" />
    <Setter Property="TrendLinePeriod" Value="3" />
  </Style>

  <Style TargetType="local:CustomIndicator" BasedOn="{StaticResource Series}">
    <!--<Setter Property="LegendItemBadgeTemplate" Value="{StaticResource LegendBadgeTemplate_RectIndicator_MatchSeries}"/>-->
    <Setter Property="DisplayType" Value="Line"/>
    <Setter Property="NegativeBrush" Value="{x:Static local:Defaults.FinancialSeries_NegativeBrush}"/>
  </Style>

  <Style TargetType="local:StochRSIIndicator" BasedOn="{StaticResource Series}">
    <!--<Setter Property="LegendItemBadgeTemplate" Value="{StaticResource LegendBadgeTemplate_RectIndicator_MatchSeries}"/>-->
    <Setter Property="DisplayType" Value="Line"/>
    <Setter Property="NegativeBrush" Value="{x:Static local:Defaults.FinancialSeries_NegativeBrush}"/>
  </Style>

  <!-- ******************* POLAR SERIES ******************* -->
  <Style TargetType="local:PolarLineSeries" BasedOn="{StaticResource Series}">
    <!--<Setter Property="LegendItemBadgeTemplate" Value="{StaticResource LegendBadgeTemplate_LineShape_MatchSeries}"/>-->
    <Setter Property="MarkerType" Value="{x:Static local:Defaults.MarkerSeries_MarkerType}"/>
  </Style>

  <Style TargetType="local:PolarSplineSeries" BasedOn="{StaticResource Series}">
    <!--<Setter Property="LegendItemBadgeTemplate" Value="{StaticResource LegendBadgeTemplate_LineShape_MatchSeries}"/>-->
    <Setter Property="MarkerType" Value="{x:Static local:Defaults.MarkerSeries_MarkerType}"/>
  </Style>

  <Style TargetType="local:PolarScatterSeries" BasedOn="{StaticResource Series}">
    <!--<Setter Property="LegendItemBadgeTemplate" Value="{StaticResource LegendBadgeTemplate_MarkerShape_MatchSeries}"/>-->
    <Setter Property="MarkerType" Value="{x:Static local:Defaults.MarkerSeries_MarkerType}"/>
  </Style>

  <Style TargetType="local:PolarAreaSeries" BasedOn="{StaticResource Series}">
    <!--<Setter Property="LegendItemBadgeTemplate" Value="{StaticResource LegendBadgeTemplate_RectShape_MatchSeries}"/>-->
    <Setter Property="MarkerType" Value="{x:Static local:Defaults.MarkerSeries_MarkerType}"/>
  </Style>

  <Style TargetType="local:PolarSplineAreaSeries" BasedOn="{StaticResource Series}">
    <!--<Setter Property="LegendItemBadgeTemplate" Value="{StaticResource LegendBadgeTemplate_RectShape_MatchSeries}"/>-->
    <Setter Property="MarkerType" Value="{x:Static local:Defaults.MarkerSeries_MarkerType}"/>
  </Style>

  <!-- ******************* RADIAL SERIES ******************* -->
  <Style TargetType="local:RadialLineSeries" BasedOn="{StaticResource Series}">
    <!--<Setter Property="LegendItemBadgeTemplate" Value="{StaticResource LegendBadgeTemplate_LineShape_MatchSeries}"/>-->
    <Setter Property="MarkerType" Value="{x:Static local:Defaults.MarkerSeries_MarkerType}"/>
  </Style>

  <Style TargetType="local:RadialAreaSeries" BasedOn="{StaticResource Series}">
    <!--<Setter Property="LegendItemBadgeTemplate" Value="{StaticResource LegendBadgeTemplate_RectShape_MatchSeries}"/>-->
    <Setter Property="MarkerType" Value="{x:Static local:Defaults.MarkerSeries_MarkerType}"/>
  </Style>

  <Style TargetType="local:RadialColumnSeries" BasedOn="{StaticResource Series}">
    <!--<Setter Property="LegendItemBadgeTemplate" Value="{StaticResource LegendBadgeTemplate_RectShape_MatchSeries}"/>-->
    <Setter Property="MarkerType" Value="{x:Static local:Defaults.ColumnSeries_MarkerType}"/>
    <!--<Setter Property="Resolution" Value="{x:Static local:Defaults.ColumnSeries_Resolution}"/>-->
    <Setter Property="Thickness"  Value="{x:Static local:Defaults.ColumnSeries_Thickness}" />
  </Style>

  <Style TargetType="local:RadialPieSeries" BasedOn="{StaticResource Series}">
    <!--<Setter Property="LegendItemBadgeTemplate" Value="{StaticResource LegendBadgeTemplate_CircleShape_MatchSeries}"/>-->
    <Setter Property="MarkerType" Value="{x:Static local:Defaults.ColumnSeries_MarkerType}"/>
    <!--<Setter Property="Resolution" Value="{x:Static local:Defaults.ColumnSeries_Resolution}"/>-->
    <Setter Property="Thickness"  Value="{x:Static local:Defaults.ColumnSeries_Thickness}" />
  </Style>

  <Style TargetType="local:ValueOverlay" BasedOn="{StaticResource Series}" >
    <Setter Property="LegendItemTemplate" Value="{StaticResource OverlayLegendItemTemplate}"/>
    <!--<Setter Property="LegendItemBadgeTemplate" Value="{StaticResource LegendBadgeTemplate_LineMarkless_MatchSeries}"/>-->
  </Style>

  <!-- ******************* ANNOTATION LAYERS ******************* -->
  <Style TargetType="local:CrosshairLayer" BasedOn="{StaticResource Series}" >
    <Setter Property="Thickness"                 Value="{x:Static local:Defaults.CrosshairLineThickness}"/>
    
    <!--<Setter Property="Brush" Value="{x:Static local:Defaults.CrosshairLineBrush}"/>-->
    <!--<Setter Property="Thickness" Value="{x:Static local:Defaults.CrosshairLineThickness}"/>-->
    <!--<Setter Property="LegendItemBadgeTemplate" Value="{St="{Binding ElementName=LegendScrollSlider, Path=Value, StringFormat=' Legend Scroll = {0:000}'}" HorizontalAlignment="Center"/>
          <Slider Value="0" x:Name="LegendScrollSlider" HorizontalAlignment="Stretch"
                  Minimum="-1000" Maximum="0"   SmallChange=".5" LargeChange=".5"  Margin="10 0 10 0" /> 
       </StackPanel>
      
      <ScrollViewer  Grid.Row="1" Grid.RowSpan="2"  VerticalScrollBarVisibility="Hidden"
                     Background="#DCD9D9" VerticalAlignment="Stretch"
                     Height="800"
                     RenderTransformOrigin="0.0, 0.5">
         <Grid Margin="0 10 0 0">
           <Grid.RenderTransform>
            <TransformGroup>
              <ScaleTransform 
                ScaleX="{Binding ElementName=LegendScaleSlider, Path=Value, Mode=TwoWay}"
                ScaleY="{Binding ElementName=LegendScaleSlider, Path=Value, Mode=TwoWay}aticResource LegendBadgeTemplate_LineMarkless_MatchSeries}"/>-->
  </Style>
  <Style TargetType="local:ValueLayer" BasedOn="{StaticResource Series}">
    <Setter Property="Thickness" Value="{x:Static local:Defaults.Series_Thickness}"/>
  </Style>
    
  <Style TargetType="local:FinalValueLayer" BasedOn="{StaticResource Series}" >
    <!--<Setter Property="LegendItemBadgeTemplate" Value="{StaticResource LegendBadgeTemplate_LineMarkless_MatchSeries}"/>-->
  </Style>
    
  <Style TargetType="local:CalloutLayer" BasedOn="{StaticResource Series}" >
    <!--<Setter Property="LegendItemBadgeTemplate" Value="{StaticResource LegendBadgeTemplate_CircleShape_MatchSeries}"/>-->
  </Style>

  <Style TargetType="local:CategoryHighlightLayer" BasedOn="{StaticResource Series}" >
    <!--<Setter Property="LegendItemBadgeTemplate" Value="{StaticResource LegendBadgeTemplate_CircleShape_MatchSeries}"/>-->
  </Style>

  <Style TargetType="local:CategoryItemHighlightLayer" BasedOn="{StaticResource Series}" >
    <!--<Setter Property="LegendItemBadgeTemplate" Value="{StaticResource LegendBadgeTemplate_CircleShape_MatchSeries}"/>-->
  </Style>

  <!-- ******************* Pointer Tooltip Style ******************* -->
  <Style x:Key="PointerToolTipStyle" TargetType="local:PointerTooltip">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="local:PointerTooltip">
          <Canvas x:Name="PART_RootCanvas">
            <ContentControl Canvas.Left="{Binding Path=ActualBoxTopLeftPosition.X, RelativeSource={RelativeSource TemplatedParent}}"
                Canvas.Top="{Binding Path=ActualBoxTopLeftPosition.Y, RelativeSource={RelativeSource TemplatedParent}}"
                x:Name="PART_CONTENT" Style="{TemplateBinding ToolTipStyle}">
              <!--<ContentPresenter Content="{TemplateBinding Content}" />-->
              <!-- NOTE-MT shifted FontFamily/FontSize from ToolTip -->
              <ContentControl Grid.Row="0" FontSize="{x:Static shared:FontDefaults.ChartFontSize}" FontFamily="{x:Static shared:FontDefaults.ChartFontFamily}" >
                <ContentControl.Resources>
                  <Style TargetType="ContentControl">
                    <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
                  </Style>
                </ContentControl.Resources>
                <ContentPresenter Content="{TemplateBinding Content}" />
              </ContentControl>
            </ContentControl>
            <Polygon x:Name="PART_POINTER"
                     Fill="{StaticResource TooltipBackgroundBrush}"
                     StrokeLineJoin="Bevel"
                     Visibility="{TemplateBinding PointerVisibility}">
            </Polygon>
            <Polyline x:Name="PART_POINTEROUTLINE"
                      StrokeLineJoin="Bevel"
                      Stroke="{StaticResource TooltipBorderBrush}"
                      StrokeThickness="1"
                      Visibility="{TemplateBinding PointerVisibility}">
            </Polyline>
          </Canvas>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- ******************* ItemToolTipLayer Style ******************* -->
  <Style TargetType="local:ItemToolTipLayer" BasedOn="{StaticResource Series}" >
    <Setter Property="Brush" Value="{StaticResource TooltipLayerBrush}" />
    <Setter Property="Outline" Value="{StaticResource TooltipLayerOutline}" />
    <!--<Setter Property="LegendItemBadgeTemplate" Value="{StaticResource LegendBadgeTemplate_CircleShape_MatchSeries}"/>-->
    <Setter Property="ToolTipStyle" Value="{StaticResource ToolTipNoBadgeStyle}" />
    <Setter Property="PointerToolTipStyle" Value="{StaticResource PointerToolTipStyle}" />
  </Style>

  <!-- ******************* CategoryToolTipLayer Style ******************* -->
  <Style TargetType="local:CategoryToolTipLayer" BasedOn="{StaticResource Series}" >
    <Setter Property="Brush" Value="{StaticResource TooltipLayerBrush}" />
    <Setter Property="Outline" Value="{StaticResource TooltipLayerOutline}" />
    <!--<Setter Property="LegendItemBadgeTemplate" Value="{StaticResource LegendBadgeTemplate_CircleShape_MatchSeries}"/>-->
    <Setter Property="ToolTipStyle" Value="{StaticResource ToolTipNoBadgeStyle}" />
    <Setter Property="PointerToolTipStyle" Value="{StaticResource PointerToolTipStyle}" />
  </Style>

<!-- ******************* DataTooltipLayer Style ******************* -->
    <Style TargetType="local:DataToolTipLayer" BasedOn="{StaticResource Series}" >
        <Setter Property="Brush" Value="{StaticResource TooltipLayerBrush}" />
        <Setter Property="Outline" Value="{StaticResource TooltipLayerOutline}" />
        <!--<Setter Property="LegendItemBadgeTemplate" Value="{StaticResource LegendBadgeTemplate_CircleShape_MatchSeries}"/>-->
        <Setter Property="ToolTipStyle" Value="{StaticResource ToolTipNoBadgeStyle}" />
        <Setter Property="PointerToolTipStyle" Value="{StaticResource PointerToolTipStyle}" />
    </Style>

    <!-- ******************* PieChartBase Style ******************* -->
  <Style TargetType="local:PieChartBase" x:Key="PieChartBase">
    <Setter Property="Brushes" Value="{StaticResource ChartBrushes}"/>
    <Setter Property="ToolTipStyle" Value="{StaticResource PieChartToolTipStyle}"/>
    <Setter Property="LegendItemTemplate" Value="{StaticResource PieLegendItemTemplate}"/>
    <Setter Property="LegendItemBadgeTemplate" Value="{StaticResource PieChartLegendItemBadgeTemplate}"/>
    <Setter Property="MinWidth" Value="50"/>
    <Setter Property="MinHeight" Value="50"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="local:PieChartBase">
          <Grid Name="RootLayout" UseLayoutRounding="False">
            <Border BorderThickness="{TemplateBinding BorderThickness}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    Background="{TemplateBinding Background}">
              <Grid Margin="2" >
                <ContentPresenter x:Name="ContentPresenter" Margin="{TemplateBinding Padding}" />
              </Grid>
            </Border>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style TargetType="local:Slice" x:Key="SelectedSliceStyle">
    <Setter Property="StrokeThickness" Value="6"/>
    <Setter Property="BorderBrush" Value="{StaticResource SliceSelectedBorderBrush}"/>
  </Style>

  <Style TargetType="local:XamPieChart" BasedOn="{StaticResource PieChartBase}">
    <Setter Property="SelectedStyle" Value="{StaticResource SelectedSliceStyle}"/>
  </Style>

  <Style TargetType="local:Arc" BasedOn="{StaticResource PieChartBase}">
    <Setter Property="MinWidth" Value="10"/>
    <Setter Property="MinHeight" Value="10"/>
    <Setter Property="SelectionMode" Value="Manual"/>
  </Style>

  <!-- ******************* XamDoughnutChart Style ******************* -->
  <Style TargetType="local:XamDoughnutChart">
    <!--<Setter Property="Brushes" Value="{StaticResource ChartBrushes}"/>
        <Setter Property="ToolTipStyle" Value="{StaticResource PieChartToolTipStyle}"/>
        <Setter Property="LegendItemTemplate" Value="{StaticResource PieLegendItemTemplate}"/>
        <Setter Property="LegendItemBadgeTemplate" Value="{StaticResource PieChartLegendItemBadgeTemplate}"/>-->
    <Setter Property="MinWidth" Value="50"/>
    <Setter Property="MinHeight" Value="50"/>
    <Setter Property="CenterDataTemplate">
      <Setter.Value>
        <DataTemplate>
          <ContentControl Content="{Binding}" VerticalAlignment="Center" HorizontalAlignment="Center"/>
        </DataTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="local:XamDoughnutChart">
          <Grid Name="RootLayout" UseLayoutRounding="False">
            <Border BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}"  Background="{TemplateBinding Background}">
              <Grid Margin="2" >
                <ContentPresenter x:Name="ContentPresenter" Margin="{TemplateBinding Padding}" />
              </Grid>
            </Border>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- ******************* XamFunnelChart Style ******************* -->
  <Style TargetType="local:XamFunnelChart">
    <Setter Property="Brushes" Value="{StaticResource ChartBrushes}"/>
    <Setter Property="Outlines" Value="{StaticResource ChartOutlines}"/>
    <Setter Property="MinWidth" Value="200" />
    <Setter Property="MinHeight" Value="200" />
    <Setter Property="LegendItemTemplate" Value="{StaticResource FunnelChartLegendItemTemplate}"/>
    <Setter Property="LegendItemBadgeTemplate" Value="{StaticResource FunnelChartLegendItemBadgeTemplate}"/>
    <Setter Property="SelectedSliceStyle">
      <Setter.Value>
        <Style TargetType="local:XamFunnelSlice">
          <Setter Property="StrokeThickness" Value="3" />
        </Style>
      </Setter.Value>
    </Setter>
    <Setter Property="UnselectedSliceStyle">
      <Setter.Value>
        <Style TargetType="local:XamFunnelSlice">
          <Setter Property="Opacity" Value=".4" />
        </Style>
      </Setter.Value>
    </Setter>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="local:XamFunnelChart">
          <Border Background="{TemplateBinding Background}"
                  BorderBrush="{TemplateBinding BorderBrush}"
                  BorderThickness="{TemplateBinding BorderThickness}">
            <local:XamFunnelView x:Name="PART_VIEW" />
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- ******************* XamFunnelView Style ******************* -->
  <Style TargetType="local:XamFunnelView">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="local:XamFunnelView">
          <Border Background="{TemplateBinding Background}"
                  BorderBrush="{TemplateBinding BorderBrush}"
                  BorderThickness="{TemplateBinding BorderThickness}">
            <Grid x:Name="PART_ROOT">
              <Grid x:Name="PART_PLOTAREA" Background="Transparent">
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="Auto" />
                  <ColumnDefinition />
                  <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <Grid x:Name="PART_LEFTPANEL" Grid.Column="0">
                  <Canvas x:Name="PART_LEFTOUTERLABELS" />
                </Grid>
                <Canvas x:Name="PART_SLICEAREA" Grid.Column="1" />
                <Grid x:Name="PART_RIGHTPANEL" Grid.Column="2">
                  <Canvas x:Name="PART_RIGHTOUTERLABELS" />
                </Grid>
                <Popup x:Name="PART_TOOLTIP" IsOpen="False">
                  <Border Background="{StaticResource TooltipBackgroundBrush}"
                          BorderBrush="{StaticResource TooltipBorderBrush}"
                          BorderThickness="{StaticResource TooltipBorderThickness}"
                          IsHitTestVisible="False" Padding="3">
                    <ContentControl x:Name="PART_TOOLTIPCONTENT" />
                  </Border>
                </Popup>
              </Grid>
            </Grid>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- ******************* XamFunnelSlice Style ******************* -->
  <Style TargetType="local:XamFunnelSlice">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="local:XamFunnelSlice">
          <Border Background="{TemplateBinding Background}"
                  BorderBrush="{TemplateBinding BorderBrush}"
                  BorderThickness="{TemplateBinding BorderThickness}">
            <Grid >
              <Polygon Points="{Binding Points}"                       
                       Fill="{TemplateBinding ActualFill}"
                       Stroke="{TemplateBinding ActualOutline}"
                       StrokeThickness="{TemplateBinding StrokeThickness}"/>
                
              <!--Fill="{TemplateBinding ActualHighlightFill}"-->
              <Polygon Points="{Binding HighlightPoints}"
                       Fill="{TemplateBinding ActualHighlightFill}"
                       Stroke="{TemplateBinding ActualHighlightOutline}"
                       StrokeThickness="{TemplateBinding StrokeThickness}"
                       Visibility="{TemplateBinding HighlightVisibility}"/>
              <Canvas>
                <ContentPresenter x:Name="PART_LABEL"
                  Visibility="{TemplateBinding LabelVisibility}">
                </ContentPresenter>
              </Canvas>
            </Grid>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- ******************* RING SERIES ******************* -->
  <Style TargetType="local:RingSeries">
    <Setter Property="ToolTipStyle" Value="{StaticResource PieChartToolTipStyle}"/>
    <Setter Property="Brushes" Value="{StaticResource ChartBrushes}"/>
    <Setter Property="LegendItemTemplate" Value="{StaticResource PieLegendItemTemplate}"/>
    <Setter Property="LegendItemBadgeTemplate" Value="{StaticResource PieChartLegendItemBadgeTemplate}"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="local:RingSeries">
          <Canvas x:Name="RootCanvas">
          </Canvas>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style TargetType="local:HierarchicalRingSeries">
    <Setter Property="ToolTipStyle" Value="{StaticResource PieChartToolTipStyle}"/>
    <Setter Property="Brushes" Value="{StaticResource ChartBrushes}"/>
    <Setter Property="LegendItemTemplate" Value="{StaticResource PieLegendItemTemplate}"/>
    <Setter Property="LegendItemBadgeTemplate" Value="{StaticResource PieChartLegendItemBadgeTemplate}"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="local:HierarchicalRingSeries">
          <Canvas x:Name="RootCanvas">
          </Canvas>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style TargetType="local:RingControl">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="local:RingControl">
          <Canvas x:Name="RootCanvas">
          </Canvas>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- ******************* Category Chart Style ******************* -->
  <Style TargetType="local:XamCategoryChart">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="local:XamCategoryChart">
          <local:XamDataChart x:Name="DataChart" Background="{TemplateBinding Background}" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="Brushes" Value="{StaticResource ChartBrushes}" />
    <Setter Property="Outlines" Value="{StaticResource ChartOutlines}" />
    <Setter Property="NegativeBrushes" Value="{StaticResource ChartNegativeBrushes}" />
    <Setter Property="NegativeOutlines" Value="{StaticResource ChartNegativeBrushes}" />
    <Setter Property="MarkerBrushes" Value="{StaticResource MarkerBrushes}" />
    <Setter Property="MarkerOutlines" Value="{StaticResource MarkerOutlines}" />
    <Setter Property="YAxisMajorStroke" Value="{x:Static local:AxisDefaults.Axis_MajorBrush}" />
    <Setter Property="YAxisTickLength" Value="0" />
    <Setter Property="YAxisLabelFontSize" Value="{x:Static shared:FontDefaults.ChartFontSize}" />
    <Setter Property="YAxisLabelFontFamily" Value="{x:Static shared:FontDefaults.ChartFontFamily}" />
    <Setter Property="YAxisLabelMargin" Value="{x:Static shared:FontDefaults.ChartYAxisLabelsMargin}" />
    <Setter Property="YAxisLabelForeground" Value="{StaticResource AxisLabelsBrush}" />
    <Setter Property="YAxisTitleFontSize" Value="{x:Static shared:FontDefaults.ChartFontSize}" />
    <Setter Property="YAxisTitleFontFamily" Value="{x:Static shared:FontDefaults.ChartFontFamily}" />
    <Setter Property="YAxisTitleAngle" Value="-90" />
    <Setter Property="YAxisTitleForeground" Value="{StaticResource AxisTitleBrush}" />
    <Setter Property="XAxisLabelFontSize" Value="{x:Static shared:FontDefaults.ChartFontSize}" />
    <Setter Property="XAxisLabelFontFamily" Value="{x:Static shared:FontDefaults.ChartFontFamily}" />
    <Setter Property="XAxisLabelMargin" Value="{x:Static shared:FontDefaults.ChartXAxisLabelsMargin}" />
    <Setter Property="XAxisLabelForeground" Value="{StaticResource AxisLabelsBrush}" />
    <Setter Property="XAxisTitleFontSize" Value="{x:Static shared:FontDefaults.ChartFontSize}" />
    <Setter Property="XAxisTitleFontFamily" Value="{x:Static shared:FontDefaults.ChartFontFamily}" />
    <Setter Property="XAxisTitleAngle" Value="0" />
    <Setter Property="XAxisTitleForeground" Value="{StaticResource AxisTitleBrush}" />

    <Setter Property="XAxisTickLength"          Value="{x:Static local:AxisDefaults.CategoryAxis_TickLength}" />
    <Setter Property="XAxisTickStrokeThickness" Value="{x:Static local:AxisDefaults.Axis_TickStroke}" />
    <Setter Property="XAxisTickStroke"          Value="{x:Static local:AxisDefaults.Axis_TickBrush}" />
    <Setter Property="XAxisStroke"              Value="{x:Static local:AxisDefaults.Axis_LineBrush}" />
    <Setter Property="XAxisMajorStroke" Value="{x:Null}" />

    <Setter Property="YAxisTickStrokeThickness" Value="{x:Static local:AxisDefaults.Axis_TickStroke}" />
    <Setter Property="YAxisTickStroke" Value="{x:Static local:AxisDefaults.Axis_TickBrush}" />
    <Setter Property="YAxisStroke" Value="{x:Null}" />
    <Setter Property="YAxisStrokeThickness" Value="{x:Static local:AxisDefaults.Axis_LineStroke}" />
    <Setter Property="YAxisMajorStroke" Value="{x:Null}" />
    <Setter Property="YAxisMajorStrokeThickness" Value="{x:Static local:AxisDefaults.Axis_MajorStroke}" />
    <Setter Property="YAxisMinorStrokeThickness" Value="{x:Static local:AxisDefaults.Axis_MinorStroke}" />

    <Setter Property="Background" Value="{StaticResource ChartBackgroundBrush}" />
    <Setter Property="TitleForeground" Value="{StaticResource AxisTitleBrush}" />
    <Setter Property="TitleFontSize" Value="{StaticResource ChartTitleFontSize}" />
    <Setter Property="TitleFontStyle" Value="{x:Static shared:FontDefaults.ChartFontStyle}" />
    <Setter Property="TitleFontFamily" Value="{x:Static shared:FontDefaults.ChartFontFamily}" />
    <Setter Property="TitleAlignment" Value="Center" />
    <Setter Property="TitleMargin" Value="0 0 0 5" />
    <Setter Property="SubtitleForeground" Value="{StaticResource AxisTitleBrush}" />
    <Setter Property="SubtitleFontSize" Value="{StaticResource ChartSmallFontSize}" />
    <Setter Property="SubtitleFontStyle" Value="{x:Static shared:FontDefaults.ChartFontStyle}" />
    <Setter Property="SubtitleFontFamily" Value="{x:Static shared:FontDefaults.ChartFontFamily}" />
    <Setter Property="SubtitleAlignment" Value="Center" />
    <Setter Property="SubtitleMargin" Value="0 0 0 5" />
    <Setter Property="Margin" Value="2" />
    <Setter Property="Padding" Value="2" />
    <!--<Setter Property="Resolution" Value="1" />-->
    <Setter Property="ToolTipStyle" Value="{StaticResource ToolTipStyle}" />
    
    <Setter Property="IsTransitionInEnabled" Value="True" />
    <Setter Property="CrosshairsAnnotationEnabled" Value="True" />
    <Setter Property="CrosshairsDisplayMode" Value="Auto" />
    <Setter Property="CrosshairsSnapToData" Value="True" />
    <Setter Property="CrosshairsLineThickness"             Value="{x:Static local:Defaults.CrosshairLineThickness}"/>
    <Setter Property="CrosshairsLineVerticalStroke"        Value="{x:Static local:Defaults.CrosshairLineBrush}"/>
    <!--<Setter Property="CrosshairsLineHorizontalStroke"      Value="{x:Static local:Defaults.CrosshairLineBrush}"/>-->
    <Setter Property="CrosshairsAnnotationXAxisBackground" Value="{x:Static local:Defaults.CrosshairXAxisAnnotationBackground}"/>
    <Setter Property="CrosshairsAnnotationXAxisTextColor"  Value="{x:Static local:Defaults.CrosshairXAxisAnnotationTextColor}"/>
    
  </Style>
    

  <!-- ************ Shape Styles for Scatter(*)Series ******************* -->
  <Style TargetType="local:ShapeControl" x:Key="ShapeStyle_ScatterControlSeries"> 
    <!-- TODO add ScatterControlSeries.ShapeThickness property and bind it in this template 
      because Series.Thickness (double) does not affect BorderThickness property: --> 
    <Setter Property="BorderThickness" Value="1 1 1 1" />  
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="local:ShapeControl">
          <ContentControl>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="MouseOver">
                  <Storyboard>
                    <DoubleAnimation To="0.75"
                                     Duration="0:00:00.25"
                                     Storyboard.TargetName="RootElement"
                                     Storyboard.TargetProperty="(UIElement.Opacity)"
                                     AutoReverse="False" />
                    <DoubleAnimation To="3"
                                     Duration="0:00:00.25"
                                     Storyboard.TargetName="RootElement"
                                     Storyboard.TargetProperty="StrokeThickness"
                                     AutoReverse="True" />
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Normal" />
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <!-- [DN Apr 9 2012 Data={TemplateBinding Data} will throw inexplicable 
            exceptions in Silverlight, so instead we use DataContext={TemplateBinding Data} and Data={Binding} -->
            <Path x:Name="RootElement"
                  StrokeLineJoin="Round"
                  Fill="{TemplateBinding Background}"
                  Stroke="{TemplateBinding BorderBrush}"
                  StrokeThickness="{TemplateBinding BorderThickness}" />
          </ContentControl>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>    
  <Style TargetType="local:ShapeControl" BasedOn="{StaticResource ShapeStyle_ScatterControlSeries}"/>
  
  <!--<Style TargetType="Path" x:Key="ShapeStyle_ScatterPolylineSeries" >
      <Setter Property="Fill" Value="Transparent" />
      <Setter Property="Stroke" Value="{Binding Series.ActualOutline}" /> 
      <Setter Property="StrokeThickness" Value="{Binding Series.Thickness}" />
  </Style>-->
  <!--<Style TargetType="Path" x:Key="ShapeStyle_ScatterPolygonSeries" >
      <Setter Property="Fill" Value="{Binding Series.ActualBrush}" />
      <Setter Property="Stroke" Value="{StaticResource SeriesPolygonStroke}" />
      <Setter Property="StrokeThickness" Value="{Binding Series.Thickness}" />
  </Style>-->
  
  <!-- ************ Styles for Scatter(*)Series ******************* -->
  
  <!-- Base style for Scatter Series without background image -->
  <Style x:Key="ScatterBaseSeriesStyle" TargetType="local:Series">
      <Setter Property="MinWidth" Value="8" />
      <Setter Property="MinHeight" Value="8" />
      <!-- do not set a default value for Outline, or else the XamDataChart.Outlines property will be ineffective. -->
      <Setter Property="LegendItemTemplate" Value="{StaticResource LegendItemTemplate}" />
      <Setter Property="Template">
          <Setter.Value>
              <ControlTemplate TargetType="local:Series">
                  <Grid>
                      <Canvas x:Name="RootCanvas" />
                  </Grid>
              </ControlTemplate>
          </Setter.Value>
      </Setter>
  </Style>
  <!-- Base style for Scatter Series with background image -->
  <Style x:Key="ScatterImagedSeriesStyle" TargetType="local:Series" BasedOn="{StaticResource ScatterBaseSeriesStyle}">
      <Setter Property="Template">
          <Setter.Value>
              <ControlTemplate TargetType="local:Series">
                  <Grid>
                      <Image x:Name="RootImage" />
                      <Canvas x:Name="RootCanvas" />
                  </Grid>
              </ControlTemplate>
          </Setter.Value>
      </Setter>
  </Style>
  
  <!--NOTE: Series.Brush property defaults to one of the Brushes of DataChart so do not set it -->
  
  <!-- Style for Scatter Area Series -->
  <Style TargetType="local:ScatterAreaSeries"  BasedOn="{StaticResource ScatterImagedSeriesStyle}" >
      <Setter Property="LegendItemTemplate" Value="{StaticResource LegendItemTemplate}" />
  </Style>
  <!-- Style for Scatter Contour Series -->
  <Style TargetType="local:ScatterContourSeries"  BasedOn="{StaticResource ScatterBaseSeriesStyle}">
      <Setter Property="LegendItemTemplate" Value="{StaticResource LegendItemTemplate}" />
  </Style>
  
  <!-- Style for Scatter Polyline Series -->
  <Style TargetType="local:ScatterPolylineSeries"     BasedOn="{StaticResource ScatterBaseSeriesStyle}">
      <Setter Property="Thickness"     Value="{x:Static local:Defaults.ScatterPolylineSeries_Thickness}" />
  </Style>
  
  <!-- Style for Scatter Control Series -->
  <Style TargetType="local:ScatterControlSeries" BasedOn="{StaticResource ScatterBaseSeriesStyle}" >
      <!--<Setter Property="Outline"       Value="{x:Static local:Defaults.ScatterPolygonSeries_Outline}" />-->
      <Setter Property="Thickness"     Value="{x:Static local:Defaults.ScatterPolygonSeries_Thickness}" />
  </Style>
  <!-- Style for Scatter Polygon Series-->
  <Style TargetType="local:ScatterPolygonSeries" BasedOn="{StaticResource ScatterBaseSeriesStyle}" >
      <!--<Setter Property="Outline"         Value="{x:Static local:Defaults.ScatterPolygonSeries_Outline}" />-->
      <Setter Property="Thickness"       Value="{x:Static local:Defaults.ScatterPolygonSeries_Thickness}" />
      <Setter Property="MarkerOutline"   Value="{x:Static local:Defaults.ScatterPolygonSeries_MarkerOutline}" />
      <!--<Setter Property="MarkerBrush"     Value="{x:Static local:Defaults.ScatterPolygonSeries_MarkerBrush}" />-->
      <Setter Property="MarkerThickness" Value="{x:Static local:Defaults.ScatterPolygonSeries_MarkerThickness}" />
      <Setter Property="MarkerType"      Value="{x:Static local:Defaults.ScatterPolygonSeries_MarkerType}" />
      <Setter Property="MarkerFillMode"  Value="{x:Static local:Defaults.ScatterPolygonSeries_MarkerFillMode}" />
  </Style>
 
  <SolidColorBrush x:Key="ChartTitleBrush" Color="{StaticResource Color_013}" />
  <SolidColorBrush x:Key="ChartSubtitleBrush" Color="{StaticResource Color_013}" />
  
  <!-- *************** DomainChart Style shared across all chart wrappers ********* -->
  <Style TargetType="local:XamDomainChart" x:Key="XamDomainChartStyle">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="local:XamDomainChart">
          <local:XamDataChart x:Name="DataChart" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="CrosshairsAnnotationEnabled" Value="True" />
    <Setter Property="CrosshairsDisplayMode" Value="Auto" />
    <Setter Property="CrosshairsSnapToData" Value="False" />
    <Setter Property="CrosshairsLineThickness" Value="{x:Static local:Defaults.CrosshairLineThickness}"/>
    <!--<Setter Property="CrosshairsLineVerticalStroke" Value="{x:Static local:Defaults.CrosshairLineBrush}"/>-->
    <!--<Setter Property="CrosshairsLineHorizontalStroke" Value="{x:Static local:Defaults.CrosshairLineBrush}"/>-->
    <!--<Setter Property="CrosshairsAnnotationXAxisBackground" Value="{x:Static local:Defaults.CrosshairXAxisAnnotationBackground}"/>-->
    <!--<Setter Property="CrosshairsAnnotationXAxisTextColor"  Value="{x:Static local:Defaults.CrosshairXAxisAnnotationTextColor}"/>-->
    <!-- uncomment to override default values set in DomainChart.Properties.cs for these props:
    <Setter Property="CrosshairsAnnotationYAxisPrecision"  Value="-1"/>
    <Setter Property="CrosshairsAnnotationXAxisPrecision"  Value="-1"/>
    <Setter Property="FinalValueAnnotationsPrecision"      Value="-1"/>-->

    <Setter Property="Background" Value="{StaticResource ChartBackgroundBrush}" />
    <Setter Property="Brushes" Value="{StaticResource ChartBrushes}" />
    <Setter Property="Outlines" Value="{StaticResource ChartOutlines}" />
    <Setter Property="MarkerBrushes" Value="{StaticResource MarkerBrushes}"/>
    <Setter Property="MarkerOutlines" Value="{StaticResource MarkerOutlines}" />
    <Setter Property="ToolTipStyle" Value="{StaticResource ToolTipStyle}" />
    <Setter Property="TitleMargin" Value="0 0 0 5" />
    <Setter Property="TitleAlignment" Value="Center" />
    <Setter Property="TitleFontStyle" Value="{x:Static shared:FontDefaults.ChartFontStyle}" />
    <Setter Property="TitleFontStretch" Value="{x:Static shared:FontDefaults.ChartFontStretch}" />
    <Setter Property="TitleFontWeight" Value="{x:Static shared:FontDefaults.ChartFontWeight}" />
    <Setter Property="TitleFontSize" Value="{StaticResource ChartTitleFontSize}" />
    <Setter Property="TitleFontFamily" Value="{x:Static shared:FontDefaults.ChartFontFamily}" />
    <Setter Property="TitleForeground" Value="{StaticResource ChartTitleBrush}" />
    <Setter Property="SubtitleMargin" Value="0 0 0 5" />
    <Setter Property="SubtitleAlignment" Value="Center" />
    <Setter Property="SubtitleFontStyle" Value="{x:Static shared:FontDefaults.ChartFontStyle}" />
    <Setter Property="SubtitleFontStretch" Value="{x:Static shared:FontDefaults.ChartFontStretch}" />
    <Setter Property="SubtitleFontWeight" Value="{x:Static shared:FontDefaults.ChartFontWeight}" />
    <Setter Property="SubtitleFontSize" Value="{StaticResource ChartSmallFontSize}" />
    <Setter Property="SubtitleFontFamily" Value="{x:Static shared:FontDefaults.ChartFontFamily}" />
    <Setter Property="SubtitleForeground" Value="{StaticResource ChartSubtitleBrush}" />

    <Setter Property="Margin" Value="2" />
    <Setter Property="Padding" Value="2" />
    <!--<Setter Property="Resolution" Value="1" />-->
    
    <Setter Property="IsHorizontalZoomEnabled" Value="True" />
    <Setter Property="IsVerticalZoomEnabled" Value="True" />
  </Style>
  
  <!-- *************** XYChart Style ******************* -->
  <Style TargetType="local:XamXYChart" BasedOn="{StaticResource XamDomainChartStyle}" x:Key="XamXYChartStyle"  >
    <Setter Property="XAxisTickStrokeThickness" Value="{x:Static local:AxisDefaults.Axis_TickStroke}" />
    <Setter Property="YAxisTickStrokeThickness" Value="{x:Static local:AxisDefaults.Axis_TickStroke}" />
    <Setter Property="XAxisTickStroke" Value="{x:Static local:AxisDefaults.Axis_TickBrush}" />
    <Setter Property="YAxisTickStroke" Value="{x:Static local:AxisDefaults.Axis_TickBrush}" />
    <Setter Property="YAxisTickLength" Value="{x:Static local:AxisDefaults.Axis_TickLength}" />
    <Setter Property="XAxisTickLength" Value="{x:Static local:AxisDefaults.Axis_TickLength}" />

    <Setter Property="XAxisStroke" Value="{x:Static local:AxisDefaults.Axis_LineBrush}" />
    <Setter Property="YAxisStroke" Value="{x:Static local:AxisDefaults.Axis_LineBrush}" />
    <Setter Property="XAxisStrokeThickness" Value="{x:Static local:AxisDefaults.Axis_LineStroke}" />
    <Setter Property="YAxisStrokeThickness" Value="{x:Static local:AxisDefaults.Axis_LineStroke}" />

    <Setter Property="XAxisMajorStroke" Value="{x:Static local:AxisDefaults.Axis_MajorBrush}" />
    <Setter Property="YAxisMajorStroke" Value="{x:Static local:AxisDefaults.Axis_MajorBrush}" />
    <Setter Property="XAxisMajorStrokeThickness" Value="{x:Static local:AxisDefaults.Axis_MajorStroke}" />
    <Setter Property="YAxisMajorStrokeThickness" Value="{x:Static local:AxisDefaults.Axis_MajorStroke}" />

    <Setter Property="XAxisMinorStrokeThickness" Value="{x:Static local:AxisDefaults.Axis_MinorStroke}" />
    <Setter Property="YAxisMinorStrokeThickness" Value="{x:Static local:AxisDefaults.Axis_MinorStroke}" />
    
    <Setter Property="YAxisLabelFontSize" Value="{x:Static shared:FontDefaults.ChartFontSize}" />
    <Setter Property="XAxisLabelFontSize" Value="{x:Static shared:FontDefaults.ChartFontSize}" />
    <Setter Property="YAxisLabelFontFamily" Value="{x:Static shared:FontDefaults.ChartFontFamily}" />
    <Setter Property="XAxisLabelFontFamily" Value="{x:Static shared:FontDefaults.ChartFontFamily}" />
    <Setter Property="YAxisLabelMargin" Value="{x:Static shared:FontDefaults.ChartYAxisLabelsMargin}" />
    <Setter Property="XAxisLabelMargin" Value="{x:Static shared:FontDefaults.ChartXAxisLabelsMargin}" />
    <Setter Property="YAxisLabelForeground" Value="{StaticResource AxisLabelsBrush}" />
    <Setter Property="XAxisLabelForeground" Value="{StaticResource AxisLabelsBrush}" />
    
    <Setter Property="YAxisTitleFontSize" Value="{x:Static shared:FontDefaults.ChartFontSize}" />
    <Setter Property="XAxisTitleFontSize" Value="{x:Static shared:FontDefaults.ChartFontSize}" />
    <Setter Property="YAxisTitleFontFamily" Value="{x:Static shared:FontDefaults.ChartFontFamily}" />
    <Setter Property="XAxisTitleFontFamily" Value="{x:Static shared:FontDefaults.ChartFontFamily}" />
    <Setter Property="YAxisTitleAngle" Value="-90" />
    <Setter Property="XAxisTitleAngle" Value="0" />
    <Setter Property="YAxisTitleForeground" Value="{StaticResource AxisTitleBrush}" />
    <Setter Property="XAxisTitleForeground" Value="{StaticResource AxisTitleBrush}" />
  </Style>
  <Style x:Key="{ComponentResourceKey {x:Type local:XamXYChart}, XYChartStyle}" TargetType="{x:Type local:XamXYChart}" BasedOn="{StaticResource XamXYChartStyle}" />
  
  <!-- *************** CartesianChart Style ******************* -->
  <Style TargetType="local:XamCartesianChart" BasedOn="{StaticResource XamXYChartStyle}" x:Key="XamCartesianChartStyle">
    <Setter Property="XAxisIsLogarithmic" Value="False" />
    <Setter Property="YAxisIsLogarithmic" Value="False" />
    <Setter Property="XAxisLogarithmBase" Value="10" />
    <Setter Property="YAxisLogarithmBase" Value="10" />
    <Setter Property="YAxisTickLength"          Value="{x:Static local:AxisDefaults.CategoryAxis_TickLength}" />
    <Setter Property="YAxisTickStrokeThickness" Value="{x:Static local:AxisDefaults.Axis_TickStroke}" />
    <Setter Property="YAxisTickStroke"          Value="{x:Static local:AxisDefaults.Axis_TickBrush}" />
    <Setter Property="XAxisTickLength"          Value="{x:Static local:AxisDefaults.CategoryAxis_TickLength}" />
    <Setter Property="XAxisTickStrokeThickness" Value="{x:Static local:AxisDefaults.Axis_TickStroke}" />
    <Setter Property="XAxisTickStroke"          Value="{x:Static local:AxisDefaults.Axis_TickBrush}" />
    
  </Style>

  <!-- *************** ShapeChart Style ******************* -->
  <Style TargetType="local:XamShapeChart" BasedOn="{StaticResource XamCartesianChartStyle}">
    <Setter Property="ChartType" Value="Auto" /> 
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="local:XamShapeChart">
          <local:XamDataChart x:Name="DataChart" Background="{TemplateBinding Background}" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    
    <Setter Property="CrosshairsAnnotationEnabled" Value="True" />
    <Setter Property="CrosshairsDisplayMode" Value="Auto" />
    <Setter Property="CrosshairsSnapToData" Value="False" />
    <Setter Property="CrosshairsLineThickness" Value="{x:Static local:Defaults.CrosshairLineThickness}"/>
    <!--<Setter Property="CrosshairsLineVerticalStroke" Value="{x:Static local:Defaults.CrosshairLineBrush}"/>-->
    <!--<Setter Property="CrosshairsLineHorizontalStroke" Value="{x:Static local:Defaults.CrosshairLineBrush}"/>-->
    <!--<Setter Property="CrosshairsAnnotationXAxisBackground" Value="{x:Static local:Defaults.CrosshairXAxisAnnotationBackground}"/>-->
    <!--<Setter Property="CrosshairsAnnotationXAxisTextColor"  Value="{x:Static local:Defaults.CrosshairXAxisAnnotationTextColor}"/>-->
  </Style>
  
  <!-- *************** ScatterChart Style ******************* -->
  <Style TargetType="local:XamScatterChart" BasedOn="{StaticResource XamCartesianChartStyle}">
    <Setter Property="ChartType" Value="Auto" /> 
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="local:XamScatterChart">
          <local:XamDataChart x:Name="DataChart" Background="{TemplateBinding Background}" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    
    <Setter Property="CrosshairsAnnotationEnabled" Value="True" />
    <Setter Property="CrosshairsDisplayMode" Value="Auto" />
    <Setter Property="CrosshairsSnapToData" Value="False" />
    <Setter Property="CrosshairsLineThickness" Value="{x:Static local:Defaults.CrosshairLineThickness}"/>
    <!--<Setter Property="CrosshairsLineVerticalStroke" Value="{x:Static local:Defaults.CrosshairLineBrush}"/>-->
    <!--<Setter Property="CrosshairsLineHorizontalStroke" Value="{x:Static local:Defaults.CrosshairLineBrush}"/>-->
    <!--<Setter Property="CrosshairsAnnotationXAxisBackground" Value="{x:Static local:Defaults.CrosshairXAxisAnnotationBackground}"/>-->
    <!--<Setter Property="CrosshairsAnnotationXAxisTextColor"  Value="{x:Static local:Defaults.CrosshairXAxisAnnotationTextColor}"/>-->
  </Style>
  
  <Style TargetType="local:TimeXAxis" BasedOn="{StaticResource XAxis}">
    <Setter Property="TickLength" Value="{x:Static local:AxisDefaults.CategoryAxis_TickLength}" />
  </Style>

  <Style TargetType="local:FinancialLegend">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="local:FinancialLegend">
          <WrapPanel x:Name="panel" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  
</ResourceDictionary>