
<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:igBasePrim="http://schemas.infragistics.com/xaml/primitives"
	xmlns:igPrim="http://schemas.infragistics.com/xaml/primitives"
	xmlns:igMenu="http://schemas.infragistics.com/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
    mc:Ignorable="d">



    <!-- ================================================================================================ -->
    <!--                                XamMenu Resources                                              -->
    <!-- ================================================================================================ -->
    <LinearGradientBrush x:Key="MenuBackground" StartPoint="0,0" EndPoint="0,1">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="#FFFFFFFF" Offset="0" />
            <GradientStop Color="#FFF2F4F5" Offset="0.48" />
            <GradientStop Color="#FFCFD5DA" Offset="1" />
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="MenuPopupOuterBorderBrush" StartPoint="0.5,0" EndPoint="0.5,0.1">
        <LinearGradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="#FFa2adb8" Offset="0"/>
                <GradientStop Color="#FF8498a8" Offset="0.3790000081062317"/>
                <GradientStop Color="#FF718496" Offset="0.3799999952316284"/>
                <GradientStop Color="#FF617583" Offset="1"/>
            </GradientStopCollection>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>

    <!--<SolidColorBrush x:Key="MenuItemMouseOver" Color="#FFCAE4ED" />-->
    <SolidColorBrush x:Key="MenuItemMouseOver" Color="#FFCAE4ED" />
    <SolidColorBrush x:Key="MenuItemMouseOverBorder" Color="#FF6DBDD1" />
    <SolidColorBrush x:Key="MenuItemHighlighted" Color="#FFCAE4ED"/>
    <SolidColorBrush x:Key="MenuItemHighlightedBorder" Color="#FF6DBDD1"/>

    <SolidColorBrush x:Key="MenuItemVerticalBrush" Color="#FFF2F4F5" />
    <SolidColorBrush x:Key="MenuItemBackgroundBrush" Color="#FFFFFFFF" />
    <SolidColorBrush x:Key="GlyphBrush" Color="#444" />

    <!-- ================================================================================================ -->
    <!--                                IconContentControl Style                                          -->
    <!-- ================================================================================================ -->
    <Style TargetType="igPrim:IconContentControl">
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="igPrim:IconContentControl">
                    <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!-- ================================================================================================ -->
    <!--                                XamHeaderedItemsControl Style                                  -->
    <!-- ================================================================================================ -->
    <Style TargetType="igPrim:XamHeaderedItemsControl">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="igPrim:XamHeaderedItemsControl">
                    <Grid x:Name="Root">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>
                        <ContentControl 
                          x:Name="HeaderContent"
                          Content="{TemplateBinding Header}"
                          ContentTemplate="{TemplateBinding HeaderTemplate}" />
                        <ItemsPresenter
                          x:Name="Items"
                          Grid.Row="1" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- ================================================================================================ -->
    <!--                                    XamMenuSeparator Style                                         -->
    <!-- ================================================================================================ -->
    <Style TargetType="igMenu:XamMenuSeparator">
        <Setter Property="Background" Value="#FF9AA7B3"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate  TargetType="igMenu:XamMenuSeparator">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="OrientationState">

                                <VisualState x:Name="Horizontal"/>

                                <VisualState x:Name="Vertical">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HorizontalContainer" 
                                                                       Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="VertitalContainer" 
                                                                       Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border  Name="HorizontalContainer" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" Margin="29,2,2,2" Height="1"/>
                        <Border  Name="VertitalContainer" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" Margin="2" Width="1" Visibility="Collapsed"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- ================================================================================================ -->
    <!--                                          XamMenu Style                                        -->
    <!-- ================================================================================================ -->
    <Style TargetType="igMenu:XamMenu">
        <Setter Property="Background" Value="{StaticResource MenuBackground}"/>
        
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <StackPanel Orientation="Horizontal"/>
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="igMenu:XamMenu">
                    <Grid Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" VerticalAlignment="{TemplateBinding VerticalAlignment}" HorizontalAlignment="{TemplateBinding HorizontalAlignment}">
                        <Border Grid.Column="0" Background="{TemplateBinding Background}"/>
                        <ItemsPresenter />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <!-- SILVERLIGHT specific styles ******************************************************************   -->
    















































































































































































































































































































































































































































































































































    <!-- End SILVERLIGHT specific styles **************************************************************   -->

    <!-- 1 specific styles ******************************************************************   -->
    
    <SolidColorBrush x:Key="MenuCenterFillKey" Color="#FFFCFCF9"/>
    <SolidColorBrush x:Key="MenuScrollViewerButtonNormalOuterBorderFillKey" Color="#FF919B9C"/>
    <LinearGradientBrush x:Key="MenuScrollViewerButtonNormalCenterFillKey" StartPoint="0.5,0" EndPoint="0.5,1">
        <LinearGradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="#FFfffff6" Offset="0" />
                <GradientStop Color="#FFecebe6" Offset="1" />
            </GradientStopCollection>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="MenuScrollViewerButtonHottrackOuterBorderFillKey" Color="#FFD7C990"/>
    <LinearGradientBrush x:Key="MenuScrollViewerButtonHottrackInnerBorderFillKey" StartPoint="0.5,0" EndPoint="0.5,1">
        <LinearGradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="#FFfffffb" Offset="0" />
                <GradientStop Color="#FFfffdf2" Offset="0.5490000247955322" />
                <GradientStop Color="#FFfff8e7" Offset="0.550000011920929" />
                <GradientStop Color="#FFfffbee" Offset="1" />
            </GradientStopCollection>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="MenuScrollViewerButtonHottrackCenterFillKey" EndPoint=".7,1" StartPoint=".7,0"><!--StartPoint="0.5,0" EndPoint="0.5,1"-->
            <LinearGradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="#FFFFFFFF" Offset="0.013"/>
                <GradientStop Color="#F9FFFFFF" Offset="0.375"/>
                <GradientStop Color="#E5FFFFFF" Offset="0.603"/>
                <GradientStop Color="#C6FFFFFF" Offset="1"/>
            </GradientStopCollection>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="MenuScrollViewerButtonNormalGlyphFillKey" StartPoint="0.5,0" EndPoint="0.5,1">
        <LinearGradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="#FF575757" Offset="0" />
                <GradientStop Color="#FF343434" Offset="1" />
            </GradientStopCollection>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="MenuScrollViewerButtonHottrackGlyphFillKey" StartPoint="0.5,0" EndPoint="0.5,1">
        <LinearGradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="#FF575757" Offset="0" />
                <GradientStop Color="#FF343434" Offset="1" />
            </GradientStopCollection>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>

    <MenuScrollingVisibilityConverter x:Key="MenuScrollingVisibilityConverter" />

    <!-- =============================================================================== -->
    <!-- MenuScrollViewer and MenuScrollViewerButton Styles		                    -->
    <!-- =============================================================================== -->

    <Style x:Key="MenuScrollViewerUpButton" TargetType="{x:Type RepeatButton}">
        <Setter Property="ClickMode" Value="Hover"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Grid x:Name="MenuScrollViewerUpButton">
                        <Border SnapsToDevicePixels="True" x:Name="OuterBorder" 
                                                Background="{StaticResource MenuScrollViewerButtonNormalOuterBorderFillKey}" CornerRadius="2,2,2,2"/>
                        <Border SnapsToDevicePixels="True" Margin="1,1,1,1" x:Name="InnerBorder_Center" 
                                                Background="{StaticResource MenuScrollViewerButtonNormalCenterFillKey}"/>
                        <Path x:Name="Glyph" Margin="0,4,0,5" HorizontalAlignment="Center" VerticalAlignment="Center" Height="4" Width="8"
                                              Stretch="Fill" Opacity="1" Data="M 0,4 C0,4 8,4 8,4 8,4 4,0 4,0 4,0 0,4 0,4 z" 
                                              Fill="{StaticResource MenuScrollViewerButtonNormalGlyphFillKey}" SnapsToDevicePixels="True"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" TargetName="OuterBorder" Value="{StaticResource MenuScrollViewerButtonHottrackOuterBorderFillKey}"/>
                            <Setter Property="BorderThickness" TargetName="InnerBorder_Center" Value="1,1,1,1"/>
                            <Setter Property="Background" TargetName="InnerBorder_Center" Value="{StaticResource MenuScrollViewerButtonHottrackCenterFillKey}"/>
                            <Setter Property="BorderBrush" TargetName="InnerBorder_Center" Value="{StaticResource MenuScrollViewerButtonHottrackInnerBorderFillKey}"/>
                            <Setter Property="Fill" TargetName="Glyph" Value="{StaticResource MenuScrollViewerButtonHottrackGlyphFillKey}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="MenuScrollViewerDownButton" TargetType="{x:Type RepeatButton}">
        <Setter Property="ClickMode" Value="Hover"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Grid>
                        <Border SnapsToDevicePixels="True" x:Name="OuterBorder" 
                                                Background="{StaticResource MenuScrollViewerButtonNormalOuterBorderFillKey}" CornerRadius="2,2,2,2"/>
                        <Border SnapsToDevicePixels="True" Margin="1,1,1,1" x:Name="InnerBorder_Center"
                                                Background="{StaticResource MenuScrollViewerButtonNormalCenterFillKey}"/>
                        <Path x:Name="Glyph" Margin="0,5,0,4" HorizontalAlignment="Center" VerticalAlignment="Center" Height="3" Width="6"
                                              Stretch="Fill" Opacity="1" Data="M 1,0 C1,0 7,0 7,0 7,0 4,3 4,3 4,3 1,0 1,0 z" 
                                              Fill="{StaticResource MenuScrollViewerButtonNormalGlyphFillKey}"
                                              SnapsToDevicePixels="True" ClipToBounds="False"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" TargetName="OuterBorder" Value="{StaticResource MenuScrollViewerButtonHottrackOuterBorderFillKey}"/>
                            <Setter Property="BorderThickness" TargetName="InnerBorder_Center" Value="1,1,1,1"/>
                            <Setter Property="Background" TargetName="InnerBorder_Center" Value="{StaticResource MenuScrollViewerButtonHottrackCenterFillKey}"/>
                            <Setter Property="BorderBrush" TargetName="InnerBorder_Center" Value="{StaticResource MenuScrollViewerButtonHottrackInnerBorderFillKey}"/>
                            <Setter Property="Fill" TargetName="Glyph" Value="{StaticResource MenuScrollViewerButtonHottrackGlyphFillKey}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="MenuScrollViewerLeftButton" TargetType="{x:Type RepeatButton}">
        <Setter Property="ClickMode" Value="Hover"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Grid>
                        <Border SnapsToDevicePixels="True" x:Name="OuterBorder" 
                                                Background="{StaticResource MenuScrollViewerButtonNormalOuterBorderFillKey}" CornerRadius="2,2,2,2"/>
                        <Border SnapsToDevicePixels="True" Margin="1,1,1,1" x:Name="InnerBorder_Center"
                                                Background="{StaticResource MenuScrollViewerButtonNormalCenterFillKey}"/>
                        <Path x:Name="Glyph" Margin="2,1,2,1" HorizontalAlignment="Center" VerticalAlignment="Center" Height="3" Width="6"
                                              Stretch="Fill" Opacity="1" Data="F1 M 110.692,342.252L 110.692,352.682L 104.594,347.467L 110.692,342.252 Z " 
                                              Fill="{StaticResource MenuScrollViewerButtonNormalGlyphFillKey}"
                                              SnapsToDevicePixels="True" ClipToBounds="False"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" TargetName="OuterBorder" Value="{StaticResource MenuScrollViewerButtonHottrackOuterBorderFillKey}"/>
                            <Setter Property="BorderThickness" TargetName="InnerBorder_Center" Value="1,1,1,1"/>
                            <Setter Property="Background" TargetName="InnerBorder_Center" Value="{StaticResource MenuScrollViewerButtonHottrackCenterFillKey}"/>
                            <Setter Property="BorderBrush" TargetName="InnerBorder_Center" Value="{StaticResource MenuScrollViewerButtonHottrackInnerBorderFillKey}"/>
                            <Setter Property="Fill" TargetName="Glyph" Value="{StaticResource MenuScrollViewerButtonHottrackGlyphFillKey}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="MenuScrollViewerRightButton" TargetType="{x:Type RepeatButton}">
        <Setter Property="ClickMode" Value="Hover"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Grid>
                        <Border SnapsToDevicePixels="True" x:Name="OuterBorder" 
                                                Background="{StaticResource MenuScrollViewerButtonNormalOuterBorderFillKey}" CornerRadius="2,2,2,2"/>
                        <Border SnapsToDevicePixels="True" Margin="1,1,1,1" x:Name="InnerBorder_Center"
                                                Background="{StaticResource MenuScrollViewerButtonNormalCenterFillKey}"/>
                        <Path x:Name="Glyph" Margin="2,1,2,1" HorizontalAlignment="Center" VerticalAlignment="Center" Height="3" Width="6"
                                              Stretch="Fill" Opacity="1" Data="F1 M 511.047,352.682L 511.047,342.252L 517.145,347.467L 511.047,352.682 Z "
                                              Fill="{StaticResource MenuScrollViewerButtonNormalGlyphFillKey}"
                                              SnapsToDevicePixels="True" ClipToBounds="False"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" TargetName="OuterBorder" Value="{StaticResource MenuScrollViewerButtonHottrackOuterBorderFillKey}"/>
                            <Setter Property="BorderThickness" TargetName="InnerBorder_Center" Value="1,1,1,1"/>
                            <Setter Property="Background" TargetName="InnerBorder_Center" Value="{StaticResource MenuScrollViewerButtonHottrackCenterFillKey}"/>
                            <Setter Property="BorderBrush" TargetName="InnerBorder_Center" Value="{StaticResource MenuScrollViewerButtonHottrackInnerBorderFillKey}"/>
                            <Setter Property="Fill" TargetName="Glyph" Value="{StaticResource MenuScrollViewerButtonHottrackGlyphFillKey}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!-- ========== MenuScrollViewer ==========  -->
    <Style x:Key="MenuScrollViewer" TargetType="{x:Type ScrollViewer}"> 
        <Setter Property="HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="VerticalScrollBarVisibility" Value="Auto"/>

        <Setter Property="Focusable" Value="False"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Top"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="BorderThickness" Value="0"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                    <Grid SnapsToDevicePixels="true" Background="{TemplateBinding Background}">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Border Grid.Row="1" Grid.Column="1">
                            <ScrollContentPresenter CanContentScroll="{TemplateBinding CanContentScroll}" x:Name="PART_ScrollContentPresenter" Margin="{TemplateBinding Padding}"/>
                        </Border>

                        <!--UP-->
                        <RepeatButton Grid.Row="0" Grid.ColumnSpan="3" Command="{x:Static ScrollBar.LineUpCommand}" 
                                                      Style="{StaticResource MenuScrollViewerUpButton}" Focusable="False" 
                                                      CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}" Margin="1,1,1,0">
                            <RepeatButton.Visibility>
                                <MultiBinding FallbackValue="Visibility.Collapsed" Converter="{StaticResource MenuScrollingVisibilityConverter}" ConverterParameter="0">
                                    <Binding Path="ComputedVerticalScrollBarVisibility" RelativeSource="{RelativeSource TemplatedParent}"/>
                                    <Binding Path="VerticalOffset" RelativeSource="{RelativeSource TemplatedParent}"/>
                                    <Binding Path="ExtentHeight" RelativeSource="{RelativeSource TemplatedParent}"/>
                                    <Binding Path="ViewportHeight" RelativeSource="{RelativeSource TemplatedParent}"/>
                                </MultiBinding>
                            </RepeatButton.Visibility>
                        </RepeatButton>

                        <!--DOWN-->
                        <RepeatButton Grid.Row="2"  Grid.ColumnSpan="3" Command="{x:Static ScrollBar.LineDownCommand}" 
                                                      Style="{StaticResource MenuScrollViewerDownButton}" Focusable="False" 
                                                      CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}" Margin="1,0,1,1">
                            <RepeatButton.Visibility>
                                <MultiBinding FallbackValue="Visibility.Collapsed" Converter="{StaticResource MenuScrollingVisibilityConverter}" ConverterParameter="100">
                                    <Binding Path="ComputedVerticalScrollBarVisibility" RelativeSource="{RelativeSource TemplatedParent}"/>
                                    <Binding Path="VerticalOffset" RelativeSource="{RelativeSource TemplatedParent}"/>
                                    <Binding Path="ExtentHeight" RelativeSource="{RelativeSource TemplatedParent}"/>
                                    <Binding Path="ViewportHeight" RelativeSource="{RelativeSource TemplatedParent}"/>
                                </MultiBinding>
                            </RepeatButton.Visibility>
                        </RepeatButton>

                        <!--LEFT-->
                        <RepeatButton Grid.RowSpan="3" Grid.Column="0" Command="{x:Static ScrollBar.LineLeftCommand}" 
                                                      Style="{StaticResource MenuScrollViewerLeftButton}" Focusable="False" 
                                                      CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}" Margin="1,1,1,0">
                            <RepeatButton.Visibility>
                                <MultiBinding FallbackValue="Visibility.Collapsed" Converter="{StaticResource MenuScrollingVisibilityConverter}" ConverterParameter="0">
                                    <Binding Path="ComputedHorizontalScrollBarVisibility" RelativeSource="{RelativeSource TemplatedParent}"/>
                                    <Binding Path="HorizontalOffset" RelativeSource="{RelativeSource TemplatedParent}"/>
                                    <Binding Path="ExtentWidth" RelativeSource="{RelativeSource TemplatedParent}"/>
                                    <Binding Path="ViewportWidth" RelativeSource="{RelativeSource TemplatedParent}"/>
                                </MultiBinding>
                            </RepeatButton.Visibility>
                        </RepeatButton>

                        <!--RIGHT-->
                        <RepeatButton Grid.RowSpan="3" Grid.Column="2" Command="{x:Static ScrollBar.LineRightCommand}" 
                                                      Style="{StaticResource MenuScrollViewerRightButton}" Focusable="False" 
                                                      CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}" Margin="1,1,1,0">
                            <RepeatButton.Visibility>
                                <MultiBinding FallbackValue="Visibility.Collapsed" Converter="{StaticResource MenuScrollingVisibilityConverter}" ConverterParameter="100">
                                    <Binding Path="ComputedHorizontalScrollBarVisibility" RelativeSource="{RelativeSource TemplatedParent}"/>
                                    <Binding Path="HorizontalOffset" RelativeSource="{RelativeSource TemplatedParent}"/>
                                    <Binding Path="ExtentWidth" RelativeSource="{RelativeSource TemplatedParent}"/>
                                    <Binding Path="ViewportWidth" RelativeSource="{RelativeSource TemplatedParent}"/>
                                </MultiBinding>
                            </RepeatButton.Visibility>
                        </RepeatButton>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!-- End 1 specific styles **************************************************************   -->
    <!-- ================================================================================================ -->
    <!--                                        XamMenuItem Style                                      -->
    <!-- ================================================================================================ -->
    <Style TargetType="igMenu:XamMenuItem">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="IsTabStop" Value="True"/>
        <Setter Property="IsEnabled" Value="True"/>
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <StackPanel Orientation="Vertical"/>
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="igMenu:XamMenuItem">
                    <Grid Background="{TemplateBinding Background}">
                        <VisualStateManager.VisualStateGroups>

                            <VisualStateGroup x:Name="CommonStates">

                                <VisualState x:Name="Normal"/>

                                <VisualState x:Name="MouseOver">
                                    <Storyboard x:Name="MouseOverStoryboard" >
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="SelectedIndicator" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>

                                <VisualState x:Name="Highlighted">
                                    <Storyboard >
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HighlightedIndicator" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>

                                <VisualState x:Name="Disabled" >
                                    <Storyboard >
                                        <DoubleAnimation From="1" To=".3" Duration="0" 
                                                         Storyboard.TargetName="MenuItemPresenter"
                                                         Storyboard.TargetProperty="Opacity" />
                                    </Storyboard>
                                </VisualState>

                            </VisualStateGroup>

                            <VisualStateGroup x:Name="SubmenuState">

                                <VisualState x:Name="SubmenuOpen">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="PopupBorder" 
                                                         Storyboard.TargetProperty="Opacity" To="1.0"
                                                         BeginTime="0:0:0" Duration="0:0:0.15"/>
                                    </Storyboard>
                                </VisualState>

                                <VisualState x:Name="SubmenuOpenImmediately">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="PopupBorder" 
                                                         Storyboard.TargetProperty="Opacity" To="1.0"
                                                         BeginTime="0:0:0" Duration="0:0:0.15"/>
                                    </Storyboard>
                                </VisualState>

                                <VisualState x:Name="SubmenuClose">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="PopupBorder" 
                                                         Storyboard.TargetProperty="Opacity" To="0.01"
                                                         BeginTime="0:0:0" Duration="0:0:0.1"/>

                                    </Storyboard>
                                </VisualState>

                                <VisualState x:Name="SubmenuCloseImmediately">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="PopupBorder" 
                                                         Storyboard.TargetProperty="Opacity" To="0.01"
                                                         BeginTime="0:0:0" Duration="0:0:0.1"/>

                                    </Storyboard>
                                </VisualState>

                            </VisualStateGroup>

                            <VisualStateGroup x:Name="MenuItemRole">
                                <VisualState x:Name="TopLevelHeader">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames  Duration="0"
                                            Storyboard.TargetName="IconPlace"
                                            Storyboard.TargetProperty="Width">
                                            <DiscreteObjectKeyFrame KeyTime="0" >
                                                <DiscreteObjectKeyFrame.Value>
                                                    <GridLength>Auto</GridLength>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>

                                        <ObjectAnimationUsingKeyFrames Duration="0"
                                            Storyboard.TargetName="ChildIndicatorPlace"
                                            Storyboard.TargetProperty="Width">
                                            <DiscreteObjectKeyFrame KeyTime="0" >
                                                <DiscreteObjectKeyFrame.Value>
                                                    <GridLength>0</GridLength>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>

                                        <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0" 
                                                                       Storyboard.TargetName="HeaderPresenter"
                                                                       Storyboard.TargetProperty="(FrameworkElement.Margin)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Thickness>10,3,0,3</Thickness>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0" 
                                                                       Storyboard.TargetName="HeaderCheckboxPresenter"
                                                                       Storyboard.TargetProperty="(FrameworkElement.Margin)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Thickness>4,3,0,3</Thickness>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>

                                <VisualState x:Name="TopLevelHeaderWithIcon">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames  Duration="0"
                                            Storyboard.TargetName="IconPlace"
                                            Storyboard.TargetProperty="Width">
                                            <DiscreteObjectKeyFrame KeyTime="0" >
                                                <DiscreteObjectKeyFrame.Value>
                                                    <GridLength>Auto</GridLength>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>

                                        <ObjectAnimationUsingKeyFrames Duration="0"
                                            Storyboard.TargetName="ChildIndicatorPlace"
                                            Storyboard.TargetProperty="Width">
                                            <DiscreteObjectKeyFrame KeyTime="0" >
                                                <DiscreteObjectKeyFrame.Value>
                                                    <GridLength>0</GridLength>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>

                                        <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0" 
                                                                       Storyboard.TargetName="HeaderPresenter"
                                                                       Storyboard.TargetProperty="(FrameworkElement.Margin)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Thickness>0,3,0,3</Thickness>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0" 
                                                                       Storyboard.TargetName="HeaderCheckboxPresenter"
                                                                       Storyboard.TargetProperty="(FrameworkElement.Margin)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Thickness>4,3,0,3</Thickness>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>

                                <VisualState x:Name="TopLevelItem">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Duration="0"
                                            Storyboard.TargetName="IconPlace"
                                            Storyboard.TargetProperty="Width">
                                            <DiscreteObjectKeyFrame KeyTime="0" >
                                                <DiscreteObjectKeyFrame.Value>
                                                    <GridLength>Auto</GridLength>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>

                                        <ObjectAnimationUsingKeyFrames Duration="0"
                                            Storyboard.TargetName="ChildIndicatorPlace"
                                            Storyboard.TargetProperty="Width">
                                            <DiscreteObjectKeyFrame KeyTime="0" >
                                                <DiscreteObjectKeyFrame.Value>
                                                    <GridLength>0</GridLength>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>

                                        <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0" 
                                                                       Storyboard.TargetName="HeaderPresenter" 
                                                                       Storyboard.TargetProperty="(FrameworkElement.Margin)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Thickness>10,3,0,3</Thickness>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>

                                        <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0" 
                                                                       Storyboard.TargetName="HeaderCheckboxPresenter" 
                                                                       Storyboard.TargetProperty="(FrameworkElement.Margin)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Thickness>4,3,0,3</Thickness>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>

                                <VisualState x:Name="TopLevelItemWithIcon">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Duration="0"
                                            Storyboard.TargetName="IconPlace"
                                            Storyboard.TargetProperty="Width">
                                            <DiscreteObjectKeyFrame KeyTime="0" >
                                                <DiscreteObjectKeyFrame.Value>
                                                    <GridLength>Auto</GridLength>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>

                                        <ObjectAnimationUsingKeyFrames Duration="0"
                                            Storyboard.TargetName="ChildIndicatorPlace"
                                            Storyboard.TargetProperty="Width">
                                            <DiscreteObjectKeyFrame KeyTime="0" >
                                                <DiscreteObjectKeyFrame.Value>
                                                    <GridLength>0</GridLength>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>

                                        <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0" 
                                                                       Storyboard.TargetName="HeaderPresenter" 
                                                                       Storyboard.TargetProperty="(FrameworkElement.Margin)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Thickness>0,3,0,3</Thickness>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>

                                        <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0" 
                                                                       Storyboard.TargetName="HeaderCheckboxPresenter" 
                                                                       Storyboard.TargetProperty="(FrameworkElement.Margin)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Thickness>4,3,0,3</Thickness>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>

                                <VisualState x:Name="SubmenuHeader">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Duration="0"
                                                                       Storyboard.TargetName="ArrowPanel"
                                                                       Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" 
                                                                       Storyboard.TargetName="HeaderPresenter" 
                                                                       Storyboard.TargetProperty="(FrameworkElement.Margin)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Thickness>5,3,25,3</Thickness>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>

                                <VisualState x:Name="SubmenuItem">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" 
                                                                       Storyboard.TargetName="HeaderPresenter" 
                                                                       Storyboard.TargetProperty="(FrameworkElement.Margin)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Thickness>5,3,25,3</Thickness>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>

                            </VisualStateGroup>


                        </VisualStateManager.VisualStateGroups>
                        <Grid>
                            <Rectangle x:Name="SelectedIndicator" 
						                                Fill="{StaticResource MenuItemMouseOver}" 
						                                Stroke="{StaticResource MenuItemMouseOverBorder}" 
						                                Visibility="Collapsed" 
						                                Grid.ColumnSpan="3"
						                                HorizontalAlignment="Stretch"
						                                RadiusX="1"
						                                RadiusY="1"
						                                Margin="1"/>
                            <Rectangle x:Name="HighlightedIndicator" 
											             Fill="{StaticResource MenuItemHighlighted}"  
											             Stroke="{StaticResource MenuItemHighlightedBorder}" 
											             Visibility="Collapsed" 
											             Grid.ColumnSpan="3" 
											             HorizontalAlignment="Stretch"
											             RadiusX="1"
											             RadiusY="1"
											             Margin="1"/>

                            <!-- MenuItemPresenter - presentes the content of the menu item. -->
                            <ContentPresenter x:Name="MenuItemPresenter"     
                                                Visibility="Visible"
                                                Opacity="1">
                                <ContentPresenter.Content>
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition x:Name="IconPlace" Width="27" />
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition x:Name="ChildIndicatorPlace" Width="22"/>
                                        </Grid.ColumnDefinitions>
                                        <!--<Rectangle x:Name="innerStroke" StrokeThickness="1" Stroke="#59ffffff" Margin="1" Grid.ColumnSpan="3" Visibility="Collapsed" RadiusX="1"
						                        RadiusY="1"/>-->
                                        <!-- Icon presenter-->
                                        <igPrim:IconContentControl x:Name="HeaderIconPresenter" 
                                                          Height="16" 
                                                          Width="16" 
                                                          Visibility="{TemplateBinding IconVisibilityResolved}"
                                                          Margin="4,3,4,3"/>

                                        <!-- Checkbox presenter-->
                                        <ContentPresenter x:Name="HeaderCheckboxPresenter"
                                                          HorizontalAlignment="Center" 
                                                          VerticalAlignment="Center" 
                                                          Visibility="{TemplateBinding CheckBoxVisibilityResolved}">
                                            <ContentPresenter.Content>
                                                <CheckBox IsTabStop="False" IsHitTestVisible="False" IsChecked="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsChecked, Mode=TwoWay}"/>
                                            </ContentPresenter.Content>
                                        </ContentPresenter>

                                        <!-- Header presenter-->
                                        <Grid Grid.Column="1" >
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="*"/>
                                                <ColumnDefinition Width="Auto"/>
                                            </Grid.ColumnDefinitions>

                                            <ContentPresenter x:Name="HeaderPresenter" 
													            Margin="5,3,5,3"                                        
													            Content="{TemplateBinding Header}" 
													            ContentTemplate="{TemplateBinding HeaderTemplate}"
													            Grid.Column="0"
													            VerticalAlignment="Center"
                                                                HorizontalAlignment="Left"
                                                                igBasePrim:XamlHelper.RecognizesAccessKey="True"/>

                                            <TextBlock Grid.Column="1" VerticalAlignment="Center" Text="{TemplateBinding InputGestureText}" Margin="8,3,2,3"/>
                                        </Grid>

                                        <!-- Arrow indicator presenter-->
                                        <Grid Grid.Column="2"
										          x:Name="ArrowPanel"
										          VerticalAlignment="Center"
										          HorizontalAlignment="Center"
										          Visibility="Collapsed">
                                            <Path 
										            Fill="Black"
										            x:Name="ArrowPanelPath"
										            VerticalAlignment="Center"
										            Margin="7,0,7,0"
										            Data="M0,0 L0,8 L4,4 z"/>
                                        </Grid>

                                    </Grid>
                                </ContentPresenter.Content>
                            </ContentPresenter>
                        </Grid>
                        <Popup x:Name="Popup" >
                            <Grid Background="{StaticResource MenuItemBackgroundBrush}">
                                
                                <Border x:Name="PopupBorder" Opacity="0.01"
                                        Background="{StaticResource MenuItemBackgroundBrush}"
                                        BorderBrush="{StaticResource MenuPopupOuterBorderBrush}" 
                                        BorderThickness="1"
                                        CornerRadius="1">
                                 






                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="27"/>
                                            <ColumnDefinition Width="*"/>
                                        </Grid.ColumnDefinitions>
                                        <Border Grid.Column="0" Background="{StaticResource MenuItemVerticalBrush}" 
                                                Width="27"  HorizontalAlignment="Left"/>
                                        <ScrollViewer x:Name="ScrollViewer" Style="{StaticResource MenuScrollViewer}"
                                                  MaxHeight="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=MaxHeight}"
                                                  MaxWidth="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=MaxWidth}"
                                                  VerticalScrollBarVisibility="Auto" 
                                                  HorizontalScrollBarVisibility="Auto" Grid.ColumnSpan="2"
                                                  >
                                                <ItemsPresenter/>
                                        </ScrollViewer>
                                    </Grid>
                                </Border>
                            </Grid>
                        </Popup>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- ================================================================================================ -->
    <!--                                       XamContextMenu Style                                    -->
    <!-- ================================================================================================ -->
    <Style TargetType="igMenu:XamContextMenu">
        <Setter Property="Padding" Value="2"/>
        <Setter Property="Background" Value="#FFFFFFFF"/>
        <Setter Property="BorderBrush" Value="{StaticResource MenuPopupOuterBorderBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
        
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="igMenu:XamContextMenu">
                    <Border x:Name="PopupBorder"
							Background="{TemplateBinding Background}"
							BorderBrush="{TemplateBinding BorderBrush}" 
							BorderThickness="{TemplateBinding BorderThickness}"
							CornerRadius="1">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition MaxWidth="27"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Border Background="{StaticResource MenuItemVerticalBrush}"/>
                            <ItemsPresenter Grid.ColumnSpan="2"/>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>
