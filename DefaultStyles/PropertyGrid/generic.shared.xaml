<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                	xmlns:sys="clr-namespace:System;assembly=mscorlib"
                    xmlns:ig="http://schemas.infragistics.com/xaml"
                    xmlns:igControls="http://schemas.infragistics.com/xaml/wpf"
                    xmlns:igPrim="http://schemas.infragistics.com/xaml/primitives"
                    xmlns:igLocal="http://schemas.infragistics.com/xaml"
                    xmlns:igLocalPrim="http://schemas.infragistics.com/xaml/primitives">

	<!-- ********************************** COLORS **********************************-->
	<Color x:Key="Color_001">#FF444444</Color>
	<Color x:Key="Color_002">#FF6D6D6D</Color>
	<Color x:Key="Color_003">#FF777777</Color>
	<Color x:Key="Color_004">#FF959595</Color>
	<Color x:Key="Color_005">#FFABABAB</Color>
	<Color x:Key="Color_006">#FFE1E1E1</Color>
	<Color x:Key="Color_007">#FFF0F0F0</Color>
	<Color x:Key="Color_008">#00FFFFFF</Color><!-- Transparent -->
	<Color x:Key="Color_009">#FFFFFFFF</Color><!-- White -->
	<Color x:Key="Color_010">#FF43577B</Color><!-- Theme Color Selected -->
	<Color x:Key="Color_011">#FFCED4DF</Color><!-- Theme Color Hover -->
	<Color x:Key="Color_012">#FF000000</Color><!-- Black -->

    <!-- ********************************** BRUSHES **********************************-->
	<SolidColorBrush x:Key="ForegroundBrush" Color="{StaticResource Color_001}" />
	<SolidColorBrush x:Key="LightForegroundBrush" Color="{StaticResource Color_009}" />
	<SolidColorBrush x:Key="TransparentBrush" Color="{StaticResource Color_008}" />
	<SolidColorBrush x:Key="DisabledBorderBrush" Color="{StaticResource Color_006}" />
	<SolidColorBrush x:Key="DisabledBackgroundBrush" Color="{StaticResource Color_007}" />
	<SolidColorBrush x:Key="DisabledForegroundBrush" Color="{StaticResource Color_002}" />
	<SolidColorBrush x:Key="GlyphBackgroundBrush" Color="{StaticResource Color_003}" />
	
	<!-- Button Brushes -->
	<SolidColorBrush x:Key="ButtonBackgroundBrush" Color="{StaticResource Color_009}" />
	<SolidColorBrush x:Key="ButtonBorderBrush" Color="{StaticResource Color_005}" />
	<SolidColorBrush x:Key="ButtonHoverBackgroundBrush" Color="{StaticResource Color_011}" />
	<SolidColorBrush x:Key="ButtonHoverBorderBrush" Color="{StaticResource Color_011}" />
	<SolidColorBrush x:Key="ButtonPressedBackgroundBrush" Color="{StaticResource Color_010}" />
	<SolidColorBrush x:Key="ButtonPressedBorderBrush" Color="{StaticResource Color_010}" />
	
	<!-- PropertyGrid Brushes -->
	<SolidColorBrush x:Key="XamPropertyGrid_BackgroundBrush" Color="{StaticResource Color_009}" />
	<SolidColorBrush x:Key="XamPropertyGrid_BorderBrush" Color="{StaticResource Color_005}" />
    <SolidColorBrush x:Key="XamPropertyGrid_ItemBackgroundBrush" Color="{StaticResource Color_009}" />
    <SolidColorBrush x:Key="XamPropertyGrid_ItemForegroundBrush" Color="{StaticResource Color_012}" />
    <SolidColorBrush x:Key="XamPropertyGrid_ItemBorderBrush" Color="{StaticResource Color_007}" />
    <SolidColorBrush x:Key="XamPropertyGrid_ItemNameBorderBrush" Color="{StaticResource Color_007}" />
    <SolidColorBrush x:Key="XamPropertyGrid_ItemEditorBorderBrush" Color="{StaticResource Color_007}" />
    <SolidColorBrush x:Key="XamPropertyGrid_ItemLayoutPanelBackgroundBrush" Color="{StaticResource Color_007}" />
    <SolidColorBrush x:Key="XamPropertyGrid_CategoryBorderBrush" Color="{StaticResource Color_007}" />
    <SolidColorBrush x:Key="XamPropertyGrid_CategoryBackgroundBrush" Color="{StaticResource Color_007}" />
    <SolidColorBrush x:Key="XamPropertyGrid_CategoryForegroundBrush" Color="{StaticResource Color_012}" />
    <SolidColorBrush x:Key="XamPropertyGrid_DescriptionAreaBackgroundBrush" Color="{StaticResource Color_006}" />
    <SolidColorBrush x:Key="XamPropertyGrid_DescriptionAreaSplitterBackgroundBrush" Color="{StaticResource Color_005}" />
    <SolidColorBrush x:Key="XamPropertyGrid_PropertyValueResetButtonBorderBrush" Color="{StaticResource Color_005}" />
    <SolidColorBrush x:Key="XamPropertyGrid_PropertyValueResetButtonFillBrushCanReset" Color="{StaticResource Color_012}" />
    <SolidColorBrush x:Key="XamPropertyGrid_PropertyValueResetButtonFillBrushCannotReset" Color="{StaticResource Color_008}" />

    <!-- JM 10-10-16 TFS224559 - Added. -->
    <SolidColorBrush x:Key="XamPropertyGrid_ItemEditorBoundPropertyBorderBrush" Color="#FFFFCF00" />

    <!-- *********************************  CONVERTERS  ********************************* -->
    <igLocalPrim:GridLengthConverter x:Key="GridLengthConverter"/>
    <igLocalPrim:ExpandableObjectMarginConverter x:Key="ExpandableObjectMarginConverter" />
    <igLocalPrim:PropertyItemMarginConverter x:Key="PropertyItemMarginConverter" />
    <igPrim:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter"/>
    <igControls:NotBoolToVisibilityConverter x:Key="NotBoolToVisibilityConverter"/>
    <igPrim:InverseBooleanConverter x:Key="InverseBooleanConverter"/>
    <igControls:BoolToHiddenConverter x:Key="BoolToHiddenConverter"/>

    <igPrim:ValueConverterGroup x:Key="InverseBoolToVisibilityConverter">
        <igPrim:FixedValueConverter>
            <igPrim:FixedValueConverter.SourceValue>
                <sys:Boolean>true</sys:Boolean>
            </igPrim:FixedValueConverter.SourceValue>
            <igPrim:FixedValueConverter.DestinationValue>
                <Visibility>Collapsed</Visibility>
            </igPrim:FixedValueConverter.DestinationValue>
        </igPrim:FixedValueConverter>
        <igPrim:FixedValueConverter>
            <igPrim:FixedValueConverter.DestinationValue>
                <Visibility>Visible</Visibility>
            </igPrim:FixedValueConverter.DestinationValue>
        </igPrim:FixedValueConverter>
    </igPrim:ValueConverterGroup>

    <!-- JM 10-10-16 TFS224559 - Added. -->
    <igLocalPrim:BoundPropertyBorderBrushConverter x:Key="BoundPropertyBorderBrushConverter"/>
    

    <!-- *********************************  STRING RESOURCES  ********************************* -->
    <igLocalPrim:PropertyGridResourceString x:Key="toolTipCategorizeButton" ResourceName="ToolTip_CategorizeButton" />
    <igLocalPrim:PropertyGridResourceString x:Key="toolTipSortButton" ResourceName="ToolTip_SortButton" />
    <igLocalPrim:PropertyGridResourceString x:Key="toolTipClearFilterButton" ResourceName="ToolTip_ClearFilterButton" />
    <igLocalPrim:PropertyGridResourceString x:Key="toolTipFilterTextBox" ResourceName="ToolTip_FilterTextBox" />
    <igLocalPrim:PropertyGridResourceString x:Key="toolTipAddListEntryButton" ResourceName="ToolTip_AddListEntryButton" />
    <igLocalPrim:PropertyGridResourceString x:Key="toolTipRemoveListEntryButton" ResourceName="ToolTip_RemoveListEntryButton" />
    <igLocalPrim:PropertyGridResourceString x:Key="toolTipCreateExpandableObjectButton" ResourceName="ToolTip_CreateExpandableObjectButton" />
    <igLocalPrim:PropertyGridResourceString x:Key="toolTipPropertyValueResetButtonCanReset" ResourceName="ToolTip_PropertyValueResetButtonCanReset" />
    <igLocalPrim:PropertyGridResourceString x:Key="toolTipPropertyValueResetButtonCannotReset" ResourceName="ToolTip_PropertyValueResetButtonCannotReset" />

    <!-- JM 10-10-16 TFS224559 - Added. -->
    <igLocalPrim:PropertyGridResourceString x:Key="toolTipPropertyValueResetButtonCanResetBinding" ResourceName="ToolTip_PropertyValueResetButtonCanResetBinding" />

    <!-- *********************************  CategorizeButton Style  ********************************* -->
	<Style x:Key="{x:Static igLocalPrim:PropertyGridFilterAreaControl.CategorizeButtonStyleKey}" TargetType="{x:Type RadioButton}">
		<Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
		<Setter Property="HorizontalContentAlignment" Value="Center" />
		<Setter Property="VerticalContentAlignment" Value="Center" />
		<Setter Property="MinHeight" Value="22" />
		<Setter Property="MinWidth" Value="22" />
		<Setter Property="BorderThickness" Value="1" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="RadioButton">
					<Grid igPrim:XamlHelper.SnapsToDevicePixels="True">
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal" />
								<VisualState x:Name="MouseOver">
									<Storyboard>
										<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="hover" />
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Pressed">
									<Storyboard>
										<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="pressed" />
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Disabled">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="DisabledVisualElement">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Visible</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="CheckStates">
								<VisualState x:Name="Checked">
									<Storyboard>
										<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="checked" />
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Fill" Storyboard.TargetName="glyph">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource LightForegroundBrush}" />
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Unchecked" />
								<VisualState x:Name="Indeterminate" />
							</VisualStateGroup>
							<VisualStateGroup x:Name="FocusStates">
								<VisualState x:Name="Focused">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="FocusedVisualElement">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Visible</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Unfocused" />
							</VisualStateGroup>
							<VisualStateGroup x:Name="ValidationStates">
								<VisualState x:Name="Valid" />
								<VisualState x:Name="InvalidUnfocused" />
								<VisualState x:Name="InvalidFocused" />
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<Rectangle x:Name="normal" Fill="{StaticResource ButtonBackgroundBrush}" Stroke="{StaticResource ButtonBorderBrush}" StrokeThickness="1" />
						<Rectangle x:Name="hover" Fill="{StaticResource ButtonHoverBackgroundBrush}" Stroke="{StaticResource ButtonHoverBorderBrush}" StrokeThickness="1" Opacity="0" />
						<Rectangle x:Name="pressed" Fill="{StaticResource ButtonPressedBackgroundBrush}" Stroke="{StaticResource ButtonPressedBorderBrush}" StrokeThickness="1" Opacity="0" />
						<Rectangle x:Name="checked" Fill="{StaticResource ButtonPressedBackgroundBrush}" Stroke="{StaticResource ButtonPressedBorderBrush}" StrokeThickness="1" Opacity="0" />
						<Rectangle x:Name="DisabledVisualElement" Fill="{StaticResource DisabledBackgroundBrush}" Stroke="{StaticResource DisabledBorderBrush}" StrokeThickness="1" Visibility="Collapsed" />
						<Grid ToolTip="{TemplateBinding ToolTip}" Background="{StaticResource TransparentBrush}">
							<Path x:Name="glyph" Fill="{StaticResource GlyphBackgroundBrush}" Height="16" Width="14" Margin="0,1,0,0" Data="M0,0 L2,0 L2,2 L0,2 z M3,0 L16,0 L16,2 L3,2 z M2,3 L11,3 L11,4 L2,4 z M2,5 L11,5 L11,6 L2,6 z M0,8 L2,8 L2,10 L0,10 z M3,8 L16,8 L16,10 L3,10 z M2,11 L11,11 L11,12 L2,12 z M2,13 L11,13 L11,14 L2,14 z" />
						</Grid>
						<Rectangle x:Name="FocusedVisualElement" Stroke="{StaticResource ButtonPressedBorderBrush}" Visibility="Collapsed" StrokeThickness="1" />
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	
	<!-- *********************************  RadioButton Style  ********************************* -->
	<Style x:Key="RadioButtonStyleBase" TargetType="{x:Type RadioButton}">
		<Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
		<Setter Property="HorizontalContentAlignment" Value="Center" />
		<Setter Property="VerticalContentAlignment" Value="Center" />
		<Setter Property="MinHeight" Value="22" />
		<Setter Property="MinWidth" Value="22" />
		<Setter Property="BorderThickness" Value="1" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="RadioButton">
					<Grid igPrim:XamlHelper.SnapsToDevicePixels="True">
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal" />
								<VisualState x:Name="MouseOver">
									<Storyboard>
										<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="hover" />
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Pressed">
									<Storyboard>
										<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="pressed" />
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentControl">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource LightForegroundBrush}" />
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Disabled">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="DisabledVisualElement">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Visible</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="CheckStates">
								<VisualState x:Name="Checked">
									<Storyboard>
										<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="checked" />
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentControl">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource LightForegroundBrush}" />
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Unchecked" />
								<VisualState x:Name="Indeterminate" />
							</VisualStateGroup>
							<VisualStateGroup x:Name="FocusStates">
								<VisualState x:Name="Focused">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="FocusedVisualElement">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Visible</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Unfocused" />
							</VisualStateGroup>
							<VisualStateGroup x:Name="ValidationStates">
								<VisualState x:Name="Valid" />
								<VisualState x:Name="InvalidUnfocused" />
								<VisualState x:Name="InvalidFocused" />
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<Rectangle x:Name="normal" Fill="{StaticResource ButtonBackgroundBrush}" Stroke="{StaticResource ButtonBorderBrush}" StrokeThickness="1" />
						<Rectangle x:Name="hover" Fill="{StaticResource ButtonHoverBackgroundBrush}" Stroke="{StaticResource ButtonHoverBorderBrush}" StrokeThickness="1" Opacity="0" />
						<Rectangle x:Name="pressed" Fill="{StaticResource ButtonPressedBackgroundBrush}" Stroke="{StaticResource ButtonPressedBorderBrush}" StrokeThickness="1" Opacity="0" />
						<Rectangle x:Name="checked" Fill="{StaticResource ButtonPressedBackgroundBrush}" Stroke="{StaticResource ButtonPressedBorderBrush}" StrokeThickness="1" Opacity="0" />
						<Rectangle x:Name="DisabledVisualElement" Fill="{StaticResource DisabledBackgroundBrush}" Stroke="{StaticResource DisabledBorderBrush}" StrokeThickness="1" Visibility="Collapsed" />
                        <!-- JM 10-14-14 TFS183020 Set IsTabStop to false. -->
                        <ContentControl x:Name="ContentControl" Foreground="{StaticResource ForegroundBrush}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" IsTabStop="False">
							<ContentPresenter />
						</ContentControl>
						<Rectangle x:Name="FocusedVisualElement" Stroke="{StaticResource ButtonPressedBorderBrush}" Visibility="Collapsed" StrokeThickness="1" />
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	
	<!-- *********************************  SortButton Style  ********************************* -->
	<Style x:Key="{x:Static igLocalPrim:PropertyGridFilterAreaControl.SortButtonStyleKey}" TargetType="{x:Type RadioButton}">
		<Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
		<Setter Property="HorizontalContentAlignment" Value="Center" />
		<Setter Property="VerticalContentAlignment" Value="Center" />
		<Setter Property="MinHeight" Value="22" />
		<Setter Property="MinWidth" Value="22" />
		<Setter Property="BorderThickness" Value="1" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="RadioButton">
					<Grid igPrim:XamlHelper.SnapsToDevicePixels="True">
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal" />
								<VisualState x:Name="MouseOver">
									<Storyboard>
										<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="hover" />
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Pressed">
									<Storyboard>
										<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="pressed" />
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Disabled">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="DisabledVisualElement">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Visible</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="CheckStates">
								<VisualState x:Name="Checked">
									<Storyboard>
										<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="checked" />
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Fill" Storyboard.TargetName="glyph">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource LightForegroundBrush}" />
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Unchecked" />
								<VisualState x:Name="Indeterminate" />
							</VisualStateGroup>
							<VisualStateGroup x:Name="FocusStates">
								<VisualState x:Name="Focused">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="FocusedVisualElement">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Visible</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Unfocused" />
							</VisualStateGroup>
							<VisualStateGroup x:Name="ValidationStates">
								<VisualState x:Name="Valid" />
								<VisualState x:Name="InvalidUnfocused" />
								<VisualState x:Name="InvalidFocused" />
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<Rectangle x:Name="normal" Fill="{StaticResource ButtonBackgroundBrush}" Stroke="{StaticResource ButtonBorderBrush}" StrokeThickness="1" />
						<Rectangle x:Name="hover" Fill="{StaticResource ButtonHoverBackgroundBrush}" Stroke="{StaticResource ButtonHoverBorderBrush}" StrokeThickness="1" Opacity="0" />
						<Rectangle x:Name="pressed" Fill="{StaticResource ButtonPressedBackgroundBrush}" Stroke="{StaticResource ButtonPressedBorderBrush}" StrokeThickness="1" Opacity="0" />
						<Rectangle x:Name="checked" Fill="{StaticResource ButtonPressedBackgroundBrush}" Stroke="{StaticResource ButtonPressedBorderBrush}" StrokeThickness="1" Opacity="0" />
						<Rectangle x:Name="DisabledVisualElement" Fill="{StaticResource DisabledBackgroundBrush}" Stroke="{StaticResource DisabledBorderBrush}" StrokeThickness="1" Visibility="Collapsed" />
						<Grid ToolTip="{TemplateBinding ToolTip}" Background="{StaticResource TransparentBrush}">
							<Path x:Name="glyph" Fill="{StaticResource ForegroundBrush}" Height="16" Width="16" Data="M1.52717,9.32491 L6.8777,9.32491 L6.8777,10.1126 L2.68391,14.7433 L2.23039,15.2123 L7,15.2123 L7,16 L1.09403,16 L1.09403,15.1804 L4.92093,10.9049 C5.19271,10.6013 5.45089,10.3373 5.69549,10.1126 L1.52717,10.1126 z M12.5,1 L13.5,1 L13.5,11 L16.5,11 L13,15 L9.5,11 L12.5,11 z M3.37845,0.701199 C3.28333,1.12921 3.14915,1.55418 2.97589,1.97612 L2.15549,3.93402 L4.68805,3.93402 L3.90841,2.08539 C3.6706,1.52382 3.49396,1.06242 3.37845,0.701199 z M2.86888,0 L3.93389,0 L6.9913,6.67509 L5.86515,6.67509 L4.99379,4.65344 L1.87012,4.65344 L1.04971,6.67509 L0,6.67509 z" />
						</Grid>
						<Rectangle x:Name="FocusedVisualElement" Stroke="{StaticResource ButtonPressedBorderBrush}" Visibility="Collapsed" StrokeThickness="1" />
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	
	<!-- *********************************  ClearFilterButton Style  ********************************* -->
	<Style x:Key="{x:Static igLocalPrim:PropertyGridFilterAreaControl.ClearFilterButtonStyleKey}" TargetType="{x:Type Button}">
		<Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
		<Setter Property="MinHeight" Value="20" />
		<Setter Property="MinWidth" Value="20" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="Button">
					<Grid>
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal" />
								<VisualState x:Name="MouseOver">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="Bd" Storyboard.TargetProperty="Fill">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonHoverBackgroundBrush}" />
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Pressed">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="Bd" Storyboard.TargetProperty="Fill">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonPressedBackgroundBrush}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="glyph" Storyboard.TargetProperty="Fill">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource LightForegroundBrush}" />
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Disabled">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="DisabledVisualElement">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Visible</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="FocusStates">
								<VisualState x:Name="Focused" />
								<VisualState x:Name="Unfocused" />
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<Rectangle x:Name="Bd" Fill="{StaticResource ButtonBackgroundBrush}" Stroke="{StaticResource ButtonBorderBrush}" StrokeThickness="0" />
						<Rectangle x:Name="DisabledVisualElement" Fill="{StaticResource DisabledBackgroundBrush}" Visibility="Collapsed" />
						<Grid ToolTip="{TemplateBinding ToolTip}" Background="{StaticResource TransparentBrush}">
							<Path x:Name="glyph" Height="10" Width="10" Fill="{StaticResource GlyphBackgroundBrush}" Data="M8,0 L9,0 9,0.97399998 10,0.97399998 10,1.974 9,1.974 9,2.9360001 9,2.974 8,2.974 8,3.9739999 7,3.9739999 7,5.9360001 8,5.9360001 8,6.9360001 9,6.9360001 9,7.0640001 9,7.974 10,7.974 10,8.974 9,8.974 9,10 8,10 8,8.974 7,8.974&#xD;&#xA;7,8.9359999 7,7.974 7,7.9359999 6,7.9359999 6,7.0380001 3.9999999,7.0380001 3.9999999,7.9359999 3,7.9359999 3,8.9359999 2,8.9359999 2,10 1,10 1,8.9359999 0,8.9359999 0,7.9359999 1,7.9359999 1,7.0640001 1,6.9360001 2,6.9360001 2,5.9360001 2.9999998,5.9360001 2.9999998,3.9739999 2,3.9739999&#xD;&#xA;2,2.974 1,2.974 1,2.9360001 1,1.974 0,1.974 0,0.97399998 1,0.97399998 1,0.93600011 1,0.038000107 2,0.038000107 2,0.93600011 3,0.93600011 3,0.97399998 3,1.974 3.9999999,1.974 3.9999999,3.013 6,3.013 6,1.974 7,1.974 7,0.97399998 8,0.97399998 z" Stretch="Fill" />
						</Grid>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	
	<!-- *********************************  Button Style  ********************************* -->
	<Style x:Key="ButtonStyleBase" TargetType="{x:Type Button}">
		<Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
		<Setter Property="FontSize" Value="12" />
		<Setter Property="FontFamily" Value="Segoe UI" />
		<Setter Property="MinHeight" Value="15" />
		<Setter Property="MinWidth" Value="15" />
		<Setter Property="Padding" Value="4,2" />
		<Setter Property="Template">
		  <Setter.Value>
			<ControlTemplate TargetType="Button">
			  <Grid>
				<VisualStateManager.VisualStateGroups>
				  <VisualStateGroup x:Name="CommonStates">
					<VisualState x:Name="Normal" />
					<VisualState x:Name="MouseOver">
					  <Storyboard>
						<ObjectAnimationUsingKeyFrames Storyboard.TargetName="Bd" Storyboard.TargetProperty="Fill">
						  <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonHoverBackgroundBrush}" />
						</ObjectAnimationUsingKeyFrames>
						<ObjectAnimationUsingKeyFrames Storyboard.TargetName="Bd" Storyboard.TargetProperty="Stroke">
						  <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonHoverBorderBrush}" />
						</ObjectAnimationUsingKeyFrames>
					  </Storyboard>
					</VisualState>
					<VisualState x:Name="Pressed">
					  <Storyboard>
						<ObjectAnimationUsingKeyFrames Storyboard.TargetName="Bd" Storyboard.TargetProperty="Fill">
						  <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonHoverBackgroundBrush}" />
						</ObjectAnimationUsingKeyFrames>
						<ObjectAnimationUsingKeyFrames Storyboard.TargetName="Bd" Storyboard.TargetProperty="Stroke">
						  <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonHoverBorderBrush}" />
						</ObjectAnimationUsingKeyFrames>
					  </Storyboard>
					</VisualState>
					<VisualState x:Name="Disabled">
					  <Storyboard>
						<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="DisabledVisualElement">
						  <DiscreteObjectKeyFrame KeyTime="0">
							<DiscreteObjectKeyFrame.Value>
							  <Visibility>Visible</Visibility>
							</DiscreteObjectKeyFrame.Value>
						  </DiscreteObjectKeyFrame>
						</ObjectAnimationUsingKeyFrames>
						<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentControl">
						  <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource DisabledForegroundBrush}" />
						</ObjectAnimationUsingKeyFrames>
					  </Storyboard>
					</VisualState>
				  </VisualStateGroup>
				  <VisualStateGroup x:Name="FocusStates">
					<VisualState x:Name="Focused">
					  <Storyboard>
						<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="FocusedVisualElement">
						  <DiscreteObjectKeyFrame KeyTime="0">
							<DiscreteObjectKeyFrame.Value>
							  <Visibility>Visible</Visibility>
							</DiscreteObjectKeyFrame.Value>
						  </DiscreteObjectKeyFrame>
						</ObjectAnimationUsingKeyFrames>
					  </Storyboard>
					</VisualState>
					<VisualState x:Name="Unfocused" />
				  </VisualStateGroup>
				</VisualStateManager.VisualStateGroups>
				<Rectangle x:Name="Bd" Fill="{StaticResource ButtonBackgroundBrush}" Stroke="{StaticResource ButtonBorderBrush}" StrokeThickness="1" />
				<Rectangle x:Name="DisabledVisualElement" Fill="{StaticResource DisabledBackgroundBrush}" Stroke="{StaticResource DisabledBorderBrush}" StrokeThickness="1" Visibility="Collapsed" />
				<ContentControl x:Name="ContentControl" Foreground="{TemplateBinding Foreground}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
				  <ContentPresenter x:Name="contentPresenter" />
				</ContentControl>
				<Rectangle x:Name="FocusedVisualElement" Stroke="{StaticResource ButtonHoverBorderBrush}" Visibility="Collapsed" StrokeThickness="1" />
			  </Grid>
			</ControlTemplate>
		  </Setter.Value>
		</Setter>
	</Style>

    <!-- *********************************  ExpanderToggleButton Template  ********************************* -->
    <ControlTemplate x:Key="ExpanderToggleButton" TargetType="{x:Type ToggleButton}">
        <Grid>
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CheckStates">
                    <VisualState x:Name="Checked">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.001" Storyboard.TargetName="Up_Arrow" Storyboard.TargetProperty="(UIElement.Visibility)">
                                <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                    <DiscreteObjectKeyFrame.Value>
                                        <Visibility>Collapsed</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.001" Storyboard.TargetName="Down_Arrow" Storyboard.TargetProperty="(UIElement.Visibility)">
                                <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                    <DiscreteObjectKeyFrame.Value>
                                        <Visibility>Visible</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.001" Storyboard.TargetName="Down_Arrow" Storyboard.TargetProperty="OpacityMask">
                                <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                    <DiscreteObjectKeyFrame.Value>
                                        <SolidColorBrush>#FF000000</SolidColorBrush>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Unchecked"/>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            
            <Rectangle Margin="0,0,0,0" x:Name="Rectangle" Fill="Transparent" />
            
            <Path x:Name="Up_Arrow"
                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                  Margin="2,0,0,0"
                  VerticalAlignment="Center"
                  IsHitTestVisible="False"
                  Fill="{StaticResource GlyphBackgroundBrush}" 
                  Data="M 0 0 L 4 4 L 8 0 Z" 
                  RenderTransformOrigin="0.5,0.5">
                <Path.RenderTransform>
                    <TransformGroup>
                        <ScaleTransform ScaleX="1" ScaleY="1" />
                        <SkewTransform AngleX="0" AngleY="0" />
                        <RotateTransform Angle="-90" />
                        <TranslateTransform X="0" Y="0" />
                    </TransformGroup>
                </Path.RenderTransform>
            </Path>
            
            <Path x:Name="Down_Arrow"
                  Visibility="Collapsed" 
                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                  Margin="2,0,0,0"
                  VerticalAlignment="Center" 
                  IsHitTestVisible="False"
                  Fill="{StaticResource GlyphBackgroundBrush}" 
                  Data="M 0 4 L 4 0 L 8 4 Z" 
                  RenderTransformOrigin="0.5,0.5">
                <Path.RenderTransform>
                    <TransformGroup>
                        <ScaleTransform ScaleX="1" ScaleY="1" />
                        <SkewTransform AngleX="0" AngleY="0" />
                        <RotateTransform Angle="135" />
                        <TranslateTransform X="0" Y="0" />
                    </TransformGroup>
                </Path.RenderTransform>
            </Path>
        </Grid>
    </ControlTemplate>

    <!-- *********************************  PropertyGridFilterAreaControl Style  ********************************* -->
    <Style TargetType="igLocalPrim:PropertyGridFilterAreaControl">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="igLocalPrim:PropertyGridFilterAreaControl">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>

                        <RadioButton  x:Name="PART_CategorizeButton"
                                      Grid.Column="0" 
                                      Width="16"
                                      Height="16" 
                                      Margin="2"
                                      GroupName="Sorting"
                                      IsChecked="{Binding Path=PropertyGrid.IsCategorized, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                                      IsThreeState="False"
                                      ToolTip="{Binding Source={StaticResource toolTipCategorizeButton}, Path=Value}" 
                                      Style="{DynamicResource {x:Static igLocalPrim:PropertyGridFilterAreaControl.CategorizeButtonStyleKey}}">
                            <ig:Commanding.Commands>
                                <ig:CommandSourceCollection>
                                    <igLocalPrim:PropertyGridCommandSource EventName="Checked" CommandType="SortByCategory"/>
                                </ig:CommandSourceCollection>
                            </ig:Commanding.Commands>
                        </RadioButton>
                        <RadioButton  x:Name="PART_SortButton"
                                      Grid.Column="1" 
                                      Width="16" 
                                      Height="16" 
                                      Margin="2"
                                      IsThreeState="False"
                                      GroupName="Sorting"
                                      IsChecked="{Binding Path=PropertyGrid.IsCategorized, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource InverseBooleanConverter}, Mode=OneWay}"
                                      ToolTip="{Binding Source={StaticResource toolTipSortButton}, Path=Value}" 
                                      Style="{DynamicResource {x:Static igLocalPrim:PropertyGridFilterAreaControl.SortButtonStyleKey}}">
                            <ig:Commanding.Commands>
                                <ig:CommandSourceCollection>
                                    <igLocalPrim:PropertyGridCommandSource EventName="Checked" CommandType="SortAlphabetically"/>
                                </ig:CommandSourceCollection>
                            </ig:Commanding.Commands>
                        </RadioButton>
                        <TextBox x:Name="PART_FilterTextBox"
                                 Grid.Column="2" 
                                 MinHeight="12" 
                                 Margin="2" 
                                 ToolTip="{Binding Source={StaticResource toolTipFilterTextBox}, Path=Value}" 
                                 Text="{Binding Path=PropertyGrid.FilterText, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                 HorizontalAlignment="Stretch"/>
                        <Button x:Name="PART_ClearFilterButton"
                                Grid.Column="2" 
								HorizontalAlignment="Right" 
								Height="20" 
								Width="20" 
								Margin="0,0,3,0"
                                ToolTip="{Binding Source={StaticResource toolTipClearFilterButton}, Path=Value}" 
                                Style="{DynamicResource {x:Static igLocalPrim:PropertyGridFilterAreaControl.ClearFilterButtonStyleKey}}">
                            <ig:Commanding.Commands>
                                <ig:CommandSourceCollection>
                                    <igLocalPrim:PropertyGridCommandSource EventName="Click" CommandType="ClearFilterText"/>
                                </ig:CommandSourceCollection>
                            </ig:Commanding.Commands>
                        </Button>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- *********************************  PropertyGridDescriptionAreaControl Style  ********************************* -->
    <Style TargetType="igLocalPrim:PropertyGridDescriptionAreaControl">
        <Setter Property="Background" Value="{StaticResource XamPropertyGrid_DescriptionAreaBackgroundBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="igLocalPrim:PropertyGridDescriptionAreaControl">
                    <Grid Background="{TemplateBinding Background}">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        
                        <StackPanel Grid.Row="0" Orientation="Horizontal">
                            <TextBlock Text="{Binding Path=SelectedPropertyName, RelativeSource={RelativeSource TemplatedParent}}"
                                       FontWeight="Bold"
                                       Margin="2"/>
                            <TextBlock Text="{Binding Path=SelectedPropertyTypeName, RelativeSource={RelativeSource TemplatedParent}}"
                                       Margin="2"/>
                        </StackPanel>
                        
                        <TextBlock Grid.Row="1" 
                                   Text="{Binding Path=SelectedPropertyDescription, RelativeSource={RelativeSource TemplatedParent}}"
                                   Margin="15,0,2,2" TextWrapping="Wrap"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- *********************************  PropertyGridCategoryItemView Style  ********************************* -->
    <Style TargetType="igLocalPrim:PropertyGridCategoryItemView">
        <Setter Property="BorderBrush" Value="{StaticResource XamPropertyGrid_CategoryBorderBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type igLocalPrim:PropertyGridCategoryItemView}">
                    <Border Background="{StaticResource XamPropertyGrid_CategoryBackgroundBrush}" HorizontalAlignment="Stretch">

                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="SelectedStates">
                                <VisualState x:Name="Selected">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="focusRect">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="UnSelected"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>

                        <Grid VerticalAlignment="Center" HorizontalAlignment="Stretch">
                            <Grid Margin="2,2,2,2">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="15" />
                                        <ColumnDefinition Width="*" />
                                    </Grid.ColumnDefinitions>

                                    <!-- JM 09-21-16 TFS224438 - Initialize the focus rect's Opacity to zero, and update it in a ControlTemplate DataTrigger below when the control gets focus. -->
                                    <Rectangle x:Name="focusRect" 
                                               Grid.Column="1" 
                                               Fill="Transparent"
                                               Visibility="Collapsed"
                                               Opacity="0"
                                               StrokeThickness="1" 
                                               Stroke="{StaticResource ForegroundBrush}" 
                                               StrokeDashArray="1 2"
                                               HorizontalAlignment="Left"
                                               MinWidth="{Binding ElementName=displayName, Path=ActualWidth}"/>

                                    <TextBlock x:Name="displayName" 
                                               Grid.Column="1" 
                                               Text="{Binding DisplayName}" 
                                               Foreground="{StaticResource XamPropertyGrid_CategoryForegroundBrush}" 
                                               HorizontalAlignment="Left" 
                                               FontWeight="Bold"
                                               TextTrimming="CharacterEllipsis"/>
                                    
                                    <ToggleButton Grid.Column="0" 
                                                  Grid.ColumnSpan="2"
                                                  Background="Transparent"
                                                  HorizontalContentAlignment="Left"
                                                  IsChecked="{Binding CategoryItem.IsExpanded, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                                                  Template="{StaticResource ExpanderToggleButton}"/>
                                </Grid>
                            </Grid>
                        </Grid>
                    </Border>
                    
                    <!-- JM 09-21-16 TFS224438 - Show the focus rect when the control gets keyboard focus. -->
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding Path=IsKeyboardFocusWithin, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type igLocal:XamPropertyGrid}}}" Value="True">
                            <Setter TargetName="focusRect" Property="Opacity" Value="1"/>
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- *********************************  PropertyGridPropertyItemView Style  ********************************* -->
    <Style TargetType="igLocalPrim:PropertyGridPropertyItemView">
        <Setter Property="BorderBrush" Value="{StaticResource XamPropertyGrid_ItemBorderBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type igLocalPrim:PropertyGridPropertyItemView}">
                    <Border Background="{StaticResource XamPropertyGrid_ItemBackgroundBrush}" HorizontalAlignment="Stretch" Margin="{Binding IsCategorizedItem, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource PropertyItemMarginConverter}}">
                        
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="SelectedStates">
                                <VisualState x:Name="Selected">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Rectangle.Fill)" Storyboard.TargetName="highlightArea">
                                            <DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<SolidColorBrush Color="{StaticResource Color_010}"/>
												</DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ColorAnimation Duration="0" To="White" Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="displayName"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="UnSelected"/>
                            </VisualStateGroup>
                            
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Rectangle.Fill)" Storyboard.TargetName="highlightArea">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <SolidColorBrush Color="{StaticResource Color_011}"/>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Normal"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        
                        <Grid VerticalAlignment="Center" HorizontalAlignment="Stretch">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="{Binding PropertyGrid.NameColumnWidth, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource GridLengthConverter}}"/>
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>

                            <!-- Item name column -->
                            <Border x:Name="PART_DisplayNameBorder"
                                    BorderThickness="1,0,1,1" 
                                    BorderBrush="{StaticResource XamPropertyGrid_ItemNameBorderBrush}">
                                <Grid>
                                    <Grid Margin="{Binding PropertyItem.NestingLevel, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource ExpandableObjectMarginConverter}}">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="15" />
                                            <ColumnDefinition Width="*" />
                                        </Grid.ColumnDefinitions>

                                        <Rectangle x:Name="highlightArea" Grid.ColumnSpan="2" VerticalAlignment="Top" Height="{Binding ElementName=displayName, Path=ActualHeight}"/>

                                        <TextBlock x:Name="displayName" 
                                                   Grid.Column="1" 
                                                   Text="{Binding DisplayName}" 
                                                   Foreground="{StaticResource XamPropertyGrid_ItemForegroundBrush}"
                                                   Padding="2,3"
                                                   HorizontalAlignment="Stretch" 
                                                   VerticalAlignment="Top"
                                                   TextTrimming="CharacterEllipsis"/>

                                        <ToggleButton Grid.Column="0"
                                                      Grid.ColumnSpan="2"
                                                      Background="Transparent"
                                                      HorizontalContentAlignment="Left"
                                                      IsChecked="{Binding PropertyItem.IsExpanded, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                                                      Template="{StaticResource ExpanderToggleButton}"
                                                      Visibility="{Binding PropertyItem.IsExpandableResolved, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BoolToVisibilityConverter}}"/>
                                    </Grid>
                                </Grid>
                            </Border>

                            <!-- Item value/editor column -->
                            <Border Grid.Column="1"
                                    BorderThickness="0,0,1,1" 
                                    BorderBrush="{StaticResource XamPropertyGrid_ItemEditorBorderBrush}" 
                                    Background="Transparent">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="Auto" />
                                    </Grid.ColumnDefinitions>

                                    <!-- JM 10-10-16 TFS224559. Add a border around the editor that sets its BorderBrush if the property is a bound DependencyProperty. -->
                                    <Border BorderThickness="1" 
                                            BorderBrush="{Binding IsBoundDependencyProperty, Converter={StaticResource BoundPropertyBorderBrushConverter}, ConverterParameter={StaticResource XamPropertyGrid_ItemEditorBoundPropertyBorderBrush}}">
                                        <ContentControl x:Name="PART_EditorSiteContentControl"
                                                        Content="{TemplateBinding EditorElement}" 
                                                        VerticalAlignment="Center" 
                                                        HorizontalContentAlignment="Stretch" 
                                                        IsTabStop="False"/>
                                    </Border>

                                    <Button x:Name="PART_RemoveListEntryButton"
                                            Grid.Column="1" 
                                            Width="15" 
                                            Height="15" 
                                            Margin="2" 
                                            VerticalAlignment="Center"
                                            HorizontalAlignment="Right"
                                            IsTabStop="False"
                                            Focusable="False"
                                            ToolTip="{Binding Source={StaticResource toolTipRemoveListEntryButton}, Path=Value}" 
                                            Style="{DynamicResource {x:Static igLocalPrim:PropertyGridPropertyItemView.RemoveListEntryButtonStyleKey}}" 
                                            Visibility="{Binding Path=IsRemoveableFromList, Converter={StaticResource BoolToVisibilityConverter}}">
                                        <ig:Commanding.Commands>
                                            <ig:CommandSourceCollection>
                                                <igLocalPrim:PropertyGridPropertyItemCommandSource EventName="Click" CommandType="RemoveListEntry" ParameterBinding="{Binding}"/>
                                            </ig:CommandSourceCollection>
                                        </ig:Commanding.Commands>
                                    </Button>

                                    <Button x:Name="PART_OptionsMenuButton"
                                            Grid.Column="2" 
											MinHeight="8" 
											MinWidth="8" 
											Width="8" 
                                            Height="8" 
                                            Margin="4,7,2,2"
                                            VerticalAlignment="Top"
                                            IsTabStop="False"
                                            Focusable="False"
                                            HorizontalAlignment="Right">
                                        <Button.Template>
                                            <ControlTemplate TargetType="Button">
                                                <Grid>
                                                    <Rectangle Fill="{StaticResource XamPropertyGrid_PropertyValueResetButtonFillBrushCanReset}" 
                                                               Stroke="{StaticResource XamPropertyGrid_PropertyValueResetButtonBorderBrush}" 
                                                               StrokeThickness="1"
                                                               Cursor="Hand"
                                                               Visibility="{Binding Path=CanResetValue, Converter={StaticResource BoolToVisibilityConverter}}"
                                                               ToolTip="{Binding Source={StaticResource toolTipPropertyValueResetButtonCanReset}, Path=Value}"/>
                                                    
                                                    <Rectangle Fill="{StaticResource XamPropertyGrid_PropertyValueResetButtonFillBrushCannotReset}" 
                                                               Stroke="{StaticResource XamPropertyGrid_PropertyValueResetButtonBorderBrush}"
                                                               StrokeThickness="1"
                                                               Visibility="{Binding Path=CanResetValue, Converter={StaticResource InverseBoolToVisibilityConverter}}"
                                                               ToolTip="{Binding Source={StaticResource toolTipPropertyValueResetButtonCannotReset}, Path=Value}"/>

                                                    <!-- JM 10-10-16 TFS224559. Add a Rectangle that is shown if the property is a bound DependencyProperty.  
                                                    Use the same brush we use above for the border around the edit area when the property is a bound DependencyProperty. -->
                                                    <Rectangle Fill="{StaticResource XamPropertyGrid_ItemEditorBoundPropertyBorderBrush}" 
                                                               Stroke="{StaticResource XamPropertyGrid_PropertyValueResetButtonBorderBrush}" 
                                                               StrokeThickness="1"
                                                               Cursor="Hand"
                                                               Visibility="{Binding Path=IsBoundDependencyProperty, Converter={StaticResource BoolToVisibilityConverter}}"
                                                               ToolTip="{Binding Source={StaticResource toolTipPropertyValueResetButtonCanResetBinding}, Path=Value}"/>
                                                </Grid>
                                            </ControlTemplate>    
                                        </Button.Template>
                                        
                                        <ig:Commanding.Commands>
                                            <ig:CommandSourceCollection>
                                                <igLocalPrim:PropertyGridPropertyItemCommandSource EventName="Click" CommandType="ShowOptionsMenu" ParameterBinding="{Binding}"/>
                                            </ig:CommandSourceCollection>
                                        </ig:Commanding.Commands>
                                    </Button>
                                </Grid>
                            </Border>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

	<!-- *********************************  AddListEntryButton Style  ********************************* -->
    <Style x:Key="{x:Static igLocalPrim:PropertyGridListEditorControl.AddListEntryButtonStyleKey}" TargetType="{x:Type Button}" BasedOn="{StaticResource ButtonStyleBase}">
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
					<Grid ToolTip="{TemplateBinding ToolTip}" Background="{StaticResource TransparentBrush}">
						<Path HorizontalAlignment="Center" VerticalAlignment="Center" Height="1" Width="7" IsHitTestVisible="False" Stretch="Fill" Opacity="1" Fill="{StaticResource GlyphBackgroundBrush}" Data="M0,4 L7,4 L7,5 L0,5 z" />
						<Path HorizontalAlignment="Center" VerticalAlignment="Center" Height="7" Width="1" IsHitTestVisible="False" Stretch="Fill" Opacity="1" Fill="{StaticResource GlyphBackgroundBrush}" Data="M3,0 L4,0 L4,7 L3,7 z" />
					</Grid>
				</DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- *********************************  RemoveListEntryButton Style  ********************************* -->
    <Style x:Key="{x:Static igLocalPrim:PropertyGridPropertyItemView.RemoveListEntryButtonStyleKey}" TargetType="{x:Type Button}" BasedOn="{StaticResource ButtonStyleBase}">
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
					<Grid ToolTip="{TemplateBinding ToolTip}" Background="{StaticResource TransparentBrush}">
						<Path HorizontalAlignment="Center" VerticalAlignment="Center" Height="1" Width="8" IsHitTestVisible="False" Stretch="Fill" Opacity="1" Fill="{StaticResource GlyphBackgroundBrush}" Data="M0,0 L8,0 L8,1 L0,1 z" />
					</Grid>
				</DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- *********************************  PropertyGridListEditorControl Style  ********************************* -->
    <Style TargetType="igLocalPrim:PropertyGridListEditorControl">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="igLocalPrim:PropertyGridListEditorControl">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <!-- JM TFS231830 02-02-17 -->
                            <!--<ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />-->
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>

                        <!-- JM TFS231830 02-02-17 -->
                        <!--<TextBlock Margin="5,0,22,0" Text="{Binding PropertyItem.ListValueDescription, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"/>-->
                        <TextBlock Margin="5,0,0,0" Text="{Binding PropertyItem.ListValueDescription, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"/>

                        <Button x:Name="PART_AddListEntryButton"
                                Grid.Column="1" 
                                Width="15" 
                                Height="15" 
                                Margin="2" 
                                HorizontalAlignment="Right" 
                                ToolTip="{Binding Source={StaticResource toolTipAddListEntryButton}, Path=Value}" 
                                Style="{DynamicResource {x:Static igLocalPrim:PropertyGridListEditorControl.AddListEntryButtonStyleKey}}" 
                                Visibility="{Binding Path=PropertyItem.CanAddEntryToList, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BoolToVisibilityConverter}}">
                            <ig:Commanding.Commands>
                                <ig:CommandSourceCollection>
                                    <igLocalPrim:PropertyGridPropertyItemCommandSource EventName="Click" CommandType="AddListEntry" ParameterBinding="{Binding}"/>
                                </ig:CommandSourceCollection>
                            </ig:Commanding.Commands>
                        </Button>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- *********************************  CreateExpandableObjectButton Style  ********************************* -->
    <Style x:Key="{x:Static igLocalPrim:PropertyGridExpandableObjectEditorControl.CreateExpandableObjectButtonStyleKey}" TargetType="{x:Type Button}" BasedOn="{StaticResource ButtonStyleBase}">
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
					<Grid ToolTip="{TemplateBinding ToolTip}" Background="{StaticResource TransparentBrush}">
						<Path HorizontalAlignment="Center" VerticalAlignment="Center" Height="1" Width="7" IsHitTestVisible="False" Stretch="Fill" Opacity="1" Fill="{StaticResource GlyphBackgroundBrush}" Data="M0,4 L7,4 L7,5 L0,5 z" />
						<Path HorizontalAlignment="Center" VerticalAlignment="Center" Height="7" Width="1" IsHitTestVisible="False" Stretch="Fill" Opacity="1" Fill="{StaticResource GlyphBackgroundBrush}" Data="M3,0 L4,0 L4,7 L3,7 z" />
					</Grid>
				</DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- *********************************  PropertyGridExpandableObjectEditorControl Style  ********************************* -->
    <Style TargetType="igLocalPrim:PropertyGridExpandableObjectEditorControl">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="igLocalPrim:PropertyGridExpandableObjectEditorControl">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>

                        <!-- JM 05-27-15 TFS194571 -->
                        <TextBlock Margin="5,0,22,0" Text="{Binding PropertyItem.ExpandableObjectValueDescription, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"/>

                        <Button x:Name="PART_CreateExpandableObjectButton"
                                Grid.Column="1" 
                                Width="15" 
                                Height="15" 
                                Margin="2" 
                                HorizontalAlignment="Right" 
                                ToolTip="{Binding Source={StaticResource toolTipCreateExpandableObjectButton}, Path=Value}" 
                                Style="{DynamicResource {x:Static igLocalPrim:PropertyGridExpandableObjectEditorControl.CreateExpandableObjectButtonStyleKey}}" 
                                Visibility="{Binding Path=PropertyItem.CanCreateExpandableObjectInstance, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BoolToVisibilityConverter}}">
                            <ig:Commanding.Commands>
                                <ig:CommandSourceCollection>
                                    <igLocalPrim:PropertyGridPropertyItemCommandSource EventName="Click" CommandType="CreateExpandableObject" ParameterBinding="{Binding}"/>
                                </ig:CommandSourceCollection>
                            </ig:Commanding.Commands>
                        </Button>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- *********************************  PropertyGrid Style  ********************************* -->
    <Style TargetType="igLocal:XamPropertyGrid">
        <Setter Property="Background" Value="{StaticResource XamPropertyGrid_BackgroundBrush}" />
		<Setter Property="BorderBrush" Value="{StaticResource XamPropertyGrid_BorderBrush}" />
		<Setter Property="BorderThickness" Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="igLocal:XamPropertyGrid">
                    <Border
						BorderBrush="{TemplateBinding BorderBrush}"
						BorderThickness="{TemplateBinding BorderThickness}"
						Background="{TemplateBinding Background}"
						Padding="{TemplateBinding Padding}"
						igPrim:XamlHelper.SnapsToDevicePixels="True">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition />
                                <RowDefinition Height="5" />
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>

                            <!-- Filter area. -->
                            <Grid Grid.Row="0" Margin="4" Visibility="{TemplateBinding FilterAreaVisibility}">
                                <igLocalPrim:PropertyGridFilterAreaControl x:Name="PART_PropertyGridFilterAreaControl"/>
                            </Grid>

                            <!-- Properties area. -->
							<Border Grid.Row="1" BorderThickness="0,2,0,0" BorderBrush="{StaticResource XamPropertyGrid_DescriptionAreaBackgroundBrush}">
								<Grid>
									<Grid.ColumnDefinitions>
										<ColumnDefinition Width="*" />
										<ColumnDefinition Width="Auto" />
									</Grid.ColumnDefinitions>

									<!-- Panel that lays out all the items-->
									<igLocalPrim:PropertyGridItemLayoutPanel x:Name="PART_ItemLayoutPanel" Grid.Column="0" Background="{StaticResource XamPropertyGrid_ItemLayoutPanelBackgroundBrush}">
										<igLocalPrim:PropertyGridItemLayoutPanel.Resources>
											<!-- Settings for the CheckBox control used as a property editor. -->
											<Style TargetType="CheckBox">
												<Setter Property="VerticalContentAlignment" Value="Top" />
												<Setter Property="Margin" Value="5,0,0,0" />
											</Style>

											<!-- Settings for the ComboBox control used as a property editor. -->
											<Style TargetType="ComboBox">
												<Setter Property="BorderThickness" Value="0" />
											</Style>

											<!-- Settings for the TextBox control used as a property editor. -->
											<Style TargetType="TextBox">
												<Setter Property="BorderThickness" Value="0" />
												<Setter Property="Margin" Value="4,0,0,0" />
											</Style>

											<!-- Settings for the XamDateTimeInput control used as a property editor. -->
											<Style TargetType="ig:XamDateTimeInput">
												<Setter Property="BorderThickness" Value="0" />
												<Setter Property="DropDownButtonDisplayMode" Value="MouseOver" />
											</Style>

											<!-- Settings for the XamColorPicker control used as a property editor. -->
											<Style TargetType="ig:XamColorPicker">
												<Setter Property="BorderThickness" Value="0" />
											</Style>
										</igLocalPrim:PropertyGridItemLayoutPanel.Resources>
									</igLocalPrim:PropertyGridItemLayoutPanel>

									<ScrollBar x:Name="PART_VerticalScrollBar" Orientation="Vertical" Grid.Column="1" Visibility="{TemplateBinding ScrollBarVisibility}" />

									<!-- Invisible thumb for resizing the Name column -->
									<Thumb x:Name="PART_NameColumnDragThumb" HorizontalAlignment="Left" Width="6" Margin="-4,0,0,0" Cursor="SizeWE">
										<Thumb.Template>
											<ControlTemplate>
												<Border Background="Transparent" />
											</ControlTemplate>
										</Thumb.Template>
									</Thumb>
								</Grid>
							</Border>
							<!-- Description area. -->
                            <GridSplitter x:Name="PART_DescriptionAreaSplitter"
                                            Grid.Row="2"
                                            Height="5" 
                                            Background="{StaticResource XamPropertyGrid_DescriptionAreaSplitterBackgroundBrush}"
                                            HorizontalAlignment="Stretch" 
                                            Visibility="{TemplateBinding DescriptionAreaVisibility}"/>

                            <Grid Grid.Row="3" Visibility="{TemplateBinding DescriptionAreaVisibility}">
                                <igLocalPrim:PropertyGridDescriptionAreaControl x:Name="PART_PropertyGridDescriptionAreaControl"/>
                            </Grid>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- ============================================================================================================== -->
    <!-- ============================================================================================================== -->
    <!-- ============================================================================================================== -->
    <!-- ============================================================================================================== -->
    <!-- ______________________________________________________________________________________________________________ -->
    <!-- PropertyGridBrushEditor Stuff (isolating this stuff here in case we ever want to make this a separate control) -->
    <!-- \____________________________________________________________________________________________________________/ -->
    <!--                                                                                                                -->
	
    <!-- *********************************  BRUSHES  ********************************* -->
	<!-- BrushEditor Expander Button Brushes -->
	<SolidColorBrush x:Key="PropertyGridBrushEditorExpanderButtonBackgroundBrush" Color="{StaticResource Color_009}" />
	<SolidColorBrush x:Key="PropertyGridBrushEditorExpanderButtonBorderBrush" Color="{StaticResource Color_005}" />
	<SolidColorBrush x:Key="PropertyGridBrushEditorExpanderButtonHoverBackgroundBrush" Color="{StaticResource Color_011}" />
	<SolidColorBrush x:Key="PropertyGridBrushEditorExpanderButtonHoverBorderBrush" Color="{StaticResource Color_011}" />
	<SolidColorBrush x:Key="PropertyGridBrushEditorExpanderButtonPressedBackgroundBrush" Color="{StaticResource Color_010}" />
	<SolidColorBrush x:Key="PropertyGridBrushEditorExpanderButtonPressedBorderBrush" Color="{StaticResource Color_010}" />
	<SolidColorBrush x:Key="PropertyGridBrushEditorExpanderArrowHoverBorderBrush" Color="{StaticResource Color_001}" />
	<SolidColorBrush x:Key="PropertyGridBrushEditorExpanderArrowPressedBorderBrush" Color="{StaticResource Color_009}" />
	<SolidColorBrush x:Key="PropertyGridBrushEditorExpanderDisabledForegroundBrush" Color="{StaticResource Color_007}" />
	<SolidColorBrush x:Key="PropertyGridBrushEditorGlyphBackgroundBrush" Color="{StaticResource Color_004}" />
	
	<!-- PropertyGridBrushEditor Brushes -->
	<SolidColorBrush x:Key="PropertyGridBrushEditorColorSampleBorderBrush" Color="{StaticResource Color_005}" />
	<SolidColorBrush x:Key="PropertyGridBrushEditorCurrentColorBorderBrush" Color="{StaticResource Color_005}" />
	<SolidColorBrush x:Key="PropertyGridBrushEditorGradientThumbOuterBackgroundBrush" Color="{StaticResource Color_009}" />
	<SolidColorBrush x:Key="PropertyGridBrushEditorGradientThumbInnerBorderBrush" Color="{StaticResource Color_001}" />
	<SolidColorBrush x:Key="PropertyGridBrushEditorGradientStopsBorderBrush" Color="{StaticResource Color_005}" />
	<SolidColorBrush x:Key="PropertyGridBrushEditorColorShadePickerShadingCanvasBorderBrush" Color="{StaticResource Color_005}" />
	<LinearGradientBrush x:Key="PropertyGridBrushEditorLinearGradienBackgroundBrush" EndPoint="1,0.5" StartPoint="0,0.5">
		<GradientStop Color="{StaticResource Color_002}" Offset="1" />
		<GradientStop Color="{StaticResource Color_009}" />
	</LinearGradientBrush>
	<RadialGradientBrush x:Key="PropertyGridBrushEditorRadialGradienBackgroundBrush">
		<GradientStop Color="{StaticResource Color_002}" Offset="1" />
		<GradientStop Color="{StaticResource Color_009}" />
	</RadialGradientBrush>

	<!-- *********************************  CONVERTERS  ********************************* -->
    <igLocalPrim:ByteDoubleConverter x:Key="byteDoubleConverter"/>
    <igLocalPrim:ByteIntConverter x:Key="byteIntConverter"/>
    <igPrim:BoolToVisibilityConverter x:Key="boolToVisibilityConverter"/>
    <igControls:NotBoolToVisibilityConverter x:Key="notBoolToVisibilityConverter"/>

    <!-- *********************************  STRING RESOURCES  ********************************* -->
    <igLocalPrim:PropertyGridResourceString x:Key="toolTipNoBrushButton" ResourceName="ToolTip_NoBrushButton" />
    <igLocalPrim:PropertyGridResourceString x:Key="toolTipSolidBrushButton" ResourceName="ToolTip_SolidBrushButton" />
    <igLocalPrim:PropertyGridResourceString x:Key="toolTipGradientBrushButton" ResourceName="ToolTip_GradientBrushButton" />
    <igLocalPrim:PropertyGridResourceString x:Key="toolTipInitialColorRectangle" ResourceName="ToolTip_InitialColorRectangle" />
    <igLocalPrim:PropertyGridResourceString x:Key="toolTipCurrentColorRectangle" ResourceName="ToolTip_CurrentColorRectangle" />
    <igLocalPrim:PropertyGridResourceString x:Key="toolTipRedValueTextBox" ResourceName="ToolTip_RedValueTextBox" />
    <igLocalPrim:PropertyGridResourceString x:Key="toolTipGreenValueTextBox" ResourceName="ToolTip_GreenValueTextBox" />
    <igLocalPrim:PropertyGridResourceString x:Key="toolTipBlueValueTextBox" ResourceName="ToolTip_BlueValueTextBox" />
    <igLocalPrim:PropertyGridResourceString x:Key="toolTipAlphaValueTextBox" ResourceName="ToolTip_AlphaValueTextBox" />
    <igLocalPrim:PropertyGridResourceString x:Key="toolTipLinearGradientButton" ResourceName="ToolTip_LinearGradientButton" />
    <igLocalPrim:PropertyGridResourceString x:Key="toolTipRadialGradientButton" ResourceName="ToolTip_RadialGradientButton" />
    <igLocalPrim:PropertyGridResourceString x:Key="toolTipReverseStopsButton" ResourceName="ToolTip_ReverseStopsButton" />
    <igLocalPrim:PropertyGridResourceString x:Key="toolTipVerticalLinearGradientButton" ResourceName="ToolTip_VerticalLinearGradientButton" />
    <igLocalPrim:PropertyGridResourceString x:Key="toolTipHorizontalLinearGradientButton" ResourceName="ToolTip_HorizontalLinearGradientButton" />
    <igLocalPrim:PropertyGridResourceString x:Key="miscTextNone" ResourceName="MiscText_None" />
    <igLocalPrim:PropertyGridResourceString x:Key="miscTextR" ResourceName="MiscText_R" />
    <igLocalPrim:PropertyGridResourceString x:Key="miscTextG" ResourceName="MiscText_G" />
    <igLocalPrim:PropertyGridResourceString x:Key="miscTextB" ResourceName="MiscText_B" />
	<igLocalPrim:PropertyGridResourceString x:Key="miscTextA" ResourceName="MiscText_A" />

    <!-- JM 10-04-16 TFS224563 - Added. -->
    <igLocalPrim:PropertyGridResourceString x:Key="toolTipSelectBrushResourceButton" ResourceName="ToolTip_SelectBrushResourceButton" />

	<!-- *********************************  NumericRangeSlider Style  ********************************* -->
	<Style TargetType="ig:XamSliderBase" x:Key="NumericRangeSliderStyle">
		<Setter Property="Orientation" Value="Horizontal" />
		<Setter Property="IsMouseWheelEnabled" Value="False" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="ig:XamSliderBase">
					<Grid x:Name="RootElement" Background="{TemplateBinding Background}">
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="OrientationStates">
								<VisualState x:Name="Horizontal" />
								<VisualState x:Name="Vertical">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="HorizontalSlider" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="00:00:00">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Collapsed</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="VerticalSlider" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="00:00:00">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Visible</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<Border x:Name="HorizontalSlider" BorderBrush="{StaticResource PropertyGridBrushEditorGradientStopsBorderBrush}" BorderThickness="1">
							<Grid>
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="Auto" />
									<ColumnDefinition Width="*" />
									<ColumnDefinition Width="Auto" />
								</Grid.ColumnDefinitions>
								<RepeatButton x:Name="HorizontalDecrease" Visibility="{TemplateBinding DecreaseButtonVisibility}" Grid.Column="0" Margin="0,0,4,0" igPrim:XamlHelper.Focusable="False">
									<ig:Commanding.Command>
										<ig:XamSliderBaseCommandSource EventName="Click" CommandType="SmallDecrease" />
									</ig:Commanding.Command>
								</RepeatButton>
								<RepeatButton x:Name="HorizontalIncrease" Visibility="{TemplateBinding IncreaseButtonVisibility}" Grid.Column="2" Margin="6,0,0,0" RenderTransformOrigin="0.5,0.5" igPrim:XamlHelper.Focusable="False">
									<ig:Commanding.Command>
										<ig:XamSliderBaseCommandSource EventName="Click" CommandType="SmallIncrease" />
									</ig:Commanding.Command>
								</RepeatButton>
								<Grid x:Name="HorizontalSlidersGrid" Grid.Column="1">
									<Grid.RowDefinitions>
										<RowDefinition Height="*" />
										<RowDefinition Height="Auto" />
										<RowDefinition Height="*" />
									</Grid.RowDefinitions>
								</Grid>
								<Grid x:Name="HorizontalTickMarks" Grid.Column="1" Background="{StaticResource TransparentBrush}" Margin="0" />
								<Grid x:Name="HorizontalTrack" Height="11" Grid.Column="1" Background="{StaticResource TransparentBrush}">
									<Rectangle Fill="{StaticResource TransparentBrush}" Height="1" Margin="0" igPrim:XamlHelper.SnapsToDevicePixels="True" />
									<Canvas x:Name="HorizontalTrackFills" />
									<Canvas x:Name="HorizontalThumbs" />
								</Grid>
							</Grid>
						</Border>
						<Border x:Name="VerticalSlider" BorderBrush="{StaticResource PropertyGridBrushEditorGradientStopsBorderBrush}" BorderThickness="1" Visibility="Collapsed">
							<Grid>
								<Grid.RowDefinitions>
									<RowDefinition Height="Auto" />
									<RowDefinition Height="*" />
									<RowDefinition Height="Auto" />
								</Grid.RowDefinitions>
								<RepeatButton x:Name="VerticalDecrease" Visibility="{TemplateBinding DecreaseButtonVisibility}" Grid.Row="2" Margin="0,6,0,0" RenderTransformOrigin="0.5,0.5" igPrim:XamlHelper.Focusable="False">
									<ig:Commanding.Command>
										<ig:XamSliderBaseCommandSource EventName="Click" CommandType="SmallDecrease" />
									</ig:Commanding.Command>
								</RepeatButton>
								<RepeatButton x:Name="VerticalIncrease" Visibility="{TemplateBinding IncreaseButtonVisibility}" Margin="0,0,0,4" RenderTransformOrigin="0.5,0.5" igPrim:XamlHelper.Focusable="False">
									<ig:Commanding.Command>
										<ig:XamSliderBaseCommandSource EventName="Click" CommandType="SmallIncrease" />
									</ig:Commanding.Command>
								</RepeatButton>
								<Grid x:Name="VerticalSlidersGrid" Grid.Row="1">
									<Grid.ColumnDefinitions>
										<ColumnDefinition Width="*" />
										<ColumnDefinition Width="Auto" />
										<ColumnDefinition Width="*" />
									</Grid.ColumnDefinitions>
								</Grid>
								<Grid x:Name="VerticalTickMarks" Grid.Row="1" Background="{StaticResource TransparentBrush}" Margin="0" />
								<Grid x:Name="VerticalTrack" Width="11" Grid.Row="1" Background="{StaticResource TransparentBrush}">
									<Rectangle Fill="{StaticResource TransparentBrush}" Width="1" Margin="0" igPrim:XamlHelper.SnapsToDevicePixels="True" />
									<Canvas x:Name="VerticalTrackFills" />
									<Canvas x:Name="VerticalThumbs" />
								</Grid>
							</Grid>
						</Border>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	
	<!-- *********************************  SliderNumericThumb Style  ********************************* -->
	<Style TargetType="ig:XamSliderNumericThumb" x:Key="NumericThumbStyle">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="ig:XamSliderNumericThumb">
					<Grid x:Name="RootElement">
						<ToolTipService.ToolTip>
							<ToolTip x:Name="ThumbToolTip" ContentTemplate="{TemplateBinding ToolTipTemplate}" Visibility="{TemplateBinding ToolTipVisibility}" />
						</ToolTipService.ToolTip>
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="EnabledStates">
								<VisualState x:Name="Enabled"></VisualState>
								<VisualState x:Name="Disabled">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="DisabledElement" Storyboard.TargetProperty="(UIElement.Visibility)">
											<DiscreteObjectKeyFrame KeyTime="00:00:00">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Visible</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="FocusStates">
								<VisualState x:Name="Unfocused"></VisualState>
								<VisualState x:Name="Focused">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="FocusElement" Storyboard.TargetProperty="(UIElement.Visibility)">
											<DiscreteObjectKeyFrame KeyTime="00:00:00">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Visible</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="InnerBlackBorder" Storyboard.TargetProperty="(UIElement.Visibility)">
											<DiscreteObjectKeyFrame KeyTime="00:00:00">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Collapsed</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="ActiveStates">
								<VisualState x:Name="Inactive" />
								<VisualState x:Name="Active" />
							</VisualStateGroup>
							<VisualStateGroup x:Name="HoverStates">
								<VisualState x:Name="NoHover" />
								<VisualState x:Name="Hover" />
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<Grid x:Name="HorizontalThumb" Margin="-6,8,6,0">
							<Grid x:Name="HorizontalThumbContent" Height="17" Width="12">
								<Path x:Name="BaseBg" Stretch="Fill" Opacity="1" Data="M1,16 L11,16 L11,5 L6,1 L1,5 z" Fill="{TemplateBinding Background}" Height="15" Width="10" />
								<Path x:Name="InnerWhiteBorder" Stretch="Fill" Opacity="1" Data="M0,17 L12,17 L12,5 L6,0 L0,5 z" Stroke="{StaticResource PropertyGridBrushEditorGradientThumbOuterBackgroundBrush}" StrokeThickness="2" Height="17" HorizontalAlignment="Left" VerticalAlignment="Top" Width="12" />
								<Path x:Name="InnerBlackBorder" Stretch="Fill" Opacity="1" Data="M1,16 L11,16 L11,5 L6,1 L1,5 z" Stroke="{StaticResource PropertyGridBrushEditorGradientThumbInnerBorderBrush}" StrokeThickness="1" Height="15" Width="10" />
								<Path x:Name="FocusElement" Stretch="Fill" Opacity="1" Data="M0,17 L12,17 L12,5 L6,0 L0,5 z" Stroke="{StaticResource PropertyGridBrushEditorGradientThumbInnerBorderBrush}" StrokeThickness="1" Height="17" HorizontalAlignment="Left" VerticalAlignment="Top" Width="12" Visibility="Collapsed" />
								<Path x:Name="DisabledElement" Stretch="Fill" Opacity="0.5" Data="M 2.39,0 C2.39,0 5.60,0 5.60,0 6.92,0 8,1.17 8,2.62 8,2.62 8,11.51 8,11.51 8,11.51 3.90,15 3.90,15 3.90,15 0,11.51 0,11.51 0,11.51 0,2.62 0,2.62 0,1.17 1.07,0 2.39,0 z" Stroke="White" StrokeThickness="1" Height="15" HorizontalAlignment="Left" Margin="0,0,0,0" VerticalAlignment="Top" Width="10" Visibility="Collapsed" />
							</Grid>
						</Grid>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- *********************************  Expander Down Style  ********************************* -->
	<Style x:Key="PropertyGridBrushEditorExpanderDownHeaderStyle" TargetType="{x:Type ToggleButton}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ToggleButton}">
					<Border Padding="{TemplateBinding Padding}">
						<Grid Background="{StaticResource TransparentBrush}" SnapsToDevicePixels="False">
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="*" />
								<ColumnDefinition Width="18" />
							</Grid.ColumnDefinitions>
							<Rectangle Grid.Column="1" x:Name="rectangle" Width="18" Height="18" Fill="{StaticResource PropertyGridBrushEditorExpanderButtonBackgroundBrush}" HorizontalAlignment="Center" Stroke="{StaticResource PropertyGridBrushEditorExpanderButtonBorderBrush}" VerticalAlignment="Center" />
							<Path Grid.Column="1" x:Name="arrow" Width="7" Height="4" Fill="{StaticResource GlyphBackgroundBrush}" Data="M0,0 L7,0 L3.5,4 z" Stretch="Fill" RenderTransformOrigin="0.5, 0.5" />
							<ContentPresenter Grid.Column="0" HorizontalAlignment="Stretch" RecognizesAccessKey="True" SnapsToDevicePixels="True" VerticalAlignment="Center" />
						</Grid>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsChecked" Value="true">
							<Setter Property="Data" TargetName="arrow" Value="M0,4 L7,4 L3.5,0 z" />
						</Trigger>
						<Trigger Property="IsMouseOver" Value="true">
							<Setter Property="Fill" TargetName="rectangle" Value="{StaticResource PropertyGridBrushEditorExpanderButtonHoverBackgroundBrush}" />
							<Setter Property="Stroke" TargetName="rectangle" Value="{StaticResource PropertyGridBrushEditorExpanderButtonHoverBorderBrush}" />
							<Setter Property="Fill" TargetName="arrow" Value="{StaticResource PropertyGridBrushEditorExpanderArrowHoverBorderBrush}" />
						</Trigger>
						<Trigger Property="IsPressed" Value="true">
							<Setter Property="Fill" TargetName="rectangle" Value="{StaticResource PropertyGridBrushEditorExpanderButtonPressedBackgroundBrush}" />
							<Setter Property="Stroke" TargetName="rectangle" Value="{StaticResource PropertyGridBrushEditorExpanderButtonPressedBorderBrush}" />
							<Setter Property="Fill" TargetName="arrow" Value="{StaticResource PropertyGridBrushEditorExpanderArrowPressedBorderBrush}" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- *********************************  Expander Style  ********************************* -->
	<Style x:Key="PropertyGridBrushEditorExpanderStyle" TargetType="{x:Type Expander}">
		<Setter Property="FontFamily" Value="Segoe UI" />
		<Setter Property="FontSize" Value="12" />
		<Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
		<Setter Property="BorderThickness" Value="1" />
		<Setter Property="HorizontalContentAlignment" Value="Stretch" />
		<Setter Property="VerticalContentAlignment" Value="Stretch" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Expander}">
					<Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="3" SnapsToDevicePixels="true">
						<DockPanel>
                            <!-- JM 10-14-14 TFS183020 Set IsTabStop to false. -->
							<ToggleButton x:Name="HeaderSite" ContentTemplate="{TemplateBinding HeaderTemplate}" ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}" Content="{TemplateBinding Header}" DockPanel.Dock="Top" Foreground="{TemplateBinding Foreground}" FontWeight="{TemplateBinding FontWeight}" FontStyle="{TemplateBinding FontStyle}" FontStretch="{TemplateBinding FontStretch}" FontSize="{TemplateBinding FontSize}" FontFamily="{TemplateBinding FontFamily}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Margin="1" MinWidth="0" MinHeight="0" Padding="{TemplateBinding Padding}" Style="{StaticResource PropertyGridBrushEditorExpanderDownHeaderStyle}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" IsTabStop="False"/>
							<ContentPresenter x:Name="ExpandSite" DockPanel.Dock="Bottom" Focusable="false" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="1,5" Visibility="Collapsed" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
						</DockPanel>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsExpanded" Value="true">
							<Setter Property="Visibility" TargetName="ExpandSite" Value="Visible" />
						</Trigger>
						<Trigger Property="IsEnabled" Value="false">
							<Setter Property="Foreground" Value="{StaticResource PropertyGridBrushEditorExpanderDisabledForegroundBrush}" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	
	<!-- *********************************  Horizontal Gradient RadioButton Style  ********************************* -->
	<Style x:Key="PropertyGridBrushEditorHorizontalGradientRadioButtonStyle" TargetType="{x:Type RadioButton}">
		<Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
		<Setter Property="HorizontalContentAlignment" Value="Center" />
		<Setter Property="VerticalContentAlignment" Value="Center" />
		<Setter Property="MinHeight" Value="22" />
		<Setter Property="MinWidth" Value="22" />
		<Setter Property="BorderThickness" Value="1" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="RadioButton">
					<Grid igPrim:XamlHelper.SnapsToDevicePixels="True">
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal" />
								<VisualState x:Name="MouseOver">
									<Storyboard>
										<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="hover" />
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Pressed">
									<Storyboard>
										<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="pressed" />
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Disabled">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="DisabledVisualElement">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Visible</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="CheckStates">
								<VisualState x:Name="Checked">
									<Storyboard>
										<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="checked" />
										<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="glyphSelected" />
										<DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="glyph" />
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Unchecked" />
								<VisualState x:Name="Indeterminate" />
							</VisualStateGroup>
							<VisualStateGroup x:Name="FocusStates">
								<VisualState x:Name="Focused">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="FocusedVisualElement">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Visible</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Unfocused" />
							</VisualStateGroup>
							<VisualStateGroup x:Name="ValidationStates">
								<VisualState x:Name="Valid" />
								<VisualState x:Name="InvalidUnfocused" />
								<VisualState x:Name="InvalidFocused" />
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<Rectangle x:Name="normal" Fill="{StaticResource ButtonBackgroundBrush}" Stroke="{StaticResource ButtonBorderBrush}" StrokeThickness="1" />
						<Rectangle x:Name="hover" Fill="{StaticResource ButtonHoverBackgroundBrush}" Stroke="{StaticResource ButtonHoverBorderBrush}" StrokeThickness="1" Opacity="0" />
						<Rectangle x:Name="pressed" Fill="{StaticResource ButtonPressedBackgroundBrush}" Stroke="{StaticResource ButtonPressedBorderBrush}" StrokeThickness="1" Opacity="0" />
						<Rectangle x:Name="checked" Fill="{StaticResource ButtonPressedBackgroundBrush}" Stroke="{StaticResource ButtonPressedBorderBrush}" StrokeThickness="1" Opacity="0" />
						<Rectangle x:Name="DisabledVisualElement" Fill="{StaticResource DisabledBackgroundBrush}" Stroke="{StaticResource DisabledBorderBrush}" StrokeThickness="1" Visibility="Collapsed" />
						<Grid x:Name="glyph" Width="16">
							<Rectangle Width="16" Height="1" StrokeThickness="0" Fill="{StaticResource PropertyGridBrushEditorGlyphBackgroundBrush}" VerticalAlignment="Center" HorizontalAlignment="Center" />
							<Path Width="16" Height="7" Stretch="Fill" StrokeThickness="1" Fill="{StaticResource PropertyGridBrushEditorGlyphBackgroundBrush}" Data="M3,0 L0,3 L3,6z M13,0 L16,3 L13,6z" VerticalAlignment="Center" HorizontalAlignment="Center" />
						</Grid>
						<Grid x:Name="glyphSelected" Width="16" Opacity="0">
							<Rectangle Width="16" Height="1" StrokeThickness="0" Fill="{StaticResource LightForegroundBrush}" VerticalAlignment="Center" HorizontalAlignment="Center" />
							<Path Width="16" Height="7" Stretch="Fill" StrokeThickness="1" Fill="{StaticResource LightForegroundBrush}" Data="M3,0 L0,3 L3,6z M13,0 L16,3 L13,6z" VerticalAlignment="Center" HorizontalAlignment="Center" />
						</Grid>
						<Rectangle x:Name="FocusedVisualElement" Stroke="{StaticResource ButtonPressedBorderBrush}" Visibility="Collapsed" StrokeThickness="1" />
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	
	<!-- *********************************  Vertical Gradient RadioButton Style  ********************************* -->
	<Style x:Key="PropertyGridBrushEditorVerticalGradientRadioButtonStyle" TargetType="{x:Type RadioButton}">
		<Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
		<Setter Property="HorizontalContentAlignment" Value="Center" />
		<Setter Property="VerticalContentAlignment" Value="Center" />
		<Setter Property="MinHeight" Value="22" />
		<Setter Property="MinWidth" Value="22" />
		<Setter Property="BorderThickness" Value="1" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="RadioButton">
					<Grid igPrim:XamlHelper.SnapsToDevicePixels="True">
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal" />
								<VisualState x:Name="MouseOver">
									<Storyboard>
										<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="hover" />
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Pressed">
									<Storyboard>
										<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="pressed" />
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Disabled">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="DisabledVisualElement">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Visible</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="CheckStates">
								<VisualState x:Name="Checked">
									<Storyboard>
										<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="checked" />
										<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="glyphSelected" />
										<DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="glyph" />
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Unchecked" />
								<VisualState x:Name="Indeterminate" />
							</VisualStateGroup>
							<VisualStateGroup x:Name="FocusStates">
								<VisualState x:Name="Focused">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="FocusedVisualElement">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Visible</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Unfocused" />
							</VisualStateGroup>
							<VisualStateGroup x:Name="ValidationStates">
								<VisualState x:Name="Valid" />
								<VisualState x:Name="InvalidUnfocused" />
								<VisualState x:Name="InvalidFocused" />
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<Rectangle x:Name="normal" Fill="{StaticResource ButtonBackgroundBrush}" Stroke="{StaticResource ButtonBorderBrush}" StrokeThickness="1" />
						<Rectangle x:Name="hover" Fill="{StaticResource ButtonHoverBackgroundBrush}" Stroke="{StaticResource ButtonHoverBorderBrush}" StrokeThickness="1" Opacity="0" />
						<Rectangle x:Name="pressed" Fill="{StaticResource ButtonPressedBackgroundBrush}" Stroke="{StaticResource ButtonPressedBorderBrush}" StrokeThickness="1" Opacity="0" />
						<Rectangle x:Name="checked" Fill="{StaticResource ButtonPressedBackgroundBrush}" Stroke="{StaticResource ButtonPressedBorderBrush}" StrokeThickness="1" Opacity="0" />
						<Rectangle x:Name="DisabledVisualElement" Fill="{StaticResource DisabledBackgroundBrush}" Stroke="{StaticResource DisabledBorderBrush}" StrokeThickness="1" Visibility="Collapsed" />
						<Grid x:Name="glyph" Height="16">
							<Rectangle Height="16" Width="1" StrokeThickness="0" Fill="{StaticResource PropertyGridBrushEditorGlyphBackgroundBrush}" VerticalAlignment="Center" HorizontalAlignment="Center" />
							<Path Height="16" Width="7" Stretch="Fill" StrokeThickness="1" Fill="{StaticResource PropertyGridBrushEditorGlyphBackgroundBrush}" Data="M0,3 L3,0 L6,3z M0,13 L3,16 L6,13z" VerticalAlignment="Center" HorizontalAlignment="Center" />
						</Grid>
						<Grid x:Name="glyphSelected" Height="16" Opacity="0">
							<Rectangle Height="16" Width="1" StrokeThickness="0" Fill="{StaticResource LightForegroundBrush}" VerticalAlignment="Center" HorizontalAlignment="Center" />
							<Path Height="16" Width="7" Stretch="Fill" StrokeThickness="1" Fill="{StaticResource LightForegroundBrush}" Data="M0,3 L3,0 L6,3z M0,13 L3,16 L6,13z" VerticalAlignment="Center" HorizontalAlignment="Center" />
						</Grid>
						<Rectangle x:Name="FocusedVisualElement" Stroke="{StaticResource ButtonPressedBorderBrush}" Visibility="Collapsed" StrokeThickness="1" />
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	
    <!-- *********************************  PropertyGridBrushEditorControl Style  ********************************* -->
    <Style TargetType="igLocalPrim:PropertyGridBrushEditorControl">
        <Setter Property="Background" Value="White" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="igLocalPrim:PropertyGridBrushEditorControl">
                    <Expander x:Name="expander" IsExpanded="{Binding Path=IsExpanded, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource PropertyGridBrushEditorExpanderStyle}">
                        <Expander.HeaderTemplate>
                            <DataTemplate>
                                <Grid>
                                    <Border BorderThickness="1" BorderBrush="{StaticResource PropertyGridBrushEditorColorSampleBorderBrush}" HorizontalAlignment="Stretch" Margin="0,0,1,0">
                                        <Grid>
                                            <TextBlock Text="{Binding Source={StaticResource miscTextNone}, Path=Value}"
                                                       Height="16"/>
                                            <!-- JM 10-04-16 TFS224563 - Changed the Visibility binding to use a new TransparentPreviewBrushVisibility property. -->
                                            <Rectangle Fill="{Binding TransparentPreviewBrush, RelativeSource={RelativeSource AncestorType={x:Type igLocalPrim:PropertyGridBrushEditorControl}}}" 
                                                       Height="16"
                                                       Visibility="{Binding Path=TransparentPreviewBrushVisibility, RelativeSource={RelativeSource AncestorType={x:Type igLocalPrim:PropertyGridBrushEditorControl}}}"/>
                                            <Rectangle Fill="{Binding Path=SelectedBrush, RelativeSource={RelativeSource AncestorType={x:Type igLocalPrim:PropertyGridBrushEditorControl}}}" 
                                                       Height="16"/>
                                        </Grid>
                                    </Border>
                                </Grid>
                            </DataTemplate>
                        </Expander.HeaderTemplate>

                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition x:Name="brushTypeRow" Height="Auto"/>
                                <RowDefinition x:Name="samplingRow" Height="*"/>
                                <RowDefinition x:Name="gradientStopsRow" Height="Auto"/>
                            </Grid.RowDefinitions>

                            <!-- Brush Types Area -->
                            <Grid Grid.Row="0">
                                <StackPanel Orientation="Horizontal" HorizontalAlignment="Stretch">
                                    <RadioButton IsThreeState="False" Width="55" Height="23" Margin="0,0,2,0" Style="{StaticResource RadioButtonStyleBase}" IsChecked="{Binding Path=IsNullBrush, RelativeSource={RelativeSource TemplatedParent}}" ToolTip="{Binding Source={StaticResource toolTipNoBrushButton}, Path=Value}">
                                        <Grid Margin="0,0,0,1">
                                            <Path Width="15" Height="9" Fill="{StaticResource PropertyGridBrushEditorGlyphBackgroundBrush}" Data="M0,0 L15,0 L0,10 z" Stretch="Fill" />
                                            <Path Width="15" Height="9" Fill="{StaticResource PropertyGridBrushEditorGlyphBackgroundBrush}" Data="M15,0 L15,10 L0,10 z" Stretch="Fill" Margin="2,2,0,0" />
                                        </Grid>
                                    </RadioButton>
                                    <RadioButton IsThreeState="False" Width="55" Height="23" Margin="2,0,2,0" Style="{StaticResource RadioButtonStyleBase}" IsChecked="{Binding Path=IsSolidColorBrush, RelativeSource={RelativeSource TemplatedParent}}" ToolTip="{Binding Source={StaticResource toolTipSolidBrushButton}, Path=Value}">
                                        <Grid>
                                            <Rectangle Width="16" Height="11" Stroke="{StaticResource PropertyGridBrushEditorGlyphBackgroundBrush}" StrokeThickness="1" />
                                            <Rectangle Width="12" Height="7" Fill="{StaticResource PropertyGridBrushEditorGlyphBackgroundBrush}" StrokeThickness="0" />
                                        </Grid>
                                    </RadioButton>
                                    <RadioButton IsThreeState="False" Width="55" Height="23" Margin="2,0,2,0" Style="{StaticResource RadioButtonStyleBase}" IsChecked="{Binding Path=IsGradientBrush, RelativeSource={RelativeSource TemplatedParent}}" ToolTip="{Binding Source={StaticResource toolTipGradientBrushButton}, Path=Value}" Visibility="{Binding Path=GradientBrushButtonVisibility, RelativeSource={RelativeSource TemplatedParent}}">
                                        <Grid>
                                            <Rectangle Width="16" Height="11" Stroke="{StaticResource PropertyGridBrushEditorGlyphBackgroundBrush}" StrokeThickness="1" />
                                            <Rectangle Width="12" Height="7" Fill="{StaticResource PropertyGridBrushEditorLinearGradienBackgroundBrush}" StrokeThickness="0" />
                                        </Grid>
                                    </RadioButton>

                                    <!-- JM 10-04-16 TFS224563 - Added a button to select a brush resource. -->
                                    <RadioButton IsThreeState="False" Width="55" Height="23" Margin="2,0,0,0" Style="{StaticResource RadioButtonStyleBase}" IsChecked="{Binding Path=IsSelectingBrushResource, RelativeSource={RelativeSource TemplatedParent}}" ToolTip="{Binding Source={StaticResource toolTipSelectBrushResourceButton}, Path=Value}" Visibility="{Binding Path=SelectBrushResourceButtonVisibility, RelativeSource={RelativeSource TemplatedParent}}">
                                        <Grid>
                                            <Border Width="13" Height="8" Margin="3,0,0,0" BorderBrush="{StaticResource PropertyGridBrushEditorGlyphBackgroundBrush}" BorderThickness="0,1,1,0" Background="Transparent"/>
                                            <Border Width="13" Height="8" Margin="0,3,0,0" BorderBrush="{StaticResource PropertyGridBrushEditorGlyphBackgroundBrush}" BorderThickness="1" Background="Transparent"/>
                                        </Grid>
                                    </RadioButton>
                                </StackPanel>
                            </Grid>

                            <!-- Color Sampling Area-->
                            <!-- JM 10-04-16 TFS224563 - Changed the Visibility binding to use a new ColorSamplingAreaVisibility property. -->
                            <Grid Grid.Row="1" Margin="0,8,0,0" Visibility="{Binding Path=ColorSamplingAreaVisibility, RelativeSource={RelativeSource TemplatedParent}}">
                                <Grid.RowDefinitions>
                                    <RowDefinition x:Name="shadingCanvasRow" Height="*"/>
                                    <RowDefinition x:Name="currentColorRow" Height="Auto"/>
                                </Grid.RowDefinitions>

                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="24" />
                                    <ColumnDefinition Width="60" />
                                </Grid.ColumnDefinitions>

                                <!-- SHADING GRID and CANVAS -->
                                <Grid x:Name="ShadingGrid">
                                    <Rectangle x:Name="ColorSamplingRectangle" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Fill="Red"/>

                                    <Rectangle x:Name="rectWhiteGradient" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                                        <Rectangle.Fill>
                                            <LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
                                                <GradientStop Offset="0" Color="#ffffffff"/>
                                                <GradientStop Offset="1" Color="Transparent"/>
                                            </LinearGradientBrush>
                                        </Rectangle.Fill>
                                    </Rectangle>

                                    <Rectangle x:Name="rectBlackGradient" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                                        <Rectangle.Fill>
                                            <LinearGradientBrush StartPoint="0,1" EndPoint="0, 0">
                                                <GradientStop Offset="0" Color="#ff000000"/>
                                                <GradientStop Offset="1" Color="#00000000"/>
                                            </LinearGradientBrush>
                                        </Rectangle.Fill>
                                    </Rectangle>

                                    <Canvas x:Name="ShadingCanvas" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="Transparent">
                                        <Canvas x:Name="LightnessSelector" Width="12" Height="12" Canvas.Left="100" Canvas.Top="96"  IsHitTestVisible="True" Background="#01FFFFFF">
                                            <Ellipse Width="12" Height="12" StrokeThickness="3" Stroke="#FFFFFFFF" IsHitTestVisible="True"  />
                                            <Ellipse Width="12" Height="12" StrokeThickness="1" Stroke="#FF000000" IsHitTestVisible="True" />
                                        </Canvas>
                                    </Canvas>
                                    <Border BorderBrush="{StaticResource PropertyGridBrushEditorColorShadePickerShadingCanvasBorderBrush}" BorderThickness="1,1,0,0" IsHitTestVisible="False"/>
                                </Grid>

                                <!-- PREVIOUS AND CURRENT COLOR -->
                                <Border x:Name="currentColor" BorderBrush="{StaticResource PropertyGridBrushEditorCurrentColorBorderBrush}" BorderThickness="1,1,0,1" Grid.Row="1">
                                    <Grid>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="20"/>
                                        </Grid.RowDefinitions>

                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="*"/>
                                        </Grid.ColumnDefinitions>

                                        <Grid.Resources>
                                            <igLocalPrim:NullableColorConverter x:Key="ColorConverter"/>
                                        </Grid.Resources>

                                        <Rectangle Grid.ColumnSpan="2" Fill="{Binding TransparentPreviewBrush, RelativeSource={RelativeSource TemplatedParent}}"/>

                                        <Border BorderThickness="0,0,1,0" BorderBrush="{StaticResource PropertyGridBrushEditorCurrentColorBorderBrush}">
                                            <Rectangle x:Name="InitialColorRectangle" Cursor="Hand" ToolTip="{Binding Source={StaticResource toolTipInitialColorRectangle}, Path=Value}">
                                                <Rectangle.Fill>
                                                    <SolidColorBrush Color="{Binding InitialColor, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource ColorConverter}}"/>
                                                </Rectangle.Fill>
                                            </Rectangle>
                                        </Border>

                                        <Rectangle Grid.Column="1" ToolTip="{Binding Source={StaticResource toolTipCurrentColorRectangle}, Path=Value}">
                                            <Rectangle.Fill>
                                                <SolidColorBrush Color="{Binding CurrentColor, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource ColorConverter}}"/>
                                            </Rectangle.Fill>
                                        </Rectangle>
                                    </Grid>
                                </Border>

                                <!-- HUE Area -->
                                <Grid Grid.Column="1" Grid.RowSpan="2">
                                    <Rectangle x:Name="HueRectangle" Stroke="{StaticResource TransparentBrush}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                                        <Rectangle.Fill>
                                            <LinearGradientBrush StartPoint ="0,0" EndPoint="0,1">
                                                <GradientStop Offset="0.00" Color="#ffff0000"/>
                                                <GradientStop Offset="0.17" Color="#ffffff00"/>
                                                <GradientStop Offset="0.33" Color="#ff00ff00"/>
                                                <GradientStop Offset="0.50" Color="#ff00ffff"/>
                                                <GradientStop Offset="0.66" Color="#ff0000ff"/>
                                                <GradientStop Offset="0.83" Color="#ffff00ff"/>
                                                <GradientStop Offset="1.00" Color="#ffff0000"/>
                                            </LinearGradientBrush>
                                        </Rectangle.Fill>
                                    </Rectangle>

                                    <Canvas x:Name="HueCanvas" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="Transparent" IsHitTestVisible="False">
                                        <Grid x:Name="HueSelector" VerticalAlignment="Top" Margin="0,-4,0,0" Width="{Binding ElementName=HueCanvas,Path=ActualWidth}">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto"/>
                                                <ColumnDefinition Width="*"/>
                                                <ColumnDefinition Width="Auto"/>
                                            </Grid.ColumnDefinitions>

                                            <Grid Width="5" Height="8" Grid.Column="0">
                                                <Path Stretch="Fill" StrokeLineJoin="Round" Stroke="#FF000000" Fill="#FF000000" Data="F1 M 276.761,316L 262.619,307.835L 262.619,324.165L 276.761,316 Z "/>
                                            </Grid>

                                            <Grid Width="5" Height="8" Grid.Column="2">
                                                <Path Stretch="Fill" RenderTransformOrigin=".5,.5" StrokeLineJoin="Round" Stroke="#FF000000" Fill="#FF000000" Data="F1 M 276.761,316L 262.619,307.835L 262.619,324.165L 276.761,316 Z ">
                                                    <Path.RenderTransform>
                                                        <RotateTransform Angle="180"/>
                                                    </Path.RenderTransform>
                                                </Path>
                                            </Grid>
                                        </Grid>
                                    </Canvas>
                                </Grid>

                                <!-- Individual Color Values Area-->
                                <Grid Grid.Row="0" Grid.RowSpan="2" Grid.Column="2">
                                    <Grid.Resources>
                                        <Style TargetType="{x:Type TextBlock}">
                                            <Setter Property="Margin" Value="10,0,6,0" />
                                            <Setter Property="TextAlignment" Value="Center"/>
                                            <Setter Property="VerticalAlignment" Value="Center"/>
                                        </Style>

                                        <Style TargetType="{x:Type TextBox}">
                                            <Setter Property="Margin" Value="3,0,3,2"/>
                                        </Style>
                                    </Grid.Resources>

                                    <StackPanel x:Name="RGBValuesArea" Visibility="Visible" Orientation="Vertical">
                                        <Grid>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto"/>
                                                <RowDefinition Height="Auto"/>
                                                <RowDefinition Height="Auto"/>
                                                <RowDefinition Height="Auto"/>
                                                <RowDefinition Height="Auto"/>
                                            </Grid.RowDefinitions>

                                            <Grid.ColumnDefinitions >
                                                <ColumnDefinition Width="Auto"/>
                                                <ColumnDefinition Width="*"/>
                                            </Grid.ColumnDefinitions>

                                            <TextBlock Grid.Row="0" Text="{Binding Source={StaticResource miscTextR}, Path=Value}"/>
                                            <igLocalPrim:PropertyGridRgbValueEditor 
                                                     Grid.Row="0" 
                                                     Grid.Column="1"
                                                     Padding="0"
                                                     Margin="0,0,0,2"
                                                     Value="{Binding Path=Red, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource byteIntConverter}}" 
                                                     ToolTip="{Binding Source={StaticResource toolTipRedValueTextBox}, Path=Value}"/>

                                            <TextBlock Grid.Row="1" Text="{Binding Source={StaticResource miscTextG}, Path=Value}"/>
                                            <igLocalPrim:PropertyGridRgbValueEditor
                                                     Grid.Row="1" 
                                                     Grid.Column="1" 
                                                     Padding="0"
                                                     Margin="0,0,0,2"
                                                     Value="{Binding Path=Green, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource byteIntConverter}}" 
                                                     ToolTip="{Binding Source={StaticResource toolTipGreenValueTextBox}, Path=Value}"/>

                                            <TextBlock Grid.Row="2" Text="{Binding Source={StaticResource miscTextB}, Path=Value}"/>
                                            <igLocalPrim:PropertyGridRgbValueEditor
                                                     Grid.Row="2" 
                                                     Grid.Column="1" 
                                                     Padding="0"
                                                     Margin="0,0,0,2"
                                                     Value="{Binding Path=Blue, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource byteIntConverter}}" 
                                                     ToolTip="{Binding Source={StaticResource toolTipBlueValueTextBox}, Path=Value}"/>

                                            <TextBlock Grid.Row="3" Text="{Binding Source={StaticResource miscTextA}, Path=Value}"/>
                                            <igLocalPrim:PropertyGridRgbValueEditor
                                                     Grid.Row="3" 
                                                     Grid.Column="1" 
                                                     Padding="0"
                                                     Margin="0,0,0,2"
                                                     Value="{Binding Path=Alpha, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource byteIntConverter}}" 
                                                     ToolTip="{Binding Source={StaticResource toolTipAlphaValueTextBox}, Path=Value}"/>
                                            <Slider Grid.Row="4" 
                                                    Grid.Column="1" 
                                                    Minimum="0" 
                                                    Maximum="255" 
                                                    SmallChange="1" 
                                                    LargeChange="10" 
                                                    HorizontalAlignment="Stretch"
                                                    ToolTip="{Binding Source={StaticResource toolTipAlphaValueTextBox}, Path=Value}"
                                                    Value="{Binding Path=Alpha, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource byteDoubleConverter}}"/>
                                        </Grid>
                                    </StackPanel>
                                </Grid>
                            </Grid>

                            <!-- Gradient Stops Area-->
                            <Grid x:Name="GradientStopsArea" Grid.Row="2" Visibility="{Binding Path=IsGradientBrush, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource boolToVisibilityConverter}}">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>

                                <ig:XamNumericRangeSlider x:Name="GradientStopsSlider" 
															MinValue="0" 
															MaxValue="1" 
															Height="20" 
															SmallChange=".1" 
															LargeChange=".3" 
															IncreaseButtonVisibility="Collapsed" 
															DecreaseButtonVisibility="Collapsed" 
															Margin="2,10,2,14" 
															Style="{StaticResource NumericRangeSliderStyle}"
															ThumbStyle="{StaticResource NumericThumbStyle}" />

                                <Grid Grid.Row="1" Margin="0,3,0,0">
                                    <Grid.ColumnDefinitions >
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>

                                    <!-- Linear/Radial gradient buttons -->
                                    <RadioButton Grid.Column="0" Width="24" Margin="0,0,2,0" IsThreeState="False" Style="{StaticResource RadioButtonStyleBase}" IsChecked="{Binding Path=IsLinearGradientBrush, RelativeSource={RelativeSource TemplatedParent}}" ToolTip="{Binding Source={StaticResource toolTipLinearGradientButton}, Path=Value}">
                                        <Grid>
                                            <Rectangle Width="16" Height="10" Stroke="{StaticResource PropertyGridBrushEditorGlyphBackgroundBrush}" StrokeThickness="1" />
                                            <Rectangle Width="12" Height="6" Fill="{StaticResource PropertyGridBrushEditorLinearGradienBackgroundBrush}" StrokeThickness="0" />
                                        </Grid>
                                    </RadioButton>
                                    <RadioButton Grid.Column="1" Width="24" Margin="2,0,0,0" IsThreeState="False" Style="{StaticResource RadioButtonStyleBase}" IsChecked="{Binding Path=IsRadialGradientBrush, RelativeSource={RelativeSource TemplatedParent}}" ToolTip="{Binding Source={StaticResource toolTipRadialGradientButton}, Path=Value}">
                                        <Grid>
                                            <Rectangle Width="16" Height="10" Stroke="{StaticResource PropertyGridBrushEditorGlyphBackgroundBrush}" StrokeThickness="1" />
                                            <Rectangle Width="12" Height="6" Fill="{StaticResource PropertyGridBrushEditorRadialGradienBackgroundBrush}" StrokeThickness="0" />
                                        </Grid>
                                    </RadioButton>

                                    <Button x:Name="ReverseStopsButton" Grid.Column="2" Margin="15,0,0,0" Width="24" Height="24" Style="{StaticResource ButtonStyleBase}" ToolTip="{Binding Source={StaticResource toolTipReverseStopsButton}, Path=Value}">
                                        <Grid Width="14" Height="12">
                                            <Rectangle Width="14" Height="8" Fill="{StaticResource PropertyGridBrushEditorLinearGradienBackgroundBrush}" Stroke="{StaticResource GlyphBackgroundBrush}" StrokeThickness="1" />
                                            <Path Width="9" Margin="0,-2,0,0" Fill="{StaticResource ForegroundBrush}" Stretch="Uniform" Data="M77.2798,42.312 L62.3771,30.448 57.4118,36.6814 65.8771,43.4214 42.6131,43.4214 42.6131,51.392 65.8745,51.392 57.4118,58.1294 62.3771,64.3654 77.2798,52.5 83.6771,47.4053 77.2798,42.312 z" VerticalAlignment="Top" HorizontalAlignment="Left" />
                                            <Path Width="9" Margin="0,0,0,-2" Fill="{StaticResource ForegroundBrush}" Stretch="Uniform" Data="M77.2798,42.312 L62.3771,30.448 57.4118,36.6814 65.8771,43.4214 42.6131,43.4214 42.6131,51.392 65.8745,51.392 57.4118,58.1294 62.3771,64.3654 77.2798,52.5 83.6771,47.4053 77.2798,42.312 z" VerticalAlignment="Bottom" HorizontalAlignment="Right" RenderTransformOrigin="0.5, 0.5">
                                                <Path.RenderTransform>
                                                    <RotateTransform Angle="180" />
                                                </Path.RenderTransform>
                                            </Path>
                                        </Grid>
                                    </Button>

                                    <!-- Vertical/Horizontal Options for Linear Gradient -->
                                    <Grid Grid.Column="3" Margin="15,0,0,0" Visibility="{Binding Path=IsLinearGradientBrush, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource boolToVisibilityConverter}}">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="Auto" />
                                        </Grid.ColumnDefinitions>

                                        <RadioButton Grid.Column="0" IsThreeState="False" Width="24" Margin="0,0,2,0" Style="{StaticResource PropertyGridBrushEditorVerticalGradientRadioButtonStyle}" IsChecked="{Binding Path=IsVerticalLinearGradientBrush, RelativeSource={RelativeSource TemplatedParent}}" BorderThickness="0" ToolTip="{Binding Source={StaticResource toolTipVerticalLinearGradientButton}, Path=Value}" />
                                        <RadioButton Grid.Column="1" IsThreeState="False" Width="24" Margin="2,0,0,0" Style="{StaticResource PropertyGridBrushEditorHorizontalGradientRadioButtonStyle}" IsChecked="{Binding Path=IsHorizontalLinearGradientBrush, RelativeSource={RelativeSource TemplatedParent}}" BorderThickness="0" ToolTip="{Binding Source={StaticResource toolTipHorizontalLinearGradientButton}, Path=Value}" />
                                    </Grid>
                                </Grid>
                            </Grid>

                            <!-- JM 10-04-16 TFS224563 - Added a derived treeview control for picking brush resources. -->
                            <!-- Brush Resource Area -->
                            <Grid x:Name="BrushResourceArea" Grid.Row="1" Margin="0,6,0,0" Visibility="{Binding Path=IsSelectingBrushResource, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource boolToVisibilityConverter}}">
                                <igLocalPrim:PropertyGridBrushResourcesTreeViewControl x:Name="BrushResourcesTreeView" Height="180"/>
                            </Grid>
                        </Grid>
                    </Expander>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- JM 10-04-16 TFS224563 - Added. -->
    <!-- *********************************  PropertyGridBrushResourcesTreeViewControl Style  ********************************* -->
    <Style TargetType="igLocalPrim:PropertyGridBrushResourcesTreeViewControl">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="igLocalPrim:PropertyGridBrushResourcesTreeViewControl">
                    <Border>
                        <TreeView x:Name="PART_TreeView"></TreeView>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- JM 10-04-16 TFS224563 - Added. -->
    <!-- *********************************  PropertyGridBrushGroupItem HierarchicalDataTemplate  ********************************* -->
    <HierarchicalDataTemplate DataType="{x:Type igLocalPrim:PropertyGridBrushGroupItem}" ItemsSource="{Binding Items}">
        <Grid x:Name="grid">
            <TextBlock Text="{Binding Name}" Margin="3"/>
        </Grid>

        <DataTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" TargetName="grid" Value="{StaticResource ButtonHoverBackgroundBrush}" />
            </Trigger>
        </DataTemplate.Triggers>
    </HierarchicalDataTemplate>

    <!-- JM 10-04-16 TFS224563 - Added. -->
    <!-- *********************************  PropertyGridBrushResourceItem DataTemplate  ********************************* -->
    <DataTemplate DataType="{x:Type igLocalPrim:PropertyGridBrushResourceItem}">
        <Grid x:Name="grid" Margin="-1,0,0,0">
            <Grid Margin="3">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>

                <Rectangle StrokeThickness="1" Stroke="DarkGray" Fill="{Binding Brush}" Width="40" Height="14"/>
                <TextBlock Text="{Binding Name}" Grid.Column="1" Margin="6,0,0,0" HorizontalAlignment="Left" VerticalAlignment="Center"/>
            </Grid>
        </Grid>

        <DataTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" TargetName="grid" Value="{StaticResource ButtonHoverBackgroundBrush}" />
            </Trigger>
        </DataTemplate.Triggers>
    </DataTemplate>

</ResourceDictionary>