<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:igwindows="http://infragistics.com/Windows"
	xmlns:igEditors="http://infragistics.com/Editors"	
	xmlns:luna="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Luna"
	xmlns:igThemes="http://infragistics.com/Themes"
	xmlns:themesEd="http://infragistics.com/Themes"
    >
    
    <ResourceDictionary.MergedDictionaries>
        <!--<igThemes:EditorsAeroBrushes />-->
        <ResourceDictionary Source="EditorsAero_Brushes.xaml" />
    </ResourceDictionary.MergedDictionaries>

	<!--  _________________________ TextEditor __________________________________________  -->
	<Style TargetType="{x:Type igEditors:XamTextEditor}" BasedOn="{x:Static themesEd:EditorsGeneric.XamTextEditor}"/>
    
    
    <!--  _________________________ XamCheckEditor __________________________________________  -->
    <Style TargetType="{x:Type igEditors:XamCheckEditor}" >
        <Style.Resources>
            <Style TargetType="{x:Type igEditors:ValueEditorCheckBox}" >
                    <Setter Property="BorderThickness" Value="0"/>
                    <Setter Property="Background" Value="Transparent"/>
                    <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type igEditors:ValueEditorCheckBox}">
							<Border x:Name="MainBorder"
						    BorderBrush="{TemplateBinding BorderBrush}"
						    BorderThickness="{TemplateBinding BorderThickness}"
							Background="{TemplateBinding Background}">
								<Grid x:Name="CheckBox" VerticalAlignment="Center" Grid.Column="1" Margin="3,0,3,0">
									<Rectangle Fill="{DynamicResource {x:Static igEditors:EditorsBrushKeys.CheckBoxNormalOuterBoxCenterFillKey}}" Stroke="{DynamicResource {x:Static igEditors:EditorsBrushKeys.CheckBoxNormalOuterBoxBorderFillKey}}" HorizontalAlignment="Left" VerticalAlignment="Top" Width="13" Height="13" x:Name="CheckBox_OuterBox" SnapsToDevicePixels="True"/>
									<Rectangle Fill="{DynamicResource {x:Static igEditors:EditorsBrushKeys.CheckBoxNormalInnerBoxCenterFillKey}}" Stroke="{DynamicResource {x:Static igEditors:EditorsBrushKeys.CheckBoxNormalInnerBoxBorderFillKey}}" HorizontalAlignment="Left" Margin="2,2,0,0" VerticalAlignment="Top" Width="9" Height="9" x:Name="CheckBox_InnerBox" SnapsToDevicePixels="True"/>
									<Grid Visibility="Collapsed" Margin="0,0,0,0" x:Name="CheckMark">
										<Path
										Height="9.661"
										Width="10.137"
										Stretch="Fill"
										Opacity="0.8"
										Data="M2.6673452,7.8617508 C2.6673452,7.8617508 5.817048,10.192734 5.817048,10.192734 5.817048,10.192734 9.5967099,4.4942121 9.5967099,4.4942121"
										Stroke="{DynamicResource {x:Static igEditors:EditorsBrushKeys.CheckBoxCheckmarkBackgroundFillKey}}"
										StrokeThickness="3" SnapsToDevicePixels="True" HorizontalAlignment="Left" Margin="1.138,0.965,0,0" x:Name="Background" VerticalAlignment="Top" />
										<Path
                                        Height="8.915"
                                        Width="8.66"
                                        Stretch="Fill"
                                        Opacity="1"
                                        Data="M1.6839831,7.7438574 C1.6839831,7.7438574 5.8697866,10.85053 5.8697866,10.85053 5.8697866,10.85053 10.540217,1.6301305 10.540217,1.6301305"
                                        Stroke="{DynamicResource {x:Static igEditors:EditorsBrushKeys.CheckBoxCheckmarkNormalForegroundFillKey}}"
                                        StrokeThickness="1.75" SnapsToDevicePixels="True" HorizontalAlignment="Left" Margin="1.855,1.465,0,0" x:Name="Foreground" VerticalAlignment="Top" />
									</Grid>
								</Grid>
							</Border>
							<ControlTemplate.Triggers>

                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Fill" TargetName="CheckBox_InnerBox" Value="{DynamicResource {x:Static igEditors:EditorsBrushKeys.CheckBoxHottrackInnerBoxCenterFillKey}}"/>
                                    <Setter Property="Stroke" TargetName="CheckBox_OuterBox" Value="{DynamicResource {x:Static igEditors:EditorsBrushKeys.CheckBoxHottrackOuterBoxBorderFillKey}}"/>
                                    <Setter Property="Stroke" TargetName="CheckBox_InnerBox" Value="{DynamicResource {x:Static igEditors:EditorsBrushKeys.CheckBoxHottrackInnerBoxBorderFillKey}}"/>
                                    <Setter Property="Stroke" TargetName="Foreground" Value="{DynamicResource {x:Static igEditors:EditorsBrushKeys.CheckBoxCheckmarkHottrackForegroundFillKey}}"/>
                                </Trigger>

                                <Trigger Property="IsChecked" Value="True">
                                    <Setter Property="Visibility" TargetName="CheckMark" Value="Visible"/>
                                </Trigger>

							<Trigger Property="IsChecked" Value="{x:Null}">
								<Setter Property="Fill" TargetName="CheckBox_InnerBox" Value="{DynamicResource {x:Static igEditors:EditorsBrushKeys.CheckBoxCheckmarkNormalForegroundFillKey}}"/>
							</Trigger>

							</ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
			</Style>
        </Style.Resources>
        <!-- AS 1/13/12 TFS69479 Added Padding -->
        <!-- JJD 07/23/12 TFS117531 
			Reduce padding so it doesn't cause the XamCheckEditor to have a desired size higher than the default XamTextEditor-->
        <!--<Setter Property="Padding" Value="5" />-->
        <Setter Property="Padding" Value="4" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type igEditors:XamCheckEditor}">
                    <!-- SSP 10/3/07 BR25672 Added Padding="{TemplateBinding Padding}" to the ValueEditorCheckBox below -->
                    <igEditors:ValueEditorCheckBox x:Name="PART_FocusSite"
                                                IsChecked="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsChecked, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                IsThreeState="{TemplateBinding IsThreeState}"
                                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                Margin="{TemplateBinding Padding}"
                                                BorderBrush="{TemplateBinding BorderBrush}"
                                                BorderThickness="{TemplateBinding BorderThickness}"
                                                Background="{TemplateBinding Background}"
                                    />
                    <ControlTemplate.Triggers>
                        <Trigger Property="ReadOnly" Value="True">
                            <Setter TargetName="PART_FocusSite" Property ="IsEnabled" Value="False" />
                        </Trigger>
											 <!-- JJD 08/17/12 - TFS118698 
														Null out the FocusVisualStyle when the editor is embedded, e.e. in a XamDataGrid -->
											<Trigger Property="IsEmbedded" Value="True">
												<Setter Property="FocusVisualStyle" TargetName="PART_FocusSite" Value="{x:Null}"/>
											</Trigger>
										</ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
			<Trigger Property="IsEmbedded" Value="False">
				<Setter Property="BorderThickness" Value="1" />
			</Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.35"/>
            </Trigger>
		</Style.Triggers>
    </Style>
    


</ResourceDictionary>
