<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:local="http://schemas.infragistics.com/xaml"
    xmlns:localPrim="http://schemas.infragistics.com/xaml/primitives"
	xmlns:ig="http://schemas.infragistics.com/xaml"
	xmlns:igBase="http://schemas.infragistics.com/xaml"
	xmlns:igPrim="http://schemas.infragistics.com/xaml/primitives"
	xmlns:igPrimLocal="http://schemas.infragistics.com/xaml/primitives"
    xmlns:igEditors="http://schemas.infragistics.com/xaml"
    xmlns:igEditorsPrim="http://schemas.infragistics.com/xaml/primitives"
	xmlns:sys="clr-namespace:System;assembly=mscorlib"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

	<!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
	<!--                             IMPORTANT NOTE:                                -->
	<!--                                                                            -->
	<!-- Only place resources in this ResourceDictionary that can be shared between -->
	<!-- Silverlight and WPF.  This file is merged into the platform-specific       -->
	<!-- specific ResourceDictionaries (i.e., generic.sl.xaml and generic.wpf.xaml) -->
	<!-- and the appropriate platform-specific ResourceDictionary is copied in the  -->
	<!-- pre-build steps so that it overwrites generic.xaml (which  by default has  -->
	<!-- no content)                                                                -->
	<!--                                                                            -->
	<!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
	
	<!-- ======================== -->
	<!-- Brushes                  -->
	<!-- ======================== -->
	
	<LinearGradientBrush x:Key="SilverlightDarkBrush" EndPoint="0.5,1" StartPoint="0.5,0">
		<GradientStop Color="#FFA3AEB9" Offset="0"/>
		<GradientStop Color="#FF8399A9" Offset="0.375"/>
		<GradientStop Color="#FF718597" Offset="0.375"/>
		<GradientStop Color="#FF617584" Offset="1"/>
	</LinearGradientBrush>

    <SolidColorBrush x:Key="FocusBorderFillKey" Color="#FF6DBDD1"/>


    <!-- ======================== -->
	<!-- ValueConverters          -->
	<!-- ======================== -->
    <igEditorsPrim:HorizontalToTextAlignmentConverter x:Key="horizToTextAlignmentConverter" />


    <!-- ======================== -->
    <!-- Control Styles           -->
    <!-- ======================== -->

    <!--<Style TargetType="igEditors:XamMaskedInput" >
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="igEditors:XamMaskedInput">
                    <Border BorderBrush="Orange" BorderThickness="2" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">

                        <localPrim:MaskedInputTextBox x:Name="PART_InputTextBox" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                                                       Text="{Binding Path=Text, RelativeSource={RelativeSource TemplatedParent}}"
                                        >

                        </localPrim:MaskedInputTextBox>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>-->

    <DataTemplate x:Key="IncreaseGlyphKey">
        <Path
			Width="7"
			Height="4"
			Data="M 0,3 C0,3 0,4 0,4 0,4 3,4 3,4 3,4 3,3 3,3 3,3 4,3 4,3 4,3 4,4 4,4 4,4 7,4 7,4 7,4 7,3 7,3 7,3 6,3 6,3 6,3 6,2 6,2 6,2 5,2 5,2 5,2 5,1 5,1 5,1 4,1 4,1 4,1 4,0 4,0 4,0 3,0 3,0 3,0 3,1 3,1 3,1 2,1 2,1 2,1 2,2 2,2 2,2 1,2 1,2 1,2 1,3 1,3 1,3 0,3 0,3 z"
			Fill="Black"/>
    </DataTemplate>

    <DataTemplate x:Key="DecreaseGlyphKey">
        <Path
			Width="7"
			Height="4"
			Data="M 0,1 C0,1 0,0 0,0 0,0 3,0 3,0 3,0 3,1 3,1 3,1 4,1 4,1 4,1 4,0 4,0 4,0 7,0 7,0 7,0 7,1 7,1 7,1 6,1 6,1 6,1 6,2 6,2 6,2 5,2 5,2 5,2 5,3 5,3 5,3 4,3 4,3 4,3 4,4 4,4 4,4 3,4 3,4 3,4 3,3 3,3 3,3 2,3 2,3 2,3 2,2 2,2 2,2 1,2 1,2 1,2 1,1 1,1 1,1 0,1 0,1 z"
			Fill="Black"/>
    </DataTemplate>

    <Style x:Key="spinButtonStyle" TargetType="RepeatButton">
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Padding" Value="3,1"/>
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="igPrim:XamlHelper.Focusable" Value="False"/>
    </Style>

    <Style x:Key="maskedInputTextBoxStyle" TargetType="TextBox">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
    </Style>

    <Style x:Key="MaskedInputStyle" TargetType="igEditors:XamMaskedInput">
        <Setter Property="Background" Value="White" />
        <Setter Property="Foreground" Value="Black" />
        <Setter Property="igPrim:XamlHelper.SnapsToDevicePixels" Value="True" />
        <Setter Property="SpinButtonStyle" Value="{StaticResource spinButtonStyle}" />
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Padding" Value="2"></Setter>
        <Setter Property="BorderBrush" Value="{StaticResource SilverlightDarkBrush}"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="igEditors:XamMaskedInput">
                    <igPrim:ValidationDecorator x:Name="MainBorder">
                		<VisualStateManager.VisualStateGroups>
                			<VisualStateGroup x:Name="CommonStates">
                				<VisualState x:Name="MouseOver">
                					<Storyboard>
                						<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="OverBorder">
                							<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                						</DoubleAnimationUsingKeyFrames>
                					</Storyboard>
                				</VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="BgBorder">
                                          <EasingDoubleKeyFrame KeyTime="0" Value="0.4" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                				<VisualState x:Name="Normal"/>
                				<VisualState x:Name="ReadOnly"/>
                			</VisualStateGroup>
                			<VisualStateGroup x:Name="FocusStates">
                				<VisualState x:Name="Unfocused"/>
                				<VisualState x:Name="Focused">
                					<Storyboard>
                						<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="OverBorder">
                							<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                						</DoubleAnimationUsingKeyFrames>
                					</Storyboard>
                				</VisualState>
                			</VisualStateGroup>
                		</VisualStateManager.VisualStateGroups>
                		<Grid>
                			<Grid.ColumnDefinitions>
                				<ColumnDefinition />
                			</Grid.ColumnDefinitions>
                            <!-- SSP 10/11/11 TFS91203 - Moved this border to surround the text box below. This is
                            to fix an issue where if the border thickness is set to a large value, the borders cover the contents. -->
                			<!--<Border x:Name="BgBorder" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Grid.ColumnSpan="1" Visibility="Visible" CornerRadius="2" Margin="0"/>
                			<Border x:Name="OverBorder" BorderThickness="1" CornerRadius="1" Opacity="0" Margin="1" BorderBrush="{StaticResource FocusBorderFillKey}" Grid.ColumnSpan="2"/>-->
                            <!-- SSP 10/11/11 TFS91203 - Moved this here from above. See comments above. -->
                            <Border x:Name="BgBorder" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Grid.ColumnSpan="1" Visibility="Visible" CornerRadius="2" Margin="0">
                                <!-- SSP 10/11/11 TFS91426 - Changed the VerticalAlignment from Center to Stretch so the 
                                     VerticalContentAlignment takes effect. 
                                -->
                                <Grid>
                                	<Grid.ColumnDefinitions>
                                		<ColumnDefinition/>
                                		<ColumnDefinition Width="Auto"/>
                                	</Grid.ColumnDefinitions>
                            		<!-- SSP 10/11/11 TFS91426 - Changed the VerticalAlignment from Center to Stretch so the 
                                     VerticalContentAlignment takes effect. 
                                -->
                                    <!-- SSP 7/11/13 TFS128674 - Added IsInputMethodEnabled binding -->
                                    <!-- SS 08/19/15 TFS204080 - Added IsReadOnly binding-->
                            		<Grid>
                            			<igEditorsPrim:MaskedInputTextBox
                            				x:Name="PART_InputTextBox"
                            				Style="{StaticResource maskedInputTextBoxStyle}"
                                            IsReadOnly="{TemplateBinding IsReadOnly}"
                            				HorizontalAlignment="Stretch"
                            				HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                            				VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                            				TextAlignment="{Binding HorizontalContentAlignment, Converter={StaticResource horizToTextAlignmentConverter}, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
                            				Foreground="{TemplateBinding Foreground}"
                                            InputMethod.IsInputMethodEnabled="{TemplateBinding InputMethod.IsInputMethodEnabled}" 
                            				InputMethod.PreferredImeState="{TemplateBinding InputMethod.PreferredImeState}" 
                            				Margin="{TemplateBinding Padding}"
                            				VerticalAlignment="Stretch"
                                    igPrim:XamlHelper.Focusable="{TemplateBinding igPrim:XamlHelper.Focusable}"
                                    IsTabStop="{TemplateBinding IsTabStop}"
							     />
                            			<Border x:Name="OverBorder" BorderThickness="1" CornerRadius="1" Opacity="0" BorderBrush="{StaticResource FocusBorderFillKey}" Grid.ColumnSpan="2"/>
                            		</Grid>
                            		<Grid x:Name="PART_SpinButtons" Grid.Column="1" Visibility="{TemplateBinding SpinButtonVisibilityResolved}" Margin="1">
                            			<Grid.RowDefinitions>
                            				<RowDefinition Height="*"/>
                            				<RowDefinition Height="1"/>
                            				<RowDefinition Height="*"/>
                            			</Grid.RowDefinitions>
                            			<RepeatButton x:Name="spinUp" Style="{TemplateBinding SpinButtonStyle}" ContentTemplate="{StaticResource IncreaseGlyphKey}" >
                            				<ig:Commanding.Command>
                            					<igEditorsPrim:MaskedInputCommandSource EventName="Click" CommandId="SpinUp" />
                            				</ig:Commanding.Command>
                            			</RepeatButton>
                            			<RepeatButton x:Name="spinDown" Style="{TemplateBinding SpinButtonStyle}" Grid.Row="2" ContentTemplate="{StaticResource DecreaseGlyphKey}">
                            				<ig:Commanding.Command>
                            					<igEditorsPrim:MaskedInputCommandSource EventName="Click" CommandId="SpinDown" />
                            				</ig:Commanding.Command>
                            			</RepeatButton>
                            		</Grid>
                            	</Grid>
                            </Border>
                        </Grid>
                    </igPrim:ValidationDecorator>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

	<Style TargetType="igEditors:XamMaskedInput" BasedOn="{StaticResource MaskedInputStyle}">
		<Setter Property="HorizontalContentAlignment" Value="Left"/>
	</Style>
	
	<Style TargetType="igEditors:XamNumericInput" BasedOn="{StaticResource MaskedInputStyle}">
		<Setter Property="HorizontalContentAlignment" Value="Right"/>
	</Style>
	
	<Style TargetType="igEditors:XamCurrencyInput" BasedOn="{StaticResource MaskedInputStyle}">
		<Setter Property="HorizontalContentAlignment" Value="Right"/>
	</Style>

</ResourceDictionary>
