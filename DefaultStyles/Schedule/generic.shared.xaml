<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:igSchedule="http://schemas.infragistics.com/xaml"
	xmlns:igSchedulePrim="http://schemas.infragistics.com/xaml/primitives"
	xmlns:ig="http://schemas.infragistics.com/xaml"
	xmlns:igBase="http://schemas.infragistics.com/xaml"
	xmlns:igPrim="http://schemas.infragistics.com/xaml/primitives"
	xmlns:igPrimLocal="http://schemas.infragistics.com/xaml/primitives"
  xmlns:igLayout="http://schemas.infragistics.com/xaml"
	xmlns:sys="clr-namespace:System;assembly=mscorlib"
	xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
	xmlns:PresentationOptions="http://schemas.microsoft.com/winfx/2006/xaml/presentation/options"
	mc:Ignorable="PresentationOptions"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

	<!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
	<!--                             IMPORTANT NOTE:                                -->
	<!--                                                                            -->
	<!-- Only place resources in this ResourceDictionary that can be shared between -->
	<!-- Silverlight and WPF.  This file is merged into the platform-specific       -->
	<!-- specific ResourceDictionaries (i.e., generic.sl.xaml and generic.wpf.xaml) -->
	<!-- and the appropriate platform-specific ResourceDictionary is copied in the  -->
	<!-- pre-build steps so that it overwrites generic.xaml (which  by default has  -->
	<!-- no content)                                                                           -->
	<!--                                                                            -->
	<!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->

	<!-- ======================== -->
	<!-- ResourceStrings          -->
	<!-- ======================== -->
	<!-- JJD 9/19/11 - TFS87912
				Create resources that we can use to bind to the Value property of each ScheduleResourceString
				so we can get notified when the resources are changed. -->
	<igSchedulePrim:ScheduleResourceString x:Key="BlockingErrorLiteral" ResourceName="BlockingErrorLiteral"/>
	<igSchedulePrim:ScheduleResourceString x:Key="ToolTipErrorLabel" ResourceName="ToolTipErrorLabel"/>
	<igSchedulePrim:ScheduleResourceString x:Key="CalendarCloseButtonToolTip" ResourceName="CalendarCloseButtonToolTip"/>
	<igSchedulePrim:ScheduleResourceString x:Key="CalendarNavigateBackToolTip" ResourceName="CalendarNavigateBackToolTip"/>
	<igSchedulePrim:ScheduleResourceString x:Key="CalendarNavigateForwardToolTip" ResourceName="CalendarNavigateForwardToolTip"/>

	<!-- ======================== -->
	<!-- ValueConverters          -->
	<!-- ======================== -->
	<igPrim:ValueConverterGroup x:Key="tsOrientationToThicknessConverter">
		<!-- When arranged vertically have a 1 pixel border on bottom -->
		<igPrim:FixedValueConverter>
			<igPrim:FixedValueConverter.SourceValue>
				<Orientation>Vertical</Orientation>
			</igPrim:FixedValueConverter.SourceValue>
			<igPrim:FixedValueConverter.DestinationValue>
				<Thickness Bottom="1" />
			</igPrim:FixedValueConverter.DestinationValue>
		</igPrim:FixedValueConverter>

		<!-- When arranged horizontally have a 1 pixel border on right -->
		<igPrim:FixedValueConverter>
			<igPrim:FixedValueConverter.DestinationValue>
                <Thickness Right="1" />
            </igPrim:FixedValueConverter.DestinationValue>
		</igPrim:FixedValueConverter>
	</igPrim:ValueConverterGroup>

	<igPrim:ValueConverterGroup x:Key="tsTickmarkKindToColumnWidthConverter">
		<!-- Minor ticks are narrower -->
		<igPrim:FixedValueConverter>
			<igPrim:FixedValueConverter.SourceValue>
				<igSchedulePrim:TimeslotTickmarkKind>Minor</igSchedulePrim:TimeslotTickmarkKind>
			</igPrim:FixedValueConverter.SourceValue>
			<igPrim:FixedValueConverter.DestinationValue>
                <!-- AS 2/16/12 Changed to exponential notation since VS incorrectly uses the current culture when parsing these -->
				<GridLength>6e-1*</GridLength>
			</igPrim:FixedValueConverter.DestinationValue>
		</igPrim:FixedValueConverter>
		
		<!-- Major ticks take up the full width -->
		<igPrim:FixedValueConverter>
			<igPrim:FixedValueConverter.SourceValue>
				<igSchedulePrim:TimeslotTickmarkKind>Major</igSchedulePrim:TimeslotTickmarkKind>
			</igPrim:FixedValueConverter.SourceValue>
			<igPrim:FixedValueConverter.DestinationValue>
				<GridLength>100*</GridLength>
			</igPrim:FixedValueConverter.DestinationValue>
		</igPrim:FixedValueConverter>
	</igPrim:ValueConverterGroup>

	<igPrim:ValueConverterGroup x:Key="tsTickmarkKindToRowHeightConverter">
		<!-- Minor ticks are shorter -->
		<igPrim:FixedValueConverter>
			<igPrim:FixedValueConverter.SourceValue>
				<igSchedulePrim:TimeslotTickmarkKind>Minor</igSchedulePrim:TimeslotTickmarkKind>
			</igPrim:FixedValueConverter.SourceValue>
			<igPrim:FixedValueConverter.DestinationValue>
                <!-- AS 2/16/12 Changed to exponential notation since VS incorrectly uses the current culture when parsing these -->
                <GridLength>5e-1*</GridLength>
			</igPrim:FixedValueConverter.DestinationValue>
		</igPrim:FixedValueConverter>
		<!-- Major ticks are taller -->
		<igPrim:FixedValueConverter>
			<igPrim:FixedValueConverter.SourceValue>
				<igSchedulePrim:TimeslotTickmarkKind>Major</igSchedulePrim:TimeslotTickmarkKind>
			</igPrim:FixedValueConverter.SourceValue>
			<igPrim:FixedValueConverter.DestinationValue>
                <!-- AS 2/16/12 Changed to exponential notation since VS incorrectly uses the current culture when parsing these -->
                <GridLength>17e-1*</GridLength>
			</igPrim:FixedValueConverter.DestinationValue>
		</igPrim:FixedValueConverter>
		<!-- Day ticks take up the full height -->
		<igPrim:FixedValueConverter>
			<igPrim:FixedValueConverter.SourceValue>
				<igSchedulePrim:TimeslotTickmarkKind>Day</igSchedulePrim:TimeslotTickmarkKind>
			</igPrim:FixedValueConverter.SourceValue>
			<igPrim:FixedValueConverter.DestinationValue>
				<GridLength>100*</GridLength>
			</igPrim:FixedValueConverter.DestinationValue>
		</igPrim:FixedValueConverter>
	</igPrim:ValueConverterGroup>

	<!-- Minor ticks text is hidden -->
	<igPrim:FixedValueConverter x:Key="tsTickmarkKindToVisibilityConverter">
		<igPrim:FixedValueConverter.SourceValue>
			<igSchedulePrim:TimeslotTickmarkKind>Minor</igSchedulePrim:TimeslotTickmarkKind>
		</igPrim:FixedValueConverter.SourceValue>
		<igPrim:FixedValueConverter.DestinationValue>
			<Visibility>Collapsed</Visibility>
		</igPrim:FixedValueConverter.DestinationValue>
	</igPrim:FixedValueConverter>

	<igPrim:ValueConverterGroup x:Key="currentTimeOrientationToThickness">
		<!-- Vertical current time has line on left and right only -->
		<igPrim:FixedValueConverter>
			<igPrim:FixedValueConverter.SourceValue>
				<Orientation>Vertical</Orientation>
			</igPrim:FixedValueConverter.SourceValue>
			<igPrim:FixedValueConverter.DestinationValue>
				<Thickness Left="1" Right="1" />
			</igPrim:FixedValueConverter.DestinationValue>
		</igPrim:FixedValueConverter>

		<!-- Otherwise for horz use line on top and bottom -->
		<igPrim:FixedValueConverter>
			<igPrim:FixedValueConverter.DestinationValue>
				<Thickness Top="1" Bottom="1" />
			</igPrim:FixedValueConverter.DestinationValue>
		</igPrim:FixedValueConverter>
	</igPrim:ValueConverterGroup>

	<igPrim:ValueConverterGroup x:Key="currentTimeOrientationToMargin">
		<!-- Don't overlap the bottom line of the ts header -->
		<igPrim:FixedValueConverter>
			<igPrim:FixedValueConverter.SourceValue>
				<Orientation>Vertical</Orientation>
			</igPrim:FixedValueConverter.SourceValue>
			<igPrim:FixedValueConverter.DestinationValue>
                <Thickness Bottom="1" />
			</igPrim:FixedValueConverter.DestinationValue>
		</igPrim:FixedValueConverter>
	</igPrim:ValueConverterGroup>

	<!-- Hides the day label text when its clipped -->
	<igPrim:FixedValueConverter x:Key="clippedToOpacity">
		<igPrim:FixedValueConverter.SourceValue>
			<sys:Boolean>True</sys:Boolean>
		</igPrim:FixedValueConverter.SourceValue>
		<igPrim:FixedValueConverter.DestinationValue>
			<sys:Double>0</sys:Double>
		</igPrim:FixedValueConverter.DestinationValue>
	</igPrim:FixedValueConverter>

	<!-- Hides the day label ticks when its clipped -->
	<igPrim:FixedValueConverter x:Key="inViewToOpacity">
		<igPrim:FixedValueConverter.SourceValue>
			<sys:Boolean>False</sys:Boolean>
		</igPrim:FixedValueConverter.SourceValue>
		<igPrim:FixedValueConverter.DestinationValue>
			<sys:Double>0</sys:Double>
		</igPrim:FixedValueConverter.DestinationValue>
	</igPrim:FixedValueConverter>

	<igPrim:FixedValueConverter x:Key="isActiveToFontWeight">
		<igPrim:FixedValueConverter.SourceValue>
			<sys:Boolean>True</sys:Boolean>
		</igPrim:FixedValueConverter.SourceValue>
		<igPrim:FixedValueConverter.DestinationValue>
			<FontWeight>Bold</FontWeight>
		</igPrim:FixedValueConverter.DestinationValue>
	</igPrim:FixedValueConverter>

	<!-- Rotates the element 180 degrees when the value is false -->
	<igPrim:FixedValueConverter x:Key="falseToRotate180Converter">
		<igPrim:FixedValueConverter.SourceValue>
			<sys:Boolean>False</sys:Boolean>
		</igPrim:FixedValueConverter.SourceValue>
		<igPrim:FixedValueConverter.DestinationValue>
			<sys:Double>180</sys:Double>
		</igPrim:FixedValueConverter.DestinationValue>
	</igPrim:FixedValueConverter>

	<igPrim:ValueConverterGroup x:Key="boolRotate90To270Converter">
		<!-- if true sets visibility to Visible -->
		<igPrim:FixedValueConverter>
				<igPrim:FixedValueConverter.SourceValue>
						<sys:Boolean>True</sys:Boolean>
				</igPrim:FixedValueConverter.SourceValue>
			<igPrim:FixedValueConverter.DestinationValue>
				<sys:Double>90</sys:Double>
			</igPrim:FixedValueConverter.DestinationValue>
		</igPrim:FixedValueConverter>
		
		<igPrim:FixedValueConverter>
			<igPrim:FixedValueConverter.DestinationValue>
				<sys:Double>270</sys:Double>
			</igPrim:FixedValueConverter.DestinationValue>
		</igPrim:FixedValueConverter>
	</igPrim:ValueConverterGroup>

	<igPrim:ValueConverterGroup x:Key="notBoolToTextWrapping">
		<!-- if true sets TextWrapping to NoWrap -->
		<igPrim:FixedValueConverter>
			<igPrim:FixedValueConverter.SourceValue>
					<sys:Boolean>True</sys:Boolean>
			</igPrim:FixedValueConverter.SourceValue>
			<igPrim:FixedValueConverter.DestinationValue>
				<TextWrapping>NoWrap</TextWrapping>
			</igPrim:FixedValueConverter.DestinationValue>
		</igPrim:FixedValueConverter>
		
		<!-- if false sets TextWrapping to Wrap -->
		<igPrim:FixedValueConverter>
			<igPrim:FixedValueConverter.DestinationValue>
				<TextWrapping>Wrap</TextWrapping>
			</igPrim:FixedValueConverter.DestinationValue>
		</igPrim:FixedValueConverter>
	</igPrim:ValueConverterGroup>

	<igPrim:ValueConverterGroup x:Key="boolToOccurrenceStyle">
		<!-- if true sets style to a variance indicator -->
		<igPrim:FixedValueConverter>
			<igPrim:FixedValueConverter.SourceValue>
					<sys:Boolean>True</sys:Boolean>
			</igPrim:FixedValueConverter.SourceValue>
			<igPrim:FixedValueConverter.DestinationValue>
				<Style TargetType="ContentControl">
					<Setter Property="Template">
						<Setter.Value>
							<ControlTemplate TargetType="ContentControl">
								<Grid
											 Width="9"
											 Height="9">
									<Path
												Width="6"
												Height="5"
												HorizontalAlignment="Left"
												Margin="0,4,0,0"
												VerticalAlignment="Top"
												Data="M 0,5 C0,5 0,6 0,6 0,6 1,6 1,6 1,6 1,8 1,8 1,8 2,8 2,8 2,8 2,9 2,9 2,9 5,9 5,9 5,9 5,8 5,8 5,8 6,8 6,8 6,8 6,7 6,7 6,7 5,7 5,7 5,7 5,8 5,8 5,8 2,8 2,8 2,8 2,6 2,6 2,6 3,6 3,6 3,6 3,5 3,5 3,5 2,5 2,5 2,5 2,4 2,4 2,4 1,4 1,4 1,4 1,5 1,5 1,5 0,5 0,5 z"
												Fill="{TemplateBinding Foreground}"
												Stretch="Fill"/>
									<Path
												Width="6"
												Height="5"
												HorizontalAlignment="Left"
												Margin="3,1,0,0"
												VerticalAlignment="Top"
												Data="M 9,5 C9,5 9,4 9,4 9,4 8,4 8,4 8,4 8,2 8,2 8,2 7,2 7,2 7,2 7,1 7,1 7,1 4,1 4,1 4,1 4,2 4,2 4,2 3,2 3,2 3,2 3,3 3,3 3,3 4,3 4,3 4,3 4,2 4,2 4,2 7,2 7,2 7,2 7,4 7,4 7,4 6,4 6,4 6,4 6,5 6,5 6,5 7,5 7,5 7,5 7,6 7,6 7,6 8,6 8,6 8,6 8,5 8,5 8,5 9,5 9,5 z"
												Fill="{TemplateBinding Foreground}"
												Stretch="Fill"/>
									<Path
												Width="9"
												Height="9"
												HorizontalAlignment="Left"
												Margin="0,0,0,0"
												VerticalAlignment="Top"
												Data="M 8,0 C8,0 9,0 9,0 9,0 9,1 9,1 9,1 8,1 8,1 8,1 8,0 8,0 zM 7,1 C7,1 8,1 8,1 8,1 8,2 8,2 8,2 7,2 7,2 7,2 7,1 7,1 zM 6,2 C6,2 7,2 7,2 7,2 7,3 7,3 7,3 6,3 6,3 6,3 6,2 6,2 zM 5,3 C5,3 6,3 6,3 6,3 6,4 6,4 6,4 5,4 5,4 5,4 5,3 5,3 zM 4,4 C4,4 5,4 5,4 5,4 5,5 5,5 5,5 4,5 4,5 4,5 4,4 4,4 zM 3,5 C3,5 4,5 4,5 4,5 4,6 4,6 4,6 3,6 3,6 3,6 3,5 3,5 zM 2,6 C2,6 3,6 3,6 3,6 3,7 3,7 3,7 2,7 2,7 2,7 2,6 2,6 zM 1,7 C1,7 2,7 2,7 2,7 2,8 2,8 2,8 1,8 1,8 1,8 1,7 1,7 zM 0,8 C0,8 1,8 1,8 1,8 1,9 1,9 1,9 0,9 0,9 0,9 0,8 0,8 z"
												Fill="{TemplateBinding Foreground}"
												Stretch="Fill"/>
								</Grid>
							</ControlTemplate>
						</Setter.Value>
					</Setter>
				</Style>
			</igPrim:FixedValueConverter.DestinationValue>
		</igPrim:FixedValueConverter>
		
		<!-- if false sets style to the occurrence indicator -->
		<igPrim:FixedValueConverter>
			<igPrim:FixedValueConverter.DestinationValue>
				<Style TargetType="ContentControl">
					<Setter Property="Template">
						<Setter.Value>
							<ControlTemplate TargetType="ContentControl">
								<Grid
											 Width="9"
											 Height="8"
											 x:Name="reccurence">
									<Path
												Width="6"
												Height="5"
												HorizontalAlignment="Left"
												Margin="0,3,0,0"
												VerticalAlignment="Top"
												Data="M 0,4 C0,4 0,5 0,5 0,5 1,5 1,5 1,5 1,7 1,7 1,7 2,7 2,7 2,7 2,8 2,8 2,8 5,8 5,8 5,8 5,7 5,7 5,7 6,7 6,7 6,7 6,6 6,6 6,6 5,6 5,6 5,6 5,7 5,7 5,7 2,7 2,7 2,7 2,5 2,5 2,5 3,5 3,5 3,5 3,4 3,4 3,4 2,4 2,4 2,4 2,3 2,3 2,3 1,3 1,3 1,3 1,4 1,4 1,4 0,4 0,4 z"
												Fill="{TemplateBinding Foreground}"
												Stretch="Fill"/>
									<Path
												Width="6"
												Height="5"
												HorizontalAlignment="Left"
												Margin="3,0,0,0"
												VerticalAlignment="Top"
												Data="M 9,4 C9,4 9,3 9,3 9,3 8,3 8,3 8,3 8,1 8,1 8,1 7,1 7,1 7,1 7,0 7,0 7,0 4,0 4,0 4,0 4,1 4,1 4,1 3,1 3,1 3,1 3,2 3,2 3,2 4,2 4,2 4,2 4,1 4,1 4,1 7,1 7,1 7,1 7,3 7,3 7,3 6,3 6,3 6,3 6,4 6,4 6,4 7,4 7,4 7,4 7,5 7,5 7,5 8,5 8,5 8,5 8,4 8,4 8,4 9,4 9,4 z"
												Fill="{TemplateBinding Foreground}"
												Stretch="Fill"/>
								</Grid>
							</ControlTemplate>
						</Setter.Value>
					</Setter>
				</Style>
			</igPrim:FixedValueConverter.DestinationValue>
		</igPrim:FixedValueConverter>
	</igPrim:ValueConverterGroup>

	<igPrim:ValueConverterGroup x:Key="nullToVisibility">
		<!-- if null sets visibility to Collapsed -->
		<igPrim:FixedValueConverter SourceValue="{x:Null}">
			<igPrim:FixedValueConverter.DestinationValue>
				<Visibility>Collapsed</Visibility>
			</igPrim:FixedValueConverter.DestinationValue>
		</igPrim:FixedValueConverter>
		
		<!-- if not null sets visibility to Visible -->
		<igPrim:FixedValueConverter>
			<igPrim:FixedValueConverter.DestinationValue>
				<Visibility>Visible</Visibility>
			</igPrim:FixedValueConverter.DestinationValue>
		</igPrim:FixedValueConverter>
		
	</igPrim:ValueConverterGroup>


	<igPrim:ValueConverterGroup x:Key="boolToVisibility">
		<!-- if true sets visibility to Visible -->
		<igPrim:FixedValueConverter>
			<igPrim:FixedValueConverter.SourceValue>
					<sys:Boolean>True</sys:Boolean>
			</igPrim:FixedValueConverter.SourceValue>
			<igPrim:FixedValueConverter.DestinationValue>
				<Visibility>Visible</Visibility>
			</igPrim:FixedValueConverter.DestinationValue>
		</igPrim:FixedValueConverter>
		
		<!-- if false sets visibility to Collapsed -->
		<igPrim:FixedValueConverter>
			<igPrim:FixedValueConverter.DestinationValue>
				<Visibility>Collapsed</Visibility>
			</igPrim:FixedValueConverter.DestinationValue>
		</igPrim:FixedValueConverter>
	</igPrim:ValueConverterGroup>

	<igPrim:ValueConverterGroup x:Key="notBoolToVisibility">
		<!-- if true sets visibility to Collapsed -->
		<igPrim:FixedValueConverter>
			<igPrim:FixedValueConverter.SourceValue>
					<sys:Boolean>True</sys:Boolean>
			</igPrim:FixedValueConverter.SourceValue>
			<igPrim:FixedValueConverter.DestinationValue>
				<Visibility>Collapsed</Visibility>
			</igPrim:FixedValueConverter.DestinationValue>
		</igPrim:FixedValueConverter>
		
		<!-- if false sets visibility to Visible -->
		<igPrim:FixedValueConverter>
			<igPrim:FixedValueConverter.DestinationValue>
				<Visibility>Visible</Visibility>
			</igPrim:FixedValueConverter.DestinationValue>
		</igPrim:FixedValueConverter>
	</igPrim:ValueConverterGroup>

	<igPrim:ValueConverterGroup x:Key="dateRangeFormatToVisibility">
		<!-- if 'None' sets visibility to Collapsed -->
		<igPrim:FixedValueConverter>
			<igPrim:FixedValueConverter.SourceValue>
				<igSchedulePrim:DateRangeFormatType>None</igSchedulePrim:DateRangeFormatType>
			</igPrim:FixedValueConverter.SourceValue>
			<igPrim:FixedValueConverter.DestinationValue>
				<Visibility>Collapsed</Visibility>
			</igPrim:FixedValueConverter.DestinationValue>
		</igPrim:FixedValueConverter>
	</igPrim:ValueConverterGroup>
	
	<igPrim:ValueConverterGroup x:Key="boolToHorizontal">
		<!-- if true sets orientation to Horizontal -->
		<igPrim:FixedValueConverter>
				<igPrim:FixedValueConverter.SourceValue>
						<sys:Boolean>True</sys:Boolean>
				</igPrim:FixedValueConverter.SourceValue>
			<igPrim:FixedValueConverter.DestinationValue>
				<Orientation>Horizontal</Orientation>
			</igPrim:FixedValueConverter.DestinationValue>
		</igPrim:FixedValueConverter>
		
		<!-- if false sets orientation to Vertical -->
		<igPrim:FixedValueConverter>
			<igPrim:FixedValueConverter.DestinationValue>
				<Orientation>Vertical</Orientation>
			</igPrim:FixedValueConverter.DestinationValue>
		</igPrim:FixedValueConverter>
	</igPrim:ValueConverterGroup>

	<igPrim:ValueConverterGroup x:Key="singleLineToTextWrapping">
		<igPrim:FixedValueConverter>
				<igPrim:FixedValueConverter.SourceValue>
					<sys:Boolean>False</sys:Boolean>
				</igPrim:FixedValueConverter.SourceValue>
			<igPrim:FixedValueConverter.DestinationValue>
				<TextWrapping>Wrap</TextWrapping>
			</igPrim:FixedValueConverter.DestinationValue>
		</igPrim:FixedValueConverter>
		
		<igPrim:FixedValueConverter>
			<igPrim:FixedValueConverter.DestinationValue>
				<TextWrapping>NoWrap</TextWrapping>
			</igPrim:FixedValueConverter.DestinationValue>
		</igPrim:FixedValueConverter>
	</igPrim:ValueConverterGroup>

	<igPrim:ValueConverterGroup x:Key="overlayModeToTooltipResource">
		<igPrim:FixedValueConverter>
			<igPrim:FixedValueConverter.SourceValue>
					<sys:Boolean>True</sys:Boolean>
			</igPrim:FixedValueConverter.SourceValue>
			<igPrim:FixedValueConverter.DestinationValue>
				<igSchedulePrim:ScheduleResourceString ResourceName="OverlayButtonIsInOverlayModeToolTip"/>
			</igPrim:FixedValueConverter.DestinationValue>
		</igPrim:FixedValueConverter>
		
		<igPrim:FixedValueConverter>
			<igPrim:FixedValueConverter.DestinationValue>
				<igSchedulePrim:ScheduleResourceString ResourceName="OverlayButtonIsNotInOverlayModeToolTip"/>
			</igPrim:FixedValueConverter.DestinationValue>
		</igPrim:FixedValueConverter>
	</igPrim:ValueConverterGroup>
	
	<igPrim:ValueConverterGroup x:Key="calendarHeaderOrientationToSpacingConverter">
		<igPrim:FixedValueConverter>
			<igPrim:FixedValueConverter.SourceValue>
				<Orientation>Horizontal</Orientation>
			</igPrim:FixedValueConverter.SourceValue>
			<igPrim:FixedValueConverter.DestinationValue>
				<sys:Double>-12</sys:Double>
			</igPrim:FixedValueConverter.DestinationValue>
		</igPrim:FixedValueConverter>
		<igPrim:FixedValueConverter>
			<igPrim:FixedValueConverter.DestinationValue>
				<sys:Double>-1</sys:Double>
			</igPrim:FixedValueConverter.DestinationValue>
		</igPrim:FixedValueConverter>
	</igPrim:ValueConverterGroup>
	
	<igPrim:ValueConverterGroup x:Key="allDayVisToRow">
		<igPrim:FixedValueConverter>
			<igPrim:FixedValueConverter.SourceValue>
				<Visibility>Collapsed</Visibility>
			</igPrim:FixedValueConverter.SourceValue>
			<igPrim:FixedValueConverter.DestinationValue>
				<sys:Int32>1</sys:Int32>
			</igPrim:FixedValueConverter.DestinationValue>
		</igPrim:FixedValueConverter>
		<igPrim:FixedValueConverter>
			<igPrim:FixedValueConverter.DestinationValue>
				<sys:Int32>2</sys:Int32>
			</igPrim:FixedValueConverter.DestinationValue>
		</igPrim:FixedValueConverter>
	</igPrim:ValueConverterGroup>

	<igPrim:ValueConverterGroup x:Key="allDayVisToRowSpan">
		<igPrim:FixedValueConverter>
			<igPrim:FixedValueConverter.SourceValue>
				<Visibility>Collapsed</Visibility>
			</igPrim:FixedValueConverter.SourceValue>
			<igPrim:FixedValueConverter.DestinationValue>
				<sys:Int32>2</sys:Int32>
			</igPrim:FixedValueConverter.DestinationValue>
		</igPrim:FixedValueConverter>
		<igPrim:FixedValueConverter>
			<igPrim:FixedValueConverter.DestinationValue>
				<sys:Int32>1</sys:Int32>
			</igPrim:FixedValueConverter.DestinationValue>
		</igPrim:FixedValueConverter>
	</igPrim:ValueConverterGroup>

	<igPrim:ValueConverterGroup x:Key="notConverter">
		<igPrim:FixedValueConverter>
			<igPrim:FixedValueConverter.SourceValue>
				<sys:Boolean>True</sys:Boolean>
			</igPrim:FixedValueConverter.SourceValue>
			<igPrim:FixedValueConverter.DestinationValue>
				<sys:Boolean>False</sys:Boolean>
			</igPrim:FixedValueConverter.DestinationValue>
		</igPrim:FixedValueConverter>
		<igPrim:FixedValueConverter>
			<igPrim:FixedValueConverter.DestinationValue>
				<sys:Boolean>True</sys:Boolean>
			</igPrim:FixedValueConverter.DestinationValue>
		</igPrim:FixedValueConverter>
	</igPrim:ValueConverterGroup>

	<!-- AS 4/1/11 TFS64812 -->
	<igPrim:ValueConverterGroup x:Key="singleLineIndicatorsToVertAlignment">
		<igPrim:FixedValueConverter>
			<igPrim:FixedValueConverter.SourceValue>
				<sys:Boolean>True</sys:Boolean>
			</igPrim:FixedValueConverter.SourceValue>
			<igPrim:FixedValueConverter.DestinationValue>
				<VerticalAlignment>Center</VerticalAlignment>
			</igPrim:FixedValueConverter.DestinationValue>
		</igPrim:FixedValueConverter>

		<igPrim:FixedValueConverter>
			<igPrim:FixedValueConverter.DestinationValue>
				<VerticalAlignment>Stretch</VerticalAlignment>
			</igPrim:FixedValueConverter.DestinationValue>
		</igPrim:FixedValueConverter>
	</igPrim:ValueConverterGroup>

	<!--
	<Style x:Key="simpleTextBox" TargetType="TextBox">
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="Margin" Value="0" />
		<Setter Property="Padding" Value="0" />
		<Setter Property="BorderThickness" Value="0" />
	</Style>-->

	<SolidColorBrush x:Key="TextForegroundBrush" Color="#FF1E395B" PresentationOptions:Freeze="true"/>

	<!-- ::::::::::::::::::::::::::: TimeZoneChooserDialog ::::::::::::::::::::::::::::: -->
	<Style TargetType="igSchedulePrim:TimeZoneChooserDialog">
		<Setter Property="BorderBrush" Value="Black" />
		<Setter Property="Background" Value="#FFCFDDEE" />
		<Setter Property="igPrim:XamlHelper.Focusable" Value="False" />
		<Setter Property="IsTabStop" Value="False"/>

		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="igSchedulePrim:TimeZoneChooserDialog">
					<ContentControl 
						igPrim:XamlHelper.Focusable="False" IsTabStop="False"
						Foreground="{Binding Path=DataManager.ColorSchemeResolved.DefaultBrushProvider[DialogForeground], RelativeSource={RelativeSource TemplatedParent}}" 
						VerticalContentAlignment="Stretch">
						<Border BorderBrush="{TemplateBinding BorderBrush}"
								Background="{Binding Path=DataManager.ColorSchemeResolved.DefaultBrushProvider[DialogBackground], RelativeSource={RelativeSource TemplatedParent}}"
								Padding="{TemplateBinding Padding}"
								igPrim:XamlHelper.SnapsToDevicePixels="True">
							<Grid MinWidth="565">
								<Grid.RowDefinitions>
									<RowDefinition Height="Auto"/>
									<RowDefinition Height="Auto"/>
									<RowDefinition Height="Auto"/>
								</Grid.RowDefinitions>

								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="Auto"/>
									<ColumnDefinition Width="*"/>
								</Grid.ColumnDefinitions>

								<TextBlock x:Name="txtMsg"
									Text="{Binding Path=LocalizedStrings[DLG_TimeZoneChooser_Literal_Message], RelativeSource={RelativeSource TemplatedParent}}"
									Grid.Row="0"
									Grid.Column="1"
									TextWrapping="Wrap"
									Margin="5,8,5,14"
									TextAlignment="Left"
									VerticalAlignment="Top"/>

								<StackPanel Grid.Row="1" Grid.Column="1" Orientation="Horizontal" HorizontalAlignment="Center">
									<TextBlock 
										Text="{Binding Path=LocalizedStrings[DLG_TimeZoneChooser_Literal_Selector], RelativeSource={RelativeSource TemplatedParent}}"
										VerticalAlignment="Center"
										Margin="10,0,0,6"
										/>
									<ComboBox x:Name="Selector"
										Width="365"
										Margin="3,0,0,6"
										DisplayMemberPath="DisplayName"
										Foreground="{StaticResource TextForegroundBrush}"
										ItemsSource="{Binding Path=TimeZoneTokens, RelativeSource={RelativeSource TemplatedParent}}"
										SelectedItem="{Binding Path=SelectedTimeZoneToken, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
										TabIndex="10"
										VerticalAlignment="Center"/>
								</StackPanel>

								<StackPanel Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="2" Orientation="Horizontal" HorizontalAlignment="Center" Margin="5,3,0,10">
									<StackPanel.Resources>
										<Style TargetType="Button">
											<Setter Property="MinWidth" Value="75"/>
											<Setter Property="Margin" Value="5,0,5,0"/>
											<Setter Property="HorizontalAlignment" Value="Center"/>
										</Style>
									</StackPanel.Resources>

									<Button x:Name="OkButton"
										TabIndex="30"
										Content="{Binding Path=LocalizedStrings[DLG_ScheduleDialog_Btn_Ok], RelativeSource={RelativeSource TemplatedParent}}">
										<ig:Commanding.Command>
											<igSchedulePrim:ScheduleDialogCommandSource EventName="Click" CommandType="SaveAndClose"/>
										</ig:Commanding.Command>
									</Button>
								</StackPanel>
							</Grid>
						</Border>
					</ContentControl>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- ======================== -->
	<!-- Control Styles           -->
	<!-- ======================== -->
	<Style TargetType="igSchedule:XamScheduleDataManager">
		<Setter Property="IsTabStop" Value ="False"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="igSchedule:XamScheduleDataManager">
					<Canvas x:Name="RootPanel" />
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style TargetType="igPrimLocal:RotateDecorator">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="igPrimLocal:RotateDecorator">
					<ContentPresenter/>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style TargetType="igSchedulePrim:ScheduleDatePresenterBase">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="igSchedulePrim:ScheduleDatePresenterBase">
						<TextBlock Text="{TemplateBinding FormattedText}"/>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style TargetType="igSchedulePrim:BestFitDateRangePresenter">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="igSchedulePrim:BestFitDateRangePresenter">
					<igPrimLocal:BestFitPanel>
						<TextBlock Text="{TemplateBinding FormattedText}"/>
						<TextBlock Text="{TemplateBinding ShortFormattedText}"/>
					</igPrimLocal:BestFitPanel>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<LinearGradientBrush x:Key="reminderBrush" StartPoint="0.5,0" EndPoint="0.5,1">
		<LinearGradientBrush.GradientStops>
			<GradientStopCollection>
				<GradientStop Offset="0" Color="#FF666666"/>
				<GradientStop Offset="0.994" Color="#FF404040"/>
			</GradientStopCollection>
		</LinearGradientBrush.GradientStops>
	</LinearGradientBrush>

	<Style TargetType="igSchedulePrim:PendingOperationIndicator">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="igSchedulePrim:PendingOperationIndicator">
						<Canvas
									x:Name="Root"
									 Height="12"
									 Width="12"
									 Background="{x:Null}"
								 >
							<VisualStateManager.VisualStateGroups>
								<VisualStateGroup x:Name="ActiveStates">
									<VisualState x:Name="Active">
										<Storyboard>
											<DoubleAnimation Duration="0:0:1.1" To="360" RepeatBehavior="Forever" Storyboard.TargetProperty="Angle" Storyboard.TargetName="rotate"/>
										</Storyboard>
									</VisualState>
								</VisualStateGroup>
							</VisualStateManager.VisualStateGroups>
							<Canvas.RenderTransform>
								<RotateTransform x:Name="rotate" CenterX="6" CenterY="6"/>
							</Canvas.RenderTransform>

							<Path
										 Canvas.Left="0"
										 Canvas.Top="0"
										 Height="6.133330821990967"
										 Width="6.133330821990967"
										 Stretch="Fill"
										 Data="M 0,6 C0,6 0.0013279999839141965,6.133330821990967 0.0013279999839141965,6.133330821990967 0.0013279999839141965,6.133330821990967 1.8693389892578125,6.133330821990967 1.8693389892578125,6.133330821990967 1.8693389892578125,6.133330821990967 1.8666690587997437,6 1.8666690587997437,6 1.8666690587997437,3.717194080352783 3.717194080352783,1.8666690587997437 6,1.8666690587997437 6,1.8666690587997437 6.133330821990967,1.8693389892578125 6.133330821990967,1.8693389892578125 6.133330821990967,1.8693389892578125 6.133330821990967,0.0013279999839141965 6.133330821990967,0.0013279999839141965 6.133330821990967,0.0013279999839141965 6,0 6,0 2.686249017715454,0 0,2.686249017715454 0,6 z">
								<Path.Fill>
									<LinearGradientBrush
												StartPoint="0.13043532386754172,1"
												EndPoint="0.9818263549611985,0.09194580310696335">
										<LinearGradientBrush.GradientStops>
											<GradientStopCollection>
												<GradientStop
															 Color="#FF7c869a"
															 Offset="0" />
												<GradientStop
															 Color="#FF595C6C"
															 Offset="0.9833329916000366" />
												<GradientStop
															 Color="#FF595c6c"
															 Offset="0.9888889789581299" />
											</GradientStopCollection>
										</LinearGradientBrush.GradientStops>
									</LinearGradientBrush>
								</Path.Fill>
							</Path>
							<Path
										 Canvas.Left="0"
										 Canvas.Top="5.866669178009033"
										 Height="6.133330821990967"
										 Width="6.133330821990967"
										 Stretch="Fill"
										 Data="M 0,6 C0,6 0.0013279999839141965,5.866669178009033 0.0013279999839141965,5.866669178009033 0.0013279999839141965,5.866669178009033 1.8693389892578125,5.866669178009033 1.8693389892578125,5.866669178009033 1.8693389892578125,5.866669178009033 1.8666690587997437,6 1.8666690587997437,6 1.8666690587997437,8.282806396484375 3.717194080352783,10.133331298828125 6,10.133331298828125 6,10.133331298828125 6.133330821990967,10.13067626953125 6.133330821990967,10.13067626953125 6.133330821990967,10.13067626953125 6.133330821990967,11.998671531677246 6.133330821990967,11.998671531677246 6.133330821990967,11.998671531677246 6,12 6,12 2.686249017715454,12 0,9.313751220703125 0,6 z">
								<Path.Fill>
									<LinearGradientBrush
												StartPoint="1,1"
												EndPoint="0.007127611374498961,0.08285774638218446">
										<LinearGradientBrush.GradientStops>
											<GradientStopCollection>
												<GradientStop
															 Color="#FF95a4bb"
															 Offset="0" />
												<GradientStop
															 Color="#FF7b8599"
															 Offset="0.9888889789581299" />
											</GradientStopCollection>
										</LinearGradientBrush.GradientStops>
									</LinearGradientBrush>
								</Path.Fill>
							</Path>
							<Path
										 Canvas.Left="5.866669178009033"
										 Canvas.Top="5.866669178009033"
										 Height="6.133330821990967"
										 Width="6.133330821990967"
										 Stretch="Fill"
										 Data="M 12,6 C12,6 11.998671531677246,5.866669178009033 11.998671531677246,5.866669178009033 11.998671531677246,5.866669178009033 10.130661010742188,5.866669178009033 10.130661010742188,5.866669178009033 10.130661010742188,5.866669178009033 10.133331298828125,6 10.133331298828125,6 10.133331298828125,8.282806396484375 8.282806396484375,10.133331298828125 6,10.133331298828125 6,10.133331298828125 5.866669178009033,10.13067626953125 5.866669178009033,10.13067626953125 5.866669178009033,10.13067626953125 5.866669178009033,11.998671531677246 5.866669178009033,11.998671531677246 5.866669178009033,11.998671531677246 6,12 6,12 9.313751220703125,12 12,9.313751220703125 12,6 z">
								<Path.Fill>
									<LinearGradientBrush
												StartPoint="0.1304353335856943,1"
												EndPoint="0.9818237893689163,0.0919457739525056">
										<LinearGradientBrush.GradientStops>
											<GradientStopCollection>
												<GradientStop
															 Color="#FF91a0b6"
															 Offset="0" />
												<GradientStop
															 Color="#00919FB6"
															 Offset="0.9777780175209045" />
												<GradientStop
															 Color="#00919fb6"
															 Offset="0.9833329916000366" />
											</GradientStopCollection>
										</LinearGradientBrush.GradientStops>
									</LinearGradientBrush>
								</Path.Fill>
							</Path>
							<Path
										 Canvas.Left="5.866669178009033"
										 Canvas.Top="0"
										 Height="6.133330821990967"
										 Width="6.133330821990967"
										 Stretch="Fill"
										 Data="M 12,6 C12,6 11.998671531677246,6.133330821990967 11.998671531677246,6.133330821990967 11.998671531677246,6.133330821990967 10.130661010742188,6.133330821990967 10.130661010742188,6.133330821990967 10.130661010742188,6.133330821990967 10.133331298828125,6 10.133331298828125,6 10.133331298828125,3.717194080352783 8.282806396484375,1.8666690587997437 6,1.8666690587997437 6,1.8666690587997437 5.866669178009033,1.8693389892578125 5.866669178009033,1.8693389892578125 5.866669178009033,1.8693389892578125 5.866669178009033,0.0013279999839141965 5.866669178009033,0.0013279999839141965 5.866669178009033,0.0013279999839141965 6,0 6,0 9.313751220703125,0 12,2.686249017715454 12,6 z">
								<Path.Fill>
									<LinearGradientBrush
												StartPoint="1,1"
												EndPoint="0.0071276040858845235,0.08285775610033705">
										<LinearGradientBrush.GradientStops>
											<GradientStopCollection>
												<GradientStop
															 Color="#FF3a3742"
															 Offset="0" />
												<GradientStop
															 Color="#FF5a5d6d"
															 Offset="0.9944440126419067" />
											</GradientStopCollection>
										</LinearGradientBrush.GradientStops>
									</LinearGradientBrush>
								</Path.Fill>
							</Path>
						</Canvas>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		
	</Style>
	
	<Style x:Key="BlockingErrorStyle" TargetType="ContentControl">
		<!-- AS 12/16/10 TFS61923 -->
		<Setter Property="igPrim:XamlHelper.Focusable" Value="False"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="ContentControl">
					<Grid >
						<Grid.RowDefinitions>
							<RowDefinition Height ="Auto"/>
							<RowDefinition Height ="Auto"/>
							<RowDefinition Height ="*"/>
						</Grid.RowDefinitions>

						<Rectangle Grid.RowSpan="3"
											 Opacity=".9"
											 Fill="{Binding Path=(igSchedulePrim:CalendarBrushProvider.BrushProvider)[BlockingErrorBackground], RelativeSource={RelativeSource TemplatedParent}}"/>

						<!--Header-->
						<ContentControl
							Grid.Row="0"
							FontWeight="Bold"
							Foreground="{Binding Path=(igSchedulePrim:CalendarBrushProvider.BrushProvider)[BlockingErrorHeaderForeground], RelativeSource={RelativeSource TemplatedParent}}"
							Content="{Binding Source={StaticResource BlockingErrorLiteral}, Path=Value}"
							Margin="5">
							<ContentControl.FontSize>
								<Binding Path="FontSize" RelativeSource="{RelativeSource TemplatedParent}">
									<Binding.Converter>
										<igPrimLocal:MinMaxConverter MinValue="14"/>
									</Binding.Converter>
								</Binding>
							</ContentControl.FontSize>
							<!-- JJD 9/19/11 - TFS87912
								Use binding instead to the Value property of the ScheduleResourceString
								so we can get notified when the resources are changed.
							<igSchedulePrim:ScheduleResourceString ResourceName="BlockingErrorLiteral"/>-->
						</ContentControl>

						<!--Description-->
						<TextBlock
							Grid.Row="1"
							Margin="5,0,5,0"
							FontWeight="Bold"
							TextWrapping="Wrap"
							Foreground="{Binding Path=(igSchedulePrim:CalendarBrushProvider.BrushProvider)[BlockingErrorForeground], RelativeSource={RelativeSource TemplatedParent}}"
							Text="{Binding Path=Content.UserErrorText, RelativeSource={RelativeSource TemplatedParent}}"
							Visibility="{Binding Path=Content.UserErrorText, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource nullToVisibility}}"
							>
							<TextBlock.FontSize>
								<Binding Path="FontSize" RelativeSource="{RelativeSource TemplatedParent}">
									<Binding.Converter>
										<igPrimLocal:MinMaxConverter MinValue="12.5"/>
									</Binding.Converter>
								</Binding>
							</TextBlock.FontSize>

						</TextBlock>

						<!--Details-->
						<ScrollViewer Grid.Row="2"
													Margin="5"
													HorizontalScrollBarVisibility="Auto"
													VerticalScrollBarVisibility="Auto">

							<TextBox 
								Text="{Binding Path=Content, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
								Foreground="{Binding Path=(igSchedulePrim:CalendarBrushProvider.BrushProvider)[BlockingErrorForeground], RelativeSource={RelativeSource TemplatedParent}}"
								IsReadOnly="True"
								TextWrapping="Wrap"
								Background="{x:Null}"/>

						</ScrollViewer>

					</Grid>

				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style TargetType="igSchedule:XamDayView">
		<Setter Property="FontFamily" Value ="Segoe UI"/>
        <Setter Property="Background" Value="Transparent" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="igSchedule:XamDayView">
					<Border BorderBrush="{TemplateBinding BorderBrush}"
							BorderThickness="{TemplateBinding BorderThickness}"
							Background="{TemplateBinding Background}"
							Padding="{TemplateBinding Padding}"
							igPrim:XamlHelper.SnapsToDevicePixels="True">
					
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup Name="ErrorStates">
								<VisualState Name="NoError"/>
								<VisualState Name="Error">
									<Storyboard Storyboard.TargetName="ErrorDisplay" Storyboard.TargetProperty="Visibility">
										<ObjectAnimationUsingKeyFrames>
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Visible</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>

						<Grid x:Name="RootPanel" >
							<igLayout:GridBagPanel igPrim:XamlHelper.SnapsToDevicePixels="{TemplateBinding igPrim:XamlHelper.SnapsToDevicePixels}">
								<!-- Additional Timezone Headers -->
								<TextBlock Text="{TemplateBinding SecondaryTimeZoneLabel}"
									VerticalAlignment="Bottom"
                                    igLayout:GridBagPanel.Row="1"
                                    igLayout:GridBagPanel.Column="0"
                                    Margin="0,0,0,1"
                                    Visibility="{TemplateBinding SecondaryTimeZoneVisibility}" />
								<Rectangle igPrim:XamlHelper.SnapsToDevicePixels="True"
                                    Height="1"
                                    Fill="{Binding Path=DefaultBrushProvider[TimeslotHeaderTickmarkDayView], RelativeSource={RelativeSource TemplatedParent}}"
                                    VerticalAlignment="Bottom"
                                    igLayout:GridBagPanel.Row="1"
                                    igLayout:GridBagPanel.Column="0"
                                    igLayout:GridBagPanel.PreferredHeight="1"
                                    Visibility="{TemplateBinding SecondaryTimeZoneVisibility}" />
								<igSchedulePrim:DayViewTimeslotHeaderArea
                                    x:Name="SecondaryTimeZone"
									Background="{Binding Path=DefaultBrushProvider[TimeslotHeaderAreaBackgroundDayView], RelativeSource={RelativeSource TemplatedParent}}"
									BorderBrush="{Binding Path=DefaultBrushProvider[TimeslotHeaderAreaSeparator], RelativeSource={RelativeSource TemplatedParent}}"
									BorderThickness="0,0,1,0"
									igLayout:GridBagPanel.Row="2"
									igLayout:GridBagPanel.Column="0"
									Visibility="{TemplateBinding SecondaryTimeZoneVisibility}"
									igLayout:GridBagPanel.RowWeight="1" />

								<!-- Primary Timezone Headers -->
								<TextBlock Text="{TemplateBinding PrimaryTimeZoneLabel}"
									VerticalAlignment="Bottom"
                                    Margin="0,0,0,1"
                                    igLayout:GridBagPanel.Row="1"
                                    igLayout:GridBagPanel.Column="1" />
								<Rectangle igPrim:XamlHelper.SnapsToDevicePixels="True"
                                    Height="1"
                                    Fill="{Binding Path=DefaultBrushProvider[TimeslotHeaderTickmarkDayView], RelativeSource={RelativeSource TemplatedParent}}"
                                    VerticalAlignment="Bottom"
                                    igLayout:GridBagPanel.Row="1"
                                    igLayout:GridBagPanel.Column="1"
                                    igLayout:GridBagPanel.PreferredHeight="1" />
								<igSchedulePrim:DayViewTimeslotHeaderArea
                                    x:Name="PrimaryTimeZone" 
									Background="{Binding Path=DefaultBrushProvider[TimeslotHeaderAreaBackgroundDayView], RelativeSource={RelativeSource TemplatedParent}}"
									igLayout:GridBagPanel.Row="2" 
									igLayout:GridBagPanel.Column="1" 
									igLayout:GridBagPanel.RowWeight="1" />

								<igSchedulePrim:ScheduleStackPanel 
                                    x:Name="GroupHeadersPanel" 
									igLayout:GridBagPanel.Row="0" 
									igLayout:GridBagPanel.Column="2" 
									igLayout:GridBagPanel.ColumnWeight="1"
									Visibility="{TemplateBinding CalendarHeaderAreaVisibilityResolved}"
									/>

								<igSchedulePrim:ScheduleStackPanel
                                    x:Name="DayHeadersPanel" 
									igLayout:GridBagPanel.Row="1" 
									igLayout:GridBagPanel.Column="2" 
									igLayout:GridBagPanel.ColumnWeight="1" />

								<!-- AS 11/11/10 NA 11.1 - MultiDayActivityAreaHeight -->
								<!-- Overlap the dayheaderspanel above. -->
								<igSchedulePrim:ScheduleResizerBar
									x:Name="MultiDayActivityAreaResizer"
									IsEnabled="{TemplateBinding AllowMultiDayActivityAreaResizing}"
									Visibility="{TemplateBinding MultiDayActivityAreaVisibility}"
									Canvas.ZIndex="2"
									Height="4"
									igLayout:GridBagPanel.Column="0"
									igLayout:GridBagPanel.ColumnSpan="3"
									igLayout:GridBagPanel.Row="1"
									VerticalAlignment="Bottom"
									/>

								<igSchedulePrim:ScheduleStackPanel 
									x:Name="GroupsPanel" 
									igLayout:GridBagPanel.Row="2" 
									igLayout:GridBagPanel.Column="2" 
									igLayout:GridBagPanel.ColumnWeight="1"
									igLayout:GridBagPanel.RowWeight="1" />

								<ScrollBar 
									igLayout:GridBagPanel.Column="3" 
									igLayout:GridBagPanel.Row="1" 
									Orientation="Vertical" 
									Style="{TemplateBinding ScrollBarStyle}"
									x:Name="DayHeadersScrollBar" />
								<ScrollBar 
									igLayout:GridBagPanel.Column="3" 
									igLayout:GridBagPanel.Row="{Binding MultiDayActivityAreaVisibility, Converter={StaticResource allDayVisToRow}, RelativeSource={RelativeSource TemplatedParent}}" 
									igLayout:GridBagPanel.RowSpan="{Binding MultiDayActivityAreaVisibility, Converter={StaticResource allDayVisToRowSpan}, RelativeSource={RelativeSource TemplatedParent}}" 
									Orientation="Vertical" 
									Style="{TemplateBinding ScrollBarStyle}"
									x:Name="TimeslotScrollBar" 
									igLayout:GridBagPanel.RowWeight="1" />
								<ScrollBar 
									igLayout:GridBagPanel.Column="2" 
									igLayout:GridBagPanel.Row="3" 
									igLayout:GridBagPanel.ColumnWeight="1"
									Orientation="Horizontal"
									Style="{TemplateBinding ScrollBarStyle}"
									x:Name="TimeslotGroupScrollBar" />
							</igLayout:GridBagPanel>

							<ContentControl x:Name="ErrorDisplay" 
															Visibility="Collapsed" 
															Content="{Binding Path=BlockingError, RelativeSource={RelativeSource TemplatedParent}}"
															Style="{StaticResource BlockingErrorStyle}"
															igSchedulePrim:CalendarBrushProvider.BrushProvider="{Binding Path=DefaultBrushProvider, RelativeSource={RelativeSource TemplatedParent}}"
															/>
						</Grid>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style TargetType="igSchedule:XamScheduleView">
		<Setter Property="FontFamily" Value ="Segoe UI"/>
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="igSchedule:XamScheduleView">
					<Border BorderBrush="{TemplateBinding BorderBrush}"
							BorderThickness="{TemplateBinding BorderThickness}"
							Background="{TemplateBinding Background}"
							Padding="{TemplateBinding Padding}"
							igPrim:XamlHelper.SnapsToDevicePixels="True">
					
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup Name="ErrorStates">
								<VisualState Name="NoError"/>
								<VisualState Name="Error">
									<Storyboard Storyboard.TargetName="ErrorDisplay" Storyboard.TargetProperty="Visibility">
										<ObjectAnimationUsingKeyFrames>
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Visible</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						
						<Grid x:Name="RootPanel" >
							<igLayout:GridBagPanel igPrim:XamlHelper.SnapsToDevicePixels="{TemplateBinding igPrim:XamlHelper.SnapsToDevicePixels}">
								<TextBlock Text="{TemplateBinding SecondaryTimeZoneLabel}" 
										VerticalAlignment="Top"
										HorizontalAlignment="Right"
										Margin="0,6,8,0"
										igLayout:GridBagPanel.Row="0" 
										igLayout:GridBagPanel.Column="0" 
										Visibility="{TemplateBinding SecondaryTimeZoneVisibility}" />
								<TextBlock Text="{TemplateBinding PrimaryTimeZoneLabel}" 
										VerticalAlignment="Top"
										HorizontalAlignment="Right"
										Margin="0,6,8,0"
										igLayout:GridBagPanel.Row="1" 
										igLayout:GridBagPanel.Column="0" />

								<igSchedulePrim:ScheduleViewTimeslotHeaderArea 
										x:Name="SecondaryTimeZone" 
										Background="{Binding Path=DefaultBrushProvider[TimeslotHeaderAreaBackgroundScheduleView], RelativeSource={RelativeSource TemplatedParent}}"
										BorderBrush="{Binding Path=DefaultBrushProvider[TimeslotHeaderAreaSeparator], RelativeSource={RelativeSource TemplatedParent}}"
										BorderThickness="0,0,0,1"
										igLayout:GridBagPanel.Row="0" 
										igLayout:GridBagPanel.Column="2" 
										Visibility="{TemplateBinding SecondaryTimeZoneVisibility}" 
										igLayout:GridBagPanel.ColumnWeight="1" />
								<igSchedulePrim:ScheduleViewTimeslotHeaderArea 
										x:Name="PrimaryTimeZone" 
										Background="{Binding Path=DefaultBrushProvider[TimeslotHeaderAreaBackgroundScheduleView], RelativeSource={RelativeSource TemplatedParent}}"
										igLayout:GridBagPanel.Row="1" 
										igLayout:GridBagPanel.Column="2" 
										igLayout:GridBagPanel.ColumnWeight="1" />

								<igSchedulePrim:ScheduleStackPanel 
										x:Name="GroupHeadersPanel" 
										igLayout:GridBagPanel.Row="2" 
										igLayout:GridBagPanel.Column="0" 
										igLayout:GridBagPanel.RowWeight="1" 
										Visibility="{TemplateBinding CalendarHeaderAreaVisibilityResolved}"
									/>

								<igSchedulePrim:ScheduleStackPanel 
										x:Name="GroupsPanel" 
										igLayout:GridBagPanel.Row="2" 
										igLayout:GridBagPanel.Column="2" 
										igLayout:GridBagPanel.ColumnWeight="1"
										igLayout:GridBagPanel.RowWeight="1" />

								<ScrollBar 
										igLayout:GridBagPanel.Column="3" 
										igLayout:GridBagPanel.Row="2" 
										Orientation="Vertical" 
									  Style="{TemplateBinding ScrollBarStyle}"
										x:Name="TimeslotGroupScrollBar" 
										igLayout:GridBagPanel.RowWeight="1" />
								<ScrollBar 
										igLayout:GridBagPanel.Column="2" 
										igLayout:GridBagPanel.Row="3" 
										igLayout:GridBagPanel.ColumnWeight="1"
										Orientation="Horizontal"
									  Style="{TemplateBinding ScrollBarStyle}"
										x:Name="TimeslotScrollBar" />
								<Rectangle
										igPrim:XamlHelper.SnapsToDevicePixels="True"
										Fill="{Binding Path=DefaultBrushProvider[TimeslotHeaderTickmarkScheduleView], RelativeSource={RelativeSource TemplatedParent}}"
										igLayout:GridBagPanel.Row="0"
										igLayout:GridBagPanel.Column="1"
										igLayout:GridBagPanel.RowSpan="4"
										igLayout:GridBagPanel.ColumnWeight="0"
										igLayout:GridBagPanel.PreferredWidth="1"
                                                  Width="2"/>

								<!-- AS 11/11/10 NA 11.1 - CalendarHeaderAreaWidth -->
								<!-- Overlap the rectangle above. -->
								<igSchedulePrim:ScheduleResizerBar 
									x:Name="GroupHeadersResizer"
									IsEnabled="{TemplateBinding AllowCalendarHeaderAreaResizing}"
									Canvas.ZIndex="2"
									Width="4"
									igLayout:GridBagPanel.Column="0" 
									igLayout:GridBagPanel.ColumnSpan="2" 
									igLayout:GridBagPanel.Row="0"
									igLayout:GridBagPanel.RowSpan="4" 
									HorizontalAlignment="Right"
									/>
							</igLayout:GridBagPanel>

							<ContentControl x:Name="ErrorDisplay" 
															Visibility="Collapsed" 
															Content="{Binding Path=BlockingError, RelativeSource={RelativeSource TemplatedParent}}"
															Style="{StaticResource BlockingErrorStyle}"
															igSchedulePrim:CalendarBrushProvider.BrushProvider="{Binding Path=DefaultBrushProvider, RelativeSource={RelativeSource TemplatedParent}}"
															/>

						</Grid>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style TargetType="igSchedule:XamMonthView">
		<Setter Property="FontFamily" Value ="Segoe UI"/>
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="igSchedule:XamMonthView">
					<Border BorderBrush="{TemplateBinding BorderBrush}"
							BorderThickness="{TemplateBinding BorderThickness}"
							Background="{TemplateBinding Background}"
							Padding="{TemplateBinding Padding}"
							igPrim:XamlHelper.SnapsToDevicePixels="True">
					
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup Name="ErrorStates">
								<VisualState Name="NoError"/>
								<VisualState Name="Error">
									<Storyboard Storyboard.TargetName="ErrorDisplay" Storyboard.TargetProperty="Visibility">
										<ObjectAnimationUsingKeyFrames>
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Visible</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						
						<Grid x:Name="RootPanel" >
							<igLayout:GridBagPanel igPrim:XamlHelper.SnapsToDevicePixels="{TemplateBinding igPrim:XamlHelper.SnapsToDevicePixels}">
								<igSchedulePrim:ScheduleStackPanel 
                                    x:Name="GroupHeadersPanel" 
									igLayout:GridBagPanel.Row="0" 
									igLayout:GridBagPanel.Column="0" 
									igLayout:GridBagPanel.ColumnWeight="1"
									Visibility="{TemplateBinding CalendarHeaderAreaVisibilityResolved}"
									/>

								<igSchedulePrim:ScheduleStackPanel 
									x:Name="GroupsPanel" 
									igLayout:GridBagPanel.Row="1" 
									igLayout:GridBagPanel.Column="0" 
									igLayout:GridBagPanel.ColumnWeight="1"
									igLayout:GridBagPanel.RowWeight="1" />

								<ScrollBar 
									igLayout:GridBagPanel.Column="1" 
									igLayout:GridBagPanel.Row="1" 
									Orientation="Vertical" 
									Style="{TemplateBinding ScrollBarStyle}"
									x:Name="WeekScrollBar" />
								<ScrollBar 
									igLayout:GridBagPanel.Column="0" 
									igLayout:GridBagPanel.Row="2" 
									igLayout:GridBagPanel.ColumnWeight="1"
									Orientation="Horizontal"
									Style="{TemplateBinding ScrollBarStyle}"
									x:Name="TimeslotGroupScrollBar" />
							</igLayout:GridBagPanel>

							<ContentControl x:Name="ErrorDisplay" 
															Visibility="Collapsed" 
															Content="{Binding Path=BlockingError, RelativeSource={RelativeSource TemplatedParent}}"
															Style="{StaticResource BlockingErrorStyle}"
															igSchedulePrim:CalendarBrushProvider.BrushProvider="{Binding Path=DefaultBrushProvider, RelativeSource={RelativeSource TemplatedParent}}"
															/>

						</Grid>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<DataTemplate x:Key="dateNavDayActivityToolTipTemplate">
		<StackPanel Orientation="Vertical" Margin="0,1,3,1">
			<StackPanel Orientation="Horizontal">
				<!-- Primary category indicator -->
				<Rectangle Width="20"
									 Margin="0,0,5,0"
									 Fill="{Binding Path=CategoryBackground}"/>
				
				<!-- start -->
				<igSchedulePrim:RelativeDateRangePresenter
						ConvertDateTimeToLocal="{Binding Path=Activity.IsTimeZoneNeutral, Converter={StaticResource notConverter}}"
						Start="{Binding Path=Activity.Start}"
						End="{Binding Path=Activity.End}"
						RelativeDate="{Binding Path=Date}"
						IncludeEnd="False"
						HorizontalAlignment="Right"
						SizeToWidestTime="True"
									/>
				
				<!-- start/end separator -->
				<TextBlock Text="-"
									 Margin="4,0,4,0"	
									 />
				
				<!-- end -->
				<igSchedulePrim:RelativeDateRangePresenter
						ConvertDateTimeToLocal="{Binding Path=Activity.IsTimeZoneNeutral, Converter={StaticResource notConverter}}"
						Start="{Binding Path=Activity.Start}"
						End="{Binding Path=Activity.End}"
						RelativeDate="{Binding Path=Date}"
						IncludeStart="False"
						HorizontalAlignment="Right"
						SizeToWidestTime="{Binding Path=AlignEndTime}"
								/>
				
				<!-- subject -->
				<TextBlock Text="{Binding Path=Activity.Subject}"
									 Margin="7,0,4,0"	/>

				<!-- indicator panel -->
				<StackPanel
					 igSchedulePrim:ActivityContentPanel.Area="Indicators"
					Orientation="Horizontal">

					<!-- Occurrence indicator -->
					<ContentControl Style="{Binding Path=Activity.IsVariance, Converter={StaticResource boolToOccurrenceStyle}}"
									igPrim:XamlHelper.Focusable="False"
								Margin="2,3,2,2"
								Foreground="{StaticResource reminderBrush}"
						Visibility="{Binding Path=Activity.IsOccurrence, Converter={StaticResource boolToVisibility}}"
												/>

					<!-- Reminder indicator -->
					<Path Width="10"
								Height="10"
								Stretch="Fill"
								Margin="2,3,2,2"
								Data="M 4,2 C4,2 6,2 6,2 6,2 6,3 6,3 6,3 7,3 7,3 7,3 7,7 7,7 7,7 8,7 8,7 8,7 8,8 8,8 8,8 2,8 2,8 2,8 2,7 2,7 2,7 3,7 3,7 3,7 3,3 3,3 3,3 4,3 4,3 4,3 4,2 4,2 zM 4,1 C4,1 4,2 4,2 4,2 3,2 3,2 3,2 3,3 3,3 3,3 2,3 2,3 2,3 2,7 2,7 2,7 1,7 1,7 1,7 1,8 1,8 1,8 1,9 1,9 1,9 4,9 4,9 4,9 4,10 4,10 4,10 6,10 6,10 6,10 6,9 6,9 6,9 8,9 8,9 8,9 9,9 9,9 9,9 9,8 9,8 9,8 9,7 9,7 9,7 8,7 8,7 8,7 8,3 8,3 8,3 7,3 7,3 7,3 7,2 7,2 7,2 6,2 6,2 6,2 6,1 6,1 6,1 4,1 4,1 zM 9,3 C9,3 9,4 9,4 9,4 10,4 10,4 10,4 10,3 10,3 10,3 9,3 9,3 zM 8,0 C8,0 8,1 8,1 8,1 9,1 9,1 9,1 9,0 9,0 9,0 8,0 8,0 zM 0,3 C0,3 0,4 0,4 0,4 1,4 1,4 1,4 1,3 1,3 1,3 0,3 0,3 zM 1,0 C1,0 1,1 1,1 1,1 2,1 2,1 2,1 2,0 2,0 2,0 1,0 1,0 z"
								Fill="{StaticResource reminderBrush}"
								Visibility="{Binding Path=ReminderVisibility}"
											/>

					<!-- Activity Category Bars -->
					<!--<igSchedulePrim:ActivityCategoryBarPanel Margin="2,0,0,0" Categories="{Binding Path=Categories }" />-->
				</StackPanel>
			</StackPanel>
		</StackPanel>
	</DataTemplate>

	<DataTemplate x:Key="dateNavDayToolTipTemplate">
		<Grid Margin="0,0,1,0">

			<Grid.RowDefinitions>
				<RowDefinition Height="Auto"/>
				<RowDefinition Height="Auto"/>
			</Grid.RowDefinitions>
			
			<!-- Date Header -->
			<Border  Margin="25,0,2,0"
							BorderThickness ="0,0,0,1"
							BorderBrush="{Binding Path=(igSchedulePrim:CalendarBrushProvider.BrushProvider)[ToolTipBorder]}">

				<igSchedulePrim:ScheduleDateTimePresenter
										Margin="1"
											HorizontalAlignment="Left"
											DateTime="{Binding Path=Date}"
										  FontWeight="Bold"
											FormatType="LongDate"
											igPrim:XamlHelper.SnapsToDevicePixels="{TemplateBinding igPrim:XamlHelper.SnapsToDevicePixels}"
											Foreground="{Binding Path=(igSchedulePrim:CalendarBrushProvider.BrushProvider)[ToolTipForeground]}"/>
			</Border>

			<!-- Activities -->
			<ItemsControl Grid.Row="1"
										Margin="0,5,0,3"
										ItemsSource="{Binding Path=ActivityToolTipInfos}"
										ItemTemplate="{StaticResource dateNavDayActivityToolTipTemplate}"/>
		</Grid>
	</DataTemplate>

	<Style TargetType="igSchedulePrim:ScheduleToolTip">
		<Setter Property="FontFamily" Value="Segoe UI"/>
		<Setter Property="BorderThickness" Value="1" />
		<Setter Property="Padding" Value="1" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="igSchedulePrim:ScheduleToolTip">
					<Border BorderBrush="{Binding Path=(igSchedulePrim:CalendarBrushProvider.BrushProvider)[ToolTipBorder], RelativeSource={RelativeSource TemplatedParent}}"
							BorderThickness="{TemplateBinding BorderThickness}"
							Background="{Binding Path=(igSchedulePrim:CalendarBrushProvider.BrushProvider)[ToolTipBackground], RelativeSource={RelativeSource TemplatedParent}}"
							Padding="{TemplateBinding Padding}"
							CornerRadius="2"
							igPrim:XamlHelper.SnapsToDevicePixels="True">
						<ContentControl
							igPrim:XamlHelper.SnapsToDevicePixels="{TemplateBinding igPrim:XamlHelper.SnapsToDevicePixels}" 
							Foreground="{Binding Path=(igSchedulePrim:CalendarBrushProvider.BrushProvider)[ToolTipForeground], RelativeSource={RelativeSource TemplatedParent}}">
							<ContentPresenter/>
						</ContentControl>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>

	</Style>

	<Style TargetType="igSchedulePrim:ActivityToolTipInfoPresenter">
		<Setter Property="Padding" Value="5,0,3,0" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="igSchedulePrim:ActivityToolTipInfoPresenter">
					<StackPanel 
						Orientation="Vertical" 
						Margin="{TemplateBinding Padding}" 
						DataContext="{TemplateBinding ActivityToolTipInfo}">
						<StackPanel Orientation="Horizontal">
							<igSchedulePrim:ScheduleDateRangePresenter
								ConvertDateTimeToLocal="{Binding Path=Activity.IsTimeZoneNeutral, Converter={StaticResource notConverter}}"
								FontSize="{Binding Path=ActivityPresenter.FontSize}"
								Start="{Binding Path=Activity.Start}"
								End="{Binding Path=Activity.End}"
								/>
							<TextBlock Text="{Binding Path=Activity.Subject}"
								Margin="5,0,0,0"
								FontSize="{Binding Path=ActivityPresenter.FontSize}"
								/>
						</StackPanel>

						<TextBlock Text="{Binding Path=ActivityPresenter.AdditionalText}" 
							Visibility="{Binding Path=ActivityPresenter.AdditionalText, Converter={StaticResource nullToVisibility}}"
							FontSize="{Binding Path=ActivityPresenter.FontSize}"
							Margin="0,1,0,1"/>

						<!--Error info-->
						<Grid Margin="0,3,3,3" Visibility="{Binding Error, Converter={StaticResource nullToVisibility}}">
							<Grid.RowDefinitions>
								<RowDefinition Height="5"/>
								<RowDefinition Height="Auto"/>
								<RowDefinition Height="Auto"/>
							</Grid.RowDefinitions>
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="Auto"/>
								<ColumnDefinition Width="Auto"/>
								<ColumnDefinition Width="Auto"/>
							</Grid.ColumnDefinitions>
							<Rectangle 
								Grid.ColumnSpan="3" 
								VerticalAlignment="Center" 
								Height="1" 
								Fill="{Binding Path=ActivityPresenter.(igSchedulePrim:CalendarBrushProvider.BrushProvider)[ToolTipForeground]}"/>
							<Path
								Grid.Row="1"
								Grid.Column="0"
								Margin="2,3,2,2"
								Height="11"
								Width="11"
								Stretch="Fill"
								Data="M 3,7 C3,7 4,7 4,7 4,7 4,8 4,8 4,8 3,8 3,8 3,8 3,7 3,7 zM 4,6 C4,6 5,6 5,6 5,6 5,7 5,7 5,7 4,7 4,7 4,7 4,6 4,6 zM 7,3 C7,3 8,3 8,3 8,3 8,4 8,4 8,4 7,4 7,4 7,4 7,3 7,3 zM 6,4 C6,4 7,4 7,4 7,4 7,5 7,5 7,5 6,5 6,5 6,5 6,4 6,4 zM 7,7 C7,7 8,7 8,7 8,7 8,8 8,8 8,8 7,8 7,8 7,8 7,7 7,7 zM 6,6 C6,6 7,6 7,6 7,6 7,7 7,7 7,7 6,7 6,7 6,7 6,6 6,6 zM 5,5 C5,5 6,5 6,5 6,5 6,6 6,6 6,6 5,6 5,6 5,6 5,5 5,5 zM 4,4 C4,4 5,4 5,4 5,4 5,5 5,5 5,5 4,5 4,5 4,5 4,4 4,4 zM 3,3 C3,3 4,3 4,3 4,3 4,4 4,4 4,4 3,4 3,4 3,4 3,3 3,3 zM 1,2 C1,2 2,2 2,2 2,2 2,3 2,3 2,3 1,3 1,3 1,3 1,2 1,2 zM 2,1 C2,1 3,1 3,1 3,1 3,2 3,2 3,2 2,2 2,2 2,2 2,1 2,1 zM 3,0 C3,0 8,0 8,0 8,0 8,1 8,1 8,1 3,1 3,1 3,1 3,0 3,0 zM 8,1 C8,1 9,1 9,1 9,1 9,2 9,2 9,2 8,2 8,2 8,2 8,1 8,1 zM 9,2 C9,2 10,2 10,2 10,2 10,3 10,3 10,3 9,3 9,3 9,3 9,2 9,2 zM 10,3 C10,3 11,3 11,3 11,3 11,8 11,8 11,8 10,8 10,8 10,8 10,3 10,3 zM 9,8 C9,8 10,8 10,8 10,8 10,9 10,9 10,9 9,9 9,9 9,9 9,8 9,8 zM 8,9 C8,9 9,9 9,9 9,9 9,10 9,10 9,10 8,10 8,10 8,10 8,9 8,9 zM 3,10 C3,10 8,10 8,10 8,10 8,11 8,11 8,11 3,11 3,11 3,11 3,10 3,10 zM 2,9 C2,9 3,9 3,9 3,9 3,10 3,10 3,10 2,10 2,10 2,10 2,9 2,9 zM 1,8 C1,8 2,8 2,8 2,8 2,9 2,9 2,9 1,9 1,9 1,9 1,8 1,8 zM 0,3 C0,3 1,3 1,3 1,3 1,8 1,8 1,8 0,8 0,8 0,8 0,3 0,3 z"
								Fill="{Binding Path=ActivityPresenter.(igSchedulePrim:CalendarBrushProvider.BrushProvider)[ToolTipErrorForeground]}"
								/>

							<ContentControl
								Grid.Row="1"
								Grid.Column="1"
								Content="{Binding Source={StaticResource ToolTipErrorLabel}, Path=Value}"
								FontSize="{Binding Path=ActivityPresenter.FontSize}"
								Foreground="{Binding Path=ActivityPresenter.(igSchedulePrim:CalendarBrushProvider.BrushProvider)[ToolTipErrorForeground]}">
								<!-- JJD 9/19/11 - TFS87912
								Use binding instead to the Value property of the ScheduleResourceString
								so we can get notified when the resources are changed.
								<igSchedulePrim:ScheduleResourceString ResourceName="ToolTipErrorLabel"/>-->
							</ContentControl>

							<TextBlock 
								Grid.Row="2"
								Grid.Column="1"
								Grid.ColumnSpan="2"
								Text="{Binding Path=Error.UserErrorText}"
								FontSize="{Binding Path=ActivityPresenter.FontSize}"
								TextWrapping="Wrap"
								MaxWidth="600"
								Margin="0,0,1,0"/>
						</Grid>
					</StackPanel>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<DataTemplate x:Key="activityToolTipTemplate">
		<igSchedulePrim:ActivityToolTipInfoPresenter ActivityToolTipInfo="{Binding}" />
	</DataTemplate>
	
	<Style x:Key="buttonToolTip" TargetType="ToolTip">
		<Setter Property="FontFamily" Value="Segoe UI"/>
		<Setter Property="Padding" Value="1"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="ToolTip">
					<Border BorderBrush="{TemplateBinding BorderBrush}"
							BorderThickness="{TemplateBinding BorderThickness}"
							Background="{TemplateBinding Background}"
						  CornerRadius="2"
							Padding="{TemplateBinding Padding}"
							igPrim:XamlHelper.SnapsToDevicePixels="True">
						<ContentPresenter/>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style TargetType="igSchedulePrim:TimeslotHeaderTickmark">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="igSchedulePrim:TimeslotHeaderTickmark">
					<Rectangle Fill="{TemplateBinding Background}"
						igPrim:XamlHelper.SnapsToDevicePixels="True"/>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style TargetType="igSchedulePrim:CalendarGroupTimeslotArea">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="igSchedulePrim:CalendarGroupTimeslotArea">
					<Border Margin ="{TemplateBinding ComputedMargin}"
							BorderBrush="{TemplateBinding ComputedBorderBrush}"
							BorderThickness="{TemplateBinding ComputedBorderThickness}"
							Padding="{TemplateBinding Padding}"
							igPrim:XamlHelper.SnapsToDevicePixels="True">
						<igSchedulePrim:ScheduleStackPanel 
							x:Name="ItemsPanel" 
							InterItemSpacing="-1" 
							igPrim:XamlHelper.SnapsToDevicePixels="{TemplateBinding igPrim:XamlHelper.SnapsToDevicePixels}"/>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style TargetType="igSchedulePrim:MonthViewCalendarGroupTimeslotArea">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="igSchedulePrim:MonthViewCalendarGroupTimeslotArea">
					<Border Margin ="{TemplateBinding ComputedMargin}"
							Background="{TemplateBinding ComputedBackground}"
							BorderBrush="{TemplateBinding ComputedBorderBrush}"
							BorderThickness="{TemplateBinding ComputedBorderThickness}"
							Padding="{TemplateBinding Padding}"
							igPrim:XamlHelper.SnapsToDevicePixels="True">
						<Grid igPrim:XamlHelper.SnapsToDevicePixels="{TemplateBinding igPrim:XamlHelper.SnapsToDevicePixels}">
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="Auto" />
								<ColumnDefinition Width="*" />
							</Grid.ColumnDefinitions>
							<Grid.RowDefinitions>
								<RowDefinition Height="Auto" />
								<RowDefinition Height="*" />
							</Grid.RowDefinitions>

							<!-- This is a placeholder to ensure that the day of week headers are offset similar 
								to the weeks. I would have bound the Width of the column definition but that 
								doesn't work in silverlight -->
							<Rectangle Width="{Binding WeekHeaderWidth, RelativeSource={RelativeSource TemplatedParent}}" />
							
							<igSchedulePrim:ScheduleStackPanel
								x:Name="DayOfWeekHeadersPanel"
								Grid.Column="1"
								InterItemSpacing="-1"
								/>

							<igSchedulePrim:ScheduleStackPanel
								x:Name="ItemsPanel"
								Grid.Row="1"
								Grid.ColumnSpan="2"
								InterItemSpacing="-1"/>
						</Grid>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<ControlTemplate x:Key="timeslotAreaTemplate" TargetType="igSchedulePrim:TimeslotArea">
		<Border BorderBrush="{TemplateBinding ComputedBorderBrush}"
				BorderThickness="{TemplateBinding ComputedBorderThickness}"
				Background="{TemplateBinding ComputedBackground}"
				Padding="{TemplateBinding Padding}"
				igPrim:XamlHelper.SnapsToDevicePixels="True">
			<Grid igPrim:XamlHelper.SnapsToDevicePixels="{TemplateBinding igPrim:XamlHelper.SnapsToDevicePixels}">
				<igSchedulePrim:TimeslotPanel x:Name="TimeslotPanel"  />
				<igSchedulePrim:ScheduleActivityPanel x:Name="ActivityPanel" />
			</Grid>
		</Border>
	</ControlTemplate>

	<Style TargetType="igSchedulePrim:TimeslotArea">
		<Setter Property="Template" Value="{StaticResource timeslotAreaTemplate}" />
	</Style>

	<Style TargetType="igSchedulePrim:DayViewTimeslotArea">
		<Setter Property="Template" Value="{StaticResource timeslotAreaTemplate}" />
	</Style>

	<Style TargetType="igSchedulePrim:MonthViewTimeslotArea">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="igSchedulePrim:MonthViewTimeslotArea">
					<Border BorderBrush="{TemplateBinding ComputedBorderBrush}"
							BorderThickness="{TemplateBinding ComputedBorderThickness}"
							Background="{TemplateBinding Background}"
							Padding="{TemplateBinding Padding}"
							igPrim:XamlHelper.SnapsToDevicePixels="True">
						<Grid igPrim:XamlHelper.SnapsToDevicePixels="{TemplateBinding igPrim:XamlHelper.SnapsToDevicePixels}">
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="Auto" />
								<ColumnDefinition />
							</Grid.ColumnDefinitions>
							<Grid.RowDefinitions>
								<RowDefinition Height="Auto" />
								<RowDefinition />
							</Grid.RowDefinitions>
							<igSchedulePrim:MonthViewWeekHeader Width="{TemplateBinding WeekHeaderWidth}" Grid.Row="1" Start="{TemplateBinding Start}" End="{TemplateBinding End}" WeekNumber="{TemplateBinding WeekNumber}" />
							<igSchedulePrim:ScheduleStackPanel Grid.Column="1" x:Name="DayHeaderPanel" InterItemSpacing="-1" />
							<igSchedulePrim:TimeslotPanel Grid.Row="1" Grid.Column="1" x:Name="TimeslotPanel" InterItemSpacing="-1"  />
							<igSchedulePrim:ScheduleActivityPanel Grid.Row="1" Grid.Column="1" x:Name="ActivityPanel" InterItemSpacing="-1" />
						</Grid>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style TargetType="igSchedulePrim:ScheduleViewTimeslotHeaderArea">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="igSchedulePrim:ScheduleViewTimeslotHeaderArea">
					<Border BorderBrush="{TemplateBinding BorderBrush}"
							BorderThickness="{TemplateBinding BorderThickness}"
							Background="{TemplateBinding Background}"
							Padding="{TemplateBinding Padding}"
							igPrim:XamlHelper.SnapsToDevicePixels="True">
						<igLayout:GridBagPanel igPrim:XamlHelper.SnapsToDevicePixels="{TemplateBinding igPrim:XamlHelper.SnapsToDevicePixels}">
							<igSchedulePrim:TimeslotPanel x:Name="TimeslotPanel" igLayout:GridBagPanel.RowWeight="1" />
							<igSchedulePrim:TimeslotGroupPanel x:Name="TimeslotGroupPanel" igLayout:GridBagPanel.Row="1" />
						</igLayout:GridBagPanel>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style TargetType="igSchedulePrim:DayViewTimeslotHeaderArea">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="igSchedulePrim:DayViewTimeslotHeaderArea">
					<Border BorderBrush="{TemplateBinding BorderBrush}"
							BorderThickness="{TemplateBinding BorderThickness}"
							Background="{TemplateBinding Background}"
							Margin="{TemplateBinding ComputedMargin}"
							Padding="{TemplateBinding Padding}"
							igPrim:XamlHelper.SnapsToDevicePixels="True">
						<igSchedulePrim:TimeslotPanel x:Name="TimeslotPanel" 
							igPrim:XamlHelper.SnapsToDevicePixels="{TemplateBinding igPrim:XamlHelper.SnapsToDevicePixels}"/>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style TargetType="igSchedulePrim:TimeslotPresenter">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="igSchedulePrim:TimeslotPresenter">
					<Grid>
						<Border x:Name="Border"
							BorderBrush="{TemplateBinding ComputedBorderBrush}"
							BorderThickness="{Binding Path=Orientation, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource tsOrientationToThicknessConverter}}"
							Background="{TemplateBinding ComputedBackground}"
							Padding="{TemplateBinding Padding}"
							igPrim:XamlHelper.SnapsToDevicePixels="True">
						</Border>
						<Border x:Name="DayBorder"
							BorderBrush="{TemplateBinding DayBorderBrush}"
							BorderThickness="{TemplateBinding DayBorderThickness}"
							Visibility="{TemplateBinding DayBorderVisibility}"
							igPrim:XamlHelper.SnapsToDevicePixels="True">
						</Border>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style TargetType="igSchedulePrim:DayViewTimeslotHeader">
		<Setter Property="VerticalContentAlignment" Value="Top" />
		<Setter Property="HorizontalContentAlignment" Value="Right" />
		<Setter Property="Padding" Value="3,3,3,3" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="igSchedulePrim:DayViewTimeslotHeader">
					<Grid Background="{TemplateBinding ComputedBackground}"
						igPrim:XamlHelper.SnapsToDevicePixels="True">
						<igSchedulePrim:TimeslotHeaderTimePresenter
                            Foreground="{TemplateBinding ComputedForeground}"
							Margin="{TemplateBinding Padding}"
							HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
							VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
							Visibility="{Binding Path=LeadingTickmarkKind, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource tsTickmarkKindToVisibilityConverter}}"
							igPrim:XamlHelper.SnapsToDevicePixels="{TemplateBinding igPrim:XamlHelper.SnapsToDevicePixels}" />

						<Grid VerticalAlignment="Top" Visibility="{TemplateBinding LeadingTickmarkVisibility}">
							<Grid.ColumnDefinitions>
								<ColumnDefinition/>
								<ColumnDefinition Width="{Binding Path=LeadingTickmarkKind, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource tsTickmarkKindToColumnWidthConverter}}"/>
							</Grid.ColumnDefinitions>
							<igSchedulePrim:TimeslotHeaderTickmark
								Grid.Column="1"
								Background ="{TemplateBinding TickmarkBrush}"
								Kind="{TemplateBinding LeadingTickmarkKind}"
								Height ="1"
								igPrim:XamlHelper.SnapsToDevicePixels="True"
								/>
						</Grid>
						<Grid VerticalAlignment="Bottom" Visibility="{TemplateBinding TrailingTickmarkVisibility}">
							<Grid.ColumnDefinitions>
								<ColumnDefinition/>
								<ColumnDefinition Width="{Binding Path=TrailingTickmarkKind, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource tsTickmarkKindToColumnWidthConverter}}"/>
							</Grid.ColumnDefinitions>
							<igSchedulePrim:TimeslotHeaderTickmark
									Grid.Column="1"
									Background ="{TemplateBinding TickmarkBrush}"
									Kind="{TemplateBinding TrailingTickmarkKind}"
									Height ="1"
									igPrim:XamlHelper.SnapsToDevicePixels="True"
								/>
						</Grid>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style TargetType="igSchedulePrim:ScheduleViewTimeslotHeader">
		<!-- AS 4/20/11 TFS73205 Adjusted the padding and alignment so the text is left aligned to be consistent with outlook -->
		<Setter Property="Padding" Value="1,5,10,5"/>
		<Setter Property="BorderThickness" Value="0,0,0,1"/>
		<Setter Property="VerticalContentAlignment" Value="Center"/>
		<Setter Property="HorizontalContentAlignment" Value="Left"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="igSchedulePrim:ScheduleViewTimeslotHeader">
					<Border
						Background="{TemplateBinding ComputedBackground}"
						BorderBrush="{TemplateBinding TickmarkBrush}"
						BorderThickness="{TemplateBinding BorderThickness}">
						<Grid igPrim:XamlHelper.SnapsToDevicePixels="True">
							<igSchedulePrim:TimeslotHeaderTimePresenter
                                Foreground="{TemplateBinding ComputedForeground}"
								Margin="{TemplateBinding Padding}"
								HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
								VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
								Visibility="{Binding Path=LeadingTickmarkKind, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource tsTickmarkKindToVisibilityConverter}}"
								igPrim:XamlHelper.SnapsToDevicePixels="{TemplateBinding igPrim:XamlHelper.SnapsToDevicePixels}" />
							<Grid HorizontalAlignment="Left" Visibility="{TemplateBinding LeadingTickmarkVisibility}">
								<Grid.RowDefinitions>
									<RowDefinition/>
									<RowDefinition Height="{Binding Path=LeadingTickmarkKind, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource tsTickmarkKindToRowHeightConverter}}"/>
								</Grid.RowDefinitions>
								<igSchedulePrim:TimeslotHeaderTickmark
									Grid.Row="1"
									Orientation ="Vertical"
									Background ="{TemplateBinding TickmarkBrush}"
									Kind="{TemplateBinding LeadingTickmarkKind}"
									Width ="1"
									igPrim:XamlHelper.SnapsToDevicePixels="True"
									/>
							</Grid>
							<Grid HorizontalAlignment="Right" Visibility="{TemplateBinding TrailingTickmarkVisibility}">
								<Grid.RowDefinitions>
									<RowDefinition/>
									<RowDefinition Height="{Binding Path=TrailingTickmarkKind, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource tsTickmarkKindToRowHeightConverter}}"/>
								</Grid.RowDefinitions>
								<igSchedulePrim:TimeslotHeaderTickmark
										Grid.Row="1"
										Orientation ="Vertical"
										Background ="{TemplateBinding TickmarkBrush}"
										Kind="{TemplateBinding TrailingTickmarkKind}"
										Width ="1"
										igPrim:XamlHelper.SnapsToDevicePixels="True"
										/>
							</Grid>
						</Grid>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style TargetType="igSchedulePrim:DayViewDayHeaderArea">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="igSchedulePrim:DayViewDayHeaderArea">
					<Border Margin ="{TemplateBinding ComputedMargin}"
								BorderBrush="{TemplateBinding ComputedBorderBrush}"
								BorderThickness="{TemplateBinding ComputedBorderThickness}"
								Background="{TemplateBinding Background}"
								Padding="{TemplateBinding Padding}"
								igPrim:XamlHelper.SnapsToDevicePixels="True">
                        <Grid igPrim:XamlHelper.SnapsToDevicePixels="{TemplateBinding igPrim:XamlHelper.SnapsToDevicePixels}">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>
                            <igSchedulePrim:ScheduleStackPanel x:Name="ItemsPanel" InterItemSpacing="-1"/>
							<igSchedulePrim:TimeslotPanel x:Name="TimeslotPanel" Grid.Row="1" InterItemSpacing="-1" Visibility="{TemplateBinding MultiDayActivityAreaVisibility}" />
							<igSchedulePrim:ScheduleActivityPanel x:Name="ActivityPanel" Grid.Row="1" InterItemSpacing="-1" Visibility="{TemplateBinding MultiDayActivityAreaVisibility}"/>
                        </Grid>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style TargetType="igSchedulePrim:DayViewDayHeader">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="igSchedulePrim:DayViewDayHeader">
					<Border BorderBrush="{TemplateBinding ComputedBorderBrush}"
							BorderThickness="{TemplateBinding ComputedBorderThickness}"
							Background="{TemplateBinding ComputedBackground}"
							Padding="{TemplateBinding Padding}"
							igPrim:XamlHelper.SnapsToDevicePixels="True">
						<Grid igPrim:XamlHelper.SnapsToDevicePixels="{TemplateBinding igPrim:XamlHelper.SnapsToDevicePixels}" >
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="Auto"/>
								<ColumnDefinition Width="*"/>
							</Grid.ColumnDefinitions>
							<igSchedulePrim:ScheduleDateTimePresenter	HorizontalAlignment="Left" FormatType="DayOfMonthNumber" DateTime="{Binding DateTime, RelativeSource={RelativeSource TemplatedParent}}" FontWeight="Bold" Foreground="{TemplateBinding ComputedForeground}"/>
							<igPrimLocal:BestFitPanel x:Name="FullDayName" Grid.Column="1" HorizontalAlignment="Center" Margin="0,0,7,0">
									<igSchedulePrim:ScheduleDateTimePresenter FormatType="DayOfWeek" DateTime="{Binding DateTime, RelativeSource={RelativeSource TemplatedParent}}" Foreground="{TemplateBinding ComputedForeground}"/>
									<igSchedulePrim:ScheduleDateTimePresenter FormatType="ShortDayOfWeek" DateTime="{Binding DateTime, RelativeSource={RelativeSource TemplatedParent}}" Foreground="{TemplateBinding ComputedForeground}"/>
									<igSchedulePrim:ScheduleDateTimePresenter FormatType="ShortestDayOfWeek" DateTime="{Binding DateTime, RelativeSource={RelativeSource TemplatedParent}}" Foreground="{TemplateBinding ComputedForeground}"/>
							</igPrimLocal:BestFitPanel>
						</Grid>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

    <Style TargetType="igSchedulePrim:MultiDayActivityArea">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="igSchedulePrim:MultiDayActivityArea">
                    <Border BorderBrush="{TemplateBinding ComputedBorderBrush}"
							BorderThickness="{TemplateBinding ComputedBorderThickness}"
							Background="{TemplateBinding ComputedBackground}"
							Padding="{TemplateBinding Padding}"
							igPrim:XamlHelper.SnapsToDevicePixels="True">
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

	<Style TargetType="igSchedulePrim:MonthViewDay">
		<Setter Property="BorderThickness" Value="1,0,1,1" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="igSchedulePrim:MonthViewDay">
					<Border BorderBrush="{TemplateBinding ComputedBorderBrush}"
							BorderThickness="{TemplateBinding BorderThickness}"
							Background="{TemplateBinding ComputedBackground}"
							Padding="{TemplateBinding Padding}"
							igPrim:XamlHelper.SnapsToDevicePixels="True">
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style TargetType="igSchedulePrim:CalendarHeaderArea">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="igSchedulePrim:CalendarHeaderArea">
					<Border Margin ="{TemplateBinding ComputedMargin}" 
							BorderBrush="{TemplateBinding ComputedBorderBrush}"
							BorderThickness="{TemplateBinding BorderThickness}"
							Background="{TemplateBinding Background}"
							Padding="{TemplateBinding Padding}"
							igPrim:XamlHelper.SnapsToDevicePixels="True">
						<igSchedulePrim:ScheduleTabPanel 
							x:Name="ItemsPanel" 
							InterTabSpacing="{Binding Path=Orientation,RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource calendarHeaderOrientationToSpacingConverter}}" 
							/>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

     <Style x:Key="CalendarHeaderCloseBtn" TargetType="Button">
		  <!-- AS 12/16/10 TFS61923 -->
          <Setter Property="igPrim:XamlHelper.Focusable" Value="False" />
          <Setter Property="Background">
               <Setter.Value>
                    <LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
                         <GradientStop Offset="0" Color="#FF757d7f"/>
                         <GradientStop Offset="0.75" Color="#FF3a4344"/>
                         <GradientStop Offset="1" Color="#FF3a4344"/>
                    </LinearGradientBrush>
               </Setter.Value>
          </Setter>
          <Setter Property="Template">
               <Setter.Value>
                    <ControlTemplate TargetType="Button">
                         <Grid Background="Transparent">
                              <VisualStateManager.VisualStateGroups>
                                   <VisualStateGroup x:Name="CommonStates">
                                        <VisualState x:Name="Normal"/>
                                        <VisualState x:Name="MouseOver"/>
                                        <VisualState x:Name="Pressed"/>
																		 <VisualState x:Name="Disabled">
																				 <Storyboard>
																					 <DoubleAnimation Duration="0" To="0.35" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="PathElem"/>
																				 </Storyboard>

																		 </VisualState>
                                   </VisualStateGroup>
                                   <VisualStateGroup x:Name="FocusStates">
                                        <VisualState x:Name="Focused"/>
                                        <VisualState x:Name="Unfocused"/>
                                   </VisualStateGroup>
                              </VisualStateManager.VisualStateGroups>
                              <Path x:Name="PathElem"
							Width="8"
							Height="8"
							Data="M 0,0 C0,0 0,2 0,2 0,2 1,2 1,2 1,2 1,3 1,3 1,3 2,3 2,3 2,3 2,5 2,5 2,5 1,5 1,5 1,5 1,6 1,6 1,6 0,6 0,6 0,6 0,8 0,8 0,8 2,8 2,8 2,8 2,7 2,7 2,7 3,7 3,7 3,7 3,6 3,6 3,6 5,6 5,6 5,6 5,7 5,7 5,7 6,7 6,7 6,7 6,8 6,8 6,8 8,8 8,8 8,8 8,6 8,6 8,6 7,6 7,6 7,6 7,5 7,5 7,5 6,5 6,5 6,5 6,3 6,3 6,3 7,3 7,3 7,3 7,2 7,2 7,2 8,2 8,2 8,2 8,0 8,0 8,0 6,0 6,0 6,0 6,1 6,1 6,1 5,1 5,1 5,1 5,2 5,2 5,2 3,2 3,2 3,2 3,1 3,1 3,1 2,1 2,1 2,1 2,0 2,0 2,0 0,0 0,0 z"
							Fill="{TemplateBinding Background}"/>
                         </Grid>
                    </ControlTemplate>
               </Setter.Value>
          </Setter>
     </Style>
	
     <Style x:Key="outOfViewIndicator" TargetType="ContentControl">
		<!-- AS 12/16/10 TFS61923 -->
		<Setter Property="igPrim:XamlHelper.Focusable" Value="False"/>
        <Setter Property="Width" Value="9"/>
        <Setter Property="Height" Value="9"/>
        <Setter Property="VerticalAlignment" Value="Top"/>
			 <Setter Property="Template">
				 <Setter.Value>
					 <ControlTemplate TargetType="ContentControl">
						 <Grid>
							 <Path
										 Width="7"
										 Height="5"
										 HorizontalAlignment="Left"
										 Margin="1,2,0,0"
										 VerticalAlignment="Top"
										 Fill="{TemplateBinding Background}"
										 Data="M 3,2 C3,2 3,3 3,3 3,3 2,3 2,3 2,3 2,4 2,4 2,4 1,4 1,4 1,4 1,5 1,5 1,5 2,5 2,5 2,5 2,6 2,6 2,6 3,6 3,6 3,6 3,7 3,7 3,7 4,7 4,7 4,7 4,6 4,6 4,6 8,6 8,6 8,6 8,3 8,3 8,3 4,3 4,3 4,3 4,2 4,2 4,2 3,2 3,2 z"
										 Stretch="Fill">
							 </Path>
							 <Path
										 Width="9"
										 Height="9"
										 HorizontalAlignment="Left"
										 VerticalAlignment="Top"
										 Data="M 2,6 C2,6 2,5 2,5 2,5 1,5 1,5 1,5 1,4 1,4 1,4 2,4 2,4 2,4 2,3 2,3 2,3 3,3 3,3 3,3 3,2 3,2 3,2 4,2 4,2 4,2 4,3 4,3 4,3 5,3 5,3 5,3 8,3 8,3 8,3 8,6 8,6 8,6 5,6 5,6 5,6 4,6 4,6 4,6 4,7 4,7 4,7 3,7 3,7 3,7 3,6 3,6 3,6 2,6 2,6 zM 1,5 C1,5 1,6 1,6 1,6 2,6 2,6 2,6 2,7 2,7 2,7 3,7 3,7 3,7 3,8 3,8 3,8 4,8 4,8 4,8 4,9 4,9 4,9 5,9 5,9 5,9 5,8 5,8 5,8 5,7 5,7 5,7 9,7 9,7 9,7 9,6 9,6 9,6 9,3 9,3 9,3 9,2 9,2 9,2 5,2 5,2 5,2 5,0 5,0 5,0 4,0 4,0 4,0 4,1 4,1 4,1 3,1 3,1 3,1 3,2 3,2 3,2 2,2 2,2 2,2 2,3 2,3 2,3 1,3 1,3 1,3 1,4 1,4 1,4 0,4 0,4 0,4 0,5 0,5 0,5 1,5 1,5 z"
										 Fill="{TemplateBinding Foreground}"
										 Stretch="Fill"/>
						 </Grid>
					 </ControlTemplate>
				 </Setter.Value>
			 </Setter>
		 </Style>
	
     <Style x:Key="CalendarHeaderOverlayBtn" TargetType="Button">
		  <!-- AS 12/16/10 TFS61923 -->
          <Setter Property="igPrim:XamlHelper.Focusable" Value="False" />
          <Setter Property="Background">
               <Setter.Value>
                    <LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
                         <GradientStop Offset="0" Color="#FF757d7f"/>
                         <GradientStop Offset="0.75" Color="#FF3a4344"/>
                         <GradientStop Offset="1" Color="#FF3a4344"/>
                    </LinearGradientBrush>
               </Setter.Value>
          </Setter>
          <Setter Property="Template">
               <Setter.Value>
                    <ControlTemplate TargetType="Button">
                         <Grid Background="Transparent">
                              <VisualStateManager.VisualStateGroups>
                                   <VisualStateGroup x:Name="CommonStates">
                                        <VisualState x:Name="Normal"/>
                                        <VisualState x:Name="MouseOver">
                                             <Storyboard>
                                                  <DoubleAnimation Duration="0" To="0.35" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="path"/>
                                             </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="Pressed"/>
                                        <VisualState x:Name="Disabled"/>
                                   </VisualStateGroup>
                                   <VisualStateGroup x:Name="FocusStates">
                                        <VisualState x:Name="Focused"/>
                                        <VisualState x:Name="Unfocused"/>
                                   </VisualStateGroup>
                              </VisualStateManager.VisualStateGroups>
                              <Path x:Name="path"
								Width="10"
								Height="11"
								Data="M 0,3 C0,3 0,8 0,8 0,8 4,8 4,8 4,8 4,11 4,11 4,11 5,11 5,11 5,11 5,10 5,10 5,10 6,10 6,10 6,10 6,9 6,9 6,9 7,9 7,9 7,9 7,8 7,8 7,8 8,8 8,8 8,8 8,7 8,7 8,7 9,7 9,7 9,7 9,6 9,6 9,6 10,6 10,6 10,6 10,5 10,5 10,5 9,5 9,5 9,5 9,4 9,4 9,4 8,4 8,4 8,4 8,3 8,3 8,3 7,3 7,3 7,3 7,2 7,2 7,2 6,2 6,2 6,2 6,1 6,1 6,1 5,1 5,1 5,1 5,0 5,0 5,0 4,0 4,0 4,0 4,3 4,3 4,3 0,3 0,3 z"
								Fill="{TemplateBinding Background}"/>
                         </Grid>
                    </ControlTemplate>
               </Setter.Value>
          </Setter>
     </Style>

     <Style TargetType="igSchedulePrim:CalendarHeaderHorizontal">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="igSchedulePrim:CalendarHeaderHorizontal">
                    <Grid>
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="Auto"/>
							<ColumnDefinition Width="*"/>
							<ColumnDefinition Width="Auto"/>
						</Grid.ColumnDefinitions>
						<Path Stretch="Fill"
							Width="11"
							Data="M 10,0 C10,0 0,22 0,22 0,22 11,22 11,22 11,22 11,0 11,0 11,0 10,0 10,0 z"
							Fill="{TemplateBinding ComputedBorderBrush}"
							HorizontalAlignment="Right"
							VerticalAlignment="Stretch"/>
						<Path Stretch="Fill"
							Width="10"
							Margin="0,1,0,0"
							Data="M 10,0 C10,0 0,21 0,21 0,21 10,21 10,21 10,21 10,0 10,0 z"
							Fill="{TemplateBinding ComputedBackground}"
							HorizontalAlignment="Right"
							VerticalAlignment="Stretch"/>
						<Border BorderBrush="{TemplateBinding ComputedBorderBrush}"
							BorderThickness="0,1,0,0"
							Background="{TemplateBinding ComputedBackground}"
							Padding="{TemplateBinding Padding}"
							igPrim:XamlHelper.SnapsToDevicePixels="True" Grid.Column="1">
							<Grid>
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="Auto" />
									<ColumnDefinition Width="*" />
									<ColumnDefinition Width="Auto" />
								</Grid.ColumnDefinitions>
								<TextBlock Grid.Column="1"
									Foreground="{TemplateBinding ComputedForeground}"
									igPrim:XamlHelper.SnapsToDevicePixels="{TemplateBinding igPrim:XamlHelper.SnapsToDevicePixels}"
									Text="{Binding Path=Header, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" 
									FontWeight="{Binding Path=IsActive, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource isActiveToFontWeight}}"
									TextAlignment="Center"
									TextTrimming="WordEllipsis"
									VerticalAlignment="Center"
									Margin="3,0" />
								<Button x:Name="overlayBtn"
									Style="{StaticResource CalendarHeaderOverlayBtn}"
									Grid.Column="0"
									HorizontalAlignment="Left"
									VerticalAlignment="Center"
									Margin="6,0,6,0"
									Visibility="{TemplateBinding OverlayButtonVisibility}">
									<Button.RenderTransform>
										<RotateTransform CenterX="5" CenterY="6" Angle="{Binding Path=IsInOverlayMode, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource falseToRotate180Converter}}"></RotateTransform>
									</Button.RenderTransform>
									<ig:Commanding.Command>
										<igSchedulePrim:CalendarHeaderCommandSource EventName="Click" CommandType="ToggleOverlayMode"/>
									</ig:Commanding.Command>
									<ToolTipService.ToolTip>
										<igSchedulePrim:ScheduleToolTip 
											igSchedulePrim:CalendarBrushProvider.BrushProvider="{Binding Path=(igSchedulePrim:CalendarBrushProvider.BrushProvider), RelativeSource={RelativeSource TemplatedParent}}"
											Content="{Binding Path=IsInOverlayMode, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource overlayModeToTooltipResource}}"/>
									</ToolTipService.ToolTip>

								</Button>
									
								<Button 
									x:Name="CloseBtn" 
									Grid.Column="2" 
									Margin="6,0,6,0"
									HorizontalAlignment="Right" 
									IsEnabled="{Binding Path=CanClose, RelativeSource={RelativeSource TemplatedParent}}"
									Visibility="{TemplateBinding CloseButtonVisibility}" 
									Style="{StaticResource CalendarHeaderCloseBtn}">
									<ig:Commanding.Command>
										<igSchedulePrim:CalendarHeaderCommandSource EventName="Click" CommandType="Close"/>
									</ig:Commanding.Command>
									<ToolTipService.ToolTip>
										<igSchedulePrim:ScheduleToolTip
											Content="{Binding Source={StaticResource CalendarCloseButtonToolTip}, Path=Value}"
											igSchedulePrim:CalendarBrushProvider.BrushProvider="{Binding Path=(igSchedulePrim:CalendarBrushProvider.BrushProvider), RelativeSource={RelativeSource TemplatedParent}}">
											<!-- JJD 9/19/11 - TFS87912
													Use binding instead to the Value property of the ScheduleResourceString
													so we can get notified when the resources are changed.
											<ToolTip.Content>
												<igSchedulePrim:ScheduleResourceString ResourceName="CalendarCloseButtonToolTip"/>
											</ToolTip.Content>-->
											
										</igSchedulePrim:ScheduleToolTip>
									</ToolTipService.ToolTip>
								</Button>
							</Grid>
						</Border>
						<Path Stretch="Fill"
							Width="11"
							Data="M 1,0 C1,0 11,22 11,22 11,22 0,22 0,22 0,22 0,0 0,0 0,0 1,0 1,0 z"
							Fill="{TemplateBinding ComputedBorderBrush}"
							Grid.Column="2"
							HorizontalAlignment="Left"
							VerticalAlignment="Stretch"/>
						<Path Stretch="Fill"
							Width="10"
							Margin="0,1,0,0"
							Data="M 0,0 C0,0 10,21 10,21 10,21 0,21 0,21 0,21 0,0 0,0 z"
							Fill="{TemplateBinding ComputedBackground}"
							Grid.Column="2"
							HorizontalAlignment="Left"
							VerticalAlignment="Stretch"/>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

     <Style TargetType="igSchedulePrim:CalendarHeaderVertical">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="igSchedulePrim:CalendarHeaderVertical">
						<Border BorderBrush="{TemplateBinding ComputedBorderBrush}"
							BorderThickness="1"
							Background="{TemplateBinding ComputedBackground}"
							Padding="{TemplateBinding Padding}"
							igPrim:XamlHelper.SnapsToDevicePixels="True">
							<Grid>
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="Auto" />
									<ColumnDefinition Width="*" />
									<ColumnDefinition Width="Auto" />
								</Grid.ColumnDefinitions>
								<TextBlock Grid.Column="1"
									Foreground="{TemplateBinding ComputedForeground}"
									igPrim:XamlHelper.SnapsToDevicePixels="{TemplateBinding igPrim:XamlHelper.SnapsToDevicePixels}"
									Text="{Binding Path=Header, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" 
									FontWeight="{Binding Path=IsActive, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource isActiveToFontWeight}}"
									HorizontalAlignment="Left"
									VerticalAlignment="Top"
									Margin="6,1" />
								<Button x:Name="overlayBtn"
									Style="{StaticResource CalendarHeaderOverlayBtn}"
									Grid.Column="0"
									HorizontalAlignment="Left"
									VerticalAlignment="Top"
									Margin="6,4,6,4"
									Visibility="{TemplateBinding OverlayButtonVisibility}">
									<Button.RenderTransform>
										<RotateTransform CenterX="5" CenterY="6" Angle="{Binding Path=IsInOverlayMode, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource boolRotate90To270Converter}}"></RotateTransform>
									</Button.RenderTransform>
									<ig:Commanding.Command>
										<igSchedulePrim:CalendarHeaderCommandSource EventName="Click" CommandType="ToggleOverlayMode"/>
									</ig:Commanding.Command>
									<ToolTipService.ToolTip>
									<igSchedulePrim:ScheduleToolTip
										igSchedulePrim:CalendarBrushProvider.BrushProvider="{Binding Path=(igSchedulePrim:CalendarBrushProvider.BrushProvider), RelativeSource={RelativeSource TemplatedParent}}"
										Content="{Binding Path=IsInOverlayMode, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource overlayModeToTooltipResource}}"/>
									</ToolTipService.ToolTip>

								</Button>
									
								<Button 
									x:Name="CloseBtn" 
									Grid.Column="2" 
									Margin="6,6,6,6"
									HorizontalAlignment="Right" 
									VerticalAlignment="Top" 
									Visibility="{TemplateBinding CloseButtonVisibility}" 
									Style="{StaticResource CalendarHeaderCloseBtn}">
									<ig:Commanding.Command>
										<igSchedulePrim:CalendarHeaderCommandSource EventName="Click" CommandType="Close"/>
									</ig:Commanding.Command>
									<ToolTipService.ToolTip>
										<igSchedulePrim:ScheduleToolTip
											Content="{Binding Source={StaticResource CalendarCloseButtonToolTip}, Path=Value}"
											igSchedulePrim:CalendarBrushProvider.BrushProvider="{Binding Path=(igSchedulePrim:CalendarBrushProvider.BrushProvider), RelativeSource={RelativeSource TemplatedParent}}">
											<!-- JJD 9/19/11 - TFS87912
													Use binding instead to the Value property of the ScheduleResourceString
													so we can get notified when the resources are changed.
											<ToolTip.Content>
												<igSchedulePrim:ScheduleResourceString ResourceName="CalendarCloseButtonToolTip"/>
											</ToolTip.Content>-->
										</igSchedulePrim:ScheduleToolTip>
									</ToolTipService.ToolTip>
								</Button>
							</Grid>
						</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	
	<Style TargetType="igSchedulePrim:ActivityResizerBar">
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="igSchedulePrim:ActivityResizerBar">
					<Border Background="{TemplateBinding Background}">
						<Rectangle x:Name="grip"
											 igPrim:XamlHelper.SnapsToDevicePixels="True"
											 Width="6"
											 Height="6"
											 Margin="-1"
											 Visibility="{TemplateBinding ResizeGripVisibility}"
											 HorizontalAlignment ="Center"
											 VerticalAlignment ="Center"
											 Fill="White"
											 Stroke="Black"/>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	
	<ControlTemplate x:Key="ActivityTemplate"  TargetType="igSchedulePrim:ActivityPresenter">
		<Grid>
			<VisualStateManager.VisualStateGroups>
				<VisualStateGroup Name="InteractionStates">
					<VisualState Name="Display" />
					<VisualState Name="Editing">
						<Storyboard Storyboard.TargetName="EditPanel" Storyboard.TargetProperty="Orientation">
							<ObjectAnimationUsingKeyFrames>
								<DiscreteObjectKeyFrame KeyTime="0">
									<DiscreteObjectKeyFrame.Value>
										<Orientation>Vertical</Orientation>
									</DiscreteObjectKeyFrame.Value>
								</DiscreteObjectKeyFrame>
							</ObjectAnimationUsingKeyFrames>
						</Storyboard>
					</VisualState>
				</VisualStateGroup>
			</VisualStateManager.VisualStateGroups>

			<Grid>
					<ToolTipService.ToolTip>
						<igSchedulePrim:ScheduleToolTip
							igSchedulePrim:CalendarBrushProvider.BrushProvider="{Binding Path=(igSchedulePrim:CalendarBrushProvider.BrushProvider), RelativeSource={RelativeSource TemplatedParent}}"
							Content="{Binding ToolTipInfo, RelativeSource={RelativeSource TemplatedParent}}"
							ContentTemplate="{StaticResource activityToolTipTemplate}"/>
					</ToolTipService.ToolTip>

					
				<!-- JJD 3/21/11 - TFS65145
						Instead of binding to the ComputedGeometry, name the Path element "BorderPath" which is a new TemplatePart.
						The ActivityPresenter will then set this Path's Data property in code to the ComputedGeometry. This avoids
						an exception in Silverlight that gets thrown when a local ActivityPresenter style is supplied and it gets unloaded, 
						e.g. if the schedule control is on a tab that gets de-selected.
				-->
					<!--Data="{TemplateBinding ComputedGeometry}"-->
				<Path x:Name="BorderPath"
					Fill="{TemplateBinding ComputedBackground}"
					Stroke ="{TemplateBinding ComputedBorderBrush}"
					StrokeThickness ="{TemplateBinding ComputedBorderStrokeThickness}"
					igPrim:XamlHelper.SnapsToDevicePixels="True"/>

				<Border Padding="{TemplateBinding Padding}"
								Margin="{TemplateBinding ComputedContentMargin}"
								igPrim:XamlHelper.SnapsToDevicePixels="True">

					<Grid Margin="2,0">

						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="Auto"/>
							<ColumnDefinition Width="*"/>
							<ColumnDefinition Width="Auto"/>
						</Grid.ColumnDefinitions>

						<!-- Start out of view indicator -->
						<!-- JJD 4/1/11 - TFS60629 - Wrap indicators so they are visible to UI Automation -->
						<!--<ContentControl Style="{StaticResource outOfViewIndicator}"-->
						<igPrimLocal:ContentControlWithAutomation
									AutomationProperties.Name="Start out of view"
									AutomationControlType="Image" 
									igPrim:XamlHelper.Focusable="False"
									Style="{StaticResource outOfViewIndicator}"
									Margin="0,3,3,2"
									Background="{TemplateBinding OutOfRangeIndicatorBackground}"
									Foreground="{TemplateBinding OutOfRangeIndicatorForeground}"
									Visibility="{TemplateBinding StartOutOfRangeIndicatorVisibility}"
											/>

						<!-- Content -->
						<igSchedulePrim:ActivityContentPanel x:Name="EditArea"
																								 VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
																								 ContentAreaAlignment="{TemplateBinding ComputedContentHorizontalAlignment}"
																								 InterAreaSpacing="4"
																								 Grid.Column="1">

							<!-- prefix area -->
							<igSchedulePrim:BestFitDateRangePresenter
								 igSchedulePrim:ActivityContentPanel.Area="Prefix"
								 HorizontalAlignment="Left"
								 Start="{TemplateBinding StartLocal}"
								 End="{TemplateBinding EndLocal}"
								 Foreground="{TemplateBinding ComputedDateTimeForeground}"
								 Visibility="{Binding Path=PrefixFormatType, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource dateRangeFormatToVisibility}}"
									VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
									FormatType="{TemplateBinding PrefixFormatType}"/>

							<!-- main area -->
							<StackPanel x:Name="EditPanel"
													Orientation="{Binding Path=IsSingleLineDisplay, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource boolToHorizontal}}"
													HorizontalAlignment="Left">
								<TextBlock Text="{Binding Subject}"
									Foreground="{TemplateBinding ComputedForeground}"
									TextWrapping="{Binding Path=IsSingleLineDisplay, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource notBoolToTextWrapping}}"
									Visibility="{Binding Path=IsInEditMode, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource notBoolToVisibility}}"
									FontWeight="Bold" />
								<igPrim:EmbeddedTextBox 
									x:Name="Editor"
									AutomationProperties.Name="Editor"
									Text="{Binding Subject, Mode=TwoWay}"
									TextWrapping="{Binding Path=IsSingleLineDisplay, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource notBoolToTextWrapping}}"
									FontWeight="Bold"
									Foreground="{TemplateBinding ComputedForeground}"
									Visibility="{Binding Path=IsInEditMode, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource boolToVisibility}}"/>
								<TextBlock Text=";"
									Foreground="{TemplateBinding ComputedForeground}"
									FontWeight="Bold"
									Margin="0,0,3,0"
									Visibility="{TemplateBinding SeparatorVisibility}"/>
								<TextBlock Text="{Binding AdditionalText, RelativeSource={RelativeSource TemplatedParent}}"
									Foreground="{TemplateBinding ComputedForeground}"
									Visibility="{TemplateBinding AdditionalTextVisibility}"/>
							</StackPanel>

							<!-- indicator panel -->
							<!-- AS 4/1/11 TFS64812 - Added VerticalAlignment -->
							<StackPanel
								VerticalAlignment="{Binding IsSingleLineDisplay, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource singleLineIndicatorsToVertAlignment}}"
								 igSchedulePrim:ActivityContentPanel.Area="Indicators"
								Orientation="Horizontal">
								<!-- Pending operation -->
								<!-- JJD 4/1/11 - TFS60629 - Wrap indicators so they are visible to UI Automation -->
								<igPrimLocal:ContentControlWithAutomation
									AutomationProperties.Name="Pending operation"
									AutomationControlType="Image"
									Foreground="{TemplateBinding ComputedIndicatorForeground}"
									Margin="2,3,2,2"
									igPrim:XamlHelper.Focusable="False"
									Visibility="{Binding Path=HasPendingOperation, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource boolToVisibility}}"
									>
									<!-- Pending operation -->
									<igSchedulePrim:PendingOperationIndicator
										IsActive="{TemplateBinding HasPendingOperation}"
												/>
								</igPrimLocal:ContentControlWithAutomation>

								<!-- Error Icon -->
								<!-- JJD 4/1/11 - TFS60629 - Wrap indicators so they are visible to UI Automation -->
								<igPrimLocal:ContentControlWithAutomation
									AutomationProperties.Name="Error"
									AutomationControlType="Image"
									Margin="2,3,2,2"
									igPrim:XamlHelper.Focusable="False"
									Visibility="{Binding Path=ToolTipInfo.Error, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource nullToVisibility}}"
									>
									<Path
											Height="11"
											Width="11"
											Stretch="Fill"
											Data="M 3,7 C3,7 4,7 4,7 4,7 4,8 4,8 4,8 3,8 3,8 3,8 3,7 3,7 zM 4,6 C4,6 5,6 5,6 5,6 5,7 5,7 5,7 4,7 4,7 4,7 4,6 4,6 zM 7,3 C7,3 8,3 8,3 8,3 8,4 8,4 8,4 7,4 7,4 7,4 7,3 7,3 zM 6,4 C6,4 7,4 7,4 7,4 7,5 7,5 7,5 6,5 6,5 6,5 6,4 6,4 zM 7,7 C7,7 8,7 8,7 8,7 8,8 8,8 8,8 7,8 7,8 7,8 7,7 7,7 zM 6,6 C6,6 7,6 7,6 7,6 7,7 7,7 7,7 6,7 6,7 6,7 6,6 6,6 zM 5,5 C5,5 6,5 6,5 6,5 6,6 6,6 6,6 5,6 5,6 5,6 5,5 5,5 zM 4,4 C4,4 5,4 5,4 5,4 5,5 5,5 5,5 4,5 4,5 4,5 4,4 4,4 zM 3,3 C3,3 4,3 4,3 4,3 4,4 4,4 4,4 3,4 3,4 3,4 3,3 3,3 zM 1,2 C1,2 2,2 2,2 2,2 2,3 2,3 2,3 1,3 1,3 1,3 1,2 1,2 zM 2,1 C2,1 3,1 3,1 3,1 3,2 3,2 3,2 2,2 2,2 2,2 2,1 2,1 zM 3,0 C3,0 8,0 8,0 8,0 8,1 8,1 8,1 3,1 3,1 3,1 3,0 3,0 zM 8,1 C8,1 9,1 9,1 9,1 9,2 9,2 9,2 8,2 8,2 8,2 8,1 8,1 zM 9,2 C9,2 10,2 10,2 10,2 10,3 10,3 10,3 9,3 9,3 9,3 9,2 9,2 zM 10,3 C10,3 11,3 11,3 11,3 11,8 11,8 11,8 10,8 10,8 10,8 10,3 10,3 zM 9,8 C9,8 10,8 10,8 10,8 10,9 10,9 10,9 9,9 9,9 9,9 9,8 9,8 zM 8,9 C8,9 9,9 9,9 9,9 9,10 9,10 9,10 8,10 8,10 8,10 8,9 8,9 zM 3,10 C3,10 8,10 8,10 8,10 8,11 8,11 8,11 3,11 3,11 3,11 3,10 3,10 zM 2,9 C2,9 3,9 3,9 3,9 3,10 3,10 3,10 2,10 2,10 2,10 2,9 2,9 zM 1,8 C1,8 2,8 2,8 2,8 2,9 2,9 2,9 1,9 1,9 1,9 1,8 1,8 zM 0,3 C0,3 1,3 1,3 1,3 1,8 1,8 1,8 0,8 0,8 0,8 0,3 0,3 z"
											Fill="{TemplateBinding ComputedIndicatorForeground}"
													/>
								</igPrimLocal:ContentControlWithAutomation>

								<StackPanel
									Visibility="{TemplateBinding IndicatorAreaVisibility}"
									Orientation="Horizontal">

									<!-- Occurrence indicator -->
									<!-- JJD 4/1/11 - TFS60629 - Wrap indicators so they are visible to UI Automation -->
									<!--<ContentControl Style="{Binding Path=IsVariance, Converter={StaticResource boolToOccurrenceStyle}}"-->
									<igPrimLocal:ContentControlWithAutomation
										Foreground="{TemplateBinding ComputedIndicatorForeground}"
										AutomationProperties.Name="Occurrence"
										AutomationControlType="Image"
										Style="{Binding Path=IsVariance, Converter={StaticResource boolToOccurrenceStyle}}"
										igPrim:XamlHelper.Focusable="False"
										Margin="2,3,2,2"
										Visibility="{Binding Path=IsOccurrence, Converter={StaticResource boolToVisibility}}"
												/>

									<!-- Reminder indicator -->
									<!-- JJD 4/1/11 - TFS60629 - Wrap indicators so they are visible to UI Automation -->
									<igPrimLocal:ContentControlWithAutomation
										AutomationProperties.Name="Reminder"
										AutomationControlType="Image"
										Margin="2,3,2,2"
										igPrim:XamlHelper.Focusable="False"
										Visibility="{Binding Path=ReminderVisibility, RelativeSource={RelativeSource TemplatedParent}}"
									>
										<Path Width="10"
													Height="10"
													Stretch="Fill"
													Data="M 4,2 C4,2 6,2 6,2 6,2 6,3 6,3 6,3 7,3 7,3 7,3 7,7 7,7 7,7 8,7 8,7 8,7 8,8 8,8 8,8 2,8 2,8 2,8 2,7 2,7 2,7 3,7 3,7 3,7 3,3 3,3 3,3 4,3 4,3 4,3 4,2 4,2 zM 4,1 C4,1 4,2 4,2 4,2 3,2 3,2 3,2 3,3 3,3 3,3 2,3 2,3 2,3 2,7 2,7 2,7 1,7 1,7 1,7 1,8 1,8 1,8 1,9 1,9 1,9 4,9 4,9 4,9 4,10 4,10 4,10 6,10 6,10 6,10 6,9 6,9 6,9 8,9 8,9 8,9 9,9 9,9 9,9 9,8 9,8 9,8 9,7 9,7 9,7 8,7 8,7 8,7 8,3 8,3 8,3 7,3 7,3 7,3 7,2 7,2 7,2 6,2 6,2 6,2 6,1 6,1 6,1 4,1 4,1 zM 9,3 C9,3 9,4 9,4 9,4 10,4 10,4 10,4 10,3 10,3 10,3 9,3 9,3 zM 8,0 C8,0 8,1 8,1 8,1 9,1 9,1 9,1 9,0 9,0 9,0 8,0 8,0 zM 0,3 C0,3 0,4 0,4 0,4 1,4 1,4 1,4 1,3 1,3 1,3 0,3 0,3 zM 1,0 C1,0 1,1 1,1 1,1 2,1 2,1 2,1 2,0 2,0 2,0 1,0 1,0 z"
													Fill="{TemplateBinding ComputedIndicatorForeground}"
											/>
									</igPrimLocal:ContentControlWithAutomation>


									<!-- Activity Category Bars -->
									<igSchedulePrim:ActivityCategoryBarPanel Categories="{TemplateBinding Categories}" />

								</StackPanel>
								
							</StackPanel>

							<!-- suffix area -->
							<igSchedulePrim:BestFitDateRangePresenter
								 igSchedulePrim:ActivityContentPanel.Area="Suffix"
								 HorizontalAlignment="Right"
								 Foreground="{TemplateBinding ComputedDateTimeForeground}"
								 Start="{TemplateBinding StartLocal}"
								 End="{TemplateBinding EndLocal}"
									Visibility="{Binding Path=SuffixFormatType, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource dateRangeFormatToVisibility}}"
									VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
									FormatType="{TemplateBinding SuffixFormatType}"/>
						</igSchedulePrim:ActivityContentPanel>

						<!-- End out of view indicator -->
						<!-- JJD 4/1/11 - TFS60629 - Wrap indicators so they are visible to UI Automation -->
						<!--<ContentControl Style="{StaticResource outOfViewIndicator}"-->
						<igPrimLocal:ContentControlWithAutomation
									AutomationProperties.Name="End out of view"
									AutomationControlType="Image" 
									igPrim:XamlHelper.Focusable="False"
									Style="{StaticResource outOfViewIndicator}"
									Grid.Column="2"
									Margin="3,3,0,2"
									Background="{TemplateBinding OutOfRangeIndicatorBackground}"
									Foreground="{TemplateBinding OutOfRangeIndicatorForeground}"
									Visibility="{TemplateBinding EndOutOfRangeIndicatorVisibility}"
												>
							<igPrimLocal:ContentControlWithAutomation.RenderTransform>
								<RotateTransform CenterX="4.5" CenterY="4.5" Angle="180"/>
							</igPrimLocal:ContentControlWithAutomation.RenderTransform>
						</igPrimLocal:ContentControlWithAutomation>


					</Grid>
				</Border>
			</Grid>

			<igSchedulePrim:ActivityResizerBar x:Name="LeadingResizer" IsLeading="True"/>
			<igSchedulePrim:ActivityResizerBar x:Name="TrailingResizer" />
		</Grid>
	</ControlTemplate>

	<Style TargetType="igSchedulePrim:JournalPresenter">
		<Setter Property="VerticalContentAlignment" Value="Top" />
		<Setter Property="Template" Value="{StaticResource ActivityTemplate}"/>

	</Style>

	<Style TargetType="igSchedulePrim:TaskPresenter">
		<Setter Property="VerticalContentAlignment" Value="Top" />
		<Setter Property="Template" Value="{StaticResource ActivityTemplate}"/>
		
	</Style>

	<Style TargetType="igSchedulePrim:AppointmentPresenter">
		<Setter Property="VerticalContentAlignment" Value="Top" />
		<Setter Property="Template" Value="{StaticResource ActivityTemplate}"/>
	</Style>

	<Style TargetType="igSchedulePrim:CurrentTimeIndicator">

		<Setter Property="MinWidth" Value="3" />
		<Setter Property="MinHeight" Value="3" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="igSchedulePrim:CurrentTimeIndicator">
					<Border BorderBrush="{TemplateBinding ComputedBorderBrush}"
							Background="{TemplateBinding ComputedBackground}"
							BorderThickness="{Binding Path=Orientation, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource currentTimeOrientationToThickness}}"
							Margin="{Binding Path=Orientation, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource currentTimeOrientationToMargin}}"
							Padding="{TemplateBinding Padding}"/>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style TargetType="igSchedulePrim:ScheduleViewDayHeader">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="igSchedulePrim:ScheduleViewDayHeader">
					<Border BorderBrush="{TemplateBinding ComputedBorderBrush}"
							Background="{TemplateBinding ComputedBackground}"
							BorderThickness="{TemplateBinding BorderThickness}"
							igPrim:XamlHelper.SnapsToDevicePixels="True"
							Padding="{TemplateBinding Padding}">
						<Grid>
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="Auto" />
								<ColumnDefinition Width="*" />
								<ColumnDefinition Width="Auto" />
							</Grid.ColumnDefinitions>
							<igSchedulePrim:TimeslotHeaderTickmark
								Grid.Column="0" 
								Orientation ="Vertical" 
								Background ="{TemplateBinding ComputedBorderBrush}" 
								Kind="Day"
								Width ="1" 
								igPrim:XamlHelper.SnapsToDevicePixels="True"
								Opacity="{Binding Path=(igSchedulePrim:TimeslotGroupPanel.IsStartInView), RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource inViewToOpacity}}"
								/>
							<igSchedulePrim:ScheduleDateTimePresenter
								FormatType="LongDate" DateTime="{Binding Date, RelativeSource={RelativeSource TemplatedParent}}"
								Grid.Column="1" Margin="10,3,0,0"
 								Foreground="{TemplateBinding ComputedForeground}"
								Opacity="{Binding Path=(igSchedulePrim:TimeslotGroupPanel.IsClipped), RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource clippedToOpacity}}"
								igPrim:XamlHelper.SnapsToDevicePixels="{TemplateBinding igPrim:XamlHelper.SnapsToDevicePixels}"
								/>
							<igSchedulePrim:TimeslotHeaderTickmark
								Grid.Column="2" 
								Orientation ="Vertical" 
								Background ="{TemplateBinding ComputedBorderBrush}" 
								Kind="Day"
								Width ="1" 
								igPrim:XamlHelper.SnapsToDevicePixels="True"
								Opacity="{Binding Path=(igSchedulePrim:TimeslotGroupPanel.IsEndInView), RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource inViewToOpacity}}"
								/>
						</Grid>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style TargetType="igSchedulePrim:MoreActivityIndicator">
		<Setter Property="igPrim:XamlHelper.SnapsToDevicePixels" Value="True" />
		<Setter Property="HorizontalContentAlignment" Value="Right" />
		<Setter Property="VerticalContentAlignment" Value="Bottom" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="igSchedulePrim:MoreActivityIndicator">
					<Grid x:Name="root" RenderTransformOrigin="0,.5" Background="{TemplateBinding Background}">
						<Grid.RenderTransform>
							<ScaleTransform x:Name="rootTransform" />
						</Grid.RenderTransform>
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="DirectionStates">
								<VisualState x:Name="Down"/>
								<VisualState x:Name="Up">
									<Storyboard Storyboard.TargetProperty="ScaleY" Storyboard.TargetName="rootTransform">
										<DoubleAnimation Duration="0" To="-1" />
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<Path x:Name="arrow"
							igPrim:XamlHelper.SnapsToDevicePixels="{TemplateBinding igPrim:XamlHelper.SnapsToDevicePixels}"
							Data="M 0,0 13,0 7,9 Z"
							Fill="{TemplateBinding ComputedFill}" 
							Stroke="{TemplateBinding ComputedStroke}" 
							Margin="0,0,5,6"
							HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
							VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
							StrokeThickness="1" />
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style TargetType="igSchedulePrim:ClickToAddActivityElement">
		<Setter Property="VerticalContentAlignment" Value="Center" />
		<Setter Property="HorizontalContentAlignment" Value="Stretch" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="igSchedulePrim:ClickToAddActivityElement">
					<Border BorderBrush="{TemplateBinding ComputedBorderBrush}"
							BorderThickness="1"
							Background="{TemplateBinding ComputedBackground}">
						<TextBlock 
							Text="{TemplateBinding Prompt}" 
							Foreground="{TemplateBinding ComputedForeground}"
							TextWrapping="{Binding Path=IsSingleLineDisplay, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource singleLineToTextWrapping}}"
							TextAlignment="Center"
							HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
							VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style TargetType="igSchedulePrim:MonthViewDayHeader">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="igSchedulePrim:MonthViewDayHeader">
					<Border BorderBrush="{TemplateBinding ComputedBorderBrush}"
						BorderThickness="{TemplateBinding ComputedBorderThickness}"
						Background="{TemplateBinding ComputedBackground}"
						Padding="{TemplateBinding Padding}"
						igPrim:XamlHelper.SnapsToDevicePixels="True">
						<igPrimLocal:BestFitPanel ShowPartial="True" igPrim:XamlHelper.SnapsToDevicePixels="{TemplateBinding igPrim:XamlHelper.SnapsToDevicePixels}" HorizontalAlignment="Left">
							<igSchedulePrim:ScheduleDateTimePresenter FormatType="DayOfMonthNumber" DateTime="{Binding DateTime, RelativeSource={RelativeSource TemplatedParent}}" FontWeight="Bold" Foreground="{TemplateBinding ComputedForeground}"/>
							<igSchedulePrim:ScheduleDateRangePresenter FormatType="{TemplateBinding MonthNameFormatType}" Start="{Binding DateTime, RelativeSource={RelativeSource TemplatedParent}}" Visibility="{TemplateBinding MonthNameVisibility}" FontWeight="Bold" Foreground="{TemplateBinding ComputedForeground}"/>
						</igPrimLocal:BestFitPanel>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style TargetType="igSchedulePrim:MonthViewWeekHeader">
		<Setter Property="BorderThickness" Value="0" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="igSchedulePrim:MonthViewWeekHeader">
					<Border BorderBrush="{TemplateBinding ComputedBorderBrush}"
						Background="{TemplateBinding ComputedBackground}"
						BorderThickness="{TemplateBinding BorderThickness}"
						Padding="{TemplateBinding Padding}"
						igPrim:XamlHelper.SnapsToDevicePixels="True">
						<Grid igPrim:XamlHelper.SnapsToDevicePixels="{TemplateBinding igPrim:XamlHelper.SnapsToDevicePixels}">
							<igPrimLocal:RotateDecorator
								Margin="1,0,0,0"
								Visibility="{Binding ShowWeekNumbers, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource notBoolToVisibility}}" 
								Angle="-90" 
								Grid.Row="1" 
								igPrim:XamlHelper.SnapsToDevicePixels="{TemplateBinding igPrim:XamlHelper.SnapsToDevicePixels}">
									<igPrimLocal:BestFitPanel ShowPartial="True">
										<igSchedulePrim:ScheduleDateRangePresenter FormatType="WeekHeader" Start="{TemplateBinding Start}" End="{TemplateBinding End}" Foreground="{TemplateBinding ComputedForeground}"/>
										<igSchedulePrim:ScheduleDateRangePresenter FormatType="ShortWeekHeader" Start="{TemplateBinding Start}" End="{TemplateBinding End}" Foreground="{TemplateBinding ComputedForeground}"/>
									</igPrimLocal:BestFitPanel>
							</igPrimLocal:RotateDecorator>
							<TextBlock HorizontalAlignment="Center" 
									   VerticalAlignment="Center"
									   Padding="2,0"
									   Visibility="{Binding ShowWeekNumbers, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource boolToVisibility}}"
									   Text="{Binding WeekNumber, RelativeSource={RelativeSource TemplatedParent}}"
									   />
						</Grid>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style TargetType="igSchedulePrim:MonthViewDayOfWeekHeader">
		<Setter Property="Padding" Value="1,0" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="igSchedulePrim:MonthViewDayOfWeekHeader">
					<Border BorderBrush="{TemplateBinding ComputedBorderBrush}"
							BorderThickness="{TemplateBinding ComputedBorderThickness}"
							Background="{TemplateBinding ComputedBackground}"
							Padding="{TemplateBinding Padding}"
							igPrim:XamlHelper.SnapsToDevicePixels="True">
						<igPrimLocal:BestFitPanel igPrim:XamlHelper.SnapsToDevicePixels="{TemplateBinding igPrim:XamlHelper.SnapsToDevicePixels}" ShowPartial="True">
							<TextBlock Foreground="{TemplateBinding ComputedForeground}" Text="{TemplateBinding DayName}" Padding="12,0" />
							<TextBlock Foreground="{TemplateBinding ComputedForeground}" Text="{TemplateBinding AbbreviatedDayName}" Padding="3,0" />
							<TextBlock Foreground="{TemplateBinding ComputedForeground}" Text="{TemplateBinding ShortestDayName}" />
						</igPrimLocal:BestFitPanel>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- AS 11/11/10 NA 11.1 - CalendarHeaderAreaWidth/MultiDayActivityAreaHeight -->
	<Style TargetType="igSchedulePrim:ScheduleResizerBar">
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="igSchedulePrim:ScheduleResizerBar">
					<Border Background="{TemplateBinding ComputedBackground}" 
							BorderBrush="{TemplateBinding BorderBrush}"
							BorderThickness="{TemplateBinding BorderThickness}"
							Padding="{TemplateBinding Padding}"
							igPrim:XamlHelper.SnapsToDevicePixels="True"/>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style TargetType="Button" x:Key="outlookNavigationButtonStyle">
		<Setter Property="Width" Value="24" />
		<Setter Property="HorizontalContentAlignment" Value="Center" />
		<Setter Property="VerticalContentAlignment" Value="Center" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="Button">
					<Grid x:Name="root" Background="Transparent">
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="NormalFill">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Visible</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Pressed">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="PressedFill">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Visible</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="MouseOver">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="HoverFill">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Visible</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>

						<Rectangle x:Name="NormalFill" Visibility="Collapsed" Fill="{Binding Path=(igSchedulePrim:CalendarBrushProvider.BrushProvider)[NavigationButtonBackground], RelativeSource={RelativeSource TemplatedParent}}"/>
						<Rectangle x:Name="HoverFill" Visibility="Collapsed" Fill="{Binding Path=(igSchedulePrim:CalendarBrushProvider.BrushProvider)[NavigationButtonHoverBackground], RelativeSource={RelativeSource TemplatedParent}}"/>
						<Rectangle x:Name="PressedFill" Visibility="Collapsed" Fill="{Binding Path=(igSchedulePrim:CalendarBrushProvider.BrushProvider)[NavigationButtonPressedBackground], RelativeSource={RelativeSource TemplatedParent}}"/>
						<ContentPresenter 
							Margin="{TemplateBinding Padding}" 
							VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
							HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
							/>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	
	<Style TargetType="igSchedule:XamOutlookCalendarView">
        <Setter Property="FontFamily" Value="Segoe UI"/>
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="igSchedule:XamOutlookCalendarView">
					<Border Background="{TemplateBinding Background}"
							BorderBrush="{TemplateBinding BorderBrush}"
							BorderThickness="{TemplateBinding BorderThickness}"
							Padding="{TemplateBinding Padding}">
						<Grid>
							<Grid.RowDefinitions>
								<RowDefinition Height="Auto" />
								<RowDefinition Height="*" />
							</Grid.RowDefinitions>
							<Grid Grid.Row="0" Visibility="{TemplateBinding HeaderVisibility}">
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="Auto" />
									<ColumnDefinition Width="Auto" />
									<ColumnDefinition Width="*" />
								</Grid.ColumnDefinitions>
                                <Button Grid.Column="0" AutomationProperties.AutomationId="Back"
										igSchedulePrim:CalendarBrushProvider.BrushProvider="{Binding Path=DefaultBrushProvider, RelativeSource={RelativeSource TemplatedParent}}"
										Style="{StaticResource outlookNavigationButtonStyle}">
									<Button.Content>
										<Path igPrim:XamlHelper.SnapsToDevicePixels="True"
											  Fill="{Binding Path=DefaultBrushProvider[NavigationButtonForeground], RelativeSource={RelativeSource TemplatedParent}}"
											  Data="M 6,0 C6,0 6,9 6,9 6,9 4,9 4,9 4,9 4,8 4,8 4,8 3,8 3,8 3,8 3,7 3,7 3,7 2,7 2,7 2,7 2,6 2,6 2,6 1,6 1,6 1,6 1,5 1,5 1,5 0,5 0,5 0,5 0,4 0,4 0,4 1,4 1,4 1,4 1,3 1,3 1,3 2,3 2,3 2,3 2,2 2,2 2,2 3,2 3,2 3,2 3,1 3,1 3,1 4,1 4,1 4,1 4,0 4,0 4,0 6,0 6,0 z" />
									</Button.Content>
									<ig:Commanding.Command>
										<igSchedulePrim:XamOutlookCalendarViewCommandSource EventName="Click" CommandType="NavigateBack"/>
									</ig:Commanding.Command>
									<ToolTipService.ToolTip>
										<igSchedulePrim:ScheduleToolTip
											Content="{Binding Source={StaticResource CalendarNavigateBackToolTip}, Path=Value}"
											igSchedulePrim:CalendarBrushProvider.BrushProvider="{Binding Path=DefaultBrushProvider, RelativeSource={RelativeSource TemplatedParent}}">
											<!-- JJD 9/19/11 - TFS87912
													Use binding instead to the Value property of the ScheduleResourceString
													so we can get notified when the resources are changed.
											<ToolTip.Content>
												<igSchedulePrim:ScheduleResourceString ResourceName="CalendarNavigateBackToolTip"/>
											</ToolTip.Content>-->
										</igSchedulePrim:ScheduleToolTip>
									</ToolTipService.ToolTip>
								</Button>
								<Button Grid.Column="1" AutomationProperties.AutomationId="Forward"
										igSchedulePrim:CalendarBrushProvider.BrushProvider="{Binding Path=DefaultBrushProvider, RelativeSource={RelativeSource TemplatedParent}}"
										Style="{StaticResource outlookNavigationButtonStyle}">
									<Button.Content>
										<Path igPrim:XamlHelper.SnapsToDevicePixels="True"
											  Fill="{Binding Path=DefaultBrushProvider[NavigationButtonForeground], RelativeSource={RelativeSource TemplatedParent}}"
											  Data="M 0,0 C0,0 0,9 0,9 0,9 2,9 2,9 2,9 2,8 2,8 2,8 3,8 3,8 3,8 3,7 3,7 3,7 4,7 4,7 4,7 4,6 4,6 4,6 5,6 5,6 5,6 5,5 5,5 5,5 6,5 6,5 6,5 6,4 6,4 6,4 5,4 5,4 5,4 5,3 5,3 5,3 4,3 4,3 4,3 4,2 4,2 4,2 3,2 3,2 3,2 3,1 3,1 3,1 2,1 2,1 2,1 2,0 2,0 2,0 0,0 0,0 z" />
									</Button.Content>
									<ig:Commanding.Command>
										<igSchedulePrim:XamOutlookCalendarViewCommandSource EventName="Click" CommandType="NavigateForward"/>
									</ig:Commanding.Command>
									<ToolTipService.ToolTip>
										<igSchedulePrim:ScheduleToolTip
											Content="{Binding Source={StaticResource CalendarNavigateForwardToolTip}, Path=Value}"
											igSchedulePrim:CalendarBrushProvider.BrushProvider="{Binding Path=DefaultBrushProvider, RelativeSource={RelativeSource TemplatedParent}}">
											<!-- JJD 9/19/11 - TFS87912
													Use binding instead to the Value property of the ScheduleResourceString
													so we can get notified when the resources are changed.
											<ToolTip.Content>
												<igSchedulePrim:ScheduleResourceString ResourceName="CalendarNavigateForwardToolTip"/>
											</ToolTip.Content>-->
										</igSchedulePrim:ScheduleToolTip>
									</ToolTipService.ToolTip>
								</Button>

								<TextBlock Margin="8,0,0,0" 
                                           FontSize="24" 
                                           Grid.Column="2" 
                                            AutomationProperties.AutomationId="DateRange"
                                           Text="{TemplateBinding CurrentViewDateRangeText}" />
							</Grid>
							<igSchedule:XamDayView x:Name="DayView" Grid.Row="1" />
							<igSchedule:XamScheduleView x:Name="ScheduleView" Grid.Row="1" />
							<igSchedule:XamMonthView x:Name="MonthView" Grid.Row="1" />
						</Grid>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- JJD 1/10/11 NA 11.1 -->
	<!-- _________________________ XamDateNavigator ______________________________________ -->
	<Style TargetType="igSchedule:XamDateNavigator">
		<Setter Property="ActivityToolTipTemplate" Value="{StaticResource dateNavDayToolTipTemplate}"/>
		<Setter Property="HorizontalContentAlignment" Value="Stretch"/>
		<Setter Property="VerticalContentAlignment" Value="Stretch"/>
		<Setter Property="igPrim:XamlHelper.Focusable" Value="False"/>

		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="igSchedule:XamDateNavigator">
					<Border BorderBrush="{TemplateBinding BorderBrush}"
						BorderThickness="{TemplateBinding BorderThickness}"
						Background="{Binding Path=ResourceProviderResolved[CalendarBackgroundBrush], RelativeSource={RelativeSource TemplatedParent}}"
						igPrim:XamlHelper.SnapsToDevicePixels="True"
						Padding="{TemplateBinding Padding}">
						<Grid x:Name="RootPanel" igPrim:XamlHelper.SnapsToDevicePixels="{TemplateBinding igPrim:XamlHelper.SnapsToDevicePixels}">

							<Grid.RowDefinitions>
								<RowDefinition Height="*"/>
								<RowDefinition Height="Auto"/>
							</Grid.RowDefinitions>
							<!--Today button-->
							<Button Grid.Row="1"
									Content="{TemplateBinding TodayButtonCaption}"
									Style="{TemplateBinding TodayButtonStyleResolved}"
									Visibility="{TemplateBinding TodayButtonVisibility}">
								<ig:Commanding.Command>
									<igPrim:CalendarCommandSource EventName="Click" CommandType="Today"/>
								</ig:Commanding.Command>
							</Button>

							<!--Months-->
							<igPrim:CalendarItemGroupPanel
									HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
									VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>


						</Grid>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- AS 1/7/11 NA 11.1 - ActivityCategories -->
	<Style TargetType="igSchedulePrim:ActivityCategoryPresenter">
		<Setter Property="BorderThickness" Value="1" />
		<Setter Property="Padding" Value="9,1" />
		<Setter Property="MinWidth" Value="5" />
		<Setter Property="MinHeight" Value="12" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="igSchedulePrim:ActivityCategoryPresenter">
					<Border Background="{TemplateBinding ComputedBackground}"
							BorderBrush="{TemplateBinding ComputedBorderBrush}"
							BorderThickness="{TemplateBinding BorderThickness}"
							igPrim:XamlHelper.SnapsToDevicePixels="True">
						<!-- Note I'm binding the margin to the padding since I don't want the padding when the text is not displayed -->
						<TextBlock Text="{Binding Category.CategoryName, RelativeSource={RelativeSource TemplatedParent}}" 
								   Foreground="{TemplateBinding ComputedForeground}"
								   TextTrimming="WordEllipsis"
								   Margin="{TemplateBinding Padding}"
								   HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
								   VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
								   Visibility="{TemplateBinding NameVisibility}" />
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- ::::::::::::::::::::::::::: ActivityCategoryDialog ::::::::::::::::::::::::::::: -->
	<Style TargetType="igSchedulePrim:ActivityCategoryDialog">
		<Setter Property="BorderBrush" Value="Black" />

		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="igSchedulePrim:ActivityCategoryDialog">
					<ContentControl Foreground="{Binding Path=DataManager.ColorSchemeResolved.DefaultBrushProvider[DialogForeground], RelativeSource={RelativeSource TemplatedParent}}">
						<Border BorderBrush="{TemplateBinding BorderBrush}"
										Background="{Binding Path=DataManager.ColorSchemeResolved.DefaultBrushProvider[DialogBackground], RelativeSource={RelativeSource TemplatedParent}}"
										Padding="{TemplateBinding Padding}"
										igPrim:XamlHelper.SnapsToDevicePixels="True">
							<Grid Width="475"
										Height="410">
								<Grid.RowDefinitions>
									<RowDefinition Height="Auto"/>
									<RowDefinition Height="*"/>
									<RowDefinition Height="Auto"/>
								</Grid.RowDefinitions>

								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="*"/>
									<ColumnDefinition Width="Auto"/>
								</Grid.ColumnDefinitions>

								<!-- Dialog Help text-->
								<TextBlock Grid.Row="0"
													 Grid.Column="0"
													 Grid.ColumnSpan="2"
													 Margin="6,4,4,8"
													 TextWrapping="Wrap"
													 Text="{Binding Path=LocalizedStrings[DLG_ActivityCategory_HelpText], RelativeSource={RelativeSource TemplatedParent}}"/>

								<!-- Category List -->
								<Grid Grid.Row="1"
											Grid.Column="0"
											Margin="6,0,4,0">
									<Border BorderBrush="Black"
													BorderThickness="1">
										<!-- JM 02-23-11 TFS66895 - Use a Grid instead of a StackPanel to arrange the column header on top of the Listbox -->
										<Grid>
											<Grid.RowDefinitions>
												<RowDefinition Height="Auto"/>
												<RowDefinition Height="*"/>
											</Grid.RowDefinitions>
											
											<!-- Border for the list's column header area -->
											<Border BorderThickness="0,0,0,1"
															BorderBrush="Black"
															VerticalAlignment="Center"
															HorizontalAlignment="Stretch">
												<Border.Background>
													<LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
														<LinearGradientBrush.GradientStops>
															<GradientStopCollection>
																<GradientStop Offset="0" Color="White"/>
																<GradientStop Offset="1" Color="DarkGray"/>
															</GradientStopCollection>
														</LinearGradientBrush.GradientStops>
													</LinearGradientBrush>
												</Border.Background>

												<!-- Column header -->
												<TextBlock TextAlignment="Left"
																	 Text="{Binding Path=LocalizedStrings[DLG_ActivityCategory_NameColumnHeader], RelativeSource={RelativeSource TemplatedParent}}"
																	 Margin="3"/>
											</Border>

											<!-- ListBox containing the categories -->
											<ListBox x:Name="CategoriesList"
															 Grid.Row="1"
															 BorderThickness="0"
															 Background="White"
															 Height="283"
															 Margin="0,0,1,0"
															 TabIndex="10"
															 ItemsSource="{Binding Path=ActivityCategoryListItems, RelativeSource={RelativeSource TemplatedParent}}">
												<ListBox.ItemContainerStyle>
													<Style TargetType="ListBoxItem">
														<Setter Property="HorizontalContentAlignment" Value="Stretch"/>
													</Style>
												</ListBox.ItemContainerStyle>
												
												<ListBox.ItemTemplate>
													<DataTemplate>
														<Grid Margin="0,2,0,2">
															<igSchedulePrim:ActivityCategoryListItemPresenter/>
														</Grid>
													</DataTemplate>
												</ListBox.ItemTemplate>
											</ListBox>
										</Grid>
									</Border>
								</Grid>
								
								<!-- Editing area on right -->
								<StackPanel Grid.Row="1"
														Grid.Column="1"
														Margin="6,0,6,0">
									<Button Content="{Binding Path=LocalizedStrings[DLG_ActivityCategory_Btn_New], RelativeSource={RelativeSource TemplatedParent}}"
													MinWidth="75"
													Margin="0,0,0,5"
													TabIndex="20">
										<ig:Commanding.Command>
											<igSchedulePrim:ActivityCategoryDialogCommandSource EventName="Click" CommandType="CreateNewCategory"/>
										</ig:Commanding.Command>
									</Button>
									<Button Content="{Binding Path=LocalizedStrings[DLG_ActivityCategory_Btn_Rename], RelativeSource={RelativeSource TemplatedParent}}"
													MinWidth="75"
													Margin="0,0,0,5"
													TabIndex="30">
										<ig:Commanding.Command>
											<igSchedulePrim:ActivityCategoryDialogCommandSource EventName="Click" CommandType="EditSelectedCategory"/>
										</ig:Commanding.Command>
									</Button>
									<Button Content="{Binding Path=LocalizedStrings[DLG_ActivityCategory_Btn_Delete], RelativeSource={RelativeSource TemplatedParent}}"
													MinWidth="75"
													Margin="0,0,0,5"
													TabIndex="40">
										<ig:Commanding.Command>
											<igSchedulePrim:ActivityCategoryDialogCommandSource EventName="Click" CommandType="DeleteSelectedCategory"/>
										</ig:Commanding.Command>
									</Button>

									<StackPanel>
										<TextBlock Text="{Binding Path=LocalizedStrings[DLG_ActivityCategory_Literal_Color], RelativeSource={RelativeSource TemplatedParent}}"/>

										<!-- JM 04-29-11 TFS74011 Bind IsEnabled to new IsSelectedActivityCategoryListItemCustomizable property -->
										<igSchedulePrim:ActivityCategoryColorPicker SelectedColor="{Binding Path=SelectedActivityCategoryListItem.ActivityCategory.Color, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                                                                    igSchedulePrim:CalendarBrushProvider.BrushProvider="{Binding Path=DataManager.ColorSchemeResolved.DefaultBrushProvider, RelativeSource={RelativeSource TemplatedParent}}"
																																HorizontalAlignment="Stretch"
																																TabIndex="50"
																																AreCustomColorsAllowed="{Binding Path=AreCustomColorsAllowed, RelativeSource={RelativeSource TemplatedParent}}"
																																FixedColors="{Binding Path=DefaultCategoryColors, RelativeSource={RelativeSource TemplatedParent}}"
																																IsEnabled="{Binding Path=IsSelectedActivityCategoryListItemCustomizable, RelativeSource={RelativeSource TemplatedParent}}"/>
									</StackPanel>
								</StackPanel>
								
								<!-- OK/Cancel Button area -->
								<StackPanel Orientation="Horizontal"
														Grid.Row="2"
														Grid.ColumnSpan="2"
														HorizontalAlignment="Right"
														Margin="0,6,3,4">
									<Button Content="{Binding Path=LocalizedStrings[DLG_ScheduleDialog_Btn_Ok], RelativeSource={RelativeSource TemplatedParent}}"
													MinWidth="75"
													Margin="4"
													TabIndex="60">
										<ig:Commanding.Command>
											<igSchedulePrim:ActivityCategoryDialogCommandSource EventName="Click" CommandType="SaveAndClose"/>
										</ig:Commanding.Command>
									</Button>
									<Button Content="{Binding Path=LocalizedStrings[DLG_ScheduleDialog_Btn_Cancel], RelativeSource={RelativeSource TemplatedParent}}"
													MinWidth="75"
													Margin="4"
													TabIndex="70">
										<ig:Commanding.Command>
											<igSchedulePrim:ActivityCategoryDialogCommandSource EventName="Click" CommandType="Close"/>
										</ig:Commanding.Command>
									</Button>
								</StackPanel>
							</Grid>
						</Border>
					</ContentControl>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- ::::::::::::::::::::::::::: ActivityCategoryListItemPresenter ::::::::::::::::::::::::::::: -->
	<Style TargetType="igSchedulePrim:ActivityCategoryListItemPresenter">
		<Setter Property="BorderBrush" Value="Black" />

		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="igSchedulePrim:ActivityCategoryListItemPresenter">
					<Grid Background="Transparent">
						<Grid.RowDefinitions>
							<RowDefinition/>
						</Grid.RowDefinitions>
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="Auto"/>
							<ColumnDefinition Width="Auto"/>
							<ColumnDefinition Width="*"/>
						</Grid.ColumnDefinitions>

						<!--  JM 05-19-11 TFS74019 Add IsHitTestVisible = false-->
						<CheckBox x:Name="SelectedCheckBox"
											IsChecked="{Binding Path=IsSelected, Mode=OneTime}"
											VerticalAlignment="Center"
											Margin="0,0,4,0"
											IsHitTestVisible="false">
							<ig:Commanding.Commands>
								<ig:CommandSourceCollection>
									<igSchedulePrim:ActivityCategoryCommandSource EventName="Checked"
																																CommandType="SetActivityCategorySelectedState"
																																ParameterBinding="{Binding CommandParameter}"/>
									<igSchedulePrim:ActivityCategoryCommandSource EventName="Unchecked"
																																CommandType="ClearActivityCategorySelectedState"
																																ParameterBinding="{Binding CommandParameter}"/>
								</ig:CommandSourceCollection>
							</ig:Commanding.Commands>
						</CheckBox>

						<!--  JM 05-19-11 TFS74019 Add a Transparent element with IsHitTestVisible = true to overlay the Checkbox to ensure mouse clicks reach the AcivityCategoryListItemPresenter -->
						<Rectangle  x:Name="SelectedCheckBoxOverlay"
									Fill="Transparent"
									VerticalAlignment="Stretch"
									HorizontalAlignment="Stretch"
									Margin="0,0,4,0"/>

						<Rectangle  Grid.Column="1"
												Width="16"
												Height="16"
												Stroke="{Binding BorderBrush}"
												Fill="{Binding BackgroundBrush}"
												VerticalAlignment="Center"
												Margin="0,0,4,0"/>
						<igSchedulePrim:DualModeTextBox
												Grid.Column="2"
												Text="{Binding Name, Mode=TwoWay}"
												Background="Transparent"
												VerticalAlignment="Center"
												IsInEditMode="{Binding IsInEditMode, Mode=TwoWay}"
												IsEditingAllowed="{Binding IsCustomizable}"/>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- ::::::::::::::::::::::::::: ActivityCategoryColorPicker ::::::::::::::::::::::::::::: -->
	<Style TargetType="igSchedulePrim:ActivityCategoryColorPicker">
		<Setter Property="BorderBrush" Value="Black" />

		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="igSchedulePrim:ActivityCategoryColorPicker">
					<Grid>

						<StackPanel Orientation="Horizontal">
							<ContentControl Width="15"
															Height="15"
															Margin="0,0,4,0"
															Content="{Binding Path=SelectedColorSwatch, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"/>
							
							<igSchedulePrim:DropDownToggleButton  x:Name="ColorPickerDropDownButton"
																										Width="15"
																										Height="15"
																										IsChecked="False"
																										IsEnabled="{Binding Path=IsEnabled, RelativeSource={RelativeSource TemplatedParent}}">
								<Grid>
									<Path
										Width="9"
										Height="5"
										Data="M 0,0 C0,0 0,1 0,1 0,1 1,1 1,1 1,1 1,2 1,2 1,2 2,2 2,2 2,2 2,3 2,3 2,3 3,3 3,3 3,3 3,4 3,4 3,4 4,4 4,4 4,4 4,5 4,5 4,5 5,5 5,5 5,5 5,4 5,4 5,4 6,4 6,4 6,4 6,3 6,3 6,3 7,3 7,3 7,3 7,2 7,2 7,2 8,2 8,2 8,2 8,1 8,1 8,1 9,1 9,1 9,1 9,0 9,0 9,0 0,0 0,0 z"
										Fill="Black"/>
									<Path
										Width="5"
										Height="3"
										Data="M 0,0 C0,0 0,1 0,1 0,1 1,1 1,1 1,1 1,2 1,2 1,2 2,2 2,2 2,2 2,3 2,3 2,3 3,3 3,3 3,3 3,2 3,2 3,2 4,2 4,2 4,2 4,1 4,1 4,1 5,1 5,1 5,1 5,0 5,0 5,0 0,0 0,0 z"
										Fill="Black"/>
								</Grid>
							</igSchedulePrim:DropDownToggleButton>
						</StackPanel>

						<Popup	x:Name="ColorPickerPopup">
							<Border Background="{Binding Path=(igSchedulePrim:CalendarBrushProvider.BrushProvider)[ActivityCategoryColorPickerDropDownBackground], RelativeSource={RelativeSource TemplatedParent}}" 
                                    BorderThickness="1" 
                                    BorderBrush="{Binding Path=(igSchedulePrim:CalendarBrushProvider.BrushProvider)[ActivityCategoryColorPickerDropDownBorder], RelativeSource={RelativeSource TemplatedParent}}">
								<Grid>
									<Grid.RowDefinitions>
										<RowDefinition Height="Auto"/>
										<RowDefinition Height="Auto"/>
									</Grid.RowDefinitions>

									<Grid Grid.Row="0"
												Margin="3"
												HorizontalAlignment="Right">
										<Grid.RowDefinitions>
											<RowDefinition Height="Auto"/>
											<RowDefinition Height="Auto"/>
										</Grid.RowDefinitions>

										<Grid x:Name="NoneColorButton" 
																  Margin="0,0,0,5">
											<Border BorderThickness="1"
															Background="{Binding Path=NoneColorButtonBackgroundBrush, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
															BorderBrush="{Binding Path=NoneColorButtonBorderBrush, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}">
												<TextBlock Text="{Binding Path=LocalizedStrings[CTL_ActivityCategoryColorPicker_None], RelativeSource={RelativeSource TemplatedParent}}"
																	 TextAlignment="Center"
																	 Foreground="{Binding Path=NoneColorButtonForegroundBrush, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
																	 VerticalAlignment="Center"/>
											</Border>	
										</Grid>

										<Grid x:Name="FixedColorsGrid"
													Grid.Row="1">
											<Grid.RowDefinitions>
												<RowDefinition Height="Auto"/>
												<RowDefinition Height="Auto"/>
												<RowDefinition Height="Auto"/>
												<RowDefinition Height="Auto"/>
												<RowDefinition Height="Auto"/>
											</Grid.RowDefinitions>

											<Grid.ColumnDefinitions>
												<ColumnDefinition Width="Auto"/>
												<ColumnDefinition Width="Auto"/>
												<ColumnDefinition Width="Auto"/>
												<ColumnDefinition Width="Auto"/>
												<ColumnDefinition Width="Auto"/>
											</Grid.ColumnDefinitions>
										</Grid>
									</Grid>

									<StackPanel Grid.Row="1"
															Margin="3"
															Visibility="{Binding  Path=AreCustomColorsAllowed, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource boolToVisibility}}">
										<TextBlock Text="{Binding Path=LocalizedStrings[CTL_ActivityCategoryColorPicker_RGBValues], RelativeSource={RelativeSource TemplatedParent}}"/>
										<Border BorderThickness="1" BorderBrush="DarkGray" CornerRadius="5">
											<Grid Margin="3">
												<Grid.RowDefinitions>
													<RowDefinition Height="Auto"/>
													<RowDefinition Height="Auto"/>
													<RowDefinition Height="Auto"/>
												</Grid.RowDefinitions>

												<Grid.ColumnDefinitions>
													<ColumnDefinition Width="Auto"/>
													<ColumnDefinition Width="Auto"/>
													<ColumnDefinition Width="Auto"/>
												</Grid.ColumnDefinitions>

												<!-- Red Value -->
												<TextBlock Grid.Row="0"
																	 Grid.Column="0"
																	 VerticalAlignment="Center"
																	 Text="{Binding Path=LocalizedStrings[CTL_ActivityCategoryColorPicker_R], RelativeSource={RelativeSource TemplatedParent}}"
																	 Margin="0,0,3,3"/>
												<Slider x:Name="RedSlider"
																Grid.Row="0"
																Grid.Column="1"
																Width="70"
																Margin="0,0,3,3"
																VerticalAlignment="Center"
																SmallChange="1" LargeChange="16" Minimum="0" Maximum="255"
																Value="{Binding Path=SelectedColorRedValue, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"/>
												<igSchedulePrim:SimpleNumericTextBox Grid.Row="0"
																														 Grid.Column="2"
																														 VerticalAlignment="Center"
																														 Margin="0,0,0,3"
																														 MinValue="0"
																														 MaxValue="255"
																														 Value="{Binding ElementName=RedSlider, Path=Value, Mode=TwoWay}"
																														 Width="32"/>

												<!-- Green Value -->
												<TextBlock Grid.Row="1"
																	 Grid.Column="0"
																	 VerticalAlignment="Center"
																	 Text="{Binding Path=LocalizedStrings[CTL_ActivityCategoryColorPicker_G], RelativeSource={RelativeSource TemplatedParent}}"
																	 Margin="0,0,3,3"/>
												<Slider x:Name="GreenSlider"
																Grid.Row="1"
																Grid.Column="1"
																Width="70"
																Margin="0,0,3,3"
																VerticalAlignment="Center"
																SmallChange="1" LargeChange="16" Minimum="0" Maximum="255"
																Value="{Binding Path=SelectedColorGreenValue, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"/>
												<igSchedulePrim:SimpleNumericTextBox Grid.Row="1"
																														 Grid.Column="2"
																														 VerticalAlignment="Center"
																														 Margin="0,0,0,3"
																														 MinValue="0"
																														 MaxValue="255"
																														 Value="{Binding ElementName=GreenSlider, Path=Value, Mode=TwoWay}"
																														 Width="32"/>

												<!-- Blue Value -->
												<TextBlock Grid.Row="2"
																	 Grid.Column="0"
																	 VerticalAlignment="Center"
																	 Text="{Binding Path=LocalizedStrings[CTL_ActivityCategoryColorPicker_B], RelativeSource={RelativeSource TemplatedParent}}"
																	 Margin="0,0,3,0"/>
												<Slider x:Name="BlueSlider"
																Grid.Row="2"
																Grid.Column="1"
																Width="70"
																Margin="0,0,3,0"
																VerticalAlignment="Center"
																SmallChange="1" LargeChange="16" Minimum="0" Maximum="255"
																Value="{Binding Path=SelectedColorBlueValue, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"/>
												<igSchedulePrim:SimpleNumericTextBox Grid.Row="2"
																														 Grid.Column="2"
																														 VerticalAlignment="Center"
																														 MinValue="0"
																														 MaxValue="255"
																														 Value="{Binding ElementName=BlueSlider, Path=Value, Mode=TwoWay}"
																														 Width="32"/>
											</Grid>
										</Border>
									</StackPanel>
								</Grid>
							</Border>
						</Popup>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- ::::::::::::::::::::::::::: ActivityCategoryCreationDialog ::::::::::::::::::::::::::::: -->
	<Style TargetType="igSchedulePrim:ActivityCategoryCreationDialog">
		<Setter Property="BorderBrush" Value="Black" />
		<Setter Property="igPrim:XamlHelper.Focusable" Value="False"/>
		<Setter Property="IsTabStop" Value="False"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="igSchedulePrim:ActivityCategoryCreationDialog">
					<ContentControl 
						igPrim:XamlHelper.Focusable="False" IsTabStop="False"
						Foreground="{Binding Path=DataManager.ColorSchemeResolved.DefaultBrushProvider[DialogForeground], RelativeSource={RelativeSource TemplatedParent}}"
						HorizontalContentAlignment="Stretch">
						<Border BorderBrush="{TemplateBinding BorderBrush}"
										Background="{Binding Path=DataManager.ColorSchemeResolved.DefaultBrushProvider[DialogBackground], RelativeSource={RelativeSource TemplatedParent}}"
										Padding="{TemplateBinding Padding}"
										igPrim:XamlHelper.SnapsToDevicePixels="True">
							<Grid Width="282">
								<Grid.RowDefinitions>
									<RowDefinition Height="Auto"/>
									<RowDefinition Height="Auto"/>
									<RowDefinition Height="Auto"/>
								</Grid.RowDefinitions>

								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="Auto"/>
									<ColumnDefinition Width="*"/>
								</Grid.ColumnDefinitions>

								<!-- Category Name -->
								<TextBlock Grid.Row="0"
													 Grid.Column="0"
													 Margin="5,10,5,5"
													 Text="{Binding Path=LocalizedStrings[DLG_ActivityCategoryCreation_Name], RelativeSource={RelativeSource TemplatedParent}}"/>
								<TextBox x:Name="CategoryName"
												 Grid.Row="0"
												 Grid.Column="1"
												 Margin="5,10,5,5"
												 HorizontalAlignment="Stretch"
												 igPrim:XamlHelper.UpdateBindingOnTextPropertyChanged="true"
												 Text="{Binding Path=CategoryName, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
												 TabIndex="20"/>

								<!-- Color -->
								<TextBlock Grid.Row="1"
													 Grid.Column="0"
													 Margin="5"
													 Text="{Binding Path=LocalizedStrings[DLG_ActivityCategory_Literal_Color], RelativeSource={RelativeSource TemplatedParent}}"/>
								<igSchedulePrim:ActivityCategoryColorPicker Grid.Row="1"
                                                                            igSchedulePrim:CalendarBrushProvider.BrushProvider="{Binding Path=DataManager.ColorSchemeResolved.DefaultBrushProvider, RelativeSource={RelativeSource TemplatedParent}}"
																													  Grid.Column="1"
																														Margin="5"
																														AreCustomColorsAllowed="{Binding Path=AreCustomColorsAllowed, RelativeSource={RelativeSource TemplatedParent}}"
																														FixedColors="{Binding Path=DefaultCategoryColors, RelativeSource={RelativeSource TemplatedParent}}"
																													  SelectedColor="{Binding Path=Color, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
																														HorizontalAlignment="Stretch"
																														TabIndex="40"/>

								<!-- OK/Cancel Button area -->
								<StackPanel Orientation="Horizontal"
														Grid.Row="2"
														Grid.ColumnSpan="2"
														HorizontalAlignment="Right"
														Margin="0,6,5,4">
									<Button Content="{Binding Path=LocalizedStrings[DLG_ScheduleDialog_Btn_Ok], RelativeSource={RelativeSource TemplatedParent}}"
													MinWidth="75"
													Margin="4"
													TabIndex="50">
										<ig:Commanding.Command>
											<igSchedulePrim:ScheduleDialogCommandSource EventName="Click" CommandType="SaveAndClose"/>
										</ig:Commanding.Command>
									</Button>
									<Button Content="{Binding Path=LocalizedStrings[DLG_ScheduleDialog_Btn_Cancel], RelativeSource={RelativeSource TemplatedParent}}"
													MinWidth="75"
													Margin="4"
													TabIndex="60">
										<ig:Commanding.Command>
											<igSchedulePrim:ScheduleDialogCommandSource EventName="Click" CommandType="Close"/>
										</ig:Commanding.Command>
									</Button>
								</StackPanel>
							</Grid>
						</Border>
					</ContentControl>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- ::::::::::::::::::::::::::: DualModeTextBox ::::::::::::::::::::::::::::: -->
	<Style TargetType="igSchedulePrim:DualModeTextBox">
		<Setter Property="BorderBrush" Value="Black" />

		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="igSchedulePrim:DualModeTextBox">
					<Grid>
						<TextBlock x:Name="TextBlock"
											 HorizontalAlignment="Left"
											 Text="{Binding Path=Text, RelativeSource={RelativeSource TemplatedParent}}"/>

						<TextBox x:Name="TextBox"
										 HorizontalAlignment="Left"
										 Visibility="Collapsed"/>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- ::::::::::::::::::::::::::: ActivityTypeChooserDialog ::::::::::::::::::::::::::::: -->
	<Style TargetType="igSchedulePrim:ActivityTypeChooserDialog">
		<Setter Property="BorderBrush" Value="Black" />
		<Setter Property="igPrim:XamlHelper.Focusable" Value="False"/>
		<Setter Property="IsTabStop" Value="False"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="igSchedulePrim:ActivityTypeChooserDialog">
					<ContentControl 
						igPrim:XamlHelper.Focusable="False" IsTabStop="False"
						Foreground="{Binding Path=DataManager.ColorSchemeResolved.DefaultBrushProvider[DialogForeground], RelativeSource={RelativeSource TemplatedParent}}" 
						VerticalContentAlignment="Stretch">
						<Border BorderBrush="{TemplateBinding BorderBrush}"
								Background="{Binding Path=DataManager.ColorSchemeResolved.DefaultBrushProvider[DialogBackground], RelativeSource={RelativeSource TemplatedParent}}"
								Padding="{TemplateBinding Padding}"
								igPrim:XamlHelper.SnapsToDevicePixels="True">
							<Grid>
								<Grid.RowDefinitions>
									<RowDefinition Height="Auto"/>
									<RowDefinition Height="Auto"/>
									<RowDefinition Height="Auto"/>
								</Grid.RowDefinitions>

								<TextBlock x:Name="txtMsg"
									Text="{Binding Path=LocalizedStrings[DLG_ActivityTypeChooser_Message], RelativeSource={RelativeSource TemplatedParent}}"
									Grid.Row="0"
									TextWrapping="Wrap"
									Foreground="Black"
									Margin="5,8,5,14"
									TextAlignment="Left"
									VerticalAlignment="Top"/>

								<StackPanel Grid.Row="1" HorizontalAlignment="Center">
									<RadioButton x:Name="AppointmentChoice"
										TabIndex="1"
										Margin="10,0,0,6"
										GroupName="rbChoice"
										Content="{Binding Path=LocalizedStrings[DLG_ActivityType_Appointment], RelativeSource={RelativeSource TemplatedParent}}"
										IsChecked="{Binding Path=ChoiceIsAppointment, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
										Visibility="{TemplateBinding ChoiceIsAppointmentVisibility}"
										VerticalAlignment="Center"/>
									<RadioButton x:Name="JournalChoice"
										TabIndex="2"
										Margin="10,0,0,6"
										GroupName="rbChoice"
										Content="{Binding Path=LocalizedStrings[DLG_ActivityType_Journal], RelativeSource={RelativeSource TemplatedParent}}"
										IsChecked="{Binding Path=ChoiceIsJournal, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
										Visibility="{TemplateBinding ChoiceIsJournalVisibility}"
										VerticalAlignment="Center"/>
									<RadioButton x:Name="TaskChoice"
										TabIndex="3"
										Margin="10,0,0,6"
										GroupName="rbChoice"
										Content="{Binding Path=LocalizedStrings[DLG_ActivityType_Task], RelativeSource={RelativeSource TemplatedParent}}"
										IsChecked="{Binding Path=ChoiceIsTask, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
										Visibility="{TemplateBinding ChoiceIsTaskVisibility}"
										VerticalAlignment="Center"/>
								</StackPanel>

								<StackPanel Grid.Row="2" Orientation="Horizontal" HorizontalAlignment="Center" Margin="5,3,0,10">
									<StackPanel.Resources>
										<Style TargetType="Button">
											<Setter Property="MinWidth" Value="75"/>
											<Setter Property="Margin" Value="5,0,5,0"/>
											<Setter Property="HorizontalAlignment" Value="Center"/>
										</Style>
									</StackPanel.Resources>

									<Button x:Name="OkButton"
										TabIndex="30"
										Content="{Binding Path=LocalizedStrings[DLG_ScheduleDialog_Btn_Ok], RelativeSource={RelativeSource TemplatedParent}}">
										<ig:Commanding.Command>
											<igSchedulePrim:ScheduleDialogCommandSource EventName="Click" CommandType="SaveAndClose"/>
										</ig:Commanding.Command>
									</Button>
									<Button x:Name="CancelButton"
										TabIndex="40"
										Content="{Binding Path=LocalizedStrings[DLG_ScheduleDialog_Btn_Cancel], RelativeSource={RelativeSource TemplatedParent}}">
										<ig:Commanding.Command>
											<igSchedulePrim:ScheduleDialogCommandSource EventName="Click" CommandType="Close"/>
										</ig:Commanding.Command>
									</Button>
								</StackPanel>
							</Grid>
						</Border>
					</ContentControl>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

</ResourceDictionary>
