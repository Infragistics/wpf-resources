<ResourceDictionary
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
	
	<!-- ======================== -->
	<!-- Shared Resources         -->
	<!-- ======================== -->
	<ResourceDictionary.MergedDictionaries>
		<!-- Need absolute reference as mentioned here: https://connect.microsoft.com/VisualStudio/feedback/details/487563/generic-xaml-relative-source-path-doesnt-work?wa=wsignin1.0 -->
		<ResourceDictionary Source="scrollbar.shared.brushes.xaml" />
	</ResourceDictionary.MergedDictionaries>

	<Style x:Key="VerticalScrollBarRepeatBtn" TargetType="{x:Type RepeatButton}">
		<Setter Property="OverridesDefaultStyle" Value="true"/>
		<Setter Property="Focusable" Value="false"/>
		<Setter Property="IsTabStop" Value="false"/>
		<Setter Property="HorizontalContentAlignment" Value="Center"/>
		<Setter Property="VerticalContentAlignment" Value="Center"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type RepeatButton}">
					<ControlTemplate.Resources>
						<Storyboard x:Key="MouseOverIn">
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="hover">
								<EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="1"/>
							</DoubleAnimationUsingKeyFrames>
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="highlight">
								<EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="1"/>
							</DoubleAnimationUsingKeyFrames>
						</Storyboard>
						<Storyboard x:Key="MouseOverOut">
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="hover">
								<EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0"/>
							</DoubleAnimationUsingKeyFrames>
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="highlight">
								<EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0"/>
							</DoubleAnimationUsingKeyFrames>
						</Storyboard>
						<Storyboard x:Key="PressedIn">
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="pressed">
								<EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="1"/>
							</DoubleAnimationUsingKeyFrames>
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="highlight">
								<EasingDoubleKeyFrame KeyTime="0" Value="0"/>
							</DoubleAnimationUsingKeyFrames>
						</Storyboard>
						<Storyboard x:Key="PressedOut">
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="pressed">
								<EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0"/>
							</DoubleAnimationUsingKeyFrames>
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="highlight">
								<EasingDoubleKeyFrame KeyTime="0" Value="0"/>
							</DoubleAnimationUsingKeyFrames>
						</Storyboard>
					</ControlTemplate.Resources>
					<Grid>
						<Rectangle x:Name="Bd" Stroke="{StaticResource RepeatBtnBorderBrush}" Fill="{StaticResource RepeatBtnNormalBackgroundBrush}" RadiusX="1" RadiusY="1"/>
						<Rectangle x:Name="hover" Fill="{StaticResource RepeatBtnHoverBackgroundBrush}" RadiusY="1" RadiusX="1" Stroke="{StaticResource RepeatBtnHoverBorderBrush}" Opacity="0"/>
						<Rectangle x:Name="pressed" Fill="{StaticResource RepeatBtnPressedBackgroundBrush}" RadiusY="1" RadiusX="1" Stroke="{StaticResource RepeatBtnHoverBorderBrush}" Opacity="0"/>
						<Rectangle x:Name="highlight" RadiusY="1" RadiusX="1" Stroke="{StaticResource RepeatBtnNormalHighlightBrush}" Margin="1" Opacity="0"/>
						<ContentPresenter x:Name="contentPresenter" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"/>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="Tag" Value="MouseOnScrollBar">
							<Trigger.EnterActions>
								<BeginStoryboard x:Name="MouseOver_BeginStoryboard" Storyboard="{StaticResource MouseOverIn}"/>
							</Trigger.EnterActions>
							<Trigger.ExitActions>
								<StopStoryboard BeginStoryboardName="MouseOver_BeginStoryboard"/>
								<BeginStoryboard Storyboard="{StaticResource MouseOverOut}"/>
							</Trigger.ExitActions>
						</Trigger>
						<Trigger Property="IsPressed" Value="True">
							<Trigger.EnterActions>
								<BeginStoryboard x:Name="Pressed_BeginStoryboard" Storyboard="{StaticResource PressedIn}"/>
							</Trigger.EnterActions>
							<Trigger.ExitActions>
								<StopStoryboard BeginStoryboardName="Pressed_BeginStoryboard"/>
								<BeginStoryboard Storyboard="{StaticResource PressedOut}"/>
							</Trigger.ExitActions>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="HorizontalScrollBarRepeatBtn" TargetType="{x:Type RepeatButton}">
		<Setter Property="OverridesDefaultStyle" Value="true"/>
		<Setter Property="Focusable" Value="false"/>
		<Setter Property="IsTabStop" Value="false"/>
		<Setter Property="HorizontalContentAlignment" Value="Center"/>
		<Setter Property="VerticalContentAlignment" Value="Center"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type RepeatButton}">
					<ControlTemplate.Resources>
						<Storyboard x:Key="MouseOverIn">
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="hover">
								<EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="1"/>
							</DoubleAnimationUsingKeyFrames>
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="highlight">
								<EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="1"/>
							</DoubleAnimationUsingKeyFrames>
						</Storyboard>
						<Storyboard x:Key="MouseOverOut">
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="hover">
								<EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0"/>
							</DoubleAnimationUsingKeyFrames>
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="highlight">
								<EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0"/>
							</DoubleAnimationUsingKeyFrames>
						</Storyboard>
						<Storyboard x:Key="PressedIn">
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="pressed">
								<EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="1"/>
							</DoubleAnimationUsingKeyFrames>
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="highlight">
								<EasingDoubleKeyFrame KeyTime="0" Value="0"/>
							</DoubleAnimationUsingKeyFrames>
						</Storyboard>
						<Storyboard x:Key="PressedOut">
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="pressed">
								<EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0"/>
							</DoubleAnimationUsingKeyFrames>
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="highlight">
								<EasingDoubleKeyFrame KeyTime="0" Value="0"/>
							</DoubleAnimationUsingKeyFrames>
						</Storyboard>
					</ControlTemplate.Resources>
					<Grid>
						<Rectangle x:Name="Bd" Stroke="{StaticResource RepeatBtnBorderBrush}" Fill="{StaticResource HorizontalRepeatBtnNormalBackgroundBrush}" RadiusX="1" RadiusY="1"/>
						<Rectangle x:Name="hover" Fill="{StaticResource HorizontalRepeatBtnHoverBackgroundBrush}" RadiusY="1" RadiusX="1" Stroke="{StaticResource HorizontalRepeatBtnHoverBorderBrush}" Opacity="0"/>
						<Rectangle x:Name="pressed" Fill="{StaticResource HorizontalRepeatBtnPressedBackgroundBrush}" RadiusY="1" RadiusX="1" Stroke="{StaticResource HorizontalRepeatBtnHoverBorderBrush}" Opacity="0"/>
						<Rectangle x:Name="highlight" RadiusY="1" RadiusX="1" Stroke="{StaticResource RepeatBtnNormalHighlightBrush}" Margin="1" Opacity="0"/>
						<ContentPresenter x:Name="contentPresenter" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"/>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="Tag" Value="MouseOnScrollBar">
							<Trigger.EnterActions>
								<BeginStoryboard x:Name="MouseOver_BeginStoryboard" Storyboard="{StaticResource MouseOverIn}"/>
							</Trigger.EnterActions>
							<Trigger.ExitActions>
								<StopStoryboard BeginStoryboardName="MouseOver_BeginStoryboard"/>
								<BeginStoryboard Storyboard="{StaticResource MouseOverOut}"/>
							</Trigger.ExitActions>
						</Trigger>
						<Trigger Property="IsPressed" Value="True">
							<Trigger.EnterActions>
								<BeginStoryboard x:Name="Pressed_BeginStoryboard" Storyboard="{StaticResource PressedIn}"/>
							</Trigger.EnterActions>
							<Trigger.ExitActions>
								<StopStoryboard BeginStoryboardName="Pressed_BeginStoryboard"/>
								<BeginStoryboard Storyboard="{StaticResource PressedOut}"/>
							</Trigger.ExitActions>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="VerticalScrollBarPageButton" TargetType="{x:Type RepeatButton}">
		<Setter Property="OverridesDefaultStyle" Value="true"/>
		<Setter Property="Background" Value="Transparent"/>
		<Setter Property="Focusable" Value="false"/>
		<Setter Property="IsTabStop" Value="false"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type RepeatButton}">
					<Rectangle x:Name="Bg" Fill="{TemplateBinding Background}"/>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="VerticalScrollBarThumb" TargetType="{x:Type Thumb}">
		<Setter Property="OverridesDefaultStyle" Value="true"/>
		<Setter Property="IsTabStop" Value="false"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Thumb}">
					<ControlTemplate.Resources>
						<Storyboard x:Key="MouseOverIn">
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="hover">
								<EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="1"/>
							</DoubleAnimationUsingKeyFrames>
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="highlight">
								<EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="1"/>
							</DoubleAnimationUsingKeyFrames>
						</Storyboard>
						<Storyboard x:Key="MouseOverOut">
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="hover">
								<EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0"/>
							</DoubleAnimationUsingKeyFrames>
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="highlight">
								<EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0"/>
							</DoubleAnimationUsingKeyFrames>
						</Storyboard>
						<Storyboard x:Key="PressedIn">
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="pressed">
								<EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="1"/>
							</DoubleAnimationUsingKeyFrames>
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="highlight">
								<EasingDoubleKeyFrame KeyTime="0" Value="0"/>
							</DoubleAnimationUsingKeyFrames>
						</Storyboard>
						<Storyboard x:Key="PressedOut">
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="pressed">
								<EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0"/>
							</DoubleAnimationUsingKeyFrames>
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="highlight">
								<EasingDoubleKeyFrame KeyTime="0" Value="0"/>
							</DoubleAnimationUsingKeyFrames>
						</Storyboard>
					</ControlTemplate.Resources>
					<Grid>
						<Rectangle x:Name="Bd" Stroke="{StaticResource RepeatBtnBorderBrush}" Fill="{StaticResource RepeatBtnNormalBackgroundBrush}" RadiusX="1" RadiusY="1"/>
						<Rectangle x:Name="hover" Fill="{StaticResource RepeatBtnHoverBackgroundBrush}" RadiusY="1" RadiusX="1" Stroke="{StaticResource RepeatBtnHoverBorderBrush}" Opacity="0"/>
						<Rectangle x:Name="pressed" Fill="{StaticResource RepeatBtnPressedBackgroundBrush}" RadiusY="1" RadiusX="1" Stroke="{StaticResource RepeatBtnHoverBorderBrush}" Opacity="0"/>
						<Rectangle x:Name="highlight" RadiusY="1" RadiusX="1" Stroke="{StaticResource RepeatBtnNormalHighlightBrush}" Margin="1" Opacity="0"/>
						<Path
							Width="8"
							Height="7"
							Data="M 0,6 C0,6 0,7 0,7 0,7 8,7 8,7 8,7 8,6 8,6 8,6 0,6 0,6 zM 0,4 C0,4 0,5 0,5 0,5 8,5 8,5 8,5 8,4 8,4 8,4 0,4 0,4 zM 0,2 C0,2 0,3 0,3 0,3 8,3 8,3 8,3 8,2 8,2 8,2 0,2 0,2 zM 0,0 C0,0 0,1 0,1 0,1 8,1 8,1 8,1 8,0 8,0 8,0 0,0 0,0 z"
							Fill="{StaticResource ScrollBarThumbGlyphDarkBrush}"/>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Trigger.EnterActions>
								<BeginStoryboard x:Name="MouseOver_BeginStoryboard" Storyboard="{StaticResource MouseOverIn}"/>
							</Trigger.EnterActions>
							<Trigger.ExitActions>
								<StopStoryboard BeginStoryboardName="MouseOver_BeginStoryboard"/>
								<BeginStoryboard Storyboard="{StaticResource MouseOverOut}"/>
							</Trigger.ExitActions>
						</Trigger>
						<Trigger Property="IsDragging" Value="True">
							<Trigger.EnterActions>
								<BeginStoryboard x:Name="Pressed_BeginStoryboard" Storyboard="{StaticResource PressedIn}"/>
							</Trigger.EnterActions>
							<Trigger.ExitActions>
								<StopStoryboard BeginStoryboardName="Pressed_BeginStoryboard"/>
								<BeginStoryboard Storyboard="{StaticResource PressedOut}"/>
							</Trigger.ExitActions>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="HorizontalScrollBarThumb" TargetType="{x:Type Thumb}" >
		<Setter Property="OverridesDefaultStyle" Value="true"/>
		<Setter Property="IsTabStop" Value="false"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Thumb}">
					<ControlTemplate.Resources>
						<Storyboard x:Key="MouseOverIn">
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="hover">
								<EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="1"/>
							</DoubleAnimationUsingKeyFrames>
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="highlight">
								<EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="1"/>
							</DoubleAnimationUsingKeyFrames>
						</Storyboard>
						<Storyboard x:Key="MouseOverOut">
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="hover">
								<EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0"/>
							</DoubleAnimationUsingKeyFrames>
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="highlight">
								<EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0"/>
							</DoubleAnimationUsingKeyFrames>
						</Storyboard>
						<Storyboard x:Key="PressedIn">
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="pressed">
								<EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="1"/>
							</DoubleAnimationUsingKeyFrames>
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="highlight">
								<EasingDoubleKeyFrame KeyTime="0" Value="0"/>
							</DoubleAnimationUsingKeyFrames>
						</Storyboard>
						<Storyboard x:Key="PressedOut">
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="pressed">
								<EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0"/>
							</DoubleAnimationUsingKeyFrames>
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="highlight">
								<EasingDoubleKeyFrame KeyTime="0" Value="0"/>
							</DoubleAnimationUsingKeyFrames>
						</Storyboard>
					</ControlTemplate.Resources>
					<Grid>
						<Rectangle x:Name="Bd" Stroke="{StaticResource RepeatBtnBorderBrush}" Fill="{StaticResource HorizontalRepeatBtnNormalBackgroundBrush}" RadiusX="1" RadiusY="1"/>
						<Rectangle x:Name="hover" Fill="{StaticResource HorizontalRepeatBtnHoverBackgroundBrush}" RadiusY="1" RadiusX="1" Stroke="{StaticResource HorizontalRepeatBtnHoverBorderBrush}" Opacity="0"/>
						<Rectangle x:Name="pressed" Fill="{StaticResource HorizontalRepeatBtnPressedBackgroundBrush}" RadiusY="1" RadiusX="1" Stroke="{StaticResource HorizontalRepeatBtnHoverBorderBrush}" Opacity="0"/>
						<Rectangle x:Name="highlight" RadiusY="1" RadiusX="1" Stroke="{StaticResource RepeatBtnNormalHighlightBrush}" Margin="1" Opacity="0"/>
                        <Path
							Width="7"
							Height="7"
							Data="M 6,0 C6,0 6,7 6,7 6,7 7,7 7,7 7,7 7,0 7,0 7,0 6,0 6,0 zM 4,0 C4,0 4,7 4,7 4,7 5,7 5,7 5,7 5,0 5,0 5,0 4,0 4,0 zM 2,0 C2,0 2,7 2,7 2,7 3,7 3,7 3,7 3,0 3,0 3,0 2,0 2,0 zM 0,0 C0,0 0,7 0,7 0,7 1,7 1,7 1,7 1,0 1,0 1,0 0,0 0,0 z"
							Fill="{StaticResource ScrollBarThumbGlyphDarkBrush}"/>
                    </Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Trigger.EnterActions>
								<BeginStoryboard x:Name="MouseOver_BeginStoryboard" Storyboard="{StaticResource MouseOverIn}"/>
							</Trigger.EnterActions>
							<Trigger.ExitActions>
								<StopStoryboard BeginStoryboardName="MouseOver_BeginStoryboard"/>
								<BeginStoryboard Storyboard="{StaticResource MouseOverOut}"/>
							</Trigger.ExitActions>
						</Trigger>
						<Trigger Property="IsDragging" Value="True">
							<Trigger.EnterActions>
								<BeginStoryboard x:Name="Pressed_BeginStoryboard" Storyboard="{StaticResource PressedIn}"/>
							</Trigger.EnterActions>
							<Trigger.ExitActions>
								<StopStoryboard BeginStoryboardName="Pressed_BeginStoryboard"/>
								<BeginStoryboard Storyboard="{StaticResource PressedOut}"/>
							</Trigger.ExitActions>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="HorizontalScrollBarPageButton" TargetType="{x:Type RepeatButton}">
		<Setter Property="OverridesDefaultStyle" Value="true"/>
		<Setter Property="Background" Value="Transparent"/>
		<Setter Property="Focusable" Value="false"/>
		<Setter Property="IsTabStop" Value="false"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type RepeatButton}">
					<Rectangle x:Name="Bg" Fill="{TemplateBinding Background}"/>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="ScrollbarStyle" TargetType="{x:Type ScrollBar}">
		<Setter Property="Stylus.IsPressAndHoldEnabled" Value="false"/>
		<Setter Property="Stylus.IsFlicksEnabled" Value="false"/>
		<Setter Property="Background" Value="{StaticResource ScrollBarTrackBrush}"/>
		<Setter Property="BorderBrush" Value="{StaticResource ScrollBarTrackBorderBrush}"/>
		<Setter Property="BorderThickness" Value="1,0"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ScrollBar}">
					<Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
						<Grid SnapsToDevicePixels="true">
							<Grid.RowDefinitions>
								<RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}"/>
								<RowDefinition Height="*"/>
								<RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}"/>
							</Grid.RowDefinitions>
							<RepeatButton x:Name="VerticalDecrementSmall" Command="{x:Static ScrollBar.LineUpCommand}" Style="{StaticResource VerticalScrollBarRepeatBtn}">
								<Path
									x:Name="smallDecreaseGlyph"
									Width="9"
									Height="5"
									Data="M 4,0 C4,0 4,1 4,1 4,1 3,1 3,1 3,1 3,2 3,2 3,2 2,2 2,2 2,2 2,3 2,3 2,3 1,3 1,3 1,3 1,4 1,4 1,4 0,4 0,4 0,4 0,5 0,5 0,5 9,5 9,5 9,5 9,4 9,4 9,4 8,4 8,4 8,4 8,3 8,3 8,3 7,3 7,3 7,3 7,2 7,2 7,2 6,2 6,2 6,2 6,1 6,1 6,1 5,1 5,1 5,1 5,0 5,0 5,0 4,0 4,0 z"
									Fill="{StaticResource ScrollBarGlyphFillBrush}"
									IsHitTestVisible="False"/>
							</RepeatButton>
							<Track x:Name="PART_Track" IsDirectionReversed="true" Grid.Row="1">
								<Track.DecreaseRepeatButton>
									<RepeatButton Command="{x:Static ScrollBar.PageUpCommand}" Style="{StaticResource VerticalScrollBarPageButton}"/>
								</Track.DecreaseRepeatButton>
								<Track.IncreaseRepeatButton>
									<RepeatButton Command="{x:Static ScrollBar.PageDownCommand}" Style="{StaticResource VerticalScrollBarPageButton}"/>
								</Track.IncreaseRepeatButton>
								<Track.Thumb>
									<Thumb Style="{StaticResource VerticalScrollBarThumb}" />
								</Track.Thumb>
							</Track>
							<RepeatButton x:Name="VerticalIncrementSmall" Command="{x:Static ScrollBar.LineDownCommand}" Grid.Row="2" Style="{StaticResource VerticalScrollBarRepeatBtn}">
								<Path
									x:Name="smallIncreaseGlyph"
									Width="9"
									Height="5"
									Data="M 4,5 C4,5 4,4 4,4 4,4 3,4 3,4 3,4 3,3 3,3 3,3 2,3 2,3 2,3 2,2 2,2 2,2 1,2 1,2 1,2 1,1 1,1 1,1 0,1 0,1 0,1 0,0 0,0 0,0 9,0 9,0 9,0 9,1 9,1 9,1 8,1 8,1 8,1 8,2 8,2 8,2 7,2 7,2 7,2 7,3 7,3 7,3 6,3 6,3 6,3 6,4 6,4 6,4 5,4 5,4 5,4 5,5 5,5 5,5 4,5 4,5 z"
									Fill="{StaticResource ScrollBarGlyphFillBrush}"
									IsHitTestVisible="False"
									Grid.Row="2"/>
							</RepeatButton>
						</Grid>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter TargetName="VerticalDecrementSmall" Property="Tag" Value="MouseOnScrollBar"/>
							<Setter TargetName="VerticalIncrementSmall" Property="Tag" Value="MouseOnScrollBar"/>
						</Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="smallDecreaseGlyph" Property="Fill" Value="{StaticResource DisabledGlyphBrushFill}"/>
                            <Setter TargetName="smallIncreaseGlyph" Property="Fill" Value="{StaticResource DisabledGlyphBrushFill}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Style.Triggers>
			<Trigger Property="Orientation" Value="Horizontal">
				<Setter Property="Width" Value="Auto"/>
				<Setter Property="MinWidth" Value="0"/>
				<Setter Property="Background" Value="{StaticResource ScrollBarTrackBrush}"/>
				<Setter Property="BorderBrush" Value="{StaticResource ScrollBarTrackBorderBrush}"/>
				<Setter Property="BorderThickness" Value="0,1"/>
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="{x:Type ScrollBar}">
							<Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
								<Grid Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
									<Grid.ColumnDefinitions>
										<ColumnDefinition MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}"/>
										<ColumnDefinition Width="*"/>
										<ColumnDefinition MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}"/>
									</Grid.ColumnDefinitions>
									<RepeatButton x:Name="HorizontalDecrementSmall" Command="{x:Static ScrollBar.LineLeftCommand}" Style="{StaticResource HorizontalScrollBarRepeatBtn}">
										<Path
											x:Name="horizontalSmallDecreaseGlyph"
											Width="5"
											Height="9"
											Data="M 0,4 C0,4 1,4 1,4 1,4 1,3 1,3 1,3 2,3 2,3 2,3 2,2 2,2 2,2 3,2 3,2 3,2 3,1 3,1 3,1 4,1 4,1 4,1 4,0 4,0 4,0 5,0 5,0 5,0 5,9 5,9 5,9 4,9 4,9 4,9 4,8 4,8 4,8 3,8 3,8 3,8 3,7 3,7 3,7 2,7 2,7 2,7 2,6 2,6 2,6 1,6 1,6 1,6 1,5 1,5 1,5 0,5 0,5 0,5 0,4 0,4 z"
											Fill="{StaticResource HorizontalScrollBarGlyphFillBrush}"
											IsHitTestVisible="False"/>
									</RepeatButton>
									<Track x:Name="PART_Track" Grid.Column="1">
										<Track.DecreaseRepeatButton>
											<RepeatButton Command="{x:Static ScrollBar.PageLeftCommand}" Style="{StaticResource HorizontalScrollBarPageButton}"/>
										</Track.DecreaseRepeatButton>
										<Track.IncreaseRepeatButton>
											<RepeatButton Command="{x:Static ScrollBar.PageRightCommand}" Style="{StaticResource HorizontalScrollBarPageButton}"/>
										</Track.IncreaseRepeatButton>
										<Track.Thumb>
											<Thumb Style="{StaticResource HorizontalScrollBarThumb}" />
										</Track.Thumb>
									</Track>
									<RepeatButton x:Name="HorizontalIncrementSmall" Grid.Column="2" Command="{x:Static ScrollBar.LineRightCommand}" Style="{StaticResource HorizontalScrollBarRepeatBtn}">
										<Path
											x:Name="horizontalSmallIncreaseGlyph"
											Width="5"
											Height="9"
											Data="M 5,4 C5,4 4,4 4,4 4,4 4,3 4,3 4,3 3,3 3,3 3,3 3,2 3,2 3,2 2,2 2,2 2,2 2,1 2,1 2,1 1,1 1,1 1,1 1,0 1,0 1,0 0,0 0,0 0,0 0,9 0,9 0,9 1,9 1,9 1,9 1,8 1,8 1,8 2,8 2,8 2,8 2,7 2,7 2,7 3,7 3,7 3,7 3,6 3,6 3,6 4,6 4,6 4,6 4,5 4,5 4,5 5,5 5,5 5,5 5,4 5,4 z"
											Fill="{StaticResource HorizontalScrollBarGlyphFillBrush}"
											IsHitTestVisible="False"
											Grid.Column="4"/>
									</RepeatButton>
								</Grid>
							</Border>
							<ControlTemplate.Triggers>
								<Trigger Property="IsMouseOver" Value="True">
									<Setter TargetName="HorizontalDecrementSmall" Property="Tag" Value="MouseOnScrollBar"/>
									<Setter TargetName="HorizontalIncrementSmall" Property="Tag" Value="MouseOnScrollBar"/>
								</Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter TargetName="horizontalSmallDecreaseGlyph" Property="Fill" Value="{StaticResource DisabledGlyphBrushFill}"/>
                                    <Setter TargetName="horizontalSmallIncreaseGlyph" Property="Fill" Value="{StaticResource DisabledGlyphBrushFill}"/>
                                </Trigger>
							</ControlTemplate.Triggers>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Trigger>
		</Style.Triggers>
	</Style>
</ResourceDictionary>