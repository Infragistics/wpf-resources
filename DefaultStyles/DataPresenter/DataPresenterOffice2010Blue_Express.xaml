<ResourceDictionary
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
	xmlns:d="http://schemas.microsoft.com/expression/interactivedesigner/2006"
	mc:Ignorable="d"
	xmlns:igWindows="http://infragistics.com/Windows"
	xmlns:editors="http://infragistics.com/Editors"
	xmlns:igDP="http://infragistics.com/DataPresenter"
	xmlns:themes="http://infragistics.com/Themes"
	xmlns:System="clr-namespace:System;assembly=mscorlib">

  <ResourceDictionary.MergedDictionaries>
    <ResourceDictionary Source="DataPresenterGeneric_Express.xaml"/>
    <ResourceDictionary Source="DataPresenterGeneric.xaml"/>
    <ResourceDictionary Source="DataPresenterOffice2k7Blue_Express.xaml"/>
    <ResourceDictionary Source="DataPresenterOffice2k7Blue.xaml"/>
    <ResourceDictionary Source="DataPresenterOffice2010Blue_Brushes.xaml"/>
  </ResourceDictionary.MergedDictionaries>

  <!--SSP 10/16/09 TFS19525 - Added StringFormatConverter-->
  <igWindows:StringFormatConverter x:Key="stringFormatConverter" />

  <!-- *********************************  ScrollBars  ********************************* -->
  <Style x:Key="VerticalScrollBarButton" TargetType="{x:Type RepeatButton}">
    <Setter Property="OverridesDefaultStyle" Value="true"/>
    <Setter Property="Focusable" Value="false"/>
    <Setter Property="IsTabStop" Value="false"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type RepeatButton}">
          <Grid Background="{StaticResource Brush_2000}">
            <Border Visibility="Collapsed" x:Name="ButtonBackground" Background="{StaticResource RepeatBtnNormalBackgroundBrush}" BorderBrush="{StaticResource RepeatBtnBorderBrush}" BorderThickness="1" CornerRadius="1">
              <Rectangle x:Name="highlight" Stroke="{StaticResource RepeatBtnHoverHighlightBrush}" Visibility="Collapsed"/>
            </Border>
            <ContentPresenter/>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
              <Setter Property="Visibility" TargetName="ButtonBackground" Value="Visible"/>
              <Setter Property="Visibility" TargetName="highlight" Value="Visible"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="HorizScrollBarButton" TargetType="{x:Type RepeatButton}">
    <Setter Property="OverridesDefaultStyle" Value="true"/>
    <Setter Property="Focusable" Value="false"/>
    <Setter Property="IsTabStop" Value="false"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type RepeatButton}">
          <Grid Background="{StaticResource Brush_2001}">
            <Border Visibility="Collapsed" x:Name="ButtonBackground" Background="{StaticResource HorizRepeatBtnNormalBackgroundBrush}" BorderBrush="{StaticResource RepeatBtnBorderBrush}" BorderThickness="1" CornerRadius="1">
              <Rectangle x:Name="highlight" Stroke="{StaticResource HorizRepeatBtnHoverHighlightBrush}" Visibility="Collapsed"/>
            </Border>
            <ContentPresenter/>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
              <Setter Property="Visibility" TargetName="ButtonBackground" Value="Visible"/>
              <Setter Property="Visibility" TargetName="highlight" Value="Visible"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="VerticalScrollBarPageButton" TargetType="{x:Type RepeatButton}">
    <Setter Property="OverridesDefaultStyle" Value="true"/>
    <Setter Property="Background" Value="{StaticResource Brush_2002}"/>
    <Setter Property="Focusable" Value="false"/>
    <Setter Property="IsTabStop" Value="false"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type RepeatButton}">
          <Rectangle Fill="{TemplateBinding Background}" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}"/>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="HorizontalScrollBarThumb" TargetType="{x:Type Thumb}">
    <Setter Property="OverridesDefaultStyle" Value="true"/>
    <Setter Property="IsTabStop" Value="false"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Thumb}">
          <Grid Width="Auto" Height="Auto">
            <Rectangle x:Name="ThumbBackground" Stroke="{StaticResource RepeatBtnBorderBrush}" Fill="{StaticResource HorizRepeatBtnNormalBackgroundBrush}" RadiusX="1" RadiusY="1" Margin="0"/>
            <Path Width="7" Height="8" Data="M 0,6 C0,6 0,7 0,7 0,7 8,7 8,7 8,7 8,6 8,6 8,6 0,6 0,6 zM 0,4 C0,4 0,5 0,5 0,5 8,5 8,5 8,5 8,4 8,4 8,4 0,4 0,4 zM 0,2 C0,2 0,3 0,3 0,3 8,3 8,3 8,3 8,2 8,2 8,2 0,2 0,2 zM 0,0 C0,0 0,1 0,1 0,1 8,1 8,1 8,1 8,0 8,0 8,0 0,0 0,0 z" Fill="{StaticResource ScrollBarThumbGlyphDarkBrush}" RenderTransformOrigin="0.5,0.5" Stretch="Uniform">
              <Path.RenderTransform>
                <TransformGroup>
                  <ScaleTransform/>
                  <SkewTransform/>
                  <RotateTransform Angle="90"/>
                  <TranslateTransform/>
                </TransformGroup>
              </Path.RenderTransform>
            </Path>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
              <Setter Property="Fill" TargetName="ThumbBackground" Value="{StaticResource HorizRepeatBtnHoverBackgroundBrush}"/>
            </Trigger>
            <Trigger Property="IsDragging" Value="True">
              <Setter Property="Fill" TargetName="ThumbBackground" Value="{StaticResource HorizRepeatBtnHoverHighlightBrush}"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="VerticalScrollBarThumb" TargetType="{x:Type Thumb}">
    <Setter Property="OverridesDefaultStyle" Value="true"/>
    <Setter Property="IsTabStop" Value="false"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Thumb}">
          <Grid Width="Auto" Height="Auto">
            <Rectangle x:Name="ThumbBackground" Stroke="{StaticResource RepeatBtnBorderBrush}" Fill="{StaticResource RepeatBtnNormalBackgroundBrush}" RadiusX="1" RadiusY="1" Margin="0"/>
            <Path Width="7" Height="8" Data="M 0,6 C0,6 0,7 0,7 0,7 8,7 8,7 8,7 8,6 8,6 8,6 0,6 0,6 zM 0,4 C0,4 0,5 0,5 0,5 8,5 8,5 8,5 8,4 8,4 8,4 0,4 0,4 zM 0,2 C0,2 0,3 0,3 0,3 8,3 8,3 8,3 8,2 8,2 8,2 0,2 0,2 zM 0,0 C0,0 0,1 0,1 0,1 8,1 8,1 8,1 8,0 8,0 8,0 0,0 0,0 z" Fill="{StaticResource ScrollBarThumbGlyphDarkBrush}" RenderTransformOrigin="0.5,0.5" Stretch="Uniform">
            </Path>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
              <Setter Property="Fill" TargetName="ThumbBackground" Value="{StaticResource RepeatBtnHoverBackgroundBrush}"/>
            </Trigger>
            <Trigger Property="IsDragging" Value="True">
              <Setter Property="Fill" TargetName="ThumbBackground" Value="{StaticResource RepeatBtnPressedBackgroundBrush}"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="HorizontalScrollBarPageButton" TargetType="{x:Type RepeatButton}">
    <Setter Property="OverridesDefaultStyle" Value="true"/>
    <Setter Property="Background" Value="{StaticResource Brush_2003}"/>
    <Setter Property="Focusable" Value="false"/>
    <Setter Property="IsTabStop" Value="false"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type RepeatButton}">
          <Rectangle Fill="{TemplateBinding Background}" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}"/>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="Office2010BlueScrollbar" TargetType="{x:Type ScrollBar}">
    <Setter Property="Background" Value="{StaticResource ScrollBarTrackBrush}"/>
    <Setter Property="Stylus.IsPressAndHoldEnabled" Value="false"/>
    <Setter Property="Stylus.IsFlicksEnabled" Value="false"/>
    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
    <Setter Property="Width" Value="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"/>
    <Setter Property="MinWidth" Value="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ScrollBar}">
          <Grid x:Name="Bg" SnapsToDevicePixels="true">
            <Grid.RowDefinitions>
              <RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}"/>
              <RowDefinition Height="0.00001*"/>
              <RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}"/>
            </Grid.RowDefinitions>
            <Rectangle Grid.RowSpan="3" StrokeThickness="1" Fill="{StaticResource ScrollBarTrackBrush}" Stroke="{StaticResource ScrollBarTrackBorderBrush}" Margin="0"/>
            <RepeatButton Style="{StaticResource VerticalScrollBarButton}" IsEnabled="{TemplateBinding IsMouseOver}" Command="{x:Static ScrollBar.LineUpCommand}">
              <Path Width="8" Height="4" Data="M 0,3 C0,3 0,4 0,4 0,4 8,4 8,4 8,4 8,3 8,3 8,3 7,3 7,3 7,3 7,2 7,2 7,2 6,2 6,2 6,2 6,1 6,1 6,1 5,1 5,1 5,1 5,0 5,0 5,0 3,0 3,0 3,0 3,1 3,1 3,1 2,1 2,1 2,1 2,2 2,2 2,2 1,2 1,2 1,2 1,3 1,3 1,3 0,3 0,3 z" Fill="{StaticResource ScrollBarGlyphFillBrush}"/>
            </RepeatButton>
            <Track x:Name="PART_Track" IsEnabled="{TemplateBinding IsMouseOver}" Grid.Row="1" IsDirectionReversed="true">
              <Track.DecreaseRepeatButton>
                <RepeatButton Style="{StaticResource VerticalScrollBarPageButton}" Command="{x:Static ScrollBar.PageUpCommand}"/>
              </Track.DecreaseRepeatButton>
              <Track.IncreaseRepeatButton>
                <RepeatButton Style="{StaticResource VerticalScrollBarPageButton}" Command="{x:Static ScrollBar.PageDownCommand}"/>
              </Track.IncreaseRepeatButton>
              <Track.Thumb>
                <Thumb Style="{StaticResource VerticalScrollBarThumb}"/>
              </Track.Thumb>
            </Track>
            <RepeatButton Style="{StaticResource VerticalScrollBarButton}" IsEnabled="{TemplateBinding IsMouseOver}" Grid.Row="2" Command="{x:Static ScrollBar.LineDownCommand}">
              <Path Width="8" Height="4" Data="M 0,0 C0,0 0,1 0,1 0,1 1,1 1,1 1,1 1,2 1,2 1,2 2,2 2,2 2,2 2,3 2,3 2,3 3,3 3,3 3,3 3,4 3,4 3,4 5,4 5,4 5,4 5,3 5,3 5,3 6,3 6,3 6,3 6,2 6,2 6,2 7,2 7,2 7,2 7,1 7,1 7,1 8,1 8,1 8,1 8,0 8,0 8,0 0,0 0,0 z" Fill="{StaticResource ScrollBarGlyphFillBrush}"/>
            </RepeatButton>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="false">
              <Setter Property="Background" TargetName="Bg" Value="{StaticResource ScrollBarDisabledBackground}"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Style.Triggers>
      <Trigger Property="Orientation" Value="Horizontal">
        <Setter Property="Width" Value="Auto"/>
        <Setter Property="MinWidth" Value="0"/>
        <Setter Property="Height" Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}"/>
        <Setter Property="MinHeight" Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}"/>
        <Setter Property="Background" Value="{StaticResource HorizontalScrollBarTrackBrush}"/>
        <Setter Property="Template">
          <Setter.Value>
            <ControlTemplate TargetType="{x:Type ScrollBar}">
              <Grid x:Name="Bg" SnapsToDevicePixels="true">
                <Grid.ColumnDefinitions>
                  <ColumnDefinition MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}"/>
                  <ColumnDefinition Width="0.00001*"/>
                  <ColumnDefinition MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}"/>
                </Grid.ColumnDefinitions>
                <Rectangle StrokeThickness="1" Fill="{StaticResource ScrollBarTrackBrush}" Stroke="{StaticResource ScrollBarTrackBorderBrush}" Margin="0" Grid.ColumnSpan="3"/>
                <RepeatButton Style="{StaticResource HorizScrollBarButton}" IsEnabled="{TemplateBinding IsMouseOver}" Command="{x:Static ScrollBar.LineLeftCommand}">
                  <Path Width="4" Height="8" Data="M 4,0 C4,0 3,0 3,0 3,0 3,1 3,1 3,1 2,1 2,1 2,1 2,2 2,2 2,2 1,2 1,2 1,2 1,3 1,3 1,3 0,3 0,3 0,3 0,5 0,5 0,5 1,5 1,5 1,5 1,6 1,6 1,6 2,6 2,6 2,6 2,7 2,7 2,7 3,7 3,7 3,7 3,8 3,8 3,8 4,8 4,8 4,8 4,0 4,0 z" Fill="{StaticResource ScrollBarGlyphFillBrush}" Stretch="Fill"/>
                </RepeatButton>
                <Track x:Name="PART_Track" IsEnabled="{TemplateBinding IsMouseOver}" Grid.Column="1">
                  <Track.DecreaseRepeatButton>
                    <RepeatButton Style="{StaticResource HorizontalScrollBarPageButton}" Command="{x:Static ScrollBar.PageLeftCommand}"/>
                  </Track.DecreaseRepeatButton>
                  <Track.IncreaseRepeatButton>
                    <RepeatButton Style="{StaticResource HorizontalScrollBarPageButton}" Command="{x:Static ScrollBar.PageRightCommand}"/>
                  </Track.IncreaseRepeatButton>
                  <Track.Thumb>
                    <Thumb Style="{StaticResource HorizontalScrollBarThumb}"/>
                  </Track.Thumb>
                </Track>
                <RepeatButton Style="{StaticResource HorizScrollBarButton}" IsEnabled="{TemplateBinding IsMouseOver}" Grid.Column="2" Command="{x:Static ScrollBar.LineRightCommand}">
                  <Path Width="4" Height="8" Fill="{StaticResource ScrollBarGlyphFillBrush}" Stretch="Fill" Data="M 0,0 C0,0 1,0 1,0 1,0 1,1 1,1 1,1 2,1 2,1 2,1 2,2 2,2 2,2 3,2 3,2 3,2 3,3 3,3 3,3 4,3 4,3 4,3 4,5 4,5 4,5 3,5 3,5 3,5 3,6 3,6 3,6 2,6 2,6 2,6 2,7 2,7 2,7 1,7 1,7 1,7 1,8 1,8 1,8 0,8 0,8 0,8 0,0 0,0 z"/>
                </RepeatButton>
              </Grid>
              <ControlTemplate.Triggers>
                <Trigger Property="IsEnabled" Value="false">
                  <Setter Property="Background" TargetName="Bg" Value="{StaticResource ScrollBarDisabledBackground}"/>
                </Trigger>
              </ControlTemplate.Triggers>
            </ControlTemplate>
          </Setter.Value>
        </Setter>
      </Trigger>
    </Style.Triggers>
  </Style>
  <!--<Style TargetType="{x:Type ScrollBar}" BasedOn="{StaticResource Office2010BlueScrollbar}"/>-->

  <Style x:Key="Office2010BlueScrollViewer" TargetType="{x:Type ScrollViewer}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ScrollViewer}">
          <Grid x:Name="Grid" Background="{TemplateBinding Background}">
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="*"/>
              <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
              <RowDefinition Height="*"/>
              <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <Rectangle x:Name="Corner" Grid.Column="1" Fill="{StaticResource HorizontalScrollBarTrackBrush}" Grid.Row="1"/>
            <ScrollContentPresenter x:Name="PART_ScrollContentPresenter" CanContentScroll="{TemplateBinding CanContentScroll}" CanHorizontallyScroll="False" CanVerticallyScroll="False" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Grid.Column="0" Margin="{TemplateBinding Padding}" Grid.Row="0"/>
            <ScrollBar x:Name="PART_VerticalScrollBar" AutomationProperties.AutomationId="VerticalScrollBar" Cursor="Arrow" Grid.Column="1" Maximum="{TemplateBinding ScrollableHeight}" Minimum="0" Grid.Row="0" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportHeight}" Style="{StaticResource Office2010BlueScrollbar}"/>
            <ScrollBar x:Name="PART_HorizontalScrollBar" AutomationProperties.AutomationId="HorizontalScrollBar" Cursor="Arrow" Grid.Column="0" Maximum="{TemplateBinding ScrollableWidth}" Minimum="0" Orientation="Horizontal" Grid.Row="1" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportWidth}" Style="{StaticResource Office2010BlueScrollbar}"/>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
    <!--<Style TargetType="{x:Type ScrollViewer}" BasedOn="{StaticResource Office2010BlueScrollViewer}"/>-->
    
	<!-- _________________________ FilterCellValuePresenter ______________________________________ -->
	<Style TargetType="{x:Type igDP:FilterCellValuePresenter}">
		<Setter Property="Background" Value="Transparent"/>
		<Setter Property="BorderBrush" Value="#FFCCCCCC"/>
		<Setter Property="BackgroundHover" Value="Transparent"/>
		<Setter Property="BorderHoverBrush" Value="#FFCCCCCC"/>
        <Setter Property="BackgroundActive" Value="Transparent"/>
		<Setter Property="BorderActiveBrush" Value="#FFCCCCCC"/>
        <Setter Property="BackgroundSelected" Value="Transparent"/>
		<Setter Property="BorderSelectedBrush" Value="#FF666666"/>
        <Setter Property="BackgroundFieldSelected" Value="Transparent"/>
		<Setter Property="BorderFieldSelectedBrush" Value="#FF666666"/>
		<Setter Property="BackgroundPrimary" Value="#7FE9E9E9"/>
		<Setter Property="BorderPrimaryBrush" Value="#FFE9E9E9"/>
		<Setter Property="Foreground" Value="#FF000000"/>
		<Setter Property="ForegroundStyle">
			<Setter.Value>
				<Style/>
			</Setter.Value>
		</Setter>
		<Setter Property="ForegroundActiveStyle" Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igDP:XamDataGrid}, ResourceId=BlackForegroundStyle}}"/>
		<Setter Property="ForegroundAlternateStyle" Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igDP:XamDataGrid}, ResourceId=GrayForegroundStyle}}"/>
		<Setter Property="ForegroundPrimaryStyle" Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igDP:XamDataGrid}, ResourceId=GrayForegroundStyle}}"/>
		<Setter Property="ForegroundSelectedStyle" Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igDP:XamDataGrid}, ResourceId=BlackForegroundStyle}}"/>
		<Setter Property="ForegroundFieldSelectedStyle" Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igDP:XamDataGrid}, ResourceId=BlackForegroundStyle}}"/>
		<Setter Property="ForegroundHoverStyle">
			<Setter.Value>
				<Style>
					<Setter Property="TextBlock.Foreground" Value="#FF151C55"/>
				</Style>
			</Setter.Value>
		</Setter>
		<Setter Property="CornerRadius" Value="0"/>
		<Setter Property="Padding" Value="2,0,0,0"/>
		<Setter Property="VerticalContentAlignment" Value="Center"/>
		<!-- AS 5/23/07 BR23120 -->
		<Setter Property="HorizontalContentAlignment" Value="Stretch"/>
		<Setter Property="SnapsToDevicePixels" Value="True"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type igDP:FilterCellValuePresenter}">
					<igWindows:CardPanel>
						<Border
							x:Name="MainBorder"
							CornerRadius="{TemplateBinding CornerRadius}"
							BorderThickness="{TemplateBinding BorderThickness}"
							BorderBrush="{TemplateBinding BorderBrush}"
							Background="{TemplateBinding Background}"
							SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
						<Grid Margin="{TemplateBinding Padding}">
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="Auto"/>
								<ColumnDefinition/>
                                <ColumnDefinition Width="Auto"/>
								<ColumnDefinition Width="Auto"/>
							</Grid.ColumnDefinitions>
							<igWindows:ComparisonOperatorSelector
								Grid.Column="0"
								IsDropDownOpen="{Binding Path=IsOperatorDropDownOpen, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
								AllowableOperators="{Binding Path=Field.FilterOperatorDropDownItemsResolved, RelativeSource={RelativeSource TemplatedParent}}"
								SelectedOperator="{Binding Path=Operator, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
								Visibility="{Binding Path=Field.FilterOperatorVisibilityResolved, RelativeSource={RelativeSource TemplatedParent}}"
								Foreground="{TemplateBinding Foreground}"/>
							<Button
								Style="{DynamicResource {x:Static igDP:DataPresenterBase.FilterCellClearButtonStyleKey}}"
								Grid.Column="3"
								Command="{x:Static igDP:DataPresenterCommands.ClearActiveCellFilters}"
								Visibility="{Binding Path=Field.FilterClearButtonVisibilityResolved, RelativeSource={RelativeSource TemplatedParent}}"
								Margin="2,0,4,0"/>
                            <igDP:ExcelStyleFilterButton x:Name="ExcelStyleFilterButton"
								Field="{TemplateBinding Field}"
								Width="Auto"
								Grid.Column="2"/>
							<ContentPresenter
								x:Name="PART_EditorSite"
                                Grid.Column="1"
								HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
								VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
								Style="{TemplateBinding ForegroundStyle}"
                                Margin="0 0 0 2"/>
						</Grid>
					</igWindows:CardPanel>
                    <!--SS 05/27/2015 TFS194609 Change RelativeSource to Self TargetName is not set-->
					<ControlTemplate.Triggers>
						<!-- HighlightAsPrimary -->
						<Trigger Property="HighlightAsPrimary" Value="true">
							<Setter Property="Background" Value="{Binding Path=BackgroundPrimary, RelativeSource={RelativeSource Self}}"/>
                            <Setter Property="BorderBrush" Value="{Binding Path=BorderPrimaryBrush, RelativeSource={RelativeSource Self}}"/>
							<Setter TargetName="PART_EditorSite" Property="Style" Value="{Binding Path=ForegroundPrimaryStyle, RelativeSource={RelativeSource TemplatedParent}}"/>
						</Trigger>
						<!-- IsFieldSelected -->
						<Trigger Property="IsFieldSelected" Value="true">
                            <Setter Property="Background" Value="{Binding Path=BackgroundFieldSelected, RelativeSource={RelativeSource Self}}"/>
                            <Setter Property="BorderBrush" Value="{Binding Path=BorderFieldSelectedBrush, RelativeSource={RelativeSource Self}}"/>
							<Setter TargetName="PART_EditorSite" Property="Style" Value="{Binding Path=ForegroundFieldSelectedStyle, RelativeSource={RelativeSource TemplatedParent}}"/>
						</Trigger>
						<!-- IsSelected -->
						<Trigger Property="IsSelected" Value="true">
                            <Setter Property="Background" Value="{Binding Path=BackgroundSelected, RelativeSource={RelativeSource Self}}"/>
                            <Setter Property="BorderBrush" Value="{Binding Path=BorderSelectedBrush, RelativeSource={RelativeSource Self}}"/>
							<Setter TargetName="PART_EditorSite" Property="Style" Value="{Binding Path=ForegroundSelectedStyle, RelativeSource={RelativeSource TemplatedParent}}"/>
							<!--<Setter Property="Visibility" Value="Visible" TargetName="LeftBorder" />-->
						</Trigger>
						<!-- IsActive -->
						<Trigger Property="IsActive" Value="true">
							<Setter TargetName="PART_EditorSite" Property="Style" Value="{Binding Path=ForegroundActiveStyle, RelativeSource={RelativeSource TemplatedParent}}"/>
                            <Setter Property="Background" Value="{Binding Path=BackgroundActive, RelativeSource={RelativeSource Self}}"/>
                            <Setter Property="BorderBrush" Value="{Binding Path=BorderActiveBrush, RelativeSource={RelativeSource Self}}"/>
                        </Trigger>
						<!-- IsMouseOver -->
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsMouseOver" Value="True"/>
								<Condition Property="IsSelected" Value="False"/>
								<Condition Property="IsFieldSelected" Value="False"/>
							</MultiTrigger.Conditions>
                            <Setter Property="Background" Value="{Binding Path=BackgroundHover, RelativeSource={RelativeSource Self}}"/>
                            <Setter Property="BorderBrush" Value="{Binding Path=BorderHoverBrush, RelativeSource={RelativeSource Self}}"/>
							<Setter TargetName="PART_EditorSite" Property="Style" Value="{Binding Path=ForegroundHoverStyle, RelativeSource={RelativeSource TemplatedParent}}"/>
						</MultiTrigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>


    <Style TargetType="{x:Type igDP:XamDataCarousel}">
        <Style.Resources>
            <Style TargetType="{x:Type ScrollViewer}" BasedOn="{StaticResource Office2010BlueScrollViewer}"/>
            <Style TargetType="{x:Type ScrollBar}" BasedOn="{StaticResource Office2010BlueScrollbar}"/>
        </Style.Resources>
    </Style>
    <Style TargetType="{x:Type igDP:XamDataPresenter}">
        <Style.Resources>
            <Style TargetType="{x:Type ScrollViewer}" BasedOn="{StaticResource Office2010BlueScrollViewer}"/>
            <Style TargetType="{x:Type ScrollBar}" BasedOn="{StaticResource Office2010BlueScrollbar}"/>
        </Style.Resources>
    </Style>
    <Style TargetType="{x:Type igDP:XamDataCards}">
        <Style.Resources>
            <Style TargetType="{x:Type ScrollViewer}" BasedOn="{StaticResource Office2010BlueScrollViewer}"/>
            <Style TargetType="{x:Type ScrollBar}" BasedOn="{StaticResource Office2010BlueScrollbar}"/>
        </Style.Resources>
    </Style>
    <Style TargetType="{x:Type igDP:XamDataGrid}">
        <Style.Resources>
            <Style TargetType="{x:Type ScrollViewer}" BasedOn="{StaticResource Office2010BlueScrollViewer}"/>
            <Style TargetType="{x:Type ScrollBar}" BasedOn="{StaticResource Office2010BlueScrollbar}"/>
        </Style.Resources>
    </Style>
    <Style TargetType="{x:Type igDP:XamTreeGrid}">
        <Style.Resources>
            <Style TargetType="{x:Type ScrollViewer}" BasedOn="{StaticResource Office2010BlueScrollViewer}"/>
            <Style TargetType="{x:Type ScrollBar}" BasedOn="{StaticResource Office2010BlueScrollbar}"/>
        </Style.Resources>
    </Style>
    
  <!-- _________________________ DataRecordCellArea __________________________________________ -->
  <Style TargetType="{x:Type igDP:DataRecordCellArea}" BasedOn="{x:Static themes:DataPresenterGeneric.DataRecordCellArea}">
    <Setter Property="BackgroundHover" Value="{StaticResource NewBrush1}"/>
    <Setter Property="BorderHoverBrush" Value="{StaticResource Brush_1000}"/>
    <Setter Property="BackgroundActive" Value="{StaticResource NewBrush2}"/>
    <Setter Property="BorderActiveBrush" Value="{StaticResource Brush_1001}"/>
    <Setter Property="BackgroundAlternate" Value="{StaticResource Brush_1002}"/>
    <Setter Property="BackgroundSelected" Value="{StaticResource NewBrush3}"/>
    <Setter Property="ForegroundActiveStyle" Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igDP:XamDataGrid}, ResourceId=GrayForegroundStyle}}" />
    <Setter Property="ForegroundSelectedStyle" Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igDP:XamDataGrid}, ResourceId=GrayForegroundStyle}}" />
    <Setter Property="ForegroundHoverStyle" Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igDP:XamDataGrid}, ResourceId=GrayForegroundStyle}}" />
    <Setter Property="BorderThickness" Value="0,0,0,1"/>
    <Setter Property="BorderBrush" Value="{StaticResource Brush_1003}"/>
    <Setter Property="CornerRadius" Value="0,0,0,0"/>
  </Style>

  <!-- _________________________ SummaryButton ______________________________________ -->
  <Style TargetType="{x:Type igDP:SummaryButton}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type igDP:SummaryButton}">
          <Grid Visibility="Visible" x:Name="grid">
            <StackPanel
  HorizontalAlignment="Center"
  VerticalAlignment="Stretch"
  Orientation="Horizontal"
  Margin="0,0,3,0"
  Background="{StaticResource Brush_1004}"
  x:Name="stackPanel"
  Visibility="Visible">
              <Border
  Width="1"
  Margin="0,1,5,2"
  BorderThickness="1,0,0,0"
  Height="Auto"
  x:Name="border1"
  BorderBrush="{StaticResource Brush_1005}"/>
              <Path
  Stretch="Fill"
  Data="M 0,0 C0,0 5,0 5,0 5,0 5,1 5,1 5,1 2,1 2,1 2,1 4,3.5 4,3.5 4,3.5 2,6 2,6 2,6 5,6 5,6 5,6 5,7 5,7 5,7 0,7 0,7 0,7 0,6 0,6 0,6 2,3.5625 2,3.5625 2,3.5625 0,1 0,1 0,1 0,0 0,0 z"
  Fill="{TemplateBinding Foreground}"
  Width="5"
  Height="7"
  d:LayoutOverrides="Width, Height"
  x:Name="path"
  Stroke="{x:Null}"
  HorizontalAlignment="Stretch"
  StrokeThickness="0"/>
            </StackPanel>
            <Popup
  x:Name="PART_Popup"
  AllowsTransparency="True"
  Placement="Bottom"
  VerticalOffset="2"
  HorizontalOffset="0"
  IsOpen="{Binding Path=IsChecked, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
  StaysOpen="False"
  PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}"
  SnapsToDevicePixels="True">
              <!-- JJD 3/5/09 - TFS5971/BR32606 - set focus scope to true and navigation settings-->
              <Border
  BorderBrush="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igDP:XamDataGrid}, ResourceId=SummaryButtonPopupBorder}}"
  x:Name="border"
  Background="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igDP:XamDataGrid}, ResourceId=SummaryButtonPopupBackground}}"
                  KeyboardNavigation.DirectionalNavigation="Contained"
                  KeyboardNavigation.TabNavigation="Contained"
                  FocusManager.IsFocusScope="True"
  BorderThickness="1,1,1,1"
  CornerRadius="3,3,3,3">
                <Grid Width="Auto" Height="Auto">
                  <Border
  Width="28"
  HorizontalAlignment="Left"
  BorderThickness="0,0,1,0"
  Background="{StaticResource Brush_1006}"
  BorderBrush="{StaticResource Brush_1008}"
  CornerRadius="3,0,0,0"/>
                  <StackPanel Margin="5,5,5,5">
                    <igDP:SummaryCalculatorSelectionControl x:Name="CalculatorSelectionControl" Field="{TemplateBinding Field}"/>
                    <Grid Width="Auto" Height="Auto">
                      <Border Margin="-5,0,-5,-5" Background="{StaticResource Brush_1007}" CornerRadius="0,0,3,3"/>
                      <Rectangle
  Fill="{StaticResource Brush_1009}"
  Stroke="{x:Null}"
  Width="Auto"
  Height="1"
  x:Name="rectangle1"
  Margin="-5,1,-5,0"
  VerticalAlignment="Top"/>
                      <StackPanel
  Orientation="Horizontal"
  HorizontalAlignment="Right"
  Margin="0,5,0,0"
  d:LayoutOverrides="Width">
                        <Button
  x:Name="RowSummaryOkButton"
  Content="Ok"
  IsDefault="True"
  Height="12"
  Margin="0,0,5,0"
  Style="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igDP:XamDataGrid}, ResourceId=RowSummaryOkButton}}"
  Width="13"/>
                        <!-- JJD 3/5/09 - TFS5971/BR32606 - set IsCancel to True-->
                        <!-- SSP 5/12/09 TFS16824 Changed the name of the button from "CancelButton" to "RowSummaryCancelButton" to be consistent with other themes.-->
                        <Button
  x:Name="RowSummaryCancelButton"
  Content="Cancel"
              IsCancel="True"
  Height="12"
  Style="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igDP:XamDataGrid}, ResourceId=RowSummaryCancelButton}}"
  Width="13"/>
                      </StackPanel>
                    </Grid>
                  </StackPanel>
                </Grid>
              </Border>
            </Popup>
          </Grid>
          <ControlTemplate.Triggers>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="Background" Value="{x:Null}"/>
    <Setter Property="Foreground" Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igDP:XamDataGrid}, ResourceId=SummaryButtonForeground}}"/>
    <Setter Property="SnapsToDevicePixels" Value="True"/>
  </Style>

</ResourceDictionary>