<ResourceDictionary
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
	xmlns:d="http://schemas.microsoft.com/expression/interactivedesigner/2006"
	mc:Ignorable="d"
	xmlns:igWindows="http://infragistics.com/Windows"
	xmlns:editors="http://infragistics.com/Editors"
	xmlns:igDP="http://infragistics.com/DataPresenter"
	xmlns:themes="http://infragistics.com/Themes"
    xmlns:igThemes="http://infragistics.com/Themes"
    >
  <ResourceDictionary.MergedDictionaries>
    <ResourceDictionary Source="DataPresenterGeneric_Express.xaml" />
    <ResourceDictionary Source="DataPresenterOnyx_Brushes.xaml" />
  </ResourceDictionary.MergedDictionaries>

  <!--SSP 10/16/09 TFS19525 - Added StringFormatConverter-->
  <igWindows:StringFormatConverter x:Key="stringFormatConverter" />

  <!-- *********************************  ScrollBars  ********************************* -->
  <Style x:Key="VerticalScrollBarButton" TargetType="{x:Type RepeatButton}">
    <Setter Property="OverridesDefaultStyle" Value="true"/>
    <Setter Property="Focusable" Value="false"/>
    <Setter Property="IsTabStop" Value="false"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type RepeatButton}">
          <Grid Background="Transparent">
            <Border Visibility="Collapsed" x:Name="ButtonBackground" Background="{StaticResource RepeatBtnHoverBackgroundBrush}" BorderBrush="{StaticResource RepeatBtnHoverBorderBrush}" BorderThickness="1" CornerRadius="1">
              <Rectangle x:Name="highlight" Stroke="{StaticResource RepeatBtnHoverHighlightBrush}" Visibility="Collapsed"/>
            </Border>
            <ContentPresenter/>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
              <Setter Property="Visibility" TargetName="ButtonBackground" Value="Visible"/>
              <Setter Property="Visibility" TargetName="highlight" Value="Visible"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
              <Setter Property="Visibility" TargetName="ButtonBackground" Value="Visible"/>
              <Setter Property="Background" TargetName="ButtonBackground" Value="{StaticResource RepeatBtnPressedBackgroundBrush}"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="HorizScrollBarButton" TargetType="{x:Type RepeatButton}">
    <Setter Property="OverridesDefaultStyle" Value="true"/>
    <Setter Property="Focusable" Value="false"/>
    <Setter Property="IsTabStop" Value="false"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type RepeatButton}">
          <Grid Background="Transparent">
            <Border Visibility="Collapsed" x:Name="ButtonBackground" Background="{StaticResource HorizRepeatBtnHoverBackgroundBrush}" BorderBrush="{StaticResource HorizRepeatBtnHoverBorderBrush}" BorderThickness="1" CornerRadius="1">
              <Rectangle Visibility="Collapsed" x:Name="highlight" Stroke="{StaticResource HorizRepeatBtnHoverHighlightBrush}"/>
            </Border>
            <ContentPresenter/>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
              <Setter Property="Visibility" TargetName="ButtonBackground" Value="Visible"/>
              <Setter Property="Visibility" TargetName="highlight" Value="Visible"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
              <Setter Property="Visibility" TargetName="ButtonBackground" Value="Visible"/>
              <Setter Property="Background" TargetName="ButtonBackground" Value="{StaticResource HorizRepeatBtnPressedBackgroundBrush}"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="VerticalScrollBarPageButton" TargetType="{x:Type RepeatButton}">
    <Setter Property="OverridesDefaultStyle" Value="true"/>
    <Setter Property="Background" Value="Transparent"/>
    <Setter Property="Focusable" Value="false"/>
    <Setter Property="IsTabStop" Value="false"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type RepeatButton}">
          <Rectangle Fill="{TemplateBinding Background}" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}"/>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="HorizontalScrollBarThumb" TargetType="{x:Type Thumb}">
    <Setter Property="OverridesDefaultStyle" Value="true"/>
    <Setter Property="IsTabStop" Value="false"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Thumb}">
          <Grid Width="Auto" Height="Auto">
            <Rectangle x:Name="ThumbBackground" Stroke="{StaticResource RepeatBtnBorderBrush}" Fill="{StaticResource HorizRepeatBtnNormalBackgroundBrush}" RadiusX="1" RadiusY="1" Margin="0"/>
            <Path Width="7" Height="8" Data="M 0,6 C0,6 0,7 0,7 0,7 8,7 8,7 8,7 8,6 8,6 8,6 0,6 0,6 zM 0,4 C0,4 0,5 0,5 0,5 8,5 8,5 8,5 8,4 8,4 8,4 0,4 0,4 zM 0,2 C0,2 0,3 0,3 0,3 8,3 8,3 8,3 8,2 8,2 8,2 0,2 0,2 zM 0,0 C0,0 0,1 0,1 0,1 8,1 8,1 8,1 8,0 8,0 8,0 0,0 0,0 z" Fill="{StaticResource ScrollBarThumbGlyphDarkBrush}" RenderTransformOrigin="0.5,0.5" Stretch="Uniform">
              <Path.RenderTransform>
                <TransformGroup>
                  <ScaleTransform/>
                  <SkewTransform/>
                  <RotateTransform Angle="90"/>
                  <TranslateTransform/>
                </TransformGroup>
              </Path.RenderTransform>
            </Path>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
              <Setter Property="Fill" TargetName="ThumbBackground" Value="{StaticResource HorizRepeatBtnHoverBackgroundBrush}"/>
              <Setter Property="Stroke" TargetName="ThumbBackground" Value="{StaticResource HorizRepeatBtnHoverBorderBrush}"/>
            </Trigger>
            <Trigger Property="IsDragging" Value="True">
              <Setter Property="Fill" TargetName="ThumbBackground" Value="{StaticResource HorizRepeatBtnPressedBackgroundBrush}"/>
              <Setter Property="Stroke" TargetName="ThumbBackground" Value="{StaticResource HorizRepeatBtnHoverBorderBrush}"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="VerticalScrollBarThumb" TargetType="{x:Type Thumb}">
    <Setter Property="OverridesDefaultStyle" Value="true"/>
    <Setter Property="IsTabStop" Value="false"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Thumb}">
          <Grid Width="Auto" Height="Auto">
            <Rectangle x:Name="ThumbBackground" Stroke="{StaticResource RepeatBtnBorderBrush}" Fill="{StaticResource RepeatBtnNormalBackgroundBrush}" RadiusX="1" RadiusY="1" Margin="0"/>
            <Path Width="7" Height="8" Data="M 0,6 C0,6 0,7 0,7 0,7 8,7 8,7 8,7 8,6 8,6 8,6 0,6 0,6 zM 0,4 C0,4 0,5 0,5 0,5 8,5 8,5 8,5 8,4 8,4 8,4 0,4 0,4 zM 0,2 C0,2 0,3 0,3 0,3 8,3 8,3 8,3 8,2 8,2 8,2 0,2 0,2 zM 0,0 C0,0 0,1 0,1 0,1 8,1 8,1 8,1 8,0 8,0 8,0 0,0 0,0 z" Fill="{StaticResource ScrollBarThumbGlyphDarkBrush}" RenderTransformOrigin="0.5,0.5" Stretch="Uniform">
            </Path>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
              <Setter Property="Fill" TargetName="ThumbBackground" Value="{StaticResource RepeatBtnHoverBackgroundBrush}"/>
              <Setter Property="Stroke" TargetName="ThumbBackground" Value="{StaticResource RepeatBtnHoverBorderBrush}"/>
            </Trigger>
            <Trigger Property="IsDragging" Value="True">
              <Setter Property="Fill" TargetName="ThumbBackground" Value="{StaticResource RepeatBtnPressedBackgroundBrush}"/>
              <Setter Property="Stroke" TargetName="ThumbBackground" Value="{StaticResource RepeatBtnHoverBorderBrush}"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="HorizontalScrollBarPageButton" TargetType="{x:Type RepeatButton}">
    <Setter Property="OverridesDefaultStyle" Value="true"/>
    <Setter Property="Background" Value="Transparent"/>
    <Setter Property="Focusable" Value="false"/>
    <Setter Property="IsTabStop" Value="false"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type RepeatButton}">
          <Rectangle Fill="{TemplateBinding Background}" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}"/>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="OnyxScrollbar" TargetType="{x:Type ScrollBar}">
    <Setter Property="Background" Value="{StaticResource ScrollBarTrackBrush}"/>
    <Setter Property="Stylus.IsPressAndHoldEnabled" Value="false"/>
    <Setter Property="Stylus.IsFlicksEnabled" Value="false"/>
    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
    <Setter Property="Width" Value="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"/>
    <Setter Property="MinWidth" Value="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ScrollBar}">
          <Grid x:Name="Bg" SnapsToDevicePixels="true">
            <Grid.RowDefinitions>
              <RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}"/>
              <RowDefinition Height="0.00001*"/>
              <RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}"/>
            </Grid.RowDefinitions>
            <Rectangle Grid.RowSpan="3" StrokeThickness="1" Fill="{StaticResource ScrollBarTrackBrush}" Stroke="{StaticResource ScrollBarTrackBorderBrush}" Margin="0"/>
            <RepeatButton Style="{StaticResource VerticalScrollBarButton}" IsEnabled="{TemplateBinding IsMouseOver}" Command="{x:Static ScrollBar.LineUpCommand}">
              <Path Width="8" Height="4" Data="M 0,3 C0,3 0,4 0,4 0,4 8,4 8,4 8,4 8,3 8,3 8,3 7,3 7,3 7,3 7,2 7,2 7,2 6,2 6,2 6,2 6,1 6,1 6,1 5,1 5,1 5,1 5,0 5,0 5,0 3,0 3,0 3,0 3,1 3,1 3,1 2,1 2,1 2,1 2,2 2,2 2,2 1,2 1,2 1,2 1,3 1,3 1,3 0,3 0,3 z" Fill="{StaticResource ScrollBarGlyphFillBrush}"/>
            </RepeatButton>
            <Track x:Name="PART_Track" IsEnabled="{TemplateBinding IsMouseOver}" Grid.Row="1" IsDirectionReversed="true">
              <Track.DecreaseRepeatButton>
                <RepeatButton Style="{StaticResource VerticalScrollBarPageButton}" Command="{x:Static ScrollBar.PageUpCommand}"/>
              </Track.DecreaseRepeatButton>
              <Track.IncreaseRepeatButton>
                <RepeatButton Style="{StaticResource VerticalScrollBarPageButton}" Command="{x:Static ScrollBar.PageDownCommand}"/>
              </Track.IncreaseRepeatButton>
              <Track.Thumb>
                <Thumb Style="{StaticResource VerticalScrollBarThumb}"/>
              </Track.Thumb>
            </Track>
            <RepeatButton Style="{StaticResource VerticalScrollBarButton}" IsEnabled="{TemplateBinding IsMouseOver}" Grid.Row="2" Command="{x:Static ScrollBar.LineDownCommand}">
              <Path Width="8" Height="4" Data="M 0,0 C0,0 0,1 0,1 0,1 1,1 1,1 1,1 1,2 1,2 1,2 2,2 2,2 2,2 2,3 2,3 2,3 3,3 3,3 3,3 3,4 3,4 3,4 5,4 5,4 5,4 5,3 5,3 5,3 6,3 6,3 6,3 6,2 6,2 6,2 7,2 7,2 7,2 7,1 7,1 7,1 8,1 8,1 8,1 8,0 8,0 8,0 0,0 0,0 z" Fill="{StaticResource ScrollBarGlyphFillBrush}"/>
            </RepeatButton>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="false">
              <Setter Property="Background" TargetName="Bg" Value="{StaticResource ScrollBarDisabledBackground}"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Style.Triggers>
      <Trigger Property="Orientation" Value="Horizontal">
        <Setter Property="Width" Value="Auto"/>
        <Setter Property="MinWidth" Value="0"/>
        <Setter Property="Height" Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}"/>
        <Setter Property="MinHeight" Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}"/>
        <Setter Property="Background" Value="{StaticResource HorizontalScrollBarTrackBrush}"/>
        <Setter Property="Template">
          <Setter.Value>
            <ControlTemplate TargetType="{x:Type ScrollBar}">
              <Grid x:Name="Bg" SnapsToDevicePixels="true">
                <Grid.ColumnDefinitions>
                  <ColumnDefinition MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}"/>
                  <ColumnDefinition Width="0.00001*"/>
                  <ColumnDefinition MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}"/>
                </Grid.ColumnDefinitions>
                <Rectangle StrokeThickness="1" Fill="{StaticResource ScrollBarTrackBrush}" Stroke="{StaticResource ScrollBarTrackBorderBrush}" Margin="0" Grid.ColumnSpan="3"/>
                <RepeatButton Style="{StaticResource HorizScrollBarButton}" IsEnabled="{TemplateBinding IsMouseOver}" Command="{x:Static ScrollBar.LineLeftCommand}">
                  <Path Width="4" Height="8" Data="M 4,0 C4,0 3,0 3,0 3,0 3,1 3,1 3,1 2,1 2,1 2,1 2,2 2,2 2,2 1,2 1,2 1,2 1,3 1,3 1,3 0,3 0,3 0,3 0,5 0,5 0,5 1,5 1,5 1,5 1,6 1,6 1,6 2,6 2,6 2,6 2,7 2,7 2,7 3,7 3,7 3,7 3,8 3,8 3,8 4,8 4,8 4,8 4,0 4,0 z" Fill="{StaticResource ScrollBarGlyphFillBrush}" Stretch="Fill"/>
                </RepeatButton>
                <Track x:Name="PART_Track" IsEnabled="{TemplateBinding IsMouseOver}" Grid.Column="1">
                  <Track.DecreaseRepeatButton>
                    <RepeatButton Style="{StaticResource HorizontalScrollBarPageButton}" Command="{x:Static ScrollBar.PageLeftCommand}"/>
                  </Track.DecreaseRepeatButton>
                  <Track.IncreaseRepeatButton>
                    <RepeatButton Style="{StaticResource HorizontalScrollBarPageButton}" Command="{x:Static ScrollBar.PageRightCommand}"/>
                  </Track.IncreaseRepeatButton>
                  <Track.Thumb>
                    <Thumb Style="{StaticResource HorizontalScrollBarThumb}"/>
                  </Track.Thumb>
                </Track>
                <RepeatButton Style="{StaticResource HorizScrollBarButton}" IsEnabled="{TemplateBinding IsMouseOver}" Grid.Column="2" Command="{x:Static ScrollBar.LineRightCommand}">
                  <Path Width="4" Height="8" Fill="{StaticResource ScrollBarGlyphFillBrush}" Stretch="Fill" Data="M 0,0 C0,0 1,0 1,0 1,0 1,1 1,1 1,1 2,1 2,1 2,1 2,2 2,2 2,2 3,2 3,2 3,2 3,3 3,3 3,3 4,3 4,3 4,3 4,5 4,5 4,5 3,5 3,5 3,5 3,6 3,6 3,6 2,6 2,6 2,6 2,7 2,7 2,7 1,7 1,7 1,7 1,8 1,8 1,8 0,8 0,8 0,8 0,0 0,0 z"/>
                </RepeatButton>
              </Grid>
              <ControlTemplate.Triggers>
                <Trigger Property="IsEnabled" Value="false">
                  <Setter Property="Background" TargetName="Bg" Value="{StaticResource ScrollBarDisabledBackground}"/>
                </Trigger>
              </ControlTemplate.Triggers>
            </ControlTemplate>
          </Setter.Value>
        </Setter>
      </Trigger>
    </Style.Triggers>
  </Style>
  <Style TargetType="{x:Type ScrollBar}" BasedOn="{StaticResource OnyxScrollbar}"/>

  <Style x:Key="OnyxScrollViewer" TargetType="{x:Type ScrollViewer}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ScrollViewer}">
          <Grid x:Name="Grid" Background="{TemplateBinding Background}">
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="*"/>
              <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
              <RowDefinition Height="*"/>
              <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <Rectangle x:Name="Corner" Grid.Column="1" Fill="{StaticResource HorizontalScrollBarTrackBrush}" Grid.Row="1"/>
            <ScrollContentPresenter x:Name="PART_ScrollContentPresenter" CanContentScroll="{TemplateBinding CanContentScroll}" CanHorizontallyScroll="False" CanVerticallyScroll="False" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Grid.Column="0" Margin="{TemplateBinding Padding}" Grid.Row="0"/>
            <ScrollBar x:Name="PART_VerticalScrollBar" AutomationProperties.AutomationId="VerticalScrollBar" Cursor="Arrow" Grid.Column="1" Maximum="{TemplateBinding ScrollableHeight}" Minimum="0" Grid.Row="0" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportHeight}" Style="{StaticResource OnyxScrollbar}"/>
            <ScrollBar x:Name="PART_HorizontalScrollBar" AutomationProperties.AutomationId="HorizontalScrollBar" Cursor="Arrow" Grid.Column="0" Maximum="{TemplateBinding ScrollableWidth}" Minimum="0" Orientation="Horizontal" Grid.Row="1" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportWidth}" Style="{StaticResource OnyxScrollbar}"/>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="{x:Type ScrollViewer}" BasedOn="{StaticResource OnyxScrollViewer}"/>

  <!-- _________________________ CellValuePresenter __________________________________________ -->
  <Style TargetType="{x:Type igDP:CellValuePresenter}" BasedOn="{x:Static themes:DataPresenterGeneric.CellValuePresenter}">
    <Setter Property="BackgroundActive">
      <Setter.Value>
        <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
          <GradientStop Offset="0" Color="#FFFF9900"/>
          <GradientStop Color="#00FFFFFF" Offset="1"/>
        </LinearGradientBrush>
      </Setter.Value>
    </Setter>
    <Setter Property="BorderActiveBrush" Value="#00666666" />
    <Setter Property="BackgroundSelected">
      <Setter.Value>
        <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
          <GradientStop Offset="0" Color="#B2FFFFFF"/>
          <GradientStop Offset="1.1" Color="#B2FF9900"/>
        </LinearGradientBrush>
      </Setter.Value>
    </Setter>
    <Setter Property="BorderPrimaryBrush" Value="#00666666" />
    <Setter Property="ForegroundPrimaryStyle">
      <Setter.Value>
        <Style>
          <Setter Property="TextBlock.Foreground" Value="#FF333333" />
          <Setter Property="TextBlock.FontWeight" Value="Bold" />
        </Style>
      </Setter.Value>
    </Setter>
    <Setter Property="ForegroundHoverStyle">
      <Setter.Value>
        <Style>
          <Setter Property="TextBlock.Foreground" Value="#ff000000" />
        </Style>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- _________________________ TreeCellValuePresenter __________________________________________ -->
  <Style TargetType="{x:Type igDP:TreeCellValuePresenter}" BasedOn="{x:Static themes:DataPresenterGeneric.TreeCellValuePresenter}">
    <Setter Property="BackgroundActive">
      <Setter.Value>
        <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
          <GradientStop Offset="0" Color="#FFFF9900"/>
          <GradientStop Color="#00FFFFFF" Offset="1"/>
        </LinearGradientBrush>
      </Setter.Value>
    </Setter>
    <Setter Property="BorderActiveBrush" Value="#00666666" />
    <Setter Property="BackgroundSelected">
      <Setter.Value>
        <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
          <GradientStop Offset="0" Color="#B2FFFFFF"/>
          <GradientStop Offset="1.1" Color="#B2FF9900"/>
        </LinearGradientBrush>
      </Setter.Value>
    </Setter>
    <Setter Property="BorderPrimaryBrush" Value="#00666666" />
    <Setter Property="ForegroundPrimaryStyle">
      <Setter.Value>
        <Style>
          <Setter Property="TextBlock.Foreground" Value="#FF333333" />
          <Setter Property="TextBlock.FontWeight" Value="Bold" />
        </Style>
      </Setter.Value>
    </Setter>
    <Setter Property="ForegroundHoverStyle">
      <Setter.Value>
        <Style>
          <Setter Property="TextBlock.Foreground" Value="#ff000000" />
        </Style>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- _________________________ DataRecordPresenter __________________________________________ -->
  <Style TargetType="{x:Type igDP:DataRecordPresenter}" BasedOn="{x:Static themes:DataPresenterGeneric.DataRecordPresenter}">
    <Setter Property="HeaderAreaBackground" Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igDP:XamDataGrid}, ResourceId=LabelBackground}}"/>
  </Style>

  <!-- _________________________ DataRecordCellArea __________________________________________ -->
  <Style TargetType="{x:Type igDP:DataRecordCellArea}" BasedOn="{x:Static themes:DataPresenterGeneric.DataRecordCellArea}">
    <Setter Property="BackgroundHover">
      <Setter.Value>
        <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
          <GradientStop Offset="0" Color="#CCFFFFFF"/>
          <GradientStop Offset="1" Color="#CCFF9900"/>
        </LinearGradientBrush>
      </Setter.Value>
    </Setter>
    <Setter Property="BorderHoverBrush" Value="#FFCCCCCC" />
    <Setter Property="BackgroundActive">
      <Setter.Value>
        <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
          <GradientStop Offset="0" Color="#B2FFFFFF"/>
          <GradientStop Offset="1" Color="#B2FF9900"/>
        </LinearGradientBrush>
      </Setter.Value>
    </Setter>
    <Setter Property="BorderActiveBrush" Value="#FFCCCCCC" />
    <Setter Property="BackgroundAlternate" Value="#FFEFEFEF" />
    <Setter Property="BackgroundSelected">
      <Setter.Value>
        <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
          <GradientStop Offset="0" Color="#7FFFFFFF"/>
          <GradientStop Offset="1" Color="#7FFF9900"/>
        </LinearGradientBrush>
      </Setter.Value>
    </Setter>
    <Setter Property="BorderSelectedBrush" Value="#FFBBBBBB" />
  </Style>

  <!-- _________________________ ExpanderBar __________________________________________ -->
  <!-- TH 06/11/2008 : Moved from Windows Assembly into DP for washing Purposes					  -->
  <Style TargetType="{x:Type igWindows:ExpanderBar}" BasedOn="{x:Static igThemes:PrimitivesGeneric.ExpanderBar}">
    <Setter Property="Background" Value="{DynamicResource {x:Static igDP:DataPresenterBrushKeys.ExpanderBarBackgroundKey}}" />
    <Setter Property="BackgroundHover" Value="{DynamicResource {x:Static igDP:DataPresenterBrushKeys.ExpanderBarBackgroundHoverKey}}" />
    <Setter Property="BorderBrush" Value="#00FFFFFF" />
    <Setter Property="BorderHoverBrush" Value="#00FFFFFF" />
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="MinHeight" Value="10" />
    <Setter Property="Cursor" Value="Hand" />
    <Setter Property="Focusable" Value="False" />
  </Style>

  <!-- _________________________ GroupByArea __________________________________________ -->
  <Style TargetType="{x:Type igDP:GroupByArea}" BasedOn="{x:Static themes:DataPresenterGeneric.GroupByArea}">
    <Setter Property="Foreground" Value="#000000"/>
  </Style>

  <!-- _________________________ GroupByAreaFieldLabel __________________________________________ -->
  <Style TargetType="{x:Type igDP:GroupByAreaFieldLabel}" BasedOn="{x:Static themes:DataPresenterGeneric.GroupByAreaFieldLabel}">
    <Setter Property="Foreground" Value="#FFFFFFFF" />
    <Setter Property="Background">
      <Setter.Value>
        <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
          <GradientStop Color="#FFfcfcfc" Offset="0" />
          <GradientStop Color="#FF494949" Offset="0.46591042399866" />
          <GradientStop Color="#FF3f3f3f" Offset="0.5097850678733038" />
          <GradientStop Color="#FF2d2d2d" Offset="0.61006996815820413" />
          <GradientStop Color="#FF737373" Offset="0.9861383442265802" />
          <GradientStop Color="#FF939393" Offset="0.9944444298744202" />
          <GradientStop Color="#FF474747" Offset="0.77930073738897343" />
        </LinearGradientBrush>
      </Setter.Value>
    </Setter>
  </Style>

    <!-- ********************************** FieldGroupLabelPresenter Style **********************************-->
    <Style TargetType="{x:Type igDP:FieldGroupLabelPresenter}">
        <Setter Property="Padding" Value="7,4"/>
        <Setter Property="Background" Value="{DynamicResource {x:Static igDP:DataPresenterBrushKeys.FieldGroupLabelBackgroundKey}}"/>
        <Setter Property="InnerBorderBrush" Value="{DynamicResource {x:Static igDP:DataPresenterBrushKeys.FieldGroupLabelInnerBorderKey}}"/>
        <Setter Property="OuterBorderBrush" Value="{DynamicResource {x:Static igDP:DataPresenterBrushKeys.FieldGroupLabelOuterBorderKey}}"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static igDP:DataPresenterBrushKeys.FieldGroupLabelForegroundKey}}"/>
        <Setter Property="HorizontalContentAlignment" Value="{Binding Path=FieldGroup.LabelTextAlignmentResolved, Converter={StaticResource textAlignmentToHorizontalAlignmentConverter}, RelativeSource={x:Static RelativeSource.Self}}"/>
        <Setter Property="ToolTip" Value="{Binding Path=FieldGroup.ToolTip, RelativeSource={x:Static RelativeSource.Self}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type igDP:FieldGroupLabelPresenter}">
                    <Grid x:Name="labelCntr" Background="#00000000">
                        <!-- Background Bar -->
                        <Border
							Width="Auto"
							Height="Auto"
							RenderTransformOrigin="0.5,0.5"
							CornerRadius="{DynamicResource {x:Static igDP:DataPresenterBrushKeys.FieldGroupLabelCornerRadiusKey}}"
							SnapsToDevicePixels="True"
							Background="{TemplateBinding Background}"
							x:Name="background"/>
                        <Border
							BorderBrush="{TemplateBinding OuterBorderBrush}"
							BorderThickness="1"
							CornerRadius="1.55015910897703"
							Background="Transparent"
							Margin="0,0,0,0"
							x:Name="lineOuter"
							Width="Auto"
							Height="Auto"
							SnapsToDevicePixels="True"/>
                        <Border
							BorderBrush="{TemplateBinding InnerBorderBrush}"
							BorderThickness="1"
							CornerRadius="0.550159108977027"
							Background="Transparent"
							Margin="1,1,1,1"
							x:Name="lineInner"
							Width="Auto"
							Height="Auto"
							SnapsToDevicePixels="True"/>
                        <Grid
							Margin="{TemplateBinding Padding}"
							HorizontalAlignment="Stretch"
							VerticalAlignment="Stretch"
							x:Name="labelAndFixedButton">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <igWindows:ExpansionIndicator
								x:Name="ExpansionIndicator"
								Grid.Column="0"
								Visibility="{Binding Path=ExpansionIndicatorVisibility, RelativeSource={RelativeSource TemplatedParent}}"
                                Command="{x:Static igDP:DataPresenterCommands.ToggleFieldGroupIsCollapsed}"
                                CommandParameter="{TemplateBinding FieldGroup}"
                                ToggleMode="Manual"
								IsChecked="{Binding Path=FieldGroup.IsCollapsed, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource complementConverter}}"/>
                            <ContentPresenter
								x:Name="LabelContent"
								Focusable="False"
								Content="{Binding Path=Content, RelativeSource={RelativeSource TemplatedParent}}"
								ContentTemplate="{TemplateBinding ContentTemplate}"
								ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
								Grid.Column="1"
								VerticalAlignment="Center"/>
                            <!-- JM 1/14/09 - Fixed Fields Functionality -->
                            <igDP:FixedFieldButton
								x:Name="FixedButton"
								Field="{TemplateBinding FieldGroup}"
								Visibility="{TemplateBinding FixedButtonVisibility}"
								HorizontalAlignment="Left"
								VerticalAlignment="Center"
								Width="Auto"
								Grid.Column="2"
								Margin="2,0,2,0"
								Opacity="1"/>
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>

                        <!--SSP 6/23/09 - NAS9.2 Field Chooser
							If the label is in a field chooser then hide the sort indicator, filter button and
							summary button. Note that the fixed button is collapsed in code in label presenter
							by coercing the FixedButtonVisibility property to be Collapsed.-->
                        <Trigger Property="IsInFieldChooser" Value="true">
                            <Setter TargetName="FixedButton" Property="Visibility" Value="Collapsed"/>
                            <Setter TargetName="labelCntr" Property="Margin" Value="0,0,0,0"/>
                        </Trigger>

                        <Trigger Property="IsDragIndicator" Value="True">
                            <Setter Property="Padding" Value="7,4"/>
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>