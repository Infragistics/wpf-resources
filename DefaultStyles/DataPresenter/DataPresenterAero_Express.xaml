<ResourceDictionary
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:igWindows="http://infragistics.com/Windows"
	xmlns:editors="http://infragistics.com/Editors"
	xmlns:igDP="http://infragistics.com/DataPresenter"
	xmlns:themes="http://infragistics.com/Themes"
	xmlns:prim="http://schemas.infragistics.com/xaml/primitives"
	xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
	mc:Ignorable="d"
	xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
	xmlns:igThemes="http://infragistics.com/Themes">

	<ResourceDictionary.MergedDictionaries>
		<ResourceDictionary Source="DataPresenterGeneric_Express.xaml"/>
		<ResourceDictionary Source="DataPresenterAero_Brushes.xaml"/>
	</ResourceDictionary.MergedDictionaries>

	<!-- JJD 3/5/09 - TFS5971/BR32606 - added-->
	<BooleanToVisibilityConverter x:Key="BoolToVisConverter"/>

	<!--SSP 10/16/09 TFS19525 - Added StringFormatConverter-->
	<igWindows:StringFormatConverter x:Key="stringFormatConverter" />

	<Style x:Key="AeroCheckBox" TargetType="{x:Type CheckBox}">
		<Setter Property="SnapsToDevicePixels" Value="true"/>
		<Setter Property="Background" Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igDP:XamDataGrid}, ResourceId=CheckBoxNormalInnerBoxBorderFill}}"/>
		<Setter Property="BorderBrush" Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igDP:XamDataGrid}, ResourceId=CheckBoxNormalOuterBoxBorderFill}}"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type CheckBox}">
					<!-- BulletDecorator is used to provide baseline alignment between the checkmark and the Content -->
					<BulletDecorator Background="Transparent">
						<BulletDecorator.Bullet>
							<StackPanel Width="Auto" Height="Auto" Orientation="Horizontal">
								<Grid Width="13" Height="13">
									<Border x:Name="OuterBox" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igDP:XamDataGrid}, ResourceId=CheckBoxNormalOuterBoxCenterFill}}"/>
									<Border Margin="2,2,2,2" BorderThickness="1,1,1,1" BorderBrush="{TemplateBinding Background}" Background="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igDP:XamDataGrid}, ResourceId=CheckBoxNormalInnerBoxCenterFill}}" x:Name="InnerBox"/>
									<Grid Visibility="Collapsed" Margin="0,0,0,0" x:Name="CheckMark">
										<Path
											Height="9.661"
											Width="10.137"
											Stretch="Fill"
											Opacity="0.8"
											Data="M2.6673452,7.8617508 C2.6673452,7.8617508 5.817048,10.192734 5.817048,10.192734 5.817048,10.192734 9.5967099,4.4942121 9.5967099,4.4942121"
											Stroke="#FFFFFFFF"
											StrokeThickness="3"
											SnapsToDevicePixels="True"
											HorizontalAlignment="Left"
											Margin="1.138,0.965,0,0"
											x:Name="Background"
											VerticalAlignment="Top"/>
										<Path
											Height="8.915"
											Width="8.66"
											Stretch="Fill"
											Opacity="1"
											Data="M1.6839831,7.7438574 C1.6839831,7.7438574 5.8697866,10.85053 5.8697866,10.85053 5.8697866,10.85053 10.540217,1.6301305 10.540217,1.6301305"
											Stroke="#FF4C6198"
											StrokeThickness="2"
											SnapsToDevicePixels="True"
											HorizontalAlignment="Left"
											Margin="1.855,1.465,0,0"
											x:Name="Foreground"
											VerticalAlignment="Top"/>
									</Grid>
								</Grid>
								<ContentPresenter
									RecognizesAccessKey="True"
									Margin="4,0,0,0"
									Width="Auto"
									Height="Auto"/>
							</StackPanel>
						</BulletDecorator.Bullet>
					</BulletDecorator>
					<!-- This uses Visibility to hide and show the CheckMark on IsChecked -->
					<ControlTemplate.Triggers>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsThreeState" Value="True"/>
								<Condition Property="IsChecked" Value="False"/>
							</MultiTrigger.Conditions>
							<Setter Property="Visibility" TargetName="CheckMark" Value="Collapsed"/>
						</MultiTrigger>
						<Trigger Property="IsChecked" Value="True">
							<Setter Property="Visibility" TargetName="CheckMark" Value="Visible"/>
						</Trigger>
						<Trigger Property="IsMouseOver" Value="true">
							<Setter Property="Background" Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igDP:XamDataGrid}, ResourceId=CheckBoxHoverInnerBoxBorderFill}}"/>
							<Setter Property="Background" TargetName="InnerBox" Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igDP:XamDataGrid}, ResourceId=CheckBoxHoverInnerBoxCenterFill}}"/>
							<Setter Property="Background" TargetName="OuterBox" Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igDP:XamDataGrid}, ResourceId=CheckBoxHoverOuterBoxCenterFill}}"/>
						</Trigger>
						<Trigger Property="IsPressed" Value="true">
							<Setter Property="Background" Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igDP:XamDataGrid}, ResourceId=CheckBoxPressedInnerBoxCenterFill}}" TargetName="InnerBox"/>
							<Setter Property="BorderBrush" Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igDP:XamDataGrid}, ResourceId=CheckBoxPressedInnerBoxBorderFill}}" TargetName="InnerBox"/>
							<Setter Property="Background" TargetName="OuterBox" Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igDP:XamDataGrid}, ResourceId=CheckBoxHoverOuterBoxCenterFill}}"/>
						</Trigger>
						<Trigger Property="IsEnabled" Value="false">
							<Setter Property="Background" Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igDP:XamDataGrid}, ResourceId=DisabledBackgroundBrush}}" TargetName="OuterBox"/>
							<Setter Property="BorderBrush" Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igDP:XamDataGrid}, ResourceId=DisabledBorderBrush}}" TargetName="OuterBox"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="BorderThickness" Value="1,1,1,1"/>
	</Style>

	<!-- _________________________ LabelContent Style______________________________________ -->
	<Style x:Key="LabelContentStyle" TargetType="{x:Type ContentControl}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ContentControl}">
					<ContentPresenter
						Margin="{TemplateBinding Padding}"
						Content="{Binding Path=Content, RelativeSource={RelativeSource TemplatedParent}}"
						ContentTemplate="{TemplateBinding ContentTemplate}"
						ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"/>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- _________________________ BlackForegroundStyle ______________________________________ -->
	<Style x:Key="{ComponentResourceKey {x:Type igDP:XamDataGrid}, BlackForegroundStyle}">
		<Setter Property="TextBlock.Foreground" Value="#FF000000"/>
	</Style>
	<!-- RecordSeparatorStyle-->
	<Style x:Key="{ComponentResourceKey {x:Type igDP:XamDataGrid}, RecordSeparatorStyle}" TargetType="{x:Type Border}">
		<Setter Property="Background" Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igDP:XamDataGrid}, ResourceId=LabelBackground}}"/>
		<Setter Property="HorizontalAlignment" Value="Stretch"/>
		<Setter Property="VerticalAlignment" Value="Stretch"/>
		<Setter Property="Height" Value="6"/>
		<Setter Property="BorderThickness" Value="0,1,0,1"/>
		<Setter Property="BorderBrush" Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igDP:XamDataGrid}, ResourceId=LabelOuterBorder}}"/>
	</Style>
	<Style TargetType="{x:Type igWindows:SortIndicator}">
		<Setter Property="Cursor" Value="Hand"/>
		<Setter Property="MinHeight" Value="3.5"/>
		<Setter Property="MinWidth" Value="7"/>
		<Setter Property="Visibility" Value="Visible"/>
		<Setter Property="Background" Value="#FF0000"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type igWindows:SortIndicator}">
					<Polygon
						x:Name="Arrow"
						Points="0,0 8,0 4,4"
						StrokeEndLineCap="Round"
						StrokeStartLineCap="Round"
						StrokeLineJoin="Round"
						VerticalAlignment="Center"
						HorizontalAlignment="Stretch"
						Width="Auto"
						Height="Auto">
						<Polygon.Fill>
							<LinearGradientBrush StartPoint="0.2222222222222222,0.25" EndPoint="0.4444444444444444,0.75">
								<LinearGradientBrush.GradientStops>
									<GradientStopCollection>
										<GradientStop Color="#FF3c596c" Offset="0"/>
										<GradientStop Color="#FFc3e4f5" Offset="0.9944444298744202"/>
									</GradientStopCollection>
								</LinearGradientBrush.GradientStops>
							</LinearGradientBrush>
						</Polygon.Fill>
					</Polygon>
					<ControlTemplate.Triggers>
						<Trigger Property="SortStatus" Value="Descending">
							<Setter Property="Visibility" Value="Visible"/>
						</Trigger>
						<Trigger Property="SortStatus" Value="Ascending">
							<Setter TargetName="Arrow" Property="Points" Value="0,4 8,4 4,0"/>
							<Setter Property="Visibility" Value="Visible"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="HorizontalAlignment" Value="Center"/>
		<Setter Property="VerticalAlignment" Value="Center"/>
		<Setter Property="Margin" Value="0,1,0,0"/>
	</Style>

	<!-- _________________________ CellValuePresenter __________________________________________ -->
	<Style TargetType="{x:Type igDP:CellValuePresenter}" BasedOn="{x:Static themes:DataPresenterGeneric.CellValuePresenter}">
		<Setter Property="BorderBrush" Value="#FFEDEDED"/>
		<Setter Property="BackgroundHover" Value="#00EDEDED"/>
		<Setter Property="BorderHoverBrush" Value="#FFEDEDED"/>
		<Setter Property="BackgroundActive">
			<Setter.Value>
				<LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
					<GradientStop Color="#FF8BD2F5" Offset="0"/>
					<GradientStop Color="#4CFFFFFF" Offset="1"/>
				</LinearGradientBrush>
			</Setter.Value>
		</Setter>
		<Setter Property="BorderActiveBrush" Value="#FFEDEDED"/>
		<Setter Property="BackgroundSelected">
			<Setter.Value>
				<LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
					<GradientStop Offset="0" Color="#FFF6FBFD"/>
					<GradientStop Offset="0.99" Color="#FFD5EFFC"/>
					<GradientStop Offset="0.99" Color="#FFD5EFFC"/>
					<GradientStop Color="#FFffffff" Offset="1"/>
				</LinearGradientBrush>
			</Setter.Value>
		</Setter>
		<Setter Property="BorderSelectedBrush" Value="#FF99DEFD"/>
		<Setter Property="BackgroundFieldSelected">
			<Setter.Value>
				<LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
					<GradientStop Offset="0" Color="#FFF6FBFD"/>
					<GradientStop Offset="0.99" Color="#FFD5EFFC"/>
					<GradientStop Offset="0.99" Color="#FFD5EFFC"/>
					<GradientStop Color="#FFffffff" Offset="1"/>
				</LinearGradientBrush>
			</Setter.Value>
		</Setter>
		<Setter Property="BorderFieldSelectedBrush" Value="#FF99DEFD"/>
		<Setter Property="ForegroundAlternateStyle" Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igDP:XamDataGrid}, ResourceId=BlackForegroundStyle}}"/>
		<Setter Property="ForegroundPrimaryStyle">
			<Setter.Value>
				<Style>
					<Setter Property="TextBlock.Foreground" Value="#FF333333"/>
					<Setter Property="TextBlock.FontWeight" Value="Bold"/>
				</Style>
			</Setter.Value>
		</Setter>
		<Setter Property="ForegroundHoverStyle" Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igDP:XamDataGrid}, ResourceId=BlackForegroundStyle}}"/>
		<Setter Property="BorderThickness" Value="0,0,1,0"/>
		<Setter Property="Margin" Value="0,0,0,0"/>
		<Setter Property="Padding" Value="2,0,2,0"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type igDP:CellValuePresenter}">
					<igWindows:CardPanel>
						<!-- [JM 06-06-07] This element is not being used so I am commenting it out.  Its Visibility property is initialized to Collapsed and the IsSelected
                               trigger below has commented out the line that sets the Visibility to Visible. Checked with Grant on this and he feels it is left over
                               from early styling efforts and can be removed. -->
						<!--<Rectangle x:Name="LeftBorder"
							Fill="#FFBBBBBB"
							Width="1"
							Margin="0,1,0,0"
							HorizontalAlignment="Left"
							VerticalAlignment="Stretch"
							Visibility="Collapsed" />-->
						<Border
							x:Name="MainBorder"
							CornerRadius="{TemplateBinding CornerRadius}"
							BorderThickness="{TemplateBinding BorderThickness}"
							BorderBrush="{TemplateBinding BorderBrush}"
							Background="{TemplateBinding Background}"/>
						<Rectangle
							x:Name="Active"
							Fill="{TemplateBinding BackgroundActive}"
							HorizontalAlignment="Stretch"
							VerticalAlignment="Stretch"
							Width="Auto"
							Height="Auto"
							SnapsToDevicePixels="True"
							Opacity="1"
							Visibility="Collapsed"
							StrokeThickness="1"
							Stroke="{TemplateBinding BorderActiveBrush}"/>
						<ContentPresenter
							x:Name="PART_EditorSite"
							HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
							VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
							Margin="{TemplateBinding Padding}"
							Style="{TemplateBinding ForegroundStyle}"/>
					</igWindows:CardPanel>
					<ControlTemplate.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=IsAlternate, RelativeSource={RelativeSource Self}}" Value="True"/>
                                <Condition Binding="{Binding Path=Record.RecordType, RelativeSource={RelativeSource Self}}" Value="DataRecord"/>
                                <Condition Binding="{Binding Path=Record.IsAddRecord, RelativeSource={RelativeSource Self}}" Value="False"/>
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="PART_EditorSite" Property="Style" Value="{Binding Path=ForegroundAlternateStyle, RelativeSource={RelativeSource TemplatedParent}}"/>
                        </MultiDataTrigger>
                        
						<!-- JJD 4/30/09 - TFS17157 use new IsMouseOverRecord property -->
						<Trigger Property="IsMouseOverRecord" Value="True">
							<!--<Setter Property="Padding" Value="2,0,3,0"/>-->
						</Trigger>
						<!-- JJD 4/30/09 - TFS17157 use new IsRecordSelected property -->
						<Trigger Property="IsRecordSelected" Value="True">
							<Setter Property="BorderThickness" Value="0,0,1,0"/>
							<Setter Property="Margin" Value="0,0,0,0"/>
              <!-- JM 01-09-13 TFS129956 Not sure why we were setting the Padding to 2,0,3,0, but this is what is causing the problem 
              noted in the bug. -->
							<!--<Setter Property="Padding" Value="2,0,3,0"/>-->
							<Setter Property="Padding" Value="2,0,2,0"/>
						</Trigger>
						<!-- HighlightAsPrimary -->
						<Trigger Property="HighlightAsPrimary" Value="true">
							<Setter Property="Background" Value="{Binding Path=BackgroundPrimary, RelativeSource={RelativeSource Self}}"/>
							<Setter Property="BorderBrush" Value="{Binding Path=BorderPrimaryBrush, RelativeSource={RelativeSource Self}}"/>
							<Setter TargetName="PART_EditorSite" Property="Style" Value="{Binding Path=ForegroundPrimaryStyle, RelativeSource={RelativeSource TemplatedParent}}"/>
						</Trigger>
						<!-- IsFieldSelected -->
						<Trigger Property="IsFieldSelected" Value="true">
							<Setter Property="Background" Value="{Binding Path=BackgroundFieldSelected, RelativeSource={RelativeSource Self}}"/>
							<Setter Property="BorderBrush" Value="{Binding Path=BorderFieldSelectedBrush, RelativeSource={RelativeSource Self}}"/>
							<Setter TargetName="PART_EditorSite" Property="Style" Value="{Binding Path=ForegroundFieldSelectedStyle, RelativeSource={RelativeSource TemplatedParent}}"/>
							<Setter Property="CornerRadius" Value="4"/>
							<Setter Property="BorderThickness" Value="1,1,1,1"/>
						</Trigger>
						<!-- IsSelected -->
						<Trigger Property="IsSelected" Value="true">
							<Setter Property="Background" Value="{Binding Path=BackgroundSelected, RelativeSource={RelativeSource Self}}"/>
							<Setter Property="BorderBrush" Value="{Binding Path=BorderSelectedBrush, RelativeSource={RelativeSource Self}}"/>
							<Setter TargetName="PART_EditorSite" Property="Style" Value="{Binding Path=ForegroundSelectedStyle, RelativeSource={RelativeSource TemplatedParent}}"/>
							<Setter Property="CornerRadius" Value="4"/>
							<Setter Property="BorderThickness" Value="1,1,1,1"/>
						</Trigger>
						<!-- IsActive -->
						<Trigger Property="IsActive" Value="true">
							<Setter TargetName="PART_EditorSite" Property="Style" Value="{Binding Path=ForegroundActiveStyle, RelativeSource={RelativeSource TemplatedParent}}"/>
							<Setter Property="Visibility" TargetName="Active" Value="Visible"/>
                            <!-- SS 10/23/15 TFS208100 Set the Background to Transparent, so only the ActiveBackground color could be applied when the cell is active-->
                            <Setter Property="Background" Value="Transparent"/>
						</Trigger>
						<!-- IsMouseOver -->
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsMouseOver" Value="True"/>
								<Condition Property="IsSelected" Value="False"/>
								<Condition Property="IsFieldSelected" Value="False"/>
							</MultiTrigger.Conditions>
							<Setter Property="Background" Value="{Binding Path=BackgroundHover, RelativeSource={RelativeSource Self}}"/>
							<Setter Property="BorderBrush" Value="{Binding Path=BorderHoverBrush, RelativeSource={RelativeSource Self}}"/>
							<Setter TargetName="PART_EditorSite" Property="Style" Value="{Binding Path=ForegroundHoverStyle, RelativeSource={RelativeSource TemplatedParent}}"/>
						</MultiTrigger>
						<!-- Field.IsFixedStateChanging    JM 01-22-09 NA 9.1 FixedFields   -->
						<DataTrigger Binding="{Binding Path=Field.IsFixedStateChanging, RelativeSource={RelativeSource Self}}" Value="True">
							<Setter Property="Background" Value="#AA8DBAEB"/>
							<Setter Property="BorderBrush" Value="#AA8DBAEB"/>
						</DataTrigger>
						<!--SSP 5/27/09 NAS9.2 IDataErrorInfo Support-->
						<Trigger Property="IsDataErrorTemplateActive" Value="true">
							<Setter TargetName="PART_EditorSite" Property="ContentTemplate" Value="{DynamicResource {x:Static igDP:DataPresenterBase.DataErrorContentTemplateKey}}" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- _________________________ TreeCellValuePresenter __________________________________________ -->
	<Style TargetType="{x:Type igDP:TreeCellValuePresenter}" BasedOn="{x:Static themes:DataPresenterGeneric.TreeCellValuePresenter}">
		<Setter Property="BorderBrush" Value="#FFEDEDED"/>
		<Setter Property="BackgroundHover" Value="#00EDEDED"/>
		<Setter Property="BorderHoverBrush" Value="#FFEDEDED"/>
		<Setter Property="BackgroundActive">
			<Setter.Value>
				<LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
					<GradientStop Color="#FF8BD2F5" Offset="0"/>
					<GradientStop Color="#4CFFFFFF" Offset="1"/>
				</LinearGradientBrush>
			</Setter.Value>
		</Setter>
		<Setter Property="BorderActiveBrush" Value="#FFEDEDED"/>
		<Setter Property="BackgroundSelected">
			<Setter.Value>
				<LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
					<GradientStop Offset="0" Color="#FFF6FBFD"/>
					<GradientStop Offset="0.99" Color="#FFD5EFFC"/>
					<GradientStop Offset="0.99" Color="#FFD5EFFC"/>
					<GradientStop Color="#FFffffff" Offset="1"/>
				</LinearGradientBrush>
			</Setter.Value>
		</Setter>
		<Setter Property="BorderSelectedBrush" Value="#FF99DEFD"/>
		<Setter Property="BackgroundFieldSelected">
			<Setter.Value>
				<LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
					<GradientStop Offset="0" Color="#FFF6FBFD"/>
					<GradientStop Offset="0.99" Color="#FFD5EFFC"/>
					<GradientStop Offset="0.99" Color="#FFD5EFFC"/>
					<GradientStop Color="#FFffffff" Offset="1"/>
				</LinearGradientBrush>
			</Setter.Value>
		</Setter>
		<Setter Property="BorderFieldSelectedBrush" Value="#FF99DEFD"/>
		<Setter Property="ForegroundAlternateStyle" Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igDP:XamDataGrid}, ResourceId=BlackForegroundStyle}}"/>
		<Setter Property="ForegroundPrimaryStyle">
			<Setter.Value>
				<Style>
					<Setter Property="TextBlock.Foreground" Value="#FF333333"/>
					<Setter Property="TextBlock.FontWeight" Value="Bold"/>
				</Style>
			</Setter.Value>
		</Setter>
		<Setter Property="ForegroundHoverStyle" Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igDP:XamDataGrid}, ResourceId=BlackForegroundStyle}}"/>
		<Setter Property="BorderThickness" Value="0,0,1,0"/>
		<Setter Property="Margin" Value="0,0,0,0"/>
		<Setter Property="Padding" Value="2,0,2,0"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type igDP:TreeCellValuePresenter}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="{Binding Path=Indent, RelativeSource={RelativeSource TemplatedParent}}"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Border
							x:Name="MainBorder"
                            Grid.ColumnSpan="3"
							CornerRadius="{TemplateBinding CornerRadius}"
							BorderThickness="{TemplateBinding BorderThickness}"
							BorderBrush="{TemplateBinding BorderBrush}"
							Background="{TemplateBinding Background}"/>
                        <Rectangle
							x:Name="Active"
							Fill="{TemplateBinding BackgroundActive}"
							HorizontalAlignment="Stretch"
							VerticalAlignment="Stretch"
                            Grid.ColumnSpan="3"
							Width="Auto"
							Height="Auto"
							SnapsToDevicePixels="True"
							Opacity="1"
							Visibility="Collapsed"
							StrokeThickness="1"
							Stroke="{TemplateBinding BorderActiveBrush}"/>
                        <igWindows:ExpansionIndicator
								x:Name="PART_Expander"
                                Panel.ZIndex="1"
								Grid.Column="1"
								Visibility="{Binding Path=ExpansionIndicatorVisibility, RelativeSource={RelativeSource TemplatedParent}}"
							    Command="{x:Static igDP:DataPresenterCommands.ToggleRecordIsExpanded}"
							    CommandParameter="{TemplateBinding Record}"
                                VerticalAlignment="Center"
							    ToggleMode="Manual"
								IsChecked="{Binding Path=IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                        <ContentPresenter
							x:Name="PART_EditorSite"
                            Grid.Column="2"
                            IsEnabled="{TemplateBinding IsContentEnabled}"
							HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
							VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
							Margin="{TemplateBinding Padding}"
							Style="{TemplateBinding ForegroundStyle}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=IsAlternate, RelativeSource={RelativeSource Self}}" Value="True"/>
                                <Condition Binding="{Binding Path=Record.RecordType, RelativeSource={RelativeSource Self}}" Value="DataRecord"/>
                                <Condition Binding="{Binding Path=Record.IsAddRecord, RelativeSource={RelativeSource Self}}" Value="False"/>
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="PART_EditorSite" Property="Style" Value="{Binding Path=ForegroundAlternateStyle, RelativeSource={RelativeSource TemplatedParent}}"/>
                        </MultiDataTrigger>
                        
						<!-- JJD 4/30/09 - TFS17157 use new IsMouseOverRecord property -->
						<Trigger Property="IsMouseOverRecord" Value="True">
							<!--<Setter Property="Padding" Value="2,0,3,0"/>-->
						</Trigger>
						<!-- JJD 4/30/09 - TFS17157 use new IsRecordSelected property -->
						<Trigger Property="IsRecordSelected" Value="True">
							<Setter Property="BorderThickness" Value="0,0,1,0"/>
							<Setter Property="Margin" Value="0,0,0,0"/>
              <!-- JM 01-09-13 TFS129956 Not sure why we were setting the Padding to 2,0,3,0, but this is what is causing the problem 
              noted in the bug. -->
							<!--<Setter Property="Padding" Value="2,0,3,0"/>-->
							<Setter Property="Padding" Value="2,0,2,0"/>
						</Trigger>
						<!-- HighlightAsPrimary -->
						<Trigger Property="HighlightAsPrimary" Value="true">
							<Setter Property="Background" Value="{Binding Path=BackgroundPrimary, RelativeSource={RelativeSource Self}}"/>
							<Setter Property="BorderBrush" Value="{Binding Path=BorderPrimaryBrush, RelativeSource={RelativeSource Self}}"/>
							<Setter TargetName="PART_EditorSite" Property="Style" Value="{Binding Path=ForegroundPrimaryStyle, RelativeSource={RelativeSource TemplatedParent}}"/>
						</Trigger>
						<!-- IsFieldSelected -->
						<Trigger Property="IsFieldSelected" Value="true">
							<Setter Property="Background" Value="{Binding Path=BackgroundFieldSelected, RelativeSource={RelativeSource Self}}"/>
							<Setter Property="BorderBrush" Value="{Binding Path=BorderFieldSelectedBrush, RelativeSource={RelativeSource Self}}"/>
							<Setter TargetName="PART_EditorSite" Property="Style" Value="{Binding Path=ForegroundFieldSelectedStyle, RelativeSource={RelativeSource TemplatedParent}}"/>
							<Setter Property="CornerRadius" Value="4"/>
							<Setter Property="BorderThickness" Value="1,1,1,1"/>
						</Trigger>
						<!-- IsSelected -->
						<Trigger Property="IsSelected" Value="true">
							<Setter Property="Background" Value="{Binding Path=BackgroundSelected, RelativeSource={RelativeSource Self}}"/>
							<Setter Property="BorderBrush" Value="{Binding Path=BorderSelectedBrush, RelativeSource={RelativeSource Self}}"/>
							<Setter TargetName="PART_EditorSite" Property="Style" Value="{Binding Path=ForegroundSelectedStyle, RelativeSource={RelativeSource TemplatedParent}}"/>
							<Setter Property="CornerRadius" Value="4"/>
							<Setter Property="BorderThickness" Value="1,1,1,1"/>
						</Trigger>
						<!-- IsActive -->
						<Trigger Property="IsActive" Value="true">
							<Setter TargetName="PART_EditorSite" Property="Style" Value="{Binding Path=ForegroundActiveStyle, RelativeSource={RelativeSource TemplatedParent}}"/>
							<Setter Property="Visibility" TargetName="Active" Value="Visible"/>
						</Trigger>
						<!-- IsMouseOver -->
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsMouseOver" Value="True"/>
								<Condition Property="IsSelected" Value="False"/>
								<Condition Property="IsFieldSelected" Value="False"/>
							</MultiTrigger.Conditions>
							<Setter Property="Background" Value="{Binding Path=BackgroundHover, RelativeSource={RelativeSource Self}}"/>
							<Setter Property="BorderBrush" Value="{Binding Path=BorderHoverBrush, RelativeSource={RelativeSource Self}}"/>
							<Setter TargetName="PART_EditorSite" Property="Style" Value="{Binding Path=ForegroundHoverStyle, RelativeSource={RelativeSource TemplatedParent}}"/>
						</MultiTrigger>
						<!-- Field.IsFixedStateChanging    JM 01-22-09 NA 9.1 FixedFields   -->
						<DataTrigger Binding="{Binding Path=Field.IsFixedStateChanging, RelativeSource={RelativeSource Self}}" Value="True">
							<Setter Property="Background" Value="#AA8DBAEB"/>
							<Setter Property="BorderBrush" Value="#AA8DBAEB"/>
						</DataTrigger>
						<!--SSP 5/27/09 NAS9.2 IDataErrorInfo Support-->
						<Trigger Property="IsDataErrorTemplateActive" Value="true">
							<Setter TargetName="PART_EditorSite" Property="ContentTemplate" Value="{DynamicResource {x:Static igDP:DataPresenterBase.DataErrorContentTemplateKey}}" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- _________________________ DataRecordPresenter __________________________________________ -->
	<Style TargetType="{x:Type igDP:DataRecordPresenter}">
		<Setter Property="VerticalContentAlignment" Value="Center"/>
		<Setter Property="HorizontalContentAlignment" Value="Left"/>
		<Setter Property="HeaderAreaBackground" Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igDP:XamDataGrid}, ResourceId=LabelBackground}}"/>
		<Setter Property="NestedContentBackground" Value="Transparent"/>
		<Setter Property="Background" Value="#00FFFFFF"/>
		<Setter Property="Margin" Value="0,0,0,0"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type igDP:DataRecordPresenter}">
					<igWindows:CardPanel x:Name="baseGrid" RenderTransform="{TemplateBinding FixedNearElementTransform}" Background="{TemplateBinding Background}">
						<Border
							Visibility="Collapsed"
							Background="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igDP:XamDataGrid}, ResourceId=AddRowBackground}}"
							BorderBrush="#FFA9A9A9"
							HorizontalAlignment="Stretch"
							x:Name="addRowFooter"
							VerticalAlignment="Stretch"
							Width="Auto"
							Height="Auto"
							BorderThickness="0,0,0,1"/>
                        <Grid Margin="0" RenderTransform="{TemplateBinding ScrollableElementTransform}">
							<Grid.ColumnDefinitions>
                                <!-- MD 6/10/10 - ChildRecordsDisplayOrder feature - added 1 column definition-->
                                <ColumnDefinition Width="Auto"/>
								<ColumnDefinition Width="Auto"/>
								<ColumnDefinition Width="Auto"/>
								<!-- SSP 5/6/08 - Record Separators - Added two col defs-->
								<ColumnDefinition Width="Auto"/>
								<ColumnDefinition Width="Auto"/>
								<ColumnDefinition Width="*"/>
							</Grid.ColumnDefinitions>
							<Grid.RowDefinitions>
                                <!-- MD 6/10/10 - ChildRecordsDisplayOrder feature - added 1 row definition-->
                                <RowDefinition Height="Auto"/>
								<RowDefinition Height="Auto"/>
								<RowDefinition Height="Auto"/>
								<RowDefinition Height="Auto"/>
								<!-- SSP 5/6/08 - Record Separators - Added two row defs-->
								<RowDefinition Height="Auto"/>
								<RowDefinition Height="Auto"/>
							</Grid.RowDefinitions>
                            <!-- MD 6/10/10 - ChildRecordsDisplayOrder feature - Shifted all columns and rows down and over by 1 and increased spans by 1-->
							<Border x:Name="OrientationHorizontalSep" BorderThickness="0,0,1,0" Grid.ColumnSpan="6" Background="#FFFAFAFA" BorderBrush="#FFE7E7E7"  Visibility="Collapsed"/>
							<!-- Expansion Checkbox -->
							<!-- SSP 5/6/08 - Record Separators - changed grid.row to 2 from 1-->
							<!-- AS 1/27/09 NA 2009 Vol 1 - Set ZIndex and RenderTransform for fixed fields -->
                            <!-- AS 6/3/09 NA 2009 Vol 2 - Added Command(Parameter) & ToggleMode to support undo/redo -->
                            <!-- MD 6/10/10 - ChildRecordsDisplayOrder feature - Shifted all columns and rows down and over by 1 and increased spans by 1-->
                            <igWindows:ExpansionIndicator
								x:Name="ExpansionIndicator"
                                Panel.ZIndex="1"
                                RenderTransform="{TemplateBinding FixedNearElementTransform}"
								Grid.Row="3"
								Grid.Column="1"
								Visibility="{Binding Path=ExpansionIndicatorVisibility, RelativeSource={RelativeSource TemplatedParent}}"
                                Command="{x:Static igDP:DataPresenterCommands.ToggleRecordIsExpanded}"
                                CommandParameter="{TemplateBinding Record}"
                                ToggleMode="Manual"
								IsChecked="{Binding Path=IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"/>
							<!-- Header Background -->
							<!-- Added 8/2/2006 GH -->
							<!-- SSP 5/6/08 - Record Separators - changed grid.colspan to 5 from 3-->
							<!-- AS 2/10/09 TFS13798 - Set RenderTransform for fixed fields -->
                            <!-- MD 6/10/10 - ChildRecordsDisplayOrder feature - Shifted all columns and rows down and over by 1 and increased spans by 1-->
							<igWindows:CardPanel
								x:Name="SpacerFill"
                                RenderTransform="{TemplateBinding FixedNearElementTransform}"
								Grid.Row="1"
								Grid.Column="1"
								Grid.ColumnSpan="6"
								Visibility="Visible">
								<Border
									x:Name="fill"
									Margin="0,0,0,0"
									Background="{TemplateBinding HeaderAreaBackground}"
									BorderThickness="0,0,0,1"
									BorderBrush="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igDP:XamDataGrid}, ResourceId=LabelOuterBorder}}"/>
							</igWindows:CardPanel>
							<!-- End Added 8/2/2006 GH -->
							<!-- Header Content -->
							<!-- SSP 5/6/08 - Record Separators - changed grid.col to 2 from 1-->
                            <!-- MD 6/10/10 - ChildRecordsDisplayOrder feature - Shifted all columns and rows down and over by 1 and increased spans by 1-->
							<ContentPresenter
								x:Name="PART_HeaderContentSite"
								Grid.Row="1"
								Grid.Column="3"
								Content="{TemplateBinding HeaderContent}"
								Visibility="Visible"
								HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
								VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
								d:IsHidden="True"/>
							<!-- SSP 5/6/08 - Record Separators - Added separator rectangle -->
                            <!-- MD 6/10/10 - ChildRecordsDisplayOrder feature - Shifted all columns and rows down and over by 1 and increased spans by 1-->
                            <Border
								x:Name="RecordSeparator"
								Grid.Row="2"
								Grid.Column="1"
								Grid.ColumnSpan="6"
								Visibility="Collapsed"
                                RenderTransform="{TemplateBinding FixedNearElementTransform}"
								Style="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igDP:XamDataGrid}, ResourceId=RecordSeparatorStyle}}"/>
							<!-- Record Content -->
							<!-- SSP 5/6/08 - Record Separators - changed grid.row to 2 from 1 and grid.col to 2 from 1-->
                            <!-- MD 6/10/10 - ChildRecordsDisplayOrder feature - Shifted all columns and rows down and over by 1 and increased spans by 1-->
							<ContentPresenter
								x:Name="PART_RecordContentSite"
								Grid.Row="3"
								Grid.Column="3"
								Content="{Binding Path=DataContext, RelativeSource={RelativeSource TemplatedParent}}"
								ContentTemplate="{TemplateBinding RecordContentAreaTemplate}"
								HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
								VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
							<!-- Nested Content -->
							<!-- SSP 5/6/08 - Record Separators - changed grid.row to 4 from 2 and grid.col to 2 from 1-->
							<!-- AS 3/25/09 TFS15801 - Set RenderTransform for fixed fields -->
                            <!-- MD 6/10/10 - ChildRecordsDisplayOrder feature - Shifted all columns and rows down and over by 1 and increased spans by 1-->
							<Border
								x:Name="PART_NestedContentSite"
								Grid.Row="5"
								Grid.Column="3"
								Visibility="Visible"
								HorizontalAlignment="Left"
								VerticalAlignment="Top"
                                RenderTransform="{TemplateBinding FixedNearElementTransform}"
								Background="{TemplateBinding NestedContentBackground}">
								<!-- AS 11/14/07 BR26035
								The namescope was broken because the recordlistcontrol was not in the logical tree. We
								need to use a ContentControl instead so the content	is made a logical child. -->
								<ContentControl
                                    RenderTransform="{TemplateBinding ScrollableElementTransform}"
                                    Content="{TemplateBinding NestedContent}"
                                    Margin="2,2,0,0"/>
								<!--Margin="10,10,0,0" />-->
							</Border>
						</Grid>
					</igWindows:CardPanel>
					<ControlTemplate.Triggers>
						<!-- AS 11/8/11 TFS88111 -->
						<MultiDataTrigger>
							<MultiDataTrigger.Conditions>
								<Condition Binding="{Binding Path=FieldLayout.AutoFitToWidth, RelativeSource={RelativeSource Self}}" Value="True" />
								<Condition Binding="{Binding Path=Orientation, RelativeSource={RelativeSource Self}}" Value="Vertical" />
							</MultiDataTrigger.Conditions>
							<Setter TargetName="PART_HeaderContentSite" Property="Grid.ColumnSpan" Value="3"/>
							<Setter TargetName="PART_RecordContentSite" Property="Grid.ColumnSpan" Value="3"/>
							<Setter Property="HorizontalContentAlignment" Value="Stretch"/>
						</MultiDataTrigger>

						<Trigger Property="Orientation" Value="Horizontal">
							<!-- START SSP 5/6/08 - Record Separators
							   <Setter TargetName="PART_HeaderContentSite" Property="Grid.Row" Value="1" />
							   <Setter TargetName="PART_HeaderContentSite" Property="Grid.Column" Value="0" />
							   <Setter TargetName="PART_NestedContentSite" Property="Grid.Row" Value="1" />
							   <Setter TargetName="PART_NestedContentSite" Property="Grid.Column" Value="2" />
							   <Setter TargetName="PART_RecordContentSite" Property="VerticalAlignment" Value="Top" />
							   <Setter TargetName="ExpansionIndicator" Property="Grid.Row" Value="0" />
							   <Setter TargetName="ExpansionIndicator" Property="Grid.Column" Value="1" />
							   <Setter TargetName="SpacerFill" Property="Grid.ColumnSpan" Value="1" />
							   <Setter TargetName="SpacerFill" Property="Grid.RowSpan" Value="3" />-->
                            <!-- MD 6/10/10 - ChildRecordsDisplayOrder feature - Shifted all columns and rows down and over by 1 and increased spans by 1-->
							<Setter TargetName="PART_HeaderContentSite" Property="Grid.Row" Value="3"/>
							<Setter TargetName="PART_HeaderContentSite" Property="Grid.Column" Value="1"/>
							<Setter TargetName="PART_NestedContentSite" Property="Grid.Row" Value="3"/>
							<Setter TargetName="PART_NestedContentSite" Property="Grid.Column" Value="5"/>
							<Setter TargetName="PART_RecordContentSite" Property="VerticalAlignment" Value="Top"/>
							<Setter TargetName="ExpansionIndicator" Property="Grid.Row" Value="1"/>
							<Setter TargetName="ExpansionIndicator" Property="Margin" Value="0,2"/>
							<Setter TargetName="ExpansionIndicator" Property="Grid.Column" Value="3"/>
							<Setter TargetName="SpacerFill" Property="Grid.ColumnSpan" Value="1"/>
							<Setter TargetName="SpacerFill" Property="Grid.RowSpan" Value="6"/>
							<Setter TargetName="OrientationHorizontalSep" Property="Visibility" Value="Visible"/>
							<!-- JJD 8/20/09 - TFS20887
                             set grid row and col for record separators below in triggers below that
                             do it based on whether the separator is before or after the record content
                            <Setter TargetName="RecordSeparator" Property="Grid.Row" Value="2"/>
							<Setter TargetName="RecordSeparator" Property="Grid.Column" Value="1"/>-->
							<Setter TargetName="RecordSeparator" Property="Width" Value="10"/>
							<Setter TargetName="RecordSeparator" Property="Height" Value="Auto"/>
							<Setter TargetName="RecordSeparator" Property="BorderThickness" Value="1,0"/>
							<!-- END SSP 5/6/08 - Record Separators -->
						</Trigger>
						<Trigger Property="ShouldDisplayRecordContent" Value="False">
							<Setter TargetName="PART_RecordContentSite" Property="Visibility" Value="Collapsed"/>
							<!--JJD 9/4/07 - BR26153 -->
							<!--Only set ExpansionIndicator Visibility to Hidden if is was Visible (see new MultiTrigger below) -->
							<!--<Setter TargetName="ExpansionIndicator" Property="Visibility" Value="Hidden" />-->
						</Trigger>
						<!--JJD 9/4/07 - BR26153 -->
						<!--Only set ExpansionIndicator Visibility to Hidden if is was Visible -->
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="ShouldDisplayRecordContent" Value="False"/>
								<Condition Property="IsHeaderRecord" Value="False"/>
								<Condition Property="ExpansionIndicatorVisibility" Value="Visible"/>
							</MultiTrigger.Conditions>
							<Setter TargetName="ExpansionIndicator" Property="Visibility" Value="Hidden"/>
						</MultiTrigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="Orientation" Value="Horizontal"/>
								<Condition Property="ShouldDisplayRecordContent" Value="False"/>
							</MultiTrigger.Conditions>
							<!-- START SSP 5/6/08 - Record Separators - Changed Value to 3 from 2-->
                            <!-- MD 6/10/10 - ChildRecordsDisplayOrder feature - Shifted all columns and rows down and over by 1 and increased spans by 1-->
              <!-- JJD 1/24/11 TFS63831 the value should be 5 to match up with the nested content-->
							<Setter TargetName="ExpansionIndicator" Property="Grid.Column" Value="5"/>
						</MultiTrigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="Orientation" Value="Vertical"/>
								<Condition Property="ShouldDisplayRecordContent" Value="False"/>
							</MultiTrigger.Conditions>
							<!-- START SSP 5/6/08 - Record Separators - Changed Value to 3 from 2-->
                            <!-- MD 6/10/10 - ChildRecordsDisplayOrder feature - Shifted all columns and rows down and over by 1 and increased spans by 1-->
              <!-- JJD 1/24/11 TFS63831 the value should be 5 to match up with the nested content-->
              <Setter TargetName="ExpansionIndicator" Property="Grid.Row" Value="5"/>
						</MultiTrigger>
						<Trigger Property="IsHeaderRecord" Value="True">
							<!--JJD 9/4/07 - BR26153 -->
							<!--Only set ExpansionIndicator Visibility to Hidden if is was Visible (see new MultiTrigger below) -->
							<!--<Setter TargetName="ExpansionIndicator" Property="Visibility" Value="Hidden" />-->
                            <!-- MD 6/10/10 - ChildRecordsDisplayOrder feature - Shifted all columns and rows down and over by 1 and increased spans by 1-->
							<Setter TargetName="ExpansionIndicator" Property="Grid.Row" Value="1"/>
							<Setter TargetName="ExpansionIndicator" Property="Grid.Column" Value="1"/>
						</Trigger>
						<!--JJD 9/4/07 - BR26153 -->
						<!--Only set ExpansionIndicator Visibility to Hidden if is was Visible -->
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsHeaderRecord" Value="True"/>
								<Condition Property="ExpansionIndicatorVisibility" Value="Visible"/>
							</MultiTrigger.Conditions>
							<Setter TargetName="ExpansionIndicator" Property="Visibility" Value="Hidden"/>
						</MultiTrigger>
						<Trigger Property="HasHeaderContent" Value="False">
							<Setter Property="Visibility" TargetName="SpacerFill" Value="Collapsed"/>
							<Setter Property="Visibility" TargetName="PART_HeaderContentSite" Value="Collapsed"/>
						</Trigger>
						<Trigger Property="HasNestedContent" Value="true">
							<Setter TargetName="PART_NestedContentSite" Property="Visibility" Value="Visible"/>
							<Setter TargetName="baseGrid" Property="Background" Value="{Binding Path=Background, RelativeSource={RelativeSource TemplatedParent}}"/>
						</Trigger>
						<Trigger Property="HasNestedContent" Value="False">
							<Setter Property="Visibility" TargetName="PART_NestedContentSite" Value="Collapsed"/>
						</Trigger>
						<!--SSP 8/5/09 - NAS9.2 Enhanced grid view
							Changed the IsFixedOnTop trigger to MultiDataTrigger since we needed to add IsSpecialRecord
							condition. This was done because previously we were showing separator after each fixed record
							however we should not display the separator between each fixed data record if there are multiple
							fixed data records. The same change was applied to IsFixedOnBottom.
						-->
						<MultiDataTrigger>
							<MultiDataTrigger.Conditions>
								<Condition Binding="{Binding Path=IsSpecialRecord}" Value="true" />
								<Condition Binding="{Binding Path=IsFixedOnTop, RelativeSource={RelativeSource Self}}" Value="true" />
							</MultiDataTrigger.Conditions>
							<Setter Property="Visibility" TargetName="addRowFooter" Value="Visible"/>
						</MultiDataTrigger>
						<MultiDataTrigger>
							<MultiDataTrigger.Conditions>
								<Condition Binding="{Binding Path=IsSpecialRecord}" Value="true" />
								<Condition Binding="{Binding Path=IsFixedOnBottom, RelativeSource={RelativeSource Self}}" Value="true" />
							</MultiDataTrigger.Conditions>
							<Setter Property="Visibility" TargetName="addRowFooter" Value="Visible"/>
							<Setter Property="BorderThickness" TargetName="addRowFooter" Value="0,1,0,0"/>
						</MultiDataTrigger>
						<!-- START SSP 5/6/08 - Record Separators -->
						<!-- For HasSeparatorBefore, default grid.row and grid.column settings are fine as setup
							when declaring the record separator (and for horizontal orientation as setup in the
							orientation=horizontal trigger above).
						-->
						<Trigger Property="HasSeparatorBefore" Value="true">
							<Setter TargetName="RecordSeparator" Property="Visibility" Value="Visible"/>
						</Trigger>
						<!-- For HasSeparatorAfter, we have to set grid.row and grid.col based on the orientation-->
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="HasSeparatorAfter" Value="true"/>
								<Condition Property="Orientation" Value="Vertical"/>
							</MultiTrigger.Conditions>
							<Setter TargetName="RecordSeparator" Property="Visibility" Value="Visible"/>
                            <!-- MD 6/10/10 - ChildRecordsDisplayOrder feature - Shifted all columns and rows down and over by 1 and increased spans by 1-->
							<Setter TargetName="RecordSeparator" Property="Grid.Row" Value="4"/>
						</MultiTrigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="HasSeparatorAfter" Value="true"/>
								<Condition Property="Orientation" Value="Horizontal"/>
							</MultiTrigger.Conditions>
							<Setter TargetName="RecordSeparator" Property="Visibility" Value="Visible"/>
                            <!-- JJD 8/20/09 - TFS20887	-->
                            <!-- MD 6/10/10 - ChildRecordsDisplayOrder feature - Shifted all columns and rows down and over by 1 and increased spans by 1-->
                            <Setter TargetName="RecordSeparator" Property="Grid.Column" Value="4"/>
                            <Setter TargetName="RecordSeparator" Property="Grid.ColumnSpan" Value="1"/>
                            <Setter TargetName="RecordSeparator" Property="Grid.Row" Value="1"/>
                            <Setter TargetName="RecordSeparator" Property="Grid.RowSpan" Value="6"/>
						</MultiTrigger>
                        <!-- JJD 8/20/09 - TFS20887	-->
						<!-- For HasSeparatorBefore, we have to set grid.row and grid.col based on the orientation-->
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="HasSeparatorBefore" Value="true"/>
								<Condition Property="Orientation" Value="Horizontal"/>
							</MultiTrigger.Conditions>
                            <!-- MD 6/10/10 - ChildRecordsDisplayOrder feature - Shifted all columns and rows down and over by 1 and increased spans by 1-->
                            <Setter TargetName="RecordSeparator" Property="Grid.Column" Value="2"/>
                            <Setter TargetName="RecordSeparator" Property="Grid.ColumnSpan" Value="1"/>
                            <Setter TargetName="RecordSeparator" Property="Grid.Row" Value="1"/>
                            <Setter TargetName="RecordSeparator" Property="Grid.RowSpan" Value="6"/>
						</MultiTrigger>
                        <!-- end of fix for TFS20887	-->
						<!-- END SSP 5/6/08 - Record Separators -->
						<!-- Changing opacity of Content to differentiate between filtered records with IsFilteredOut trigger property -->
						<!-- JJD 1/10/13 - TFS130325 
							Use new IsOpacityReduced property instead
						<Trigger Property="IsFilteredOut" Value="True">-->
						<Trigger Property="IsOpacityReduced" Value="True">
							<Setter TargetName="PART_RecordContentSite" Property="Opacity" Value="0.35"/>
						</Trigger>

                        <!-- MD 6/10/10 - ChildRecordsDisplayOrder feature -->
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=FieldLayout.ChildRecordsDisplayOrderResolved}" Value="BeforeParent"/>
                                <Condition Binding="{Binding Path=Orientation, RelativeSource={RelativeSource Self}}" Value="Vertical"/>
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="PART_NestedContentSite" Property="Grid.Row" Value="0"/>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=FieldLayout.ChildRecordsDisplayOrderResolved}" Value="BeforeParent"/>
                                <Condition Binding="{Binding Path=Orientation, RelativeSource={RelativeSource Self}}" Value="Horizontal"/>
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="PART_NestedContentSite" Property="Grid.Column" Value="0"/>
                        </MultiDataTrigger>

                        <!-- MD 8/3/10 - TFS35609 -->
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=FieldLayout.ChildRecordsDisplayOrderResolved}" Value="BeforeParentHeadersAttached"/>
                                <Condition Binding="{Binding Path=Orientation, RelativeSource={RelativeSource Self}}" Value="Vertical"/>
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="PART_NestedContentSite" Property="Grid.Row" Value="0"/>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=FieldLayout.ChildRecordsDisplayOrderResolved}" Value="BeforeParentHeadersAttached"/>
                                <Condition Binding="{Binding Path=Orientation, RelativeSource={RelativeSource Self}}" Value="Horizontal"/>
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="PART_NestedContentSite" Property="Grid.Column" Value="0"/>
                        </MultiDataTrigger>

					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="TemplateCardView">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type igDP:DataRecordPresenter}">
					<igWindows:CardPanel x:Name="baseGrid" Background="{TemplateBinding Background}">
						<!-- Record Content -->
						<Rectangle Fill="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igDP:XamDataGrid}, ResourceId=CardBackground}}"/>
						<ContentPresenter
							x:Name="PART_RecordContentSite"
							Content="{Binding Path=DataContext, RelativeSource={RelativeSource TemplatedParent}}"
							ContentTemplate="{TemplateBinding RecordContentAreaTemplate}"
							HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
							VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
					</igWindows:CardPanel>
					<ControlTemplate.Triggers>
						<!-- JM NA 10.1 CardView -->
						<Trigger Property="IsInCard" Value="True">
							<Setter Property="VerticalContentAlignment" Value="Top"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- _________________________ DataRecordCellArea __________________________________________ -->
	<Style TargetType="{x:Type igDP:DataRecordCellArea}" BasedOn="{x:Static igThemes:DataPresenterGeneric.DataRecordCellArea}">
		<Setter Property="BackgroundHover">
			<Setter.Value>
				<LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
					<GradientStop Offset="0" Color="#FFF6FBFD"/>
					<GradientStop Offset="0.99" Color="#FFD5EFFC"/>
					<GradientStop Offset="0.99" Color="#FFD5EFFC"/>
					<GradientStop Color="#FFffffff" Offset="1"/>
				</LinearGradientBrush>
			</Setter.Value>
		</Setter>
		<Setter Property="BorderHoverBrush" Value="#FF99DEFD"/>
		<Setter Property="BackgroundActive">
			<Setter.Value>
				<LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
					<GradientStop Offset="0" Color="#BFF6FBFD"/>
					<GradientStop Offset="0.99" Color="#bFD5EFFC"/>
					<GradientStop Offset="0.99" Color="#bFD5EFFC"/>
					<GradientStop Color="#bFffffff" Offset="1"/>
				</LinearGradientBrush>
			</Setter.Value>
		</Setter>
		<Setter Property="BorderActiveBrush" Value="#FF99DEFD"/>
		<Setter Property="BackgroundAlternate" Value="#FFF4F8F9"/>
		<Setter Property="BackgroundSelected">
			<Setter.Value>
				<LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
					<GradientStop Offset="0" Color="#7FF6FBFD"/>
					<GradientStop Offset="0.99" Color="#7FD5EFFC"/>
					<GradientStop Offset="0.99" Color="#7FD5EFFC"/>
					<GradientStop Color="#7Fffffff" Offset="1"/>
				</LinearGradientBrush>
			</Setter.Value>
		</Setter>
		<Setter Property="BorderSelectedBrush" Value="#FF99DEFD"/>
		<Setter Property="Foreground" Value="#FF000000"/>
		<Setter Property="ForegroundStyle" Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igDP:XamDataGrid}, ResourceId=BlackForegroundStyle}}"/>
		<Setter Property="ForegroundAlternateStyle" Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igDP:XamDataGrid}, ResourceId=BlackForegroundStyle}}"/>
		<Setter Property="ForegroundHoverStyle" Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igDP:XamDataGrid}, ResourceId=BlackForegroundStyle}}"/>
	</Style>

	<!-- _________________________ GroupByArea __________________________________________ -->
	<Style TargetType="{x:Type igDP:GroupByArea}" BasedOn="{x:Static igThemes:DataPresenterGeneric.GroupByArea}">
		<Setter Property="Foreground" Value="#FF333333"/>
		<Setter Property="Background" Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igDP:XamDataGrid}, ResourceId=GroupByAreaBackground}}"/>
		<Setter Property="Template">
			<Setter.Value>
				<!-- JM 04-09 9.2 CrossBandGrouping Feature -->
				<!-- I have made a number of changes to this template to integrate the new ExpanderDecorator element and
					 refactor the element layout to remove all hard-coded dimensions.  Note: I have left the hard-coded
					 font sizes - we may want to provide a way for the developer to override these in the future. I also removed
					 the animations for expanding/collapsing since this is now handled by the ExpanderDecorator. To reduce
					 clutter I have not retained the code I commented out - refer to previous TFS versions if you need to see the
					 old code. -->
				<ControlTemplate TargetType="{x:Type igDP:GroupByArea}">
					<ControlTemplate.Resources>
						<Storyboard x:Key="TurnOnInsertionPoint">
							<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="PART_InsertionPoint" Storyboard.TargetProperty="(UIElement.Opacity)">
								<SplineDoubleKeyFrame KeyTime="00:00:00.2500000" Value="1"/>
							</DoubleAnimationUsingKeyFrames>
						</Storyboard>
						<Storyboard x:Key="TurnOffInsertionPoint">
							<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="PART_InsertionPoint" Storyboard.TargetProperty="(UIElement.Opacity)">
								<SplineDoubleKeyFrame KeyTime="00:00:00.2500000" Value="0"/>
							</DoubleAnimationUsingKeyFrames>
						</Storyboard>
						<Storyboard x:Key="ShowPrompts">
							<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="prompt1" Storyboard.TargetProperty="(UIElement.Opacity)">
								<SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="0.5"/>
							</DoubleAnimationUsingKeyFrames>
							<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="prompt2" Storyboard.TargetProperty="(UIElement.Opacity)">
								<SplineDoubleKeyFrame KeyTime="00:00:00.2500000" Value="0.8"/>
							</DoubleAnimationUsingKeyFrames>
						</Storyboard>
						<Storyboard x:Key="HidePrompts">
							<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="prompt1" Storyboard.TargetProperty="(UIElement.Opacity)">
								<SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="0.2"/>
							</DoubleAnimationUsingKeyFrames>
							<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="prompt2" Storyboard.TargetProperty="(UIElement.Opacity)">
								<SplineDoubleKeyFrame KeyTime="00:00:00.2500000" Value="0.1"/>
							</DoubleAnimationUsingKeyFrames>
						</Storyboard>
					</ControlTemplate.Resources>
					<Grid>
						<Grid.RowDefinitions>
							<RowDefinition Height="Auto"/>
							<RowDefinition Height="Auto"/>
						</Grid.RowDefinitions>
						<!-- ExpanderBarArea -->
						<!-- JM 3/28/11 TFS70359 - Actually remove the command. -->
						<!-- AS 2/25/11 TFS67071 - Since there are performance implications, we'll hook the Click instead of setting the Command. -->
						<igWindows:ExpanderBar
							x:Name="ExpanderBarButton"
							Grid.Row="0"
							Height="10"/>
						<!-- End ExpanderBarArea-->
						<!-- Collapsible Area -->
						<igWindows:ExpanderDecorator Grid.Row="1"
													 HorizontalAlignment="Stretch"
													 IsExpanded="{Binding Path=IsExpanded, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
													 Orientation="Vertical">
							<Grid x:Name="outerGrid" SnapsToDevicePixels="True">
								<Grid.RowDefinitions>
									<RowDefinition Height="Auto"/>
									<RowDefinition Height="Auto"/>
								</Grid.RowDefinitions>
								<!-- Background Area -->
								<Grid VerticalAlignment="Stretch" Background="{TemplateBinding Background}">
									<Rectangle
										Fill="#FFAFC2CB"
										Stroke="{x:Null}"
										Height="1"
										Margin="0,0,0,2"
										VerticalAlignment="Bottom"/>
									<Rectangle
										Fill="#FF688899"
										Stroke="{x:Null}"
										Height="1"
										Margin="0,0,0,1"
										VerticalAlignment="Bottom"/>
									<Rectangle
										Fill="#FFAFC2CB"
										Stroke="{x:Null}"
										Height="1"
										VerticalAlignment="Bottom"/>

								</Grid>
								<!-- End Background Area -->
								<!-- Grouping Prompts -->
								<StackPanel Orientation="Horizontal" Margin="6,12,0,0">
									<!-- JM 05-06-09 Honor the new Prompt1Template and Prompt2Template properties-->
									<!--<TextBlock
										x:Name="prompt1"
										FontSize="24"
										Text="{TemplateBinding Prompt1}"
										Opacity=".5"
										Foreground="#FF6598B1"/>
									<TextBlock
										x:Name="prompt2"
										Opacity=".8"
										Margin="5,11,0,0"
										Text="{TemplateBinding Prompt2}"
										Foreground="#99FFFFFF"/>-->
									<ContentControl
										x:Name="prompt1"
										FontSize="24"
										Content="{TemplateBinding Prompt1}"
										ContentTemplate="{TemplateBinding Prompt1Template}"
										Opacity=".5"
										Foreground="#FF6598B1"/>
									<ContentControl
										x:Name="prompt2"
										Opacity=".8"
										Margin="5,11,0,0"
										Content="{TemplateBinding Prompt2}"
										ContentTemplate="{TemplateBinding Prompt2Template}"
										Foreground="#99FFFFFF"/>
								</StackPanel>
								<!-- GroupedFieldLabelsArea-->
								<Grid x:Name="PART_GroupedFieldLabelsArea" Grid.Row="0" Margin="0,12,0,10" VerticalAlignment="Top">
									<!-- GroupedFields List -->
                                    <!-- JM 02-13-18 TFS248336 - Remove the binding on the Height property. -->
									<!--<igDP:GroupByAreaFieldListBox x:Name="GroupedFieldList" ItemsSource="{TemplateBinding GroupedFieldLabels}" Height="{Binding Path=ActualHeight, ElementName=AvailableFieldList}" AutomationProperties.Name="GroupedFieldsList"/>-->
                                    <igDP:GroupByAreaFieldListBox x:Name="GroupedFieldList" ItemsSource="{TemplateBinding GroupedFieldLabels}" AutomationProperties.Name="GroupedFieldsList"/>
                                </Grid>
								<!-- End GroupedFieldLabels Area -->
								<!-- AvailableFieldLabels Area -->
								<Border	Grid.Row="1">
									<Border.Background>
										<LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
											<GradientStop Color="#FF83ACC0" Offset="0"/>
											<GradientStop Color="#FF3E7E9D" Offset="0.5"/>
											<GradientStop Color="#FF095276" Offset="0.5"/>
											<GradientStop Color="#FF4E96AA" Offset="1"/>
										</LinearGradientBrush>
									</Border.Background>
									<Grid x:Name="PART_AvailableFieldLabelsArea" Margin="0,4,0,3" Visibility="Visible">
										<!-- AvailableField List -->
										<igDP:GroupByAreaFieldListBox x:Name="AvailableFieldList" ItemsSource="{TemplateBinding AvailableFieldLabels}" VerticalAlignment="Stretch" AutomationProperties.Name="AvailableFieldsList"/>
									</Grid>
								</Border>
								<Rectangle
										Grid.Row="1"
										Fill="#FF688899"
										Stroke="{x:Null}"
										Height="1"
										VerticalAlignment="Bottom"/>

								<!-- End AvailableFieldLabels Area -->
								<!-- Bottom Divider Bar -->
								<!--<igWindows:ExpanderBar
								  x:Name="ExpanderBarButtonBottom"
								  Margin="0,73,0,0"
								  Height="5"
								  Command="{x:Static igDP:GroupByArea.ToggleExpandedState}" />-->
								<!-- End Bottom Divider Bar-->
								<!-- Insertion Point -->
								<Polygon
									x:Name="PART_InsertionPoint"
									Opacity="0"
									Fill="#FF151C55"
									Points="0,0 10,0 5,5"
									StrokeEndLineCap="Round"
									StrokeStartLineCap="Round"
									StrokeLineJoin="Round"
									HorizontalAlignment="Left"
									Margin="0,12,0,0"
									VerticalAlignment="Top"/>
							</Grid>
							<!--</Canvas>-->
						</igWindows:ExpanderDecorator>
						<!-- End Collapsible Area -->
					</Grid>
					<ControlTemplate.Triggers>
						<EventTrigger RoutedEvent="igDP:GroupByArea.ShowInsertionPoint">
							<BeginStoryboard x:Name="TurnOnInsertionPoint_BeginStoryboard" Storyboard="{StaticResource TurnOnInsertionPoint}"/>
						</EventTrigger>
						<EventTrigger RoutedEvent="igDP:GroupByArea.HideInsertionPoint">
							<BeginStoryboard x:Name="TurnOffInsertionPoint_BeginStoryboard" Storyboard="{StaticResource TurnOffInsertionPoint}"/>
						</EventTrigger>
						<EventTrigger RoutedEvent="igDP:GroupByArea.ShowPrompts">
							<BeginStoryboard x:Name="ShowPrompts_BeginStoryboard" Storyboard="{StaticResource ShowPrompts}"/>
						</EventTrigger>
						<EventTrigger RoutedEvent="igDP:GroupByArea.HidePrompts">
							<BeginStoryboard x:Name="HidePrompts_BeginStoryboard" Storyboard="{StaticResource HidePrompts}"/>
						</EventTrigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- _________________________ LabelPresenter __________________________________________ -->
	<Style TargetType="{x:Type igDP:LabelPresenter}" BasedOn="{x:Static igThemes:DataPresenterGeneric.LabelPresenter}">
		<Setter Property="Padding" Value="0,0,0,0"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type igDP:LabelPresenter}">
					<ControlTemplate.Resources>
						<Storyboard x:Key="sbHighlightOn">
							<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="highlight">
								<SplineDoubleKeyFrame Value="0" KeyTime="00:00:00"/>
								<SplineDoubleKeyFrame Value="1" KeyTime="00:00:00.1670000"/>
							</DoubleAnimationUsingKeyFrames>
							<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="fishHeadHighlight">
								<SplineDoubleKeyFrame Value="0" KeyTime="00:00:00"/>
								<SplineDoubleKeyFrame Value="1" KeyTime="00:00:00.1670000"/>
							</DoubleAnimationUsingKeyFrames>
						</Storyboard>
						<Storyboard x:Key="sbHighlightOff">
							<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="highlight">
								<SplineDoubleKeyFrame Value="0" KeyTime="00:00:00.25"/>
							</DoubleAnimationUsingKeyFrames>
							<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="fishHeadHighlight">
								<SplineDoubleKeyFrame Value="0" KeyTime="00:00:00.25"/>
							</DoubleAnimationUsingKeyFrames>
						</Storyboard>
						<Storyboard x:Key="SigmaFadeIn">
							<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="SummaryButton" Storyboard.TargetProperty="(UIElement.Opacity)">
								<SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="1"/>
							</DoubleAnimationUsingKeyFrames>
							<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="FixedButton" Storyboard.TargetProperty="(UIElement.Opacity)">
								<SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="1"/>
							</DoubleAnimationUsingKeyFrames>
						</Storyboard>
						<Storyboard x:Key="SigmaFadeOut">
							<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="SummaryButton" Storyboard.TargetProperty="(UIElement.Opacity)" FillBehavior="Stop">
								<SplineDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
								<SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="0.4"/>
							</DoubleAnimationUsingKeyFrames>
							<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="FixedButton" Storyboard.TargetProperty="(UIElement.Opacity)" FillBehavior="Stop">
								<SplineDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
								<SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="0.4"/>
							</DoubleAnimationUsingKeyFrames>
						</Storyboard>
						<Storyboard x:Key="SigmaFadeInFilterButton">
							<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="FilterButton" Storyboard.TargetProperty="(UIElement.Opacity)">
								<SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="1"/>
							</DoubleAnimationUsingKeyFrames>
						</Storyboard>
						<Storyboard x:Key="SigmaFadeOutFilterButton">
							<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="FilterButton" Storyboard.TargetProperty="(UIElement.Opacity)" FillBehavior="Stop">
								<SplineDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
								<SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="0.4"/>
							</DoubleAnimationUsingKeyFrames>
						</Storyboard>
					</ControlTemplate.Resources>
					<Grid x:Name="labelCntr" Margin="{TemplateBinding Padding}" Background="#00000000" prim:XamlHelper.SnapsToDevicePixels="True">
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="*"/>
								<ColumnDefinition x:Name="fishColumn" Width="0"/>
							</Grid.ColumnDefinitions>
                            <!-- Background Bar -->
							<Border
								HorizontalAlignment="Stretch"
								VerticalAlignment="Stretch"
								Width="Auto"
								Height="Auto"
								RenderTransformOrigin="0.5,0.5"
								CornerRadius="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igDP:XamDataGrid}, ResourceId=LabelCornerRadius}}"
								SnapsToDevicePixels="True"
								Background="{TemplateBinding Background}"
								x:Name="background"
								BorderBrush="{TemplateBinding OuterBorderBrush}"
								BorderThickness="1,0,1,1"/>
							<!-- End Background Bar -->
							<!-- Highlight -->
							<Border
								x:Name="highlight"
								Opacity="1"
								HorizontalAlignment="Stretch"
								VerticalAlignment="Stretch"
								Width="Auto"
								Height="Auto"
								CornerRadius="0,0,0,0"
								Background="{TemplateBinding LabelHighlight}"
								Margin="0,0,0,0"
								BorderBrush="#FF96D9F9"
								BorderThickness="1,0,1,1"
								Visibility="Collapsed"/>
							<Border
								x:Name="highlight_2"
								Opacity="1"
								Width="Auto"
								Height="Auto"
								CornerRadius="0,0,0,0"
								Background="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igDP:XamDataGrid}, ResourceId=LabelHighlight2}}"
								Visibility="Collapsed"
								Margin="0,0,0,0"
								BorderBrush="#FF96D9F9"
								BorderThickness="1,0,1,1"/>
							<Border
								x:Name="WhiteInnerBorder"
								Background="{x:Null}"
								BorderThickness="1,0,1,0"
								BorderBrush="#FFFFFFFF"
								Margin="1,0,1,1"/>
							<Path x:Name="fishHeadOuterStroke" SnapsToDevicePixels="True" Visibility="Collapsed" Fill="{TemplateBinding OuterBorderBrush}" Grid.Column="1" Stretch="Fill" Data="M 0,20 C0,20 8,12 8,12 9,11 9,9 8,8 8,8 0,0 0,0 0,0 0,20 0,20 z" />
							<Path x:Name="fishHead" SnapsToDevicePixels="True" Visibility="Collapsed" Fill="{TemplateBinding Background}" Grid.Column="1" Margin="0,1,1,1" Stretch="Fill" Data="M 0,20 C0,20 8,12 8,12 9,11 9,9 8,8 8,8 0,0 0,0 0,0 0,20 0,20 z" />
							<!-- JJD 04/16/12 - TFS109233
									Initialize the fishHeadHighlight Opacity to 0 so it won't be visible until the IsMouseOver MultiTrigger below -->
							<Path x:Name="fishHeadHighlight" Opacity="0" SnapsToDevicePixels="True" Fill="{TemplateBinding LabelHighlight}" Visibility="Collapsed" Grid.Column="1" Margin="0,1,1,1" Stretch="Fill" Data="M 0,20 C0,20 8,12 8,12 9,11 9,9 8,8 8,8 0,0 0,0 0,0 0,20 0,20 z"/>
						<Grid x:Name="sortIndicatorAndLabel">
							<!-- End Label Text -->
							<Grid.RowDefinitions>
								<RowDefinition Height="Auto"/>
								<RowDefinition Height="*"/>
								<RowDefinition Height="Auto"/>
							</Grid.RowDefinitions>
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="*"/>
								<ColumnDefinition Width="Auto"/>
								<ColumnDefinition Width="Auto"/>
								<ColumnDefinition Width="Auto"/>
								<ColumnDefinition Width="Auto"/>
							</Grid.ColumnDefinitions>
							<igWindows:SortIndicator
								x:Name="SortIndicator"
								SortStatus="{TemplateBinding SortStatus}"
								Grid.Row="1"
								Grid.Column="1"
								Visibility="Collapsed"
								HorizontalAlignment="Right"
								VerticalAlignment="Center"
								Margin="0,0,5,0"/>
							<!-- Label Text -->
							<ContentControl
								Grid.Row="1"
								x:Name="LabelContent"
								Style="{StaticResource LabelContentStyle}"
								Content="{Binding Path=Content, RelativeSource={RelativeSource TemplatedParent}}"
								ContentTemplate="{TemplateBinding ContentTemplate}"
								ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
								HorizontalAlignment="Stretch"
								Margin="7,2,7,6"
								VerticalAlignment="Center"
								Grid.RowSpan="1"
								Grid.ColumnSpan="1"/>
							<!-- SSP 3/31/08 - Summaries Functionality -->
							<igDP:SummaryButton
								x:Name="SummaryButton"
								Field="{TemplateBinding Field}"
								Visibility="{Binding Path=Field.AllowSummariesResolved, Converter={StaticResource BoolToVisConverter}, RelativeSource={RelativeSource TemplatedParent}}"
								HorizontalAlignment="Stretch"
								VerticalAlignment="Stretch"
								Width="Auto"
								Grid.Column="2"
								Grid.Row="0"
								Margin="0,0,0,0"
								Grid.RowSpan="2"
								Opacity="0.4"
								d:LayoutOverrides="Width, GridBox"/>
							<!-- JJD 1/06/09 - Filtering Functionality -->
							<igDP:FilterButton
								x:Name="FilterButton"
								Field="{TemplateBinding Field}"
								Visibility="{TemplateBinding FilterButtonVisibility}"
								HorizontalAlignment="Left"
								VerticalAlignment="Center"
								Width="Auto"
								Grid.Column="3"
								Grid.RowSpan="2"
								Opacity="0.4"
								Margin="0,0,3,0"/>
							<!-- JM 1/14/09 - Fixed Fields Functionality -->
							<igDP:FixedFieldButton
								x:Name="FixedButton"
								Field="{TemplateBinding Field}"
								Visibility="{TemplateBinding FixedButtonVisibility}"
								HorizontalAlignment="Left"
								VerticalAlignment="Center"
								Width="Auto"
								Grid.Column="4"
								Grid.RowSpan="2"
								Margin="2,0,2,0"
								Opacity="0.4"/>
						</Grid>
						<Border
							BorderThickness="1,1,1,0"
							x:Name="pressed_border2"
							BorderBrush="#FF7A9EB1"
							Width="Auto"
							Height="Auto"
							Margin="0,0,0,0"
							Visibility="Collapsed"/>
						<Border
							BorderThickness="1,1,1,0"
							x:Name="pressed_border3"
							BorderBrush="#CC70B9DE"
							Width="Auto"
							Height="Auto"
							Margin="1,1,1,0"
							Visibility="Collapsed"/>
						<!-- End Highlight -->
						</Grid>
					<ControlTemplate.Triggers>
						<DataTrigger Binding="{Binding Path=IsInGroupByArea, RelativeSource={RelativeSource Self}}" Value="False">
						  <Setter Property="Margin" TargetName="background" Value="-1,0,0,0" />
						  <Setter Property="Margin" TargetName="WhiteInnerBorder" Value="0,0,1,1" />
						</DataTrigger>
						<DataTrigger Binding="{Binding Path=IsDragIndicator, RelativeSource={RelativeSource Self}}" Value="True">
						  <Setter Property="Margin" TargetName="background" Value="0,0,0,0" />
						  <Setter Property="Margin" TargetName="WhiteInnerBorder" Value="1,0,1,1" />
						</DataTrigger>
						<!-- IsDragSource -->
						<MultiDataTrigger>
							<MultiDataTrigger.Conditions>
								<Condition Binding="{Binding Path=IsDragSource, RelativeSource={RelativeSource Self}}" Value="True"/>
								<Condition Binding="{Binding Path=IsInGroupByArea, RelativeSource={RelativeSource Self}}" Value="False"/>
							</MultiDataTrigger.Conditions>
							<Setter Property="Visibility" TargetName="pressed_border2" Value="Visible"/>
							<Setter Property="Visibility" TargetName="pressed_border3" Value="Visible"/>
							<Setter Property="Visibility" TargetName="WhiteInnerBorder" Value="Collapsed"/>
							<Setter Property="BorderThickness" TargetName="highlight" Value="1,0,1,0"/>
							<Setter Property="Margin" TargetName="LabelContent" Value="8,3,6,5"/>
							<Setter Property="Visibility" TargetName="highlight" Value="Visible"/>
							<Setter Property="Visibility" TargetName="highlight_2" Value="Visible"/>
						</MultiDataTrigger>

						<!-- IsPressed -->
						<MultiDataTrigger>
							<MultiDataTrigger.Conditions>
								<Condition Binding="{Binding Path=IsPressed, RelativeSource={RelativeSource Self}}" Value="True"/>
								<Condition Binding="{Binding Path=IsInGroupByArea, RelativeSource={RelativeSource Self}}" Value="False"/>
							</MultiDataTrigger.Conditions>
							<Setter Property="Visibility" TargetName="pressed_border2" Value="Visible"/>
							<Setter Property="Visibility" TargetName="pressed_border3" Value="Visible"/>
							<Setter Property="Visibility" TargetName="WhiteInnerBorder" Value="Collapsed"/>
							<Setter Property="BorderThickness" TargetName="highlight" Value="1,0,1,0"/>
							<Setter Property="Margin" TargetName="LabelContent" Value="8,3,6,5"/>
						</MultiDataTrigger>

						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition SourceName="FilterButton" Property="HasActiveFilters" Value="False"/>
								<Condition Property="IsMouseOver" Value="True"/>
							</MultiTrigger.Conditions>
							<!-- JM 04-09-09 Comment these animations out for now to address TFS 16564.  This bug was discovered as we were getting ready to release
											 the April 2009 9.1 Hotfix and is caused by a bug in the WPF framework that we will need to work around by
											 replacing this MultiTrigger with a MultiDataTrigger. -->
							<!--<MultiTrigger.EnterActions>
                                <BeginStoryboard x:Name="SigmaFadeIn_FB_BeginStoryboard" Storyboard="{StaticResource SigmaFadeInFilterButton}"/>
                            </MultiTrigger.EnterActions>
                            <MultiTrigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource SigmaFadeOutFilterButton}" x:Name="SigmaFadeOut_FB_BeginStoryboard"/>
                                <RemoveStoryboard BeginStoryboardName="SigmaFadeIn_FB_BeginStoryboard"/>
                            </MultiTrigger.ExitActions>-->
							<Setter TargetName="FilterButton" Property="Opacity" Value="1"/>
						</MultiTrigger>
						<Trigger SourceName="FilterButton" Property="HasActiveFilters" Value="True">
							<Setter TargetName="FilterButton" Property="Opacity" Value="1"/>
						</Trigger>
						<!-- HighlightPrimary -->
						<Trigger Property="HighlightAsPrimary" Value="true">
							<Setter Property="Visibility" TargetName="highlight" Value="Visible"/>
							<Setter Property="Visibility" TargetName="WhiteInnerBorder" Value="Collapsed"/>
						</Trigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsPressed" Value="False"/>
								<Condition Property="SortStatus" Value="Ascending"/>
							</MultiTrigger.Conditions>
							<Setter TargetName="SortIndicator" Property="Visibility" Value="Visible"/>
							<Setter Property="Visibility" TargetName="highlight_2" Value="Visible"/>
							<Setter Property="Visibility" TargetName="WhiteInnerBorder" Value="Collapsed"/>
						</MultiTrigger>

						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsPressed" Value="False"/>
								<Condition Property="SortStatus" Value="Descending"/>
							</MultiTrigger.Conditions>
							<!-- JJD 8/24/11 - TFS82886
                  Moved Setter for SortIndicator Visibility into separate trigger below
                  so that it is always visible when SortStatus is Descending
                  regardless if IsPressed is true or false -->
							<!--<Setter TargetName="SortIndicator" Property="Visibility" Value="Visible"/>-->
							<Setter Property="Visibility" TargetName="highlight_2" Value="Visible"/>
							<Setter Property="Visibility" TargetName="WhiteInnerBorder" Value="Collapsed"/>
						</MultiTrigger>

						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsPressed" Value="False"/>
								<Condition Property="SortStatus" Value="Ascending"/>
							</MultiTrigger.Conditions>
							<!-- JJD 8/24/11 - TFS82886
                  Moved Setter for SortIndicator Visibility into separate trigger below
                  so that it is always visible when SortStatus is Ascending
                  regardless if IsPressed is true or false -->
							<!--<Setter TargetName="SortIndicator" Property="Visibility" Value="Visible"/>-->
							<Setter Property="Visibility" TargetName="highlight_2" Value="Visible"/>
							<Setter Property="Visibility" TargetName="WhiteInnerBorder" Value="Collapsed"/>
						</MultiTrigger>

						<!-- JJD 8/24/11 - TFS82886
                Created new trigger for setting SortIndicator Visibility
                so that it is always visible when SortStatus is Ascending  -->
            <Trigger Property="SortStatus" Value="Ascending">
              <Setter TargetName="SortIndicator" Property="Visibility" Value="Visible"/>
            </Trigger>

						<!-- JJD 8/24/11 - TFS82886
                Created new trigger for setting SortIndicator Visibility
                so that it is always visible when SortStatus is Descending  -->
            <Trigger Property="SortStatus" Value="Descending">
              <Setter TargetName="SortIndicator" Property="Visibility" Value="Visible"/>
            </Trigger>

						<DataTrigger Binding="{Binding Path=IsInGroupByArea, RelativeSource={RelativeSource Self}}" Value="True">
							<Setter TargetName="FixedButton" Property="Visibility" Value="Collapsed"/>
							<Setter TargetName="SummaryButton" Property="Visibility" Value="Collapsed" />
							<Setter TargetName="background" Property="BorderThickness" Value="1,1,0,1"/>
							<Setter TargetName="highlight" Property="BorderThickness" Value="1,1,0,1"/>
							<Setter TargetName="highlight_2" Property="BorderThickness" Value="1,1,0,1"/>
							<Setter TargetName="WhiteInnerBorder" Property="BorderThickness" Value="1,0,0,0"/>
							<Setter TargetName="fishHeadOuterStroke" Property="Visibility" Value="Visible"/>
							<Setter TargetName="fishHead" Property="Visibility" Value="Visible"/>
							<!-- JJD 04/16/12 - TFS109233
								set fishHeadHighlight element visible when in group by area since we are
							    now initializing its Opacity to 0 it won't be visible until the IsMouseOver MultiTrigger below -->
							<Setter TargetName="fishHeadHighlight" Property="Visibility" Value="Visible"/>
							<Setter TargetName="fishColumn" Property="Width" Value="14"/>
							<Setter TargetName="LabelContent" Property="Margin" Value="7,4"/>
							<Setter Property="Visibility" TargetName="pressed_border2" Value="Collapsed"/>
							<Setter Property="Visibility" TargetName="pressed_border3" Value="Collapsed"/>
							<Setter Property="Visibility" TargetName="highlight_2" Value="Collapsed"/>
						</DataTrigger>

						<MultiDataTrigger>
							<MultiDataTrigger.Conditions>
								<Condition Binding="{Binding Path=(Field).(igDP:GroupByAreaMulti.HasOffsetY), RelativeSource={RelativeSource Self}}" Value="False"/>
								<Condition Binding="{Binding Path=IsInGroupByArea, RelativeSource={RelativeSource Self}}" Value="True"/>
							</MultiDataTrigger.Conditions>
							<Setter TargetName="labelCntr" Property="Margin" Value="-24,0,0,0"/>
						</MultiDataTrigger>

						<MultiDataTrigger>
							<MultiDataTrigger.Conditions>
								<Condition Binding="{Binding Path=(Field).(igDP:GroupByAreaMulti.HasOffsetY), RelativeSource={RelativeSource Self}}" Value="False"/>
								<Condition Binding="{Binding Path=IsInGroupByArea, RelativeSource={RelativeSource Self}}" Value="True"/>
								<Condition Binding="{Binding Path=(Field).(igDP:GroupByAreaMulti.IsFirstInList), RelativeSource={RelativeSource Self}}" Value="False"/>
							</MultiDataTrigger.Conditions>
							<Setter TargetName="sortIndicatorAndLabel" Property="Margin" Value="20,0,0,0"/>
						</MultiDataTrigger>

						<DataTrigger Binding="{Binding Path=(Field).(igDP:GroupByAreaMulti.IsFirstInList), RelativeSource={RelativeSource Self}}" Value="True">
							<Setter TargetName="labelCntr" Property="Margin" Value="0"/>
						</DataTrigger>

						<!--IsMouseOver -->
						<!--SSP 6/24/09 - NAS9.2 Field Chooser - Changed from Trigger to MultiTrigger-->
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsMouseOver" Value="True" />
								<!--SSP 6/24/09 - NAS9.2 Field Chooser - We don't want to loose the selected highlight when mouse
								is hovered over a field in the field chooser. Especially this causes the field label to not
								appear selected when mouse is clicked over it while the mouse is still over the field label.-->
								<Condition Property="IsSelectedInFieldChooser" Value="False"/>
							</MultiTrigger.Conditions>
							<MultiTrigger.EnterActions>
								<BeginStoryboard Storyboard="{StaticResource SigmaFadeIn}" x:Name="SigmaFadeIn_BeginStoryboard"/>
							</MultiTrigger.EnterActions>
							<MultiTrigger.ExitActions>
								<BeginStoryboard Storyboard="{StaticResource SigmaFadeOut}" x:Name="SigmaFadeOut_BeginStoryboard"/>
							</MultiTrigger.ExitActions>
							<Setter Property="Visibility" TargetName="highlight" Value="Visible"/>
							<!-- JJD 04/16/12 - TFS109233
								fishHeadHighlight element should only be visible in group by area so instead of
							    settung it Visible set its Opacity to 1. If it is in the group by area it will become visible
							<Setter Property="Visibility" TargetName="fishHeadHighlight" Value="Visible"/>-->
							<Setter Property="Opacity" TargetName="fishHeadHighlight" Value="1"/>
							<Setter Property="Visibility" TargetName="WhiteInnerBorder" Value="Collapsed"/>
						</MultiTrigger>

						<!--SSP 6/23/09 - NAS9.2 Field Chooser
							If the label is in a field chooser then hide the sort indicator, filter button and
							summary button. Note that the fixed button is collapsed in code in label presenter
							by coercing the FixedButtonVisibility property to be Collapsed.-->
						<Trigger Property="IsInFieldChooser" Value="true">
							<Setter TargetName="SortIndicator" Property="Visibility" Value="Collapsed" />
							<Setter TargetName="FilterButton" Property="Visibility" Value="Collapsed" />
							<Setter TargetName="FixedButton" Property="Visibility" Value="Collapsed"/>
							<Setter TargetName="SummaryButton" Property="Visibility" Value="Collapsed" />
						</Trigger>

						<Trigger Property="IsDragIndicator" Value="True">
							<Setter TargetName="sortIndicatorAndLabel" Property="Margin" Value="0"/>
							<Setter TargetName="labelCntr" Property="Margin" Value="0"/>
						</Trigger>

					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="LabelHighlight" Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igDP:XamDataGrid}, ResourceId=LabelHighlight}}"/>
	</Style>

	<!-- SSP 3/27/09 - Summaries Functionality
				Added style for summaries related elements
	-->
	<!-- _________________________ SummaryRecordPresenter ______________________________________ -->
	<Style TargetType="{x:Type igDP:SummaryRecordPresenter}">
		<Setter Property="VerticalContentAlignment" Value="Center"/>
		<Setter Property="HorizontalContentAlignment" Value="Left"/>
		<Setter Property="HeaderAreaBackground" Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igDP:XamDataGrid}, ResourceId=LabelBackground}}"/>
		<Setter Property="Background" Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igDP:XamDataGrid}, ResourceId=SummaryRecordPresenterBackground}}"/>
		<Setter Property="BorderBrush" Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igDP:XamDataGrid}, ResourceId=SummaryRecordPresenterBorder}}"/>
		<Setter Property="Margin" Value="0,0,0,0"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type igDP:SummaryRecordPresenter}">
					<igWindows:CardPanel x:Name="baseGrid">
						<Border
							BorderBrush="{TemplateBinding BorderBrush}"
							BorderThickness="0,1,0,1"
							Background="{TemplateBinding Background}"
                            RenderTransform="{TemplateBinding FixedNearElementTransform}"
							x:Name="Background"/>
						<Grid Margin="0">
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="Auto"/>
								<ColumnDefinition Width="Auto"/>
								<!-- SSP 5/6/08 - Record Separators - Added two col defs-->
								<ColumnDefinition Width="Auto"/>
								<ColumnDefinition Width="Auto"/>
								<ColumnDefinition Width="*"/>
							</Grid.ColumnDefinitions>
							<Grid.RowDefinitions>
								<RowDefinition Height="Auto"/>
								<RowDefinition Height="Auto"/>
								<RowDefinition Height="Auto"/>
								<!-- SSP 5/6/08 - Record Separators - Added two row defs-->
								<RowDefinition Height="Auto"/>
								<RowDefinition Height="Auto"/>
							</Grid.RowDefinitions>
							<!-- Expansion Checkbox -->
							<!-- SSP 5/6/08 - Record Separators - changed grid.row to 2 from 1-->
                            <!-- AS 6/3/09 NA 2009 Vol 2 - Added Command(Parameter) & ToggleMode to support undo/redo -->
							<igWindows:ExpansionIndicator
								x:Name="ExpansionIndicator"
								Grid.Row="2"
								Grid.Column="0"
								Visibility="{Binding Path=ExpansionIndicatorVisibility, RelativeSource={RelativeSource TemplatedParent}}"
                                Command="{x:Static igDP:DataPresenterCommands.ToggleRecordIsExpanded}"
                                CommandParameter="{TemplateBinding Record}"
                                ToggleMode="Manual"
								IsChecked="{Binding Path=IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"/>
							<!-- Header Background -->
							<!-- Added 8/2/2006 GH -->
							<!-- SSP 5/6/08 - Record Separators - changed grid.colspan to 5 from 3-->
							<!-- AS 2/10/09 TFS13798 - Set RenderTransform for fixed fields -->
							<igWindows:CardPanel
								x:Name="SpacerFill"
                                RenderTransform="{TemplateBinding FixedNearElementTransform}"
								Grid.Row="0"
								Grid.Column="0"
								Grid.ColumnSpan="5"
								Visibility="Visible">
								<Rectangle x:Name="fill" Margin="0,0,0,0" Fill="{TemplateBinding HeaderAreaBackground}"/>
							</igWindows:CardPanel>
							<!-- End Added 8/2/2006 GH -->
							<!-- Header Content -->
							<!-- SSP 5/6/08 - Record Separators - changed grid.col to 2 from 1-->
							<ContentPresenter
								x:Name="PART_HeaderContentSite"
								Grid.Row="0"
								Grid.Column="2"
								Content="{TemplateBinding HeaderContent}"
								Visibility="Visible"
								HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
								VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
								d:IsHidden="True"/>
							<!-- SSP 5/6/08 - Record Separators - Added separator rectangle -->
							<Border
								x:Name="RecordSeparator"
								Grid.Row="1"
								Grid.Column="0"
								Grid.ColumnSpan="5"
								Visibility="Collapsed"
                                RenderTransform="{TemplateBinding FixedNearElementTransform}"
								Style="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igDP:XamDataGrid}, ResourceId=RecordSeparatorStyle}}"/>
							<!-- Record Content -->
							<!-- SSP 5/6/08 - Record Separators - changed grid.row to 2 from 1 and grid.col to 2 from 1-->
							<ContentPresenter
								x:Name="PART_RecordContentSite"
								Grid.Row="2"
								Grid.Column="2"
								Content="{Binding Path=DataContext, RelativeSource={RelativeSource TemplatedParent}}"
								ContentTemplate="{TemplateBinding RecordContentAreaTemplate}"
								HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
								VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
								Margin="{TemplateBinding ContentAreaMargins}"/>
						</Grid>
					</igWindows:CardPanel>
					<ControlTemplate.Triggers>
						<!-- AS 11/8/11 TFS88111 -->
						<MultiDataTrigger>
							<MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=FieldLayout.AutoFitToWidth, RelativeSource={RelativeSource Self}}" Value="True" />
								<Condition Binding="{Binding Path=Orientation, RelativeSource={RelativeSource Self}}" Value="Vertical" />
							</MultiDataTrigger.Conditions>
							<Setter TargetName="PART_HeaderContentSite" Property="Grid.ColumnSpan" Value="3"/>
							<Setter TargetName="PART_RecordContentSite" Property="Grid.ColumnSpan" Value="3"/>
							<Setter Property="HorizontalContentAlignment" Value="Stretch"/>
						</MultiDataTrigger>

						<Trigger Property="Orientation" Value="Horizontal">
							<!-- START SSP 5/6/08 - Record Separators
                             <Setter TargetName="ExpansionIndicator" Property="Grid.Row" Value="0" />
                            <Setter TargetName="ExpansionIndicator" Property="Grid.Column" Value="1" />
                            <Setter TargetName="SpacerFill" Property="Grid.ColumnSpan" Value="1" />
                            <Setter TargetName="SpacerFill" Property="Grid.RowSpan" Value="3" />
														-->
							<Setter TargetName="PART_HeaderContentSite" Property="Grid.Row" Value="2"/>
							<Setter TargetName="PART_HeaderContentSite" Property="Grid.Column" Value="0"/>
							<Setter TargetName="PART_RecordContentSite" Property="VerticalAlignment" Value="Top"/>
							<Setter TargetName="ExpansionIndicator" Property="Grid.Row" Value="0"/>
							<Setter TargetName="ExpansionIndicator" Property="Grid.Column" Value="2"/>
							<Setter TargetName="SpacerFill" Property="Grid.ColumnSpan" Value="1"/>
							<Setter TargetName="SpacerFill" Property="Grid.RowSpan" Value="5"/>
							<Setter TargetName="RecordSeparator" Property="Grid.Row" Value="2"/>
							<Setter TargetName="RecordSeparator" Property="Grid.Column" Value="1"/>
							<Setter TargetName="RecordSeparator" Property="Width" Value="10"/>
							<Setter TargetName="RecordSeparator" Property="Height" Value="Auto"/>
							<!-- END SSP 5/6/08 - Record Separators -->
						</Trigger>
						<Trigger Property="ShouldDisplayRecordContent" Value="False">
							<Setter TargetName="PART_RecordContentSite" Property="Visibility" Value="Collapsed"/>
							<!--JJD 9/4/07 - BR26153 -->
							<!--Only set ExpansionIndicator Visibility to Hidden if is was Visible (see new MultiTrigger below) -->
							<!--<Setter TargetName="ExpansionIndicator" Property="Visibility" Value="Hidden" />-->
						</Trigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="Orientation" Value="Horizontal"/>
								<Condition Property="ShouldDisplayRecordContent" Value="False"/>
							</MultiTrigger.Conditions>
							<!-- START SSP 5/6/08 - Record Separators - Changed Value to 3 from 2-->
							<Setter TargetName="ExpansionIndicator" Property="Grid.Column" Value="3"/>
						</MultiTrigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="Orientation" Value="Vertical"/>
								<Condition Property="ShouldDisplayRecordContent" Value="False"/>
							</MultiTrigger.Conditions>
							<!-- START SSP 5/6/08 - Record Separators - Changed Value to 3 from 2-->
							<Setter TargetName="ExpansionIndicator" Property="Grid.Row" Value="3"/>
						</MultiTrigger>
						<Trigger Property="IsHeaderRecord" Value="True">
							<Setter TargetName="ExpansionIndicator" Property="Grid.Row" Value="0"/>
							<Setter TargetName="ExpansionIndicator" Property="Grid.Column" Value="0"/>
						</Trigger>
						<Trigger Property="HasHeaderContent" Value="False">
							<Setter Property="Visibility" TargetName="SpacerFill" Value="Collapsed"/>
							<Setter Property="Visibility" TargetName="PART_HeaderContentSite" Value="Collapsed"/>
						</Trigger>
						<Trigger Property="IsFixedOnBottom" Value="true">
							<Setter Property="Margin" Value="0,2,0,0"/>
							<!-- JJD 2/3/09 - shouldn't step on Margin property of PART_RecordContentSite since
                                 it is bound to the ContentAreaMargins property -->
							<!--<Setter Property="Margin" TargetName="PART_RecordContentSite" Value="0,2,0,2"/>-->
							<Setter Property="BorderThickness" TargetName="Background" Value="0,1,0,0"/>
						</Trigger>
						<!-- START SSP 5/6/08 - Record Separators -->
						<!-- For HasSeparatorBefore, default grid.row and grid.column settings are fine as setup
												when declaring the record separator (and for horizontal orientation as setup in the
												orientation=horizontal trigger above).
											-->
						<Trigger Property="HasSeparatorBefore" Value="true">
							<Setter TargetName="RecordSeparator" Property="Visibility" Value="Visible"/>
						</Trigger>
						<!-- For HasSeparatorAfter, we have to set grid.row and grid.col based on the orientation-->
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="HasSeparatorAfter" Value="true"/>
								<Condition Property="Orientation" Value="Vertical"/>
							</MultiTrigger.Conditions>
							<Setter TargetName="RecordSeparator" Property="Visibility" Value="Visible"/>
							<Setter TargetName="RecordSeparator" Property="Grid.Row" Value="3"/>
						</MultiTrigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="HasSeparatorAfter" Value="true"/>
								<Condition Property="Orientation" Value="Horizontal"/>
							</MultiTrigger.Conditions>
							<Setter TargetName="RecordSeparator" Property="Visibility" Value="Visible"/>
							<Setter TargetName="RecordSeparator" Property="Grid.Column" Value="3"/>
						</MultiTrigger>
						<!-- END SSP 5/6/08 - Record Separators -->
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="TemplateCardView">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type igDP:SummaryRecordPresenter}">
					<igWindows:CardPanel x:Name="baseGrid" Background="{TemplateBinding Background}">
						<!-- Record Content -->
						<Rectangle Fill="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igDP:XamDataGrid}, ResourceId=CardBackground}}"/>
						<ContentPresenter
							x:Name="PART_RecordContentSite"
							Content="{Binding Path=DataContext, RelativeSource={RelativeSource TemplatedParent}}"
							ContentTemplate="{TemplateBinding RecordContentAreaTemplate}"
							HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
							VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
					</igWindows:CardPanel>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- _________________________ SummaryRecordPrefixArea __________________________________________ -->
	<Style TargetType="{x:Type igDP:SummaryRecordPrefixArea}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type igDP:SummaryRecordPrefixArea}">
					<Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
						<ContentPresenter
							Content="{TemplateBinding Content}"
							ContentTemplate="{TemplateBinding ContentTemplate}"
							VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
							HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"/>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- _________________________ SummaryRecordCellArea __________________________________________ -->
	<Style TargetType="{x:Type igDP:SummaryRecordCellArea}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type igDP:SummaryRecordCellArea}">
					<igWindows:CardPanel>
						<Border BorderThickness="0,1,0,1">
							<ContentPresenter Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}"/>
						</Border>
					</igWindows:CardPanel>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="Margin" Value="0,0,0,0"/>
	</Style>

	<!-- _________________________ SummaryResultsPresenter ______________________________________ -->
	<Style TargetType="{x:Type igDP:SummaryResultsPresenter}">
		<Style.Resources>
            <!-- SSP 4/10/12 - Optimizations - Note that this is no longer being used as a result of the change below. -->
			<DataTemplate DataType="{x:Type igDP:SummaryResult}">
				<igDP:SummaryResultPresenter SummaryResult="{Binding}"/>
			</DataTemplate>
            <!-- SSP 4/10/12 - Optimizations - Added SummaryResultEntry template. -->
            <DataTemplate DataType="{x:Type igDP:SummaryResultEntry}">
                <igDP:SummaryResultPresenter SummaryResult="{Binding Path=SummaryResult}"/>
            </DataTemplate>
		</Style.Resources>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type igDP:SummaryResultsPresenter}">
                        <Border
							Background="{TemplateBinding Background}"
							BorderBrush="{TemplateBinding BorderBrush}"
							BorderThickness="{TemplateBinding BorderThickness}"
							SnapsToDevicePixels="true">
					<Grid Margin="{TemplateBinding TreeLineOffset}">
                            <!-- SSP 4/10/12 - Optimizations - Changed ItemsSource="{TemplateBinding SummaryResults}" to ItemsSource="{TemplateBinding SummaryResultEntries}". -->
                            <ItemsControl ItemsSource="{TemplateBinding SummaryResultEntries}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Margin="{TemplateBinding Padding}">
                                <ItemsControl.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <StackPanel CanHorizontallyScroll="false" CanVerticallyScroll="false"/>
                                    </ItemsPanelTemplate>
                                </ItemsControl.ItemsPanel>
                            </ItemsControl>
                    </Grid>
                        </Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="BorderThickness" Value="0,0,1,0"/>
		<Setter Property="BorderBrush" Value="{x:Null}"/>
	</Style>

	<!-- _________________________ SummaryResultPresenter ______________________________________ -->
	<Style TargetType="{x:Type igDP:SummaryResultPresenter}">
		<Setter Property="Padding" Value="1,1"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type igDP:SummaryResultPresenter}">
					<Border
						Background="{TemplateBinding Background}"
						BorderBrush="{TemplateBinding BorderBrush}"
						BorderThickness="1"
						Padding="{TemplateBinding Padding}"
						ToolTip="{Binding Path=SummaryResult.ToolTipResolved, RelativeSource={RelativeSource TemplatedParent}}">
                        <!-- SSP 3/19/10 - Optimizations
                            Changed the binding to bind to the new DisplayTextAsync instead of the DisplayText so we
                            don't force synchronous calculation of the summary if it's dirty.
                        -->
                        <TextBlock Text="{Binding Path=SummaryResult.DisplayTextAsync, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"/>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="Margin" Value="0,0,0,2"/>
	</Style>

	<!-- _________________________ SummaryCellPresenter ______________________________________ -->
	<Style TargetType="{x:Type igDP:SummaryCellPresenter}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type igDP:SummaryCellPresenter}">
					<igDP:SummaryCellPresenterLayoutElement/>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- _________________________ SummaryButton ______________________________________ -->
	<Style TargetType="{x:Type igDP:SummaryButton}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type igDP:SummaryButton}">
					<Grid>
						<StackPanel
							HorizontalAlignment="Center"
							VerticalAlignment="Stretch"
							Orientation="Horizontal"
							Background="#00FFFFFF"
							x:Name="stackPanel"
							Margin="0,0,1,0">
							<Border
								Width="1"
								Margin="0,0,5,0"
								BorderThickness="1,0,0,0"
								Height="Auto"
								x:Name="border1"
								BorderBrush="#BF7FBFDF"/>
							<Path
								Stretch="Fill"
								Data="M 0,0 C0,0 5,0 5,0 5,0 5,1 5,1 5,1 2,1 2,1 2,1 4,3.5 4,3.5 4,3.5 2,6 2,6 2,6 5,6 5,6 5,6 5,7 5,7 5,7 0,7 0,7 0,7 0,6 0,6 0,6 2,3.5625 2,3.5625 2,3.5625 0,1 0,1 0,1 0,0 0,0 z"
								Fill="{TemplateBinding Foreground}"
								Width="5"
								Height="7"
								d:LayoutOverrides="Width, Height"
								x:Name="path"
								Stroke="{x:Null}"
								HorizontalAlignment="Stretch"
								StrokeThickness="0"
								Margin="0,0,5,0"/>
						</StackPanel>
						<Popup
							x:Name="PART_Popup"
							AllowsTransparency="True"
							Placement="Bottom"
							VerticalOffset="1"
							IsOpen="{Binding Path=IsChecked, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
							StaysOpen="False"
							PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}"
							SnapsToDevicePixels="True">
							<!-- JJD 3/5/09 - TFS5971/BR32606 - set focus scope to true -->
							<Border
								BorderBrush="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igDP:XamDataGrid}, ResourceId=SummaryButtonPopupBorder}}"
								x:Name="border"
								Background="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igDP:XamDataGrid}, ResourceId=SummaryButtonPopupBackground}}"
                                KeyboardNavigation.DirectionalNavigation="Contained"
                                KeyboardNavigation.TabNavigation="Contained"
                                FocusManager.IsFocusScope="True"
								BorderThickness="1,1,1,1">
								<Grid Width="Auto" Height="Auto">
									<Rectangle
										Stroke="{x:Null}"
										Margin="28,0,0,0"
										x:Name="Inner"
										Visibility="Visible"
										Fill="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igDP:XamDataGrid}, ResourceId=SummaryButtonPopupInnerBackground}}"
										HorizontalAlignment="Left"
										Width="1"/>
									<Rectangle
										Stroke="{x:Null}"
										x:Name="InnerLight"
										Visibility="Visible"
										HorizontalAlignment="Left"
										Width="1"
										Margin="29,0,0,0"
										Fill="#FFFFFFFF"/>
									<StackPanel Margin="5,5,5,5">
										<igDP:SummaryCalculatorSelectionControl x:Name="CalculatorSelectionControl" Field="{TemplateBinding Field}"/>
										<Grid Width="Auto" Height="Auto">
											<Rectangle
												Fill="#FFFFFFFF"
												Stroke="{x:Null}"
												x:Name="rectangle"
												VerticalAlignment="Stretch"
												Margin="-5,0,-5,-5"/>
											<Rectangle
												Fill="#FFE0E0E0"
												Stroke="{x:Null}"
												Width="Auto"
												Height="1"
												x:Name="rectangle1"
												Margin="-5,1,-5,0"
												VerticalAlignment="Top"/>
											<StackPanel
												Orientation="Horizontal"
												HorizontalAlignment="Right"
												Margin="0,5,0,0"
												d:LayoutOverrides="Width">
												<Button
													x:Name="RowSummaryOkButton"
													Content="Ok"
													IsDefault="True"
													Height="12"
													Margin="0,0,5,0"
													Style="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igDP:XamDataGrid}, ResourceId=RowSummaryOkButton}}"
													Width="13"/>
												<!-- JJD 3/5/09 - TFS5971/BR32606 - set IsCancel to True-->
												<Button
													x:Name="RowSummaryCancelButton"
													Content="Cancel"
                                                    IsCancel="True"
													Height="12"
													Style="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igDP:XamDataGrid}, ResourceId=RowSummaryCancelButton}}"
													Width="13"/>
											</StackPanel>
										</Grid>
									</StackPanel>
								</Grid>
							</Border>
						</Popup>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter Property="BorderBrush" TargetName="border1" Value="#FF7FBFDF"/>
							<Setter Property="Background" TargetName="stackPanel" Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igDP:XamDataGrid}, ResourceId=SummaryButtonBackgroundHover}}"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="Background" Value="{x:Null}"/>
		<Setter Property="Foreground" Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igDP:XamDataGrid}, ResourceId=SummaryButtonForeground}}"/>
		<Setter Property="SnapsToDevicePixels" Value="True"/>
	</Style>

	<!-- _________________________ SummaryCalculatorSelectionControl ______________________________________ -->
	<Style TargetType="{x:Type igDP:SummaryCalculatorSelectionControl}">
		<Style.Resources>
			<!-- SSP 9/21/09 TFS15959 - Instead of setting ItemTemplate on the ItemsControl, add the
							data template to the style resources.-->
			<DataTemplate DataType="{x:Type igDP:SummaryCalculatorHolder}">
				<igWindows:CardPanel x:Name="mainPanel">
					<Grid Margin="0,0,0,5">
						<!-- JJD 3/5/09 - TFS5971/BR32606 - set FocusVisualStyle to null-->
						<!-- SSP 10/16/09 TFS19525 - Added line that sets AutomationProperties.AutomationId -->
						<CheckBox
							x:Name="checkBox"
							AutomationProperties.AutomationId="{Binding Path=Calculator.Name, Converter={StaticResource stringFormatConverter}, ConverterParameter=\{0\}_CheckBox}"
							Style="{StaticResource AeroCheckBox}"
							Visibility="Visible"
							Grid.Column="0"
							IsChecked="{Binding Path=IsChecked, Mode=TwoWay}"
																		FocusVisualStyle="{x:Null}">
							<StackPanel Margin="5,0,0,0">
								<Image Source="{Binding Path=Calculator.Image}" Margin="5,0,0,0"/>
								<TextBlock Text="{Binding Path=Calculator.DisplayName}" Foreground="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igDP:XamDataGrid}, ResourceId=SummaryCSCItemForeground}}" Margin="5,0"/>
							</StackPanel>
						</CheckBox>
					</Grid>
					<Grid Margin="0,0,0,5">
						<!-- JJD 3/5/09 - TFS5971/BR32606 - set FocusVisualStyle to null-->
						<!-- SSP 10/16/09 TFS19525 - Added line that sets AutomationProperties.AutomationId -->
						<RadioButton
							x:Name="radioButton"
							AutomationProperties.AutomationId="{Binding Path=Calculator.Name, Converter={StaticResource stringFormatConverter}, ConverterParameter=\{0\}_RadioButton}"
							Visibility="Collapsed"
							Grid.Column="0"
							IsChecked="{Binding Path=IsChecked, Mode=TwoWay}"
																		FocusVisualStyle="{x:Null}">
							<StackPanel Margin="5,0,0,0">
								<Image Source="{Binding Path=Calculator.Image}" Margin="5,0,0,0"/>
								<TextBlock Text="{Binding Path=Calculator.DisplayName}" Foreground="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igDP:XamDataGrid}, ResourceId=SummaryCSCItemForeground}}" Margin="5,0"/>
							</StackPanel>
						</RadioButton>
					</Grid>
					<!-- JJD 3/5/09 - TFS5971/BR32606 - added focus rect-->
					<Rectangle Visibility="{Binding Path=IsKeyboardFocusWithin, ElementName=mainPanel, Converter={StaticResource BoolToVisConverter}}" Margin="17,0,0,3" Stroke="#D0000000" StrokeThickness="1" StrokeDashArray="1 2"/>
				</igWindows:CardPanel>
				<DataTemplate.Triggers>
					<DataTrigger Binding="{Binding Path=SelectionControl.AllowMultipleSummaries}" Value="False">
						<Setter TargetName="checkBox" Property="Visibility" Value="Collapsed"/>
						<Setter TargetName="radioButton" Property="Visibility" Value="Visible"/>
					</DataTrigger>
				</DataTemplate.Triggers>
			</DataTemplate>
		</Style.Resources>
		<Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
		<Setter Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type igDP:SummaryCalculatorSelectionControl}">
					<!-- JJD 3/5/09 - TFS5971/BR32606 - set focusable to false-->
					<ItemsControl
						ItemsSource="{TemplateBinding SummaryCalculatorHolders}"
						KeyboardNavigation.DirectionalNavigation="Contained"
                        Focusable="False"
						Margin="{TemplateBinding Padding}"
						Foreground="{TemplateBinding Foreground}"
					/>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="BorderThickness" Value="1,1,1,1"/>
		<Setter Property="Padding" Value="3,3,3,5"/>
	</Style>

	<!-- _________________________ GroupBySummariesPresenter ______________________________________ -->
	<Style TargetType="{x:Type igDP:GroupBySummariesPresenter}">
		<Setter Property="Background" Value="Transparent"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type igDP:GroupBySummariesPresenter}">
					<Border Margin="{TemplateBinding ContentAreaMargins}" Background="{TemplateBinding Background}">
						<igDP:SummaryRecordContentArea/>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="{ComponentResourceKey {x:Type igDP:XamDataGrid}, RowSummaryOkButton}" BasedOn="{x:Null}" TargetType="{x:Type Button}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
					<Grid>
						<Path
							Opacity="1"
							Stretch="Fill"
							Stroke="{TemplateBinding BorderBrush}"
							StrokeThickness="0.5"
							Data="M 11.44970703125,-0.32843017578125 C11.44970703125,-0.32843017578125 5.0858154296875,6.0355224609375 5.0858154296875,6.0355224609375 5.0858154296875,6.0355224609375 2.55023193359375,3.5 2.55023193359375,3.5 2.55023193359375,3.5 0.13604736328125,5.914215087890625 0.13604736328125,5.914215087890625 0.13604736328125,5.914215087890625 5.0858154296875,10.86395263671875 5.0858154296875,10.86395263671875 5.0858154296875,10.86395263671875 13.86395263671875,2.085784912109375 13.86395263671875,2.085784912109375 13.86395263671875,2.085784912109375 11.44970703125,-0.32843017578125 11.44970703125,-0.32843017578125 z"
							x:Name="path"
							Fill="{TemplateBinding Background}"/>
						<ContentPresenter
							HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
							VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
							SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
							RecognizesAccessKey="True"/>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsFocused" Value="True"/>
						<Trigger Property="IsDefaulted" Value="True"/>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter Property="Background" Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igDP:XamDataGrid}, ResourceId=SummaryCommandButtonsBackgroundHover}}"/>
						</Trigger>
						<Trigger Property="IsPressed" Value="True"/>
						<Trigger Property="IsEnabled" Value="False"/>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="Foreground" Value="{x:Null}"/>
		<Setter Property="BorderBrush" Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igDP:XamDataGrid}, ResourceId=SummaryCommandButtonsBorder}}"/>
		<Setter Property="Background" Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igDP:XamDataGrid}, ResourceId=SummaryCommandButtonsBackground}}"/>
	</Style>

	<Style x:Key="{ComponentResourceKey {x:Type igDP:XamDataGrid}, RowSummaryCancelButton}" BasedOn="{x:Null}" TargetType="{x:Type Button}">
		<Setter Property="Background" Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igDP:XamDataGrid}, ResourceId=SummaryCommandButtonsBackground}}"/>
		<Setter Property="BorderBrush" Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igDP:XamDataGrid}, ResourceId=SummaryCommandButtonsBorder}}"/>
		<Setter Property="Foreground" Value="{x:Null}"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
					<Grid>
						<Path
							HorizontalAlignment="Stretch"
							VerticalAlignment="Stretch"
							Height="Auto"
							Width="Auto"
							Stretch="Fill"
							Opacity="1"
							Data="M 561.3890991210938,474.9895935058594 C561.3890991210938,474.9895935058594 557.5,478.8799743652344 557.5,478.8799743652344 557.5,478.8799743652344 553.6109008789062,474.9895935058594 553.6109008789062,474.9895935058594 553.6109008789062,474.9895935058594 551.4895629882812,477.11090087890625 551.4895629882812,477.11090087890625 551.4895629882812,477.11090087890625 555.3800048828125,481 555.3800048828125,481 555.3800048828125,481 551.4895629882812,484.88909912109375 551.4895629882812,484.88909912109375 551.4895629882812,484.88909912109375 553.6109008789062,487.0104064941406 553.6109008789062,487.0104064941406 553.6109008789062,487.0104064941406 557.5,483.1199951171875 557.5,483.1199951171875 557.5,483.1199951171875 561.3890991210938,487.0104064941406 561.3890991210938,487.0104064941406 561.3890991210938,487.0104064941406 563.5104370117188,484.88909912109375 563.5104370117188,484.88909912109375 563.5104370117188,484.88909912109375 559.6199951171875,481 559.6199951171875,481 559.6199951171875,481 563.5104370117188,477.11090087890625 563.5104370117188,477.11090087890625 563.5104370117188,477.11090087890625 561.3890991210938,474.9895935058594 561.3890991210938,474.9895935058594 z"
							Stroke="{TemplateBinding BorderBrush}"
							StrokeThickness="0.5"
							Fill="{TemplateBinding Background}"
							x:Name="path"/>
						<ContentPresenter
							HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
							VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
							SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
							RecognizesAccessKey="True"/>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsFocused" Value="True"/>
						<Trigger Property="IsDefaulted" Value="True"/>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter Property="Background" Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igDP:XamDataGrid}, ResourceId=SummaryCommandButtonsBackgroundHover}}"/>
						</Trigger>
						<Trigger Property="IsPressed" Value="True"/>
						<Trigger Property="IsEnabled" Value="False"/>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!--HC 1/14/2009 BorderThickness and BorderBrushes are the only property changes to Aero's FCVP -->
	<!-- _________________________ FilterCellValuePresenter ______________________________________ -->
	<Style TargetType="{x:Type igDP:FilterCellValuePresenter}" BasedOn="{x:Static themes:DataPresenterGeneric.FilterCellValuePresenter}">
		<Setter Property="BorderBrush" Value="#FFEDEDED"/>
		<Setter Property="BorderHoverBrush" Value="#FFEDEDED"/>
		<Setter Property="BorderActiveBrush" Value="#FFEDEDED"/>
		<Setter Property="BorderSelectedBrush" Value="#FFEDEDED"/>
		<Setter Property="BorderPrimaryBrush" Value="#FFEDEDED"/>
		<!-- JJD 4/20/11 - TFS73213
         Place the border on the right instead of the left so we are consistent
         with how cells display their borders.
         Note: this eliminates the border between the leftmost cell and the record selector
         which is also consistent with the data record presenters -->
		<!--<Setter Property="BorderThickness" Value="1,0,0,0"/>-->
		<Setter Property="BorderThickness" Value="0,0,1,0"/>
	</Style>
</ResourceDictionary>