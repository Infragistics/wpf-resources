<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                	xmlns:sys="clr-namespace:System;assembly=mscorlib"
                    xmlns:ig="http://schemas.infragistics.com/xaml"
                    xmlns:igPrim="http://schemas.infragistics.com/xaml/primitives"
                    xmlns:igConverters="http://infragistics.com/Windows"                    
                    xmlns:igLocal="http://schemas.infragistics.com/xaml"
                    xmlns:igLocalPrim="http://schemas.infragistics.com/xaml/primitives"
                    xmlns:igEditors="http://infragistics.com/Editors"
                    >
    <!-- ========================== -->
    <!--           Colors           -->
    <!-- ========================== -->
    <Color x:Key="Color_003">#FF4B606E</Color>
    <Color x:Key="Color_004">#FF697D8C</Color>

    <!-- ========================== -->
    <!--           Brushes          -->
    <!-- ========================== -->
    <SolidColorBrush x:Key="IconsDarkFill" Color="{StaticResource Color_003}"/>
    <SolidColorBrush x:Key="IconsNormalFill" Color="{StaticResource Color_004}"/>

    <!-- ========================== -->
    <!--         Icon Images        -->
    <!-- ========================== -->
    <DataTemplate x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type igLocal:SpreadsheetContextMenuProvider}, ResourceId=CutImage}">
        <Grid Width="16" Height="16">
            <Path Width="13" Height="15" Data="M 69.5113,40.0949C 69.5113,39.7349 69.8046,39.4283 70.1646,39.4283C 70.5113,39.4283 70.8046,39.7349 70.8046,40.0949C 70.8046,40.4683 70.5113,40.7749 70.1646,40.7749C 69.8046,40.7749 69.5113,40.4683 69.5113,40.0949 Z M 72.1113,44.4683C 72.1113,43.535 72.8313,42.7883 73.7379,42.7883C 74.6313,42.7883 75.3513,43.535 75.3513,44.4683C 75.3513,45.4016 74.6313,46.1483 73.7379,46.1483C 72.8313,46.1483 72.1113,45.4016 72.1113,44.4683 Z M 64.9646,44.4683C 64.9646,43.535 65.6846,42.7883 66.5779,42.7883C 67.4846,42.7883 68.2046,43.535 68.2046,44.4683C 68.2046,45.4016 67.4846,46.1483 66.5779,46.1483C 65.6846,46.1483 64.9646,45.4016 64.9646,44.4683 Z M 63.6579,44.4683C 63.6579,46.1349 64.9646,47.4949 66.5779,47.4949C 68.2046,47.4949 69.5113,46.1349 69.5113,44.4683C 69.5113,43.9749 69.3913,43.5216 69.1913,43.1083L 70.2313,41.7749L 71.1779,43.0016C 70.938,43.4283 70.8046,43.9349 70.8046,44.4683C 70.8046,46.1349 72.1113,47.4949 73.7379,47.4949C 75.3513,47.4949 76.6579,46.1349 76.6579,44.4683C 76.6579,42.8016 75.3513,41.4416 73.7379,41.4416C 73.4979,41.4416 73.2846,41.4683 73.0713,41.5216L 71.7113,39.8549L 74.938,35.6816C 74.938,35.6816 76.3379,34.3483 74.7113,32.495L 70.2313,38.0283L 65.7513,32.495C 64.1246,34.3483 65.5113,35.6816 65.5113,35.6816L 68.7379,39.8549L 67.3646,41.5483C 67.1113,41.4816 66.8579,41.4416 66.5779,41.4416C 64.9646,41.4416 63.6579,42.8016 63.6579,44.4683 Z "
            Fill="{StaticResource IconsDarkFill}" Stretch="Fill" UseLayoutRounding="False"/>
        </Grid>
    </DataTemplate>
    <DataTemplate x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type igLocal:SpreadsheetContextMenuProvider}, ResourceId=CopyImage}">
        <Grid Width="16" Height="16">
            <Path Margin="6,0,0,5" Data="M8,0.01599128 L10,2.0159912 L10,11.015999 L0,11.015999 L0,0.015625549 z" Fill="{StaticResource IconsDarkFill}" Stretch="Fill" UseLayoutRounding="False"/>
            <Path Margin="0,5,6,0" Data="M0,0 L5,0 L5,7 L10,7 L10,11 L0,11 z" Fill="{StaticResource IconsDarkFill}" Stretch="Fill" UseLayoutRounding="False"/>
            <Path Width="6" Height="7" HorizontalAlignment="Left" Margin="2,0,0,2" VerticalAlignment="Bottom" Data="M4.5895576E-06,6 L6,6 L6,7 L4.5895576E-06,7 z M4.5895576E-06,4.0000005 L3,4.0000005 L3,5 L4.5895576E-06,5.0000005 z M4.5895576E-06,2.0000005 L3,2.0000005 L3,3.0000002 L4.5895576E-06,3.0000002 z M0,0 L3,0 L3,0.99999994 L0,0.99999994 z" Fill="White" Stretch="Fill" UseLayoutRounding="False"/>
            <Path Width="6" Height="7" HorizontalAlignment="Right" Margin="0,2,2,0" VerticalAlignment="Top" Data="M4.5895586E-06,6.000001 L6.0000048,6.000001 L6.0000048,7.000001 L4.5895586E-06,7.000001 z M4.5895586E-06,4.000001 L6.0000048,4.000001 L6.0000048,5.000001 L4.5895586E-06,5.000001 z M4.5895586E-06,2.0000007 L6.0000048,2.0000007 L6.0000048,3.0000007 L4.5895586E-06,3.0000007 z M0,0 L6,0 L6,1 L0,1 z" Fill="White" Stretch="Fill" UseLayoutRounding="False"/>
        </Grid>
    </DataTemplate>
    <DataTemplate x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type igLocal:SpreadsheetContextMenuProvider}, ResourceId=PasteImage}">
        <Grid Width="16" Height="16">
            <Path Width="5" Height="2" HorizontalAlignment="Left" Margin="3,0,0,0" VerticalAlignment="Top" Data="M0.99999994,0 L4,0 L4,0.99999994 L5,0.99999994 L5,2 L0,2 L0,0.99999994 L0.99999994,0.99999994 z" Fill="{StaticResource IconsNormalFill}" Stretch="Fill" UseLayoutRounding="False"/>
            <Path Width="11" Height="12" HorizontalAlignment="Left" Margin="0,1,0,0" VerticalAlignment="Top" Data="M0,0 L2,0 L2,2 L9,2 L9,0 L11,0 L11,3 L5,3 L5,12 L5.2452087E-06,12 z" Fill="{StaticResource IconsNormalFill}" Stretch="Fill" UseLayoutRounding="False"/>
            <Path Margin="6,5,0,0" Data="M8,0.01599128 L10,2.0159912 L10,11.015999 L0,11.015999 L0,0.015625549 z" Fill="{StaticResource IconsDarkFill}" Stretch="Fill" UseLayoutRounding="False"/>
            <Path Width="6" Height="7" HorizontalAlignment="Right" Margin="0,7,2,0" VerticalAlignment="Top" Data="M4.5895586E-06,6.000001 L6.0000048,6.000001 L6.0000048,7.000001 L4.5895586E-06,7.000001 z M4.5895586E-06,4.000001 L6.0000048,4.000001 L6.0000048,5.000001 L4.5895586E-06,5.000001 z M4.5895586E-06,2.0000007 L6.0000048,2.0000007 L6.0000048,3.0000007 L4.5895586E-06,3.0000007 z M0,0 L6,0 L6,1 L0,1 z" Fill="White" Stretch="Fill" UseLayoutRounding="False"/>
        </Grid>
    </DataTemplate>

    <BooleanToVisibilityConverter x:Key="boolToVis" />
    <igConverters:NotBoolToVisibilityConverter x:Key="notBoolToVis" />
    <igLocalPrim:DecimalValueToVisibilityConverter x:Key="DecimalValueToVisibilityConverter" />
    <igLocalPrim:ColorInfoToBrushConverter x:Key="ColorInfoToBrushConverter" />
    <igLocalPrim:PaletteEntryToBrushConverter x:Key="PaletteEntryToBrushConverter" />
    <igLocalPrim:ColorToBrushConverter x:Key="ColorToBrushConverter" />

    <igPrim:ValueConverterGroup x:Key="isEnabledToSplitterExtent">
        <igPrim:FixedValueConverter>
            <igPrim:FixedValueConverter.SourceValue>
                <sys:Boolean>true</sys:Boolean>
            </igPrim:FixedValueConverter.SourceValue>
            <igPrim:FixedValueConverter.DestinationValue>
                <sys:Double>3</sys:Double>
            </igPrim:FixedValueConverter.DestinationValue>
        </igPrim:FixedValueConverter>
        <igPrim:FixedValueConverter>
            <igPrim:FixedValueConverter.DestinationValue>
                <sys:Double>1</sys:Double>
            </igPrim:FixedValueConverter.DestinationValue>
        </igPrim:FixedValueConverter>
    </igPrim:ValueConverterGroup>

    <igPrim:ValueConverterGroup x:Key="notBoolToVisibility">
        <!-- when true then collapse the item, otherwise leave it visible -->
        <igPrim:FixedValueConverter>
            <igPrim:FixedValueConverter.SourceValue>
                <sys:Boolean>True</sys:Boolean>
            </igPrim:FixedValueConverter.SourceValue>
            <igPrim:FixedValueConverter.DestinationValue>
                <Visibility>Collapsed</Visibility>
            </igPrim:FixedValueConverter.DestinationValue>
        </igPrim:FixedValueConverter>
    </igPrim:ValueConverterGroup>

    <igPrim:ValueConverterGroup x:Key="notVisibility">
        <!-- flip the Visibility from Visible to Collapsed -->
        <igPrim:FixedValueConverter>
            <igPrim:FixedValueConverter.SourceValue>
                <Visibility>Visible</Visibility>
            </igPrim:FixedValueConverter.SourceValue>
            <igPrim:FixedValueConverter.DestinationValue>
                <Visibility>Collapsed</Visibility>
            </igPrim:FixedValueConverter.DestinationValue>
        </igPrim:FixedValueConverter>
    </igPrim:ValueConverterGroup>

    <ig:AlphaColorConverter Opacity="0" x:Key="transparentConverter" />
    <ig:CalculatedForegroundConverter x:Key="calculatedForegroundConverter" />
    <igPrim:InverseBooleanConverter x:Key="inverseBooleanConverter"/>
    <igConverters:NotBoolToVisibilityConverter x:Key="notBoolToVisibilityConverter"/>
    <ig:ColorBlendConverter x:Key="colorConverter" />

    <!-- *********************************  STRING RESOURCES  ********************************* -->
    <igLocalPrim:SpreadsheetResourceString x:Key="toolTipFormulaBarNameBox" ResourceName="ToolTip_FormulaBarNameBox" />
    <igLocalPrim:SpreadsheetResourceString x:Key="toolTipFormulaBarCancelButton" ResourceName="ToolTip_FormulaBarCancelButton" />
    <igLocalPrim:SpreadsheetResourceString x:Key="toolTipFormulaBarEnterButton" ResourceName="ToolTip_FormulaBarEnterButton" />
    <igLocalPrim:SpreadsheetResourceString x:Key="toolTipFormulaBarTextEditor" ResourceName="ToolTip_FormulaBarTextEditor" />

    <igLocalPrim:SpreadsheetResourceString x:Key="FilterDialog_Title" ResourceName="FilterDialog_Title" />
    <igLocalPrim:SpreadsheetResourceString x:Key="FilterDialog_OK" ResourceName="FilterDialog_OK" />
    <igLocalPrim:SpreadsheetResourceString x:Key="FilterDialog_Cancel" ResourceName="FilterDialog_Cancel" />
    <igLocalPrim:SpreadsheetResourceString x:Key="FilterDialog_AsteriskHint" ResourceName="FilterDialog_AsteriskHint" />
    <igLocalPrim:SpreadsheetResourceString x:Key="FilterDialog_QuestionMarkHint" ResourceName="FilterDialog_QuestionMarkHint" />
    <igLocalPrim:SpreadsheetResourceString x:Key="FilterDialog_Or" ResourceName="FilterDialog_Or" />
    <igLocalPrim:SpreadsheetResourceString x:Key="FilterDialog_And" ResourceName="FilterDialog_And" />
    <igLocalPrim:SpreadsheetResourceString x:Key="FilterDialog_ShowRowsWhere" ResourceName="FilterDialog_ShowRowsWhere" />

    <!-- MRS 03/26/2018- TFS251439 - TopOrBottom Dialog  -->
    <igLocalPrim:SpreadsheetResourceString x:Key="TopOrBottomDialog_Title" ResourceName="TopOrBottomDialog_Title" />
    <igLocalPrim:SpreadsheetResourceString x:Key="TopOrBottomDialog_OK" ResourceName="TopOrBottomDialog_OK" />
    <igLocalPrim:SpreadsheetResourceString x:Key="TopOrBottomDialog_Cancel" ResourceName="TopOrBottomDialog_Cancel" />
    <igLocalPrim:SpreadsheetResourceString x:Key="TopOrBottomDialog_Show" ResourceName="TopOrBottomDialog_Show" />

    <!-- MRS 06/25/2018 - TFS254608 - SortDialog  -->
    <igLocalPrim:SpreadsheetResourceString x:Key="SortDialog_Title" ResourceName="SortDialog_Title" />
    <igLocalPrim:SpreadsheetResourceString x:Key="SortDialog_OK" ResourceName="SortDialog_OK" />
    <igLocalPrim:SpreadsheetResourceString x:Key="SortDialog_Cancel" ResourceName="SortDialog_Cancel" />
    <igLocalPrim:SpreadsheetResourceString x:Key="SortDialog_AddLevel" ResourceName="SortDialog_AddLevel" />
    <igLocalPrim:SpreadsheetResourceString x:Key="SortDialog_DeleteLevel" ResourceName="SortDialog_DeleteLevel" />
    <igLocalPrim:SpreadsheetResourceString x:Key="SortDialog_CopyLevel" ResourceName="SortDialog_CopyLevel" />
    <igLocalPrim:SpreadsheetResourceString x:Key="SortDialog_MoveUp" ResourceName="SortDialog_MoveUp" />
    <igLocalPrim:SpreadsheetResourceString x:Key="SortDialog_MoveDown" ResourceName="SortDialog_MoveDown" />
    <igLocalPrim:SpreadsheetResourceString x:Key="SortDialog_Options" ResourceName="SortDialog_Options" />
    <igLocalPrim:SpreadsheetResourceString x:Key="SortDialog_MyDataHasHeaders" ResourceName="SortDialog_MyDataHasHeaders" />
    <igLocalPrim:SpreadsheetResourceString x:Key="SortOptionsDialog_Title" ResourceName="SortOptionsDialog_Title" />
    <igLocalPrim:SpreadsheetResourceString x:Key="SortOptionsDialog_OK" ResourceName="SortOptionsDialog_OK" />
    <igLocalPrim:SpreadsheetResourceString x:Key="SortOptionsDialog_Cancel" ResourceName="SortOptionsDialog_Cancel" />
    <igLocalPrim:SpreadsheetResourceString x:Key="SortOptionsDialog_CaseSensitive" ResourceName="SortOptionsDialog_CaseSensitive" />
    <igLocalPrim:SpreadsheetResourceString x:Key="SortOptionsDialog_Orientation" ResourceName="SortOptionsDialog_Orientation" />
    <igLocalPrim:SpreadsheetResourceString x:Key="SortOptionsDialog_SortLeftToRight" ResourceName="SortOptionsDialog_SortLeftToRight" />
    <igLocalPrim:SpreadsheetResourceString x:Key="SortOptionsDialog_SortTopToBottom" ResourceName="SortOptionsDialog_SortTopToBottom" />

    <!-- JM 12/19/2017 - TFS247301 - FormatCellsDialog -->
    <igLocalPrim:SpreadsheetResourceString x:Key="FormatCellsDialog_Title" ResourceName="FormatCellsDialog_Title" />
    <igLocalPrim:SpreadsheetResourceString x:Key="FormatCellsDialog_OK" ResourceName="FormatCellsDialog_OK" />
    <igLocalPrim:SpreadsheetResourceString x:Key="FormatCellsDialog_Cancel" ResourceName="FormatCellsDialog_Cancel" />
    <igLocalPrim:SpreadsheetResourceString x:Key="FormatCellsDialog_NumberTab_CategoryLabel" ResourceName="FormatCellsDialog_NumberTab_CategoryLabel" />
    <igLocalPrim:SpreadsheetResourceString x:Key="FormatCellsDialog_NumberTab_SampleLabel" ResourceName="FormatCellsDialog_NumberTab_SampleLabel" />
    <igLocalPrim:SpreadsheetResourceString x:Key="FormatCellsDialog_NumberTab_DecimalPlaces" ResourceName="FormatCellsDialog_NumberTab_DecimalPlaces" />
    <igLocalPrim:SpreadsheetResourceString x:Key="SpreadsheetFontControl_FontLabel" ResourceName="SpreadsheetFontControl_FontLabel" />
    <igLocalPrim:SpreadsheetResourceString x:Key="SpreadsheetFontControl_FontStyleLabel" ResourceName="SpreadsheetFontControl_FontStyleLabel" />
    <igLocalPrim:SpreadsheetResourceString x:Key="SpreadsheetFontControl_SizeLabel" ResourceName="SpreadsheetFontControl_SizeLabel" />
    <igLocalPrim:SpreadsheetResourceString x:Key="SpreadsheetFontControl_UnderlineLabel" ResourceName="SpreadsheetFontControl_UnderlineLabel" />
    <igLocalPrim:SpreadsheetResourceString x:Key="SpreadsheetFontControl_ColorLabel" ResourceName="SpreadsheetFontControl_ColorLabel" />
    <igLocalPrim:SpreadsheetResourceString x:Key="SpreadsheetFontControl_NormalFontLabel" ResourceName="SpreadsheetFontControl_NormalFontLabel" />
    <igLocalPrim:SpreadsheetResourceString x:Key="SpreadsheetFontControl_StrikethroughLabel" ResourceName="SpreadsheetFontControl_StrikethroughLabel" />
    <igLocalPrim:SpreadsheetResourceString x:Key="SpreadsheetFontControl_SubscriptLabel" ResourceName="SpreadsheetFontControl_SubscriptLabel" />
    <igLocalPrim:SpreadsheetResourceString x:Key="SpreadsheetFontControl_SuperscriptLabel" ResourceName="SpreadsheetFontControl_SuperscriptLabel" />
    <igLocalPrim:SpreadsheetResourceString x:Key="SpreadsheetFontControl_Text_Effects" ResourceName="SpreadsheetFontControl_Text_Effects" />
    <igLocalPrim:SpreadsheetResourceString x:Key="SpreadsheetFontControl_Text_Preview" ResourceName="SpreadsheetFontControl_Text_Preview" />
    <igLocalPrim:SpreadsheetResourceString x:Key="SpreadsheetThemeColorPickerControl_Text_Automatic" ResourceName="SpreadsheetThemeColorPickerControl_Text_Automatic" />
    <igLocalPrim:SpreadsheetResourceString x:Key="SpreadsheetThemeColorPickerControl_Text_NoColor" ResourceName="SpreadsheetThemeColorPickerControl_Text_NoColor" />
    <igLocalPrim:SpreadsheetResourceString x:Key="SpreadsheetThemeColorPickerControl_Text_ThemeColors" ResourceName="SpreadsheetThemeColorPickerControl_Text_ThemeColors" />
    <igLocalPrim:SpreadsheetResourceString x:Key="SpreadsheetThemeColorPickerControl_Text_StandardColors" ResourceName="SpreadsheetThemeColorPickerControl_Text_StandardColors" />
    <igLocalPrim:SpreadsheetResourceString x:Key="FormatCellsDialog_AlignmentTab_Text_Horizontal" ResourceName="FormatCellsDialog_AlignmentTab_Text_Horizontal" />
    <igLocalPrim:SpreadsheetResourceString x:Key="FormatCellsDialog_AlignmentTab_Text_Vertical" ResourceName="FormatCellsDialog_AlignmentTab_Text_Vertical" />
    <igLocalPrim:SpreadsheetResourceString x:Key="FormatCellsDialog_AlignmentTab_Text_TextAlignment" ResourceName="FormatCellsDialog_AlignmentTab_Text_TextAlignment" />
    <igLocalPrim:SpreadsheetResourceString x:Key="FormatCellsDialog_AlignmentTab_Text_Indent" ResourceName="FormatCellsDialog_AlignmentTab_Text_Indent" />
    <igLocalPrim:SpreadsheetResourceString x:Key="FormatCellsDialog_AlignmentTab_Text_JustifyDistributed" ResourceName="FormatCellsDialog_AlignmentTab_Text_JustifyDistributed" />
    <igLocalPrim:SpreadsheetResourceString x:Key="FormatCellsDialog_AlignmentTab_Text_TextControl" ResourceName="FormatCellsDialog_AlignmentTab_Text_TextControl" />
    <igLocalPrim:SpreadsheetResourceString x:Key="FormatCellsDialog_AlignmentTab_Text_WrapText" ResourceName="FormatCellsDialog_AlignmentTab_Text_WrapText" />
    <igLocalPrim:SpreadsheetResourceString x:Key="FormatCellsDialog_AlignmentTab_Text_ShrinkToFit" ResourceName="FormatCellsDialog_AlignmentTab_Text_ShrinkToFit" />
    <igLocalPrim:SpreadsheetResourceString x:Key="FormatCellsDialog_AlignmentTab_Text_MergeCells" ResourceName="FormatCellsDialog_AlignmentTab_Text_MergeCells" />
    <igLocalPrim:SpreadsheetResourceString x:Key="FormatCellsDialog_AlignmentTab_Text_RightToLeft" ResourceName="FormatCellsDialog_AlignmentTab_Text_RightToLeft" />
    <igLocalPrim:SpreadsheetResourceString x:Key="FormatCellsDialog_AlignmentTab_Text_TextDirection" ResourceName="FormatCellsDialog_AlignmentTab_Text_TextDirection" />
    <igLocalPrim:SpreadsheetResourceString x:Key="FormatCellsDialog_FillTab_Text_BackgroundColor" ResourceName="FormatCellsDialog_FillTab_Text_BackgroundColor" />
    <igLocalPrim:SpreadsheetResourceString x:Key="FormatCellsDialog_FillTab_Text_PatternColor" ResourceName="FormatCellsDialog_FillTab_Text_PatternColor" />
    <igLocalPrim:SpreadsheetResourceString x:Key="FormatCellsDialog_FillTab_Text_PatternStyle" ResourceName="FormatCellsDialog_FillTab_Text_PatternStyle" />
    <igLocalPrim:SpreadsheetResourceString x:Key="FormatCellsDialog_FillTab_Text_Sample" ResourceName="FormatCellsDialog_FillTab_Text_Sample" />
    <igLocalPrim:SpreadsheetResourceString x:Key="FormatCellsDialog_ProtectionTab_Text_Locked" ResourceName="FormatCellsDialog_ProtectionTab_Text_Locked" />
    <igLocalPrim:SpreadsheetResourceString x:Key="FormatCellsDialog_ProtectionTab_Text_Hidden" ResourceName="FormatCellsDialog_ProtectionTab_Text_Hidden" />
    <igLocalPrim:SpreadsheetResourceString x:Key="FormatCellsDialog_ProtectionTab_Text_Summary" ResourceName="FormatCellsDialog_ProtectionTab_Text_Summary" />
    <igLocalPrim:SpreadsheetResourceString x:Key="FormatCellsDialog_BorderTab_Text_Line" ResourceName="FormatCellsDialog_BorderTab_Text_Line" />
    <igLocalPrim:SpreadsheetResourceString x:Key="FormatCellsDialog_BorderTab_Text_Style" ResourceName="FormatCellsDialog_BorderTab_Text_Style" />
    <igLocalPrim:SpreadsheetResourceString x:Key="FormatCellsDialog_BorderTab_Text_Color" ResourceName="FormatCellsDialog_BorderTab_Text_Color" />
    <igLocalPrim:SpreadsheetResourceString x:Key="FormatCellsDialog_BorderTab_Text_Presets" ResourceName="FormatCellsDialog_BorderTab_Text_Presets" />
    <igLocalPrim:SpreadsheetResourceString x:Key="FormatCellsDialog_BorderTab_Text_PresetNone" ResourceName="FormatCellsDialog_BorderTab_Text_PresetNone" />
    <igLocalPrim:SpreadsheetResourceString x:Key="FormatCellsDialog_BorderTab_Text_PresetOutline" ResourceName="FormatCellsDialog_BorderTab_Text_PresetOutline" />
    <igLocalPrim:SpreadsheetResourceString x:Key="FormatCellsDialog_BorderTab_Text_PresetInside" ResourceName="FormatCellsDialog_BorderTab_Text_PresetInside" />
    <igLocalPrim:SpreadsheetResourceString x:Key="FormatCellsDialog_BorderTab_Text_Border" ResourceName="FormatCellsDialog_BorderTab_Text_Border" />
    <igLocalPrim:SpreadsheetResourceString x:Key="FormatCellsDialog_BorderTab_Text_SampleText" ResourceName="FormatCellsDialog_BorderTab_Text_SampleText" />
    <igLocalPrim:SpreadsheetResourceString x:Key="FormatCellsDialog_BorderTab_Text_Description" ResourceName="FormatCellsDialog_BorderTab_Text_Description" />

    <Style x:Key="TransparentButtonStyle" TargetType="{x:Type Button}">
		<Setter Property="Foreground" Value="#FF777777" />
		<Setter Property="Padding" Value="0,0,0,2" />
		<Setter Property="MinHeight" Value="22" />
		<Setter Property="MinWidth" Value="22" />
		<Setter Property="HorizontalContentAlignment" Value="Center" />
		<Setter Property="VerticalContentAlignment" Value="Center" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
					<Grid>
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal" />
								<VisualState x:Name="MouseOver">
									<Storyboard>
										<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="contentPresenter" />
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Pressed">
									<Storyboard>
										<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="contentPresenter" />
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Disabled">
									<Storyboard>
										<DoubleAnimation Duration="0" To="0.3" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="contentPresenter" />
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="FocusStates">
								<VisualState x:Name="Focused" />
								<VisualState x:Name="Unfocused" />
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<Rectangle Fill="Transparent" Margin="-6,0" />
						<ContentPresenter Opacity="0.7" x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="GridSplitterStyle" TargetType="{x:Type GridSplitter}">
		<Setter Property="VerticalContentAlignment" Value="Center" />
		<Setter Property="HorizontalContentAlignment" Value="Center" />
		<Setter Property="Width" Value="28" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="GridSplitter">
					<Grid Background="Transparent">
						<Path Margin="{TemplateBinding Padding}" Width="2" Fill="#FFABABAB" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Data="M 0,0 2,0 2,2 0,2 M 0,4 2,4 2,6 0,6 M 0,8 2,8 2,10 0,10" />
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<ControlTemplate x:Key="FormulaBarExpanderToggleButton" TargetType="{x:Type ToggleButton}">
        <Grid>
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CheckStates">
                    <VisualState x:Name="Checked">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.001" Storyboard.TargetName="Unchecked_Arrow" Storyboard.TargetProperty="(UIElement.Visibility)">
                                <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                    <DiscreteObjectKeyFrame.Value>
                                        <Visibility>Collapsed</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.001" Storyboard.TargetName="Checked_Arrow" Storyboard.TargetProperty="(UIElement.Visibility)">
                                <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                    <DiscreteObjectKeyFrame.Value>
                                        <Visibility>Visible</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.001" Storyboard.TargetName="Checked_Arrow" Storyboard.TargetProperty="OpacityMask">
                                <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                    <DiscreteObjectKeyFrame.Value>
                                        <SolidColorBrush>#FF000000</SolidColorBrush>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Unchecked"/>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>

            <Rectangle Margin="0,0,0,0" x:Name="Rectangle" Fill="Transparent" />

			<Grid x:Name="Unchecked_Arrow" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="1,0,2,0" VerticalAlignment="Center" Height="5" Width="7">
				<Rectangle Height="1" Width="2" Margin="0,0,0,0" Fill="#FF777777" VerticalAlignment="Top" HorizontalAlignment="Left" />
				<Rectangle Height="1" Width="2" Margin="0,0,0,0" Fill="#FF777777" VerticalAlignment="Top" HorizontalAlignment="Right" />
				<Rectangle Height="1" Width="3" Margin="0,1,0,0" Fill="#FF777777" VerticalAlignment="Top" HorizontalAlignment="Left" />
				<Rectangle Height="1" Width="3" Margin="0,1,0,0" Fill="#FF777777" VerticalAlignment="Top" HorizontalAlignment="Right" />
				<Rectangle Height="1" Width="5" Margin="1,2,0,0" Fill="#FF777777" VerticalAlignment="Top" HorizontalAlignment="Left" />
				<Rectangle Height="1" Width="3" Margin="2,3,0,0" Fill="#FF777777" VerticalAlignment="Top" HorizontalAlignment="Left" />
				<Rectangle Height="1" Width="1" Margin="3,4,0,0" Fill="#FF777777" VerticalAlignment="Top" HorizontalAlignment="Left" />
			</Grid>
			<Grid x:Name="Checked_Arrow" Visibility="Collapsed" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="1,0,2,0" VerticalAlignment="Center" Height="5" Width="7">
				<Rectangle Height="1" Width="1" Margin="3,0,0,0" Fill="#FF777777" VerticalAlignment="Top" HorizontalAlignment="Left" />
				<Rectangle Height="1" Width="3" Margin="2,1,0,0" Fill="#FF777777" VerticalAlignment="Top" HorizontalAlignment="Left" />
				<Rectangle Height="1" Width="5" Margin="1,2,0,0" Fill="#FF777777" VerticalAlignment="Top" HorizontalAlignment="Left" />
				<Rectangle Height="1" Width="3" Margin="0,3,0,0" Fill="#FF777777" VerticalAlignment="Top" HorizontalAlignment="Right" />
				<Rectangle Height="1" Width="3" Margin="0,3,0,0" Fill="#FF777777" VerticalAlignment="Top" HorizontalAlignment="Left" />
				<Rectangle Height="1" Width="2" Margin="0,4,0,0" Fill="#FF777777" VerticalAlignment="Top" HorizontalAlignment="Left" />
				<Rectangle Height="1" Width="2" Margin="0,4,0,0" Fill="#FF777777" VerticalAlignment="Top" HorizontalAlignment="Right" />
			</Grid>
		</Grid>
    </ControlTemplate>

    <Style TargetType="igLocalPrim:FormulaBarNameBox">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="igLocalPrim:FormulaBarNameBox">
                    <Border
						BorderBrush="{TemplateBinding BorderBrush}"
						BorderThickness="{TemplateBinding BorderThickness}"
						Background="{TemplateBinding Background}"
						Padding="{TemplateBinding Padding}"
						igPrim:XamlHelper.SnapsToDevicePixels="True">
                        <ComboBox x:Name="NameBoxCombo" IsEditable="True"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="igLocalPrim:FormulaBarTextEditor">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="igLocalPrim:FormulaBarTextEditor">
                    <Border
						BorderBrush="{TemplateBinding BorderBrush}"
						BorderThickness="{TemplateBinding BorderThickness}"
						Background="{TemplateBinding Background}"
						Padding="{TemplateBinding Padding}"
						igPrim:XamlHelper.SnapsToDevicePixels="True">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>

                        <igLocalPrim:FormulaBarTextEditorControl x:Name="FormulaTextBox" ScrollViewer.VerticalScrollBarVisibility="Auto">
                            <igLocalPrim:FormulaBarTextEditorControl.Resources>
                                <!--Border colors-->
                                <Color x:Key="BorderMediumColor">#FF888888</Color>
    
                                <!-- Styles -->
                                <Style TargetType="{x:Type ScrollViewer}">
                                    <Setter Property="OverridesDefaultStyle" Value="True" />
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type ScrollViewer}">
                                                <Grid>
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition />
                                                        <ColumnDefinition Width="Auto" />
                                                    </Grid.ColumnDefinitions>
                                                    <Grid.RowDefinitions>
                                                        <RowDefinition Height="Auto" />
                                                        <RowDefinition />
                                                        <RowDefinition Height="Auto" />
                                                    </Grid.RowDefinitions>

                                                    <Border BorderThickness="0,1,1,1" Grid.Row="0" Grid.RowSpan="2">
                                                        <Border.BorderBrush>
                                                            <SolidColorBrush Color="{DynamicResource BorderMediumColor}" />
                                                        </Border.BorderBrush>

                                                        <ScrollContentPresenter CanContentScroll="{TemplateBinding CanContentScroll}"/>
                                                    </Border>

                                                    <!-- Button for toggling the height of the textbox. -->
                                                    <ToggleButton x:Name="ExpanderButton"
                                                                  Content="^" 
                                                                  Grid.Column="1" 
                                                                  igPrim:XamlHelper.Focusable="False"
                                                                  Width="20"
                                                                  Height="20"
                                                                  BorderThickness="1" 
                                                                  BorderBrush="Transparent" 
                                                                  Background="Transparent"
                                                                  VerticalAlignment="Top"
                                                                  Template="{StaticResource FormulaBarExpanderToggleButton}"/>

                                                    <ScrollBar x:Name="PART_VerticalScrollBar"
                                                                 Grid.Row="1"
                                                                 Grid.Column="1"
                                                                 Value="{TemplateBinding VerticalOffset}"
                                                                 Maximum="{TemplateBinding ScrollableHeight}"
                                                                 ViewportSize="{TemplateBinding ViewportHeight}"
                                                                 Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"/>
                                                    <ScrollBar x:Name="PART_HorizontalScrollBar"
                                                                 Orientation="Horizontal"
                                                                 Grid.Row="2"
                                                                 Grid.Column="0"
                                                                 Value="{TemplateBinding HorizontalOffset}"
                                                                 Maximum="{TemplateBinding ScrollableWidth}"
                                                                 ViewportSize="{TemplateBinding ViewportWidth}"
                                                                 Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"/>

                                                </Grid>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </igLocalPrim:FormulaBarTextEditorControl.Resources>
                        </igLocalPrim:FormulaBarTextEditorControl>
                            
                        <Thumb x:Name="ResizeThumb" Grid.Row="1" Height="4" Margin="0,0,0,-2" Cursor="SizeNS" igPrim:XamlHelper.Focusable="False">
                            <Thumb.Template>
                                <ControlTemplate>
                                    <Border Background="Transparent" />
                                </ControlTemplate>
                            </Thumb.Template>
                        </Thumb>
                    </Grid>
                  </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="igLocalPrim:FormulaBarControl">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="igLocalPrim:FormulaBarControl">
                    <Border
						BorderBrush="{TemplateBinding BorderBrush}"
						BorderThickness="{TemplateBinding BorderThickness}"
						Background="{TemplateBinding Background}"
						Padding="{TemplateBinding Padding}"
						Margin="{TemplateBinding Margin}"
						igPrim:XamlHelper.SnapsToDevicePixels="True">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="{Binding Path=NameBoxWidth, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            
                            <!-- Name ComboBox -->
                            <igLocalPrim:FormulaBarNameBox x:Name="FormulaBarNameBox" 
                                                           Grid.Column="0" 
                                                           VerticalAlignment="Top" 
                                                           ToolTip="{Binding Source={StaticResource toolTipFormulaBarNameBox}, Path=Value}"
                                                           IsEnabled="{Binding Path=IsInEditMode, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource inverseBooleanConverter}}"/>
                            
                            <!-- Splitter -->
							<GridSplitter Style="{StaticResource GridSplitterStyle}" 
                                          x:Name="FormulaBarNameBoxSplitter"
                                          igPrim:XamlHelper.Focusable="False"
										  Grid.Column="1" 
                                          ResizeBehavior="PreviousAndCurrent" 
                                          HorizontalAlignment="Center" 
                                          VerticalAlignment="Top"
                                          Height="{Binding ElementName=FormulaBarNameBox, Path=ActualHeight}"
                                          Background="Gray"
                                          Padding="13,0,13,0"/>
                            
                            <!-- OK/Cancel Buttons -->
                            <Border BorderThickness="1" 
                                    BorderBrush="LightGray" 
                                    Grid.Column="2" 
                                    VerticalAlignment="Top"
                                    Height="{Binding ElementName=FormulaBarNameBox, Path=ActualHeight}">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition/>
                                        <ColumnDefinition/>
                                    </Grid.ColumnDefinitions>

									<Button x:Name="CancelButton" igPrim:XamlHelper.Focusable="False" Grid.Column="0" Width="20" BorderThickness="0" Background="Transparent" Margin="3,0,3,0" ToolTip="{Binding Source={StaticResource toolTipFormulaBarCancelButton}, Path=Value}" Style="{StaticResource TransparentButtonStyle}">
                                        <ig:Commanding.Command>
                                            <igLocalPrim:SpreadsheetCommandSource CommandType="ExitEditModeAndDiscardChanges" EventName="Click" />
                                        </ig:Commanding.Command>
										<Button.Content>
											<Path Width="8" Height="8" HorizontalAlignment="Center" VerticalAlignment="Center" Stroke="{Binding Path=Foreground, ElementName=CancelButton}" StrokeThickness="2">
												<Path.Data>
													<GeometryGroup>
														<LineGeometry StartPoint="0,0" EndPoint="8,8" />
														<LineGeometry StartPoint="8,0" EndPoint="0,8" />
													</GeometryGroup>
												</Path.Data>
											</Path>
										</Button.Content>
                                    </Button>
									<Button x:Name="OKButton" igPrim:XamlHelper.Focusable="False" Grid.Column="1" Width="20" BorderThickness="0" Background="Transparent" Margin="3,0,3,0" ToolTip="{Binding Source={StaticResource toolTipFormulaBarEnterButton}, Path=Value}" Style="{StaticResource TransparentButtonStyle}">
                                        <ig:Commanding.Command>
                                            <igLocalPrim:SpreadsheetCommandSource CommandType="ExitEditModeAndUpdateActiveCell" EventName="Click" />
                                        </ig:Commanding.Command>
										<Path Height="8" Width="8" Stretch="Fill" Data="M 1145.607177734375,430 C1145.607177734375,430 1141.449951171875,435.0772705078125 1141.449951171875,435.0772705078125 1141.449951171875,435.0772705078125 1139.232177734375,433.0999755859375 1139.232177734375,433.0999755859375 1139.232177734375,433.0999755859375 1138,434.5538330078125 1138,434.5538330078125 1138,434.5538330078125 1141.482177734375,438 1141.482177734375,438 1141.482177734375,438 1141.96875,437.9375 1141.96875,437.9375 1141.96875,437.9375 1147,431.34619140625 1147,431.34619140625 1147,431.34619140625 1145.607177734375,430 1145.607177734375,430 z" Fill="{Binding Path=Foreground, ElementName=OKButton}" UseLayoutRounding="False" />
                                    </Button>
                                </Grid>
                            </Border>

                            <!-- Formula TextBox -->
                            <igLocalPrim:FormulaBarTextEditor x:Name="FormulaBarTextEditor" Grid.Column="3" Margin="4,0,0,0" ToolTip="{Binding Source={StaticResource toolTipFormulaBarTextEditor}, Path=Value}"/>
                            
                            <!-- Button for toggling the height of the formula textbox.  Place this button on top of the 
                            FormulaBarTextEditor and align it to the right so it looks like a dropdown button. -->
                            <!--<ToggleButton Content="^" 
                                          Grid.Column="3" 
                                          Width="15" 
                                          BorderThickness="1" 
                                          BorderBrush="Transparent" 
                                          Background="Transparent" 
                                          HorizontalAlignment="Right" 
                                          VerticalAlignment="Top"/>-->
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="igLocal:XamSpreadsheet">
        <Setter Property="Background" Value="#FFFFFFFF" />
		<Setter Property="BorderBrush" Value="#FFABABAB" />
		<Setter Property="BorderThickness" Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="igLocal:XamSpreadsheet">
                    <Border
						BorderBrush="{TemplateBinding BorderBrush}"
						BorderThickness="{TemplateBinding BorderThickness}"
						Background="{TemplateBinding Background}"
						Padding="{TemplateBinding Padding}"
						igPrim:XamlHelper.SnapsToDevicePixels="True">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>

                            <igLocalPrim:FormulaBarControl x:Name="FormulaBar" Grid.Row="0" Margin="3,5,3,5" Visibility="{Binding Path=IsFormulaBarVisible, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource boolToVis}}"/>
                            
                            <igLocalPrim:SpreadsheetLayoutPanel x:Name="RootPanel" Grid.Row="1"/>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="igLocalPrim:SpreadsheetSelectAllButton">
        <Setter Property="Padding" Value="4" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="igLocalPrim:SpreadsheetSelectAllButton">
                    <Border
						Background="{Binding Path=(igPrim:ResourceProvider.ResourceProvider)[SelectAllBackground], RelativeSource={RelativeSource TemplatedParent}}"
						igPrim:XamlHelper.SnapsToDevicePixels="True"
                        Padding="{TemplateBinding Padding}">
                        <Path 
                            x:Name="triangle"
                            Data="M 0,1 1,1 1,0 Z" 
                            Stretch="UniformToFill" 
                            Fill="{Binding Path=(igPrim:ResourceProvider.ResourceProvider)[SelectAllTriangleFill], RelativeSource={RelativeSource TemplatedParent}}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Fill" TargetName="triangle" Value="{Binding Path=(igPrim:ResourceProvider.ResourceProvider)[SelectAllTriangleHotTrackFill], RelativeSource={RelativeSource TemplatedParent}}" />
                        </Trigger>
                        <Trigger Property="AreAllRowsAndColumnsSelected" Value="True">
                            <Setter Property="Fill" TargetName="triangle" Value="{Binding Path=(igPrim:ResourceProvider.ResourceProvider)[SelectAllTriangleSelectedFill], RelativeSource={RelativeSource TemplatedParent}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style x:Key="paneSplitterStyle" TargetType="Control">
        <Setter Property="Background" Value="{Binding Path=(igPrim:ResourceProvider.ResourceProvider)[SheetPaneSplitterBackground], RelativeSource={RelativeSource Self}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Control">
                    <Border Background="{TemplateBinding Background}"
                            MinWidth="{Binding IsEnabled, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource isEnabledToSplitterExtent}}"
                            MinHeight="{Binding MinWidth, RelativeSource={RelativeSource Self}}"
                            />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style TargetType="igLocalPrim:SpreadsheetPaneSplitter" BasedOn="{StaticResource paneSplitterStyle}">
    </Style>

    <Style TargetType="igLocalPrim:SpreadsheetPaneSplitterIntersection" BasedOn="{StaticResource paneSplitterStyle}">
    </Style>

    <Style TargetType="ButtonBase" x:Key="tabAreaBtn">
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="igPrim:XamlHelper.Focusable" Value="False" />
        <Setter Property="Width" Value="28" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ButtonBase">
                    <Grid Background="Transparent">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style TargetType="ButtonBase" x:Key="tabAreaAddBtn" BasedOn="{StaticResource tabAreaBtn}">
        <Setter Property="Foreground" Value="{Binding Path=(igPrim:ResourceProvider.ResourceProvider)[AddSheetButtonForeground], RelativeSource={RelativeSource TemplatedParent}}" />
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Foreground" Value="{Binding Path=(igPrim:ResourceProvider.ResourceProvider)[AddSheetButtonDisabledForeground], RelativeSource={RelativeSource TemplatedParent}}" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{Binding Path=(igPrim:ResourceProvider.ResourceProvider)[AddSheetButtonHotTrackForeground], RelativeSource={RelativeSource TemplatedParent}}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    
    <Style TargetType="ButtonBase" x:Key="tabAreaScrollBtn" BasedOn="{StaticResource tabAreaBtn}">
        <Setter Property="Foreground" Value="{Binding Path=(igPrim:ResourceProvider.ResourceProvider)[TabScrollButtonForeground], RelativeSource={RelativeSource TemplatedParent}}" />
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Foreground" Value="{Binding Path=(igPrim:ResourceProvider.ResourceProvider)[TabScrollButtonDisabledForeground], RelativeSource={RelativeSource TemplatedParent}}" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{Binding Path=(igPrim:ResourceProvider.ResourceProvider)[TabScrollButtonHotTrackForeground], RelativeSource={RelativeSource TemplatedParent}}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    
    <Style TargetType="ButtonBase" x:Key="ellipseBtn" BasedOn="{StaticResource tabAreaScrollBtn}">
        <Setter Property="Width" Value="27" />
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="igLocalPrim:SpreadsheetTabItemArea">
        <Setter Property="Padding" Value="6,0,0,0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="igLocalPrim:SpreadsheetTabItemArea">
                    <Grid Background="Transparent">
                        <Grid Margin="{TemplateBinding Padding}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <RepeatButton 
                                Grid.Column="0" 
                                x:Name="ScrollPrevious" 
                                Style="{StaticResource tabAreaScrollBtn}">
                                <ig:Commanding.Commands>
                                    <ig:CommandSourceCollection>
                                        <igLocalPrim:SpreadsheetCommandSource CommandType="ScrollPreviousWorksheet" EventName="Click" DisallowedModifiers="Control" />
                                        <igLocalPrim:SpreadsheetCommandSource CommandType="ScrollToFirstWorksheet" EventName="Click" RequiredModifiers="Control" />
                                    </ig:CommandSourceCollection>
                                </ig:Commanding.Commands>
								<Grid>
									<Rectangle StrokeThickness="0" Height="1" Width="1" Margin="0,0,0,6" Fill="{Binding Path=Foreground, ElementName=ScrollPrevious}" igPrim:XamlHelper.SnapsToDevicePixels="True" HorizontalAlignment="Right" VerticalAlignment="Center" />
									<Rectangle StrokeThickness="0" Height="1" Width="2" Margin="0,0,0,4" Fill="{Binding Path=Foreground, ElementName=ScrollPrevious}" igPrim:XamlHelper.SnapsToDevicePixels="True" HorizontalAlignment="Right" VerticalAlignment="Center" />
									<Rectangle StrokeThickness="0" Height="1" Width="3" Margin="0,0,0,2" Fill="{Binding Path=Foreground, ElementName=ScrollPrevious}" igPrim:XamlHelper.SnapsToDevicePixels="True" HorizontalAlignment="Right" VerticalAlignment="Center" />
									<Rectangle StrokeThickness="0" Height="1" Width="4" Margin="0,0,0,0" Fill="{Binding Path=Foreground, ElementName=ScrollPrevious}" igPrim:XamlHelper.SnapsToDevicePixels="True" HorizontalAlignment="Right" VerticalAlignment="Center" />
									<Rectangle StrokeThickness="0" Height="1" Width="3" Margin="0,2,0,0" Fill="{Binding Path=Foreground, ElementName=ScrollPrevious}" igPrim:XamlHelper.SnapsToDevicePixels="True" HorizontalAlignment="Right" VerticalAlignment="Center" />
									<Rectangle StrokeThickness="0" Height="1" Width="2" Margin="0,4,0,0" Fill="{Binding Path=Foreground, ElementName=ScrollPrevious}" igPrim:XamlHelper.SnapsToDevicePixels="True" HorizontalAlignment="Right" VerticalAlignment="Center" />
									<Rectangle StrokeThickness="0" Height="1" Width="1" Margin="0,6,0,0" Fill="{Binding Path=Foreground, ElementName=ScrollPrevious}" igPrim:XamlHelper.SnapsToDevicePixels="True" HorizontalAlignment="Right" VerticalAlignment="Center" />
								</Grid>
							</RepeatButton>
                            <RepeatButton 
                                Grid.Column="1" 
                                x:Name="ScrollNext" 
                                Style="{StaticResource tabAreaScrollBtn}">
                                <ig:Commanding.Commands>
                                    <ig:CommandSourceCollection>
                                        <igLocalPrim:SpreadsheetCommandSource CommandType="ScrollNextWorksheet" EventName="Click" DisallowedModifiers="Control" />
                                        <igLocalPrim:SpreadsheetCommandSource CommandType="ScrollToLastWorksheet" EventName="Click" RequiredModifiers="Control" />
                                    </ig:CommandSourceCollection>
                                </ig:Commanding.Commands>
								<Grid>
									<Rectangle StrokeThickness="0" Height="1" Width="1" Margin="0,0,0,6" Fill="{Binding Path=Foreground, ElementName=ScrollNext}" igPrim:XamlHelper.SnapsToDevicePixels="True" HorizontalAlignment="Left" VerticalAlignment="Center" />
									<Rectangle StrokeThickness="0" Height="1" Width="2" Margin="0,0,0,4" Fill="{Binding Path=Foreground, ElementName=ScrollNext}" igPrim:XamlHelper.SnapsToDevicePixels="True" HorizontalAlignment="Left" VerticalAlignment="Center" />
									<Rectangle StrokeThickness="0" Height="1" Width="3" Margin="0,0,0,2" Fill="{Binding Path=Foreground, ElementName=ScrollNext}" igPrim:XamlHelper.SnapsToDevicePixels="True" HorizontalAlignment="Left" VerticalAlignment="Center" />
									<Rectangle StrokeThickness="0" Height="1" Width="4" Margin="0,0,0,0" Fill="{Binding Path=Foreground, ElementName=ScrollNext}" igPrim:XamlHelper.SnapsToDevicePixels="True" HorizontalAlignment="Left" VerticalAlignment="Center" />
									<Rectangle StrokeThickness="0" Height="1" Width="3" Margin="0,2,0,0" Fill="{Binding Path=Foreground, ElementName=ScrollNext}" igPrim:XamlHelper.SnapsToDevicePixels="True" HorizontalAlignment="Left" VerticalAlignment="Center" />
									<Rectangle StrokeThickness="0" Height="1" Width="2" Margin="0,4,0,0" Fill="{Binding Path=Foreground, ElementName=ScrollNext}" igPrim:XamlHelper.SnapsToDevicePixels="True" HorizontalAlignment="Left" VerticalAlignment="Center" />
									<Rectangle StrokeThickness="0" Height="1" Width="1" Margin="0,6,0,0" Fill="{Binding Path=Foreground, ElementName=ScrollNext}" igPrim:XamlHelper.SnapsToDevicePixels="True" HorizontalAlignment="Left" VerticalAlignment="Center" />
								</Grid>
							</RepeatButton>
                            <Button 
                                x:Name="ActivatePrevious"
                                Grid.Column="2" 
                                Style="{StaticResource ellipseBtn}">
                                <ig:Commanding.Command>
                                    <igLocalPrim:SpreadsheetCommandSource CommandType="ActivatePreviousOutOfViewWorksheet" EventName="Click" />
                                </ig:Commanding.Command>
								<Path Fill="{Binding Path=Foreground, ElementName=ActivatePrevious}" igPrim:XamlHelper.SnapsToDevicePixels="True" Data="M 0,0 2,0 2,2 0,2 M 4,0 6,0 6,2 4,2 M 8,0 10,0 10,2 8,2" />
							</Button>
                            <Button 
                                x:Name="ActivateNext"
                                Grid.Column="4" 
                                Style="{StaticResource ellipseBtn}">
                                <ig:Commanding.Command>
                                    <igLocalPrim:SpreadsheetCommandSource CommandType="ActivateNextOutOfViewWorksheet" EventName="Click" />
                                </ig:Commanding.Command>
								<Path Fill="{Binding Path=Foreground, ElementName=ActivateNext}" igPrim:XamlHelper.SnapsToDevicePixels="True" Data="M 0,0 2,0 2,2 0,2 M 4,0 6,0 6,2 4,2 M 8,0 10,0 10,2 8,2" />
							</Button>
                            <Button 
                                x:Name="AddSheet"
                                Grid.Column="5" 
                                Visibility="{Binding Path=AllowAddWorksheet, RelativeSource={RelativeSource AncestorType={x:Type igLocal:XamSpreadsheet}}, Converter={StaticResource boolToVis}}"
                                Style="{StaticResource tabAreaAddBtn}">
								<ig:Commanding.Command>
									<igLocalPrim:SpreadsheetCommandSource CommandType="AddNewWorksheet" EventName="Click" />
								</ig:Commanding.Command>
								<Grid>
									<Ellipse Width="16" Height="16" Stroke="{Binding Path=Foreground, ElementName=AddSheet}" StrokeThickness="1" />
									<Rectangle Height="8" Width="2" Fill="{Binding Path=Foreground, ElementName=AddSheet}" igPrim:XamlHelper.SnapsToDevicePixels="True" HorizontalAlignment="Center" VerticalAlignment="Center" />
									<Rectangle Height="2" Width="8" Fill="{Binding Path=Foreground, ElementName=AddSheet}" igPrim:XamlHelper.SnapsToDevicePixels="True" HorizontalAlignment="Center" VerticalAlignment="Center" />
								</Grid>
                            </Button>
                            <igLocalPrim:SpreadsheetTabItemPanel Grid.Column="3" x:Name="TabItemPanel" />
                        </Grid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="igLocalPrim:SpreadsheetTabItem">
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="10,0,10,0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="igLocalPrim:SpreadsheetTabItem">
                    <Grid Background="Transparent">
                        <Border 
                            x:Name="background"
                            Margin="0,1,0,0"
                            Background="{Binding Path=(igPrim:ResourceProvider.ResourceProvider)[TabItemBackground], RelativeSource={RelativeSource TemplatedParent}}" />
                        <Border 
                            x:Name="normalBorder" 
                            igPrim:XamlHelper.SnapsToDevicePixels="True" 
                            BorderThickness="1,0,1,0" 
                            BorderBrush="{Binding Path=(igPrim:ResourceProvider.ResourceProvider)[TabAreaBorder], RelativeSource={RelativeSource TemplatedParent}}" 
                            Margin="0,4,0,4" />
                        <Border 
                            x:Name="selectedSideBorder" 
                            igPrim:XamlHelper.SnapsToDevicePixels="True" 
                            Visibility="Collapsed" 
                            BorderThickness="1,0,1,0" 
                            BorderBrush="{Binding Path=(igPrim:ResourceProvider.ResourceProvider)[TabAreaBorder], RelativeSource={RelativeSource TemplatedParent}}" 
                            Margin="0,0,0,5" />
                        <Border 
                            x:Name="selectedBottomBorder" 
                            igPrim:XamlHelper.SnapsToDevicePixels="True" 
                            Visibility="Collapsed" 
                            BorderThickness="0,0,0,2" 
                            BorderBrush="{Binding Path=(igPrim:ResourceProvider.ResourceProvider)[SelectedTabHighlight], RelativeSource={RelativeSource TemplatedParent}}" 
                            Margin="0,0,0,3" />
                        
                        <Grid Margin="3,3,3,3" x:Name="TextGrid">
                            <Grid x:Name="CustomColorBackground" Visibility="Collapsed">
                                <Grid.Background>
                                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1" Opacity="0.5">
                                        <GradientStop Color="{Binding Path=CustomColor, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource transparentConverter}, FallbackValue=Transparent}" Offset="0" />
                                        <GradientStop Color="{Binding Path=CustomColor, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource colorConverter}, FallbackValue=Transparent}" Offset="1" />
                                    </LinearGradientBrush>
                                </Grid.Background>
                            </Grid>
                            <TextBlock 
                                x:Name="normalText"
                                Margin="0,1,0,3"
                                Padding="{TemplateBinding Padding}" 
                                Foreground="{Binding Path=(igPrim:ResourceProvider.ResourceProvider)[TabItemForeground], RelativeSource={RelativeSource TemplatedParent}}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                Text="{TemplateBinding WorksheetName}" 
                                />
                            <TextBlock 
                                x:Name="boldText"
                                Margin="0,1,0,3"
                                FontWeight="Bold"
                                Visibility="Hidden"
                                Padding="{TemplateBinding Padding}" 
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                Text="{TemplateBinding WorksheetName}" 
                                />
                            
                            <!-- Note the negative padding is to counteract the default margins that the 
                            TextBoxView has on itself -->
                            <TextBox 
                                x:Name="TextBox" 
                                Visibility="Collapsed" 
                                BorderThickness="0" 
                                FontWeight="Bold"
                                Padding="-2,0,-2,0"
                                Margin="{TemplateBinding Padding}" />
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="IsSelected" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="background" Property="Background" Value="{Binding Path=(igPrim:ResourceProvider.ResourceProvider)[TabItemHotTrackBackground], RelativeSource={RelativeSource TemplatedParent}}" />
                            <Setter TargetName="boldText" Property="Foreground" Value="{Binding Path=(igPrim:ResourceProvider.ResourceProvider)[TabItemHotTrackForeground], RelativeSource={RelativeSource TemplatedParent}}" />
                            <Setter TargetName="boldText" Property="Visibility" Value="Visible" />
                            <Setter TargetName="normalText" Property="Visibility" Value="Hidden" />
                        </MultiTrigger>
                        
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsActive" Value="False" />
                                <Condition Property="IsSelected" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="background" Property="Background" Value="{Binding Path=(igPrim:ResourceProvider.ResourceProvider)[TabItemSelectedBackground], RelativeSource={RelativeSource TemplatedParent}}" />
                            <Setter TargetName="boldText" Property="Foreground" Value="{Binding Path=(igPrim:ResourceProvider.ResourceProvider)[TabItemSelectedForeground], RelativeSource={RelativeSource TemplatedParent}}" />
                        </MultiTrigger>
                        
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="TextGrid" Property="Margin" Value="3,4,3,6" />
                            <Setter TargetName="boldText" Property="Margin" Value="0,0,0,0" />
                            <Setter TargetName="boldText" Property="Visibility" Value="Visible" />
                            <Setter TargetName="normalText" Property="Margin" Value="0,0,0,0" />
                            <Setter TargetName="normalText" Property="Visibility" Value="Hidden" />
                            <Setter TargetName="selectedSideBorder" Property="Visibility" Value="Visible" />
                            <Setter TargetName="selectedBottomBorder" Property="Visibility" Value="Visible" />
                            <Setter TargetName="normalBorder" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        
                        <Trigger Property="IsActive" Value="True">
                            <Setter TargetName="background" Property="Margin" Value="0" />
                            <Setter TargetName="background" Property="Background" Value="{Binding Path=(igPrim:ResourceProvider.ResourceProvider)[TabItemActiveBackground], RelativeSource={RelativeSource TemplatedParent}}" />
                            <Setter TargetName="boldText" Property="Foreground" Value="{Binding Path=(igPrim:ResourceProvider.ResourceProvider)[TabItemActiveForeground], RelativeSource={RelativeSource TemplatedParent}}" />
                        </Trigger>
                        
                        <!-- if there's a custom color and its selected then we'll use a half-opaque
                        gradient of that color -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="HasCustomColor" Value="True" />
                                <Condition Property="IsSelected" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="CustomColorBackground" Property="Visibility"  Value="Visible" />
                        </MultiTrigger>
                        
                        <!-- if there's a custom color and the tab is not selected then we'll use that 
                        background behind the text so we also need to calculate the foreground -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="HasCustomColor" Value="True" />
                                <Condition Property="IsSelected" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="TextGrid" Property="Background" Value="{Binding Path=CustomColor, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource colorConverter}}" />
                            <Setter TargetName="normalText" Property="Foreground" Value="{Binding Path=CustomColor, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource calculatedForegroundConverter}}" />
                            <Setter TargetName="boldText" Property="Foreground" Value="{Binding ElementName=normalText, Path=Foreground}" />
                        </MultiTrigger>
                        
                        <Trigger Property="IsEditing" Value="True">
                            <Setter TargetName="boldText" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="normalText" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="TextBox" Property="Visibility" Value="Visible" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style TargetType="igLocalPrim:SpreadsheetTabItemAreaSplitter">
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="Width" Value="28" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="igLocalPrim:SpreadsheetTabItemAreaSplitter">
                    <Grid Background="Transparent">
                        <Path Fill="{Binding Path=(igPrim:ResourceProvider.ResourceProvider)[TabAreaSplitterForeground], RelativeSource={RelativeSource TemplatedParent}}"
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
							  Data="M 0,0 2,0 2,2 0,2 M 0,4 2,4 2,6 0,6 M 0,8 2,8 2,10 0,10" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="igLocalPrim:SpreadsheetInputMessageControl">
        <Setter Property="MaxWidth" Value="260" />
        <Setter Property="MaxHeight" Value="170" />
        <Setter Property="Foreground" Value="{Binding Path=(igPrim:ResourceProvider.ResourceProvider)[InputMessageForeground], RelativeSource={RelativeSource Self}}" />
        <Setter Property="BorderBrush" Value="{Binding Path=(igPrim:ResourceProvider.ResourceProvider)[InputMessageBorder], RelativeSource={RelativeSource Self}}" />
        <Setter Property="Background" Value="{Binding Path=(igPrim:ResourceProvider.ResourceProvider)[InputMessageBackground], RelativeSource={RelativeSource Self}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="igLocalPrim:SpreadsheetInputMessageControl">
                    <Border 
                        BorderBrush="{TemplateBinding BorderBrush}" 
                        Background="{TemplateBinding Background}" 
                        BorderThickness="1" 
                        Padding="4,2,6,5">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition />
                            </Grid.RowDefinitions>
                            <TextBlock Grid.Row="0" 
                                       Text="{TemplateBinding Title}" 
                                       Foreground="{TemplateBinding Foreground}"
                                       FontWeight="Bold" 
                                       Padding="0,0,22,0"
                                       Visibility="{Binding Path=HasTitle, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource boolToVis}}"
                                       />
                            <TextBlock Grid.Row="1" 
                                       Text="{TemplateBinding Message}" 
                                       Foreground="{TemplateBinding Foreground}"
                                       TextWrapping="Wrap" 
                                       Padding="2,0,0,0"
                                       />
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- MRS 12/12/2017 - TFS246687 - Filter Dialog  -->
    <!-- _________________________ SpreadsheetFilterDialogControl ______________________________________ -->
    <Style TargetType="igLocalPrim:SpreadsheetFilterDialogControl">
        <Setter Property="TitleDescription" Value="{Binding Source={StaticResource FilterDialog_Title}, Path=Value}"  />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="igLocalPrim:SpreadsheetFilterDialogControl">
                    <Grid Margin="5">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <TextBlock Grid.Row="0" Text="{Binding Source={StaticResource FilterDialog_ShowRowsWhere}, Path=Value}" Margin="3,3,0,0"/>
                        <TextBlock Name="lblColumnName" Grid.Row="1" Text="{Binding Path=ColumnName }" Margin="8,8,0,0"/>
                        <Grid Grid.Row="2">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" MinWidth="191"/>
                                <ColumnDefinition Width="Auto" MinWidth="525 "/>
                            </Grid.ColumnDefinitions>
                            <ComboBox Name="cboOperator1" Grid.Row="0" Grid.Column="0" Margin="25,8,0,0" ItemsSource="{Binding Path=OperatorsList}" DisplayMemberPath="DisplayText" SelectedValuePath="DataValue" SelectedValue="{Binding Path=Operator1}"/>
                            <ComboBox Name="cboOperand1" Grid.Row="0" Grid.Column="1" Margin="8,8,8,0" IsEditable="True" ItemsSource="{Binding Path=OperandsList}" Text="{Binding Path=Operand1}"/>

                            <Grid Grid.Row="1" Grid.Column="0">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>

                                <RadioButton Name="optAnd" Content="{Binding Source={StaticResource FilterDialog_And}, Path=Value}" Grid.Row="0" Grid.Column="0" Margin="40,8,0,0" IsChecked="{Binding Path=IsAnd}" />
                                <RadioButton Name="optOr" Content="{Binding Source={StaticResource FilterDialog_Or}, Path=Value}" Grid.Row="0" Grid.Column="1" Margin="8,8,0,0" IsChecked="{Binding Path=IsOr}"/>
                            </Grid>

                            <ComboBox Name="cboOperator2" Grid.Row="2" Grid.Column="0" Margin="25,8,0,0" ItemsSource="{Binding Path=OperatorsList}" DisplayMemberPath="DisplayText" SelectedValuePath="DataValue"  SelectedValue="{Binding Path=Operator2}"/>
                            <ComboBox Name="cboOperand2" Grid.Row="2" Grid.Column="1" Margin="8,8,8,0" IsEditable="True" ItemsSource="{Binding Path=OperandsList}" Text="{Binding Path=Operand2}"/>
                        </Grid>
                        <TextBlock Grid.Row="3" Text="{Binding Source={StaticResource FilterDialog_QuestionMarkHint}, Path=Value}" Margin="3,8,0,0"/>
                        <TextBlock Grid.Row="4" Text="{Binding Source={StaticResource FilterDialog_AsteriskHint}, Path=Value}" Margin="3,0,0,0"/>
                        <Grid Grid.Row="5">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <Button Name="btnOK" Grid.Column ="1" Content="{Binding Source={StaticResource FilterDialog_OK}, Path=Value}" Margin="0,8,0,8" Command="{x:Static igLocalPrim:SpreadsheetFilterDialogControl.ApplyFilterCommand}" Padding="5 3" MinWidth="55"/>
                            <Button Name="btnCancel" Grid.Column ="2" Content="{Binding Source={StaticResource FilterDialog_Cancel}, Path=Value}" Margin="8,8,8,8" Command="{x:Static igLocalPrim:SpreadsheetFilterDialogControl.CancelCommand}" Padding="5 3" MinWidth="55"/>
                        </Grid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- MRS 03/26/2018- TFS251439 - TopOrBottom Dialog  -->
    <!-- _________________________ SpreadsheetTopOrBottomDialogControl ______________________________________ -->
    <Style TargetType="igLocalPrim:SpreadsheetTopOrBottomDialogControl">
        <Setter Property="TitleDescription" Value="{Binding Source={StaticResource TopOrBottomDialog_Title}, Path=Value}"  />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="igLocalPrim:SpreadsheetTopOrBottomDialogControl">
                    <Grid Margin="5">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <TextBlock x:Name="lblShow" Grid.Row="0" Text="{Binding Source={StaticResource TopOrBottomDialog_Show}, Path=Value}" Margin="3,3,0,0"/>
                        <Grid Grid.Row="1">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" MinWidth="91"/>
                                <ColumnDefinition Width="Auto" MinWidth="58"/>
                                <ColumnDefinition Width="Auto" MinWidth="91"/>
                            </Grid.ColumnDefinitions>
                            <ComboBox x:Name="cboOperator" Grid.Row="0" Grid.Column="0" MinWidth="91" Margin="25,8,0,0"
                                      ItemsSource="{Binding Path=OperatorsList}" DisplayMemberPath="DisplayText" SelectedValuePath="DataValue" SelectedValue="{Binding Path=IsTop}"/>
                            <igEditors:XamNumericEditor x:Name="nudValue" Grid.Row="0" Grid.Column="1" MinWidth="58" Margin="8,8,0,0" SpinButtonDisplayMode="Always" Value="{Binding Path=Value}" Mask="nnn" ValueType="{x:Type sys:Int32}">
                                <igEditors:XamNumericEditor.ValueConstraint>
                                    <igEditors:ValueConstraint MinInclusive="1" MaxInclusive="500"/>
                                </igEditors:XamNumericEditor.ValueConstraint>
                            </igEditors:XamNumericEditor>
                            <ComboBox x:Name="cboType" Grid.Row="0" Grid.Column="2" MinWidth="91" Margin="8,8,0,0"
                                      ItemsSource="{Binding Path=TypesList}" DisplayMemberPath="DisplayText" SelectedValuePath="DataValue" SelectedValue="{Binding Path=IsPercent}"/>
                        </Grid>
                        <Grid Grid.Row="2">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <Button Name="btnOK" Grid.Column ="1" Content="{Binding Source={StaticResource TopOrBottomDialog_OK}, Path=Value}" Margin="0,8,0,8" Command="{x:Static igLocalPrim:SpreadsheetTopOrBottomDialogControl.ApplyFilterCommand}" Padding="5 3" MinWidth="55"/>
                            <Button Name="btnCancel" Grid.Column ="2" Content="{Binding Source={StaticResource TopOrBottomDialog_Cancel}, Path=Value}" Margin="8,8,8,8" Command="{x:Static igLocalPrim:SpreadsheetTopOrBottomDialogControl.CancelCommand}" Padding="5 3" MinWidth="55"/>
                        </Grid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- MRS 6/25/2018 - TFS254608 - Sort Dialog  -->
    <!-- _________________________ SpreadsheetSortDialogControl ______________________________________ -->
    <Style TargetType="igLocalPrim:SpreadsheetSortDialogControl">        
        <Setter Property="TitleDescription" Value="{Binding Source={StaticResource SortDialog_Title}, Path=Value}"  />
        <Setter Property="Margin" Value="5,0,8,5"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="igLocalPrim:SpreadsheetSortDialogControl">                    
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <DockPanel Grid.Row="0" HorizontalAlignment="Stretch" Margin="5">
                            <Button Name="btnAddLevel" 
                                    Padding="5,3"
                                    Margin="5,8,0,8" 
                                    Command="{x:Static igLocalPrim:SpreadsheetSortDialogControl.AddLevelCommand}">
                                <Button.Content>
                                    <StackPanel Orientation="Horizontal">
                                        <Grid Height="16" Width="16">
                                            <Path Data="M 7 13 L 9 13 L 9 9 L 13 9 L 13 7 L 9 7 L 9 3 L 7 3 L 7 7 L 3 7 L 3 9 L 7 9 L 7 13 Z" 
                                            Fill="#666666" Height="10" Width="10" Stretch="Fill" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                        </Grid>
                                        <Label Content="{Binding Source={StaticResource SortDialog_AddLevel}, Path=Value}"/>
                                    </StackPanel>
                                </Button.Content>                                
                            </Button>
                            <Button Name="btnDeleteLevel"  
                                    Padding="5,3"
                                    Margin="5,8,0,8" 
                                    Command="{x:Static igLocalPrim:SpreadsheetSortDialogControl.DeleteLevelCommand}" 
                                    >
                                <Button.Content>
                                    <StackPanel Orientation="Horizontal">
                                        <Grid Height="16" Width="16">
                                            <Path x:Name="DeleteLevel_Image_Enabled" Visibility="{Binding ElementName=btnDeleteLevel, Path=IsEnabled, Converter={StaticResource boolToVis}}" Data="M 3 4.4285 L 6.5715 8 L 3 11.5715 L 4.4287 13 L 8 9.4285 L 11.5713 13 L 13 11.5715 L 9.4285 8 L 13 4.4285 L 11.5713 3 L 8 6.5715 L 4.4287 3 L 3 4.4285 Z" Fill="#666666" Height="10" Width="10" Stretch="Fill" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                            <Path x:Name="DeleteLevel_Image_Disabled" Visibility="{Binding ElementName=btnDeleteLevel, Path=IsEnabled, Converter={StaticResource notBoolToVis}}" Data="M 3 4.4285 L 6.5715 8 L 3 11.5715 L 4.4287 13 L 8 9.4285 L 11.5713 13 L 13 11.5715 L 9.4285 8 L 13 4.4285 L 11.5713 3 L 8 6.5715 L 4.4287 3 L 3 4.4285 Z" Fill="#666666" Height="10" Width="10" Stretch="Fill" HorizontalAlignment="Center" VerticalAlignment="Center" Opacity="0.4"/>
                                        </Grid>
                                        <Label Content="{Binding Source={StaticResource SortDialog_DeleteLevel}, Path=Value}"/>
                                    </StackPanel>
                                </Button.Content>                                
                            </Button>
                            <Button Name="btnCopyLevel"                                    
                                    Padding="5,3"
                                    Margin="5,8,0,8" 
                                    Command="{x:Static igLocalPrim:SpreadsheetSortDialogControl.CopyLevelCommand}"
                                    >
                                <Button.Content>
                                    <StackPanel Orientation="Horizontal">
                                        <Grid Height="16" Width="16">
                                            <Path x:Name="CopyLevel_Image_Enabled" Visibility="{Binding ElementName=btnCopyLevel, Path=IsEnabled, Converter={StaticResource boolToVis}}" Data="M 8 9 L 8 10 L 3 10 L 3 9 L 8 9 ZM 8 5 L 8 6 L 3 6 L 3 5 L 8 5 ZM 8 3 L 8 4 L 3 4 L 3 3 L 8 3 ZM 8 7 L 8 8 L 3 8 L 3 7 L 8 7 ZM 10 1 L 1 1 L 1 12 L 10 12 L 10 1 ZM 15 4 L 11 4 L 11 6 L 13 6 L 13 7 L 11 7 L 11 8 L 13 8 L 13 9 L 11 9 L 11 10 L 13 10 L 13 11 L 11 11 L 11 12 L 13 12 L 13 13 L 11 13 L 8 13 L 6 13 L 6 15 L 15 15 L 15 4 Z" Fill="#666666" Width="14" Height="13" Stretch="Fill" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                            <Path x:Name="CopyLevel_Image_Disabled" Visibility="{Binding ElementName=btnCopyLevel, Path=IsEnabled, Converter={StaticResource notBoolToVis}}" Data="M 8 9 L 8 10 L 3 10 L 3 9 L 8 9 ZM 8 5 L 8 6 L 3 6 L 3 5 L 8 5 ZM 8 3 L 8 4 L 3 4 L 3 3 L 8 3 ZM 8 7 L 8 8 L 3 8 L 3 7 L 8 7 ZM 10 1 L 1 1 L 1 12 L 10 12 L 10 1 ZM 15 4 L 11 4 L 11 6 L 13 6 L 13 7 L 11 7 L 11 8 L 13 8 L 13 9 L 11 9 L 11 10 L 13 10 L 13 11 L 11 11 L 11 12 L 13 12 L 13 13 L 11 13 L 8 13 L 6 13 L 6 15 L 15 15 L 15 4 Z" Fill="#666666" Width="14" Height="13" Stretch="Fill" HorizontalAlignment="Center" VerticalAlignment="Center" Opacity="0.4"/>
                                        </Grid>
                                        <Label Content="{Binding Source={StaticResource SortDialog_CopyLevel}, Path=Value}" />
                                    </StackPanel>
                                </Button.Content>
                            </Button>
                            <Button Name="btnMoveUp"                                     
                                    Padding="5,3"
                                    Margin="5,8,0,8" 
                                    Command="{x:Static igLocalPrim:SpreadsheetSortDialogControl.MoveUpCommand}" 
                                    ToolTip="{Binding Source={StaticResource SortDialog_MoveUp}, Path=Value}"
                                    >
                                <Button.Content>
                                    <StackPanel Orientation="Horizontal">
                                        <Grid Height="16" Width="16">
                                            <Path x:Name="MoveUp_Image_Enabled" Visibility="{Binding ElementName=btnMoveUp, Path=IsEnabled, Converter={StaticResource boolToVis}}" Data="M 11.3882 11 L 13 9.5825 L 8 5 L 3 9.5825 L 4.489 10.9325 L 7.9755 7.7823 L 11.3882 11 Z" Fill="#666666" Height="6" Width="10" Stretch="Fill" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                            <Path x:Name="MoveUp_Image_Disabled" Visibility="{Binding ElementName=btnMoveUp, Path=IsEnabled, Converter={StaticResource notBoolToVis}}" Data="M 11.3882 11 L 13 9.5825 L 8 5 L 3 9.5825 L 4.489 10.9325 L 7.9755 7.7823 L 11.3882 11 Z" Fill="#666666" Height="6" Width="10" Stretch="Fill" HorizontalAlignment="Center" VerticalAlignment="Center" Opacity="0.4"/>
                                        </Grid>
                                    </StackPanel>
                                </Button.Content>
                            </Button>
                            <Button Name="btnMoveDown" 
                                    Padding="5,3"                                    
                                    Margin="5,8,0,8" 
                                    Command="{x:Static igLocalPrim:SpreadsheetSortDialogControl.MoveDownCommand}" 
                                    ToolTip="{Binding Source={StaticResource SortDialog_MoveDown}, Path=Value}"
                                    >
                                <Button.Content>
                                    <StackPanel Orientation="Horizontal">
                                        <Grid Height="16" Width="16">
                                            <Path x:Name="MoveDown_Image_Enabled" Visibility="{Binding ElementName=btnMoveDown, Path=IsEnabled, Converter={StaticResource boolToVis}}" Data="M 11.3882 5 L 13 6.4175 L 8 11 L 3 6.4175 L 4.489 5.0675 L 7.9755 8.2177 L 11.3882 5 Z" Fill="#666666" Height="6" Width="10" Stretch="Fill" HorizontalAlignment="Center" VerticalAlignment="Center" Opacity="0.4"/>
                                            <Path x:Name="MoveDown_Image_Disabled" Visibility="{Binding ElementName=btnMoveDown, Path=IsEnabled, Converter={StaticResource notBoolToVis}}" Data="M 11.3882 5 L 13 6.4175 L 8 11 L 3 6.4175 L 4.489 5.0675 L 7.9755 8.2177 L 11.3882 5 Z" Fill="#666666" Height="6" Width="10" Stretch="Fill" HorizontalAlignment="Center" VerticalAlignment="Center" Opacity="0.4"/>
                                        </Grid>
                                    </StackPanel>
                                </Button.Content>
                            </Button>
                            <Button Name="btnOptions"
                                    Padding="5,3"
                                    Margin="5,8,0,8" 
                                    Command="{x:Static igLocalPrim:SpreadsheetSortDialogControl.ShowOptionsDialogCommand}"
                                    Content="{Binding Source={StaticResource SortDialog_Options}, Path=Value}"
                                    >
                                <Button.ContentTemplate>
                                    <DataTemplate>
                                        <AccessText Text="{Binding}"/>
                                    </DataTemplate>
                                </Button.ContentTemplate>
                            </Button>
                            <CheckBox Name="chkDataHasHeaders" Margin="8,8,8,8" HorizontalAlignment="Right" VerticalAlignment="Center" VerticalContentAlignment="Center" Padding="5,3"
                                      Content="{Binding Source={StaticResource SortDialog_MyDataHasHeaders}, Path=Value}" 
                                      IsChecked="{Binding MyDataHasHeaders}" 
                                      IsEnabled="{Binding MyDataHasHeadersEnabled}" 
                                      />
                        </DockPanel>
                        <DataGrid Name ="grdSortConditions" Grid.Row="1" ItemsSource="{Binding SortConditionWrappers}" AutoGenerateColumns="False" SelectedIndex="{Binding ActiveRowIndex}">
                            <DataGrid.Resources>
                                <igPrim:BindingProxy x:Key="proxy" Data="{Binding}" />
                            </DataGrid.Resources>
                            <DataGrid.Columns>
                                <DataGridTemplateColumn
                                    Header="{Binding Data.ColumnColumnHeaderText, Source={StaticResource proxy}}"
                                    Width="25*"                                    
                                    >
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <Grid>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="Auto"/>
                                                    <ColumnDefinition Width="*"/>
                                                </Grid.ColumnDefinitions>
                                                <TextBlock Grid.Column="0" Margin="5, 0, 5, 0" Text="{Binding SortByLabelText}"/>
                                                <ComboBox x:Name="cboColumn" 
                                                          Grid.Column="1" 
                                                          ItemsSource="{Binding Data.HeaderNamesListItems, Source={StaticResource proxy}}"
                                                          DisplayMemberPath="DisplayText"
                                                          SelectedValuePath="DataValue"
                                                          SelectedValue="{Binding AbsoluteColumnIndex, UpdateSourceTrigger=PropertyChanged}"
                                                          >                                                    
                                                </ComboBox>
                                            </Grid>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>
                                <DataGridTemplateColumn
                                    Header="{Binding Data.SortOnColumnHeaderText, Source={StaticResource proxy}}"                                    
                                    Width="25*"
                                    >
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <ComboBox x:Name="cboSortType" 
                                                      ItemsSource="{Binding Data.SortConditionTypesListItems, Source={StaticResource proxy}}"
                                                      DisplayMemberPath="DisplayText"
                                                      SelectedValuePath="DataValue"                                                      
                                                      SelectedValue="{Binding SortConditionType, UpdateSourceTrigger=PropertyChanged}"
                                                      >
                                            </ComboBox>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>
                                <DataGridTemplateColumn 
                                    Header="{Binding Data.OrderColumnHeaderText, Source={StaticResource proxy}}"
                                    Width="50*"
                                    >
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <Grid>                                                
                                                <ComboBox x:Name="cboSortDirection" ItemsSource="{Binding SortDirectionsListItems}"
                                                    DisplayMemberPath="DisplayText"
                                                    SelectedValuePath="DataValue"
                                                    SelectedValue="{Binding SortDirection, UpdateSourceTrigger=PropertyChanged}"
                                                    Visibility="Collapsed"                                                    
                                                    >
                                                </ComboBox>
                                                <Grid x:Name="grdColorSortingCriteriaControl"
                                                    Visibility="Visible">
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="*"/>
                                                        <ColumnDefinition Width="Auto"/>
                                                    </Grid.ColumnDefinitions>
                                                    <ComboBox
                                                        x:Name="cboColor" 
                                                        Grid.Column="0"
                                                        ItemsSource="{Binding ColorSortingCriteriaListItems}"                                                        
                                                        DisplayMemberPath="DisplayText"
                                                        SelectedValuePath="Value"
                                                        SelectedValue="{Binding ColorValue, UpdateSourceTrigger=PropertyChanged}"
                                                      >
                                                        <ComboBox.ItemTemplate>
                                                            <DataTemplate>
                                                                <StackPanel Orientation="Horizontal">
                                                                    <Border x:Name="ImageBorder"
                                                                        BorderBrush="Black" BorderThickness="1" Margin="0, 0, 5, 0">
                                                                        <Image Source="{Binding Image, Mode=OneWay}"/>
                                                                    </Border>
                                                                    <TextBlock Text="{Binding DisplayText}"/>
                                                                </StackPanel>
                                                                <DataTemplate.Triggers>
                                                                    <DataTrigger Binding="{Binding Image}" Value="{x:Null}">                                                                        
                                                                        <Setter TargetName="ImageBorder" Property="Visibility" Value="Collapsed"/>
                                                                    </DataTrigger>                                                                    
                                                                </DataTemplate.Triggers>
                                                            </DataTemplate>                                                        
                                                        </ComboBox.ItemTemplate>
                                                    </ComboBox>
                                                    <ComboBox 
                                                        x:Name="cboDirection" 
                                                        Grid.Column="1"
                                                        MinWidth="130"
                                                        ItemsSource="{Binding Data.ColorSortDirectionListItems, Source={StaticResource proxy}}"
                                                        DisplayMemberPath="DisplayText"
                                                        SelectedValuePath="DataValue"
                                                        SelectedValue="{Binding SortDirection, UpdateSourceTrigger=PropertyChanged}"
                                                      >
                                                    </ComboBox>
                                                </Grid>
                                            </Grid>
                                            <DataTemplate.Triggers>
                                                <DataTrigger Binding="{Binding SortConditionType}" Value="OrderedSortCondition">
                                                    <Setter TargetName="cboSortDirection" Property="Visibility" Value="Visible"/>
                                                    <Setter TargetName="grdColorSortingCriteriaControl" Property="Visibility" Value="Collapsed"/>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding SortConditionType}" Value="IconSortCondition">
                                                    <Setter TargetName="cboColor" Property="ItemTemplate">
                                                        <Setter.Value>
                                                            <DataTemplate>
                                                                <StackPanel Orientation="Horizontal">
                                                                    <Image Source="{Binding Image, Mode=OneWay}"/>
                                                                    <TextBlock Text="{Binding DisplayText}"/>
                                                                </StackPanel>
                                                            </DataTemplate>
                                                        </Setter.Value>
                                                    </Setter>
                                                </DataTrigger>
                                            </DataTemplate.Triggers>
                                            
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>
                            </DataGrid.Columns>
                        </DataGrid>
                        <Grid Grid.Row="2">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <Button Name="btnOK" Grid.Column ="1" Content="{Binding Source={StaticResource SortDialog_OK}, Path=Value}" Margin="0,8,0,8" Command="{x:Static igLocalPrim:SpreadsheetSortDialogControl.ApplySortCommand}" Padding="5,3" MinWidth="55"/>
                            <Button Name="btnCancel" Grid.Column ="2" Content="{Binding Source={StaticResource SortDialog_Cancel}, Path=Value}" Margin="8,8,8,8" Command="{x:Static igLocalPrim:SpreadsheetSortDialogControl.CancelCommand}" Padding="5,3" MinWidth="55"/>
                        </Grid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- MRS 7/18/2018 - TFS254608 - Sort Dialog  -->
    <!-- _________________________ SpreadsheetSortOptionsDialogControl ______________________________________ -->
    <Style TargetType="igLocalPrim:SpreadsheetSortOptionsDialogControl">
        <Setter Property="TitleDescription" Value="{Binding Source={StaticResource SortOptionsDialog_Title}, Path=Value}"  />
        <Setter Property="Margin" Value="5,0,8,5"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="igLocalPrim:SpreadsheetSortOptionsDialogControl">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <CheckBox Name="chkCaseSensitive" Grid.Row="0" Margin="8,8,8,5"
                                  IsChecked="{Binding CaseSensitive}"
                                  Content="{Binding Source={StaticResource SortOptionsDialog_CaseSensitive}, Path=Value}"
                                  >
                            <CheckBox.ContentTemplate>
                                <DataTemplate>
                                    <AccessText Text="{Binding}"/>
                                </DataTemplate>
                            </CheckBox.ContentTemplate>
                        </CheckBox>
                            <TextBlock Name="lblOrientation" Grid.Row="1" Margin="16,0,8,0"
                                      Text="{Binding Source={StaticResource SortOptionsDialog_Orientation}}"
                                      />
                        <RadioButton Name="radSortTopToBottom" Grid.Row="2" Margin="16,0,8,0"
                                     IsChecked="{Binding IsSortingRows}"
                                     Content ="{Binding Source={StaticResource SortOptionsDialog_SortTopToBottom}, Path=Value}"
                                     >
                            <RadioButton.ContentTemplate>
                                <DataTemplate>
                                    <AccessText Text="{Binding}"/>
                                </DataTemplate>
                            </RadioButton.ContentTemplate>
                        </RadioButton>
                        <RadioButton Name="radSortLeftToRight" Grid.Row="3" Margin="16,0,8,0"                                      
                                    IsEnabled="{Binding AllowSortingLeftToRight}"
                                    IsChecked="{Binding IsSortingColumns}"
                                    Content ="{Binding Source={StaticResource SortOptionsDialog_SortLeftToRight}, Path=Value}"
                                    >
                            <RadioButton.ContentTemplate>
                                <DataTemplate>
                                    <AccessText Text="{Binding}"/>
                                </DataTemplate>
                            </RadioButton.ContentTemplate>
                        </RadioButton>
                        <Grid Grid.Row="4">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <Button Name="btnOK" Grid.Column ="1" Content="{Binding Source={StaticResource SortOptionsDialog_OK}, Path=Value}" Margin="0,8,0,8" Command="{x:Static igLocalPrim:SpreadsheetSortOptionsDialogControl.ApplyOptionsCommand}" Padding="5,3" MinWidth="55"/>
                            <Button Name="btnCancel" Grid.Column ="2" Content="{Binding Source={StaticResource SortOptionsDialog_Cancel}, Path=Value}" Margin="8,8,8,8" Command="{x:Static igLocalPrim:SpreadsheetSortOptionsDialogControl.CancelCommand}" Padding="5,3" MinWidth="55"/>
                        </Grid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- JM 01/24/2018 - TFS247301 - FormatCellsDialog  -->
    <!-- _________________________ Border buttons content template ______________________________________ -->
    <DataTemplate x:Key="borderLineButtonContent">
        <Border>
            <Grid x:Name="mainGrid" Margin="8" Background="White">
                <Grid.RowDefinitions>
                    <RowDefinition/>
                    <RowDefinition/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>

                <!-- Guidelines -->
                <Rectangle Grid.Row="0" Grid.Column="0" Grid.RowSpan="1" Grid.ColumnSpan="2" VerticalAlignment="Bottom"
                           Height="1" Fill="#FFDDDDDD"/>
                <Rectangle Grid.Row="0" Grid.Column="0" Grid.RowSpan="2" Grid.ColumnSpan="1" HorizontalAlignment="Right"
                           Width="1" Fill="#FFDDDDDD"/>

                <!-- Border lines -->
                <!-- Left -->
                <Rectangle Grid.Row="0" Grid.Column="0" Grid.RowSpan="2" Grid.ColumnSpan="1" HorizontalAlignment="Left"
                           Width="1" Fill="#FF808080"
                           Visibility="{Binding Path=(igLocalPrim:BorderButtonBehaviors.LeftBorderVisibility), RelativeSource={RelativeSource AncestorType=ButtonBase}}"/>
                <!-- Top -->
                <Rectangle Grid.Row="0" Grid.Column="0" Grid.RowSpan="1" Grid.ColumnSpan="2" VerticalAlignment="Top"
                           Height="1" Fill="#FF808080"
                           Visibility="{Binding Path=(igLocalPrim:BorderButtonBehaviors.TopBorderVisibility), RelativeSource={RelativeSource AncestorType=ButtonBase}}"/>
                <!-- Right -->
                <Rectangle Grid.Row="0" Grid.Column="1" Grid.RowSpan="2" Grid.ColumnSpan="1" HorizontalAlignment="Right"
                           Width="1" Fill="#FF808080"
                           Visibility="{Binding Path=(igLocalPrim:BorderButtonBehaviors.RightBorderVisibility), RelativeSource={RelativeSource AncestorType=ButtonBase}}"/>
                <!-- Bottom -->
                <Rectangle Grid.Row="1" Grid.Column="0" Grid.RowSpan="1" Grid.ColumnSpan="2" VerticalAlignment="Bottom"
                           Height="1" Fill="#FF808080"
                           Visibility="{Binding Path=(igLocalPrim:BorderButtonBehaviors.BottomBorderVisibility), RelativeSource={RelativeSource AncestorType=ButtonBase}}"/>
                <!-- InsideVertical -->
                <Rectangle Grid.Row="0" Grid.Column="0" Grid.RowSpan="2" Grid.ColumnSpan="1" HorizontalAlignment="Right"
                           Width="1" Fill="#FF808080"
                           Visibility="{Binding Path=(igLocalPrim:BorderButtonBehaviors.InsideVerticalBorderVisibility), RelativeSource={RelativeSource AncestorType=ButtonBase}}"/>
                <!-- InsideHorizontal-->
                <Rectangle Grid.Row="0" Grid.Column="0" Grid.RowSpan="1" Grid.ColumnSpan="2" VerticalAlignment="Bottom"
                           Height="1" Fill="#FF808080"
                           Visibility="{Binding Path=(igLocalPrim:BorderButtonBehaviors.InsideHorizontalBorderVisibility), RelativeSource={RelativeSource AncestorType=ButtonBase}}"/>
                <!-- DiagonalDown-->
                <Line Grid.Row="0" Grid.Column="0" Grid.RowSpan="2" Grid.ColumnSpan="2"
                      X1="0" 
                      X2="{Binding ActualWidth, ElementName=mainGrid}"
                      Y1="0" 
                      Y2="{Binding ActualHeight, ElementName=mainGrid}"
                      StrokeThickness="1" Stroke="#FF808080"
                      Visibility="{Binding Path=(igLocalPrim:BorderButtonBehaviors.DiagonalDownBorderVisibility), RelativeSource={RelativeSource AncestorType=ButtonBase}}"
                      />
                <!-- DiagonalUp-->
                <Line Grid.Row="0" Grid.Column="0" Grid.RowSpan="2" Grid.ColumnSpan="2"
                      X1="0" 
                      X2="{Binding ActualWidth, ElementName=mainGrid}"
                      Y1="{Binding ActualHeight, ElementName=mainGrid}" 
                      Y2="0"
                      StrokeThickness="1" Stroke="#FF808080"
                      Visibility="{Binding Path=(igLocalPrim:BorderButtonBehaviors.DiagonalUpBorderVisibility), RelativeSource={RelativeSource AncestorType=ButtonBase}}"
                      />
            </Grid>                
        </Border>
    </DataTemplate>

    <!-- JM 02/02/2018 - TFS247301 - FormatCellsDialog  -->
    <!-- _________________________ ColorPaletteButtonControl ______________________________________ -->
    <Style TargetType="igLocalPrim:ColorPaletteButtonControl" BasedOn="{StaticResource {x:Type Button}}">
        <Setter Property="Height" Value="{Binding Path=ActualWidth, RelativeSource={RelativeSource Self}}"/>
        <Setter Property="Margin" Value="1"/>
        <Setter Property="Command" Value="{x:Static igLocalPrim:ThemeColorPaletteControl.SelectColorCommand}"/>
        <Setter Property="CommandParameter" Value="{Binding Path=PaletteEntry, RelativeSource={RelativeSource Self}}"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Border Margin="1" BorderBrush="#FFEEEEEE">
                        <Grid Background="{Binding Path=Background, RelativeSource={RelativeSource AncestorType=igLocalPrim:ColorPaletteButtonControl}}"/>
                    </Border>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- JM 02/02/2018 - TFS247301 - FormatCellsDialog  -->
    <!-- _________________________ ThemeColorPaletteControl ______________________________________ -->
    <Style TargetType="igLocalPrim:ThemeColorPaletteControl">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="igLocalPrim:ThemeColorPaletteControl">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>

                        <Button Name="AutomaticColorButton" Grid.Row="0" HorizontalAlignment="Stretch" Margin="0,4,0,4" 
                                      Command="{x:Static igLocalPrim:ThemeColorPaletteControl.SelectAutomaticColorCommand}"
                                      Visibility="{TemplateBinding AutomaticColorButtonVisibility}" >
                            <Button.Template>
                                <ControlTemplate TargetType="Button">
                                    <Grid HorizontalAlignment="Stretch">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="*"/>
                                        </Grid.ColumnDefinitions>
                                        
                                        <Rectangle Width="20" Height="20" VerticalAlignment="Center" 
                                                   Fill="{Binding AutomaticColor, RelativeSource={RelativeSource AncestorType=igLocalPrim:ThemeColorPaletteControl}, Converter={StaticResource ColorToBrushConverter}}" />
                                        
                                        <Label Grid.Column="1" Content="{StaticResource SpreadsheetThemeColorPickerControl_Text_Automatic}" Margin="8,0,0,0" 
                                               VerticalAlignment="Center" HorizontalAlignment="Stretch" Padding="0"/>
                                    </Grid>
                                </ControlTemplate>
                            </Button.Template>
                        </Button>

                        <!-- JM 08-24-18 TFS256294 - Change ToggleButton to Button -->
                        <Button Name="NoColorButton" Grid.Row="0" HorizontalAlignment="Stretch" Margin="0,4,0,4" 
                                      Command="{x:Static igLocalPrim:ThemeColorPaletteControl.NoColorCommand}" 
                                      Background="Black" Visibility="{TemplateBinding NoColorButtonVisibility}">
                            <Button.Template>
                                <ControlTemplate TargetType="Button">
                                    <Grid >
                                        <Border BorderThickness="1" BorderBrush="LightGray" Name="ToggleBorder">
                                            <TextBlock TextAlignment="Center" Height="20" Text="{Binding Source={StaticResource SpreadsheetThemeColorPickerControl_Text_NoColor}, Path=Value}" 
                                                       Margin="0,3,0,0" VerticalAlignment="Center" Padding="0"/>
                                        </Border>
                                    </Grid>
                                    <ControlTemplate.Triggers>
                                        <DataTrigger Binding="{Binding Path=IsNoColorSelected, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Value="True">
                                            <Setter Property="Background" TargetName="ToggleBorder" Value="LightBlue"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Path=IsNoColorSelected, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Value="False">
                                            <Setter Property="Background" TargetName="ToggleBorder" Value="Transparent"/>
                                        </DataTrigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Button.Template>
                        </Button>

                        <Label Grid.Row="1" Content="{StaticResource SpreadsheetThemeColorPickerControl_Text_ThemeColors}" Padding="0" Visibility="{TemplateBinding SectionHeaderVisibility}"/>

                        <Grid Name="BaseThemeColorsGrid" Grid.Row="2" >
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>

                            <igLocalPrim:ColorPaletteButtonControl Grid.Row="0" Grid.Column="0" ThemeColorPickerControlViewModel="{TemplateBinding ThemeColorPickerControlViewModel}" PaletteEntry="{Binding Path=ThemeColorPickerControlViewModel.Palette[0-0], RelativeSource={RelativeSource Self}}"/>
                            <igLocalPrim:ColorPaletteButtonControl Grid.Row="0" Grid.Column="1" ThemeColorPickerControlViewModel="{TemplateBinding ThemeColorPickerControlViewModel}" PaletteEntry="{Binding Path=ThemeColorPickerControlViewModel.Palette[0-1], RelativeSource={RelativeSource Self}}"/>
                            <igLocalPrim:ColorPaletteButtonControl Grid.Row="0" Grid.Column="2" ThemeColorPickerControlViewModel="{TemplateBinding ThemeColorPickerControlViewModel}" PaletteEntry="{Binding Path=ThemeColorPickerControlViewModel.Palette[0-2], RelativeSource={RelativeSource Self}}"/>
                            <igLocalPrim:ColorPaletteButtonControl Grid.Row="0" Grid.Column="3" ThemeColorPickerControlViewModel="{TemplateBinding ThemeColorPickerControlViewModel}" PaletteEntry="{Binding Path=ThemeColorPickerControlViewModel.Palette[0-3], RelativeSource={RelativeSource Self}}"/>
                            <igLocalPrim:ColorPaletteButtonControl Grid.Row="0" Grid.Column="4" ThemeColorPickerControlViewModel="{TemplateBinding ThemeColorPickerControlViewModel}" PaletteEntry="{Binding Path=ThemeColorPickerControlViewModel.Palette[0-4], RelativeSource={RelativeSource Self}}"/>
                            <igLocalPrim:ColorPaletteButtonControl Grid.Row="0" Grid.Column="5" ThemeColorPickerControlViewModel="{TemplateBinding ThemeColorPickerControlViewModel}" PaletteEntry="{Binding Path=ThemeColorPickerControlViewModel.Palette[0-5], RelativeSource={RelativeSource Self}}"/>
                            <igLocalPrim:ColorPaletteButtonControl Grid.Row="0" Grid.Column="6" ThemeColorPickerControlViewModel="{TemplateBinding ThemeColorPickerControlViewModel}" PaletteEntry="{Binding Path=ThemeColorPickerControlViewModel.Palette[0-6], RelativeSource={RelativeSource Self}}"/>
                            <igLocalPrim:ColorPaletteButtonControl Grid.Row="0" Grid.Column="7" ThemeColorPickerControlViewModel="{TemplateBinding ThemeColorPickerControlViewModel}" PaletteEntry="{Binding Path=ThemeColorPickerControlViewModel.Palette[0-7], RelativeSource={RelativeSource Self}}"/>
                            <igLocalPrim:ColorPaletteButtonControl Grid.Row="0" Grid.Column="8" ThemeColorPickerControlViewModel="{TemplateBinding ThemeColorPickerControlViewModel}" PaletteEntry="{Binding Path=ThemeColorPickerControlViewModel.Palette[0-8], RelativeSource={RelativeSource Self}}"/>
                            <igLocalPrim:ColorPaletteButtonControl Grid.Row="0" Grid.Column="9" ThemeColorPickerControlViewModel="{TemplateBinding ThemeColorPickerControlViewModel}" PaletteEntry="{Binding Path=ThemeColorPickerControlViewModel.Palette[0-9], RelativeSource={RelativeSource Self}}"/>
                        </Grid>

                        <Rectangle Grid.Row="3" Height="1" Fill="Gray" Margin="0,3,0,3"/>

                        <!-- TintedThemeColorsGrid -->
                        <Grid Name="TintedThemeColorsGrid" Grid.Row="4" >
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>

                            <!-- Row 1 -->
                            <igLocalPrim:ColorPaletteButtonControl Grid.Row="0" Grid.Column="0" ThemeColorPickerControlViewModel="{TemplateBinding ThemeColorPickerControlViewModel}" PaletteEntry="{Binding Path=ThemeColorPickerControlViewModel.Palette[1-0], RelativeSource={RelativeSource Self}}"/>
                            <igLocalPrim:ColorPaletteButtonControl Grid.Row="0" Grid.Column="1" ThemeColorPickerControlViewModel="{TemplateBinding ThemeColorPickerControlViewModel}" PaletteEntry="{Binding Path=ThemeColorPickerControlViewModel.Palette[1-1], RelativeSource={RelativeSource Self}}"/>
                            <igLocalPrim:ColorPaletteButtonControl Grid.Row="0" Grid.Column="2" ThemeColorPickerControlViewModel="{TemplateBinding ThemeColorPickerControlViewModel}" PaletteEntry="{Binding Path=ThemeColorPickerControlViewModel.Palette[1-2], RelativeSource={RelativeSource Self}}"/>
                            <igLocalPrim:ColorPaletteButtonControl Grid.Row="0" Grid.Column="3" ThemeColorPickerControlViewModel="{TemplateBinding ThemeColorPickerControlViewModel}" PaletteEntry="{Binding Path=ThemeColorPickerControlViewModel.Palette[1-3], RelativeSource={RelativeSource Self}}"/>
                            <igLocalPrim:ColorPaletteButtonControl Grid.Row="0" Grid.Column="4" ThemeColorPickerControlViewModel="{TemplateBinding ThemeColorPickerControlViewModel}" PaletteEntry="{Binding Path=ThemeColorPickerControlViewModel.Palette[1-4], RelativeSource={RelativeSource Self}}"/>
                            <igLocalPrim:ColorPaletteButtonControl Grid.Row="0" Grid.Column="5" ThemeColorPickerControlViewModel="{TemplateBinding ThemeColorPickerControlViewModel}" PaletteEntry="{Binding Path=ThemeColorPickerControlViewModel.Palette[1-5], RelativeSource={RelativeSource Self}}"/>
                            <igLocalPrim:ColorPaletteButtonControl Grid.Row="0" Grid.Column="6" ThemeColorPickerControlViewModel="{TemplateBinding ThemeColorPickerControlViewModel}" PaletteEntry="{Binding Path=ThemeColorPickerControlViewModel.Palette[1-6], RelativeSource={RelativeSource Self}}"/>
                            <igLocalPrim:ColorPaletteButtonControl Grid.Row="0" Grid.Column="7" ThemeColorPickerControlViewModel="{TemplateBinding ThemeColorPickerControlViewModel}" PaletteEntry="{Binding Path=ThemeColorPickerControlViewModel.Palette[1-7], RelativeSource={RelativeSource Self}}"/>
                            <igLocalPrim:ColorPaletteButtonControl Grid.Row="0" Grid.Column="8" ThemeColorPickerControlViewModel="{TemplateBinding ThemeColorPickerControlViewModel}" PaletteEntry="{Binding Path=ThemeColorPickerControlViewModel.Palette[1-8], RelativeSource={RelativeSource Self}}"/>
                            <igLocalPrim:ColorPaletteButtonControl Grid.Row="0" Grid.Column="9" ThemeColorPickerControlViewModel="{TemplateBinding ThemeColorPickerControlViewModel}" PaletteEntry="{Binding Path=ThemeColorPickerControlViewModel.Palette[1-9], RelativeSource={RelativeSource Self}}"/>

                            <!-- Row 2 -->
                            <igLocalPrim:ColorPaletteButtonControl Grid.Row="1" Grid.Column="0" ThemeColorPickerControlViewModel="{TemplateBinding ThemeColorPickerControlViewModel}" PaletteEntry="{Binding Path=ThemeColorPickerControlViewModel.Palette[2-0], RelativeSource={RelativeSource Self}}"/>
                            <igLocalPrim:ColorPaletteButtonControl Grid.Row="1" Grid.Column="1" ThemeColorPickerControlViewModel="{TemplateBinding ThemeColorPickerControlViewModel}" PaletteEntry="{Binding Path=ThemeColorPickerControlViewModel.Palette[2-1], RelativeSource={RelativeSource Self}}"/>
                            <igLocalPrim:ColorPaletteButtonControl Grid.Row="1" Grid.Column="2" ThemeColorPickerControlViewModel="{TemplateBinding ThemeColorPickerControlViewModel}" PaletteEntry="{Binding Path=ThemeColorPickerControlViewModel.Palette[2-2], RelativeSource={RelativeSource Self}}"/>
                            <igLocalPrim:ColorPaletteButtonControl Grid.Row="1" Grid.Column="3" ThemeColorPickerControlViewModel="{TemplateBinding ThemeColorPickerControlViewModel}" PaletteEntry="{Binding Path=ThemeColorPickerControlViewModel.Palette[2-3], RelativeSource={RelativeSource Self}}"/>
                            <igLocalPrim:ColorPaletteButtonControl Grid.Row="1" Grid.Column="4" ThemeColorPickerControlViewModel="{TemplateBinding ThemeColorPickerControlViewModel}" PaletteEntry="{Binding Path=ThemeColorPickerControlViewModel.Palette[2-4], RelativeSource={RelativeSource Self}}"/>
                            <igLocalPrim:ColorPaletteButtonControl Grid.Row="1" Grid.Column="5" ThemeColorPickerControlViewModel="{TemplateBinding ThemeColorPickerControlViewModel}" PaletteEntry="{Binding Path=ThemeColorPickerControlViewModel.Palette[2-5], RelativeSource={RelativeSource Self}}"/>
                            <igLocalPrim:ColorPaletteButtonControl Grid.Row="1" Grid.Column="6" ThemeColorPickerControlViewModel="{TemplateBinding ThemeColorPickerControlViewModel}" PaletteEntry="{Binding Path=ThemeColorPickerControlViewModel.Palette[2-6], RelativeSource={RelativeSource Self}}"/>
                            <igLocalPrim:ColorPaletteButtonControl Grid.Row="1" Grid.Column="7" ThemeColorPickerControlViewModel="{TemplateBinding ThemeColorPickerControlViewModel}" PaletteEntry="{Binding Path=ThemeColorPickerControlViewModel.Palette[2-7], RelativeSource={RelativeSource Self}}"/>
                            <igLocalPrim:ColorPaletteButtonControl Grid.Row="1" Grid.Column="8" ThemeColorPickerControlViewModel="{TemplateBinding ThemeColorPickerControlViewModel}" PaletteEntry="{Binding Path=ThemeColorPickerControlViewModel.Palette[2-8], RelativeSource={RelativeSource Self}}"/>
                            <igLocalPrim:ColorPaletteButtonControl Grid.Row="1" Grid.Column="9" ThemeColorPickerControlViewModel="{TemplateBinding ThemeColorPickerControlViewModel}" PaletteEntry="{Binding Path=ThemeColorPickerControlViewModel.Palette[2-9], RelativeSource={RelativeSource Self}}"/>

                            <!-- Row 3 -->
                            <igLocalPrim:ColorPaletteButtonControl Grid.Row="2" Grid.Column="0" ThemeColorPickerControlViewModel="{TemplateBinding ThemeColorPickerControlViewModel}" PaletteEntry="{Binding Path=ThemeColorPickerControlViewModel.Palette[3-0], RelativeSource={RelativeSource Self}}"/>
                            <igLocalPrim:ColorPaletteButtonControl Grid.Row="2" Grid.Column="1" ThemeColorPickerControlViewModel="{TemplateBinding ThemeColorPickerControlViewModel}" PaletteEntry="{Binding Path=ThemeColorPickerControlViewModel.Palette[3-1], RelativeSource={RelativeSource Self}}"/>
                            <igLocalPrim:ColorPaletteButtonControl Grid.Row="2" Grid.Column="2" ThemeColorPickerControlViewModel="{TemplateBinding ThemeColorPickerControlViewModel}" PaletteEntry="{Binding Path=ThemeColorPickerControlViewModel.Palette[3-2], RelativeSource={RelativeSource Self}}"/>
                            <igLocalPrim:ColorPaletteButtonControl Grid.Row="2" Grid.Column="3" ThemeColorPickerControlViewModel="{TemplateBinding ThemeColorPickerControlViewModel}" PaletteEntry="{Binding Path=ThemeColorPickerControlViewModel.Palette[3-3], RelativeSource={RelativeSource Self}}"/>
                            <igLocalPrim:ColorPaletteButtonControl Grid.Row="2" Grid.Column="4" ThemeColorPickerControlViewModel="{TemplateBinding ThemeColorPickerControlViewModel}" PaletteEntry="{Binding Path=ThemeColorPickerControlViewModel.Palette[3-4], RelativeSource={RelativeSource Self}}"/>
                            <igLocalPrim:ColorPaletteButtonControl Grid.Row="2" Grid.Column="5" ThemeColorPickerControlViewModel="{TemplateBinding ThemeColorPickerControlViewModel}" PaletteEntry="{Binding Path=ThemeColorPickerControlViewModel.Palette[3-5], RelativeSource={RelativeSource Self}}"/>
                            <igLocalPrim:ColorPaletteButtonControl Grid.Row="2" Grid.Column="6" ThemeColorPickerControlViewModel="{TemplateBinding ThemeColorPickerControlViewModel}" PaletteEntry="{Binding Path=ThemeColorPickerControlViewModel.Palette[3-6], RelativeSource={RelativeSource Self}}"/>
                            <igLocalPrim:ColorPaletteButtonControl Grid.Row="2" Grid.Column="7" ThemeColorPickerControlViewModel="{TemplateBinding ThemeColorPickerControlViewModel}" PaletteEntry="{Binding Path=ThemeColorPickerControlViewModel.Palette[3-7], RelativeSource={RelativeSource Self}}"/>
                            <igLocalPrim:ColorPaletteButtonControl Grid.Row="2" Grid.Column="8" ThemeColorPickerControlViewModel="{TemplateBinding ThemeColorPickerControlViewModel}" PaletteEntry="{Binding Path=ThemeColorPickerControlViewModel.Palette[3-8], RelativeSource={RelativeSource Self}}"/>
                            <igLocalPrim:ColorPaletteButtonControl Grid.Row="2" Grid.Column="9" ThemeColorPickerControlViewModel="{TemplateBinding ThemeColorPickerControlViewModel}" PaletteEntry="{Binding Path=ThemeColorPickerControlViewModel.Palette[3-9], RelativeSource={RelativeSource Self}}"/>

                            <!-- Row 4 -->
                            <igLocalPrim:ColorPaletteButtonControl Grid.Row="3" Grid.Column="0" ThemeColorPickerControlViewModel="{TemplateBinding ThemeColorPickerControlViewModel}" PaletteEntry="{Binding Path=ThemeColorPickerControlViewModel.Palette[4-0], RelativeSource={RelativeSource Self}}"/>
                            <igLocalPrim:ColorPaletteButtonControl Grid.Row="3" Grid.Column="1" ThemeColorPickerControlViewModel="{TemplateBinding ThemeColorPickerControlViewModel}" PaletteEntry="{Binding Path=ThemeColorPickerControlViewModel.Palette[4-1], RelativeSource={RelativeSource Self}}"/>
                            <igLocalPrim:ColorPaletteButtonControl Grid.Row="3" Grid.Column="2" ThemeColorPickerControlViewModel="{TemplateBinding ThemeColorPickerControlViewModel}" PaletteEntry="{Binding Path=ThemeColorPickerControlViewModel.Palette[4-2], RelativeSource={RelativeSource Self}}"/>
                            <igLocalPrim:ColorPaletteButtonControl Grid.Row="3" Grid.Column="3" ThemeColorPickerControlViewModel="{TemplateBinding ThemeColorPickerControlViewModel}" PaletteEntry="{Binding Path=ThemeColorPickerControlViewModel.Palette[4-3], RelativeSource={RelativeSource Self}}"/>
                            <igLocalPrim:ColorPaletteButtonControl Grid.Row="3" Grid.Column="4" ThemeColorPickerControlViewModel="{TemplateBinding ThemeColorPickerControlViewModel}" PaletteEntry="{Binding Path=ThemeColorPickerControlViewModel.Palette[4-4], RelativeSource={RelativeSource Self}}"/>
                            <igLocalPrim:ColorPaletteButtonControl Grid.Row="3" Grid.Column="5" ThemeColorPickerControlViewModel="{TemplateBinding ThemeColorPickerControlViewModel}" PaletteEntry="{Binding Path=ThemeColorPickerControlViewModel.Palette[4-5], RelativeSource={RelativeSource Self}}"/>
                            <igLocalPrim:ColorPaletteButtonControl Grid.Row="3" Grid.Column="6" ThemeColorPickerControlViewModel="{TemplateBinding ThemeColorPickerControlViewModel}" PaletteEntry="{Binding Path=ThemeColorPickerControlViewModel.Palette[4-6], RelativeSource={RelativeSource Self}}"/>
                            <igLocalPrim:ColorPaletteButtonControl Grid.Row="3" Grid.Column="7" ThemeColorPickerControlViewModel="{TemplateBinding ThemeColorPickerControlViewModel}" PaletteEntry="{Binding Path=ThemeColorPickerControlViewModel.Palette[4-7], RelativeSource={RelativeSource Self}}"/>
                            <igLocalPrim:ColorPaletteButtonControl Grid.Row="3" Grid.Column="8" ThemeColorPickerControlViewModel="{TemplateBinding ThemeColorPickerControlViewModel}" PaletteEntry="{Binding Path=ThemeColorPickerControlViewModel.Palette[4-8], RelativeSource={RelativeSource Self}}"/>
                            <igLocalPrim:ColorPaletteButtonControl Grid.Row="3" Grid.Column="9" ThemeColorPickerControlViewModel="{TemplateBinding ThemeColorPickerControlViewModel}" PaletteEntry="{Binding Path=ThemeColorPickerControlViewModel.Palette[4-9], RelativeSource={RelativeSource Self}}"/>

                            <!-- Row 5 -->
                            <igLocalPrim:ColorPaletteButtonControl Grid.Row="4" Grid.Column="0" ThemeColorPickerControlViewModel="{TemplateBinding ThemeColorPickerControlViewModel}" PaletteEntry="{Binding Path=ThemeColorPickerControlViewModel.Palette[5-0], RelativeSource={RelativeSource Self}}"/>
                            <igLocalPrim:ColorPaletteButtonControl Grid.Row="4" Grid.Column="1" ThemeColorPickerControlViewModel="{TemplateBinding ThemeColorPickerControlViewModel}" PaletteEntry="{Binding Path=ThemeColorPickerControlViewModel.Palette[5-1], RelativeSource={RelativeSource Self}}"/>
                            <igLocalPrim:ColorPaletteButtonControl Grid.Row="4" Grid.Column="2" ThemeColorPickerControlViewModel="{TemplateBinding ThemeColorPickerControlViewModel}" PaletteEntry="{Binding Path=ThemeColorPickerControlViewModel.Palette[5-2], RelativeSource={RelativeSource Self}}"/>
                            <igLocalPrim:ColorPaletteButtonControl Grid.Row="4" Grid.Column="3" ThemeColorPickerControlViewModel="{TemplateBinding ThemeColorPickerControlViewModel}" PaletteEntry="{Binding Path=ThemeColorPickerControlViewModel.Palette[5-3], RelativeSource={RelativeSource Self}}"/>
                            <igLocalPrim:ColorPaletteButtonControl Grid.Row="4" Grid.Column="4" ThemeColorPickerControlViewModel="{TemplateBinding ThemeColorPickerControlViewModel}" PaletteEntry="{Binding Path=ThemeColorPickerControlViewModel.Palette[5-4], RelativeSource={RelativeSource Self}}"/>
                            <igLocalPrim:ColorPaletteButtonControl Grid.Row="4" Grid.Column="5" ThemeColorPickerControlViewModel="{TemplateBinding ThemeColorPickerControlViewModel}" PaletteEntry="{Binding Path=ThemeColorPickerControlViewModel.Palette[5-5], RelativeSource={RelativeSource Self}}"/>
                            <igLocalPrim:ColorPaletteButtonControl Grid.Row="4" Grid.Column="6" ThemeColorPickerControlViewModel="{TemplateBinding ThemeColorPickerControlViewModel}" PaletteEntry="{Binding Path=ThemeColorPickerControlViewModel.Palette[5-6], RelativeSource={RelativeSource Self}}"/>
                            <igLocalPrim:ColorPaletteButtonControl Grid.Row="4" Grid.Column="7" ThemeColorPickerControlViewModel="{TemplateBinding ThemeColorPickerControlViewModel}" PaletteEntry="{Binding Path=ThemeColorPickerControlViewModel.Palette[5-7], RelativeSource={RelativeSource Self}}"/>
                            <igLocalPrim:ColorPaletteButtonControl Grid.Row="4" Grid.Column="8" ThemeColorPickerControlViewModel="{TemplateBinding ThemeColorPickerControlViewModel}" PaletteEntry="{Binding Path=ThemeColorPickerControlViewModel.Palette[5-8], RelativeSource={RelativeSource Self}}"/>
                            <igLocalPrim:ColorPaletteButtonControl Grid.Row="4" Grid.Column="9" ThemeColorPickerControlViewModel="{TemplateBinding ThemeColorPickerControlViewModel}" PaletteEntry="{Binding Path=ThemeColorPickerControlViewModel.Palette[5-9], RelativeSource={RelativeSource Self}}"/>
                        </Grid>

                        <Rectangle Grid.Row="5" Height="1" Fill="Gray" Margin="0,3,0,3" Visibility="{TemplateBinding SectionHeaderVisibility, Converter={StaticResource notVisibility}}"/>
                        <Label Grid.Row="5" Content="{StaticResource SpreadsheetThemeColorPickerControl_Text_StandardColors}"  Padding="0" Visibility="{TemplateBinding SectionHeaderVisibility}"/>

                        <Grid Name="StandardColorsGrid" Grid.Row="6" >
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>

                            <igLocalPrim:ColorPaletteButtonControl Grid.Row="0" Grid.Column="0" ThemeColorPickerControlViewModel="{TemplateBinding ThemeColorPickerControlViewModel}" PaletteEntry="{Binding Path=ThemeColorPickerControlViewModel.Palette[6-0], RelativeSource={RelativeSource Self}}"/>
                            <igLocalPrim:ColorPaletteButtonControl Grid.Row="0" Grid.Column="1" ThemeColorPickerControlViewModel="{TemplateBinding ThemeColorPickerControlViewModel}" PaletteEntry="{Binding Path=ThemeColorPickerControlViewModel.Palette[6-1], RelativeSource={RelativeSource Self}}"/>
                            <igLocalPrim:ColorPaletteButtonControl Grid.Row="0" Grid.Column="2" ThemeColorPickerControlViewModel="{TemplateBinding ThemeColorPickerControlViewModel}" PaletteEntry="{Binding Path=ThemeColorPickerControlViewModel.Palette[6-2], RelativeSource={RelativeSource Self}}"/>
                            <igLocalPrim:ColorPaletteButtonControl Grid.Row="0" Grid.Column="3" ThemeColorPickerControlViewModel="{TemplateBinding ThemeColorPickerControlViewModel}" PaletteEntry="{Binding Path=ThemeColorPickerControlViewModel.Palette[6-3], RelativeSource={RelativeSource Self}}"/>
                            <igLocalPrim:ColorPaletteButtonControl Grid.Row="0" Grid.Column="4" ThemeColorPickerControlViewModel="{TemplateBinding ThemeColorPickerControlViewModel}" PaletteEntry="{Binding Path=ThemeColorPickerControlViewModel.Palette[6-4], RelativeSource={RelativeSource Self}}"/>
                            <igLocalPrim:ColorPaletteButtonControl Grid.Row="0" Grid.Column="5" ThemeColorPickerControlViewModel="{TemplateBinding ThemeColorPickerControlViewModel}" PaletteEntry="{Binding Path=ThemeColorPickerControlViewModel.Palette[6-5], RelativeSource={RelativeSource Self}}"/>
                            <igLocalPrim:ColorPaletteButtonControl Grid.Row="0" Grid.Column="6" ThemeColorPickerControlViewModel="{TemplateBinding ThemeColorPickerControlViewModel}" PaletteEntry="{Binding Path=ThemeColorPickerControlViewModel.Palette[6-6], RelativeSource={RelativeSource Self}}"/>
                            <igLocalPrim:ColorPaletteButtonControl Grid.Row="0" Grid.Column="7" ThemeColorPickerControlViewModel="{TemplateBinding ThemeColorPickerControlViewModel}" PaletteEntry="{Binding Path=ThemeColorPickerControlViewModel.Palette[6-7], RelativeSource={RelativeSource Self}}"/>
                            <igLocalPrim:ColorPaletteButtonControl Grid.Row="0" Grid.Column="8" ThemeColorPickerControlViewModel="{TemplateBinding ThemeColorPickerControlViewModel}" PaletteEntry="{Binding Path=ThemeColorPickerControlViewModel.Palette[6-8], RelativeSource={RelativeSource Self}}"/>
                            <igLocalPrim:ColorPaletteButtonControl Grid.Row="0" Grid.Column="9" ThemeColorPickerControlViewModel="{TemplateBinding ThemeColorPickerControlViewModel}" PaletteEntry="{Binding Path=ThemeColorPickerControlViewModel.Palette[6-9], RelativeSource={RelativeSource Self}}"/>
                        </Grid>
                        
                        <Rectangle Grid.Row="7" Fill="Transparent" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- JM 02/02/2018 - TFS247301 - FormatCellsDialog  -->
    <!-- _________________________ ThemeColorPickerControl ______________________________________ -->
    <Style TargetType="igLocalPrim:ThemeColorPickerControl">
        <Setter Property="Background" Value="White"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="igLocalPrim:ThemeColorPickerControl">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>

                        <ToggleButton x:Name="ThemeColorPickerToggleButton" Height="24" HorizontalAlignment="Stretch" 
                                      HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch"
                                      Background="{TemplateBinding Background}"
                                      IsChecked="{Binding ElementName=ThemeColorPickerPopup, Path=IsOpen}">
                            <ToggleButton.Style>
                                <Style TargetType="ToggleButton" BasedOn="{StaticResource {x:Type ToggleButton}}">
                                    <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="ToggleButton">
                                                <Grid>
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="*"/>
                                                        <ColumnDefinition Width="17"/>
                                                    </Grid.ColumnDefinitions>

                                                    <Border BorderThickness="1" BorderBrush="LightGray" Grid.ColumnSpan="2"/>

                                                    <Rectangle x:Name="focusRect"
                                                               Margin="2"
                                                               Visibility="{TemplateBinding IsFocused, Converter={StaticResource boolToVis}}"
                                                               StrokeThickness="1"  
                                                               Stroke="Black"  
                                                               StrokeDashArray="1 2"  
                                                               SnapsToDevicePixels="true"/>

                                                    <Grid Margin="4" >
                                                        <TextBlock x:Name="SpecialColorText" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" TextAlignment="Center" 
                                                                    Text="{Binding Source={StaticResource SpreadsheetThemeColorPickerControl_Text_Automatic}, Path=Value}" 
                                                                    Visibility="{Binding Path=IsAutomaticColorSelected, RelativeSource={RelativeSource AncestorType=igLocalPrim:ThemeColorPickerControl}, Converter={StaticResource boolToVis}}"/>
                                                        <Rectangle x:Name="SelectedColorSwatch" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" 
                                                                    Fill="{Binding Path=SelectedBrush, RelativeSource={RelativeSource AncestorType=igLocalPrim:ThemeColorPickerControl}}" 
                                                                    Visibility="{Binding Path=IsColorSelected, RelativeSource={RelativeSource AncestorType=igLocalPrim:ThemeColorPickerControl}, Converter={StaticResource boolToVis}}"/>
                                                    </Grid>

                                                    <Border Grid.Column="1" BorderThickness="1" BorderBrush="#FFCCCCCC" Background="#FFEEEEEE" Margin="1" SnapsToDevicePixels="True">
                                                        <Path x:Name="Down_Arrow" 
                                                              HorizontalAlignment="Center" 
                                                              VerticalAlignment="Center"
                                                              Fill="Black" 
                                                              Data="M 0 0 L 4 4 L 8 0 Z" />
                                                    </Border>
                                                </Grid>
                                            </ControlTemplate>
                                        </Setter.Value>    
                                    </Setter>
                                    
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding IsOpen, ElementName=ThemeColorPickerPopup}" Value="True">
                                            <Setter Property="IsEnabled" Value="False" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </ToggleButton.Style>
                        </ToggleButton>
                        
                        <Popup x:Name="ThemeColorPickerPopup" HorizontalAlignment="Stretch" 
                               StaysOpen="False" PlacementTarget="{Binding ElementName=ThemeColorPickerToggleButton}" Placement="Bottom">
                            <Border Background="White" BorderThickness="1" BorderBrush="Gray" HorizontalAlignment="Stretch" VerticalAlignment="Top">
                                <igLocalPrim:ThemeColorPaletteControl HorizontalAlignment="Stretch"
                                                                      MinWidth="225"
                                                                      Margin="6,3,6,3"
                                                                      ThemeColorPickerControlViewModel="{Binding Path=ThemeColorPickerControlViewModel, RelativeSource={RelativeSource AncestorType=igLocalPrim:ThemeColorPaletteControl}, Mode=TwoWay}"
                                                                      SelectedColorInfo="{Binding Path=SelectedColorInfo, RelativeSource={RelativeSource AncestorType=igLocalPrim:ThemeColorPaletteControl}, Mode=TwoWay}" 
                                                                      SpecialColorModeOption="{Binding Path=SpecialColorModeOption, RelativeSource={RelativeSource AncestorType=igLocalPrim:ThemeColorPaletteControl}}"
                                                                      IsNoColorSelected="{Binding Path=IsNoColorSelected, RelativeSource={RelativeSource AncestorType=igLocalPrim:ThemeColorPaletteControl}, Mode=TwoWay}"
                                                                      IsAutomaticColorSelected="{Binding Path=IsAutomaticColorSelected, RelativeSource={RelativeSource AncestorType=igLocalPrim:ThemeColorPaletteControl}, Mode=TwoWay}"
                                                                      IsColorSelected="{Binding Path=IsColorSelected, RelativeSource={RelativeSource AncestorType=igLocalPrim:ThemeColorPaletteControl}, Mode=TwoWay}"/>
                            </Border>
                        </Popup>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!-- JM 01/09/2018 - TFS247301 - FormatCellsDialog  -->
    <!-- _________________________ SpreadsheetFontControl ______________________________________ -->
    <Style TargetType="igLocalPrim:SpreadsheetFontControl">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="igLocalPrim:SpreadsheetFontControl">
                    <Grid Margin="0" Name="FontControlRootGrid">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="10"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="100"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="83"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="6"/>
                            <ColumnDefinition Width="1.6*"/>
                            <ColumnDefinition Width="14"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="14"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="0"/>
                            <ColumnDefinition Width="6"/>
                        </Grid.ColumnDefinitions>

                        <!-- ==================  Font  ================== -->
                        <!--<Label Grid.Row="0" Grid.Column="0" Margin="0,0,0,0" Content="{StaticResource SpreadsheetFontControl_FontLabel}"/>-->
                        <Label Grid.Row="1" Grid.Column="1" Content="{Binding Source={StaticResource SpreadsheetFontControl_FontLabel}, Path=Value}" VerticalAlignment="Bottom" HorizontalAlignment="Left" Padding="0,0,0,2" />
                        <Label Grid.Row="1" Grid.Column="3" Content="{Binding Source={StaticResource SpreadsheetFontControl_FontStyleLabel}, Path=Value}" VerticalAlignment="Bottom" HorizontalAlignment="Left" Padding="0,0,0,2"/>
                        <Label Grid.Row="1" Grid.Column="5" Content="{Binding Source={StaticResource SpreadsheetFontControl_SizeLabel}, Path=Value}" VerticalAlignment="Bottom" HorizontalAlignment="Left" Padding="0,0,0,2"/>

                        <ListBox Grid.Row="2" Grid.Column="1" x:Name="TESTID_FT_FontNames" ItemsSource="{Binding FontNames}" SelectedValue="{Binding SelectedFontName, Mode=TwoWay}" igLocalPrim:ListBoxBehaviors.AutoscrollToSelectedItem="True" IsEnabled="{Binding IsFontNameSelectionEnabled}"/>
                        <ListBox Grid.Row="2" Grid.Column="3" x:Name="TESTID_FT_FontStyles" ItemsSource="{Binding FontStyles}" SelectedValue="{Binding SelectedFontStyle, Mode=TwoWay}" DisplayMemberPath="DisplayText"/>
                        <ListBox Grid.Row="2" Grid.Column="5" x:Name="TESTID_FT_FontSizes" ItemsSource="{Binding FontSizes}" SelectedValue="{Binding SelectedFontSize, Mode=TwoWay}"  igLocalPrim:ListBoxBehaviors.AutoscrollToSelectedItem="True" IsEnabled="{Binding IsFontSizeSelectionEnabled}"/>

                        <!-- ==================  Underline  ================== -->
                        <Grid Grid.Row="3" Grid.Column="1" Grid.ColumnSpan="1" Margin="0,6,0,2" >
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Label Content="{Binding Source={StaticResource SpreadsheetFontControl_UnderlineLabel}, Path=Value}" Padding="0"/>
                            <Rectangle Grid.Column="1" Fill="#FFDCDCDC" Height="1" Margin="6,0,0,0" HorizontalAlignment="Stretch" VerticalAlignment="Center"/>
                        </Grid>
                        <ComboBox Grid.Row="4" Grid.Column="1" Grid.ColumnSpan="1"
                              Name="cmbFontUnderlineStyles"
                              Margin="0,2,0,0" HorizontalAlignment="Stretch" VerticalAlignment="Top"  
                              ItemsSource="{Binding FontUnderlineStyles}"
                              SelectedValue="{Binding SelectedFontUnderlineStyle}"/>

                        <!-- ==================  Color  ================== -->
                        <Grid Grid.Row="3" Grid.Column="3" Grid.ColumnSpan="1" Margin="0,6,0,2" >
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Label Content="{Binding Source={StaticResource SpreadsheetFontControl_ColorLabel}, Path=Value}" Padding="0"/>
                            <Rectangle Grid.Column="1" Fill="#FFDCDCDC" Height="1" Margin="6,0,0,0" HorizontalAlignment="Stretch" VerticalAlignment="Center"/>
                        </Grid>
                        <igLocalPrim:ThemeColorPickerControl Grid.Row="4" Grid.Column="3" Grid.ColumnSpan="1" Margin="0,2,0,0"  
                                                             x:Name="TESTID_FT_FontColor" 
                                                             VerticalAlignment="Top" HorizontalAlignment="Stretch" 
                                                             ThemeColorPickerControlViewModel="{Binding ThemeColorPickerControlViewModel}"
                                                             SpecialColorModeOption="Automatic" 
                                                             SelectedColorInfo="{Binding SelectedFontColorInfo, Mode=TwoWay}" 
                                                             SectionHeaderVisibility="Visible"/>

                        <!-- ==================  Normal Font  ================== -->
                        <CheckBox Grid.Row="4" Grid.Column="5" Grid.ColumnSpan="1" 
                                  x:Name="TESTID_FT_NormalFont" 
                                  VerticalAlignment="Top" Margin="0,6,0,0" Content="{Binding Source={StaticResource SpreadsheetFontControl_NormalFontLabel}, Path=Value}" 
                                  IsChecked="{Binding IsNormalFont, Mode=TwoWay}"/>

                        <!-- ==================  Text Effects  ================== -->
                        <Grid Grid.Row="5" Grid.Column="1" Margin="0,15,0,2" >
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Label Content="{Binding Source={StaticResource SpreadsheetFontControl_Text_Effects}, Path=Value}" Padding="0"/>
                            <Rectangle Grid.Column="1" Fill="#FFDCDCDC" Height="1" Margin="6,0,0,0" HorizontalAlignment="Stretch" VerticalAlignment="Center"/>
                        </Grid>
                        <StackPanel Grid.Row="6" Grid.Column="1">
                            <CheckBox Content="{Binding Source={StaticResource SpreadsheetFontControl_StrikethroughLabel}, Path=Value}" x:Name="TESTID_FT_Strikethrough" IsChecked="{Binding Strikeout, Mode=TwoWay}" Margin="0,3,2,3" IsThreeState="True"/>
                            <CheckBox Content="{Binding Source={StaticResource SpreadsheetFontControl_SuperscriptLabel}, Path=Value}" x:Name="TESTID_FT_Superscript" IsChecked="{Binding Superscript, Mode=TwoWay}" Margin="0,3,2,3" IsThreeState="True" IsEnabled="{Binding IsSuperscriptSelectionEnabled}"/>
                            <CheckBox Content="{Binding Source={StaticResource SpreadsheetFontControl_SubscriptLabel}, Path=Value}" x:Name="TESTID_FT_Subscript" IsChecked="{Binding Subscript, Mode=TwoWay}" Margin="0,3,2,3" IsThreeState="True" IsEnabled="{Binding IsSubscriptSelectionEnabled}"/>
                        </StackPanel>

                        <!-- ==================  Text Preview  ================== -->
                        <Grid Grid.Row="5" Grid.Column="3" Margin="0,15,0,2" >
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Label Content="{Binding Source={StaticResource SpreadsheetFontControl_Text_Preview}, Path=Value}" Padding="0"/>
                            <Rectangle Grid.Column="1" Fill="#FFDCDCDC" Height="1" Margin="6,0,0,0" HorizontalAlignment="Stretch" VerticalAlignment="Center"/>
                        </Grid>
                        <Border Grid.Row="6" Grid.Column="3" Grid.ColumnSpan="3" BorderBrush="#ffababab" BorderThickness="1" Padding="7">
                            <Grid x:Name="fontPreviewGrid">
                                <Border Margin="0" BorderBrush="#ffABABAB" BorderThickness="0" igPrim:XamlHelper.SnapsToDevicePixels="True">
                                    <Grid ClipToBounds="False">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width=".35*"/>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width=".35*"/>
                                        </Grid.ColumnDefinitions>
                                        <Rectangle x:Name="LeftBaselineMarker" Grid.Column="0" Fill="Black" Height="1" VerticalAlignment="Center" igPrim:XamlHelper.SnapsToDevicePixels="True" ></Rectangle>
                                        <Grid Grid.Column="1" HorizontalAlignment="Center" VerticalAlignment="Center" >
                                            <igLocalPrim:SpreadsheetFontPreviewControl 
                                                x:Name="FontPreviewControl" Padding="0" IsHitTestVisible="False" 
                                                Background="{Binding ElementName=fontPreviewGrid, Path=Background}" 
                                                MinWidth="0" />
                                        </Grid>
                                        <Rectangle x:Name="RightBaselineMarker" Grid.Column="2" Fill="Black" Height="1" VerticalAlignment="Center" igPrim:XamlHelper.SnapsToDevicePixels="True" ></Rectangle>
                                    </Grid>
                                </Border>
                            </Grid>
                        </Border>
                        
                        <Rectangle  Grid.Row="7" Grid.Column="1" Grid.ColumnSpan="5" Fill="Transparent"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- JM 12/19/2017 - TFS247301 - FormatCellsDialog -->
    <!-- _________________________ FormatCellsDialogNumberTabTemplate ______________________________________ -->
    <DataTemplate x:Key="FormatCellsDialogNumberTabTemplate">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="6"/>
                <ColumnDefinition Width="120"/>
                <ColumnDefinition Width="10"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="6"/>
            </Grid.ColumnDefinitions>
            
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            
            <!-- ================================= Category ================================= -->
            <Label Grid.Row="0" Grid.Column="1" Content="{Binding Source={StaticResource FormatCellsDialog_NumberTab_CategoryLabel}, Path=Value}" Padding="0" Margin="0,0,0,2"/>
            <ListBox Grid.Row="1" Grid.RowSpan="4" Grid.Column="1" x:Name="TESTID_NT_Category" SelectedItem="{Binding ViewModel.SelectedFormatCategory}" ItemsSource="{Binding ViewModel.FormatCategories}" DisplayMemberPath="CategoryName" igLocalPrim:ListBoxBehaviors.AutoscrollToSelectedItem="True"/>

            <!-- ================================= Sample / Preview Area ================================= -->
            <Label Grid.Row="1" Grid.Column="3" Padding="0,0,0,2" Content="{Binding Source={StaticResource FormatCellsDialog_NumberTab_SampleLabel}, Path=Value}" Margin="0,-2,0,0" />
            <Border Grid.Row="2" Grid.Column="3" BorderThickness="1" BorderBrush="#ffABABAB" Margin="0,0,0,0" Height="35" >
                <igLocalPrim:CellFormatPreviewControl BorderThickness="0" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" 
                                                      PreviewFormatMask="{Binding ViewModel.SelectedFormatResolved}" 
                                                      PreviewValue="{Binding ViewModel.CellValue}"/>
            </Border>
            <Rectangle Grid.Row="2" Grid.Column="3" Margin="0,0,0,0" Height="35" VerticalAlignment="Center" Fill="Transparent"/>

            <!-- ================================= DecimalPlaces ================================= -->
            <StackPanel Grid.Row="3" Grid.Column="3"  Visibility="{Binding ViewModel.SelectedFormatCategory.DecimalPlaces, Converter={StaticResource DecimalValueToVisibilityConverter}, ConverterParameter=-1}" Margin="0,12,0,0">
                <Label Content="{Binding Source={StaticResource FormatCellsDialog_NumberTab_DecimalPlaces}, Path=Value}" Padding="0,0,0,2" Height="18"/>
                <igEditors:XamNumericEditor Grid.Row="2" Grid.Column="3" Height="25"  HorizontalAlignment="Left" Width="100"
                                        SpinButtonDisplayMode="Always" PromptChar="" Name="numberOfColumns"
                                        Value="{Binding ViewModel.SelectedFormatCategory.DecimalPlaces}" ValueType="{x:Type sys:Int32}" Margin="0,0,0,0">
                    <igEditors:XamNumericEditor.ValueConstraint>
                        <igEditors:ValueConstraint MinInclusive="0" MaxInclusive="30" ValidateAsType="Integer32"/>
                    </igEditors:XamNumericEditor.ValueConstraint>
                </igEditors:XamNumericEditor>
            </StackPanel>

            <!-- ================================= Selected Category Formats ================================= -->
            <Grid Grid.Row="4" Grid.Column="3" Visibility="{Binding ViewModel.SelectedFormatCategory.AreFormatsVisible, Converter={StaticResource boolToVis}}" Margin="0,17,0,0">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                
                <Label Grid.Row="0" Content="{Binding ViewModel.SelectedFormatCategory.FormatsHeader}" Padding="0,0,0,2" Height="18" />
                <TextBox Grid.Row="1" x:Name="TESTID_NT_CustomizedFormatMask" Text="{Binding ViewModel.CustomizedFormatMask, UpdateSourceTrigger=PropertyChanged}" Visibility="{Binding ViewModel.SelectedFormatCategory.IsCustom, Converter={StaticResource boolToVis}}" Height="24" Margin="0,0,0,-1"/>
                <ListBox Grid.Row="2" x:Name="TESTID_NT_Formats" SelectedItem="{Binding ViewModel.SelectedFormat}" ItemsSource="{Binding ViewModel.SelectedFormatCategory.Formats}" VerticalAlignment="Stretch" igLocalPrim:ListBoxBehaviors.AutoscrollToSelectedItem="True">
                    <ListBox.ItemTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding PreviewText}" Foreground="{Binding Color}"/>
                        </DataTemplate>
                    </ListBox.ItemTemplate>
                </ListBox>
            </Grid>
            
            <!-- ================== Description ================== -->
            <TextBlock Grid.Row="5" Grid.Column="1" Grid.ColumnSpan="3" Margin="0,20,0,50" TextWrapping="Wrap" Text="{Binding ViewModel.SelectedFormatCategory.Description}"/>
        </Grid>
    </DataTemplate>

    <!-- JM 12/19/2017 - TFS247301 - FormatCellsDialog -->
    <!-- _________________________ FormatCellsDialogAlignmentTabTemplate ______________________________________ -->
    <DataTemplate x:Key="FormatCellsDialogAlignmentTabTemplate">
        <Grid Margin="0">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>

            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="6"/>
                <ColumnDefinition Width="6"/>
                <ColumnDefinition Width="160"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="6"/>
            </Grid.ColumnDefinitions>
            
            <!-- ================== Text Alignment  ================== -->
            <Grid Grid.Row="0" Grid.Column="1" Grid.ColumnSpan="3" Margin="0,8,0,0" >
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Label Content="{Binding Source={StaticResource FormatCellsDialog_AlignmentTab_Text_TextAlignment}, Path=Value}" Padding="0"/>
                <Rectangle Grid.Column="1" Fill="#FFDCDCDC" Height="1" Margin="6,0,0,0" HorizontalAlignment="Stretch" VerticalAlignment="Center"/>
            </Grid>
            
            <Label Grid.Row="1" Grid.Column="2" Grid.ColumnSpan="3" Margin="0,8,0,0" HorizontalAlignment="Left" VerticalAlignment="Top" Content="{Binding Source={StaticResource FormatCellsDialog_AlignmentTab_Text_Horizontal}, Path=Value}" Target="{Binding ElementName=cmbHorizontalTextAlignment}" Padding="0" />
            <!-- JM 09-24-18 Add DisplayMemberPath and SelectedValuePath setters -->
            <ComboBox Grid.Row="2" Grid.Column="2" Grid.ColumnSpan="3" Margin="0,3,0,0" Width="150" HorizontalAlignment="Left" Name="cmbHorizontalTextAlignment" 
                              ItemsSource="{Binding ViewModel.HorizontalCellAlignments}"
                              DisplayMemberPath="EnumValueNameLocalized"
                              SelectedValuePath="EnumValue"
                              SelectedValue="{Binding ViewModel.SelectedHorizontalCellAlignment}"/>

            <Label Grid.Row="2" Grid.Column="3" Grid.ColumnSpan="2" Margin="0,0,0,0" HorizontalAlignment="Left" VerticalAlignment="Center" Content="{Binding Source={StaticResource FormatCellsDialog_AlignmentTab_Text_Indent}, Path=Value}" Target="{Binding ElementName=spinIndent}" Padding="0"/>
            <igEditors:XamNumericEditor Grid.Row="3" Grid.Column="3" Grid.ColumnSpan="2" Margin="0,0,0,0" HorizontalAlignment="Left" Width="70" Height="22" Name="spinIndent"
                                        SpinButtonDisplayMode="Always" PromptChar="" Mask="nnn" TrimFractionalZeros="True" SpinIncrement="1" SpinWrapBehavior="NoWrapping"
                                        Value="{Binding ViewModel.Indent, Mode=TwoWay}" ValueType="{x:Type sys:Int32}" >
                <igEditors:XamNumericEditor.ValueConstraint>
                    <igEditors:ValueConstraint MinInclusive="0" MaxInclusive="250"/>
                </igEditors:XamNumericEditor.ValueConstraint>
            </igEditors:XamNumericEditor>

            <Label Grid.Row="3" Grid.Column="2" Grid.ColumnSpan="3" Margin="0,7,0,0" HorizontalAlignment="Left" VerticalAlignment="Top" Content="{Binding Source={StaticResource FormatCellsDialog_AlignmentTab_Text_Vertical}, Path=Value}" Target="{Binding ElementName=cmbVerticalTextAlignment}" Padding="0" />
            <!-- JM 09-24-18 Add DisplayMemberPath and SelectedValuePath setters -->
            <ComboBox Grid.Row="4" Grid.Column="2" Grid.ColumnSpan="3" Width="150" HorizontalAlignment="Left" Name="cmbVerticalTextAlignment"
                              ItemsSource="{Binding ViewModel.VerticalCellAlignments}"
                              DisplayMemberPath="EnumValueNameLocalized"
                              SelectedValuePath="EnumValue"
                              SelectedValue="{Binding ViewModel.SelectedVerticalCellAlignment}" Margin="0,3,0,0" />

            <!-- We don't support 'Justify Distributed' right now - insert a vertical placeholder for now instead -->
            <Rectangle  Grid.Row="5" Grid.Column="2" Grid.ColumnSpan="3" Fill="Transparent" Height="26"/>
            <!--<CheckBox Grid.Row="5" Grid.Column="2" Grid.ColumnSpan="3" VerticalAlignment="Center" HorizontalAlignment="Left" 
                              IsChecked="{Binding JustifyDistributed}" Margin="0,6,0,0"
                              Content="{Binding Source={StaticResource FormatCellsDialog_AlignmentTab_Text_JustifyDistributed}, Path=Value}"/>-->

            <!-- ================== Text Control  ================== -->
            <Grid Grid.Row="6" Grid.Column="1" Grid.ColumnSpan="3" Margin="0,11,0,0" >
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Label Content="{Binding Source={StaticResource FormatCellsDialog_AlignmentTab_Text_TextControl}, Path=Value}" Padding="0"/>
                <Rectangle Grid.Column="1" Fill="#FFDCDCDC" Height="1" Margin="6,0,0,0" HorizontalAlignment="Stretch" VerticalAlignment="Center"/>
            </Grid>

            <CheckBox Grid.Row="7" Grid.Column="2" Grid.ColumnSpan="3" Margin="0,8,0,0" VerticalAlignment="Center" HorizontalAlignment="Left" 
                              IsChecked="{Binding ViewModel.WrapText}" Name="chkWrapText"
                              Content="{Binding Source={StaticResource FormatCellsDialog_AlignmentTab_Text_WrapText}, Path=Value}"
                              IsThreeState="True"/>
            <CheckBox Grid.Row="8" Grid.Column="2" Grid.ColumnSpan="3" Margin="0,8,0,0" VerticalAlignment="Center" HorizontalAlignment="Left" 
                      x:Name="TESTID_AT_ShrinkToFit" 
                      IsChecked="{Binding ViewModel.ShrinkToFit}" 
                      Content="{Binding Source={StaticResource FormatCellsDialog_AlignmentTab_Text_ShrinkToFit}, Path=Value}"
                      IsEnabled="{Binding ViewModel.IsShrinkToFitSelectionEnabled}"
                      IsThreeState="True"/>
            <CheckBox Grid.Row="9" Grid.Column="2" Grid.ColumnSpan="3" Margin="0,8,0,0" VerticalAlignment="Center" HorizontalAlignment="Left" 
                      x:Name="TESTID_AT_MergeCells" 
                      IsChecked="{Binding ViewModel.MergeCells}" 
                      Content="{Binding Source={StaticResource FormatCellsDialog_AlignmentTab_Text_MergeCells}, Path=Value}"
                      IsEnabled="{Binding ViewModel.IsMergeCellsSelectionEnabled}"
                      IsThreeState="True"/>

            <!-- We don't support 'Right to left' now - comment out -->
            <!-- ================== Right to left ================== -->
            <!--<Grid Grid.Row="10" Grid.Column="1" Grid.ColumnSpan="3" Margin="0,10,0,0" >
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Label Content="{Binding Source={StaticResource FormatCellsDialog_AlignmentTab_Text_RightToLeft}, Path=Value}" Padding="0" />
                <Rectangle Grid.Column="1" Fill="#FFDCDCDC" Height="1" Margin="6,0,0,0" HorizontalAlignment="Stretch" VerticalAlignment="Center"/>
            </Grid>
            
            <Label Grid.Row="11" Grid.Column="2" Grid.ColumnSpan="3" Margin="0,8,0,0" Content="{Binding Source={StaticResource FormatCellsDialog_AlignmentTab_Text_TextDirection}, Path=Value}" Target="{Binding ElementName=cmbHorizontalTextAlignment}" Padding="0" />
            <ComboBox Grid.Row="12" Grid.Column="2" Grid.ColumnSpan="3" Margin="0,3,0,0" Width="150" HorizontalAlignment="Left" Name="cmbTextDirection" 
                              ItemsSource="{Binding TextDirections}"
                              SelectedValue="{Binding SelectedTextDirection}"/>-->

            <Rectangle  Grid.Row="13" Grid.Column="0" Grid.ColumnSpan="5" Fill="Transparent"/>
        </Grid>
    </DataTemplate>

    <!-- JM 12/19/2017 - TFS247301 - FormatCellsDialog -->
    <!-- _________________________ FormatCellsDialogFontTabTemplate ______________________________________ -->
    <DataTemplate x:Key="FormatCellsDialogFontTabTemplate">
        <Grid>
            <igLocalPrim:SpreadsheetFontControl DataContext="{Binding ViewModel.FontControlViewModel}"/>
        </Grid>
    </DataTemplate>

    <!-- JM 12/19/2017 - TFS247301 - FormatCellsDialog -->
    <!-- _________________________ FormatCellsDialogBorderTabTemplate ______________________________________ -->
    <DataTemplate x:Key="FormatCellsDialogBorderTabTemplate">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="50"/>
                <RowDefinition Height="25"/>
                <RowDefinition Height="35"/>
                <RowDefinition Height="50"/>
                <RowDefinition Height="50"/>
                <RowDefinition Height="50"/>
                <RowDefinition Height="50"/>
                <RowDefinition Height="15"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>

            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="6"/>
                <ColumnDefinition Width="6"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="15"/>
                <ColumnDefinition Width="65"/>
                <ColumnDefinition Width="65"/>
                <ColumnDefinition Width="65"/>
                <ColumnDefinition Width="65"/>
                <ColumnDefinition Width="50"/>
                <ColumnDefinition Width="6"/>
            </Grid.ColumnDefinitions>

            <!-- ==================  Line ================== -->
            <!-- Line -->
            <Grid Grid.Row="0" Grid.Column="1" Grid.ColumnSpan="2" Margin="0,10,0,0" >
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Label Content="{Binding Source={StaticResource FormatCellsDialog_BorderTab_Text_Line}, Path=Value}" Padding="0"/>
                <Rectangle Grid.Column="1" Fill="#FFDCDCDC" Height="1" Margin="6,0,0,0" HorizontalAlignment="Stretch" VerticalAlignment="Center"/>
            </Grid>
            
            <!-- Style -->
            <Grid  Grid.Row="1" Grid.Column="2" Grid.RowSpan="5" Margin="0,6,0,0" >
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>

                <Label Content="{Binding Source={StaticResource FormatCellsDialog_BorderTab_Text_Style}, Path=Value}" VerticalAlignment="Bottom" HorizontalAlignment="Left" Padding="0,0,0,2" />
                <!-- JM 09-24-18 Add DisplayMemberPath and SelectedValuePath setters -->
                <ListBox Grid.Row="1" 
                         x:Name="TESTID_BT_LineStyles" 
                         ItemsSource="{Binding ViewModel.CellBorderLineStyles}" 
                         DisplayMemberPath="EnumValueNameLocalized"
                         SelectedValuePath="EnumValue"
                         SelectedValue="{Binding ViewModel.SelectedCellBorderLineStyle, Mode=TwoWay}" 
                         igLocalPrim:ListBoxBehaviors.AutoscrollToSelectedItem="True"/>
            </Grid>

            <!-- Color -->
            <StackPanel Grid.Row="6" Grid.RowSpan="3" Grid.Column="2" >
                <Label Margin="0,8,0,0" HorizontalAlignment="Left" VerticalAlignment="Top" Content="{Binding Source={StaticResource FormatCellsDialog_BorderTab_Text_Color}, Path=Value}" Padding="0" />
                <igLocalPrim:ThemeColorPickerControl Margin="0,2,0,0" 
                                                     x:Name="TESTID_BT_LineColor" 
                                                     SpecialColorModeOption="Automatic" 
                                                     SelectedColorInfo="{Binding ViewModel.CellBorderLineColorInfo, Mode=TwoWay}" 
                                                     ThemeColorPickerControlViewModel="{Binding ViewModel.ThemeColorPickerControlViewModel}" SectionHeaderVisibility="Visible"/>
            </StackPanel>

            <!-- ==================  Presets ================== -->
            <Grid Grid.Row="0" Grid.Column="4" Grid.ColumnSpan="4" Margin="0,10,0,8" >
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Label Content="{Binding Source={StaticResource FormatCellsDialog_BorderTab_Text_Presets},Path=Value}" Padding="0"/>
                <Rectangle Grid.Column="1" Fill="#FFDCDCDC" Height="1" Margin="6,0,0,0" HorizontalAlignment="Stretch" VerticalAlignment="Center"/>
            </Grid>

            <!-- Preset buttons -->
            <!-- None -->
            <Button Grid.Row="1" Grid.Column="5" Width="50" Height="50"  BorderBrush="Gray" 
                    x:Name="TESTID_BT_NonePreset" 
                    HorizontalAlignment="Center" VerticalAlignment="Center" 
                    Command="{x:Static igLocalPrim:SpreadsheetFormatCellsDialogControl.ApplyCellBorderPresetCommand}" CommandParameter="{x:Static igLocalPrim:SpreadsheetCellBorderPresetType.None}"
                    ContentTemplate="{StaticResource borderLineButtonContent}"
                    HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch"/>
            <!-- Outline -->
            <Button Grid.Row="1" Grid.Column="6" Width="50" Height="50" BorderBrush="Gray"
                    x:Name="TESTID_BT_OutlinePreset" 
                    HorizontalAlignment="Center" VerticalAlignment="Center" 
                    Command="{x:Static igLocalPrim:SpreadsheetFormatCellsDialogControl.ApplyCellBorderPresetCommand}" CommandParameter="{x:Static igLocalPrim:SpreadsheetCellBorderPresetType.Outline}"
                    ContentTemplate="{StaticResource borderLineButtonContent}"
                    HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch"
                    igLocalPrim:BorderButtonBehaviors.LeftBorderVisibility="Visible"
                    igLocalPrim:BorderButtonBehaviors.TopBorderVisibility="Visible"
                    igLocalPrim:BorderButtonBehaviors.RightBorderVisibility="Visible"
                    igLocalPrim:BorderButtonBehaviors.BottomBorderVisibility="Visible"
                    />
            <!-- Inside -->
            <Button Grid.Row="1" Grid.Column="7" Width="50" Height="50" BorderBrush="Gray"
                    x:Name="TESTID_BT_InsidePreset" 
                    HorizontalAlignment="Center" VerticalAlignment="Center" 
                    Command="{x:Static igLocalPrim:SpreadsheetFormatCellsDialogControl.ApplyCellBorderPresetCommand}" CommandParameter="{x:Static igLocalPrim:SpreadsheetCellBorderPresetType.Inside}"
                    ContentTemplate="{StaticResource borderLineButtonContent}"
                    HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch"
                    igLocalPrim:BorderButtonBehaviors.InsideHorizontalBorderVisibility="Visible"
                    igLocalPrim:BorderButtonBehaviors.InsideVerticalBorderVisibility="Visible"
                    IsEnabled="{Binding ViewModel.CellBorderInfo.IsInsideCellBordersEditable}"
                    />

            <!-- Preset labels -->
            <Label Grid.Row="2" Grid.Column="5" VerticalAlignment="Center" HorizontalAlignment="Center" Content="{Binding Source={StaticResource FormatCellsDialog_BorderTab_Text_PresetNone}, Path=Value}"/>
            <Label Grid.Row="2" Grid.Column="6" VerticalAlignment="Center" HorizontalAlignment="Center" Content="{Binding Source={StaticResource FormatCellsDialog_BorderTab_Text_PresetOutline}, Path=Value}"/>
            <Label Grid.Row="2" Grid.Column="7" VerticalAlignment="Center" HorizontalAlignment="Center" 
                   Content="{Binding Source={StaticResource FormatCellsDialog_BorderTab_Text_PresetInside}, Path=Value}"
                   IsEnabled="{Binding ViewModel.CellBorderInfo.IsInsideCellBordersEditable}"/>

            <!-- Border -->
            <Grid Grid.Row="3" Grid.Column="4" Grid.ColumnSpan="4" Margin="0,10,0,8" >
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Label Content="{Binding Source={StaticResource FormatCellsDialog_BorderTab_Text_Border}, Path=Value}" Padding="0"/>
                <Rectangle Grid.Column="1" Fill="#FFDCDCDC" Height="1" Margin="6,0,0,0" HorizontalAlignment="Stretch" VerticalAlignment="Center"/>
            </Grid>

            <!-- Line-adding buttons -->
            <!-- Top -->
            <ToggleButton Grid.Row="4" Grid.Column="4" Width="40" Height="40" BorderBrush="Gray" 
                          x:Name="TESTID_BT_AddTopLine" 
                          HorizontalAlignment="Right" VerticalAlignment="Top" Margin="0,0,6,0" 
                          Command="{x:Static igLocalPrim:SpreadsheetFormatCellsDialogControl.ToggleCellBorderLineCommand}" CommandParameter="{x:Static igLocalPrim:SpreadsheetCellBorderType.Top}"
                          ContentTemplate="{StaticResource borderLineButtonContent}"
                          HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch"
                          igLocalPrim:BorderButtonBehaviors.TopBorderVisibility="Visible"
                          IsChecked="{Binding Path=ViewModel.CellBorderInfo.IsTopCellBorderVisible, Mode=OneWay}"
                          />
            <!-- Inside Horizontal -->
            <ToggleButton Grid.Row="5" Grid.Column="4" Width="40" Height="40" BorderBrush="Gray" 
                          x:Name="TESTID_BT_AddInsideHorizontalLine" 
                          HorizontalAlignment="Right" VerticalAlignment="Center" Margin="0,0,6,0" 
                          Command="{x:Static igLocalPrim:SpreadsheetFormatCellsDialogControl.ToggleCellBorderLineCommand}" CommandParameter="{x:Static igLocalPrim:SpreadsheetCellBorderType.InsideHorizontal}"
                          ContentTemplate="{StaticResource borderLineButtonContent}"
                          HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch"
                          igLocalPrim:BorderButtonBehaviors.InsideHorizontalBorderVisibility="Visible"
                          IsChecked="{Binding Path=ViewModel.CellBorderInfo.IsInsideHorizontalCellBorderVisible, Mode=OneWay}"
                          IsEnabled="{Binding ViewModel.CellBorderInfo.IsInsideHorizontalCellBorderEditable}"
                          />
            <!-- Bottom -->
            <ToggleButton Grid.Row="6" Grid.Column="4" Width="40" Height="40" BorderBrush="Gray" 
                          x:Name="TESTID_BT_AddBottomLine" 
                          HorizontalAlignment="Right" VerticalAlignment="Bottom" Margin="0,0,6,0" 
                          Command="{x:Static igLocalPrim:SpreadsheetFormatCellsDialogControl.ToggleCellBorderLineCommand}" CommandParameter="{x:Static igLocalPrim:SpreadsheetCellBorderType.Bottom}"
                          ContentTemplate="{StaticResource borderLineButtonContent}"
                          HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch"
                          igLocalPrim:BorderButtonBehaviors.BottomBorderVisibility="Visible"
                          IsChecked="{Binding Path=ViewModel.CellBorderInfo.IsBottomCellBorderVisible, Mode=OneWay}"
                          />
            <!-- DiagonalUp-->
            <ToggleButton Grid.Row="7" Grid.Column="4" Width="40" Height="40" BorderBrush="Gray" 
                          x:Name="TESTID_BT_AddDiagonalUpLine" 
                          HorizontalAlignment="Right" VerticalAlignment="Bottom" Margin="0,0,6,0" 
                          Command="{x:Static igLocalPrim:SpreadsheetFormatCellsDialogControl.ToggleCellBorderLineCommand}" CommandParameter="{x:Static igLocalPrim:SpreadsheetCellBorderType.DiagonalUp}"
                          ContentTemplate="{StaticResource borderLineButtonContent}"
                          HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch"
                          igLocalPrim:BorderButtonBehaviors.DiagonalUpBorderVisibility="Visible"
                          IsChecked="{Binding Path=ViewModel.CellBorderInfo.IsDiagonalUpCellBorderVisible, Mode=OneWay}"
                          />
            <!-- Left -->
            <ToggleButton Grid.Row="7" Grid.Column="5" Width="40" Height="40" BorderBrush="Gray" 
                          x:Name="TESTID_BT_AddLeftLine" 
                          HorizontalAlignment="Left" VerticalAlignment="Bottom" Margin="0,0,6,0" 
                          Command="{x:Static igLocalPrim:SpreadsheetFormatCellsDialogControl.ToggleCellBorderLineCommand}" CommandParameter="{x:Static igLocalPrim:SpreadsheetCellBorderType.Left}"
                          ContentTemplate="{StaticResource borderLineButtonContent}"
                          HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch"
                          igLocalPrim:BorderButtonBehaviors.LeftBorderVisibility="Visible"
                          IsChecked="{Binding Path=ViewModel.CellBorderInfo.IsLeftCellBorderVisible, Mode=OneWay}"
                          />
            <!-- InsideVertical -->
            <ToggleButton Grid.Row="7" Grid.Column="6" Width="40" Height="40" BorderBrush="Gray" 
                          x:Name="TESTID_BT_AddInsideVerticalLine" 
                          HorizontalAlignment="Center" VerticalAlignment="Bottom" Margin="0,0,6,0" 
                          Command="{x:Static igLocalPrim:SpreadsheetFormatCellsDialogControl.ToggleCellBorderLineCommand}" CommandParameter="{x:Static igLocalPrim:SpreadsheetCellBorderType.InsideVertical}"
                          ContentTemplate="{StaticResource borderLineButtonContent}"
                          HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch"
                          igLocalPrim:BorderButtonBehaviors.InsideVerticalBorderVisibility="Visible"
                          IsChecked="{Binding Path=ViewModel.CellBorderInfo.IsInsideVerticalCellBorderVisible, Mode=OneWay}"
                          IsEnabled="{Binding ViewModel.CellBorderInfo.IsInsideVerticalCellBorderEditable}"
                          />
            <!-- Right -->
            <ToggleButton Grid.Row="7" Grid.Column="7" Width="40" Height="40" BorderBrush="Gray" 
                          x:Name="TESTID_BT_AddRightLine" 
                          HorizontalAlignment="Right" VerticalAlignment="Bottom" Margin="0,0,6,0" 
                          Command="{x:Static igLocalPrim:SpreadsheetFormatCellsDialogControl.ToggleCellBorderLineCommand}" CommandParameter="{x:Static igLocalPrim:SpreadsheetCellBorderType.Right}"
                          ContentTemplate="{StaticResource borderLineButtonContent}"
                          HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch"
                          igLocalPrim:BorderButtonBehaviors.RightBorderVisibility="Visible"
                          IsChecked="{Binding Path=ViewModel.CellBorderInfo.IsRightCellBorderVisible, Mode=OneWay}"
                          />
            <!-- DiagonalDown-->
            <ToggleButton Grid.Row="7" Grid.Column="8" Width="40" Height="40" BorderBrush="Gray" 
                          x:Name="TESTID_BT_AddDiagonalDownLine" 
                          HorizontalAlignment="Center" VerticalAlignment="Bottom" Margin="0,0,6,0" 
                          Command="{x:Static igLocalPrim:SpreadsheetFormatCellsDialogControl.ToggleCellBorderLineCommand}" CommandParameter="{x:Static igLocalPrim:SpreadsheetCellBorderType.DiagonalDown}"
                          ContentTemplate="{StaticResource borderLineButtonContent}"
                          HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch"
                          igLocalPrim:BorderButtonBehaviors.DiagonalDownBorderVisibility="Visible"
                          IsChecked="{Binding Path=ViewModel.CellBorderInfo.IsDiagonalDownCellBorderVisible, Mode=OneWay}"
                          />

            <!-- Preview -->
            <igLocalPrim:CellBordersPreviewControl Grid.Row="4" Grid.RowSpan="3" Grid.Column="5" Grid.ColumnSpan="3" 
                                                   x:Name="TESTID_BT_BordersPreview"
                                                   HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                                                   OriginalWorkbook="{Binding ViewModel.Workbook}"/>
            
            <!-- Description -->
            <TextBlock Grid.Row="9" Grid.Column="1" Grid.ColumnSpan="8" Margin="0,10,0,0" 
                       TextWrapping="Wrap" Text="{Binding Source={StaticResource FormatCellsDialog_BorderTab_Text_Description}, Path=Value}"
                       VerticalAlignment="Bottom"/>

            <Rectangle  Grid.Row="10" Grid.Column="1" Grid.ColumnSpan="8" Fill="Transparent"/>
        </Grid>
    </DataTemplate>

    <!-- JM 12/19/2017 - TFS247301 - FormatCellsDialog -->
    <!-- _________________________ FormatCellsDialogFillTabTemplate ______________________________________ -->
    <DataTemplate x:Key="FormatCellsDialogFillTabTemplate">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="6"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="50"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="6"/>
            </Grid.ColumnDefinitions>

            <!-- ==================  Background Color  ================== -->
            <Grid Grid.Row="0" Grid.Column="1" Grid.ColumnSpan="1" Margin="0,10,0,2" >
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Label Content="{Binding Source={StaticResource FormatCellsDialog_FillTab_Text_BackgroundColor}, Path=Value}" Padding="0"/>
                <Rectangle Grid.Column="1" Fill="#FFDCDCDC" Height="1" Margin="6,0,0,0" HorizontalAlignment="Stretch" VerticalAlignment="Center"/>
            </Grid>
            <!-- // JM 08-24-18 TFS256294 - Add a binding to the new NoColorVersion property. -->
            <igLocalPrim:ThemeColorPaletteControl Grid.Row="1" Grid.Column="1" Grid.RowSpan="4" Grid.ColumnSpan="1" Margin="0,2,0,0"
                                                  x:Name="TESTID_FILLT_Background" 
                                                  VerticalAlignment="Top" HorizontalAlignment="Stretch" 
                                                  SpecialColorModeOption="NoColor" 
                                                  NoColorVersion="{Binding ViewModel.NoColorVersion, Mode=TwoWay}" 
                                                  SelectedColorInfo="{Binding ViewModel.BackgroundColorInfo, Mode=TwoWay}" 
                                                  ThemeColorPickerControlViewModel="{Binding ViewModel.ThemeColorPickerControlViewModel}" SectionHeaderVisibility="Collapsed"/>
            
            <!-- ==================  Pattern ================== -->
            <!-- Pattern Color -->
            <Grid Grid.Row="0" Grid.Column="3" Grid.ColumnSpan="1" Margin="0,10,0,0" >
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Label Content="{Binding Source={StaticResource FormatCellsDialog_FillTab_Text_PatternColor}, Path=Value}" Padding="0"/>
                <Rectangle Grid.Column="1" Fill="#FFDCDCDC" Height="1" Margin="6,0,0,0" HorizontalAlignment="Stretch" VerticalAlignment="Center"/>
            </Grid>
            <igLocalPrim:ThemeColorPickerControl Grid.Row="1" Grid.Column="3" Grid.ColumnSpan="1" Margin="0,2,0,0"
                                                 x:Name="TESTID_FILLT_PatternColor" 
                                                 VerticalAlignment="Top" HorizontalAlignment="Stretch" 
                                                 SpecialColorModeOption="Automatic" 
                                                 SelectedColorInfo="{Binding ViewModel.FillPatternColorInfo, Mode=TwoWay}" 
                                                 ThemeColorPickerControlViewModel="{Binding ViewModel.ThemeColorPickerControlViewModel}" SectionHeaderVisibility="Visible"/>

            <!-- Pattern Style -->
            <Grid Grid.Row="2" Grid.Column="3" Grid.ColumnSpan="1" Margin="0,12,0,0" >
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Label Content="{Binding Source={StaticResource FormatCellsDialog_FillTab_Text_PatternStyle}, Path=Value}" Padding="0"/>
                <Rectangle Grid.Column="1" Fill="#FFDCDCDC" Height="1" Margin="6,0,0,0" HorizontalAlignment="Stretch" VerticalAlignment="Center"/>
            </Grid>
            <!-- JM 09-24-18 Add DisplayMemberPath and SelectedValuePath setters -->
            <ComboBox Grid.Row="3" Grid.Column="3" Grid.ColumnSpan="1" Margin="0,3,0,0" 
                      x:Name="TESTID_FILLT_PatternStyle" 
                      ItemsSource="{Binding ViewModel.FillPatternStyles}"
                      DisplayMemberPath="EnumValueNameLocalized"
                      SelectedValuePath="EnumValue"
                      SelectedValue="{Binding Path=ViewModel.SelectedFillPatternStyle, Mode=TwoWay}"/>

            <!-- ================== Sample ================== -->
            <StackPanel Grid.Row="5" Grid.Column="1" Grid.ColumnSpan="3" Margin="0,0,0,10" VerticalAlignment="Bottom">
                <Label Content="{Binding Source={StaticResource FormatCellsDialog_FillTab_Text_Sample}, Path=Value}" Padding="0"/>
                <Border BorderThickness="1" BorderBrush="LightGray" Margin="0,2,0,0">
                    <igLocalPrim:CellFillPreviewControl BorderThickness="0" IsEnabled="False" PreviewFill="{Binding ViewModel.SelectedFillForPreview}" Height="59" Margin="8" HorizontalAlignment="Stretch"/>
                </Border>
            </StackPanel>
        </Grid>
    </DataTemplate>

    <!-- JM 12/19/2017 - TFS247301 - FormatCellsDialog -->
    <!-- _________________________ FormatCellsDialogProtectionTabTemplate ______________________________________ -->
    <DataTemplate x:Key="FormatCellsDialogProtectionTabTemplate">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>

            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="6"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="6"/>
            </Grid.ColumnDefinitions>

            <CheckBox Grid.Row="0" Grid.Column="1" Margin="0,10,0,0" VerticalAlignment="Top" HorizontalAlignment="Left"
                      x:Name="TESTID_PT_Locked" 
                              IsChecked="{Binding ViewModel.Locked}" 
                              Content="{Binding Source={StaticResource FormatCellsDialog_ProtectionTab_Text_Locked}, Path=Value}"
                              IsThreeState="True"/>

            <CheckBox Grid.Row="1" Grid.Column="1" Margin="0,10,0,0" VerticalAlignment="Top" HorizontalAlignment="Left"
                      x:Name="TESTID_PT_Hidden" 
                              IsChecked="{Binding ViewModel.Hidden}" 
                              Content="{Binding Source={StaticResource FormatCellsDialog_ProtectionTab_Text_Hidden}, Path=Value}"
                              IsThreeState="True"/>
            <TextBlock Grid.Row="2" Grid.Column="1" Margin="0,10,0,0" Text="{Binding Source={StaticResource FormatCellsDialog_ProtectionTab_Text_Summary}, Path=Value}" HorizontalAlignment="Left" VerticalAlignment="Top" Padding="0" TextWrapping="Wrap"/>
        </Grid>
    </DataTemplate>

    <!-- JM 12/19/2017 - TFS247301 - FormatCellsDialog -->
    <!-- _________________________ SpreadsheetFormatCellsDialogControl ______________________________________ -->
    <Style TargetType="igLocalPrim:SpreadsheetFormatCellsDialogControl">
        <Setter Property="TitleDescription" Value="{Binding Source={StaticResource FormatCellsDialog_Title}, Path=Value}"  />

        <Setter Property="AlignmentTabTemplate" Value="{Binding Source={StaticResource FormatCellsDialogAlignmentTabTemplate}}"/>
        <Setter Property="BorderTabTemplate" Value="{Binding Source={StaticResource FormatCellsDialogBorderTabTemplate}}"/>
        <Setter Property="FillTabTemplate" Value="{Binding Source={StaticResource FormatCellsDialogFillTabTemplate}}"/>
        <Setter Property="FontTabTemplate" Value="{Binding Source={StaticResource FormatCellsDialogFontTabTemplate}}"/>
        <Setter Property="NumberTabTemplate" Value="{Binding Source={StaticResource FormatCellsDialogNumberTabTemplate}}"/>
        <Setter Property="ProtectionTabTemplate" Value="{Binding Source={StaticResource FormatCellsDialogProtectionTabTemplate}}"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="igLocalPrim:SpreadsheetFormatCellsDialogControl">
                    <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>

                        <TabControl x:Name="MainTabControl" Margin="5,5,5,0"/>

                        <Grid Grid.Row="1">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>

                            <Button Grid.Column ="1" x:Name="TESTID_DIALOG_OK" Content="{Binding Source={StaticResource FormatCellsDialog_OK}, Path=Value}" Margin="0,8,0,8" MinWidth="75" Command="{x:Static igLocalPrim:SpreadsheetFormatCellsDialogControl.ApplySettingsCommand}" />
                            <Button Grid.Column ="2" x:Name="TESTID_DIALOG_Cancel" Content="{Binding Source={StaticResource FormatCellsDialog_Cancel}, Path=Value}" Margin="8,8,8,8" MinWidth="75" Command="{x:Static igLocalPrim:SpreadsheetFormatCellsDialogControl.CancelSettingsCommand}" IsCancel="True"/>
                        </Grid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>