<ResourceDictionary
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
  xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
  xmlns:ig="http://schemas.infragistics.com/xaml"
  xmlns:NetworkNode="http://schemas.infragistics.com/xaml" mc:Ignorable="d">

    <!-- ************************************************ BRUSHES ************************************************
***********************************************************************************************************-->

    <SolidColorBrush x:Key="GenericBackground"  Color="Transparent"/>
    <SolidColorBrush x:Key="GenericBorder" Color="#FFD0D0D0"/>
    <SolidColorBrush x:Key="ConnectorLine" Color="#FF6A7887"/>

    <SolidColorBrush x:Key="DragStrokeBrush" Color="#FF717E8B"/>
    <SolidColorBrush x:Key="ChartPreviewBrush" Color="#7FFFFFFF"/>

    <LinearGradientBrush x:Key="NodeBgBrush" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FFE0E6E9" Offset="1"/>
        <GradientStop Color="#FFFDFDFD"/>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="NodeStroke" Color="#FFA2ADB8"/>
    <SolidColorBrush x:Key="NodeStrokeOver" Color="#FF707F8D"/>

    <LinearGradientBrush x:Key="NodeBgBrushOver" EndPoint="0.5,1" MappingMode="RelativeToBoundingBox" StartPoint="0.5,0">
        <GradientStop Color="#FFBBC6D0"/>
        <GradientStop Color="#FFFDFDFD" Offset="1"/>
    </LinearGradientBrush>

    <SolidColorBrush x:Key="NodeStrokeSelected" Color="#FF52606F"/>

    <LinearGradientBrush x:Key="NodeBgBrushSelected" EndPoint="0.5,1" MappingMode="RelativeToBoundingBox" StartPoint="0.5,0">
        <GradientStop Color="#FF8595A5"/>
        <GradientStop Color="#FF52606F" Offset="1"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="NodeBgFocus" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FFCEDDEB"/>
        <GradientStop Color="#FFAABAC9" Offset="1"/>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="NodeStrokeFocused" Color="#FF272F37"/>
    <LinearGradientBrush x:Key="NodeFillFocus" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#59000000" Offset="1"/>
        <GradientStop Offset="0.8" Color="#19000000"/>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="ForegroundBrush" Color="#FF292929"/>
    <LinearGradientBrush x:Key="NodeReadOnlyBrush" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FFD4D4D4" Offset="1"/>
        <GradientStop Color="White"/>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="NodeStrokeEditing" Color="#FFEDA131"/>

    <LinearGradientBrush x:Key="ToggleButtonFill" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FFA0B2C4"/>
        <GradientStop Color="#FF798A9B" Offset="1"/>
        <GradientStop Color="#FF8B9CAE" Offset="0.536"/>
    </LinearGradientBrush>

    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0" x:Key="ToggleButtonFillOver">
        <GradientStop Color="#FF4D5A6A" Offset="1"/>
        <GradientStop Color="#FF8CA1B6"/>
    </LinearGradientBrush>

    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0" x:Key="ToggleButtonFillPressed">
        <GradientStop Color="#FF7E8FA1" Offset="1"/>
        <GradientStop Color="#FF566472"/>
    </LinearGradientBrush>

    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0" x:Key="ToggleButtonFillSelected">
        <GradientStop Color="#FF495766"/>
        <GradientStop Color="#FE687A8C" Offset="1"/>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="NodeBaseFill" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FFA0B2C4"/>
        <GradientStop Color="#FF798A9B" Offset="1"/>
        <GradientStop Color="#FF8B9CAE" Offset="0.536"/>
    </LinearGradientBrush>

    <!-- *********************************  ToolTip ********************************* -->

    <LinearGradientBrush x:Key="ToolTipColor" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FFA0B2C4"/>
        <GradientStop Color="#FF798A9B" Offset="1"/>
    </LinearGradientBrush>

    <!-- ******************************************** END BRUSHES *********************************************
***********************************************************************************************************-->

    <!-- *********************************  ToolTipStyle  ********************************* -->

    <Style x:Key="ToolTipStyle" TargetType="ContentControl">
        <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}"/>
        <Setter Property="Padding" Value="6,2,6,2"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ContentControl">
                    <Border BorderBrush="{StaticResource ToggleButtonFill}" CornerRadius="3">
                        <Grid>
                            <Rectangle Stroke="{StaticResource ToggleButtonFill}" RadiusY="3" RadiusX="3" Opacity="0.8">
                                <Rectangle.Fill>
                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                        <GradientStop Color="#FFC0C6C9" Offset="1"/>
                                        <GradientStop Color="#FFefefef"/>
                                    </LinearGradientBrush>
                                </Rectangle.Fill>
                            </Rectangle>
                            <ContentPresenter Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" Margin="{TemplateBinding Padding}" HorizontalAlignment="{TemplateBinding HorizontalAlignment}" VerticalAlignment="{TemplateBinding VerticalAlignment}"/>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style  TargetType="NetworkNode:XamNetworkNode">
        <Setter Property="Background" Value="{StaticResource GenericBackground}"/>
        <Setter Property="BorderBrush" Value="{StaticResource GenericBackground}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Padding" Value="2"/>
        <Setter Property="DragStroke" Value="{StaticResource DragStrokeBrush}"/>
        <Setter Property="DragStrokeThickness" Value="1" />
        <Setter Property="PreviewBrush" Value="#10101010"/>
        <!-- Connector properties -->
        <Setter Property="Line" Value="{StaticResource ConnectorLine}"/>
        <Setter Property="LineThickness" Value="1"/>
        <Setter Property="ToolTipStyle" Value="{StaticResource ToolTipStyle}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="NetworkNode:XamNetworkNode">
                    <Border Margin="{TemplateBinding Padding}"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid>
                            <ContentPresenter x:Name="ContentPresenter" />
                            <NetworkNode:NetworkNodeNodesPanel x:Name="NodesPanel" Background="{StaticResource GenericBackground}">
                            </NetworkNode:NetworkNodeNodesPanel>
                            <Canvas x:Name="Overlay"  />
                            <ig:XamOverviewPlusDetailPane x:Name="Thumbnail"
                                                          IsZoomable="True"
                                                          Visibility="{TemplateBinding OverviewPlusDetailPaneVisibility}"
                                                          HorizontalAlignment="{TemplateBinding HorizontalOverviewPlusDetailPaneAlignment}"
                                                          VerticalAlignment="{TemplateBinding VerticalOverviewPlusDetailPaneAlignment}" />
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- *********************************  NodeToggleButton  ********************************* -->

    <Style x:Key="NodeToggleButton" TargetType="ToggleButton">
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="over" d:IsOptimized="True"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="pressed" d:IsOptimized="True"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="0.3" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="grid" d:IsOptimized="True"/>
                                        <DoubleAnimation Duration="0" To="0.5" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="DisabledFill" d:IsOptimized="True"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CheckStates">
                                <VisualState x:Name="Checked">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="expand">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unchecked"/>
                                <VisualState x:Name="Indeterminate"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="focused" d:IsOptimized="True"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid>
                            <Rectangle x:Name="normal" RadiusX="3" RadiusY="3" Fill="{StaticResource ToggleButtonFill}"/>
                            <Rectangle x:Name="over" RadiusX="3" RadiusY="3" Fill="{StaticResource ToggleButtonFillOver}" Opacity="0"/>
                            <Rectangle x:Name="pressed" RadiusX="3" RadiusY="3" Fill="{StaticResource ToggleButtonFillPressed}" Opacity="0"/>
                            <Rectangle x:Name="focused" RadiusX="3" RadiusY="3" Fill="{StaticResource ToggleButtonFillSelected}" StrokeThickness="1" Opacity="0"/>
                            <Rectangle x:Name="DisabledFill" Fill="{StaticResource NodeBgBrush}" Grid.RowSpan="2" RadiusX="3" RadiusY="3" Opacity="0"/>

                        </Grid>
                        <Grid x:Name="grid" HorizontalAlignment="Center" VerticalAlignment="Center" Width="8" Height="8">
                            <Path x:Name="expand" Data="M3,0 L5,0 L5,3 L8,3 L8,5 L5,5 L5,8 L3,8 L3,5 L0,5 L0,3 L3,3 z" Fill="#ffffff" Stretch="Fill" UseLayoutRounding="False" HorizontalAlignment="Left" VerticalAlignment="Top" Visibility="Collapsed"/>
                            <Path x:Name="collapse" Data="M0,0 L8,0 L8,2 L0,2 z" Fill="#ffffff" Height="2" Stretch="Fill" UseLayoutRounding="False" />
                        </Grid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="NetworkNode:NetworkNodeNodeControl">
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="CornerRadius" Value="4" />
        <Setter Property="MinWidth" Value="24" />
        <Setter Property="MinHeight" Value="24" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="Padding" Value="6,0,6,0" />
        <Setter Property="BorderBrush" Value="{StaticResource NodeStroke}" />
        <Setter Property="Background" Value="{StaticResource NodeBgBrush}" />
        <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="NetworkNode:NetworkNodeNodeControl">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="over" d:IsOptimized="True"/>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="ExpanderButton" d:IsOptimized="True"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="0.3" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="NodePresenter" d:IsOptimized="True"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="ExpanderButton" d:IsOptimized="True"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="ReadOnly">
                                    <Storyboard>
                                        <ColorAnimation Duration="0" To="Silver" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" Storyboard.TargetName="overlay"/>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="overlay" Storyboard.TargetProperty="Background">
                                            <DiscreteObjectKeyFrame Value="{StaticResource NodeReadOnlyBrush}" KeyTime="0"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="focused" d:IsOptimized="True"/>
                                        <DoubleAnimation Duration="0" To="0.975" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="focusedStroke" d:IsOptimized="True"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="SelectedStates">
                                <VisualState x:Name="Unselected"></VisualState>
                                <VisualState x:Name="Selected">
                                    <Storyboard>
                                        <ColorAnimation Duration="0" To="White" Storyboard.TargetProperty="(Control.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="NodeContainer"/>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="selected" d:IsOptimized="True"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="EditStates">
                                <VisualState x:Name="NotEditing" />
                                <VisualState x:Name="Editing">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="editing" d:IsOptimized="True"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="NodeBackground" CornerRadius="{TemplateBinding CornerRadius}" Background="{TemplateBinding Background}" />
                        <Border x:Name="overlay" BorderBrush="{TemplateBinding BorderBrush}" CornerRadius="{TemplateBinding CornerRadius}"
						        Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" />
                        <Border x:Name="over" BorderBrush="{StaticResource NodeStrokeOver}" Background="{StaticResource NodeBgBrushOver}"
						        CornerRadius="{TemplateBinding CornerRadius}" Opacity="0"  BorderThickness="{TemplateBinding BorderThickness}"/>
                        <Border x:Name="focused" BorderBrush="{StaticResource NodeStrokeFocused}" Background="{StaticResource NodeBgFocus}"
                        	    CornerRadius="{TemplateBinding CornerRadius}" Opacity="0" BorderThickness="{TemplateBinding BorderThickness}"/>
                        <Border x:Name="selected" Background="{StaticResource NodeBgBrushSelected}" BorderBrush="{StaticResource NodeStrokeSelected}"
                                CornerRadius="{TemplateBinding CornerRadius}" Opacity="0" BorderThickness="{TemplateBinding BorderThickness}"/>
                        <Border x:Name="focusedStroke" BorderBrush="{StaticResource NodeStrokeFocused}"
                                CornerRadius="{TemplateBinding CornerRadius}" Opacity="0" BorderThickness="2"/>
                        <Border x:Name="editing" BorderBrush="{StaticResource NodeStrokeEditing}"
                                CornerRadius="{TemplateBinding CornerRadius}" Opacity="0" BorderThickness="{TemplateBinding BorderThickness}"/>
                        <ContentControl x:Name="NodeContainer" Margin="{TemplateBinding Padding}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                        		VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Foreground="{TemplateBinding Foreground}">
                            <ContentPresenter x:Name="NodePresenter" />
                        </ContentControl>
                        <ToggleButton x:Name="ExpanderButton" Margin="-7,-7,0,0" Width="14" Height="14" HorizontalAlignment="Left" VerticalAlignment="Top" Style="{StaticResource NodeToggleButton}" Opacity="0.5"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>