<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:ig="http://schemas.infragistics.com/xaml"
	xmlns:igPrim="http://schemas.infragistics.com/xaml/primitives"
	xmlns:igPivot="http://schemas.infragistics.com/xaml"
	xmlns:igPivotPrim="http://schemas.infragistics.com/xaml/primitives"
    >

    <!-- ======================== -->
    <!-- Shared Resources         -->
    <!-- ======================== -->
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/Infragistics.WPF.Controls.Grids.XamPivotGridGrouping;component/Themes/generic_shared.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <!--RowsFieldDropAreaControl-->
    <Style TargetType="igPivotPrim:RowGroupsFieldDropAreaControl"  BasedOn="{StaticResource FieldsDropAreaControlKey}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="igPivotPrim:RowGroupsFieldDropAreaControl">
                    <Border x:Name="panelContainer" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="disabledPanel" Storyboard.TargetProperty="(UIElement.Visibility)">
                                                <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Visible</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="DisplayStates">
                                <VisualState x:Name="Empty" >
                                    <Storyboard>
                                        <!--<DoubleAnimation Storyboard.TargetName="EmptyContentControl" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" From="0" To="0" Duration="00:00:00.40"></DoubleAnimation>-->
                                        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="EmptyContentControl" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="NonEmpty">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="EmptyContentControl" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid>
                            <Grid MinHeight="30">
                                <Rectangle x:Name="fill" Fill="{TemplateBinding Background}"/>
                                <ContentControl x:Name="EmptyContentControl" Content="{TemplateBinding EmptyContent}" Foreground="{TemplateBinding Foreground}"
																VerticalAlignment="Center" Margin="10,0"  RenderTransformOrigin="0.5 0.5">
                                    <ContentControl.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform/>
                                            <SkewTransform/>
                                            <RotateTransform/>
                                            <TranslateTransform/>
                                        </TransformGroup>
                                    </ContentControl.RenderTransform>
                                </ContentControl>
                                <Grid>

                                    <ItemsPresenter/>

                                </Grid>
                            </Grid>
                            <Grid x:Name="disabledPanel" Opacity="0.35" Visibility="Collapsed" Background="{StaticResource DarkGradientBrush}"/>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <!--<StackPanel Margin="5" x:Name="Panel" Orientation="Horizontal" Background="Transparent"
										HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
										igPivot:XamPivotGrid.PivotPartType="Rows">-->
                    <igPivotPrim:RowHeaderAlignPanel Margin="5" x:Name="panel" ig:XamPivotGrid.PivotPartType="Rows">
                        <ig:DragDropManager.DropTarget>
                            <ig:DropTarget IsDropTarget="True" DropTargetMarkerBrush="#FF6E7E8D" DropChannels="Rows, Columns, Filters, MeasureList"/>
                        </ig:DragDropManager.DropTarget>
                        <ig:ItemsSeparatorProvider.Separator>
                            <ig:PanelItemsSeparator SeparatorColor="#FF6E7E8D"/>
                        </ig:ItemsSeparatorProvider.Separator>
                    </igPivotPrim:RowHeaderAlignPanel>
                    <!--</StackPanel>-->
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- *********************************  PivotRowGroupByCellControl  ********************************* -->
    <Style TargetType="igPivot:PivotRowGroupByCellControl">
        <Setter Property="ExpansionIndicatorStyle" Value="{StaticResource HeaderCellControlExpansionIndicatorStyle}"/>
        <Setter Property="Background" Value="{StaticResource PivotRowGroupByCellControlBackground}"   />
        <Setter Property="BorderBrush" Value="{StaticResource PivotRowGroupByCellControlStroke}"   />
        <Setter Property="Foreground" Value="{StaticResource LightForegroundBrush}"/>
        <Setter Property="Padding" Value="8,4"/>
        <Setter Property="FontSize" Value="11" />
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="igPivot:PivotRowGroupByCellControl">
                    <Border>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal">
                                </VisualState>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard >
                                        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="fill" Storyboard.TargetProperty="Background">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{StaticResource PivotRowGroupByCellControlBgHover}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="optionsPane" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="AllowHeaderSorting">
                                <VisualState x:Name="EnabledHeaderSortIndicator">
                                    <Storyboard >
                                        <!--<DoubleAnimation Duration="0" To="13" Storyboard.TargetProperty="Width" Storyboard.TargetName="SortIndicatorColumn"/>-->
                                        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HeaderSortBtn" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="DisabledHeaderSortIndicator">
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="AllowRowHiding">
                                <VisualState x:Name="EnabledHidingIndicator">
                                    <Storyboard >
                                        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="columnHidingVisual" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="DisabledHidingIndicator">
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ExpantionIndicatorStates">
                                <VisualState x:Name="IndicatorCollapsed">
                                    <Storyboard >
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ExpansionIndicator" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="IndicatorVisible">
                                    <Storyboard >
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ExpansionIndicator" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="SummaryStates">
                                <VisualState x:Name="SummaryValue">
                                    <!--<Storyboard >
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="TotalText" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>-->
                                </VisualState>
                                <VisualState x:Name="SummaryTotal">
                                    <!--<Storyboard >
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="TotalText" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>-->
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid>
                            <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}"  x:Name="fill">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>
                                    <Rectangle Width="{TemplateBinding Indent}" Grid.Column="0"/>
                                    <ToggleButton Grid.Column="1" Margin="10,0,0,0" Name="ExpansionIndicator" Width="15" Height="15" VerticalAlignment="Center" Padding="0" Visibility="Collapsed"
										  IsChecked="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsExpanded, Mode=TwoWay}" Style="{TemplateBinding ExpansionIndicatorStyle}"/>
                                    <Grid x:Name="headerGrid" Grid.Column="2" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}">
                                        <igPrim:VerticalTextBlock Angle="0" Content="{TemplateBinding Content}" x:Name="HeaderPresenter"
                                                                       VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                                       HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}"
                                                                        />

                                        <Border x:Name="optionsPane" Background="{StaticResource HeaderHoverBackgroundBrush}" Margin="5,0,0,0" HorizontalAlignment="Right" Opacity="1" Visibility="Collapsed" >
                                            <Grid>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="Auto"/>
                                                    <ColumnDefinition Width="Auto"/>
                                                    <ColumnDefinition Width="Auto"/>
                                                </Grid.ColumnDefinitions>
                                                <ToggleButton x:Name="HeaderSortBtn" Grid.Column="0" Style="{StaticResource HeaderCellSortBtn}" IsThreeState="False" Margin="5" Visibility="Collapsed" >
                                                    <ig:Commanding.Command>
                                                        <ig:XamPivotGridCommandSource CommandType="SortAxisMember" EventName="Click"/>
                                                    </ig:Commanding.Command>
                                                </ToggleButton>
                                                <CheckBox x:Name="SortToggle" Grid.Column="2" Style="{StaticResource FilterCellSortBtn}" IsThreeState="True" Margin="5" Visibility="Collapsed" >
                                                    <ig:Commanding.Command>
                                                        <ig:PivotColumnCommandSource CommandType="SortToggle" EventName="Click"/>
                                                    </ig:Commanding.Command>
                                                </CheckBox>
                                                <Grid x:Name="columnHidingVisual" Background="{StaticResource TransparentBrush}" Width="20" Grid.Column="1" Cursor="Hand" Margin="0,5" Visibility="Collapsed">
                                                    <Path Data="M9.8222179,1.1322494E-06 L12.663995,1.1322494E-06 L8.6729612,5.0000014 L12.663995,10.000002 L9.8222179,10.000002 L5.8309941,4.9573879 z M3.9912238,0 L6.8330007,0 L2.8419673,5 L6.8330007,10 L3.9912238,10 L0,4.9573865 z" Fill="{StaticResource HeaderCellGlyphBrush}" VerticalAlignment="Center" Height="8" UseLayoutRounding="False" Width="12" HorizontalAlignment="Center" Stretch="Fill"/>
                                                    <ig:Commanding.Command>
                                                        <ig:XamPivotGridCommandSource CommandType="HideAxis" EventName="MouseLeftButtonDown"/>
                                                    </ig:Commanding.Command>
                                                </Grid>
                                            </Grid>
                                        </Border>
                                    </Grid>
                                </Grid>
                            </Border>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- *********************************  PivotColumnGroupByCellControl  ********************************* -->
    <Style TargetType="igPivot:PivotColumnGroupByCellControl">
        <Setter Property="ExpansionIndicatorStyle" Value="{StaticResource HeaderCellControlExpansionIndicatorStyle}"/>
        <Setter Property="Background" Value="{StaticResource PivotColumnGroupByCellControlBackground}"   />
        <Setter Property="BorderBrush" Value="{StaticResource PivotRowGroupByCellControlStroke}"   />
        <Setter Property="Foreground" Value="{StaticResource LightForegroundBrush}"/>
        <Setter Property="FontSize" Value="11" />
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Top"/>
        <Setter Property="Padding" Value="4,8"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="igPivot:PivotColumnGroupByCellControl">
                    <Border BorderBrush="{TemplateBinding BorderBrush}">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal">
                                </VisualState>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard >
                                        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="fill" Storyboard.TargetProperty="Background">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{StaticResource HeaderHoverBackgroundBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="optionsPane" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="SortedStates">
                                <VisualState x:Name="NotSorted">
                                </VisualState>
                                <VisualState x:Name="Ascending">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="SortedAscending" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Descending">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="SortedDescending" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ExpantionIndicatorStates">
                                <VisualState x:Name="IndicatorCollapsed">
                                    <Storyboard >
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ExpansionIndicator" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="IndicatorVisible">
                                    <Storyboard >
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ExpansionIndicator" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="SummaryStates">
                                <VisualState x:Name="SummaryValue">
                                    <!--<Storyboard >
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="TotalText" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>-->
                                </VisualState>
                                <VisualState x:Name="SummaryTotal">
                                    <!--<Storyboard >
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="TotalText" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HeaderPresenterColumn" Storyboard.TargetProperty="Width">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00" >
                                                <DiscreteObjectKeyFrame.Value>
                                                    <GridLength>Auto</GridLength>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>-->
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="AllowHeaderSorting">
                                <VisualState x:Name="EnabledHeaderSortIndicator">
                                    <Storyboard >
                                        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HeaderSortBtn" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="DisabledHeaderSortIndicator">
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="AllowColumnHiding">
                                <VisualState x:Name="EnabledHidingIndicator">
                                    <Storyboard >
                                        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="columnHidingVisual" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00" >
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="DisabledHidingIndicator">
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="AllowColumnSorting">
                                <VisualState x:Name="EnabledSortingIndicator">
                                    <Storyboard >
                                        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="SortToggle" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="DisabledSortingIndicator">
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="SelectedStates">
                                <VisualState x:Name="NotSelected" />
                                <VisualState x:Name="Selected">
                                    <!--<Storyboard >
                                        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="SelectedRect" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>-->
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid>
                            <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" x:Name="fill">
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="22"/>
                                        <RowDefinition Height="*"/>
                                    </Grid.RowDefinitions>
                                    <Rectangle Height="{TemplateBinding Indent}" Grid.Row="0"/>
                                    <ToggleButton Grid.Row="1" Margin="0,10,0,0" Name="ExpansionIndicator" Width="15" Height="15" VerticalAlignment="Center" Padding="0" Visibility="Collapsed"
										  IsChecked="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsExpanded, Mode=TwoWay}" Style="{TemplateBinding ExpansionIndicatorStyle}"/>
                                    <Grid x:Name="headerGrid" Grid.Row="2">
                                        <Border BorderBrush="Red" Background="Blue" Margin="10" Padding="2">
                                            <igPrim:VerticalTextBlock Angle="-90" Content="{TemplateBinding Content}" x:Name="HeaderPresenter"
                                                                       VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                                       HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}"
                                                                       />
                                        </Border>

                                        <Grid Margin="0,0,5,0">
                                            <Path IsHitTestVisible="False"
													x:Name="SortedDescending"
													HorizontalAlignment="Center"
													VerticalAlignment="Center"
													Data="M 0 0 L 4 4 L 8 0 Z"
													Fill="{StaticResource HeaderCellGlyphBrush}"
													Visibility="Collapsed" />
                                            <Path IsHitTestVisible="False"
													x:Name="SortedAscending"
													HorizontalAlignment="Center"
													VerticalAlignment="Center"
													Data="M0,4 L8,4 L4,0 z"
													Fill="{StaticResource HeaderCellGlyphBrush}"
													Visibility="Collapsed"/>
                                        </Grid>
                                        <Border x:Name="optionsPane" Background="{StaticResource HeaderHoverBackgroundBrush}" Opacity="1" VerticalAlignment="Bottom" Visibility="Collapsed">
                                            <Grid HorizontalAlignment="Center">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="Auto"/>
                                                    <ColumnDefinition Width="Auto"/>
                                                    <ColumnDefinition Width="Auto"/>
                                                </Grid.ColumnDefinitions>
                                                <ToggleButton x:Name="HeaderSortBtn" Grid.Column="0" Style="{StaticResource HeaderCellSortBtn}" IsThreeState="False" Margin="5" Visibility="Collapsed" >
                                                    <ig:Commanding.Command>
                                                        <ig:XamPivotGridCommandSource CommandType="SortAxisMember" EventName="Click"/>
                                                    </ig:Commanding.Command>
                                                </ToggleButton>
                                                <CheckBox x:Name="SortToggle" Grid.Column="2" Style="{StaticResource FilterCellSortBtn}" IsThreeState="True" Margin="5" Visibility="Collapsed" >
                                                    <ig:Commanding.Command>
                                                        <ig:PivotColumnCommandSource CommandType="SortToggle" EventName="Click"/>
                                                    </ig:Commanding.Command>
                                                </CheckBox>
                                                <Grid x:Name="columnHidingVisual" Background="{StaticResource TransparentBrush}" Width="20" Grid.Column="1" Cursor="Hand" Margin="0,5" Visibility="Collapsed">
                                                    <Path Data="M9.8222179,1.1322494E-06 L12.663995,1.1322494E-06 L8.6729612,5.0000014 L12.663995,10.000002 L9.8222179,10.000002 L5.8309941,4.9573879 z M3.9912238,0 L6.8330007,0 L2.8419673,5 L6.8330007,10 L3.9912238,10 L0,4.9573865 z" Fill="{StaticResource HeaderCellGlyphBrush}" VerticalAlignment="Center" Height="8" UseLayoutRounding="False" Width="12" HorizontalAlignment="Center" Stretch="Fill"/>
                                                    <ig:Commanding.Command>
                                                        <igPivot:XamPivotGridGroupingCommandSource CommandType="HideAxis" EventName="MouseLeftButtonDown"/>
                                                    </ig:Commanding.Command>
                                                </Grid>
                                            </Grid>
                                        </Border>
                                    </Grid>
                                </Grid>
                            </Border>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- FieldsDropAreaControl -->
    <Style TargetType="igPivotPrim:FieldsDropAreaControlEx">
        <Setter Property="Background" Value="{StaticResource LightGradientBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource HeaderNormalBorderBrush}"/>
        <Setter Property="BorderThickness" Value="0,0,1,1" />
        <Setter Property="Foreground" Value="#FF000000"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="igPivotPrim:FieldsDropAreaControlEx">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="disabledPanel" Storyboard.TargetProperty="(UIElement.Visibility)">
                                                <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Visible</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>

                        <ScrollViewer x:Name="scrollViewer"
									  VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto">
                            <ItemsPresenter/>
                        </ScrollViewer>
                        <Grid x:Name="disabledPanel" Opacity="0.25" Visibility="Collapsed" Background="{StaticResource DarkGradientBrush}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- FilterFieldItemControl -->
    <Style TargetType="igPivotPrim:FilterFieldItemControlEx">
        <Setter Property="FontSize" Value="11" />
        <Setter Property="Background" Value="{StaticResource FieldItemBackground}"/>
        <Setter Property="Foreground" Value="#FFFFFFFF"/>
        <Setter Property="BorderBrush" Value="{StaticResource UpdateButtonStroke}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="3,3"/>
        <Setter Property="Margin" Value="3,0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="igPivotPrim:FilterFieldItemControlEx">
                    <Grid x:Name="Root">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="closeButton" Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <EasingDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="closeButton" Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <EasingDoubleKeyFrame KeyTime="00:00:00.3000000" Value="1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="2">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>

                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>

                                <Grid>
                                    <ToggleButton x:Name="DropDownToggle" Style="{StaticResource FilterDropdownToggle}"
														Cursor="Hand"
														IsChecked="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsExpanded, Mode=TwoWay}"
                                                        HorizontalAlignment="Stretch" Margin="0" BorderBrush="{TemplateBinding BorderBrush}"
                                                        VerticalContentAlignment="Stretch"
                                                        BorderThickness="{TemplateBinding BorderThickness}" HorizontalContentAlignment="Center">
                                        <Grid>
                                            <Path
											x:Name="clearFilterGlyphStroke"
											Width="11"
											Height="8"
											HorizontalAlignment="Center"
											VerticalAlignment="Center"
											Data="M 0,0 C0,0 11,0 11,0 11,0 7,4 7,4 7,4 7,8 7,8 7,8 4,8 4,8 4,8 4,4 4,4 4,4 0,0 0,0 z"
											Fill="{StaticResource HeaderCellGlyphBrush}"
											Stretch="Fill"/>
                                            <Path
											x:Name="clearFilterGlyphFill"
											Width="7"
											Height="6"
											HorizontalAlignment="Center"
											VerticalAlignment="Center"
											Data="M 0,0 C0,0 7,0 7,0 7,0 4,3 4,3 4,3 4,6 4,6 4,6 3,6 3,6 3,6 3,3 3,3 3,3 0,0 0,0 z"
											Fill="#FFFFFFFF"
											Stretch="Fill"/>
                                        </Grid>
                                    </ToggleButton>
                                </Grid>

                                <Border Grid.Column="1" BorderBrush="DarkGray" BorderThickness="0" Background="Transparent"
											HorizontalAlignment="Stretch">
                                    <ig:DragDropManager.DragSource>
                                        <ig:DragSource IsDraggable="True"
														DataObject="{Binding}">
                                            <ig:XamTriggers.EventTriggers>
                                                <!--<ig:XamEventTrigger EventName="Drop">
                                                    <ig:DropTriggerAction IsEnabled="True"/>
                                                </ig:XamEventTrigger>-->
                                                <ig:XamEventTrigger EventName="DragStart">
                                                    <ig:DragStartTriggerAction IsEnabled="True"/>
                                                </ig:XamEventTrigger>
                                            </ig:XamTriggers.EventTriggers>
                                        </ig:DragSource>
                                    </ig:DragDropManager.DragSource>

                                    <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />

                                </Border>

                                <Button x:Name="closeButton" Grid.Column="2" Style="{StaticResource FilterCellRemoveBtn}"
										Width="12" Height="13"
										Opacity="0" VerticalAlignment="Center" HorizontalAlignment="Right" Margin="5 0">
                                    <Path Width="4" Height="4"  Fill="#FFFFFFFF" Data="M 0,0 C0,0 0,1 0,1 0,1 1,1 1,1 1,1 1,3 1,3 1,3 0,3 0,3 0,3 0,4 0,4 0,4 1,4 1,4 1,4 1,3 1,3 1,3 3,3 3,3 3,3 3,4 3,4 3,4 4,4 4,4 4,4 4,3 4,3 4,3 3,3 3,3 3,3 3,1 3,1 3,1 4,1 4,1 4,1 4,0 4,0 4,0 3,0 3,0 3,0 3,1 3,1 3,1 1,1 1,1 1,1 1,0 1,0 1,0 0,0 0,0 z"/>
                                    <ig:Commanding.Command>
                                        <igPivot:XamPivotGridGroupingCommandSource EventName="Click" CommandType="RemoveFilterCell"/>
                                    </ig:Commanding.Command>
                                </Button>

                                <Popup x:Name="Popup" Grid.Row="1" IsOpen="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsExpanded, Mode=TwoWay}"
                                       igPrim:XamlHelper.StaysOpen="False" igPrim:XamlHelper.AllowsTransparency="True">
                                    <Grid x:Name="OriginalPopupChild" Width="Auto">
                                        <Border x:Name="PopupBorder"
                                            Background="{StaticResource PopupBackgroundBrush}"
                                            BorderBrush="{StaticResource GridBorderBrush}"
                                            VerticalAlignment="Top"
                                            BorderThickness="{TemplateBinding BorderThickness}"
                                            CornerRadius="3"
                                            ig:TemplatedParentHelper.TemplatedParent="{Binding RelativeSource={RelativeSource TemplatedParent}}">
                                            <Border.Effect>
                                                <DropShadowEffect Direction="270" Opacity="0.25" ShadowDepth="3"/>
                                            </Border.Effect>
                                            <Grid>
                                                <Grid.RowDefinitions>
                                                    <RowDefinition Height="*"/>
                                                    <RowDefinition Height="Auto"/>
                                                </Grid.RowDefinitions>

                                                <!--<ScrollViewer HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Visible">-->
                                                <ContentPresenter ContentTemplate="{TemplateBinding ExpansionAreaContentTemplate}"/>
                                                <!--</ScrollViewer>-->

                                                <Border VerticalAlignment="Top" CornerRadius="0,0,2,2" Grid.Row="1">
                                                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" >
                                                        <Button Content="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=StringSource.FilterTreeOkButtonText}"  x:Name="OKButton" Margin="5" Width="70" Cursor="Hand" Style="{StaticResource ButtonStyle}">
                                                            <ig:Commanding.Command>
                                                                <ig:XamPivotGridCommandSource EventName="Click" CommandType="RefreshGrid"/>
                                                            </ig:Commanding.Command>
                                                        </Button>
                                                        <Button Content="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=StringSource.FilterTreeCancelButtonText}"
											                     x:Name="CancelButton" Margin="5" Width="70" Cursor="Hand" Style="{StaticResource ButtonStyle}">
                                                            <ig:XamTriggers.EventTriggers>
                                                                <ig:XamEventTrigger EventName="Click">
                                                                    <ig:ExpandableFieldItemEventTrigger IsEnabled="True"/>
                                                                </ig:XamEventTrigger>
                                                            </ig:XamTriggers.EventTriggers>
                                                        </Button>
                                                    </StackPanel>
                                                </Border>
                                            </Grid>
                                        </Border>
                                    </Grid>
                                </Popup>
                            </Grid>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Setter Property="ExpansionAreaContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>

                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>

                        <Grid Grid.ColumnSpan="2"
                          Background="{StaticResource LightGradientBrush}"
                          Opacity="0.5"/>

                        <CheckBox IsThreeState="False" Margin="7"
                                      HorizontalAlignment="Left"
                                      VerticalAlignment="Center"
                                      VerticalContentAlignment="Center"
                            Content="Select All" IsChecked="{Binding IsAllSelected, Mode=TwoWay}"/>

                        <!-- Has pending changes star indicator -->
                        <TextBlock Text="*" Grid.Column="1" Foreground="Black" Margin="0 0 5 0" HorizontalAlignment="Right" VerticalAlignment="Center"
                            Visibility="{Binding HasPendingChanges, Converter={StaticResource boolToVisibilityConverter}}"/>

                        <ig:XamDataTree Grid.Row="1" Grid.ColumnSpan="2" Background="Transparent"
                                            ItemsSource="{Binding Path=FilterMembers}" DisplayMemberPath="Caption"
                                            NodeStyle="{StaticResource TreeNodeStyle}"
                                                ScrollViewer.VerticalScrollBarVisibility="Visible"
                                                EnsureNodeExpansion="True"
                                                IsExpandedMemberPath="IsExpanded"
                                                CheckBoxMemberPath="IsSelected"
                                                x:Name="FilterTree">
                            <ig:XamDataTree.CheckBoxSettings>
                                <ig:CheckBoxSettings CheckBoxVisibility="Visible" CheckBoxMode="Manual" IsCheckBoxThreeState="False" />
                            </ig:XamDataTree.CheckBoxSettings>

                            <ig:XamDataTree.GlobalNodeLayouts>
                                <ig:NodeLayout x:Name="NL"
                                                IsExpandedMemberPath="IsExpanded"
                                                CheckBoxMemberPath="IsSelected"
                                                Key="FilterMembers"
                                                DisplayMemberPath="Caption"
                                                TargetTypeName="FilterMember"
                                                >
                                </ig:NodeLayout>
                            </ig:XamDataTree.GlobalNodeLayouts>

                        </ig:XamDataTree>

                    </Grid>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- XamPivotDataSelector -->
    <Style TargetType="igPivot:XamDataSelectorGrouping">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="igPivot:XamDataSelectorGrouping">
                    <Grid x:Name="LayoutRoot" ig:XamPivotGrid.PivotPartType="DeleteArea"
						  Background="{TemplateBinding Background}"
						  ig:TemplatedParentHelper.TemplatedParent="{Binding RelativeSource={RelativeSource TemplatedParent}}">

                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="DataSourceTypeVisualParts">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="FlatDataSource">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="DropDownsPanel" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>

                        <ig:DragDropManager.DropTarget>
                            <ig:DropTarget IsDropTarget="True" DropChannels="Measures, Rows, Columns, Filters, MeasureList"/>
                        </ig:DragDropManager.DropTarget>
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="310"/>
                            </Grid.RowDefinitions>
                            <Border x:Name="OuterShdw" BorderBrush="#0C000000" BorderThickness="0,0,0,1" CornerRadius="7">
                                <Border x:Name="MiddleShdw" BorderBrush="#19000000" BorderThickness="1,0,1,1" CornerRadius="6">
                                    <Border x:Name="InsideShdw" BorderBrush="#3F000000" BorderThickness="1" CornerRadius="5">
                                        <Border x:Name="Bd" CornerRadius="4" Background="{StaticResource LightGradientBrush}" Padding="5">
                                            <Grid>
                                                <Grid.RowDefinitions>
                                                    <RowDefinition Height="Auto"/>
                                                    <RowDefinition Height="*" MinHeight="100"/>
                                                </Grid.RowDefinitions>

                                                <Grid Grid.Row="0" x:Name="DropDownsPanel">
                                                    <Grid.RowDefinitions>
                                                        <RowDefinition Height="Auto"/>
                                                        <RowDefinition Height="Auto"/>
                                                        <RowDefinition Height="Auto"/>
                                                    </Grid.RowDefinitions>

                                                    <!--Databases drop-down-->
                                                    <Grid Grid.Row="0">
                                                        <ig:Dropdown x:Name="DatabasesDropDown" EmptyString="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=StringSetting.DatabasesDropDownInitialText}"
															  ItemsSource="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=DataSource.Databases}"
															  SelectedItem="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=DataSource.Database, Mode=TwoWay}">
                                                            <ComboBox.ItemTemplate>
                                                                <DataTemplate>
                                                                    <TextBlock Text="{Binding Path=Name}" />
                                                                </DataTemplate>
                                                            </ComboBox.ItemTemplate>
                                                        </ig:Dropdown>
                                                        <Border x:Name="DatabaseSeparator" Background="{StaticResource CubeDropdownSeparatorDarkBrush}" BorderBrush="{StaticResource CubeDropdownSeparatorLightBrush}" BorderThickness="0,0,0,1" Height="2" VerticalAlignment="Bottom"/>
                                                    </Grid>

                                                    <!--Cubes drop-down-->
                                                    <Grid Grid.Row="1">
                                                        <ig:Dropdown x:Name="CubesDropDown" EmptyString="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=StringSetting.CubesDropDownInitialText}"
															  ItemsSource="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=DataSource.Cubes}"
															  SelectedItem="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=DataSource.Cube, Mode=TwoWay}">
                                                            <ComboBox.ItemTemplate>
                                                                <DataTemplate>
                                                                    <TextBlock Text="{Binding Path=Caption}" />
                                                                </DataTemplate>
                                                            </ComboBox.ItemTemplate>
                                                        </ig:Dropdown>
                                                        <Border x:Name="Separator" Background="{StaticResource CubeDropdownSeparatorDarkBrush}" BorderBrush="{StaticResource CubeDropdownSeparatorLightBrush}" BorderThickness="0,0,0,1" Height="2" VerticalAlignment="Bottom"/>
                                                    </Grid>

                                                    <!--Measure groups drop-down-->
                                                    <Grid Grid.Row="2">
                                                        <ig:Dropdown x:Name="MeasureGroupsDropDown"  EmptyString="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=StringSetting.MeasureGroupsDropDownInitialText}"
															  ItemsSource="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=DataSource.MeasureGroups}"
															  SelectedItem="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=DataSource.MeasureGroup, Mode=TwoWay}">
                                                            <ComboBox.ItemTemplate>
                                                                <DataTemplate>
                                                                    <TextBlock Text="{Binding Path=Name}" />
                                                                </DataTemplate>
                                                            </ComboBox.ItemTemplate>
                                                        </ig:Dropdown>
                                                        <Border x:Name="MeasureGroupsSeparator" Background="{StaticResource CubeDropdownSeparatorDarkBrush}" BorderBrush="{StaticResource CubeDropdownSeparatorLightBrush}" BorderThickness="0,0,0,1" Height="2" VerticalAlignment="Bottom"/>
                                                    </Grid>
                                                </Grid>

                                                <!--Metadata Tree -->
                                                <Border x:Name="DimensionsTreeBd" Grid.Row="3" Padding="5" Margin="0,5">
                                                    <Grid>
                                                        <TextBlock Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=StringSetting.DimensionsAreaBackgroundText}" FontSize="12" VerticalAlignment="Center" HorizontalAlignment="Center" Opacity="0.15"/>

                                                        <ig:XamDataTree x:Name="DimensionsTree" ItemsSource="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=DataSource.Metadata}" >
                                                            <ig:XamDataTree.ItemTemplate>
                                                                <DataTemplate>
                                                                    <ig:XamHierarchicalItem HierarchicalItem="{Binding Path=Data}">
                                                                        <!--<ToolTipService.ToolTip>
                                                                            <ToolTip BorderBrush="Transparent" Margin="10 10" Background="Transparent" Content="{Binding Data.DataObject.UniqueName}">
                                                                                <ToolTip.ContentTemplate>
                                                                                    <DataTemplate>
                                                                                        <Border CornerRadius="2"
                                                                                                Background="{StaticResource LightGradientBrush}"
                                                                                                BorderThickness="1" BorderBrush="{StaticResource GridBorderBrush}" Margin="-10, -5">
                                                                                            <TextBlock Margin="2 0 2 0" Text="{Binding}"/>
                                                                                        </Border>
                                                                                    </DataTemplate>
                                                                                </ToolTip.ContentTemplate>
                                                                            </ToolTip>
                                                                        </ToolTipService.ToolTip>-->
                                                                    </ig:XamHierarchicalItem>
                                                                </DataTemplate>
                                                            </ig:XamDataTree.ItemTemplate>
                                                            <ig:XamTriggers.EventTriggers>
                                                                <ig:XamEventTrigger EventName="NodeDraggingStart">
                                                                    <ig:DragStartXamDataTreeTriggerAction IsEnabled="True"/>
                                                                </ig:XamEventTrigger>
                                                            </ig:XamTriggers.EventTriggers>

                                                            <ig:XamDataTree.GlobalNodeLayouts>
                                                                <ig:NodeLayout x:Name="NL"
                                                                    IsExpandedMemberPath="ExpandWhenInitialized"
                                                                    Key="Items"
                                                                    TargetTypeName="HierarchicalItem" IsDraggable="True">
                                                                </ig:NodeLayout>
                                                            </ig:XamDataTree.GlobalNodeLayouts>
                                                        </ig:XamDataTree>

                                                    </Grid>
                                                </Border>
                                            </Grid>
                                        </Border>
                                    </Border>
                                </Border>
                            </Border>
                            <!-- View Model Collections -->
                            <Border x:Name="ViewModelsOuterShdw" BorderBrush="#0C000000" BorderThickness="0,0,0,1" CornerRadius="7" Grid.Row="1" Margin="0,5,0,0" >
                                <Border x:Name="ViewModelsMiddleShdw" BorderBrush="#19000000" BorderThickness="1,0,1,1" CornerRadius="6">
                                    <Border x:Name="ViewModelsInsideShdw" BorderBrush="#3F000000" BorderThickness="1" CornerRadius="5">
                                        <Border x:Name="ViewModelsBd" CornerRadius="4" Background="{StaticResource LightGradientBrush}" Padding="5">
                                            <Grid>
                                                <Grid.RowDefinitions>
                                                    <RowDefinition Height="Auto"/>
                                                    <RowDefinition Height="*"/>
                                                    <RowDefinition Height="5"/>
                                                    <RowDefinition Height="*"/>
                                                    <RowDefinition Height="5"/>
                                                    <RowDefinition Height="Auto"/>
                                                    <RowDefinition Height="5"/>
                                                    <RowDefinition Height="*"/>
                                                </Grid.RowDefinitions>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="*"/>
                                                    <ColumnDefinition Width="4"/>
                                                    <ColumnDefinition Width="*"/>
                                                </Grid.ColumnDefinitions>

                                                <!-- Header Labels -->
                                                <TextBlock Grid.ColumnSpan="3" Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=StringSetting.PanelCollectionsAreaLabel}" Margin="0,0,0,5"/>

                                                <!-- Filters ListBox -->
                                                <Grid Grid.Row="1">
                                                    <Grid>
                                                        <Rectangle Fill="White" RadiusX="3" RadiusY="3"/>
                                                        <TextBlock Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=StringSetting.FiltersAreaBackgroundText}" FontSize="12" VerticalAlignment="Center" HorizontalAlignment="Center" Opacity="0.15"/>

                                                        <igPrim:FieldsDropAreaControl Grid.ColumnSpan="2" x:Name="FiltersDropArea" ig:XamPivotGrid.PivotPartType="Filters"
                                                                                                   IsEnabled="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=DataSource.Filters.IsEditable}"
                                                                                                   ItemsSource="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=DataSource.Filters, Mode=TwoWay}"
                                                                                                   ItemTemplate="{StaticResource FieldItemTemplateKey}">
                                                            <igPrim:FieldsDropAreaControl.ItemsPanel>
                                                                <ItemsPanelTemplate>
                                                                    <StackPanel Orientation="Vertical" Background="Transparent"
																							HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
																							ig:XamPivotGrid.PivotPartType="Filters">
                                                                        <ig:DragDropManager.DropTarget>
                                                                            <ig:DropTarget IsDropTarget="True" DropTargetMarkerBrush="#FF6E7E8D" DropChannels="Rows, Columns, Filters"/>
                                                                        </ig:DragDropManager.DropTarget>
                                                                        <ig:ItemsSeparatorProvider.Separator>
                                                                            <ig:PanelItemsSeparator SeparatorColor="#FF6E7E8D"/>
                                                                        </ig:ItemsSeparatorProvider.Separator>
                                                                    </StackPanel>
                                                                </ItemsPanelTemplate>
                                                            </igPrim:FieldsDropAreaControl.ItemsPanel>

                                                        </igPrim:FieldsDropAreaControl>
                                                    </Grid>
                                                </Grid>

                                                <!-- Columns ListBox -->
                                                <Grid Grid.Row="1" Grid.Column="2">
                                                    <Grid>
                                                        <Rectangle Fill="White" RadiusX="3" RadiusY="3"/>
                                                        <TextBlock Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=StringSetting.ColumnsAreaBackgroundText}" FontSize="12" VerticalAlignment="Center" HorizontalAlignment="Center" Opacity="0.15"/>
                                                        <igPrim:FieldsDropAreaControl Grid.ColumnSpan="2" x:Name="ColumnsDropArea" ig:XamPivotGrid.PivotPartType="Columns"
                                                                                                   IsEnabled="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=DataSource.Columns.IsEditable}"
                                                                                                   ItemsSource="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=DataSource.Columns, Mode=TwoWay}"
                                                                                                   ItemTemplate="{StaticResource FieldItemTemplateKey}">
                                                            <igPrim:FieldsDropAreaControl.ItemsPanel>
                                                                <ItemsPanelTemplate>
                                                                    <StackPanel Orientation="Vertical" Background="Transparent"
																							HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
																							ig:XamPivotGrid.PivotPartType="Columns">
                                                                        <ig:DragDropManager.DropTarget>
                                                                            <ig:DropTarget IsDropTarget="True" DropTargetMarkerBrush="#FF6E7E8D" DropChannels="Rows, Columns, Filters, MeasureList"/>
                                                                        </ig:DragDropManager.DropTarget>
                                                                        <ig:ItemsSeparatorProvider.Separator>
                                                                            <ig:PanelItemsSeparator SeparatorColor="#FF6E7E8D"/>
                                                                        </ig:ItemsSeparatorProvider.Separator>
                                                                    </StackPanel>
                                                                </ItemsPanelTemplate>
                                                            </igPrim:FieldsDropAreaControl.ItemsPanel>

                                                        </igPrim:FieldsDropAreaControl>
                                                    </Grid>
                                                </Grid>

                                                <!-- Rows ListBox -->
                                                <Grid Grid.Row="3">
                                                    <Grid>
                                                        <Rectangle Fill="White" RadiusX="3" RadiusY="3"/>
                                                        <TextBlock Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=StringSetting.RowsAreaBackgroundText}" FontSize="12" VerticalAlignment="Center" HorizontalAlignment="Center" Opacity="0.15"/>

                                                        <igPrim:FieldsDropAreaControl Grid.ColumnSpan="2" x:Name="RowsDropArea" ig:XamPivotGrid.PivotPartType="Rows"
                                                                                                   IsEnabled="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=DataSource.Rows.IsEditable}"
                                                                                                   ItemsSource="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=DataSource.Rows, Mode=TwoWay}"
                                                                                                   ItemTemplate="{StaticResource FieldItemTemplateKey}">
                                                            <igPrim:FieldsDropAreaControl.ItemsPanel>
                                                                <ItemsPanelTemplate>
                                                                    <StackPanel Orientation="Vertical" Background="Transparent"
																							HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
																							ig:XamPivotGrid.PivotPartType="Rows">
                                                                        <ig:DragDropManager.DropTarget>
                                                                            <ig:DropTarget IsDropTarget="True" DropTargetMarkerBrush="#FF6E7E8D" DropChannels="Rows, Columns, Filters, MeasureList"/>
                                                                        </ig:DragDropManager.DropTarget>
                                                                        <ig:ItemsSeparatorProvider.Separator>
                                                                            <ig:PanelItemsSeparator SeparatorColor="#FF6E7E8D"/>
                                                                        </ig:ItemsSeparatorProvider.Separator>
                                                                    </StackPanel>
                                                                </ItemsPanelTemplate>
                                                            </igPrim:FieldsDropAreaControl.ItemsPanel>

                                                        </igPrim:FieldsDropAreaControl>
                                                    </Grid>
                                                </Grid>

                                                <!-- Measures ListBox -->
                                                <Grid Grid.Row="3" Grid.Column="2">
                                                    <Grid>
                                                        <Rectangle Fill="White" RadiusX="3" RadiusY="3"/>
                                                        <TextBlock Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=StringSetting.MeasuresAreaBackgroundText}" FontSize="12" VerticalAlignment="Center" HorizontalAlignment="Center" Opacity="0.15"/>

                                                        <igPrim:FieldsDropAreaControl Grid.ColumnSpan="2" x:Name="MeasuresDropArea"
                                                                                                   IsEnabled="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=DataSource.Measures.IsEditable}"
                                                                                                   ItemsSource="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=DataSource.Measures, Mode=TwoWay}"
                                                                                                   ItemTemplate="{StaticResource FieldItemTemplateKey}">
                                                            <igPrim:FieldsDropAreaControl.ItemsPanel>
                                                                <ItemsPanelTemplate>
                                                                    <StackPanel Orientation="Vertical" Background="Transparent"
																							HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
																							ig:XamPivotGrid.PivotPartType="Measures">
                                                                        <ig:DragDropManager.DropTarget>
                                                                            <ig:DropTarget IsDropTarget="True" DropTargetMarkerBrush="#FF6E7E8D" DropChannels="Measures"/>
                                                                        </ig:DragDropManager.DropTarget>
                                                                        <ig:ItemsSeparatorProvider.Separator>
                                                                            <ig:PanelItemsSeparator SeparatorColor="#FF6E7E8D"/>
                                                                        </ig:ItemsSeparatorProvider.Separator>
                                                                    </StackPanel>
                                                                </ItemsPanelTemplate>
                                                            </igPrim:FieldsDropAreaControl.ItemsPanel>

                                                        </igPrim:FieldsDropAreaControl>
                                                    </Grid>
                                                </Grid>

                                                <!-- Layout Update Controlers -->
                                                <CheckBox x:Name="DeferredUpdateLayout" Grid.Row="5" VerticalAlignment="Center" HorizontalAlignment="Stretch" Content="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=StringSetting.DeferredUpdateLayoutCheckBoxLabel}"
																IsChecked="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=DataSource.DeferredLayoutUpdate, Mode=TwoWay}"/>

                                                <Button x:Name="UpdateLayoutButton" Grid.Row="5" Grid.Column="2" Content="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=StringSetting.UpdateLayoutButtonText}" VerticalContentAlignment="Center" HorizontalAlignment="Stretch" IsEnabled="{Binding ElementName=DeferredUpdateLayout, Path=IsChecked}" Style="{StaticResource ButtonStyle}">
                                                    <ig:Commanding.Command>
                                                        <ig:XamPivotGridCommandSource EventName="Click" CommandType="RefreshGridImmediately"/>
                                                    </ig:Commanding.Command>
                                                </Button>

                                                <!-- Rows Groups ListBox ig:XamPivotGrid.PivotPartType="RowsGroups"ig:XamPivotGrid.PivotPartType="RowsGroups"-->
                                                <Grid Grid.Row="7">
                                                    <Grid>
                                                        <Rectangle Fill="White" RadiusX="3" RadiusY="3"/>
                                                        <TextBlock Text="{Binding StringSetting.RowsGroupsAreaBackgroundText, RelativeSource={RelativeSource TemplatedParent}}" FontSize="12" VerticalAlignment="Center" HorizontalAlignment="Center" Opacity="0.15"/>

                                                        <igPivotPrim:FieldsDropAreaControlEx Grid.ColumnSpan="2" x:Name="RowsGroupsDropArea" 
                                                                                                   IsEnabled="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=DataSource.RowsGroups.IsEditable}"
                                                                                                   ItemsSource="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=DataSource.RowsGroups, Mode=TwoWay}"
                                                                                                   ItemTemplate="{StaticResource FieldItemTemplateKey}">
                                                            <igPrim:FieldsDropAreaControl.ItemsPanel>
                                                                <ItemsPanelTemplate>
                                                                    <StackPanel Orientation="Vertical" Background="Transparent"
																							HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
																							>
                                                                        <ig:DragDropManager.DropTarget>
                                                                            <ig:DropTarget IsDropTarget="True" DropTargetMarkerBrush="#FF6E7E8D" DropChannels="RowsGroups"/>
                                                                        </ig:DragDropManager.DropTarget>
                                                                        <ig:ItemsSeparatorProvider.Separator>
                                                                            <ig:PanelItemsSeparator SeparatorColor="#FF6E7E8D"/>
                                                                        </ig:ItemsSeparatorProvider.Separator>
                                                                    </StackPanel>
                                                                </ItemsPanelTemplate>
                                                            </igPrim:FieldsDropAreaControl.ItemsPanel>

                                                        </igPivotPrim:FieldsDropAreaControlEx>
                                                    </Grid>
                                                </Grid>
                                            </Grid>
                                        </Border>
                                    </Border>
                                </Border>
                            </Border>
                        </Grid>

                    </Grid>
                </ControlTemplate>

            </Setter.Value>
        </Setter>
    </Style>

    <!--XamPivotGrid-->
    <Style TargetType="igPivot:XamPivotGridGrouping">
        <Setter Property="FontSize" Value="11" />
        <Setter Property="EditorStyle" Value="{StaticResource EditorStyle}"/>
        <Setter Property="Background" Value="{StaticResource GridBackgroundBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource GridBorderBrush}"/>
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="Padding" Value="5"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="igPivot:XamPivotGridGrouping">
                    <Border x:Name="Bd" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid x:Name="LayoutRoot" ig:TemplatedParentHelper.TemplatedParent="{Binding RelativeSource={RelativeSource TemplatedParent}}" ig:XamPivotGrid.PivotPartType="DeleteArea" Background="Transparent">
                            <ig:DragDropManager.DropTarget>
                                <ig:DropTarget IsDropTarget="True" DropChannels="Measures, Rows, Columns, Filters, MeasureList"/>
                            </ig:DragDropManager.DropTarget>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="*"/>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" x:Name="LeftColumn"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <!--<igPrim:ColumnsFieldDropAreaControl Grid.Column="1" Grid.Row="1" x:Name="ColumnsDropArea" ItemsSource="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=DataSource.Columns, Mode=TwoWay}" ItemTemplate="{StaticResource FieldItemTemplateKey}" IsEnabled="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=DataSource.Columns.IsEditable}"/>-->
                                <igPrim:FiltersFieldDropAreaControl Grid.ColumnSpan="2" x:Name="FiltersDropArea" ItemsSource="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=DataSource.Filters, Mode=TwoWay}" ItemTemplate="{StaticResource FieldItemTemplateKey}" IsEnabled="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=DataSource.Filters.IsEditable}"/>
                                <!--<igPrim:MeasuresFieldDropAreaControl AllowResizing="Right" Grid.Row="1" x:Name="MeasuresDropArea" ItemsSource="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=DataSource.Measures, Mode=TwoWay}" ItemTemplate="{StaticResource FieldItemTemplateKey}" IsEnabled="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=DataSource.Measures.IsEditable}"/>-->
                            </Grid>
                            <Grid Grid.Row="1" Grid.ColumnSpan="1" x:Name="GridControlLayout">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <ig:PivotGridPanel x:Name="MainLayout" SharedSizeColumn="{Binding ElementName=LeftColumn}">
                                    <Border Background="{StaticResource HeaderNormalBackgroundBrush}"  BorderBrush="{StaticResource HeaderNormalBorderBrush}" BorderThickness="0,0,1,1" x:Name="FirstColumnSeparator"/>
                                    <ig:PivotDataRowsPanel x:Name="DataRowsPanel" Canvas.ZIndex="-2">
                                        <ig:DragDropManager.DropTarget>
                                            <ig:DropTarget DropTargetMarkerBrush="#FF6E7E8D" DropChannels="Measures"/>
                                        </ig:DragDropManager.DropTarget>
                                    </ig:PivotDataRowsPanel>

                                    <ig:PivotRowsPanel x:Name="RowsHeaderPanel" Canvas.ZIndex="-1">
                                        <ig:DragDropManager.DropTarget>
                                            <ig:DropTarget DropTargetMarkerBrush="#FF6E7E8D" DropChannels="Rows"/>
                                        </ig:DragDropManager.DropTarget>
                                    </ig:PivotRowsPanel>

                                    <ig:PivotRowDataAreaPanel x:Name="PivotRowsArea" Canvas.ZIndex="-1">
                                        <ig:DragDropManager.DropTarget>
                                            <ig:DropTarget DropTargetMarkerBrush="#FF6E7E8D" DropChannels="RowsGroups"/>
                                        </ig:DragDropManager.DropTarget>
                                    </ig:PivotRowDataAreaPanel>

                                    <ig:PivotColumnsPanel x:Name="ColumnsHeaderPanel" Canvas.ZIndex="-1">
                                        <ig:DragDropManager.DropTarget>
                                            <ig:DropTarget DropTargetMarkerBrush="#FF6E7E8D" DropChannels="Columns"/>
                                        </ig:DragDropManager.DropTarget>
                                    </ig:PivotColumnsPanel>

                                    <Grid ig:PivotGridPanel.IsTopLeftCornerControl ="True">
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="*"/>
                                            <RowDefinition Height="Auto"/>
                                        </Grid.RowDefinitions>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition/>
                                        </Grid.ColumnDefinitions>

                                        <igPrim:MeasuresFieldDropAreaControl AllowResizing="Right" Grid.ColumnSpan="2" x:Name="MeasuresDropArea" ItemsSource="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=DataSource.Measures, Mode=TwoWay}" ItemTemplate="{StaticResource FieldItemTemplateKey}" IsEnabled="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=DataSource.Measures.IsEditable}"/>
                                        <Grid x:Name="FieldChooserPanel" Grid.Row="1"/>
                                        <igPivotPrim:RowGroupsFieldDropAreaControl Grid.Column="1" Grid.Row="1" AllowResizing="Right" x:Name="RowsDropArea" ItemsSource="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=DataSource.Rows, Mode=TwoWay}" ItemTemplate="{StaticResource FieldItemTemplateKey}" IsEnabled="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=DataSource.Rows.IsEditable}"/>

                                    </Grid>
                                    <ig:HiddenAxisChooser x:Name="ColumnChooser" ItemTemplate="{StaticResource AxisChooserTemplateKey}"/>
                                    <ig:HiddenAxisChooser x:Name="RowChooser"  ItemTemplate="{StaticResource AxisChooserTemplateKey}" />
                                </ig:PivotGridPanel>
                                <ScrollBar x:Name="VerticalScrollBar" Width="20" Grid.Column="1"/>
                                <ScrollBar x:Name="HorizontalScrollBar"  Height="20" Grid.Row="1"/>
                            </Grid>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>
