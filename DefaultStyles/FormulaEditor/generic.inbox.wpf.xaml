<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

  <Style TargetType="{x:Type ComboBoxItem}">
		<Setter Property="SnapsToDevicePixels" Value="true"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ComboBoxItem}">
					<ControlTemplate.Resources>
						<Storyboard x:Key="Selected">
							<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="Border">
								<EasingColorKeyFrame KeyTime="0" Value="#FFBA3535"/>
							</ColorAnimationUsingKeyFrames>
						</Storyboard>
					</ControlTemplate.Resources>
					<Grid SnapsToDevicePixels="true">
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal"/>
								<VisualState x:Name="MouseOver">
									<Storyboard>
										<ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.BorderThickness)" Storyboard.TargetName="Border">
											<EasingThicknessKeyFrame KeyTime="0" Value="0"/>
										</ThicknessAnimationUsingKeyFrames>
										<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="Border">
											<EasingColorKeyFrame KeyTime="0" Value="#FFE5F2F6"/>
										</ColorAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Disabled"/>
							</VisualStateGroup>
							<VisualStateGroup x:Name="FocusStates">
								<VisualState x:Name="Unfocused"/>
								<VisualState x:Name="Focused"/>
							</VisualStateGroup>
							<VisualStateGroup x:Name="SelectionStates">
								<VisualState x:Name="Unselected"/>
								<VisualState x:Name="Selected">
									<Storyboard>
										<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="Border">
											<EasingColorKeyFrame KeyTime="0" Value="#FFC4E2EC"/>
										</ColorAnimationUsingKeyFrames>
										<ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.BorderThickness)" Storyboard.TargetName="Border">
											<EasingThicknessKeyFrame KeyTime="0" Value="1"/>
										</ThicknessAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="SelectedUnfocused"/>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<Border x:Name="Border" Background="#FFFEFEFE" BorderThickness="0" BorderBrush="#FF6DBDD1" CornerRadius="2"/>
						<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="5,2"/>
					</Grid>					
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	
	<!-- Resource dictionary entries should be defined here. -->
	<Style x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
		<Setter Property="OverridesDefaultStyle" Value="true"/>
		<Setter Property="IsTabStop" Value="false"/>
		<Setter Property="Focusable" Value="false"/>
		<Setter Property="ClickMode" Value="Press"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ToggleButton}">
					<Border x:Name="Chrome" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true" Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}">
						<Path x:Name="Arrow" Fill="Black" HorizontalAlignment="Center" Margin="0,1,0,0" VerticalAlignment="Center">
							<Path.Data>
								<!-- Resource dictionary entries should be defined here. -->
								<Geometry>M 0 0 L 3.5 4 L 7 0 Z</Geometry>
							</Path.Data>
						</Path>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsChecked" Value="true">
							
						</Trigger>
						<Trigger Property="IsEnabled" Value="false">
							<Setter Property="Fill" TargetName="Arrow" Value="#AFAFAF"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
		
		<Style x:Key="ComboBoxStyle" TargetType="{x:Type ComboBox}">
		<Setter Property="FocusVisualStyle">
			<Setter.Value>

				<Style>
					<Setter Property="Control.Template">
						<Setter.Value>
							<ControlTemplate>
								<Rectangle Margin="4,4,21,4" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
							</ControlTemplate>
						</Setter.Value>
					</Setter>
				</Style>
			</Setter.Value>
		</Setter>		
		<Setter Property="Background" Value="#FF1F3B53"/>
    	<Setter Property="BorderBrush">
    		<Setter.Value>
    			<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
    				<GradientStop Color="#FFA3AEB9" Offset="0"/>
    				<GradientStop Color="#FF8399A9" Offset="0.375"/>
    				<GradientStop Color="#FF718597" Offset="0.375"/>
    				<GradientStop Color="#FF617584" Offset="1"/>
    			</LinearGradientBrush>
    		</Setter.Value>
    	</Setter>																								
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="Height" Value="20"/>
		<Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
		<Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
		<Setter Property="Padding" Value="4,3"/>
		<Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
		<Setter Property="ScrollViewer.PanningMode" Value="Both"/>
		<Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ComboBox}">
					<Grid x:Name="MainGrid" SnapsToDevicePixels="true">
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="*"/>
							<ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0"/>
						</Grid.ColumnDefinitions>
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal"/>
								<VisualState x:Name="MouseOver"/>
								<VisualState x:Name="Disabled"/>
							</VisualStateGroup>
							<VisualStateGroup x:Name="FocusStates">
								<VisualState x:Name="Unfocused"/>
								<VisualState x:Name="Focused"/>
								<VisualState x:Name="FocusedDropDown"/>
							</VisualStateGroup>
							<VisualStateGroup x:Name="EditStates">
								<VisualState x:Name="Editable"/>
								<VisualState x:Name="Uneditable"/>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<Popup x:Name="PART_Popup" AllowsTransparency="true" Grid.ColumnSpan="2" IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}" Margin="1" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Placement="Bottom">
							<Border x:Name="Shdw" MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{Binding ActualWidth, ElementName=MainGrid}" CornerRadius="2">
								<Border x:Name="DropDownBorder" BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}" BorderThickness="1" Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" CornerRadius="2">
									<ScrollViewer x:Name="DropDownScrollViewer">
										<Grid RenderOptions.ClearTypeHint="Enabled">
											<Canvas HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
												<Rectangle x:Name="OpaqueRect" Height="{Binding ActualHeight, ElementName=DropDownBorder}" Width="{Binding ActualWidth, ElementName=DropDownBorder}"/>
											</Canvas>
											<ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Margin="1,2"/>
										</Grid>
									</ScrollViewer>
								</Border>
							</Border>
						</Popup>
						<ToggleButton BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding Property=BorderThickness}" Grid.ColumnSpan="2" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}">
							<ToggleButton.Style>
								<Style TargetType="{x:Type ToggleButton}">
									<Setter Property="OverridesDefaultStyle" Value="true"/>
									<Setter Property="IsTabStop" Value="false"/>
									<Setter Property="Focusable" Value="false"/>
									<Setter Property="ClickMode" Value="Press"/>
									<Setter Property="Template">
										<Setter.Value>
											<ControlTemplate TargetType="{x:Type ToggleButton}">
												<Grid HorizontalAlignment="Stretch" Width="Auto">
													<VisualStateManager.VisualStateGroups>
														<VisualStateGroup x:Name="CommonStates">
															<VisualState x:Name="Normal"/>
															<VisualState x:Name="MouseOver">
																<Storyboard>
																	<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="BackgroundOverlay">
																		<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
																	</DoubleAnimationUsingKeyFrames>
																</Storyboard>
															</VisualState>
															<VisualState x:Name="Pressed">
																<Storyboard>
																	<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="BackgroundOverlay2">
																		<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
																	</DoubleAnimationUsingKeyFrames>
																	<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Highlight">
																		<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
																	</DoubleAnimationUsingKeyFrames>
																	<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[3].(GradientStop.Color)" Storyboard.TargetName="BackgroundGradient">
																		<EasingColorKeyFrame KeyTime="0" Value="#6BFFFFFF"/>
																	</ColorAnimationUsingKeyFrames>
																</Storyboard>
															</VisualState>
															<VisualState x:Name="Disabled"/>
														</VisualStateGroup>
														<VisualStateGroup x:Name="FocusStates">
															<VisualState x:Name="Unfocused"/>
															<VisualState x:Name="Focused">
																<Storyboard>
																	<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Highlight">
																		<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
																	</DoubleAnimationUsingKeyFrames>
																	<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="BackgroundOverlay2">
																		<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
																	</DoubleAnimationUsingKeyFrames>
																	<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[3].(GradientStop.Color)" Storyboard.TargetName="BackgroundGradient">
																		<EasingColorKeyFrame KeyTime="0" Value="#6BFFFFFF"/>
																	</ColorAnimationUsingKeyFrames>
																</Storyboard>
															</VisualState>
														</VisualStateGroup>
														<VisualStateGroup x:Name="CheckStates">
															<VisualState x:Name="Checked">
																<Storyboard>
																	<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="BackgroundOverlay2">
																		<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
																	</DoubleAnimationUsingKeyFrames>
																	<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[3].(GradientStop.Color)" Storyboard.TargetName="BackgroundGradient">
																		<EasingColorKeyFrame KeyTime="0" Value="#6BFFFFFF"/>
																	</ColorAnimationUsingKeyFrames>
																	<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Highlight">
																		<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
																	</DoubleAnimationUsingKeyFrames>
																</Storyboard>
															</VisualState>
															<VisualState x:Name="Unchecked"/>
															<VisualState x:Name="Indeterminate"/>
														</VisualStateGroup>
														<VisualStateGroup x:Name="ValidationStates">
															<VisualState x:Name="Valid"/>
															<VisualState x:Name="InvalidFocused"/>
															<VisualState x:Name="InvalidUnfocused"/>
														</VisualStateGroup>
													</VisualStateManager.VisualStateGroups>
						
													<Border x:Name="Background" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="0,2,2,0" Margin="0"/>
													<Border x:Name="BackgroundOverlay" Background="#FF448DCA" BorderBrush="#FF448DCA" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="0,2,2,0" Opacity="0"/>
													<Border x:Name="BackgroundOverlay2" Background="#FF448DCA" BorderBrush="#00000000" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="0,2,2,0" Opacity="0"/>
													<Border x:Name="BackgroundGradient" BorderBrush="#FFFFFFFF" BorderThickness="1" CornerRadius="0,1,1,0" Margin="{TemplateBinding BorderThickness}">
														<Border.Background>
															<LinearGradientBrush EndPoint=".7,1" StartPoint=".7,0">
																<GradientStop Color="#FFFFFFFF" Offset="0"/>
																<GradientStop Color="#F9FFFFFF" Offset="0.375"/>
																<GradientStop Color="#E5FFFFFF" Offset="0.625"/>
																<GradientStop Color="#C6FFFFFF" Offset="1"/>
															</LinearGradientBrush>
														</Border.Background>
													</Border>
													<Border x:Name="BackgroundOverlay3" Background="#FF448DCA" BorderBrush="#00000000" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="0,2,2,0" Opacity="0"/>
													<Border x:Name="BackgroundGradient2" BorderBrush="#FFFFFFFF" BorderThickness="1" CornerRadius="0,1,1,0" Margin="{TemplateBinding BorderThickness}" Opacity="0">
														<Border.Background>
															<LinearGradientBrush EndPoint=".7,1" StartPoint=".7,0">
																<GradientStop Color="#FFFFFFFF" Offset="0"/>
																<GradientStop Color="#F9FFFFFF" Offset="0.375"/>
																<GradientStop Color="#E5FFFFFF" Offset="0.625"/>
																<GradientStop Color="#C6FFFFFF" Offset="1"/>
															</LinearGradientBrush>
														</Border.Background>
													</Border>
													<Border x:Name="Highlight" BorderBrush="#FF6DBDD1" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="0,1,1,0" Margin="{TemplateBinding BorderThickness}" IsHitTestVisible="false" Opacity="0"/>
													<Border x:Name="FocusVisualElement" BorderBrush="#FF6DBDD1" BorderThickness="1" CornerRadius="1" Margin="1" IsHitTestVisible="false" Visibility="Collapsed"/>
													<Grid Width="17" HorizontalAlignment="Right">
														<Border HorizontalAlignment="Stretch" Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}">
															<Grid Height="Auto" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="0">
																<Path x:Name="Arrow" Fill="Black" HorizontalAlignment="Center" Margin="0" VerticalAlignment="Center">
																	<Path.Data>
																		<!-- Resource dictionary entries should be defined here. -->
																		<Geometry>M 0 0 L 3.5 4 L 7 0 Z</Geometry>
																	</Path.Data>
																</Path>
															</Grid>
														</Border>
													</Grid>
												</Grid>
											</ControlTemplate>
										</Setter.Value>
									</Setter>
								</Style>
							</ToggleButton.Style>
						</ToggleButton>
						<ContentPresenter ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" Content="{TemplateBinding SelectionBoxItem}" ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" IsHitTestVisible="false" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Bottom" Margin="5,0,5,3"/>
					</Grid>
					
				</ControlTemplate>
			</Setter.Value>
		</Setter>		
		<Style.Triggers>
			<Trigger Property="IsEditable" Value="true">
				<Setter Property="BorderBrush">
					<Setter.Value>
						<LinearGradientBrush EndPoint="0,20" MappingMode="Absolute" StartPoint="0,0">
							<GradientStop Color="#ABADB3" Offset="0.05"/>
							<GradientStop Color="#E2E3EA" Offset="0.07"/>
							<GradientStop Color="#E3E9EF" Offset="1"/>
						</LinearGradientBrush>
					</Setter.Value>
				</Setter>
				<Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
				<Setter Property="IsTabStop" Value="false"/>
				<Setter Property="Padding" Value="3"/>
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="{x:Type ComboBox}">
							<Grid x:Name="Placement" SnapsToDevicePixels="true">
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="*"/>
									<ColumnDefinition Width="Auto"/>
								</Grid.ColumnDefinitions>
								<Popup x:Name="PART_Popup" AllowsTransparency="true" Grid.ColumnSpan="2" IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Placement="Bottom">
									<Border x:Name="Shdw" MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{Binding ActualWidth, ElementName=Placement}">
										<Border x:Name="DropDownBorder" BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}" BorderThickness="1" Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}">
											<ScrollViewer x:Name="DropDownScrollViewer">
												<Grid RenderOptions.ClearTypeHint="Enabled">
													<Canvas HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
														<Rectangle x:Name="OpaqueRect" Fill="{Binding Background, ElementName=DropDownBorder}" Height="{Binding ActualHeight, ElementName=DropDownBorder}" Width="{Binding ActualWidth, ElementName=DropDownBorder}"/>
													</Canvas>
													<ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
												</Grid>
											</ScrollViewer>
										</Border>
									</Border>
								</Popup>
								<Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.ColumnSpan="2"/>
								<TextBox x:Name="PART_EditableTextBox" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" IsReadOnly="{Binding IsReadOnly, RelativeSource={RelativeSource TemplatedParent}}" Margin="{TemplateBinding Padding}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}">
									<TextBox.Style>
										<Style TargetType="{x:Type TextBox}">
											<Setter Property="OverridesDefaultStyle" Value="true"/>
											<Setter Property="AllowDrop" Value="true"/>
											<Setter Property="MinWidth" Value="0"/>
											<Setter Property="MinHeight" Value="0"/>
											<Setter Property="FocusVisualStyle" Value="{x:Null}"/>
											<Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
											<Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
											<Setter Property="Template">
												<Setter.Value>
													<ControlTemplate TargetType="{x:Type TextBox}">
														<ScrollViewer x:Name="PART_ContentHost" Background="Transparent" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
													</ControlTemplate>
												</Setter.Value>
											</Setter>
										</Style>
									</TextBox.Style>
								</TextBox>
								<ToggleButton Grid.Column="1" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource ComboBoxToggleButton}"/>
							</Grid>
							<ControlTemplate.Triggers>
								<Trigger Property="IsKeyboardFocusWithin" Value="true"/>
								<Trigger Property="IsDropDownOpen" Value="true"/>
								<Trigger Property="HasItems" Value="false"/>
								<Trigger Property="IsEnabled" Value="false"/>
								<Trigger Property="IsGrouping" Value="true"/>
								<Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="true"/>
								<Trigger Property="ScrollViewer.CanContentScroll" SourceName="DropDownScrollViewer" Value="false">
									<Setter Property="Canvas.Top" TargetName="OpaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
									<Setter Property="Canvas.Left" TargetName="OpaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
								</Trigger>
							</ControlTemplate.Triggers>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Trigger>
		</Style.Triggers>
	</Style>
  
</ResourceDictionary>