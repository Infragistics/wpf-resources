<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:local="http://schemas.infragistics.com/xaml"
    xmlns:localPrim="http://schemas.infragistics.com/xaml/primitives"
	xmlns:ig="http://schemas.infragistics.com/xaml"
	xmlns:igBase="http://schemas.infragistics.com/xaml"
	xmlns:igPrim="http://schemas.infragistics.com/xaml/primitives"
	xmlns:igPrimLocal="http://schemas.infragistics.com/xaml/primitives"
	xmlns:sys="clr-namespace:System;assembly=mscorlib"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

	<!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
	<!--                             IMPORTANT NOTE:                                -->
	<!--                                                                            -->
	<!-- Only place resources in this ResourceDictionary that can be shared between -->
	<!-- Silverlight and WPF.  This file is merged into the platform-specific       -->
	<!-- specific ResourceDictionaries (i.e., generic.sl.xaml and generic.wpf.xaml) -->
	<!-- and the appropriate platform-specific ResourceDictionary is copied in the  -->
	<!-- pre-build steps so that it overwrites generic.xaml (which  by default has  -->
	<!-- no content)                                                                -->
	<!--                                                                            -->
	<!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->

	<!-- ======================== -->
	<!-- ValueConverters          -->
	<!-- ======================== -->
    <igPrim:ValueConverterGroup x:Key="boolToVisibilityConverter">
        <!-- if true sets visibility to Visible -->
        <igPrim:FixedValueConverter>
            <igPrim:FixedValueConverter.SourceValue>
                <sys:Boolean>True</sys:Boolean>
            </igPrim:FixedValueConverter.SourceValue>
            <igPrim:FixedValueConverter.DestinationValue>
                <Visibility>Visible</Visibility>
            </igPrim:FixedValueConverter.DestinationValue>
        </igPrim:FixedValueConverter>

        <!-- if false sets visibility to Collapsed -->
        <igPrim:FixedValueConverter>
            <igPrim:FixedValueConverter.DestinationValue>
                <Visibility>Collapsed</Visibility>
            </igPrim:FixedValueConverter.DestinationValue>
        </igPrim:FixedValueConverter>
    </igPrim:ValueConverterGroup>

	<!-- ======================== -->
	<!-- Control Styles           -->
	<!-- ======================== -->

	<!-- ======================== -->
	<!-- Brushes                  -->
	<!-- ======================== -->
	<SolidColorBrush x:Key="editorViewEmptyBackground" Color="White"/>
	<SolidColorBrush x:Key="editorViewNormalBackground" Color="White"/>
	<SolidColorBrush x:Key="editorViewMarginBackground" Color="White"/>
	<SolidColorBrush x:Key="editorViewTextBackground" Color="White"/>
	<SolidColorBrush x:Key="splitterBackground" Color="Gray"/>
	<SolidColorBrush x:Key="miniSplitterBackground" Color="Gray"/>

	<!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
	<!-- XamSyntaxEditor -->
	<!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
	<Style TargetType="local:XamSyntaxEditor">
		<Setter Property="Background" Value="{StaticResource editorViewEmptyBackground}"/>
		<Setter Property="AllowDrop" Value="True"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="local:XamSyntaxEditor">
					<Border
						BorderBrush="{TemplateBinding BorderBrush}"
						BorderThickness="{TemplateBinding BorderThickness}"
						Background="{TemplateBinding Background}"
						Padding="{TemplateBinding Padding}"
						igPrim:XamlHelper.SnapsToDevicePixels="True">
						<localPrim:EditorViewLayoutPanel x:Name="EditorViewLayoutPanel"/>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>		
	</Style>

	<!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
	<!-- EditorDocumentViewSplitter -->
	<!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
	<Style TargetType="localPrim:EditorDocumentViewSplitter">
		<Setter Property="MinWidth" Value="7"/>
		<Setter Property="MinHeight" Value="7"/>
		<Setter Property="Background" Value="{StaticResource splitterBackground}"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="localPrim:EditorDocumentViewSplitter">
					<Border
						BorderBrush="{TemplateBinding BorderBrush}"
						BorderThickness="{TemplateBinding BorderThickness}"
						Background="{TemplateBinding Background}"
						Padding="{TemplateBinding Padding}"
						igPrim:XamlHelper.SnapsToDevicePixels="True">

						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="OrientationStates">
								<VisualState x:Name="Vertical">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="Thumb" Storyboard.TargetProperty="Cursor">
											<DiscreteObjectKeyFrame KeyTime="00:00:00">
												<DiscreteObjectKeyFrame.Value>
													<Cursor>SizeWE</Cursor>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>

								<VisualState x:Name="Horizontal">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="Thumb" Storyboard.TargetProperty="Cursor">
											<DiscreteObjectKeyFrame KeyTime="00:00:00">
												<DiscreteObjectKeyFrame.Value>
													<Cursor>SizeNS</Cursor>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						
						<Thumb x:Name="Thumb"
							   Background="{TemplateBinding Background}"
							   MinWidth="{TemplateBinding MinWidth}"
							   MinHeight="{TemplateBinding MinHeight}"/>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
	<!-- EditorDocumentViewMiniSplitter -->
	<!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
	<Style TargetType="localPrim:EditorDocumentViewMiniSplitter">
		<Setter Property="MinWidth" Value="7"/>
		<Setter Property="MinHeight" Value="7"/>
		<Setter Property="Background" Value="{StaticResource miniSplitterBackground}"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="localPrim:EditorDocumentViewMiniSplitter">
					<Border
						BorderBrush="{TemplateBinding BorderBrush}"
						BorderThickness="{TemplateBinding BorderThickness}"
						Background="{TemplateBinding Background}"
						Padding="{TemplateBinding Padding}"
						igPrim:XamlHelper.SnapsToDevicePixels="True">
						
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="OrientationStates">
								<VisualState x:Name="Vertical">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="Thumb" Storyboard.TargetProperty="Cursor">
											<DiscreteObjectKeyFrame KeyTime="00:00:00">
												<DiscreteObjectKeyFrame.Value>
													<Cursor>SizeWE</Cursor>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>

								<VisualState x:Name="Horizontal">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="Thumb" Storyboard.TargetProperty="Cursor">
											<DiscreteObjectKeyFrame KeyTime="00:00:00">
												<DiscreteObjectKeyFrame.Value>
													<Cursor>SizeNS</Cursor>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>

						<Thumb x:Name="Thumb"
							   Background="{TemplateBinding Background}"
							   MinWidth="{TemplateBinding MinWidth}"
							   MinHeight="{TemplateBinding MinHeight}"/>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
	<!-- EditorDocumentViewScrollBarArea -->
	<!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
	<Style TargetType="localPrim:EditorDocumentViewScrollBarArea">
		<Setter Property="MinWidth" Value="7"/>
		<Setter Property="MinHeight" Value="7"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="localPrim:EditorDocumentViewScrollBarArea">
					<Grid>
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="OrientationStates">
								<VisualState x:Name="Vertical">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="MiniSplitter" Storyboard.TargetProperty="(Grid.Row)">
											<DiscreteObjectKeyFrame KeyTime="00:00:00">
												<DiscreteObjectKeyFrame.Value>
													<sys:Int32>0</sys:Int32>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="MiniSplitter" Storyboard.TargetProperty="(Grid.Column)">
											<DiscreteObjectKeyFrame KeyTime="00:00:00">
												<DiscreteObjectKeyFrame.Value>
													<sys:Int32>1</sys:Int32>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ScrollBar" Storyboard.TargetProperty="(Grid.Row)">
											<DiscreteObjectKeyFrame KeyTime="00:00:00">
												<DiscreteObjectKeyFrame.Value>
													<sys:Int32>1</sys:Int32>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ScrollBar" Storyboard.TargetProperty="(Grid.Column)">
											<DiscreteObjectKeyFrame KeyTime="00:00:00">
												<DiscreteObjectKeyFrame.Value>
													<sys:Int32>1</sys:Int32>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								
								<VisualState x:Name="Horizontal">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="MiniSplitter" Storyboard.TargetProperty="(Grid.Row)">
											<DiscreteObjectKeyFrame KeyTime="00:00:00">
												<DiscreteObjectKeyFrame.Value>
													<sys:Int32>1</sys:Int32>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="MiniSplitter" Storyboard.TargetProperty="(Grid.Column)">
											<DiscreteObjectKeyFrame KeyTime="00:00:00">
												<DiscreteObjectKeyFrame.Value>
													<sys:Int32>0</sys:Int32>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ScrollBar" Storyboard.TargetProperty="(Grid.Row)">
											<DiscreteObjectKeyFrame KeyTime="00:00:00">
												<DiscreteObjectKeyFrame.Value>
													<sys:Int32>1</sys:Int32>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ScrollBar" Storyboard.TargetProperty="(Grid.Column)">
											<DiscreteObjectKeyFrame KeyTime="00:00:00">
												<DiscreteObjectKeyFrame.Value>
													<sys:Int32>1</sys:Int32>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>

						<Grid.RowDefinitions>
							<RowDefinition Height="Auto"/>
							<RowDefinition Height="*"/>
						</Grid.RowDefinitions>
						
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="Auto"/>
							<ColumnDefinition Width="*"/>
						</Grid.ColumnDefinitions>

						<localPrim:EditorDocumentViewMiniSplitter 
							x:Name="MiniSplitter"
							Orientation="{TemplateBinding Orientation}"
							MinWidth="{TemplateBinding MinWidth}"
							MinHeight="{TemplateBinding MinHeight}"/>
						<ScrollBar x:Name="ScrollBar" 
								   Orientation="{TemplateBinding Orientation}"/>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
	<!-- EditorDocumentViewPresenter -->
	<!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
	<Style TargetType="localPrim:EditorDocumentViewPresenter">
		<Setter Property="Background" Value="{StaticResource editorViewNormalBackground}"/>
		<Setter Property="FontSize" Value="12"/>
		<Setter Property="FontFamily" Value="Consolas"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="localPrim:EditorDocumentViewPresenter">
					<Border
						BorderBrush="{TemplateBinding BorderBrush}"
						BorderThickness="{TemplateBinding BorderThickness}"
						Background="{TemplateBinding Background}"
						Padding="{TemplateBinding Padding}"
						igPrim:XamlHelper.SnapsToDevicePixels="True">
						<Grid>
							<Grid.RowDefinitions>
								<RowDefinition Height="*"/>
								<RowDefinition Height="Auto"/>
							</Grid.RowDefinitions>
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="*"/>
								<ColumnDefinition Width="Auto"/>
							</Grid.ColumnDefinitions>

							<!-- LayoutTransformer control to support layout transforms in Silverlight-->
							<igPrimLocal:LayoutTransformer x:Name="TextAreaLayoutTransformer">
								<igPrimLocal:LayoutTransformer.LayoutTransform>
									<TransformGroup>
										<ScaleTransform x:Name="TextAreaScaleTransform"/>
									</TransformGroup>
								</igPrimLocal:LayoutTransformer.LayoutTransform>

								<Grid x:Name="TextAreaHostGrid">
									<Grid.RowDefinitions>
										<RowDefinition Height="Auto"/>
										<RowDefinition Height="*"/>
										<RowDefinition Height="Auto"/>
									</Grid.RowDefinitions>
									<Grid.ColumnDefinitions>
										<ColumnDefinition Width="Auto"/>
										<ColumnDefinition Width="*"/>
										<ColumnDefinition Width="Auto"/>
									</Grid.ColumnDefinitions>
									
									<!-- Border to supply the IBeam cursor when the EditorDocumentViewTextArea is moved to the left
										 (as the result of a horizontal scroll) via a RenderTransform. -->
									<Border Cursor="IBeam" 
											Grid.Row="1" 
											Grid.Column="1"
											Background="Transparent"/>
									
									<!-- AdornmentLayers are automatically added to the EditorDocumentViewTextArea by the control as needed. -->
									<localPrim:EditorDocumentViewTextArea x:Name="TextArea"
																		  Grid.Row="1"
																		  Grid.Column="1"
																		  Cursor="IBeam"
																		  HorizontalAlignment="Stretch"
																		  VerticalAlignment="Stretch"
																		  Background="{StaticResource editorViewTextBackground}"/>

									<!-- Left Margin Area -->
									<localPrim:EditorDocumentViewMarginPanel x:Name="LeftMarginArea"
																			 Location="Left"
																			 VerticalAlignment="Stretch"
																			 Grid.Row="1"
																			 Grid.Column="0"
																			 Background="{StaticResource editorViewMarginBackground}"/>

									<!-- Top Margin Area -->
									<localPrim:EditorDocumentViewMarginPanel x:Name="TopMarginArea"
																			 Location="Top"
																			 HorizontalAlignment="Stretch"
																			 Grid.Row="0"
																			 Grid.Column="0"
																			 Grid.ColumnSpan="3"
																			 Background="{StaticResource editorViewMarginBackground}"/>

									<!-- Right Margin Area -->
									<localPrim:EditorDocumentViewMarginPanel x:Name="RightMarginArea"
																			 Location="Right"
																			 VerticalAlignment="Stretch"
																			 Grid.Row="1"
																			 Grid.Column="2"
																			 Background="{StaticResource editorViewMarginBackground}"/>

									<!-- Bottom Margin Area -->
									<localPrim:EditorDocumentViewMarginPanel x:Name="BottomMarginArea"
																			 Location="Bottom"
																			 HorizontalAlignment="Stretch"
																			 Grid.Row="2"
																			 Grid.Column="0"
																			 Grid.ColumnSpan="3"
																			 Background="{StaticResource editorViewMarginBackground}"/>
								</Grid>
							</igPrimLocal:LayoutTransformer>

							<!-- Place non-transparent elements behind the vertical and horizontal scrollbars because the
								 scrollbars in SL actually have some small transparent areas that allow content to bleed through. -->
							<Rectangle Grid.Row="0" Grid.Column="1" Margin="0, 0, 0, 0" Fill="{TemplateBinding Background}"/>
							<Rectangle Grid.Row="1" Grid.Column="0" Margin="0, 0, 0, 0" Fill="{TemplateBinding Background}"/>
							
							<!-- Place a non-transparent element behind the square where the vertical and horizontal scrollbars meet
								 to prevent any content from bleeding through. -->
							<Rectangle Grid.Row="1" Grid.Column="1" Margin="-1, -1, 0, 0" Fill="{TemplateBinding Background}"/>
							
							<localPrim:EditorDocumentViewScrollBarArea x:Name="VerticalScrollBarArea"
																		Grid.Row="0"
																		Grid.Column="1"
																		Orientation="Vertical"/>

							<localPrim:EditorDocumentViewScrollBarArea x:Name="HorizontalScrollBarArea"
																		Grid.Row="1"
																		Grid.Column="0"
																		Orientation="Horizontal"/>
						</Grid>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
	<!-- LineChangeMarginPresenter -->
	<!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
<!-- 	<Style TargetType="localPrim:LineChangeMarginPresenter">
		<Setter Property="MinWidth" Value="5"/>
		<Setter Property="VerticalAlignment" Value="Stretch"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="localPrim:LineChangeMarginPresenter">
					<StackPanel>
						<Rectangle Fill="Yellow" Height="13"/>
						<Rectangle Fill="Green" Height="13"/>
						<Rectangle Fill="Yellow" Height="13"/>
						<Rectangle Fill="Green" Height="13"/>
					</StackPanel>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
 -->
 
	<!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
	<!-- LineNumberMarginPresenter -->
	<!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
	<Style TargetType="localPrim:LineNumberMarginPresenter">
		<Setter Property="MinWidth" Value="10"/>
		<Setter Property="VerticalAlignment" Value="Stretch"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="localPrim:LineNumberMarginPresenter">
					<Grid x:Name="LineNumberGrid"/>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

  <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
  <!-- RulerMarginPresenter -->
  <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
  <Style TargetType="localPrim:RulerMarginPresenter">
    <Setter Property="MinWidth" Value="10"/>
    <Setter Property="VerticalAlignment" Value="Stretch"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="localPrim:RulerMarginPresenter">
          <Grid x:Name="RulerGrid">
            <Rectangle Fill="{TemplateBinding Background}" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="1"/>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
	<!-- OutliningMarginPresenter -->
	<!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
<!-- 	<Style TargetType="localPrim:OutliningMarginPresenter">
		<Setter Property="MinWidth" Value="10"/>
		<Setter Property="VerticalAlignment" Value="Stretch"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="localPrim:OutliningMarginPresenter">
					<StackPanel>
						<TextBlock Text="+" TextAlignment="Center" HorizontalAlignment="Stretch"/>
						<TextBlock Text="-" TextAlignment="Center" HorizontalAlignment="Stretch"/>
						<TextBlock Text="+" TextAlignment="Center" HorizontalAlignment="Stretch"/>
						<TextBlock Text="-" TextAlignment="Center" HorizontalAlignment="Stretch"/>
						<TextBlock Text="+" TextAlignment="Center" HorizontalAlignment="Stretch"/>
						<TextBlock Text="-" TextAlignment="Center" HorizontalAlignment="Stretch"/>
					</StackPanel>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
 -->
 
	<!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
	<!-- LayoutTransformer -->
	<!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
	<Style TargetType="igPrimLocal:LayoutTransformer">
		<Setter Property="Foreground" Value="#FF000000"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="igPrimLocal:LayoutTransformer">
					<Grid x:Name="TransformRoot" Background="{TemplateBinding Background}">
						<ContentPresenter
                            x:Name="Presenter"
                            Content="{TemplateBinding Content}"
                            ContentTemplate="{TemplateBinding ContentTemplate}"/>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
	<!-- SyntaxEditorCaretPresenter -->
	<!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
	<Style TargetType="localPrim:SyntaxEditorCaretPresenter">
		<Setter Property="MinWidth" Value="1"/>
		<Setter Property="MinHeight" Value="13"/>
		<Setter Property="Foreground" Value="{Binding Path=Caret.Brush, Mode=OneWay, RelativeSource={RelativeSource Self}}"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="localPrim:SyntaxEditorCaretPresenter">
					<Rectangle x:Name="BackgroundRect" 
							   Fill="{TemplateBinding Foreground}" 
							   Visibility="{Binding Path=Caret.IsVisible, Mode=OneWay, Converter={StaticResource boolToVisibilityConverter}, RelativeSource={RelativeSource TemplatedParent}}"
							   Width="{Binding Path=Caret.Width, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
							   Height="{Binding Path=Caret.Height, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}">
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="InsertMode">
									<Storyboard x:Name="InsertAnimation" RepeatBehavior="Forever">
										<DoubleAnimationUsingKeyFrames Storyboard.TargetName="BackgroundRect" Storyboard.TargetProperty="Opacity">
											<SplineDoubleKeyFrame KeyTime="0:0:0" Value="0"/>
											<SplineDoubleKeyFrame KeyTime="0:0:0.25" Value="0"/>
											<SplineDoubleKeyFrame KeyTime="0:0:0.5" Value="1"/>
											<SplineDoubleKeyFrame KeyTime="0:0:0.75" Value="1"/>
											<SplineDoubleKeyFrame KeyTime="0:0:1" Value="0"/>
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								
								<VisualState x:Name="OverwriteMode">
									<Storyboard x:Name="OverwriteAnimation" RepeatBehavior="Forever">
										<DoubleAnimationUsingKeyFrames Storyboard.TargetName="BackgroundRect" Storyboard.TargetProperty="Opacity">
											<SplineDoubleKeyFrame KeyTime="0:0:0" Value="0"/>
											<SplineDoubleKeyFrame KeyTime="0:0:0.25" Value="0"/>
											<SplineDoubleKeyFrame KeyTime="0:0:0.5" Value="0.5"/>
											<SplineDoubleKeyFrame KeyTime="0:0:0.75" Value="0.5"/>
											<SplineDoubleKeyFrame KeyTime="0:0:1" Value="0"/>
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
					</Rectangle>
					
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
</ResourceDictionary>
