<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:igWindows="http://infragistics.com/Windows"
    >
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="PrimitivesGeneric.xaml" />
        <ResourceDictionary Source="PrimitivesLunaNormal_Brushes.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <Style x:Key="ToolWindowButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Width" Value="13"/>
        <Setter Property="Height" Value="13"/>
        <Setter Property="Focusable" Value="False"/>
    </Style>

    <Style x:Key="ToolWindowMinimizeButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource ToolWindowButtonStyle}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid x:Name="root">
                        <Border
							x:Name="closeButtonOuterBorder"
							BorderThickness="1"
							BorderBrush="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.ToolWindowActiveMinMaxButtonNormalOuterBorderFillKey}}"
                            Background="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.ToolWindowActiveMinMaxButtonNormalCenterFillKey}}"
							CornerRadius="2"
                            SnapsToDevicePixels="True">
                            <Rectangle x:Name="highlight" Stroke="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.ToolWindowActiveMinMaxButtonNormalInnerBorderFillKey}}" SnapsToDevicePixels="True"/>
                        </Border>
                        <Rectangle Width="5" Height="2" VerticalAlignment="Bottom" HorizontalAlignment="Center" Margin="0,0,0,3" Fill="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.ToolWindowActiveCloseButtonNormalGlyphFillKey}}" SnapsToDevicePixels="True"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding Path=IsActive, RelativeSource={RelativeSource FindAncestor, {x:Type igWindows:ToolWindow}, 1}}" Value="False">
                            <Setter TargetName="closeButtonOuterBorder" Property="BorderBrush" Value="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.ToolWindowNotActiveMinMaxButtonNormalOuterBorderFillKey}}"/>
                            <Setter TargetName="closeButtonOuterBorder" Property="Background" Value="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.ToolWindowNotActiveMinMaxButtonNormalCenterFillKey}}"/>
                            <Setter TargetName="highlight" Property="Stroke" Value="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.ToolWindowNotActiveMinMaxButtonNormalInnerBorderFillKey}}"/>
                        </DataTrigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="closeButtonOuterBorder" Property="BorderBrush" Value="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.ToolWindowActiveMinMaxButtonHottrackOuterBorderFillKey}}"/>
                            <Setter TargetName="closeButtonOuterBorder" Property="Background" Value="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.ToolWindowActiveMinMaxButtonHottrackCenterFillKey}}"/>
                            <Setter TargetName="highlight" Property="Stroke" Value="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.ToolWindowActiveMinMaxButtonHottrackInnerBorderFillKey}}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="closeButtonOuterBorder" Property="BorderBrush" Value="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.ToolWindowActiveMinMaxButtonPressedOuterBorderFillKey}}"/>
                            <Setter TargetName="closeButtonOuterBorder" Property="Background" Value="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.ToolWindowActiveMinMaxButtonPressedCenterFillKey}}"/>
                            <Setter TargetName="highlight" Property="Stroke" Value="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.ToolWindowActiveMinMaxButtonPressedInnerBorderFillKey}}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="closeButtonOuterBorder" Property="BorderBrush" Value="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.ToolWindowDisabledCloseButtonOuterBorderFillKey}}"/>
                            <Setter TargetName="closeButtonOuterBorder" Property="Background" Value="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.ToolWindowDisabledCloseButtonCenterFillKey}}"/>
                            <Setter TargetName="highlight" Property="Stroke" Value="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.ToolWindowDisabledCloseButtonInnerBorderFillKey}}"/>
                            <Setter TargetName="root" Property="Opacity" Value="0.55"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ToolWindowMaximizeButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource ToolWindowButtonStyle}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid x:Name="root">
                        <Border
							x:Name="closeButtonOuterBorder"
							BorderThickness="1"
							BorderBrush="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.ToolWindowActiveMinMaxButtonNormalOuterBorderFillKey}}"
                            Background="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.ToolWindowActiveMinMaxButtonNormalCenterFillKey}}"
							CornerRadius="2"
                            SnapsToDevicePixels="True">
                            <Rectangle x:Name="highlight" Stroke="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.ToolWindowActiveMinMaxButtonNormalInnerBorderFillKey}}" SnapsToDevicePixels="True"/>
                        </Border>
                        <Border BorderThickness="1,2,1,1" Width="7" Height="6" BorderBrush="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.ToolWindowActiveCloseButtonNormalGlyphFillKey}}" SnapsToDevicePixels="True"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding Path=IsActive, RelativeSource={RelativeSource FindAncestor, {x:Type igWindows:ToolWindow}, 1}}" Value="False">
                            <Setter TargetName="closeButtonOuterBorder" Property="BorderBrush" Value="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.ToolWindowNotActiveMinMaxButtonNormalOuterBorderFillKey}}"/>
                            <Setter TargetName="closeButtonOuterBorder" Property="Background" Value="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.ToolWindowNotActiveMinMaxButtonNormalCenterFillKey}}"/>
                            <Setter TargetName="highlight" Property="Stroke" Value="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.ToolWindowNotActiveMinMaxButtonNormalInnerBorderFillKey}}"/>
                        </DataTrigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="closeButtonOuterBorder" Property="BorderBrush" Value="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.ToolWindowActiveMinMaxButtonHottrackOuterBorderFillKey}}"/>
                            <Setter TargetName="closeButtonOuterBorder" Property="Background" Value="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.ToolWindowActiveMinMaxButtonHottrackCenterFillKey}}"/>
                            <Setter TargetName="highlight" Property="Stroke" Value="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.ToolWindowActiveMinMaxButtonHottrackInnerBorderFillKey}}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="closeButtonOuterBorder" Property="BorderBrush" Value="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.ToolWindowActiveMinMaxButtonPressedOuterBorderFillKey}}"/>
                            <Setter TargetName="closeButtonOuterBorder" Property="Background" Value="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.ToolWindowActiveMinMaxButtonPressedCenterFillKey}}"/>
                            <Setter TargetName="highlight" Property="Stroke" Value="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.ToolWindowActiveMinMaxButtonPressedInnerBorderFillKey}}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="closeButtonOuterBorder" Property="BorderBrush" Value="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.ToolWindowDisabledCloseButtonOuterBorderFillKey}}"/>
                            <Setter TargetName="closeButtonOuterBorder" Property="Background" Value="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.ToolWindowDisabledCloseButtonCenterFillKey}}"/>
                            <Setter TargetName="highlight" Property="Stroke" Value="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.ToolWindowDisabledCloseButtonInnerBorderFillKey}}"/>
                            <Setter TargetName="root" Property="Opacity" Value="0.55"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ToolWindowRestoreButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource ToolWindowButtonStyle}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid x:Name="root">
                        <Border
						x:Name="closeButtonOuterBorder"
						BorderThickness="1"
						BorderBrush="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.ToolWindowActiveMinMaxButtonNormalOuterBorderFillKey}}"
                        Background="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.ToolWindowActiveMinMaxButtonNormalCenterFillKey}}"
						CornerRadius="2"
                        SnapsToDevicePixels="True">
                            <Rectangle x:Name="highlight" Stroke="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.ToolWindowActiveMinMaxButtonNormalInnerBorderFillKey}}" SnapsToDevicePixels="True"/>
                        </Border>
                        <Path
				            Width="9"
				            Height="9"
                            VerticalAlignment="Bottom"
				            Data="M 1,5 C1,5 2,5 2,5 2,5 2,6 2,6 2,6 6,6 6,6 6,6 6,8 6,8 6,8 1,8 1,8 1,8 1,5 1,5 zM 7,5 C7,5 7,3 7,3 7,3 3,3 3,3 3,3 3,2 3,2 3,2 8,2 8,2 8,2 8,5 8,5 8,5 7,5 7,5 zM 0,3 C0,3 0,9 0,9 0,9 7,9 7,9 7,9 7,6 7,6 7,6 9,6 9,6 9,6 9,0 9,0 9,0 2,0 2,0 2,0 2,3 2,3 2,3 0,3 0,3 z"
				            Fill="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.ToolWindowActiveCloseButtonNormalGlyphFillKey}}"
                            SnapsToDevicePixels="True"
				            Margin="0,0,0,2"
				            Stretch="Fill"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding Path=IsActive, RelativeSource={RelativeSource FindAncestor, {x:Type igWindows:ToolWindow}, 1}}" Value="False">
                            <Setter TargetName="closeButtonOuterBorder" Property="BorderBrush" Value="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.ToolWindowNotActiveMinMaxButtonNormalOuterBorderFillKey}}"/>
                            <Setter TargetName="closeButtonOuterBorder" Property="Background" Value="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.ToolWindowNotActiveMinMaxButtonNormalCenterFillKey}}"/>
                            <Setter TargetName="highlight" Property="Stroke" Value="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.ToolWindowNotActiveMinMaxButtonNormalInnerBorderFillKey}}"/>
                        </DataTrigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="closeButtonOuterBorder" Property="BorderBrush" Value="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.ToolWindowActiveMinMaxButtonHottrackOuterBorderFillKey}}"/>
                            <Setter TargetName="closeButtonOuterBorder" Property="Background" Value="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.ToolWindowActiveMinMaxButtonHottrackCenterFillKey}}"/>
                            <Setter TargetName="highlight" Property="Stroke" Value="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.ToolWindowActiveMinMaxButtonHottrackInnerBorderFillKey}}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="closeButtonOuterBorder" Property="BorderBrush" Value="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.ToolWindowActiveMinMaxButtonPressedOuterBorderFillKey}}"/>
                            <Setter TargetName="closeButtonOuterBorder" Property="Background" Value="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.ToolWindowActiveMinMaxButtonPressedCenterFillKey}}"/>
                            <Setter TargetName="highlight" Property="Stroke" Value="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.ToolWindowActiveMinMaxButtonPressedInnerBorderFillKey}}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="closeButtonOuterBorder" Property="BorderBrush" Value="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.ToolWindowDisabledCloseButtonOuterBorderFillKey}}"/>
                            <Setter TargetName="closeButtonOuterBorder" Property="Background" Value="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.ToolWindowDisabledCloseButtonCenterFillKey}}"/>
                            <Setter TargetName="highlight" Property="Stroke" Value="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.ToolWindowDisabledCloseButtonInnerBorderFillKey}}"/>
                            <Setter TargetName="root" Property="Opacity" Value="0.55"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- ========== ToolWindowCloseButtonStyle ========== -->
    <Style x:Key="ToolWindowCloseButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="ToolTip" Value="{StaticResource closeToolTip}" />
        <Setter Property="Width" Value="13" />
        <Setter Property="Height" Value="13" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>

                        <Border x:Name="closeButtonOuterBorder" 
                                BorderThickness="1" 
                                SnapsToDevicePixels="True"
                                BorderBrush="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.ToolWindowActiveCloseButtonNormalOuterBorderFillKey}}"
                                Background="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.ToolWindowActiveCloseButtonNormalCenterFillKey}}" 
                                CornerRadius="2">

                        <Border x:Name="closeButtonInnerBorder" 
                                BorderThickness="1" 
                                SnapsToDevicePixels="True"
                                BorderBrush="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.ToolWindowActiveCloseButtonNormalInnerBorderFillKey}}"
                                CornerRadius="1"/>

                        </Border>

                        <Path x:Name="closeGlyph"
                                  Data="M0,0L13,13 M0,7L7,0" 
                                  Margin="1" 
                              Width="7"
                              Height="7"
                                  StrokeThickness="2"
                                  SnapsToDevicePixels="True"
                                  Stroke="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.ToolWindowActiveCloseButtonNormalGlyphFillKey}}"/>


                    </Grid>
                    <ControlTemplate.Triggers>

                        <DataTrigger Binding="{Binding Path=IsActive, RelativeSource={RelativeSource FindAncestor, {x:Type igWindows:ToolWindow}, 1}}" Value="False">
                            <Setter TargetName="closeButtonOuterBorder" Property="BorderBrush" Value="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.ToolWindowNotActiveCloseButtonNormalOuterBorderFillKey}}"/>
                            <Setter TargetName="closeButtonInnerBorder" Property="BorderBrush" Value="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.ToolWindowNotActiveCloseButtonNormalInnerBorderFillKey}}"/>
                            <Setter TargetName="closeButtonOuterBorder" Property="Background" Value="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.ToolWindowNotActiveCloseButtonNormalCenterFillKey}}"/>
                        </DataTrigger>

                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="closeButtonOuterBorder" Property="BorderBrush" Value="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.ToolWindowActiveCloseButtonHottrackOuterBorderFillKey}}"/>
                            <Setter TargetName="closeButtonInnerBorder" Property="BorderBrush" Value="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.ToolWindowActiveCloseButtonHottrackInnerBorderFillKey}}"/>
                            <Setter TargetName="closeButtonOuterBorder" Property="Background" Value="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.ToolWindowActiveCloseButtonHottrackCenterFillKey}}"/>
                            <Setter TargetName="closeGlyph" Property="Stroke" Value="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.ToolWindowActiveCloseButtonHottrackGlyphFillKey}}"/>
                        </Trigger>

                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="closeButtonOuterBorder" Property="BorderBrush" Value="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.ToolWindowActiveCloseButtonPressedOuterBorderFillKey}}"/>
                            <Setter TargetName="closeButtonInnerBorder" Property="BorderBrush" Value="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.ToolWindowActiveCloseButtonPressedInnerBorderFillKey}}"/>
                            <Setter TargetName="closeButtonOuterBorder" Property="Background" Value="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.ToolWindowActiveCloseButtonPressedCenterFillKey}}"/>
                            <Setter TargetName="closeGlyph" Property="Stroke" Value="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.ToolWindowActiveCloseButtonPressedGlyphFillKey}}"/>
                        </Trigger>

					<Trigger Property="IsEnabled" Value="False">
						<Setter TargetName="closeButtonOuterBorder" Property="BorderBrush" Value="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.ToolWindowDisabledCloseButtonOuterBorderFillKey}}"/>
						<Setter TargetName="closeButtonInnerBorder" Property="BorderBrush" Value="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.ToolWindowDisabledCloseButtonInnerBorderFillKey}}"/>
                            <Setter TargetName="closeButtonOuterBorder" Property="Background" Value="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.ToolWindowDisabledCloseButtonCenterFillKey}}"/>
						<Setter TargetName="closeGlyph" Property="Stroke" Value="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.ToolWindowDisabledCloseButtonGlyphFillKey}}"/>
					</Trigger>


					</ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- ================================ -->
    <!--          ToolWindow          -->
    <!-- ================================ -->
    <Style TargetType="{x:Type igWindows:ToolWindow}">
        <Setter Property="Background" Value="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.ToolWindowBackgroundFillKey}}" />
        <!--<Setter Property="BorderThickness" Value="1,1,1,1" />-->
        <Setter Property="BorderThickness" Value="{Binding Path=PreferredBorderThickness, RelativeSource={x:Static RelativeSource.Self}}" />
        <!-- AS 6/30/10 TFS14299
        <Setter Property="SnapsToDevicePixels" Value="True"/>-->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type igWindows:ToolWindow}">
                    <AdornerDecorator>
                        <Grid Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition x:Name="captionRow" Height="Auto" />
                                    <RowDefinition x:Name="contentRow" Height="*" />
                                </Grid.RowDefinitions>
								<!-- AS 6/24/11 FloatingWindowCaptionSource - Bind Visibility -->
								<Border x:Name="captionOuterBorder" BorderBrush="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.ToolWindowInactiveCaptionOuterBorderFillKey}}" BorderThickness="1,1,1,1" Visibility="{TemplateBinding CaptionVisibility}">
                                    <Border x:Name="captionInnerBorder" BorderBrush="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.ToolWindowInactiveCaptionInnerBorderFillKey}}" BorderThickness="0,1,0,0" HorizontalAlignment="Stretch">
                                        <DockPanel x:Name="PART_Caption" Background="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.ToolWindowInactiveCaptionCenterFillKey}}"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"                                                   
								HorizontalAlignment="Stretch">
                                            <Button Style="{StaticResource ToolWindowCloseButtonStyle}" Command="{x:Static igWindows:ToolWindow.CloseCommand}" HorizontalAlignment="Right" VerticalAlignment="Center" DockPanel.Dock="Right" Margin="0,0,5,0"/>
											
											<!-- NA 2011.1 - ToolWindow changes -->
											<Button x:Name="MaximizeButton"
												Style="{StaticResource ToolWindowMaximizeButtonStyle}"
                                                Command="{x:Static igWindows:ToolWindow.MaximizeCommand}" 
												Visibility="{TemplateBinding MaximizeButtonVisibility}"
                                                HorizontalAlignment="Right" VerticalAlignment="Center" 
												ToolTip="{StaticResource maximizeToolTip}"
                                                DockPanel.Dock="Right"
                                                    Margin="1,0"/>
											<Button x:Name="MinimizeButton" 
												Style="{StaticResource ToolWindowMinimizeButtonStyle}"
                                                Command="{x:Static igWindows:ToolWindow.MinimizeCommand}" 
												Visibility="{TemplateBinding MinimizeButtonVisibility}"
                                                HorizontalAlignment="Right" VerticalAlignment="Center" 
												ToolTip="{StaticResource minimizeToolTip}"
                                                DockPanel.Dock="Right"/>

											<TextBlock x:Name="txtCaption"
                                                   Text="{TemplateBinding Title}" 
                                                   Foreground="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.ToolWindowInactiveCaptionTextFillKey}}"
                                                   FontFamily="{DynamicResource {x:Static SystemFonts.SmallCaptionFontFamilyKey}}"
                                                   FontSize="{DynamicResource {x:Static SystemFonts.SmallCaptionFontSizeKey}}"
                                                   FontStyle="{DynamicResource {x:Static SystemFonts.SmallCaptionFontStyleKey}}"
                                                   FontWeight="{DynamicResource {x:Static SystemFonts.SmallCaptionFontWeightKey}}"
                                                   TextDecorations="{DynamicResource {x:Static SystemFonts.SmallCaptionFontTextDecorationsKey}}"
                                                   IsHitTestVisible="False" 
                                                   TextTrimming="CharacterEllipsis"
                                                   Margin="2,4,0,2"/>
                                    </DockPanel>
                                    </Border>
                                </Border>
                                <Grid Grid.Row="1">
                                    <Border x:Name="windowBorder"
                                        BorderBrush="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.ToolWindowInactiveOuterBorder1FillKey}}"
                                        BorderThickness="1,0,1,1">
                                        <Border x:Name="windowBorder2" BorderBrush="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.ToolWindowInactiveOuterBorder2FillKey}}" BorderThickness="1,0,1,1">
                                            <Border x:Name="windowBorder3" BorderBrush="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.ToolWindowInactiveOuterBorder3FillKey}}" BorderThickness="1,0,1,1">
                                                <Border x:Name="windowBorder4" BorderBrush="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.ToolWindowInactiveOuterBorder4FillKey}}" BorderThickness="1,0,1,1">
                                                    <Grid SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                                        <ContentPresenter x:Name="PART_Content"
                                                    Grid.Row="1"
                                                    Margin="{TemplateBinding Padding}"
                                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                    ContentSource="Content" />
                                                        <!-- Put the resize grip within the border so it doesn't overlap the border -->
                                                        <Grid Name="PART_ResizeGrip" Grid.RowSpan="2" Background="Transparent" HorizontalAlignment="Right" VerticalAlignment="Bottom" Visibility="Collapsed">
                                                            <!-- We need to wrap the resize grip in an element and prevent hittesting on the resize grip -->
                                                            <ResizeGrip IsTabStop="False" IsHitTestVisible="False" />
                                                        </Grid>
                                                    </Grid>
                                                </Border>
                                            </Border>
                                        </Border>
                                    </Border>
                                </Grid>
                            </Grid>
							<Grid x:Name="resizeAreas" Visibility="Collapsed" FlowDirection="LeftToRight">
                                <igWindows:ToolWindowResizeElement x:Name="PART_BorderTop" BorderLocation="Top"/>
                                <igWindows:ToolWindowResizeElement x:Name="PART_BorderLeft" BorderLocation="Left"/>
                                <igWindows:ToolWindowResizeElement x:Name="PART_BorderBottom" BorderLocation="Bottom"/>
                                <igWindows:ToolWindowResizeElement x:Name="PART_BorderRight" BorderLocation="Right"/>

                                <igWindows:ToolWindowResizeElement x:Name="PART_BorderTopLeft" BorderLocation="TopLeft"/>
                                <igWindows:ToolWindowResizeElement x:Name="PART_BorderTopRight" BorderLocation="TopRight"/>
                                <igWindows:ToolWindowResizeElement x:Name="PART_BorderBottomLeft" BorderLocation="BottomLeft"/>
                                <igWindows:ToolWindowResizeElement x:Name="PART_BorderBottomRight" BorderLocation="BottomRight"/>
                            </Grid>
                        </Grid>
                    </AdornerDecorator>
                    <ControlTemplate.Triggers>
						<!-- NA 2011.1 - ToolWindow changes -->
						<Trigger Property="WindowState" Value="Minimized">
							<Setter Property="Command" TargetName="MinimizeButton" Value="{x:Static igWindows:ToolWindow.RestoreCommand}" />
							<Setter Property="ToolTip" TargetName="MinimizeButton" Value="{StaticResource restoreUpToolTip}" />
							<Setter Property="Style" TargetName="MinimizeButton" Value="{StaticResource ToolWindowRestoreButtonStyle}" />
						</Trigger>
						<Trigger Property="WindowState" Value="Maximized">
							<Setter Property="Command" TargetName="MaximizeButton" Value="{x:Static igWindows:ToolWindow.RestoreCommand}" />
							<Setter Property="ToolTip" TargetName="MaximizeButton" Value="{StaticResource restoreDownToolTip}" />
							<Setter Property="Style" TargetName="MaximizeButton" Value="{StaticResource ToolWindowRestoreButtonStyle}" />
						</Trigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="WindowState" Value="Minimized" />
								<Condition Property="IsUsingOSNonClientArea" Value="False" />
                                <!-- AS 1/4/12 TFS85418 -->
                                <Condition Property="CaptionVisibility" Value="Visible" />
                            </MultiTrigger.Conditions>
							<Setter Property="Visibility" TargetName="windowBorder" Value="Collapsed" />
							<Setter Property="Height" TargetName="captionRow" Value="*" />
							<Setter Property="Height" TargetName="contentRow" Value="0" />
						</MultiTrigger>
						
						<Trigger Property="IsActive" Value="True">
                            <Setter Property="Foreground" TargetName="txtCaption" Value="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.ToolWindowActiveCaptionTextFillKey}}" />
                            <Setter TargetName="PART_Caption" Property="Background" Value="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.ToolWindowActiveCaptionCenterFillKey}}"/>
                            <Setter TargetName="captionOuterBorder" Property="BorderBrush" Value="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.ToolWindowActiveCaptionOuterBorderFillKey}}"/>
                            <Setter TargetName="captionInnerBorder" Property="BorderBrush" Value="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.ToolWindowActiveCaptionInnerBorderFillKey}}"/>
                            <Setter TargetName="windowBorder" Property="BorderBrush" Value="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.ToolWindowActiveOuterBorder1FillKey}}"/>
                            <Setter TargetName="windowBorder2" Property="BorderBrush" Value="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.ToolWindowActiveOuterBorder2FillKey}}"/>
                            <Setter TargetName="windowBorder3" Property="BorderBrush" Value="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.ToolWindowActiveOuterBorder3FillKey}}"/>
                            <Setter TargetName="windowBorder4" Property="BorderBrush" Value="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.ToolWindowActiveOuterBorder4FillKey}}"/>
                        </Trigger>

                        <!-- Do not allow resizing unless canresize or canresizewithgrip -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="ResizeMode" Value="CanResize" />
                                <Condition Property="IsUsingOSNonClientArea" Value="False" />
								<!-- NA 2011.1 - ToolWindow changes -->
								<Condition Property="WindowState" Value="Normal" />
							</MultiTrigger.Conditions>
                            <Setter Property="Visibility" TargetName="resizeAreas" Value="Visible" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="ResizeMode" Value="CanResizeWithGrip" />
                                <Condition Property="IsUsingOSNonClientArea" Value="False" />
								<!-- NA 2011.1 - ToolWindow changes -->
								<Condition Property="WindowState" Value="Normal" />
							</MultiTrigger.Conditions>
                            <Setter Property="Visibility" TargetName="resizeAreas" Value="Visible" />
                        </MultiTrigger>

						<!-- NA 2011.1 - ToolWindow changes -->
						<!--<Trigger Property="ResizeMode" Value="CanResizeWithGrip">
                            <Setter Property="Visibility" TargetName="PART_ResizeGrip" Value="Visible" />
                        </Trigger>-->
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="ResizeMode" Value="CanResizeWithGrip" />
								<Condition Property="WindowState" Value="Normal" />
							</MultiTrigger.Conditions>
							<Setter Property="Visibility" TargetName="PART_ResizeGrip" Value="Visible" />
						</MultiTrigger>

						<Trigger Property="IsUsingOSNonClientArea" Value="True">
                            <Setter Property="BorderThickness" TargetName="windowBorder" Value="0" />
                            <Setter Property="BorderThickness" TargetName="windowBorder2" Value="0" />
                            <Setter Property="BorderThickness" TargetName="windowBorder3" Value="0" />
                            <Setter Property="BorderThickness" TargetName="windowBorder4" Value="0" />
                            <Setter Property="Visibility" TargetName="captionOuterBorder" Value="Collapsed" />
                            <!--<Setter Property="Visibility" TargetName="resizeAreas" Value="Collapsed" />-->
                        </Trigger>
						
						<!-- AS 6/24/11 FloatingWindowCaptionSource - Show space on top when we're not providing the caption -->
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsUsingOSNonClientArea" Value="False" />
								<Condition Property="CaptionVisibility" Value="Collapsed" />
							</MultiTrigger.Conditions>
							<Setter Property="BorderThickness" TargetName="windowBorder" Value="1" />
							<Setter Property="BorderThickness" TargetName="windowBorder2" Value="1" />
							<Setter Property="BorderThickness" TargetName="windowBorder3" Value="1" />
							<Setter Property="BorderThickness" TargetName="windowBorder4" Value="1" />
						</MultiTrigger>
						
						<!-- AS 6/24/11 FloatingWindowCaptionSource - Hide the resize area when maximized and we're providing the nonclient area. -->
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsUsingOSNonClientArea" Value="False" />
								<Condition Property="WindowState" Value="Maximized" />
							</MultiTrigger.Conditions>
							<Setter Property="BorderThickness" TargetName="windowBorder" Value="0" />
							<Setter Property="BorderThickness" TargetName="windowBorder2" Value="0" />
							<Setter Property="BorderThickness" TargetName="windowBorder3" Value="0" />
							<Setter Property="BorderThickness" TargetName="windowBorder4" Value="0" />
							<Setter Property="BorderThickness" TargetName="captionInnerBorder" Value="0" />
							<Setter Property="BorderThickness" TargetName="captionOuterBorder" Value="0" />
						</MultiTrigger>

                        <!-- AS 1/4/12 TFS85418 -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="WindowState" Value="Minimized" />
                                <Condition Property="IsUsingOSNonClientArea" Value="False" />
                                <Condition Property="CaptionVisibility" Value="Collapsed" />
                            </MultiTrigger.Conditions>
                            <Setter Property="BorderThickness" TargetName="windowBorder" Value="0" />
                            <Setter Property="BorderThickness" TargetName="windowBorder2" Value="0" />
                            <Setter Property="BorderThickness" TargetName="windowBorder3" Value="0" />
                            <Setter Property="BorderThickness" TargetName="windowBorder4" Value="0" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsActive" Value="True">
                <Setter Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.ActiveBorderBrushKey}}" />
            </Trigger>
        </Style.Triggers>
    </Style>

</ResourceDictionary>