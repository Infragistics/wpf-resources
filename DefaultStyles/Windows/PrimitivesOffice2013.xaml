<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
                    xmlns:controls="http://infragistics.com/Windows" 
                	xmlns:igWindowsBase="http://infragistics.com/Windows"
                    xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
                    xmlns:interactions="http://schemas.infragistics.com/xaml"
                    xmlns:igPrim="http://schemas.infragistics.com/xaml/primitives"
                    mc:Ignorable="d">

    <!-- *********************************  RESOURCES  ********************************* -->
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="PrimitivesGeneric.xaml" />
        <ResourceDictionary Source="PrimitivesOffice2013_Brushes.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <!-- *********************************  ToolWindowButton Style  ********************************* -->
    <Style x:Key="ToolWindowButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Width" Value="16" />
        <Setter Property="Height" Value="16" />
        <Setter Property="MinWidth" Value="10" />
        <Setter Property="MinHeight" Value="10" />
        <Setter Property="ToolTipService.ShowOnDisabled" Value="True" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="Foreground" Value="{Binding Foreground, RelativeSource={x:Static RelativeSource.TemplatedParent}}" />
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="Opacity" Value="0.7" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}" CornerRadius="{TemplateBinding Border.CornerRadius}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True">
                        <Path Data="{Binding Content, RelativeSource={x:Static RelativeSource.TemplatedParent}}" Fill="{TemplateBinding Foreground}" Stretch="Uniform" Margin="{TemplateBinding Padding}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" SnapsToDevicePixels="True" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{DynamicResource {ComponentResourceKey {x:Type controls:IGControlBase}, DisabledForegroundBrush}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <!-- HotTracked Button in an Active ContentPane -->
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsMouseOver, RelativeSource={x:Static RelativeSource.Self}}" Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter Property="Opacity" Value="1" />
            </MultiDataTrigger>
            <!-- HotTracked Button in an Non-Active ContentPane -->
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsMouseOver, RelativeSource={x:Static RelativeSource.Self}}" Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter Property="Opacity" Value="1" />
            </MultiDataTrigger>
            <!-- IsPressed Button -->
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Opacity" Value="1" />
            </Trigger>
            <!-- IsEnabled Button -->
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.3" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="True" />
        </Style.Triggers>
    </Style>

    <!-- *********************************  ToolWindowMinimizeButton Style  ********************************* -->
    <Style x:Key="ToolWindowMinimizeButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource ToolWindowButtonStyle}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid x:Name="root">
                        <Border x:Name="closeButtonOuterBorder" BorderThickness="0" BorderBrush="{DynamicResource {x:Static controls:PrimitivesBrushKeys.ToolWindowActiveMinMaxButtonNormalOuterBorderFillKey}}" Background="{DynamicResource {x:Static controls:PrimitivesBrushKeys.ToolWindowActiveMinMaxButtonNormalCenterFillKey}}" SnapsToDevicePixels="True" />
                        <Rectangle x:Name="closeGlyph" Stroke="{DynamicResource {x:Static controls:PrimitivesBrushKeys.ToolWindowActiveCloseButtonNormalGlyphStrokeKey}}" VerticalAlignment="Center" HorizontalAlignment="Center" StrokeThickness="0" Height="2" Width="9" Fill="{DynamicResource {x:Static controls:PrimitivesBrushKeys.ToolWindowActiveCloseButtonNormalGlyphFillKey}}" SnapsToDevicePixels="True" Margin="0,5,0,0" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- *********************************  ToolWindowMaximizeButton Style  ********************************* -->
    <Style x:Key="ToolWindowMaximizeButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource ToolWindowButtonStyle}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid x:Name="root">
                        <Border x:Name="closeButtonOuterBorder" BorderThickness="1" BorderBrush="{DynamicResource {x:Static controls:PrimitivesBrushKeys.ToolWindowActiveMinMaxButtonNormalOuterBorderFillKey}}" Background="{DynamicResource {x:Static controls:PrimitivesBrushKeys.ToolWindowActiveMinMaxButtonNormalCenterFillKey}}" SnapsToDevicePixels="True" />
                        <Grid VerticalAlignment="Center" HorizontalAlignment="Center">
                            <Border Width="10" Height="10" BorderBrush="{DynamicResource {x:Static controls:PrimitivesBrushKeys.ToolWindowActiveCloseButtonNormalGlyphFillKey}}" BorderThickness="1,3,1,1" />
                        </Grid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- *********************************  ToolWindowRestoreButton Style  ********************************* -->
    <Style x:Key="ToolWindowRestoreButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource ToolWindowButtonStyle}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid x:Name="root">
                        <Border x:Name="closeButtonOuterBorder" BorderThickness="1" BorderBrush="{DynamicResource {x:Static controls:PrimitivesBrushKeys.ToolWindowActiveMinMaxButtonNormalOuterBorderFillKey}}" Background="{DynamicResource {x:Static controls:PrimitivesBrushKeys.ToolWindowActiveMinMaxButtonNormalCenterFillKey}}" SnapsToDevicePixels="True">
                            <Rectangle x:Name="highlight" Stroke="{DynamicResource {x:Static controls:PrimitivesBrushKeys.ToolWindowActiveMinMaxButtonNormalInnerBorderFillKey}}" SnapsToDevicePixels="True" />
                        </Border>
                        <Grid Width="16" Height="12" VerticalAlignment="Center" HorizontalAlignment="Center">
                            <Path Width="16" Height="12" Stretch="Fill" Data="M2.9999905,8 L2.9999905,13.189775 L11,13.189775 L11,8 z M10.936987,2.9552236 L10.936987,5.1449995 L14,5.1449995 L14,8.044776 L18.937006,8.044776 L18.937006,2.9552236 z M7.936996,0 L21.936996,0 L21.936996,10.999999 L14,10.999999 L14,16.144999 L0,16.144999 L0,5.1449995 L7.936996,5.1449995 z" Fill="{DynamicResource {x:Static controls:PrimitivesBrushKeys.ToolWindowActiveCloseButtonNormalGlyphFillKey}}" SnapsToDevicePixels="True" />
                        </Grid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- *********************************  ToolWindowCloseButton Style  ********************************* -->
    <Style x:Key="ToolWindowCloseButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource ToolWindowButtonStyle}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid x:Name="root">
                        <Border x:Name="closeButtonOuterBorder" BorderThickness="1" BorderBrush="{DynamicResource {x:Static controls:PrimitivesBrushKeys.ToolWindowActiveMinMaxButtonNormalOuterBorderFillKey}}" Background="{DynamicResource {x:Static controls:PrimitivesBrushKeys.ToolWindowActiveMinMaxButtonNormalCenterFillKey}}" SnapsToDevicePixels="True">
                            <Rectangle x:Name="highlight" Stroke="{DynamicResource {x:Static controls:PrimitivesBrushKeys.ToolWindowActiveMinMaxButtonNormalInnerBorderFillKey}}" SnapsToDevicePixels="True" />
                        </Border>
                        <Grid Width="10" Height="10" VerticalAlignment="Center" HorizontalAlignment="Center">
                            <Path Width="10" Height="10" HorizontalAlignment="Center" VerticalAlignment="Center" Stroke="{DynamicResource {x:Static controls:PrimitivesBrushKeys.ToolWindowActiveCloseButtonNormalGlyphFillKey}}" StrokeThickness="2">
                                <Path.Data>
                                    <GeometryGroup>
                                        <LineGeometry StartPoint="0,0" EndPoint="10,10" />
                                        <LineGeometry StartPoint="10,0" EndPoint="0,10" />
                                    </GeometryGroup>
                                </Path.Data>
                            </Path>
                        </Grid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- *********************************  ToolWindow Style  ********************************* -->
    <Style TargetType="{x:Type controls:ToolWindow}">
        <Setter Property="FontSize" Value="12" />
        <Setter Property="FontFamily" Value="Segoe UI" />
        <Setter Property="Background" Value="{DynamicResource {x:Static controls:PrimitivesBrushKeys.ToolWindowBackgroundFillKey}}" />
        <Setter Property="BorderThickness" Value="{Binding Path=PreferredBorderThickness, RelativeSource={x:Static RelativeSource.Self}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:ToolWindow}">
                    <AdornerDecorator>
                        <Grid Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <Border x:Name="windowOuterBorder" BorderBrush="{DynamicResource {x:Static controls:PrimitivesBrushKeys.ToolWindowInactiveOuterBorderFillKey}}" BorderThickness="1,1,1,1" />
                            <Border x:Name="windowCenterBorder" Background="{DynamicResource {x:Static controls:PrimitivesBrushKeys.ToolWindowInactiveCenterFillKey}}">
                                <Grid SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                    <Grid.RowDefinitions>
                                        <RowDefinition x:Name="captionRow" Height="Auto" />
                                        <RowDefinition x:Name="contentRow" Height="*" />
                                    </Grid.RowDefinitions>
                                    <controls:CardPanel x:Name="PART_Caption" Margin="5" Background="{DynamicResource {x:Static controls:PrimitivesBrushKeys.ToolWindowInactiveCaptionFillKey}}" Visibility="{TemplateBinding CaptionVisibility}">
                                        <DockPanel x:Name="captionPanel" Margin="1">
                                            <Button Style="{StaticResource ToolWindowCloseButtonStyle}" Command="{x:Static controls:ToolWindow.CloseCommand}" HorizontalAlignment="Right" VerticalAlignment="Center" DockPanel.Dock="Right" Margin="5,3,5,3" />
                                            <Button x:Name="MaximizeButton" Style="{StaticResource ToolWindowMaximizeButtonStyle}" Command="{x:Static controls:ToolWindow.MaximizeCommand}" Visibility="{TemplateBinding MaximizeButtonVisibility}" HorizontalAlignment="Right" VerticalAlignment="Center" ToolTip="{StaticResource maximizeToolTip}" DockPanel.Dock="Right" Margin="5,3,5,3" />
                                            <Button x:Name="MinimizeButton" Style="{StaticResource ToolWindowMinimizeButtonStyle}" Command="{x:Static controls:ToolWindow.MinimizeCommand}" Visibility="{TemplateBinding MinimizeButtonVisibility}" HorizontalAlignment="Right" VerticalAlignment="Center" ToolTip="{StaticResource minimizeToolTip}" DockPanel.Dock="Right" Margin="5,3,5,3" />
                                            <TextBlock x:Name="txtCaption" Text="{TemplateBinding Title}" IsHitTestVisible="False" TextTrimming="CharacterEllipsis" Foreground="{DynamicResource {x:Static controls:PrimitivesBrushKeys.ToolWindowInactiveCaptionTextFillKey}}" FontFamily="{DynamicResource {x:Static SystemFonts.SmallCaptionFontFamilyKey}}" FontSize="{TemplateBinding FontSize}" FontStyle="{DynamicResource {x:Static SystemFonts.SmallCaptionFontStyleKey}}" FontWeight="{DynamicResource {x:Static SystemFonts.SmallCaptionFontWeightKey}}" TextDecorations="{DynamicResource {x:Static SystemFonts.SmallCaptionFontTextDecorationsKey}}" VerticalAlignment="Center" Margin="5,0,5,0" />
                                        </DockPanel>
                                    </controls:CardPanel>
                                    <!--<Rectangle Stroke="{DynamicResource {x:Static controls:PrimitivesBrushKeys.ToolWindowBackgroundFillKey}}" Opacity="0.35" Grid.Row="1" Margin="1" />-->
                                    <Grid x:Name="Content" Background="{TemplateBinding Background}" Margin="1,0,1,1" Grid.Row="1">
                                        <ContentPresenter x:Name="PART_Content" Grid.Row="1" Margin="{TemplateBinding Padding}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" ContentSource="Content" />
                                        <!-- Put the resize grip within the border so it doesn't overlap the border -->
                                        <Grid x:Name="PART_ResizeGrip" Grid.RowSpan="2" Background="Transparent" HorizontalAlignment="Right" VerticalAlignment="Bottom" Visibility="Collapsed">
                                            <!-- We need to wrap the resize grip in an element and prevent hittesting on the resize grip -->
                                            <ResizeGrip IsTabStop="False" IsHitTestVisible="False" />
                                        </Grid>
                                    </Grid>
                                </Grid>
                            </Border>
                            <Grid x:Name="resizeAreas" Visibility="Collapsed" FlowDirection="LeftToRight">
                                <controls:ToolWindowResizeElement x:Name="PART_BorderTop" BorderLocation="Top" />
                                <controls:ToolWindowResizeElement x:Name="PART_BorderLeft" BorderLocation="Left" />
                                <controls:ToolWindowResizeElement x:Name="PART_BorderBottom" BorderLocation="Bottom" />
                                <controls:ToolWindowResizeElement x:Name="PART_BorderRight" BorderLocation="Right" />

                                <controls:ToolWindowResizeElement x:Name="PART_BorderTopLeft" BorderLocation="TopLeft" />
                                <controls:ToolWindowResizeElement x:Name="PART_BorderTopRight" BorderLocation="TopRight" />
                                <controls:ToolWindowResizeElement x:Name="PART_BorderBottomLeft" BorderLocation="BottomLeft" />
                                <controls:ToolWindowResizeElement x:Name="PART_BorderBottomRight" BorderLocation="BottomRight" />
                            </Grid>
                        </Grid>
                    </AdornerDecorator>
                    <ControlTemplate.Triggers>
                        <Trigger Property="WindowState" Value="Minimized">
                            <Setter Property="Command" TargetName="MinimizeButton" Value="{x:Static controls:ToolWindow.RestoreCommand}" />
                            <Setter Property="ToolTip" TargetName="MinimizeButton" Value="{StaticResource restoreUpToolTip}" />
                            <Setter Property="Style" TargetName="MinimizeButton" Value="{StaticResource ToolWindowRestoreButtonStyle}" />
                        </Trigger>
                        <Trigger Property="WindowState" Value="Maximized">
                            <Setter Property="Command" TargetName="MaximizeButton" Value="{x:Static controls:ToolWindow.RestoreCommand}" />
                            <Setter Property="ToolTip" TargetName="MaximizeButton" Value="{StaticResource restoreDownToolTip}" />
                            <Setter Property="Style" TargetName="MaximizeButton" Value="{StaticResource ToolWindowRestoreButtonStyle}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="WindowState" Value="Minimized" />
                                <Condition Property="IsUsingOSNonClientArea" Value="False" />
                                <Condition Property="CaptionVisibility" Value="Visible" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Visibility" TargetName="PART_Content" Value="Collapsed" />
                            <Setter Property="Height" TargetName="captionRow" Value="*" />
                            <Setter Property="Height" TargetName="contentRow" Value="0" />
                            <Setter Property="Margin" TargetName="captionPanel" Value="6,0" />
                            <Setter Property="Margin" TargetName="PART_Caption" Value="1" />
                            <Setter Property="VerticalAlignment" TargetName="txtCaption" Value="Center" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="WindowState" Value="Maximized" />
                                <Condition Property="IsUsingOSNonClientArea" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Margin" TargetName="Content" Value="0" />
                            <Setter Property="Margin" TargetName="PART_Caption" Value="0" />
                        </MultiTrigger>
                        <Trigger Property="IsActive" Value="True">
                            <Setter Property="Foreground" TargetName="txtCaption" Value="{DynamicResource {x:Static controls:PrimitivesBrushKeys.ToolWindowActiveCaptionTextFillKey}}" />
                            <Setter TargetName="windowOuterBorder" Property="BorderBrush" Value="{DynamicResource {x:Static controls:PrimitivesBrushKeys.ToolWindowActiveOuterBorderFillKey}}" />
                            <Setter TargetName="windowCenterBorder" Property="Background" Value="{DynamicResource {x:Static controls:PrimitivesBrushKeys.ToolWindowActiveCenterFillKey}}" />
                            <Setter TargetName="PART_Caption" Property="Background" Value="{DynamicResource {x:Static controls:PrimitivesBrushKeys.ToolWindowActiveCaptionFillKey}}" />
                        </Trigger>
                        <!-- Do not allow resizing unless canresize or canresizewithgrip -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="ResizeMode" Value="CanResize" />
                                <Condition Property="IsUsingOSNonClientArea" Value="False" />
                                <Condition Property="WindowState" Value="Normal" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Visibility" TargetName="resizeAreas" Value="Visible" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="ResizeMode" Value="CanResizeWithGrip" />
                                <Condition Property="IsUsingOSNonClientArea" Value="False" />
                                <Condition Property="WindowState" Value="Normal" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Visibility" TargetName="resizeAreas" Value="Visible" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="ResizeMode" Value="CanResizeWithGrip" />
                                <Condition Property="WindowState" Value="Normal" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Visibility" TargetName="PART_ResizeGrip" Value="Visible" />
                        </MultiTrigger>
                        <Trigger Property="IsUsingOSNonClientArea" Value="True">
                            <Setter Property="Visibility" TargetName="PART_Caption" Value="Collapsed" />
                            <Setter Property="Margin" TargetName="Content" Value="0,0,0,0" />
                            <Setter Property="Margin" TargetName="PART_Caption" Value="0" />
                            <Setter Property="Visibility" TargetName="windowOuterBorder" Value="Collapsed" />
                            <Setter Property="Background" TargetName="windowCenterBorder" Value="Transparent" />
                            <Setter Property="Padding" TargetName="windowCenterBorder" Value="0,0,0,0" />
                            <Setter Property="Margin" TargetName="windowCenterBorder" Value="0,0,0,0" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsUsingOSNonClientArea" Value="False" />
                                <Condition Property="CaptionVisibility" Value="Collapsed" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Margin" TargetName="Content" Value="0" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsUsingOSNonClientArea" Value="False" />
                                <Condition Property="WindowState" Value="Maximized" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Margin" TargetName="windowCenterBorder" Value="0" />
                            <Setter Property="Visibility" TargetName="windowOuterBorder" Value="Collapsed" />
                            <Setter Property="Margin" TargetName="Content" Value="0" />
                            <Setter Property="Margin" TargetName="PART_Caption" Value="0" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="WindowState" Value="Minimized" />
                                <Condition Property="IsUsingOSNonClientArea" Value="False" />
                                <Condition Property="CaptionVisibility" Value="Collapsed" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Margin" TargetName="Content" Value="0" />
                            <Setter Property="Margin" TargetName="PART_Caption" Value="0" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsActive" Value="True">
                <Setter Property="BorderBrush" Value="{DynamicResource {x:Static controls:PrimitivesBrushKeys.ToolWindowActiveOuterBorderFillKey}}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- *********************************  CarouselPanelNavigator Styles  ********************************* -->
    <Style x:Key="ButtonArrowRightStyle" TargetType="{x:Type Button}" BasedOn="{x:Null}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Canvas HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="0,0,0,0" x:Name="arrowButton">
                        <Border Opacity="1" Background="{StaticResource TransparentBrush}" Width="12" Height="12">
                            <Path Opacity="0.7" Width="7" Height="12" Fill="{StaticResource ForegroundBrush}" Stretch="Fill" Data="M0,0 L7,6 L0,12 z" x:Name="Path" />
                        </Border>
                    </Canvas>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Opacity" Value="1" TargetName="Path" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Opacity" Value="0.7" TargetName="Path" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ButtonArrowLeftStyle" TargetType="{x:Type Button}" BasedOn="{x:Null}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Canvas d:LayoutOverrides="Width, Height" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="0,0,0,0" x:Name="arrowButton">
                        <Border Opacity="1" Background="{StaticResource TransparentBrush}" Width="12" Height="12">
                            <Path Opacity="0.7" Width="7" Height="12" Fill="{StaticResource ForegroundBrush}" Stretch="Fill" Data="M7,0 L7,12 L0,6 z" RenderTransformOrigin="0.5,0.5" x:Name="Path" />
                        </Border>
                    </Canvas>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Opacity" Value="1" TargetName="Path" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Opacity" Value="0.7" TargetName="Path" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ButtonDoubleArrowRightStyle" TargetType="{x:Type Button}" BasedOn="{x:Null}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Canvas x:Name="arrowEnd">
                        <Border Opacity="1" Background="{StaticResource TransparentBrush}" Width="12" Height="12">
                            <Path Opacity="0.7" Fill="{StaticResource ForegroundBrush}" Width="12" Height="12" Stretch="Fill" Data="M8,0 L12,0 L12,12 L8,12 M0,0 L7,6 L0,12 z" x:Name="Path" />
                        </Border>
                    </Canvas>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Opacity" Value="1" TargetName="Path" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Opacity" Value="0.7" TargetName="Path" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ButtonDoubleArrowLeftStyle" TargetType="{x:Type Button}" BasedOn="{x:Null}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Canvas x:Name="arrowEnd">
                        <Border Opacity="1" Background="{StaticResource TransparentBrush}" Width="12" Height="12">
                            <ItemsControl d:IsGroup="True" Width="12" Height="12" x:Name="Group" RenderTransformOrigin="0.5,0.5">
                                <ItemsControl.Template>
                                    <ControlTemplate TargetType="{x:Type ItemsControl}">
                                        <Viewbox>
                                            <Viewbox.Child>
                                                <Canvas Width="12" Height="12" IsItemsHost="True" />
                                            </Viewbox.Child>
                                        </Viewbox>
                                    </ControlTemplate>
                                </ItemsControl.Template>
                                <Path Opacity="0.7" Fill="{StaticResource ForegroundBrush}" Width="12" Height="12" Stretch="Fill" Data="M0,0 L4,0 L4,12 L0,12 M12,0 L12,12 L5,6 z" x:Name="Path" />
                            </ItemsControl>
                        </Border>
                    </Canvas>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Opacity" Value="1" TargetName="Path" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Opacity" Value="0.7" TargetName="Path" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type controls:CarouselPanelNavigator}">
        <Setter Property="HorizontalAlignment" Value="Right" />
        <Setter Property="VerticalAlignment" Value="Bottom" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:CarouselPanelNavigator}">
                    <Grid HorizontalAlignment="Right" VerticalAlignment="Bottom" Margin="0,0,4,4" x:Name="navGrid" RenderTransformOrigin="0.5,0.5" SnapsToDevicePixels="True">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <Grid.RenderTransform>
                            <TransformGroup>
                                <TranslateTransform X="0" Y="0" />
                                <ScaleTransform ScaleX="1" ScaleY="1" />
                                <SkewTransform AngleX="0" AngleY="0" />
                                <RotateTransform Angle="0" />
                                <TranslateTransform X="0" Y="0" />
                                <TranslateTransform X="0" Y="0" />
                            </TransformGroup>
                        </Grid.RenderTransform>
                        <Rectangle Fill="{StaticResource ExpanderBarBackgroundBrush}" Stroke="{StaticResource ExpanderBarBorderBrush}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="0,0,0,0" Width="Auto" Height="Auto" x:Name="Rectangle1" />
                        <Grid HorizontalAlignment="Center" VerticalAlignment="Center" Width="108" Height="31" x:Name="gridButtons">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition />
                            </Grid.RowDefinitions>
                            <Button x:Name="navigateLineRight" Style="{StaticResource ButtonArrowRightStyle}" HorizontalAlignment="Right" Command="{x:Static controls:XamCarouselPanelCommands.NavigateToNextItem}" CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=CarouselPanel}" Margin="0,0,24,0" Width="24" d:LayoutOverrides="Height" VerticalAlignment="Center" Height="12" Canvas.Left="51.5027555076267" Canvas.Top="0">
                                <Button.RenderTransform>
                                    <TransformGroup>
                                        <TranslateTransform X="0" Y="0" />
                                        <ScaleTransform ScaleX="1" ScaleY="1" />
                                        <SkewTransform AngleX="0" AngleY="0" />
                                        <RotateTransform Angle="0" />
                                        <TranslateTransform X="0" Y="0" />
                                        <TranslateTransform X="0" Y="0" />
                                    </TransformGroup>
                                </Button.RenderTransform>
                            </Button>
                            <Button x:Name="navigatePageRight" d:LayoutOverrides="Width" Style="{StaticResource ButtonDoubleArrowRightStyle}" Command="{x:Static controls:XamCarouselPanelCommands.NavigateToNextPage}" CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=CarouselPanel}" HorizontalAlignment="Right" VerticalAlignment="Center" Margin="0,0,0,0" Width="24" Height="12" Canvas.Left="76.0445939324419" Canvas.Top="0" RenderTransformOrigin="0.5,0.5">
                                <Button.RenderTransform>
                                    <TransformGroup>
                                        <TranslateTransform X="0" Y="0" />
                                        <ScaleTransform ScaleX="1" ScaleY="1" />
                                        <SkewTransform AngleX="0" AngleY="0" />
                                        <RotateTransform Angle="0" />
                                        <TranslateTransform X="0" Y="0" />
                                        <TranslateTransform X="0" Y="0" />
                                    </TransformGroup>
                                </Button.RenderTransform>
                            </Button>
                            <Button x:Name="navigateLineLeft" d:LayoutOverrides="HorizontalAlignment" Style="{StaticResource ButtonArrowLeftStyle}" Command="{x:Static controls:XamCarouselPanelCommands.NavigateToPreviousItem}" CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=CarouselPanel}" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="36,0,0,0" Width="24" Height="12" Canvas.Left="18.7709176140105" Canvas.Top="0">
                                <Button.RenderTransform>
                                    <TransformGroup>
                                        <TranslateTransform X="0" Y="0" />
                                        <ScaleTransform ScaleX="1" ScaleY="1" />
                                        <SkewTransform AngleX="0" AngleY="0" />
                                        <RotateTransform Angle="0" />
                                        <TranslateTransform X="0" Y="0" />
                                        <TranslateTransform X="0" Y="0" />
                                    </TransformGroup>
                                </Button.RenderTransform>
                            </Button>
                            <Button x:Name="navigatePageLeft" d:LayoutOverrides="Width" Style="{StaticResource ButtonDoubleArrowLeftStyle}" Command="{x:Static controls:XamCarouselPanelCommands.NavigateToPreviousPage}" CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=CarouselPanel}" HorizontalAlignment="Left" Margin="12,0,0,0" Width="24" Height="12" VerticalAlignment="Center" Canvas.Left="-4.95" Canvas.Top="0" RenderTransformOrigin="0.5,0.5">
                                <Button.RenderTransform>
                                    <TransformGroup>
                                        <TranslateTransform X="0" Y="0" />
                                        <ScaleTransform ScaleX="1" ScaleY="1" />
                                        <SkewTransform AngleX="0" AngleY="0" />
                                        <RotateTransform Angle="0" />
                                        <TranslateTransform X="0" Y="0" />
                                        <TranslateTransform X="0" Y="0" />
                                    </TransformGroup>
                                </Button.RenderTransform>
                            </Button>
                        </Grid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- *********************************  PagerScrollButtonBaseStyle Style  ********************************* -->
    <Style TargetType="{x:Type RepeatButton}" x:Key="PagerScrollButtonBaseStyle">
        <Setter Property="Focusable" Value="False" />
        <!--<Setter Property="BorderBrush" Value="{StaticResource PagerBorderBrush}" />
        <Setter Property="Background" Value="{StaticResource PagerBackgroundBrush}" />
        <Setter Property="BorderThickness" Value="1" />-->
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <!--<Setter Property="MinWidth" Value="22" />
        <Setter Property="MinHeight" Value="22" />-->
        <Setter Property="Padding" Value="3" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Grid>
                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="0">
                            <ContentPresenter x:Name="Arrow" Margin="{TemplateBinding Padding}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Opacity="{TemplateBinding Opacity}" />
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Opacity" Value="0.7" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Opacity" Value="1" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Opacity" Value="1" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.3" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- *********************************  ScrollLeftButton Style  ********************************* -->
    <!--<Style x:Key="{x:Static controls:XamTabControl.ScrollLeftButtonStyleKey}" TargetType="{x:Type RepeatButton}" BasedOn="{StaticResource PagerScrollButtonBaseStyle}">
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Grid Width="4" Height="7">
                        <Path Width="4" Height="7" Data="M4,0 L4,7 L0,4 z" Fill="{DynamicResource {x:Static controls:PrimitivesBrushKeys.XamPagerButtonGlyphFillKey}}" Stretch="Fill" />
                    </Grid>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>-->

    <!-- *********************************  ScrollRightButton Style  ********************************* -->
    <!--<Style x:Key="{x:Static controls:XamTabControl.ScrollRightButtonStyleKey}" TargetType="{x:Type RepeatButton}" BasedOn="{StaticResource PagerScrollButtonBaseStyle}">
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Grid Width="4" Height="7">
                        <Path Width="4" Height="7" Data="M0,0 L0,7 L4,4 z" Fill="{DynamicResource {x:Static controls:PrimitivesBrushKeys.XamPagerButtonGlyphFillKey}}" Stretch="Fill" />
                    </Grid>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>-->

    <!-- *********************************  ScrollUpButton Style  ********************************* -->
    <!--<Style x:Key="{x:Static controls:XamTabControl.ScrollUpButtonStyleKey}" TargetType="{x:Type RepeatButton}" BasedOn="{StaticResource PagerScrollButtonBaseStyle}">
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Grid Width="7" Height="4">
                        <Path Width="Auto" Height="Auto" Data="M0,4 L7,4 L4,0 z" Fill="{DynamicResource {x:Static controls:PrimitivesBrushKeys.XamPagerButtonGlyphFillKey}}" Stretch="Fill" />
                    </Grid>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>-->

    <!-- *********************************  ScrollDownButton Style  ********************************* -->
    <!--<Style x:Key="{x:Static controls:XamTabControl.ScrollDownButtonStyleKey}" TargetType="{x:Type RepeatButton}" BasedOn="{StaticResource PagerScrollButtonBaseStyle}">
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Grid Width="7" Height="4">
                        <Path Data="M0,0 L7,0 L4,4 z" Fill="{DynamicResource {x:Static controls:PrimitivesBrushKeys.XamPagerButtonGlyphFillKey}}" Stretch="Fill" />
                    </Grid>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>-->


    <Style x:Key="{x:Static controls:XamTabControl.ScrollLeftButtonStyleKey}" TargetType="{x:Type RepeatButton}" BasedOn="{StaticResource PagerScrollBtnBase}">
        <Setter Property="Content" Value="M4,0 L4,7 L0,4 z"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="15" Height="Auto" >
                        <Border x:Name="border1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="Auto" Height="Auto" Background="{StaticResource PagerBackgroundBrush}" BorderBrush="{StaticResource PagerBorderBrush}" BorderThickness="1" SnapsToDevicePixels="True"/>
                        <Path Fill="{DynamicResource {x:Static controls:PrimitivesBrushKeys.XamPagerButtonGlyphFillKey}}" SnapsToDevicePixels="True" HorizontalAlignment="Center" Margin="0,8,1,8" VerticalAlignment="Center" Stretch="None" Data="{Binding Path=Content, RelativeSource={RelativeSource TemplatedParent}}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border1" Property="Background" Value="{StaticResource ListboxItemHoverBackgroundBrush}"/>
                            <Setter TargetName="border1" Property="BorderBrush" Value="{StaticResource ListboxItemPressedBorderBrush}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="border1" Property="Background" Value="{StaticResource ListboxItemPressedBackgroundBrush}"/>
                            <Setter TargetName="border1" Property="BorderBrush" Value="{StaticResource ListboxItemPressedBorderBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Static controls:XamTabControl.ScrollRightButtonStyleKey}" TargetType="{x:Type RepeatButton}" BasedOn="{StaticResource PagerScrollBtnBase}">
        <Setter Property="Content" Value="M0,0 L0,7 L4,4 z"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="15" Height="Auto" >
                        <Border x:Name="border1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="Auto" Height="Auto" Background="{StaticResource PagerBackgroundBrush}" BorderBrush="{StaticResource PagerBorderBrush}" BorderThickness="1" SnapsToDevicePixels="True"/>
                        <Path Fill="{DynamicResource {x:Static controls:PrimitivesBrushKeys.XamPagerButtonGlyphFillKey}}" SnapsToDevicePixels="True" HorizontalAlignment="Center" Margin="0,8,0,8" VerticalAlignment="Center" Stretch="None" Data="{Binding Path=Content, RelativeSource={RelativeSource TemplatedParent}}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border1" Property="Background" Value="{StaticResource ListboxItemHoverBackgroundBrush}"/>
                            <Setter TargetName="border1" Property="BorderBrush" Value="{StaticResource ListboxItemPressedBorderBrush}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="border1" Property="Background" Value="{StaticResource ListboxItemPressedBackgroundBrush}"/>
                            <Setter TargetName="border1" Property="BorderBrush" Value="{StaticResource ListboxItemPressedBorderBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Static controls:XamTabControl.ScrollUpButtonStyleKey}" TargetType="{x:Type RepeatButton}" BasedOn="{StaticResource {x:Static controls:XamTabControl.ScrollLeftButtonStyleKey}}">
        <Setter Property="Content" Value="M0,4 L7,4 L4,0 z"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="Auto" Height="15">
                        <Border x:Name="border1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="Auto" Height="Auto" Background="{StaticResource PagerBackgroundBrush}" BorderBrush="{StaticResource PagerBorderBrush}" BorderThickness="1" SnapsToDevicePixels="True"/>
                        <Path Fill="{DynamicResource {x:Static controls:PrimitivesBrushKeys.XamPagerButtonGlyphFillKey}}" SnapsToDevicePixels="True" HorizontalAlignment="Center" Margin="8,0,8,0" VerticalAlignment="Center" Stretch="None" Data="{Binding Path=Content, RelativeSource={RelativeSource TemplatedParent}}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border1" Property="Background" Value="{StaticResource ListboxItemHoverBackgroundBrush}"/>
                            <Setter TargetName="border1" Property="BorderBrush" Value="{StaticResource ListboxItemPressedBorderBrush}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="border1" Property="Background" Value="{StaticResource ListboxItemPressedBackgroundBrush}"/>
                            <Setter TargetName="border1" Property="BorderBrush" Value="{StaticResource ListboxItemPressedBorderBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Static controls:XamTabControl.ScrollDownButtonStyleKey}" TargetType="{x:Type RepeatButton}" BasedOn="{StaticResource {x:Static controls:XamTabControl.ScrollRightButtonStyleKey}}">
        <Setter Property="Content" Value="M0,0 L7,0 L4,4 z"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Height="15" Width="Auto" >
                        <Border x:Name="border1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="Auto" Height="Auto" Background="{StaticResource PagerBackgroundBrush}" BorderBrush="{StaticResource PagerBorderBrush}" BorderThickness="1" SnapsToDevicePixels="True"/>
                        <Path Fill="{DynamicResource {x:Static controls:PrimitivesBrushKeys.XamPagerButtonGlyphFillKey}}" SnapsToDevicePixels="True" HorizontalAlignment="Center" Margin="8,0,8,0"  VerticalAlignment="Center" Stretch="None" Data="{Binding Path=Content, RelativeSource={RelativeSource TemplatedParent}}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border1" Property="Background" Value="{StaticResource ListboxItemHoverBackgroundBrush}"/>
                            <Setter TargetName="border1" Property="BorderBrush" Value="{StaticResource ListboxItemPressedBorderBrush}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="border1" Property="Background" Value="{StaticResource ListboxItemPressedBackgroundBrush}"/>
                            <Setter TargetName="border1" Property="BorderBrush" Value="{StaticResource ListboxItemPressedBorderBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- *********************************  CloseButton Style  ********************************* -->
    <Style x:Key="{x:Static controls:XamTabControl.CloseButtonStyleKey}" TargetType="{x:Type Button}">
        <Setter Property="ToolTip" Value="{x:Static igWindowsBase:ResourcesWindows.CloseButtonToolTip}" />
        <Setter Property="Foreground" Value="{DynamicResource {x:Static controls:PrimitivesBrushKeys.ToolWindowActiveCloseButtonNormalGlyphFillKey}}" />
        <Setter Property="Width" Value="10" />
        <Setter Property="Height" Value="10" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid SnapsToDevicePixels="True">
                        <Border x:Name="closeButtonOuterBorder" BorderThickness="0" BorderBrush="{DynamicResource {x:Static controls:PrimitivesBrushKeys.ToolWindowNotActiveCloseButtonNormalCenterFillKey}}" CornerRadius="0" />
                        <Border x:Name="closeButtonCenter" Background="{DynamicResource {x:Static controls:PrimitivesBrushKeys.ToolWindowActiveCloseButtonNormalCenterFillKey}}">
                            <Path x:Name="closeGlyph" Width="6" Height="6" HorizontalAlignment="Center" VerticalAlignment="Center" Stroke="{TemplateBinding Foreground}" StrokeThickness="2" Opacity="0.7">
                                <Path.Data>
                                    <GeometryGroup>
                                        <LineGeometry StartPoint="0,0" EndPoint="6,6" />
                                        <LineGeometry StartPoint="6,0" EndPoint="0,6" />
                                    </GeometryGroup>
                                </Path.Data>
                            </Path>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="closeButtonCenter" Property="Background" Value="{DynamicResource {x:Static controls:PrimitivesBrushKeys.ToolWindowActiveCloseButtonHottrackCenterFillKey}}" />
                            <Setter TargetName="closeGlyph" Property="Opacity" Value="1" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="closeButtonCenter" Property="Background" Value="{DynamicResource {x:Static controls:PrimitivesBrushKeys.ToolWindowActiveCloseButtonPressedCenterFillKey}}" />
                            <Setter TargetName="closeGlyph" Property="Opacity" Value="0.7" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- *********************************  SingleRowTabItemPager Style  ********************************* -->
    <Style x:Key="{x:Static controls:XamTabControl.SingleRowTabItemPagerStyleKey}" TargetType="{x:Type controls:XamPager}">
        <Setter Property="ScrollDownButtonStyle" Value="{DynamicResource {x:Static controls:XamTabControl.ScrollDownButtonStyleKey}}" />
        <Setter Property="ScrollLeftButtonStyle" Value="{DynamicResource {x:Static controls:XamTabControl.ScrollLeftButtonStyleKey}}" />
        <Setter Property="ScrollRightButtonStyle" Value="{DynamicResource {x:Static controls:XamTabControl.ScrollRightButtonStyleKey}}" />
        <Setter Property="ScrollUpButtonStyle" Value="{DynamicResource {x:Static controls:XamTabControl.ScrollUpButtonStyleKey}}" />
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:XamPager}">
                    <Grid d:IsHidden="True">
                        <Grid.RowDefinitions>
                            <RowDefinition x:Name="row1" Height="Auto" />
                            <RowDefinition x:Name="row2" Height="Auto" />
                            <RowDefinition x:Name="row3" Height="Auto" />
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition x:Name="col1" Width="Auto" />
                            <ColumnDefinition x:Name="col2" Width="Auto" />
                            <ColumnDefinition x:Name="col3" Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <controls:PagerContentPresenter x:Name="PART_PagerContentPresenter" ReserveSpaceForScrollButtons="False" CanContentScroll="True" />
                        <RepeatButton x:Name="PART_ScrollLeft" Style="{TemplateBinding ScrollLeftButtonStyle}" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}" Command="{x:Static ScrollBar.LineLeftCommand}" />
                        <RepeatButton x:Name="PART_ScrollUp" Style="{TemplateBinding ScrollUpButtonStyle}" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}" Command="{x:Static ScrollBar.LineUpCommand}" />
                        <RepeatButton x:Name="PART_ScrollRight" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Style="{TemplateBinding ScrollRightButtonStyle}" CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}" Command="{x:Static ScrollBar.LineRightCommand}" />
                        <RepeatButton x:Name="PART_ScrollDown" Style="{TemplateBinding ScrollDownButtonStyle}" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}" Command="{x:Static ScrollBar.LineDownCommand}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource FindAncestor, {x:Type controls:XamTabControl}, 1}, Path=TabStripPlacement}" Value="Top">
                            <Setter Property="Grid.Row" TargetName="PART_ScrollLeft" Value="1" />
                            <Setter Property="Grid.Column" TargetName="PART_ScrollLeft" Value="1" />
                            <Setter Property="Margin" TargetName="PART_ScrollLeft" Value="3,0,1,2" />
                            <Setter Property="Grid.Row" TargetName="PART_ScrollRight" Value="1" />
                            <Setter Property="Grid.Column" TargetName="PART_ScrollRight" Value="2" />
                            <Setter Property="Margin" TargetName="PART_ScrollRight" Value="1,0,1,2" />
                            <Setter Property="Grid.RowSpan" TargetName="PART_PagerContentPresenter" Value="3" />
                            <Setter Property="Width" TargetName="col1" Value="*" />
                            <Setter Property="Height" TargetName="row1" Value="*" />
                            <Setter Property="ClipContentVertically" TargetName="PART_PagerContentPresenter" Value="False" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource FindAncestor, {x:Type controls:XamTabControl}, 1}, Path=TabStripPlacement}" Value="Bottom">
                            <Setter Property="Grid.Row" TargetName="PART_ScrollLeft" Value="0" />
                            <Setter Property="Grid.Column" TargetName="PART_ScrollLeft" Value="1" />
                            <Setter Property="Margin" TargetName="PART_ScrollLeft" Value="3,2,1,0" />
                            <Setter Property="Grid.Row" TargetName="PART_ScrollRight" Value="0" />
                            <Setter Property="Grid.Column" TargetName="PART_ScrollRight" Value="2" />
                            <Setter Property="Margin" TargetName="PART_ScrollRight" Value="1,2,1,0" />
                            <Setter Property="Grid.RowSpan" TargetName="PART_PagerContentPresenter" Value="3" />
                            <Setter Property="Width" TargetName="col1" Value="*" />
                            <Setter Property="Height" TargetName="row3" Value="*" />
                            <Setter Property="ClipContentVertically" TargetName="PART_PagerContentPresenter" Value="False" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource FindAncestor, {x:Type controls:XamTabControl}, 1}, Path=TabStripPlacement}" Value="Left">
                            <Setter Property="Grid.Row" TargetName="PART_ScrollUp" Value="1" />
                            <Setter Property="Grid.Column" TargetName="PART_ScrollUp" Value="1" />
                            <Setter Property="Margin" TargetName="PART_ScrollUp" Value="0,3,2,1" />
                            <Setter Property="Grid.Row" TargetName="PART_ScrollDown" Value="2" />
                            <Setter Property="Grid.Column" TargetName="PART_ScrollDown" Value="1" />
                            <Setter Property="Margin" TargetName="PART_ScrollDown" Value="0,1,2,1" />
                            <Setter Property="Grid.ColumnSpan" TargetName="PART_PagerContentPresenter" Value="2" />
                            <Setter Property="Height" TargetName="row1" Value="*" />
                            <Setter Property="Width" TargetName="col1" Value="*" />
                            <Setter Property="Width" TargetName="col3" Value="0" />
                            <Setter Property="ClipContentHorizontally" TargetName="PART_PagerContentPresenter" Value="False" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource FindAncestor, {x:Type controls:XamTabControl}, 1}, Path=TabStripPlacement}" Value="Right">
                            <Setter Property="Grid.Row" TargetName="PART_ScrollUp" Value="1" />
                            <Setter Property="Grid.Column" TargetName="PART_ScrollUp" Value="0" />
                            <Setter Property="Margin" TargetName="PART_ScrollUp" Value="2,3,0,1" />
                            <Setter Property="Grid.Row" TargetName="PART_ScrollDown" Value="2" />
                            <Setter Property="Grid.Column" TargetName="PART_ScrollDown" Value="0" />
                            <Setter Property="Margin" TargetName="PART_ScrollDown" Value="2,1,0,1" />
                            <Setter Property="Grid.ColumnSpan" TargetName="PART_PagerContentPresenter" Value="2" />
                            <Setter Property="Height" TargetName="row1" Value="*" />
                            <Setter Property="Width" TargetName="col2" Value="*" />
                            <Setter Property="Width" TargetName="col3" Value="0" />
                            <Setter Property="ClipContentHorizontally" TargetName="PART_PagerContentPresenter" Value="False" />
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- *********************************  MultiRowTabItemPager Style  ********************************* -->
    <Style x:Key="{x:Static controls:XamTabControl.MultiRowTabItemPagerStyleKey}" TargetType="{x:Type controls:XamPager}">
        <Setter Property="ScrollDownButtonStyle" Value="{DynamicResource {x:Static controls:XamTabControl.ScrollDownButtonStyleKey}}" />
        <Setter Property="ScrollLeftButtonStyle" Value="{DynamicResource {x:Static controls:XamTabControl.ScrollLeftButtonStyleKey}}" />
        <Setter Property="ScrollRightButtonStyle" Value="{DynamicResource {x:Static controls:XamTabControl.ScrollRightButtonStyleKey}}" />
        <Setter Property="ScrollUpButtonStyle" Value="{DynamicResource {x:Static controls:XamTabControl.ScrollUpButtonStyleKey}}" />
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:XamPager}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition x:Name="row1" Height="Auto" />
                            <RowDefinition x:Name="row2" Height="Auto" />
                            <RowDefinition x:Name="row3" Height="Auto" />
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition x:Name="col1" Width="Auto" />
                            <ColumnDefinition x:Name="col2" Width="Auto" />
                            <ColumnDefinition x:Name="col3" Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <controls:PagerContentPresenter x:Name="PART_PagerContentPresenter" ReserveSpaceForScrollButtons="False" CanContentScroll="True" />
                        <RepeatButton x:Name="PART_ScrollLeft" Style="{TemplateBinding ScrollLeftButtonStyle}" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}" Command="{x:Static ScrollBar.LineLeftCommand}">
                        </RepeatButton>
                        <RepeatButton x:Name="PART_ScrollUp" Style="{TemplateBinding ScrollUpButtonStyle}" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}" Command="{x:Static ScrollBar.LineUpCommand}" />
                        <RepeatButton x:Name="PART_ScrollRight" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Style="{TemplateBinding ScrollRightButtonStyle}" CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}" Command="{x:Static ScrollBar.LineRightCommand}">
                        </RepeatButton>
                        <RepeatButton x:Name="PART_ScrollDown" Style="{TemplateBinding ScrollDownButtonStyle}" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}" Command="{x:Static ScrollBar.LineDownCommand}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource FindAncestor, {x:Type controls:XamTabControl}, 1}, Path=TabStripPlacement}" Value="Top">
                            <Setter Property="Grid.Row" TargetName="PART_ScrollUp" Value="1" />
                            <Setter Property="Grid.Column" TargetName="PART_ScrollUp" Value="1" />
                            <Setter Property="Margin" TargetName="PART_ScrollUp" Value="3,0,0,1" />
                            <Setter Property="Grid.Row" TargetName="PART_ScrollDown" Value="2" />
                            <Setter Property="Grid.Column" TargetName="PART_ScrollDown" Value="1" />
                            <Setter Property="Margin" TargetName="PART_ScrollDown" Value="3,1,0,3" />
                            <Setter Property="Grid.RowSpan" TargetName="PART_PagerContentPresenter" Value="3" />
                            <Setter Property="Width" TargetName="col3" Value="0" />
                            <Setter Property="Width" TargetName="col1" Value="*" />
                            <Setter Property="Height" TargetName="row1" Value="*" />
                            <Setter Property="ClipContentVertically" TargetName="PART_PagerContentPresenter" Value="False" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource FindAncestor, {x:Type controls:XamTabControl}, 1}, Path=TabStripPlacement}" Value="Bottom">
                            <Setter Property="Grid.Row" TargetName="PART_ScrollUp" Value="0" />
                            <Setter Property="Grid.Column" TargetName="PART_ScrollUp" Value="1" />
                            <Setter Property="Margin" TargetName="PART_ScrollUp" Value="3,3,0,1" />
                            <Setter Property="Grid.Row" TargetName="PART_ScrollDown" Value="1" />
                            <Setter Property="Grid.Column" TargetName="PART_ScrollDown" Value="1" />
                            <Setter Property="Margin" TargetName="PART_ScrollDown" Value="3,1,0,0" />
                            <Setter Property="Grid.RowSpan" TargetName="PART_PagerContentPresenter" Value="3" />
                            <Setter Property="Width" TargetName="col3" Value="0" />
                            <Setter Property="Width" TargetName="col1" Value="*" />
                            <Setter Property="Height" TargetName="row3" Value="*" />
                            <Setter Property="ClipContentVertically" TargetName="PART_PagerContentPresenter" Value="False" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource FindAncestor, {x:Type controls:XamTabControl}, 1}, Path=TabStripPlacement}" Value="Left">
                            <Setter Property="Grid.Row" TargetName="PART_ScrollLeft" Value="0" />
                            <Setter Property="Grid.Column" TargetName="PART_ScrollLeft" Value="1" />
                            <Setter Property="Margin" TargetName="PART_ScrollLeft" Value="0,0,1,3" />
                            <Setter Property="Grid.Row" TargetName="PART_ScrollRight" Value="0" />
                            <Setter Property="Grid.Column" TargetName="PART_ScrollRight" Value="2" />
                            <Setter Property="Margin" TargetName="PART_ScrollRight" Value="1,0,3,3" />
                            <Setter Property="Grid.Row" TargetName="PART_PagerContentPresenter" Value="1" />
                            <Setter Property="Grid.ColumnSpan" TargetName="PART_PagerContentPresenter" Value="3" />
                            <Setter Property="Height" TargetName="row3" Value="0" />
                            <Setter Property="Height" TargetName="row2" Value="*" />
                            <Setter Property="Width" TargetName="col1" Value="*" />
                            <Setter Property="ClipContentHorizontally" TargetName="PART_PagerContentPresenter" Value="False" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource FindAncestor, {x:Type controls:XamTabControl}, 1}, Path=TabStripPlacement}" Value="Right">
                            <Setter Property="Grid.Row" TargetName="PART_ScrollLeft" Value="1" />
                            <Setter Property="Grid.Column" TargetName="PART_ScrollLeft" Value="0" />
                            <Setter Property="Margin" TargetName="PART_ScrollLeft" Value="3,3,1,0" />
                            <Setter Property="Grid.Row" TargetName="PART_ScrollRight" Value="1" />
                            <Setter Property="Grid.Column" TargetName="PART_ScrollRight" Value="1" />
                            <Setter Property="Margin" TargetName="PART_ScrollRight" Value="1,3,0,0" />
                            <Setter Property="Grid.Row" TargetName="PART_PagerContentPresenter" Value="0" />
                            <Setter Property="Grid.ColumnSpan" TargetName="PART_PagerContentPresenter" Value="3" />
                            <Setter Property="Height" TargetName="row3" Value="0" />
                            <Setter Property="Height" TargetName="row1" Value="*" />
                            <Setter Property="Width" TargetName="col3" Value="*" />
                            <Setter Property="ClipContentHorizontally" TargetName="PART_PagerContentPresenter" Value="False" />
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- *********************************  XamTabControl Style  ********************************* -->
    <Style TargetType="{x:Type controls:XamTabControl}">
        <Setter Property="FontSize" Value="12" />
        <Setter Property="FontFamily" Value="Segoe UI" />
        <Setter Property="Padding" Value="4" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="BorderBrush" Value="{DynamicResource {x:Static controls:PrimitivesBrushKeys.TabItemIsSelectedOuterBorderFillKey}}" />
        <Setter Property="Background" Value="{DynamicResource {x:Static controls:PrimitivesBrushKeys.TabContentBackgroundFillKey}}" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:XamTabControl}">
                    <Grid ClipToBounds="True" SnapsToDevicePixels="True" KeyboardNavigation.TabNavigation="Local">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition x:Name="gridCol0" />
                            <ColumnDefinition Width="0" x:Name="gridCol1" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" x:Name="gridRow0" />
                            <RowDefinition Height="*" x:Name="gridRow1" />
                        </Grid.RowDefinitions>
                        <Border BorderBrush="{TemplateBinding BorderBrush}" x:Name="ContentPanel" KeyboardNavigation.TabIndex="2" KeyboardNavigation.TabNavigation="Local" KeyboardNavigation.DirectionalNavigation="Contained" Grid.Row="1" Visibility="Visible" Margin="0,-1,0,0" Background="{TemplateBinding Background}">
                            <Border BorderThickness="{TemplateBinding Border.BorderThickness}" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" Margin="0,1,0,0">
                                <Border CornerRadius="0">
                                    <ContentPresenter ContentSource="SelectedContent" Margin="{TemplateBinding Control.Padding}" Height="{TemplateBinding TabItemContentHeight}" Name="PART_SelectedContentHost" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                                </Border>
                            </Border>
                        </Border>
                        <DockPanel x:Name="PART_HeaderArea" Panel.ZIndex="1" KeyboardNavigation.TabIndex="1" KeyboardNavigation.TabNavigation="Local" Background="{TemplateBinding Background}">
                            <ContentPresenter x:Name="PreTabItemContent" DockPanel.Dock="Left" ContentSource="PreTabItemContent" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                            <Button x:Name="CloseButton" DockPanel.Dock="Right" Command="controls:TabControlCommands.CloseSelected" CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}" Visibility="Collapsed" Style="{DynamicResource {x:Static controls:XamTabControl.CloseButtonStyleKey}}" />
                            <ContentPresenter x:Name="PostTabItemContent" DockPanel.Dock="Right" ContentSource="PostTabItemContent" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                            <controls:XamPager x:Name="PART_TabItemScrollViewer" Style="{DynamicResource {x:Static controls:XamTabControl.SingleRowTabItemPagerStyleKey}}" CanContentScroll="True" ScrollViewer.VerticalScrollBarVisibility="{TemplateBinding TabItemVerticalScrollBarVisibility}" ScrollViewer.HorizontalScrollBarVisibility="{TemplateBinding TabItemHorizontalScrollBarVisibility}">
                                <ItemsPresenter x:Name="PART_TabHeaderPanel" Margin="2,2,1,0" />
                            </controls:XamPager>
                        </DockPanel>
                        <Popup x:Name="PART_Popup" StaysOpen="False" Width="{TemplateBinding PreferredDropDownExtent}" IsOpen="{Binding Path=IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}" CustomPopupPlacementCallback="{TemplateBinding PreferredDropDownPlacementCallback}" Placement="Custom" AllowsTransparency="True" PopupAnimation="{Binding Path=DropDownAnimation, RelativeSource={RelativeSource TemplatedParent}}">
                            <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0,0,1,1" KeyboardNavigation.TabIndex="2" KeyboardNavigation.TabNavigation="Local" KeyboardNavigation.DirectionalNavigation="Contained">
                                <Border BorderBrush="{TemplateBinding Border.BorderBrush}" BorderThickness="{TemplateBinding Border.BorderThickness}">
                                    <Border Background="{TemplateBinding Panel.Background}">
                                        <ContentPresenter ContentSource="SelectedContent" Margin="{TemplateBinding Control.Padding}" Height="{TemplateBinding TabItemContentHeight}" Name="PART_SelectedContentHostMinimized" HorizontalAlignment="{Binding ElementName=PART_SelectedContentHost, Path=HorizontalAlignment}" VerticalAlignment="{Binding ElementName=PART_SelectedContentHost, Path=VerticalAlignment}" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" ContentTemplateSelector="{TemplateBinding TabControl.SelectedContentTemplateSelector}" ContentTemplate="{TemplateBinding TabControl.SelectedContentTemplate}" Content="{x:Null}" />
                                    </Border>
                                </Border>
                            </Border>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="ShowTabHeaderCloseButton" Value="True">
                            <Setter Property="Visibility" TargetName="CloseButton" Value="Visible" />
                        </Trigger>
                        <Trigger Property="TabControl.TabStripPlacement" Value="Top">
                            <Setter Property="Width" TargetName="PART_Popup" Value="{Binding Path=PreferredDropDownExtent, RelativeSource={x:Static RelativeSource.TemplatedParent}}" />
                            <Setter TargetName="CloseButton" Property="Margin" Value="3,1,3,0" />
                            <Setter TargetName="PreTabItemContent" Property="VerticalAlignment" Value="Bottom" />
                            <Setter TargetName="PostTabItemContent" Property="VerticalAlignment" Value="Bottom" />
                            <Setter TargetName="PostTabItemContent" Property="Margin" Value="3,0,3,4"/>
                            <Setter TargetName="PreTabItemContent" Property="Margin" Value="3,0,3,4"/>
                            <Setter Property="FrameworkElement.Margin" TargetName="PART_TabHeaderPanel" Value="7,1,7,0"/>
                        </Trigger>
                        <Trigger Property="TabControl.TabStripPlacement" Value="Bottom">
                            <Setter TargetName="CloseButton" Property="Margin" Value="3,1,3,0"/>
                            <Setter TargetName="PostTabItemContent" Property="Margin" Value="3,5,3,2"/>
                            <Setter TargetName="PreTabItemContent" Property="Margin" Value="3,5,3,2"/>
                            <Setter Property="Grid.Row" TargetName="PART_HeaderArea" Value="1" />
                            <Setter Property="Grid.Row" TargetName="ContentPanel" Value="0" />
                            <Setter Property="Height" TargetName="gridRow0" Value="*" />
                            <Setter Property="Height" TargetName="gridRow1" Value="Auto" />
                            <Setter Property="Width" TargetName="PART_Popup" Value="{Binding Path=PreferredDropDownExtent, RelativeSource={x:Static RelativeSource.TemplatedParent}}" />
                            <Setter Property="FrameworkElement.Margin" TargetName="PART_TabHeaderPanel" Value="7,0,7,1"/>
                        </Trigger>
                        <Trigger Property="TabControl.TabStripPlacement" Value="Left">
                            <Setter TargetName="PostTabItemContent" Property="Margin" Value="5,3,4,3"/>
                            <Setter TargetName="PreTabItemContent" Property="Margin" Value="5,3,4,3"/>
                            <Setter Property="Margin" TargetName="CloseButton" Value="0,0,4,3" />
                            <Setter Property="DockPanel.Dock" TargetName="CloseButton" Value="Bottom" />
                            <Setter Property="HorizontalAlignment" TargetName="CloseButton" Value="Right" />
                            <Setter Property="Grid.Row" TargetName="PART_HeaderArea" Value="1" />
                            <Setter Property="Grid.Column" TargetName="ContentPanel" Value="1" />
                            <Setter Property="Height" TargetName="gridRow0" Value="0" />
                            <Setter Property="Width" TargetName="gridCol0" Value="Auto" />
                            <Setter Property="Width" TargetName="gridCol1" Value="*" />
                            <Setter Property="DockPanel.Dock" TargetName="PreTabItemContent" Value="Top" />
                            <Setter Property="DockPanel.Dock" TargetName="PostTabItemContent" Value="Bottom" />
                            <Setter Property="Height" TargetName="PART_Popup" Value="{Binding Path=PreferredDropDownExtent, RelativeSource={x:Static RelativeSource.TemplatedParent}}" />
                            <Setter Property="FrameworkElement.Margin" TargetName="PART_TabHeaderPanel" Value="1,7,0,7"/>
                        </Trigger>
                        <Trigger Property="TabControl.TabStripPlacement" Value="Right">
                            <Setter TargetName="PostTabItemContent" Property="Margin" Value="4,3,4,3"/>
                            <Setter TargetName="PreTabItemContent" Property="Margin" Value="4,3,4,3"/>
                            <Setter Property="Margin" TargetName="CloseButton" Value="4,0,0,3" />
                            <Setter Property="DockPanel.Dock" TargetName="CloseButton" Value="Bottom" />
                            <Setter Property="HorizontalAlignment" TargetName="CloseButton" Value="Left" />
                            <Setter Property="Grid.Row" TargetName="PART_HeaderArea" Value="1" />
                            <Setter Property="Grid.Column" TargetName="PART_HeaderArea" Value="1" />
                            <Setter Property="Height" TargetName="gridRow0" Value="0" />
                            <Setter Property="Width" TargetName="gridCol0" Value="*" />
                            <Setter Property="Width" TargetName="gridCol1" Value="Auto" />
                            <Setter Property="DockPanel.Dock" TargetName="PreTabItemContent" Value="Top" />
                            <Setter Property="DockPanel.Dock" TargetName="PostTabItemContent" Value="Bottom" />
                            <Setter Property="Height" TargetName="PART_Popup" Value="{Binding Path=PreferredDropDownExtent, RelativeSource={x:Static RelativeSource.TemplatedParent}}" />
                            <Setter Property="FrameworkElement.Margin" TargetName="PART_TabHeaderPanel" Value="0,7,1,7"/>
                        </Trigger>
                        <Trigger Property="UIElement.IsEnabled" Value="False">
                            <Setter Property="TextElement.Foreground" Value="{DynamicResource {x:Static controls:PrimitivesBrushKeys.GrayTextBrushKey}}" />
                        </Trigger>
                        <Trigger Property="IsMinimized" Value="True">
                            <Setter Property="Visibility" TargetName="ContentPanel" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="IsMultiRow" Value="True">
                            <Setter TargetName="PART_TabItemScrollViewer" Property="Style" Value="{DynamicResource {x:Static controls:XamTabControl.MultiRowTabItemPagerStyleKey}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="TabControl.TabStripPlacement" Value="Bottom">
                <Setter Property="Panel.Background" Value="{DynamicResource {x:Static controls:PrimitivesBrushKeys.TabItemIsSelectedBottomCenterFillKey}}" />
            </Trigger>
            <Trigger Property="TabControl.TabStripPlacement" Value="Left">
                <Setter Property="Panel.Background" Value="{DynamicResource {x:Static controls:PrimitivesBrushKeys.TabItemIsSelectedLeftCenterFillKey}}" />
            </Trigger>
            <Trigger Property="TabControl.TabStripPlacement" Value="Right">
                <Setter Property="Panel.Background" Value="{DynamicResource {x:Static controls:PrimitivesBrushKeys.TabItemIsSelectedRightCenterFillKey}}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- *********************************  TabItemEx Style  ********************************* -->
    <Style x:Key="{x:Type controls:TabItemEx}" TargetType="{x:Type controls:TabItemEx}">
        <Setter Property="BorderBrush" Value="{DynamicResource {x:Static controls:PrimitivesBrushKeys.TabItemNormalOuterBorderFillKey}}" />
        <Setter Property="Background" Value="{DynamicResource {x:Static controls:PrimitivesBrushKeys.TabItemNormalTopCenterFillKey}}" />
        <Setter Property="Foreground" Value="{DynamicResource {x:Static controls:PrimitivesBrushKeys.TabItemNormalTextFillKey}}" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
		<!--SS 01/29/16 TFS213085 Change VerticalAlignment to Strech, so all tabs can be aligned to the highest-->
		<!--<Setter Property="VerticalAlignment" Value="Bottom"/>-->
		<Setter Property="VerticalAlignment" Value="Stretch"/>
		<Setter Property="Padding" Value="6 2" />
        <Setter Property="MinHeight" Value="22" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:TabItemEx}">
                    <Grid SnapsToDevicePixels="true">
                        <Border x:Name="Bd" Padding="{TemplateBinding Padding}" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" BorderThickness="1,1,1,0" CornerRadius="0">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <ContentPresenter x:Name="Content" ContentSource="Header" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" RecognizesAccessKey="true" HorizontalAlignment="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" VerticalAlignment="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
                                <Button x:Name="CloseButton" Grid.Column="1" Command="controls:TabItemExCommands.Close" CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}" Visibility="{TemplateBinding ComputedCloseButtonVisibility}" Style="{DynamicResource {x:Static controls:XamTabControl.CloseButtonStyleKey}}" />
                            </Grid>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="Content" Property="TextElement.Foreground" Value="{DynamicResource {x:Static controls:PrimitivesBrushKeys.TabItemHottrackTextFillKey}}" />
                        </Trigger>
                        <Trigger Property="IsSelected" Value="true">
                            <Setter Property="Panel.ZIndex" Value="1" />
                            <Setter TargetName="Bd" Property="Background" Value="{DynamicResource {x:Static controls:PrimitivesBrushKeys.TabItemIsSelectedTopCenterFillKey}}" />
                            <Setter TargetName="Bd" Property="BorderBrush" Value="{DynamicResource {x:Static controls:PrimitivesBrushKeys.TabItemIsSelectedOuterBorderFillKey}}" />
                            <Setter TargetName="Content" Property="TextElement.Foreground" Value="{DynamicResource {x:Static controls:PrimitivesBrushKeys.TabItemIsSelectedTextFillKey}}" />
                            <Setter TargetName="CloseButton" Property="Foreground" Value="{StaticResource CloseButtonTabActiveForegroundBrush}" />
                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Top">
                            <Setter TargetName="CloseButton" Property="Margin" Value="5,0"/>
                            <Setter TargetName="Content" Property="Margin" Value="6,2"/>
                            <Setter Property="Margin" Value="0,5,0,0" />
                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Bottom">
                            <Setter TargetName="Bd" Property="BorderThickness" Value="1,0,1,1" />
                            <Setter TargetName="Content" Property="Margin" Value="6,2"/>
                            <Setter TargetName="CloseButton" Property="Margin" Value="5,0"/>
                            <Setter Property="Margin" Value="0,-1,0,5" />
                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Left">
                            <Setter TargetName="Bd" Property="BorderThickness" Value="1,1,0,1" />
                            <Setter TargetName="Content" Property="Margin" Value="6,2"/>
                            <Setter TargetName="CloseButton" Property="Margin" Value="5,0"/>
                            <Setter Property="Margin" Value="5,0,0,0" />
                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Right">
                            <Setter TargetName="Bd" Property="BorderThickness" Value="0,1,1,1" />
                            <Setter TargetName="Content" Property="Margin" Value="6,2"/>
                            <Setter TargetName="CloseButton" Property="Margin" Value="5,0"/>
                            <Setter Property="Margin" Value="0,0,5,0" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="true" />
                                <Condition Property="TabStripPlacement" Value="Top" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Margin" Value="0,5,0,-1" />
                            <Setter TargetName="Content" Property="Margin" Value="6,2,6,3"/>
                            <Setter TargetName="CloseButton" Property="Margin" Value="5,0,5,1"/>
                            <!--<Setter TargetName="Content" Property="Margin" Value="0,0,0,1" />-->
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="true" />
                                <Condition Property="TabStripPlacement" Value="Bottom" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Content" Property="Margin" Value="6,2,6,2"/>
                            <Setter Property="Margin" Value="0,-1,0,5" />
                            <!--<Setter Property="Margin" Value="0,-3,0,0" />-->
                            <!--<Setter TargetName="Content" Property="Margin" Value="0,0,0,3" />-->
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="true" />
                                <Condition Property="TabStripPlacement" Value="Left" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Content" Property="Margin" Value="6,2,6,2"/>
                            <Setter TargetName="CloseButton" Property="Margin" Value="5,0,6,0"/>
                            <Setter Property="Margin" Value="5,0,-1,0" />
                            <!--<Setter TargetName="Content" Property="Margin" Value="0,0,1,0" />-->
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="true" />
                                <Condition Property="TabStripPlacement" Value="Right" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Content" Property="Margin" Value="7,2,6,2"/>
                            <Setter Property="Margin" Value="-1,0,5,0" />
                            <!--<Setter TargetName="Content" Property="Margin" Value="1,0,0,0" />-->
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="false" />
                                <Condition Property="IsMouseOver" Value="true" />
                                <Condition Property="TabStripPlacement" Value="Top" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Bd" Property="Background" Value="{DynamicResource {x:Static controls:PrimitivesBrushKeys.TabItemHottrackTopCenterFillKey}}" />
                            <Setter TargetName="Bd" Property="BorderBrush" Value="{DynamicResource {x:Static controls:PrimitivesBrushKeys.TabItemHottrackOuterBorderFillKey}}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="false" />
                                <Condition Property="IsMouseOver" Value="true" />
                                <Condition Property="TabStripPlacement" Value="Bottom" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Bd" Property="Background" Value="{DynamicResource {x:Static controls:PrimitivesBrushKeys.TabItemHottrackBottomCenterFillKey}}" />
                            <Setter TargetName="Bd" Property="BorderBrush" Value="{DynamicResource {x:Static controls:PrimitivesBrushKeys.TabItemHottrackOuterBorderFillKey}}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="false" />
                                <Condition Property="IsMouseOver" Value="true" />
                                <Condition Property="TabStripPlacement" Value="Left" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Bd" Property="Background" Value="{DynamicResource {x:Static controls:PrimitivesBrushKeys.TabItemHottrackLeftCenterFillKey}}" />
                            <Setter TargetName="Bd" Property="BorderBrush" Value="{DynamicResource {x:Static controls:PrimitivesBrushKeys.TabItemHottrackOuterBorderFillKey}}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="false" />
                                <Condition Property="IsMouseOver" Value="true" />
                                <Condition Property="TabStripPlacement" Value="Right" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Bd" Property="Background" Value="{DynamicResource {x:Static controls:PrimitivesBrushKeys.TabItemHottrackRightCenterFillKey}}" />
                            <Setter TargetName="Bd" Property="BorderBrush" Value="{DynamicResource {x:Static controls:PrimitivesBrushKeys.TabItemHottrackOuterBorderFillKey}}" />
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="Bd" Property="Background" Value="{DynamicResource {x:Static controls:PrimitivesBrushKeys.TabItemDisabledCenterFillKey}}" />
                            <Setter TargetName="Bd" Property="BorderBrush" Value="{DynamicResource {x:Static controls:PrimitivesBrushKeys.TabItemDisabledOuterBorderFillKey}}" />
                            <Setter Property="Foreground" Value="{DynamicResource {ComponentResourceKey {x:Type controls:IGControlBase}, TabItemDisabledForegroundBrush}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- *********************************  PopupResizerBar Style  ********************************* -->
    <Style TargetType="{x:Type controls:PopupResizerBar}">
        <Setter Property="Background" Value="{StaticResource TransparentBrush}" />
        <Setter Property="Foreground" Value="{StaticResource PopupBackgroundBrush}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="BorderBrush" Value="{StaticResource PopupBorderBrush}" />
        <Setter Property="Height" Value="15" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:PopupResizerBar}">
                    <Border SnapsToDevicePixels="True" Background="{TemplateBinding Foreground}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0 1 0 0" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="Auto" Height="Auto" Margin="0">
                        <controls:CardPanel Margin="{TemplateBinding Padding}">
                            <controls:CardPanel x:Name="GlyphArea">
                                <!-- the thumb is transparent and needs to be placed after the glyphs so that it is on top with respect to z-order -->
                                <Thumb x:Name="PART_Thumb" Background="Transparent" Foreground="Transparent" Opacity="0" />
                                <Grid x:Name="BottomRightGlyph" Width="{Binding ActualHeight, Mode=OneWay, RelativeSource={RelativeSource Self}}" VerticalAlignment="Bottom" HorizontalAlignment="Right" Margin="3" Background="{x:Null}" IsHitTestVisible="False" Visibility="Collapsed">
                                    <Path Margin="2,2,1,1" VerticalAlignment="Bottom" Height="6" Stretch="Fill" Opacity="1" Data="M4,4 L6,4 6,6 4,6 z M0,4 L2,4 2,6 0,6 z M4,0 L6,0 6,2 4,2 z" Fill="{StaticResource LightForegroundBrush}" SnapsToDevicePixels="True" HorizontalAlignment="Right" Width="6" />
                                    <Path Data="M4,4 L6,4 6,6 4,6 z M0,4 L2,4 2,6 0,6 z M4,0 L6,0 6,2 4,2 z" Fill="{TemplateBinding BorderBrush}" HorizontalAlignment="Right" Height="6" Opacity="1" Stretch="Fill" SnapsToDevicePixels="True" VerticalAlignment="Bottom" Width="6" />
                                </Grid>
                                <!-- the glyph that is used when the resizemode is Both and the location is Top-->
                                <Grid x:Name="TopRightGlyph" Background="{x:Null}" Width="{Binding ActualHeight, Mode=OneWay, RelativeSource={RelativeSource Self}}" IsHitTestVisible="False" VerticalAlignment="Top" HorizontalAlignment="Right" Visibility="Collapsed">
                                    <Path SnapsToDevicePixels="True" HorizontalAlignment="Right" Margin="0,2,2,0" VerticalAlignment="Top" Width="6" Height="6" Fill="{StaticResource LightForegroundBrush}" Stretch="Fill" Data="M4,4 L6,4 6,6 4,6 z M4,0 L6,0 6,2 4,2 z M0,0 L2,0 2,2 0,2 z" />
                                    <Path Data="M4,4 L6,4 6,6 4,6 z M4,0 L6,0 6,2 4,2 z M0,0 L2,0 2,2 0,2 z" Fill="{TemplateBinding BorderBrush}" HorizontalAlignment="Right" Height="6" Margin="0,3,3,0" Opacity="1" Stretch="Fill" SnapsToDevicePixels="True" VerticalAlignment="Top" Width="6" />
                                </Grid>
                                <!-- the glyph that is used when the resizemode is VerticalOnly-->
                                <Grid x:Name="VerticalOnlyGlyph" IsHitTestVisible="False" Margin="6,0" HorizontalAlignment="Center" Width="Auto" VerticalAlignment="Center" Height="Auto" Visibility="Collapsed">
                                    <Path SnapsToDevicePixels="True" HorizontalAlignment="Left" Margin="1,1,0,0" x:Name="WhiteShadows" VerticalAlignment="Top" Width="17" Height="2" Fill="{StaticResource LightForegroundBrush}" Stretch="None" Data="M16,0 L18,0 18,1.9999999 16,1.9999999 z M12,0 L14,0 14,1.9999999 12,1.9999999 z M8,0 L10,0 10,1.9999999 8,1.9999999 z M4,0 L6,0 6,1.9999999 4,1.9999999 z M0,0 L1.9999999,0 1.9999999,1.9999999 0,1.9999999 z" />
                                    <Path x:Name="_1" Data="M16,0 L18,0 18,1.9999999 16,1.9999999 z M12,0 L14,0 14,1.9999999 12,1.9999999 z M8,0 L10,0 10,1.9999999 8,1.9999999 z M4,0 L6,0 6,1.9999999 4,1.9999999 z M0,0 L1.9999999,0 1.9999999,1.9999999 0,1.9999999 z" Fill="{TemplateBinding BorderBrush}" HorizontalAlignment="Stretch" Height="2" Margin="0" Opacity="1" Stretch="Fill" SnapsToDevicePixels="True" VerticalAlignment="Stretch" Width="18" />
                                </Grid>
                            </controls:CardPanel>
                        </controls:CardPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="ResizeMode" Value="Both" />
                                <Condition Property="Location" Value="Bottom" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="BottomRightGlyph" Property="Visibility" Value="Visible" />
                            <Setter TargetName="PART_Thumb" Property="Cursor" Value="SizeNWSE" />
                            <Setter TargetName="GlyphArea" Property="HorizontalAlignment" Value="Right" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="ResizeMode" Value="Both" />
                                <Condition Property="Location" Value="Bottom" />
                                <Condition Property="FlowDirection" Value="RightToLeft" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="PART_Thumb" Property="Cursor" Value="SizeNESW" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="ResizeMode" Value="Both" />
                                <Condition Property="Location" Value="Top" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="TopRightGlyph" Property="Visibility" Value="Visible" />
                            <Setter TargetName="PART_Thumb" Property="Cursor" Value="SizeNESW" />
                            <Setter TargetName="GlyphArea" Property="HorizontalAlignment" Value="Right" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="ResizeMode" Value="Both" />
                                <Condition Property="Location" Value="Top" />
                                <Condition Property="FlowDirection" Value="RightToLeft" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="PART_Thumb" Property="Cursor" Value="SizeNWSE" />
                        </MultiTrigger>
                        <Trigger Property="ResizeMode" Value="VerticalOnly">
                            <Setter TargetName="VerticalOnlyGlyph" Property="Visibility" Value="Visible" />
                            <Setter TargetName="PART_Thumb" Property="Cursor" Value="SizeNS" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- *********************************  XamBusyIndicator Style  ********************************* -->
    
    <!-- ================================ -->
    <!-- ProgressBar -->
    <!-- ================================ -->
    <Style x:Key="ProgressBarOffice2013Style" TargetType="{x:Type ProgressBar}" BasedOn="{StaticResource ProgressBarStyle}">
        <Setter Property="Foreground" Value="{StaticResource ProgressBar.Foreground}"/>
        <Setter Property="Background" Value="{StaticResource ProgressBar.Background}"/>
        <Setter Property="BorderBrush" Value="{StaticResource ProgressBar.Border}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ProgressBar}">
                    <Grid x:Name="TemplateRoot">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Determinate"/>
                                <VisualState x:Name="Indeterminate">
                                    <Storyboard RepeatBehavior="Forever">
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="Animation">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="0.25"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:1" Value="0.25"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:2" Value="0.25"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <PointAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransformOrigin)" Storyboard.TargetName="Animation">
                                            <EasingPointKeyFrame KeyTime="0" Value="-0.5,0.5"/>
                                            <EasingPointKeyFrame KeyTime="0:0:1" Value="0.5,0.5"/>
                                            <EasingPointKeyFrame KeyTime="0:0:2" Value="1.5,0.5"/>
                                        </PointAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}"/>
                        <Rectangle x:Name="PART_Track"/>
                        <Grid x:Name="PART_Indicator" ClipToBounds="true" HorizontalAlignment="Left" Margin="1,0" SnapsToDevicePixels="True">
                            <Rectangle x:Name="Indicator" Fill="{StaticResource ProgressBar.Progress}" RenderTransformOrigin="0.5,0.5" Margin="0,1,-1,1" SnapsToDevicePixels="True" />
                            <Rectangle x:Name="Animation" Fill="{StaticResource ProgressBar.Progress}" RenderTransformOrigin="0.5,0.5" Margin="0,1" SnapsToDevicePixels="True">
                                <Rectangle.RenderTransform>
                                    <TransformGroup>
                                        <ScaleTransform/>
                                        <SkewTransform/>
                                        <RotateTransform/>
                                        <TranslateTransform/>
                                    </TransformGroup>
                                </Rectangle.RenderTransform>
                            </Rectangle>
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Orientation" Value="Vertical">
                            <Setter Property="LayoutTransform" TargetName="TemplateRoot">
                                <Setter.Value>
                                    <RotateTransform Angle="-90"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsIndeterminate" Value="true">
                            <Setter Property="Visibility" TargetName="Indicator" Value="Collapsed"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type igPrim:ProgressBarBusyAnimationPresenter}" BasedOn="{StaticResource BusyAnimationPresenterStyle}">
        <Setter Property="ProgressBarStyle" Value="{StaticResource ProgressBarOffice2013Style}" />
        <Setter Property="Height" Value="26" />
    </Style>
    
    <!-- ================================ -->
    <!-- ProgressRing -->
    <!-- ================================ -->
    <Style TargetType="{x:Type igPrim:ProgressRingBusyAnimationPresenter}"
           BasedOn="{StaticResource BusyAnimationPresenterStyle}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="RingFill" Value="{StaticResource BusyIndicatorAnimationFirstItemBackgroundBrush}" />
        <Setter Property="RingBackground" Value="{StaticResource BusyIndicatorAnimationSecondItemBackgroundBrush}" />
        <Setter Property="Foreground" Value="{StaticResource BusyIndicatorForegroundBrush}" />
    </Style>

    <!-- ================================ -->
    <!-- Gears animation -->
    <!-- ================================ -->
    <Style TargetType="{x:Type igPrim:GearsBusyAnimationPresenter}" BasedOn="{StaticResource BusyAnimationPresenterStyle}">
        <Setter Property="SmallGearFill" Value="{StaticResource BusyIndicatorAnimationSecondItemBackgroundBrush}" />
        <Setter Property="BigGearFill" Value="{StaticResource BusyIndicatorAnimationFirstItemBackgroundBrush}" />
    </Style>

    <!-- ================================ -->
    <!-- SpinnerSegmented animation -->
    <!-- ================================ -->
    <Style TargetType="{x:Type igPrim:SpinnerSegmentedBusyAnimationPresenter}" BasedOn="{StaticResource BusyAnimationPresenterStyle}">
        <Setter Property="AnimationFill" Value="{StaticResource BusyIndicatorAnimationFirstItemBackgroundBrush}" />
    </Style>

    <!-- ================================ -->
    <!-- SpinnerBalls animation -->
    <!-- ================================ -->
    <Style TargetType="{x:Type igPrim:SpinnerBallsBusyAnimationPresenter}" BasedOn="{StaticResource BusyAnimationPresenterStyle}">
        <Setter Property="AnimationFill" Value="{StaticResource BusyIndicatorAnimationFirstItemBackgroundBrush}" />
    </Style>

    <!-- ================================ -->
    <!-- SpinnerBars animation -->
    <!-- ================================ -->
    <Style TargetType="{x:Type igPrim:SpinnerBarsBusyAnimationPresenter}" BasedOn="{StaticResource BusyAnimationPresenterStyle}">
        <Setter Property="AnimationFill" Value="{StaticResource BusyIndicatorAnimationFirstItemBackgroundBrush}" />
    </Style>

    <!-- ================================ -->
    <!-- SpinnerBarsWave animation -->
    <!-- ================================ -->
    <Style TargetType="{x:Type igPrim:SpinnerBarsWaveBusyAnimationPresenter}" BasedOn="{StaticResource BusyAnimationPresenterStyle}">
        <Setter Property="AnimationFill" Value="{StaticResource BusyIndicatorAnimationFirstItemBackgroundBrush}" />
    </Style>

    <!-- ================================ -->
    <!-- Azure animation -->
    <!-- ================================ -->
    <Style TargetType="{x:Type igPrim:AzureBusyAnimationPresenter}" BasedOn="{StaticResource BusyAnimationPresenterStyle}">
        <Setter Property="LowerElementsFill" Value="{StaticResource BusyIndicatorAnimationFirstItemBackgroundBrush}" />
        <Setter Property="UpperElementsFill" Value="{StaticResource BusyIndicatorAnimationSecondItemBackgroundBrush}" />
    </Style>

    <Style TargetType="{x:Type interactions:XamBusyIndicator}">
        <Setter Property="OverlayStyle">
            <Setter.Value>
                <Style TargetType="Rectangle">
                    <Setter Property="Fill"
                            Value="{StaticResource OverlayBackgroundBrush}" />
                    <Setter Property="Stroke"
                            Value="{StaticResource OverlayBorderBrush}" />
                    <Setter Property="StrokeThickness"
                            Value="0" />
                    <Setter Property="Opacity"
                            Value=".5" />
                    <Setter Property="Visibility"
                            Value="{Binding Path=(interactions:XamBusyIndicator.BusyIndicator).IsIndicatorVisible, RelativeSource={RelativeSource Self}, Converter={StaticResource BoolToVisibiilityConverter}}" />
                </Style>
            </Setter.Value>
        </Setter>
    </Style>
    
</ResourceDictionary>