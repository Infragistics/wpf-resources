<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:ig="http://infragistics.com/Windows"	
	xmlns:controls="http://infragistics.com/Windows"
	xmlns:d="http://schemas.microsoft.com/expression/interactivedesigner/2006"
	xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
	mc:Ignorable="d"
	>
	<ResourceDictionary.MergedDictionaries>
		<ResourceDictionary Source="PrimitivesLite_Brushes.xaml" />
	</ResourceDictionary.MergedDictionaries>
	<Storyboard x:Key="fadeOut">
		<DoubleAnimation
				 Storyboard.TargetProperty="Opacity"
				 To=".5"
				 FillBehavior="HoldEnd"
				 BeginTime="00:00:00"
				 Duration="00:00:00.5" />
	</Storyboard>
	<Storyboard x:Key="fadeIn">
		<DoubleAnimation
				 Storyboard.TargetProperty="Opacity"
				 To="1"
				 FillBehavior="HoldEnd"
				 BeginTime="00:00:00"
				 Duration="00:00:00.5" />
	</Storyboard>
	<!-- _________________________ SortIndicator __________________________________________ -->
	<Style TargetType="{x:Type controls:SortIndicator}">
    <!-- JJD 11/29/10 - TFS59556 - By default this class if not hit test visible -->
    <!--<Setter Property="Cursor" Value="Hand" />-->
    <Setter Property="MinHeight" Value="3.5" />
		<Setter Property="MinWidth" Value="7" />
		<Setter Property="Visibility" Value="Hidden"/>
		<Setter Property="Background" Value="{StaticResource SortIndicatorBackground}" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type controls:SortIndicator}">
					<Polygon Name="Arrow" 
								  Fill="{TemplateBinding Background}" 
								  Points="0,0 7,0 3.5,3.5" 	
								  StrokeEndLineCap="Round" StrokeStartLineCap="Round" StrokeLineJoin="Round" />

					<ControlTemplate.Triggers>
						<Trigger Property="SortStatus" Value="Descending">
							<Setter Property="Visibility" Value="Visible" />
						</Trigger>
						<Trigger Property="SortStatus" Value="Ascending">
							<Setter TargetName="Arrow" Property="Points" 
											   Value="0,3.5 7,3.5 3.5,0" />
							<Setter Property="Visibility" Value="Visible" />
						</Trigger>
						<Trigger Property="IsMouseOver" Value="true">
							<Setter TargetName="Arrow" Property="Polygon.Fill" 
											   Value="{StaticResource SortIndicatorBackgroundHover}" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	
	<!-- _________________________ ExpanderBar __________________________________________ -->
	<Style TargetType="{x:Type controls:ExpanderBar}">
		<Setter Property="Background" Value="{StaticResource ExpanderBarBackground}" />
		<Setter Property="BackgroundHover" Value="{StaticResource ExpanderBarBackgroundHover}" />
		<Setter Property="BorderBrush" Value="{StaticResource ExpanderBarBorderBrush}" />
		<Setter Property="BorderHoverBrush" Value="{StaticResource ExpanderBarBorderHoverBrush}" />
		<Setter Property="MinHeight" Value="10" />
		<Setter Property="Cursor" Value="Hand" />
		<Setter Property="Focusable" Value="False" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type controls:ExpanderBar}">
					<!--<Grid Height="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Height}">-->
					<Grid>
						<Rectangle x:Name="bgRect" 
							Stroke="{TemplateBinding BorderBrush}" StrokeThickness="1"
							Fill="{TemplateBinding Background}" />
					</Grid>
					<ControlTemplate.Triggers>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsMouseOver" Value="true" />
							</MultiTrigger.Conditions>
							<Setter TargetName="bgRect" Property="Fill" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BackgroundHover}" />
							<Setter TargetName="bgRect" Property="Stroke" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderHoverBrush}" />
						</MultiTrigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- _________________________ ExpansionIndicator __________________________________________ -->
	<Style TargetType="{x:Type controls:ExpansionIndicator}">
		<Setter Property="Background" Value="{StaticResource ExpansionIndicatorBackground}" />
		<Setter Property="BorderBrush" Value="{StaticResource ExpansionIndicatorBorderBrush}" />
		<Setter Property="Foreground" Value="{StaticResource ExpansionIndicatorForeground}" />
		<Setter Property="Cursor" Value="Hand" />
		<Setter Property="ClipToBounds" Value="False" />
		<Setter Property="Margin" Value="5,0,3,0" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type controls:ExpansionIndicator}">
					<Grid Width="9" Height="9" x:Name="grdExpansionIndicatorClosed" RenderTransformOrigin="0.5,0.5" SnapsToDevicePixels="True">
						<Grid.ColumnDefinitions>
							<ColumnDefinition/>
						</Grid.ColumnDefinitions>
						<Grid.RowDefinitions>
							<RowDefinition/>
						</Grid.RowDefinitions>
						<Border Background="{TemplateBinding BorderBrush}" x:Name="outerBorder" RenderTransformOrigin="0.5,0.5" CornerRadius="2,2,2,2"/>
						<Border 
						  x:Name="innerFill" 
						  Margin="1,1,1,1" Width="Auto" Height="Auto" 									
						  RenderTransformOrigin="0.5,0.5" 
						  CornerRadius="1.5,1.5,1.5,1.5"
						  Background="{TemplateBinding Background}"
								/>
						<Rectangle Fill="{TemplateBinding Foreground}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="2,4,2,4" Width="Auto" Height="1" x:Name="plusHorizontal" RenderTransformOrigin="0.5,0.5"/>
						<Rectangle Fill="{TemplateBinding Foreground}" Margin="4,2,4,2" Width="1" Height="Auto" x:Name="plusVert" RenderTransformOrigin="0.5,0.5"/>
					</Grid>

					<ControlTemplate.Triggers>
						<!-- Checked -->
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsChecked" Value="true" />
							</MultiTrigger.Conditions>
							<Setter TargetName="plusVert" Property="Visibility" Value="Collapsed" />
						</MultiTrigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
</ResourceDictionary>