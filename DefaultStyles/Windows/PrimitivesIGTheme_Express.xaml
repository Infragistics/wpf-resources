<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:ig="http://infragistics.com/Windows"
    xmlns:igWindows="http://infragistics.com/Windows"
    xmlns:controls="http://infragistics.com/Windows"
    xmlns:looks="http://infragistics.com/Windows.Looks"
    xmlns:themes="http://infragistics.com/Themes">

	<ResourceDictionary.MergedDictionaries>
		<!--<themes:PrimitivesGeneric/>-->
		<ResourceDictionary Source="PrimitivesGeneric_Express.xaml" />
		<ResourceDictionary Source="PrimitivesIGTheme_Brushes.xaml" />
	</ResourceDictionary.MergedDictionaries>

	<!-- _________________________ ExpanderBar __________________________________________ -->
	<Style TargetType="{x:Type controls:ExpanderBar}" BasedOn="{x:Static themes:PrimitivesGeneric.ExpanderBar}">
		<Setter Property="MinHeight" Value="10" />
		<Setter Property="Cursor" Value="Hand" />
		<Setter Property="Focusable" Value="False" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type controls:ExpanderBar}">
					<Grid>
						<Rectangle Margin="0" x:Name="bgRect">
							<Rectangle.Fill>
								<LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
									<LinearGradientBrush.GradientStops>
										<GradientStop Offset="0" Color="#FFFF9900" />
										<GradientStop Offset="0.085" Color="#FFFF9900" />
										<GradientStop Offset=".49" Color="#FFFF9900" />
										<GradientStop Offset=".49" Color="#FFD76C02" />
										<GradientStop Offset=".93" Color="#FFD76C02" />
										<GradientStop Offset="1" Color="#FF9A4E01" />
									</LinearGradientBrush.GradientStops>
								</LinearGradientBrush>
							</Rectangle.Fill>
						</Rectangle>

						<Grid>
							<Grid.RowDefinitions>
								<RowDefinition Height="0.681433096511737*"/>
								<RowDefinition Height="0.318566903488263*" />
							</Grid.RowDefinitions>

							<Rectangle Grid.Row="0" Margin="0,1,0,0">
								<Rectangle.Fill>
									<LinearGradientBrush StartPoint="0,0" EndPoint="0,.95">
										<LinearGradientBrush.GradientStops>
											<GradientStop Offset="0" Color="#FFFFFFFF" />
											<GradientStop Offset="1" Color="#00FFFFFF" />
										</LinearGradientBrush.GradientStops>
									</LinearGradientBrush>
								</Rectangle.Fill>
							</Rectangle>
						</Grid>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- _________________________ ExpansionIndicator __________________________________________ -->
	<Style TargetType="{x:Type controls:ExpansionIndicator}" BasedOn="{x:Static themes:PrimitivesGeneric.ExpansionIndicator}">
		<Setter Property="Background">
			<Setter.Value>
				<LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
					<LinearGradientBrush.GradientStops>
						<GradientStopCollection>
							<GradientStop Color="sc#1, 0.57900393, 0.57900393, 0.57900393" Offset="1"/>
							<GradientStop Color="#FFFFFFFF" Offset="0.36153846153846259"/>
						</GradientStopCollection>
					</LinearGradientBrush.GradientStops>
				</LinearGradientBrush>
			</Setter.Value>
		</Setter>
		<Setter Property="BorderBrush" Value="#FF999999" />
		<Setter Property="Foreground" Value="#FF000000" />
		<Setter Property="Cursor" Value="Hand" />
		<Setter Property="ClipToBounds" Value="False" />
		<Setter Property="Margin" Value="5,0,3,0" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type controls:ExpansionIndicator}">
					<Grid Background="#00FFFFFF">
						<!--<Control x:Name="ExpansionIndicatorClosed" Background="{TemplateBinding Background}" Template="{StaticResource ExpansionClosedPath}" />
							<Control x:Name="ExpansionIndicatorOpen"  Background="{TemplateBinding Background}" Template="{StaticResource ExpansionOpenPath}" />-->
						<Grid Width="9" Height="9" x:Name="grdExpansionIndicatorClosed" RenderTransformOrigin="0.5,0.5" SnapsToDevicePixels="True">
							<Grid.ColumnDefinitions>
								<ColumnDefinition/>
							</Grid.ColumnDefinitions>
							<Grid.RowDefinitions>
								<RowDefinition/>
							</Grid.RowDefinitions>
							<Border Background="{TemplateBinding BorderBrush}" x:Name="outerBorder" RenderTransformOrigin="0.5,0.5" CornerRadius="2,2,2,2"/>
							<Border
							  x:Name="innerFill"
							  Margin="1,1,1,1" Width="Auto" Height="Auto"
							  RenderTransformOrigin="0.5,0.5"
							  CornerRadius="1.5,1.5,1.5,1.5"
							  Background="{TemplateBinding Background}"
									/>
							<Rectangle Fill="{TemplateBinding Foreground}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="2,4,2,4" Width="Auto" Height="1" x:Name="plusHorizontal" RenderTransformOrigin="0.5,0.5"/>
							<Rectangle Fill="{TemplateBinding Foreground}" Margin="4,2,4,2" Width="1" Height="Auto" x:Name="plusVert" RenderTransformOrigin="0.5,0.5"/>
						</Grid>

						<!--<Path x:Name="ExpansionIndicatorClosed" SnapsToDevicePixels="True" Fill="#FF999999" HorizontalAlignment="Center" VerticalAlignment="Center" Width="9" Height="9" Data="M0,0 L9,0 9,9 0,9 z M1,1 L8,1 8,8 1,8 z M2,2 L7,2 7,7 2,7 z M2,2 L4,2 4,4 2,4 z M5,2 L7,2 7,4 5,4 z M2,5 L4,5 4,7 2,7 z M5,5 L7,5 7,7 5,7 z" RenderTransformOrigin="0.5,0.5" Stretch="Fill" />-->
						<!--<Path x:Name="ExpansionIndicatorOpen" Visibility="Collapsed" SnapsToDevicePixels="True" Fill="#FF999999" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,0,0,0" Width="9" Height="9" Data="M0,0 L9,0 9,9 0,9 z M1,1 L8,1 8,8 1,8 z M2,4 L7,4 7,5 2,5 z" RenderTransformOrigin="0.5,0.5" Stretch="Fill" />-->
					</Grid>

					<ControlTemplate.Triggers>
						<!-- Checked -->
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsChecked" Value="true" />
							</MultiTrigger.Conditions>
							<!--<Setter TargetName="ExpansionIndicatorClosed" Property="Visibility" Value="Collapsed" />
								<Setter TargetName="ExpansionIndicatorOpen" Property="Visibility" Value="Visible" />-->
							<Setter TargetName="plusVert" Property="Visibility" Value="Collapsed" />
						</MultiTrigger>

						<!-- MouseOver -->
						<!--<MultiTrigger>
								<MultiTrigger.Conditions>
									<Condition Property="IsMouseOver" Value="true" />
								</MultiTrigger.Conditions>
								<Setter 
									TargetName="ExpansionIndicatorClosed" 
									Property="Control.Background" 
									Value="#FF000000" />
								<Setter 
									TargetName="ExpansionIndicatorOpen" 
									Property="Control.Background" 
									Value="#FF000000" />
							</MultiTrigger>

							-->
						<!-- Pressed -->
						<!--
							<MultiTrigger>
								<MultiTrigger.Conditions>
									<Condition Property="IsPressed" Value="true" />
								</MultiTrigger.Conditions>
								<Setter 
									TargetName="ExpansionIndicatorClosed" 
									Property="Path.Fill" 
									Value="#FF000000" />
								<Setter 
									TargetName="ExpansionIndicatorOpen" 
									Property="Path.Fill" 
									Value="#FF000000" />

							</MultiTrigger>-->

					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
    
      <!-- _________________________ ComparisonOperatorSelectorComboBoxStyle __________________________________________ -->
    <Style x:Key="ComparisonOperatorSelectorComboBoxStyle" TargetType="{x:Type ComboBox}">
        <Setter Property="IsSynchronizedWithCurrentItem" Value="False" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="FocusVisualStyle">
            <Setter.Value>
                <Style />
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Grid>
                        <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                            <ToggleButton x:Name="PART_DropDownButton" 
                                          Style="{Binding RelativeSource={RelativeSource Self}, Path=(igWindows:ComparisonOperatorSelector.Selector).DropDownButtonStyle}" 
                                          IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" />
                        </Border>
                        <Popup x:Name="PART_Popup" AllowsTransparency="True" Placement="Bottom" IsOpen="{TemplateBinding IsDropDownOpen}" VerticalOffset="1" HorizontalOffset="-1" Focusable="False" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" MaxHeight="{TemplateBinding MaxDropDownHeight}">
                         <Border Background="{DynamicResource {ComponentResourceKey {x:Type controls:IGControlBase}, PopupBackgroundBrush}}" BorderThickness="1" BorderBrush="{DynamicResource {ComponentResourceKey {x:Type controls:IGControlBase}, PopupBorderBrush}}">
                                <ScrollViewer x:Name="ScrollViewer" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto">
                                        <ItemsPresenter KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                    </ScrollViewer>
                                </Border>
                        </Popup>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="HasItems" Value="False">
                            <Setter TargetName="PART_Popup" Property="MinHeight" Value="95" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                                 <Setter Property="Opacity" Value="0.3" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
  <!-- *********************************  ComboBoxItem Style  ********************************* -->
  <Style x:Key="ComboBoxItemStyle" TargetType="ComboBoxItem">
    <Setter Property="Padding" Value="5,0,5,2" />
    <Setter Property="HorizontalContentAlignment" Value="Left" />
    <Setter Property="VerticalContentAlignment" Value="Center" />
    <Setter Property="Background" Value="Transparent" />
    <Setter Property="Foreground" Value="{DynamicResource {ComponentResourceKey {x:Type controls:IGControlBase}, ThemeForegroundBrush}}" />
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="MinHeight" Value="24" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="ComboBoxItem">
          <Grid Background="{TemplateBinding Background}">
            <Rectangle x:Name="fillColor" Fill="{DynamicResource {ComponentResourceKey {x:Type controls:IGControlBase}, ComboBoxItemHoverBackgroundBrush}}" IsHitTestVisible="False" Opacity="0" Stroke="{DynamicResource {ComponentResourceKey {x:Type controls:IGControlBase},ComboBoxItemHoverBorderBrush}}" StrokeThickness="{TemplateBinding BorderThickness}" />
            <Rectangle x:Name="FocusVisualElement" Stroke="{DynamicResource {ComponentResourceKey {x:Type controls:IGControlBase},ComboBoxItemFocusedBorderBrush}}" Visibility="Collapsed" StrokeThickness="{TemplateBinding BorderThickness}" />
            <ContentControl x:Name="contentControl" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="{TemplateBinding Padding}" Foreground="{TemplateBinding Foreground}">
              <ContentPresenter x:Name="contentPresenter" />
            </ContentControl>
            <ContentControl x:Name="contentControl1" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Opacity="0" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="{TemplateBinding Padding}" Foreground="{TemplateBinding Foreground}">
              <ContentPresenter x:Name="contentPresenter1" />
            </ContentControl>
          </Grid>
            <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter Property="Visibility" TargetName="FocusVisualElement" Value="Visible" />
                            <Setter Property="Visibility" TargetName="contentControl1" Value="Collapsed" />
                            <Setter Property="Opacity" TargetName="contentControl1" Value="1" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Opacity" TargetName="fillColor" Value="1" />
                            <Setter Property="Foreground" TargetName="contentControl" Value="{DynamicResource {ComponentResourceKey {x:Type controls:IGControlBase}, ThemeLightForegroundBrush}}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="contentControl" Property="Opacity" Value="0.3" />
                        </Trigger>
                    </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
    
       <!-- _________________________ ComparisonOperatorSelector __________________________________________ -->
    <Style TargetType="{x:Type igWindows:ComparisonOperatorSelector}">
        <Setter Property="DropDownButtonStyle" Value="{DynamicResource {x:Static igWindows:ComparisonOperatorSelector.DropDownButtonStyleKey}}" />
        <Setter Property="OperatorEqualsImage" Value="{DynamicResource {x:Static igWindows:ComparisonOperatorSelector.OperatorEqualsImageKey}}" />
        <Setter Property="OperatorNotEqualsImage" Value="{DynamicResource {x:Static igWindows:ComparisonOperatorSelector.OperatorNotEqualsImageKey}}" />
        <Setter Property="OperatorLessThanImage" Value="{DynamicResource {x:Static igWindows:ComparisonOperatorSelector.OperatorLessThanImageKey}}" />
        <Setter Property="OperatorLessThanOrEqualToImage" Value="{DynamicResource {x:Static igWindows:ComparisonOperatorSelector.OperatorLessThanOrEqualToImageKey}}" />
        <Setter Property="OperatorGreaterThanImage" Value="{DynamicResource {x:Static igWindows:ComparisonOperatorSelector.OperatorGreaterThanImageKey}}" />
        <Setter Property="OperatorGreaterThanOrEqualToImage" Value="{DynamicResource {x:Static igWindows:ComparisonOperatorSelector.OperatorGreaterThanOrEqualToImageKey}}" />
        <Setter Property="OperatorContainsImage" Value="{DynamicResource {x:Static igWindows:ComparisonOperatorSelector.OperatorContainsImageKey}}" />
        <Setter Property="OperatorDoesNotContainImage" Value="{DynamicResource {x:Static igWindows:ComparisonOperatorSelector.OperatorDoesNotContainImageKey}}" />
        <!-- SSP 12/4/13 NAS14.1 Filter In/NotIn Operator -->
        <Setter Property="OperatorInImage" Value="{DynamicResource {x:Static igWindows:ComparisonOperatorSelector.OperatorInImageKey}}" />
        <Setter Property="OperatorNotInImage" Value="{DynamicResource {x:Static igWindows:ComparisonOperatorSelector.OperatorNotInImageKey}}" />
        <Setter Property="OperatorLikeImage" Value="{DynamicResource {x:Static igWindows:ComparisonOperatorSelector.OperatorLikeImageKey}}" />
        <Setter Property="OperatorNotLikeImage" Value="{DynamicResource {x:Static igWindows:ComparisonOperatorSelector.OperatorNotLikeImageKey}}" />
        <Setter Property="OperatorMatchImage" Value="{DynamicResource {x:Static igWindows:ComparisonOperatorSelector.OperatorMatchImageKey}}" />
        <Setter Property="OperatorDoesNotMatchImage" Value="{DynamicResource {x:Static igWindows:ComparisonOperatorSelector.OperatorDoesNotMatchImageKey}}" />
        <Setter Property="OperatorStartsWithImage" Value="{DynamicResource {x:Static igWindows:ComparisonOperatorSelector.OperatorStartsWithImageKey}}" />
        <Setter Property="OperatorDoesNotStartWithImage" Value="{DynamicResource {x:Static igWindows:ComparisonOperatorSelector.OperatorDoesNotStartWithImageKey}}" />
        <Setter Property="OperatorEndsWithImage" Value="{DynamicResource {x:Static igWindows:ComparisonOperatorSelector.OperatorEndsWithImageKey}}" />
        <Setter Property="OperatorDoesNotEndWithImage" Value="{DynamicResource {x:Static igWindows:ComparisonOperatorSelector.OperatorDoesNotEndWithImageKey}}" />
        <Setter Property="OperatorTopImage" Value="{DynamicResource {x:Static igWindows:ComparisonOperatorSelector.OperatorTopImageKey}}" />
        <Setter Property="OperatorBottomImage" Value="{DynamicResource {x:Static igWindows:ComparisonOperatorSelector.OperatorBottomImageKey}}" />
        <Setter Property="OperatorTopPercentileImage" Value="{DynamicResource {x:Static igWindows:ComparisonOperatorSelector.OperatorTopPercentileImageKey}}" />
        <Setter Property="OperatorBottomPercentileImage" Value="{DynamicResource {x:Static igWindows:ComparisonOperatorSelector.OperatorBottomPercentileImageKey}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type igWindows:ComparisonOperatorSelector}">
                    <ComboBox x:Name="PART_ComboBox" ItemsSource="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Items}" SelectedIndex="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=SelectedIndex, Mode=TwoWay}" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" ItemContainerStyle="{StaticResource ComboBoxItemStyle}" Style="{StaticResource ComparisonOperatorSelectorComboBoxStyle}" IsDropDownOpen="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsDropDownOpen, Mode=TwoWay}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>