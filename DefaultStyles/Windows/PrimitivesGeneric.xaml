<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:ig="http://infragistics.com/Windows"
	xmlns:igWindows="http://infragistics.com/Windows"
	xmlns:themes="http://infragistics.com/Themes"
	xmlns:igTiles="http://infragistics.com/Windows.Tiles"
	xmlns:igWindowsBase="http://infragistics.com/Windows"
    xmlns:PresentationOptions="http://schemas.microsoft.com/winfx/2006/xaml/presentation/options"
	xmlns:d="http://schemas.microsoft.com/expression/interactivedesigner/2006"
	xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:interactions="http://schemas.infragistics.com/xaml"
    xmlns:igPrim="http://schemas.infragistics.com/xaml/primitives"
    mc:Ignorable="d" >
	<ResourceDictionary.MergedDictionaries>
		<ResourceDictionary Source="PrimitivesGeneric_Brushes.xaml" />
	</ResourceDictionary.MergedDictionaries>

    <!-- AS 2/13/09 TFS14003 - Added x:Shared="false" so each element has its 
        own reference. otherwise the shared tooltip (or the deferredresourcereference 
        that wpf uses) causes the elements that used it to be rooted -->
    <ToolTip x:Key="closeToolTip" x:Shared="false" Content="{x:Static igWindowsBase:ResourcesWindows.CloseButtonToolTip}"/>

	<!-- NA 2011.1 - ToolWindow changes -->
    <ToolTip x:Key="minimizeToolTip" x:Shared="false" Content="{x:Static igWindowsBase:ResourcesWindows.MinimizeButtonToolTip}"/>
    <ToolTip x:Key="maximizeToolTip" x:Shared="false" Content="{x:Static igWindowsBase:ResourcesWindows.MaximizeButtonToolTip}"/>
    <ToolTip x:Key="restoreUpToolTip" x:Shared="false" Content="{x:Static igWindowsBase:ResourcesWindows.RestoreUpButtonToolTip}"/>
    <ToolTip x:Key="restoreDownToolTip" x:Shared="false" Content="{x:Static igWindowsBase:ResourcesWindows.RestoreDownButtonToolTip}"/>

	<!-- ========================== BUTTON STYLES ========================== -->

	<!-- NA 2011.1 - ToolWindow changes -->
	<Style x:Key="ToolWindowButtonStyle" TargetType="{x:Type Button}">
		<Setter Property="Width" Value="17"/>
		<Setter Property="Height" Value="15"/>
		<Setter Property="Focusable" Value="False"/>
    </Style>
	
	<Style x:Key="ToolWindowMinimizeButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource ToolWindowButtonStyle}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid x:Name="root">
                        <Border
							x:Name="closeButtonOuterBorder"
							BorderThickness="1"
							BorderBrush="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.ToolWindowActiveMinMaxButtonNormalOuterBorderFillKey}}"
                            Background="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.ToolWindowActiveMinMaxButtonNormalCenterFillKey}}"
							CornerRadius="2"
                            SnapsToDevicePixels="True">
                            <Rectangle x:Name="highlight" Stroke="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.ToolWindowActiveMinMaxButtonNormalInnerBorderFillKey}}" SnapsToDevicePixels="True"/>
                        </Border>
                        <Rectangle x:Name="closeGlyph" 
                                   Stroke="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.ToolWindowActiveCloseButtonNormalGlyphStrokeKey}}" 
                                   VerticalAlignment="Bottom" HorizontalAlignment="Center"
                                   Margin="0,0,0,4"
                                   StrokeThickness="1" 
                                   Height="4" 
                                   Width="9"
                                   Fill="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.ToolWindowActiveCloseButtonNormalGlyphFillKey}}"
                                   SnapsToDevicePixels="True"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding Path=IsActive, RelativeSource={RelativeSource FindAncestor, {x:Type igWindows:ToolWindow}, 1}}" Value="False">
                            <Setter TargetName="closeButtonOuterBorder" Property="BorderBrush" Value="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.ToolWindowNotActiveMinMaxButtonNormalOuterBorderFillKey}}"/>
                            <Setter TargetName="closeButtonOuterBorder" Property="Background" Value="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.ToolWindowNotActiveMinMaxButtonNormalCenterFillKey}}"/>
                            <Setter TargetName="highlight" Property="Stroke" Value="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.ToolWindowNotActiveMinMaxButtonNormalInnerBorderFillKey}}"/>
                        </DataTrigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="closeButtonOuterBorder" Property="BorderBrush" Value="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.ToolWindowActiveMinMaxButtonHottrackOuterBorderFillKey}}"/>
                            <Setter TargetName="closeButtonOuterBorder" Property="Background" Value="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.ToolWindowActiveMinMaxButtonHottrackCenterFillKey}}"/>
                            <Setter TargetName="highlight" Property="Stroke" Value="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.ToolWindowActiveMinMaxButtonHottrackInnerBorderFillKey}}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="closeButtonOuterBorder" Property="BorderBrush" Value="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.ToolWindowActiveMinMaxButtonPressedOuterBorderFillKey}}"/>
                            <Setter TargetName="closeButtonOuterBorder" Property="Background" Value="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.ToolWindowActiveMinMaxButtonPressedCenterFillKey}}"/>
                            <Setter TargetName="highlight" Property="Stroke" Value="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.ToolWindowActiveMinMaxButtonPressedInnerBorderFillKey}}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="closeButtonOuterBorder" Property="BorderBrush" Value="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.ToolWindowDisabledCloseButtonOuterBorderFillKey}}"/>
                            <Setter TargetName="closeButtonOuterBorder" Property="Background" Value="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.ToolWindowDisabledCloseButtonCenterFillKey}}"/>
                            <Setter TargetName="highlight" Property="Stroke" Value="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.ToolWindowDisabledCloseButtonInnerBorderFillKey}}"/>
                            <Setter TargetName="root" Property="Opacity" Value="0.55"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ToolWindowMaximizeButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource ToolWindowButtonStyle}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid x:Name="root">
                        <Border
							x:Name="closeButtonOuterBorder"
							BorderThickness="1"
							BorderBrush="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.ToolWindowActiveMinMaxButtonNormalOuterBorderFillKey}}"
                            Background="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.ToolWindowActiveMinMaxButtonNormalCenterFillKey}}"
							CornerRadius="2"
                            SnapsToDevicePixels="True">
                            <Rectangle x:Name="highlight" Stroke="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.ToolWindowActiveMinMaxButtonNormalInnerBorderFillKey}}" SnapsToDevicePixels="True"/>
                        </Border>
                        <Grid VerticalAlignment="Bottom" HorizontalAlignment="Center" Margin="0,0,0,4">
                            <Rectangle Stroke="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.ToolWindowActiveCloseButtonNormalGlyphStrokeKey}}" StrokeThickness="3" Height="7" Width="9" SnapsToDevicePixels="True"/>
                            <Rectangle Stroke="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.ToolWindowActiveCloseButtonNormalGlyphFillKey}}" StrokeThickness="1" Height="5" Width="7" SnapsToDevicePixels="True"/>
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding Path=IsActive, RelativeSource={RelativeSource FindAncestor, {x:Type igWindows:ToolWindow}, 1}}" Value="False">
                            <Setter TargetName="closeButtonOuterBorder" Property="BorderBrush" Value="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.ToolWindowNotActiveMinMaxButtonNormalOuterBorderFillKey}}"/>
                            <Setter TargetName="closeButtonOuterBorder" Property="Background" Value="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.ToolWindowNotActiveMinMaxButtonNormalCenterFillKey}}"/>
                            <Setter TargetName="highlight" Property="Stroke" Value="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.ToolWindowNotActiveMinMaxButtonNormalInnerBorderFillKey}}"/>
                        </DataTrigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="closeButtonOuterBorder" Property="BorderBrush" Value="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.ToolWindowActiveMinMaxButtonHottrackOuterBorderFillKey}}"/>
                            <Setter TargetName="closeButtonOuterBorder" Property="Background" Value="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.ToolWindowActiveMinMaxButtonHottrackCenterFillKey}}"/>
                            <Setter TargetName="highlight" Property="Stroke" Value="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.ToolWindowActiveMinMaxButtonHottrackInnerBorderFillKey}}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="closeButtonOuterBorder" Property="BorderBrush" Value="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.ToolWindowActiveMinMaxButtonPressedOuterBorderFillKey}}"/>
                            <Setter TargetName="closeButtonOuterBorder" Property="Background" Value="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.ToolWindowActiveMinMaxButtonPressedCenterFillKey}}"/>
                            <Setter TargetName="highlight" Property="Stroke" Value="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.ToolWindowActiveMinMaxButtonPressedInnerBorderFillKey}}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="closeButtonOuterBorder" Property="BorderBrush" Value="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.ToolWindowDisabledCloseButtonOuterBorderFillKey}}"/>
                            <Setter TargetName="closeButtonOuterBorder" Property="Background" Value="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.ToolWindowDisabledCloseButtonCenterFillKey}}"/>
                            <Setter TargetName="highlight" Property="Stroke" Value="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.ToolWindowDisabledCloseButtonInnerBorderFillKey}}"/>
                            <Setter TargetName="root" Property="Opacity" Value="0.55"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

	<Style x:Key="ToolWindowRestoreButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource ToolWindowButtonStyle}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid x:Name="root">
                        <Border
							x:Name="closeButtonOuterBorder"
							BorderThickness="1"
							BorderBrush="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.ToolWindowActiveMinMaxButtonNormalOuterBorderFillKey}}"
                            Background="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.ToolWindowActiveMinMaxButtonNormalCenterFillKey}}"
							CornerRadius="2"
                            SnapsToDevicePixels="True">
                            <Rectangle x:Name="highlight" Stroke="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.ToolWindowActiveMinMaxButtonNormalInnerBorderFillKey}}" SnapsToDevicePixels="True"/>
                        </Border>
                        <Grid Width="12" Height="11" VerticalAlignment="Bottom" HorizontalAlignment="Center" Margin="0,0,0,2">
                            <Path
			                    Width="12"
			                    Height="11"
			                    Data="M 3,7 C3,7 5,7 5,7 5,7 5,8 5,8 5,8 3,8 3,8 3,8 3,7 3,7 zM 8,4 C8,4 9,4 9,4 9,4 9,5 9,5 9,5 8,5 8,5 8,5 8,4 8,4 zM 0,3 C0,3 0,11 0,11 0,11 8,11 8,11 8,11 8,8 8,8 8,8 12,8 12,8 12,8 12,0 12,0 12,0 4,0 4,0 4,0 4,3 4,3 4,3 0,3 0,3 z"
			                    Fill="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.ToolWindowActiveCloseButtonNormalGlyphStrokeKey}}"
			                    SnapsToDevicePixels="True"
			                    Stretch="Fill"/>
                            <Path
			                    Width="10"
			                    Height="9"
			                    Data="M 4,0 C4,0 4,2 4,2 4,2 9,2 9,2 9,2 9,5 9,5 9,5 7,5 7,5 7,5 7,6 7,6 7,6 10,6 10,6 10,6 10,0 10,0 10,0 4,0 4,0 zM 1,5 C1,5 5,5 5,5 5,5 5,8 5,8 5,8 1,8 1,8 1,8 1,5 1,5 zM 0,3 C0,3 0,9 0,9 0,9 6,9 6,9 6,9 6,3 6,3 6,3 0,3 0,3 z"
			                    Fill="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.ToolWindowActiveCloseButtonNormalGlyphFillKey}}"
			                    SnapsToDevicePixels="True"
			                    Stretch="Fill"/>
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding Path=IsActive, RelativeSource={RelativeSource FindAncestor, {x:Type igWindows:ToolWindow}, 1}}" Value="False">
                            <Setter TargetName="closeButtonOuterBorder" Property="BorderBrush" Value="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.ToolWindowNotActiveMinMaxButtonNormalOuterBorderFillKey}}"/>
                            <Setter TargetName="closeButtonOuterBorder" Property="Background" Value="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.ToolWindowNotActiveMinMaxButtonNormalCenterFillKey}}"/>
                            <Setter TargetName="highlight" Property="Stroke" Value="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.ToolWindowNotActiveMinMaxButtonNormalInnerBorderFillKey}}"/>
                        </DataTrigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="closeButtonOuterBorder" Property="BorderBrush" Value="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.ToolWindowActiveMinMaxButtonHottrackOuterBorderFillKey}}"/>
                            <Setter TargetName="closeButtonOuterBorder" Property="Background" Value="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.ToolWindowActiveMinMaxButtonHottrackCenterFillKey}}"/>
                            <Setter TargetName="highlight" Property="Stroke" Value="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.ToolWindowActiveMinMaxButtonHottrackInnerBorderFillKey}}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="closeButtonOuterBorder" Property="BorderBrush" Value="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.ToolWindowActiveMinMaxButtonPressedOuterBorderFillKey}}"/>
                            <Setter TargetName="closeButtonOuterBorder" Property="Background" Value="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.ToolWindowActiveMinMaxButtonPressedCenterFillKey}}"/>
                            <Setter TargetName="highlight" Property="Stroke" Value="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.ToolWindowActiveMinMaxButtonPressedInnerBorderFillKey}}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="closeButtonOuterBorder" Property="BorderBrush" Value="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.ToolWindowDisabledCloseButtonOuterBorderFillKey}}"/>
                            <Setter TargetName="closeButtonOuterBorder" Property="Background" Value="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.ToolWindowDisabledCloseButtonCenterFillKey}}"/>
                            <Setter TargetName="highlight" Property="Stroke" Value="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.ToolWindowDisabledCloseButtonInnerBorderFillKey}}"/>
                            <Setter TargetName="root" Property="Opacity" Value="0.55"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

	<!-- ToolWindowCloseButtonStyle -->
	<Style x:Key="ToolWindowCloseButtonStyle" TargetType="{x:Type Button}">
		<Setter Property="ToolTip" Value="{StaticResource closeToolTip}"/>
		<Setter Property="Width" Value="17"/>
		<Setter Property="Height" Value="15"/>
		<Setter Property="Focusable" Value="False"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
					<Grid>
						<Border
							x:Name="closeButtonOuterBorder"
							BorderThickness="1,1,1,1"
							BorderBrush="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.ToolWindowActiveCloseButtonNormalOuterBorderFillKey}}"
                            SnapsToDevicePixels="True"
							CornerRadius="2"/>
						<Border
							x:Name="closeButtonInnerBorder"
							BorderThickness="1,1,1,1"
							Margin="1"
                            SnapsToDevicePixels="True"
							BorderBrush="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.ToolWindowActiveCloseButtonNormalInnerBorderFillKey}}"
							CornerRadius="1"/>
						<Border
							x:Name="closeButtonCenter"
							Margin="2"
                            SnapsToDevicePixels="True"
							Background="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.ToolWindowActiveCloseButtonNormalCenterFillKey}}"
							CornerRadius="1">
                            <Grid Width="8" Height="7">
                                <Path
			                        Width="8"
			                        Height="7"
			                        Data="M 3,1 C3,1 3,0 3,0 3,0 0,0 0,0 0,0 0,3 0,3 0,3 2,3 2,3 2,3 2,4 2,4 2,4 0,4 0,4 0,4 0,7 0,7 0,7 3,7 3,7 3,7 3,6 3,6 3,6 5,6 5,6 5,6 5,7 5,7 5,7 8,7 8,7 8,7 8,4 8,4 8,4 6,4 6,4 6,4 6,3 6,3 6,3 8,3 8,3 8,3 8,0 8,0 8,0 5,0 5,0 5,0 5,1 5,1 5,1 3,1 3,1 z"
			                        Fill="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.ToolWindowActiveCloseButtonNormalGlyphStrokeKey}}"
			                        Stretch="Fill"
                                    SnapsToDevicePixels="True"/>
                                <Path
                                    x:Name="closeGlyph"
			                        Width="6"
			                        Height="5"
			                        Data="M 0,0 C0,0 0,1 0,1 0,1 1,1 1,1 1,1 1,2 1,2 1,2 2,2 2,2 2,2 2,3 2,3 2,3 1,3 1,3 1,3 1,4 1,4 1,4 0,4 0,4 0,4 0,5 0,5 0,5 2,5 2,5 2,5 2,4 2,4 2,4 4,4 4,4 4,4 4,5 4,5 4,5 6,5 6,5 6,5 6,4 6,4 6,4 5,4 5,4 5,4 5,3 5,3 5,3 4,3 4,3 4,3 4,2 4,2 4,2 5,2 5,2 5,2 5,1 5,1 5,1 6,1 6,1 6,1 6,0 6,0 6,0 4,0 4,0 4,0 4,1 4,1 4,1 2,1 2,1 2,1 2,0 2,0 2,0 0,0 0,0 z"
			                        Fill="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.ToolWindowActiveCloseButtonNormalGlyphFillKey}}"
			                        Stretch="Fill"
                                    SnapsToDevicePixels="True"/>
                            </Grid>
						</Border>
					</Grid>
					<ControlTemplate.Triggers>
						<DataTrigger Binding="{Binding Path=IsActive, RelativeSource={RelativeSource FindAncestor, {x:Type igWindows:ToolWindow}, 1}}" Value="False">
							<Setter TargetName="closeButtonOuterBorder" Property="BorderBrush" Value="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.ToolWindowNotActiveCloseButtonNormalOuterBorderFillKey}}"/>
							<Setter TargetName="closeButtonInnerBorder" Property="BorderBrush" Value="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.ToolWindowNotActiveCloseButtonNormalInnerBorderFillKey}}"/>
							<Setter TargetName="closeButtonCenter" Property="Background" Value="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.ToolWindowNotActiveCloseButtonNormalCenterFillKey}}"/>
						</DataTrigger>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter TargetName="closeButtonOuterBorder" Property="BorderBrush" Value="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.ToolWindowActiveCloseButtonHottrackOuterBorderFillKey}}"/>
							<Setter TargetName="closeButtonInnerBorder" Property="BorderBrush" Value="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.ToolWindowActiveCloseButtonHottrackInnerBorderFillKey}}"/>
							<Setter TargetName="closeButtonCenter" Property="Background" Value="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.ToolWindowActiveCloseButtonHottrackCenterFillKey}}"/>
							<Setter TargetName="closeGlyph" Property="Fill" Value="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.ToolWindowActiveCloseButtonHottrackGlyphFillKey}}"/>
						</Trigger>
						<Trigger Property="IsPressed" Value="True">
							<Setter TargetName="closeButtonOuterBorder" Property="BorderBrush" Value="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.ToolWindowActiveCloseButtonPressedOuterBorderFillKey}}"/>
							<Setter TargetName="closeButtonInnerBorder" Property="BorderBrush" Value="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.ToolWindowActiveCloseButtonPressedInnerBorderFillKey}}"/>
							<Setter TargetName="closeButtonCenter" Property="Background" Value="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.ToolWindowActiveCloseButtonPressedCenterFillKey}}"/>
                            <Setter TargetName="closeGlyph" Property="Fill" Value="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.ToolWindowActiveCloseButtonPressedGlyphFillKey}}"/>
						</Trigger>
						<Trigger Property="IsEnabled" Value="False">
							<Setter TargetName="closeButtonOuterBorder" Property="BorderBrush" Value="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.ToolWindowDisabledCloseButtonOuterBorderFillKey}}"/>
							<Setter TargetName="closeButtonInnerBorder" Property="BorderBrush" Value="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.ToolWindowDisabledCloseButtonInnerBorderFillKey}}"/>
							<Setter TargetName="closeButtonCenter" Property="Background" Value="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.ToolWindowDisabledCloseButtonCenterFillKey}}"/>
                            <Setter TargetName="closeGlyph" Property="Fill" Value="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.ToolWindowDisabledCloseButtonGlyphFillKey}}"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	
	<!-- XamTabControl.CloseButtonStyle -->
	<Style x:Key="{x:Static igWindows:XamTabControl.CloseButtonStyleKey}" TargetType="{x:Type Button}">
		<Setter Property="ToolTip" Value="{Binding Source={x:Static igWindowsBase:ResourcesWindows.CloseButtonToolTip}, Path=Value}"/>
		<Setter Property="Width" Value="11"/>
		<Setter Property="Height" Value="11"/>
		<Setter Property="Focusable" Value="False"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
					<Grid>
						<Border
							x:Name="closeButtonOuterBorder"
							BorderThickness="1,1,1,1"
							BorderBrush="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.ToolWindowActiveCloseButtonNormalOuterBorderFillKey}}"
							CornerRadius="2"/>
						<Border
							x:Name="closeButtonInnerBorder"
							BorderThickness="1,1,1,1"
							Margin="1"
							BorderBrush="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.ToolWindowActiveCloseButtonNormalInnerBorderFillKey}}"
							CornerRadius="1"/>
						<Border
							x:Name="closeButtonCenter"
							Margin="2"
							Background="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.ToolWindowActiveCloseButtonNormalCenterFillKey}}"
							CornerRadius="1">
							<Path
								x:Name="closeGlyph"
								Data="M0,0L5,5 M0,5L5,0"
								Margin="1"
								StrokeThickness="1.75"
								SnapsToDevicePixels="True"
								Stroke="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.ToolWindowActiveCloseButtonNormalGlyphFillKey}}"/>
						</Border>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter TargetName="closeButtonOuterBorder" Property="BorderBrush" Value="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.ToolWindowActiveCloseButtonHottrackOuterBorderFillKey}}"/>
							<Setter TargetName="closeButtonInnerBorder" Property="BorderBrush" Value="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.ToolWindowActiveCloseButtonHottrackInnerBorderFillKey}}"/>
							<Setter TargetName="closeButtonCenter" Property="Background" Value="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.ToolWindowActiveCloseButtonHottrackCenterFillKey}}"/>
							<Setter TargetName="closeGlyph" Property="Stroke" Value="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.ToolWindowActiveCloseButtonHottrackGlyphFillKey}}"/>
						</Trigger>
						<Trigger Property="IsPressed" Value="True">
							<Setter TargetName="closeButtonOuterBorder" Property="BorderBrush" Value="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.ToolWindowActiveCloseButtonPressedOuterBorderFillKey}}"/>
							<Setter TargetName="closeButtonInnerBorder" Property="BorderBrush" Value="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.ToolWindowActiveCloseButtonPressedInnerBorderFillKey}}"/>
							<Setter TargetName="closeButtonCenter" Property="Background" Value="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.ToolWindowActiveCloseButtonPressedCenterFillKey}}"/>
							<Setter TargetName="closeGlyph" Property="Stroke" Value="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.ToolWindowActiveCloseButtonPressedGlyphFillKey}}"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	
	<!-- ======================== END BUTTON STYLES ======================== -->
	
    
    

    <!-- _________________________ CarouselListBox ______________________________________ -->
	<Style TargetType="{x:Type igWindows:XamCarouselListBox}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type igWindows:XamCarouselListBox}">
          <Grid Margin="{TemplateBinding Padding}">
            <!-- [JM 05-31-07 BR22561]  Explicitly add an AdornerDecorator to the control template so that the adorner layer we create
                 for the CarouselPanelNavigator gets placed here instead of somewhere up the parent chain. -->
            <AdornerDecorator>
              <Border Name="Border"
							     BorderBrush="{TemplateBinding BorderBrush}"
							     BorderThickness="{TemplateBinding BorderThickness}"
							     Background="{TemplateBinding Background}">
                <!--<igWindows:XamCarouselPanel Margin="3" IsItemsHost="True" Background="{TemplateBinding Background}"/>-->
                <ItemsPresenter
								  x:Name="ItemsPresenter"
								  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
              </Border>
            </AdornerDecorator>
          </Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- _________________________ CarouselPanelItem ______________________________________ -->
	<Style TargetType="{x:Type igWindows:CarouselPanelItem}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type igWindows:CarouselPanelItem}">
					<Grid>
						<Grid.RowDefinitions>
              <!-- JM 11-27-07 Work Item #1261 - Move the binding from the ScrollViewer's Height property (below) to the first grid row. -->
              <!--<RowDefinition Height="Auto"/>-->
              <RowDefinition Height="{Binding Path=(igWindows:XamCarouselPanel.ViewSettings).(igWindows:CarouselViewSettings.ItemSize).Height,RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type igWindows:XamCarouselPanel}}}"/>
              <RowDefinition Height="*"/>
						</Grid.RowDefinitions>
            <!-- JM 11-27-07 Work Item #1261 - Move the binding on the ScrollViewer's Height property to the first grid row above and set the ScrollViewer's VerticalAlignment to 'Bottom'. -->
            <!-- [JM 05-01-07] Set Focusable to False on ScrollViewer to allow mouse clicks to percolate up to the CarouselPanelItem -->
            <!--<ScrollViewer Name="ScrollViewer" 
								    HorizontalScrollBarVisibility="{TemplateBinding ItemHorizontalScrollBarVisibility}" 
								    VerticalScrollBarVisibility="{TemplateBinding ItemVerticalScrollBarVisibility}"
                    Focusable="False" 
								    Height="{Binding Path=(igWindows:XamCarouselPanel.ViewSettings).(igWindows:CarouselViewSettings.ItemSize).Height,RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type igWindows:XamCarouselPanel}}}">-->
            <ScrollViewer Name="ScrollViewer"
								    HorizontalScrollBarVisibility="{TemplateBinding ItemHorizontalScrollBarVisibility}"
								    VerticalScrollBarVisibility="{TemplateBinding ItemVerticalScrollBarVisibility}"
                    Focusable="False"
								    VerticalAlignment="Bottom">
              <Viewbox Name="ViewBox" VerticalAlignment="Bottom" HorizontalAlignment="Center">
								<Grid Name="itemContentHolder">
									<Border CornerRadius="0,0,0,0" Background="{TemplateBinding Background}" Name="itemContentHolderBackground" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"/>
                  
                  <!-- [JM 06-18-07] Add a binding for the ContentTemplateSelector property. -->
									<!--<ContentControl Name="itemContent" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}"  Margin="{TemplateBinding Padding}"/>-->
                  <ContentControl Name="itemContent" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"  Margin="{TemplateBinding Padding}"/>
                </Grid>
							</Viewbox>
						</ScrollViewer>

						<Border Grid.Row="1" 
							 Visibility="{Binding Path=ReflectionVisibility,RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type igWindows:XamCarouselPanel}}}"
							 Height="{Binding ActualHeight, ElementName=ScrollViewer}"
							 Width="{Binding ActualWidth, ElementName=ScrollViewer}"
							 Margin="0,1,0,0" IsHitTestVisible="False"
                                                      VerticalAlignment="Top"
                                                      >
							<Border.Background>
								<VisualBrush  Visual="{Binding ElementName=ScrollViewer}" 
										    Stretch="None" 
										    Opacity=".15" 
										    AlignmentX="Center" 
										    AlignmentY="Bottom">
									<VisualBrush.RelativeTransform>
										<TransformGroup>
											<MatrixTransform Matrix="1,0,0,-1,0,0" />
											<TranslateTransform Y="1" />
										</TransformGroup>
									</VisualBrush.RelativeTransform>
								</VisualBrush>
							</Border.Background>
						</Border>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsSelected" Value="true">
							<Setter TargetName="itemContent" Property="Margin" Value="4" />
							<Setter Property="Background" TargetName="itemContentHolderBackground" Value="{DynamicResource {ComponentResourceKey {x:Type igWindows:IGControlBase}, CarouselItemSelected}}"/>
						</Trigger>

						<Trigger Property="AutoScaleItemContentsToFit" Value="true">
							<!-- JM 01-08-08 Use disabled here instead of Hidden so children are measured properly -->
							<!--<Setter TargetName="ScrollViewer" Property="HorizontalScrollBarVisibility" Value="Hidden"/>-->
							<!--<Setter TargetName="ScrollViewer" Property="VerticalScrollBarVisibility" Value="Hidden"/>-->
							<Setter TargetName="ScrollViewer" Property="HorizontalScrollBarVisibility" Value="Disabled"/>
							<Setter TargetName="ScrollViewer" Property="VerticalScrollBarVisibility" Value="Disabled"/>
							
							<Setter TargetName="ViewBox" Property="Stretch" Value="Uniform"/>
							<Setter TargetName="ViewBox" Property="StretchDirection" Value="Both"/>
							
							<!-- JM 01-03-08 BR29383 After making change for workitem #1261 above, these Setters were resuting in improper item sizing in certain scenarios. -->
							<!--<Setter TargetName="ViewBox" Property="Width" Value="{Binding Path=ActualWidth,RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type ScrollContentPresenter}}}"/>
							<Setter TargetName="ViewBox" Property="Height" Value="{Binding Path=ActualHeight,RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type ScrollContentPresenter}}}"/>-->
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- _________________________ CarouselListBoxItem ______________________________________ -->
	<Style TargetType="{x:Type igWindows:CarouselListBoxItem}" BasedOn="{x:Static themes:PrimitivesGeneric.CarouselPanelItem}"/>

	<!-- _________________________ CarouselPanelNavigator ______________________________________ -->
	<!-- ************************************************** -->
	<!-- CarouselPanelNavigator Resources -->
	<!-- ************************************************** -->
	<Style x:Key="btnArrowRight" TargetType="{x:Type Button}" BasedOn="{x:Null}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
					<Canvas d:LayoutOverrides="Width, Height" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="0,0,0,0" x:Name="arrowButton">
						<Path Opacity="1" Fill="sc#1, 0.13831535, 0.13831535, 0.13831535" Width="26.538508892059326" Height="26.87999725341797" Canvas.Left="3.934021472930908" Canvas.Top="3.5599842071533203" Stretch="Fill" Data="M 4.260498046875,13.852081298828125 C5.87066650390625,6.6312255859375 12.97955322265625,2.189300537109375 20.136474609375,3.94232177734375 27.2935791015625,5.69525146484375 31.76953125,12.9747314453125 30.13641357421875,20.190185546875 28.50628662109375,27.39276123046875 21.4036865234375,31.8055419921875 14.26959228515625,30.05792236328125 7.13555908203125,28.3104248046875 2.6534423828125,21.060028076171875 4.260498046875,13.852081298828125 z" x:Name="Path">
						</Path>
						<Path Opacity="0.6117647058823529" Width="25.334744453430176" Height="24.591683864593506" Canvas.Left="4.615653038024902" Canvas.Top="5.23879861831665" Stretch="Fill" Data="M 5.1971435546875,12.100372314453125 C2.78692626953125,21.748779296875 8.26190185546875,27.98516845703125 14.3975830078125,29.48809814453125 20.53326416015625,30.991180419921875 28.99749755859375,27.63360595703125 29.88873291015625,17.663482666015625 31.31402587890625,1.718536376953125 7.58233642578125,2.5518798828125 5.1971435546875,12.100372314453125 z">
							<Path.Fill>
								<LinearGradientBrush StartPoint="0.3820454835904064,0.9977895195654568" EndPoint="0.5811230432963472,0.08484155479842076">
									<GradientStop Color="#FFffffff" Offset="0"/>
									<GradientStop Color="#000574B7" Offset="0.9611110091209412"/>
									<GradientStop Color="#000172b6" Offset="0.9777780175209045"/>
								</LinearGradientBrush>
							</Path.Fill>
						</Path>
						<Path Opacity="1" Width="24.118662357330322" Height="16.906932830810547" Canvas.Left="5.5799479484558105" Canvas.Top="4.055765151977539" Stretch="Fill" Data="M 5.63800048828125,12.484771728515625 C7.0235595703125,6.27349853515625 13.85638427734375,2.90582275390625 20.010986328125,4.413238525390625 26.16558837890625,5.92071533203125 30.85211181640625,12.1099853515625 29.4483642578125,18.316986083984375 28.046630859375,24.51470947265625 4.25445556640625,18.68682861328125 5.63800048828125,12.484771728515625 z">
							<Path.Fill>
								<LinearGradientBrush StartPoint="0.5971683238171168,0.018452292178045785" EndPoint="0.3879392376916156,1.3473106469217073">
									<GradientStop Color="#FFffffff" Offset="0"/>
									<GradientStop Color="#005C8DC3" Offset="0.949999988079071"/>
									<GradientStop Color="#005588c1" Offset="0.9944440126419067"/>
								</LinearGradientBrush>
							</Path.Fill>
						</Path>
						<Path Opacity="1" Width="16.575005531311035" Height="14.999998092651367" Canvas.Left="9.424983024597168" Canvas.Top="9.999992370605469" Stretch="Fill" Data="M 17.391357421875,24.249237060546875 C18.13848876953125,25.17987060546875 19.4166259765625,25.255950927734375 20.223876953125,24.4178466796875 20.223876953125,24.4178466796875 25.51727294921875,18.86846923828125 25.51727294921875,18.86846923828125 26.20782470703125,18.1514892578125 26.1473388671875,16.94146728515625 25.40081787109375,16.16644287109375 25.40081787109375,16.16644287109375 25.34283447265625,16.1090087890625 25.34283447265625,16.1090087890625 25.34283447265625,16.1090087890625 25.28924560546875,16.050628662109375 25.28924560546875,16.050628662109375 25.28924560546875,16.050628662109375 19.995849609375,10.501190185546875 19.995849609375,10.501190185546875 19.30523681640625,9.784210205078125 18.1396484375,9.847015380859375 17.3931884765625,10.62200927734375 16.6571044921875,11.38616943359375 16.59112548828125,12.572845458984375 17.24468994140625,13.291290283203125 17.24468994140625,13.291290283203125 19.0980224609375,15.481903076171875 19.0980224609375,15.481903076171875 19.0980224609375,15.481903076171875 11.58636474609375,15.4017333984375 11.58636474609375,15.4017333984375 10.5029296875,15.3839111328125 9.53753662109375,16.282623291015625 9.43402099609375,17.42413330078125 9.3291015625,18.5823974609375 10.14984130859375,19.53936767578125 11.26312255859375,19.5460205078125 11.26312255859375,19.5460205078125 19.1920166015625,19.579071044921875 19.1920166015625,19.579071044921875 19.1920166015625,19.579071044921875 17.53582763671875,21.1612548828125 17.53582763671875,21.1612548828125 16.73016357421875,21.951171875 16.6558837890625,23.332916259765625 17.391357421875,24.249237060546875 z">
							<Path.Fill>
								<LinearGradientBrush StartPoint="-1.5499975748199686,0.5000005722046627" EndPoint="0.19934859031448113,0.5000005722046627">
									<GradientStop Color="#FF666666" Offset="0"/>
									<GradientStop Color="#FFffffff" Offset="1"/>
								</LinearGradientBrush>
							</Path.Fill>
						</Path>
					</Canvas>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter Property="Fill" Value="{StaticResource pathNavHoverBrush}" TargetName="Path"/>
						</Trigger>
						<Trigger Property="IsPressed" Value="True">
							<Setter Property="Fill" Value="{StaticResource pathNavPressedBrush}" TargetName="Path"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="btnArrowLeft" TargetType="{x:Type Button}" BasedOn="{x:Null}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
					<Canvas d:LayoutOverrides="Width, Height" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="0,0,0,0" x:Name="arrowButton">
						<Path Opacity="1" Fill="{StaticResource pathNavUpBrush}" Width="26.538508892059326" Height="26.87999725341797" Canvas.Left="3.934021472930908" Canvas.Top="3.5599842071533203" Stretch="Fill" Data="M 4.260498046875,13.852081298828125 C5.87066650390625,6.6312255859375 12.97955322265625,2.189300537109375 20.136474609375,3.94232177734375 27.2935791015625,5.69525146484375 31.76953125,12.9747314453125 30.13641357421875,20.190185546875 28.50628662109375,27.39276123046875 21.4036865234375,31.8055419921875 14.26959228515625,30.05792236328125 7.13555908203125,28.3104248046875 2.6534423828125,21.060028076171875 4.260498046875,13.852081298828125 z" x:Name="Path">
						</Path>
						<Path Opacity="0.6117647058823529" Width="25.334744453430176" Height="24.591683864593506" Canvas.Left="4.615653038024902" Canvas.Top="5.23879861831665" Stretch="Fill" Data="M 5.1971435546875,12.100372314453125 C2.78692626953125,21.748779296875 8.26190185546875,27.98516845703125 14.3975830078125,29.48809814453125 20.53326416015625,30.991180419921875 28.99749755859375,27.63360595703125 29.88873291015625,17.663482666015625 31.31402587890625,1.718536376953125 7.58233642578125,2.5518798828125 5.1971435546875,12.100372314453125 z">
							<Path.Fill>
								<LinearGradientBrush StartPoint="0.3820454835904064,0.9977895195654568" EndPoint="0.5811230432963472,0.08484155479842076">
									<GradientStop Color="#FFffffff" Offset="0"/>
									<GradientStop Color="#000574B7" Offset="0.9611110091209412"/>
									<GradientStop Color="#000172b6" Offset="0.9777780175209045"/>
								</LinearGradientBrush>
							</Path.Fill>
						</Path>
						<Path Opacity="1" Width="24.118662357330322" Height="16.906932830810547" Canvas.Left="5.5799479484558105" Canvas.Top="4.055765151977539" Stretch="Fill" Data="M 5.63800048828125,12.484771728515625 C7.0235595703125,6.27349853515625 13.85638427734375,2.90582275390625 20.010986328125,4.413238525390625 26.16558837890625,5.92071533203125 30.85211181640625,12.1099853515625 29.4483642578125,18.316986083984375 28.046630859375,24.51470947265625 4.25445556640625,18.68682861328125 5.63800048828125,12.484771728515625 z">
							<Path.Fill>
								<LinearGradientBrush StartPoint="0.5971683238171168,0.018452292178045785" EndPoint="0.3879392376916156,1.3473106469217073">
									<GradientStop Color="#FFffffff" Offset="0"/>
									<GradientStop Color="#005C8DC3" Offset="0.949999988079071"/>
									<GradientStop Color="#005588c1" Offset="0.9944440126419067"/>
								</LinearGradientBrush>
							</Path.Fill>
						</Path>
						<Path Opacity="1" Width="16.575005531311035" Height="14.999998092651367" Canvas.Left="9.424983024597168" Canvas.Top="9.999992370605469" Stretch="Fill" Data="M 17.391357421875,24.249237060546875 C18.13848876953125,25.17987060546875 19.4166259765625,25.255950927734375 20.223876953125,24.4178466796875 20.223876953125,24.4178466796875 25.51727294921875,18.86846923828125 25.51727294921875,18.86846923828125 26.20782470703125,18.1514892578125 26.1473388671875,16.94146728515625 25.40081787109375,16.16644287109375 25.40081787109375,16.16644287109375 25.34283447265625,16.1090087890625 25.34283447265625,16.1090087890625 25.34283447265625,16.1090087890625 25.28924560546875,16.050628662109375 25.28924560546875,16.050628662109375 25.28924560546875,16.050628662109375 19.995849609375,10.501190185546875 19.995849609375,10.501190185546875 19.30523681640625,9.784210205078125 18.1396484375,9.847015380859375 17.3931884765625,10.62200927734375 16.6571044921875,11.38616943359375 16.59112548828125,12.572845458984375 17.24468994140625,13.291290283203125 17.24468994140625,13.291290283203125 19.0980224609375,15.481903076171875 19.0980224609375,15.481903076171875 19.0980224609375,15.481903076171875 11.58636474609375,15.4017333984375 11.58636474609375,15.4017333984375 10.5029296875,15.3839111328125 9.53753662109375,16.282623291015625 9.43402099609375,17.42413330078125 9.3291015625,18.5823974609375 10.14984130859375,19.53936767578125 11.26312255859375,19.5460205078125 11.26312255859375,19.5460205078125 19.1920166015625,19.579071044921875 19.1920166015625,19.579071044921875 19.1920166015625,19.579071044921875 17.53582763671875,21.1612548828125 17.53582763671875,21.1612548828125 16.73016357421875,21.951171875 16.6558837890625,23.332916259765625 17.391357421875,24.249237060546875 z" RenderTransformOrigin="0.5,0.5">
							<Path.Fill>
								<LinearGradientBrush StartPoint="-1.5499975748199686,0.5000005722046627" EndPoint="0.19934859031448113,0.5000005722046627">
									<GradientStop Color="#FF666666" Offset="0"/>
									<GradientStop Color="#FFffffff" Offset="1"/>
								</LinearGradientBrush>
							</Path.Fill>
							<Path.RenderTransform>
								<TransformGroup>
									<TranslateTransform X="0" Y="0"/>
									<ScaleTransform ScaleX="1" ScaleY="1"/>
									<SkewTransform AngleX="0" AngleY="0"/>
									<RotateTransform Angle="180"/>
									<TranslateTransform X="0" Y="0"/>
									<TranslateTransform X="0" Y="0"/>
								</TransformGroup>
							</Path.RenderTransform>
						</Path>
					</Canvas>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter Property="Fill" Value="{StaticResource pathNavHoverBrush}" TargetName="Path"/>
						</Trigger>
						<Trigger Property="IsPressed" Value="True">
							<Setter Property="Fill" Value="{StaticResource pathNavPressedBrush}" TargetName="Path"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="btnDoubleArrowRight" TargetType="{x:Type Button}" BasedOn="{x:Null}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
					<Canvas x:Name="arrowEnd">
						<Path Opacity="1" Fill="{StaticResource pathNavUpBrush}" Width="26.538509130477905" Height="26.87999701499939" Canvas.Left="3.934021234512329" Canvas.Top="3.5599844455718994" Stretch="Fill" Data="M 4.260498046875,13.852081298828125 C5.870666980743408,6.631226062774658 12.97955322265625,2.189301013946533 20.136474609375,3.942322015762329 27.2935791015625,5.695250988006592 31.76953125,12.9747314453125 30.13641357421875,20.190185546875 28.50628662109375,27.39276123046875 21.4036865234375,31.8055419921875 14.26959228515625,30.05792236328125 7.13555908203125,28.3104248046875 2.653441905975342,21.060028076171875 4.260498046875,13.852081298828125 z" x:Name="Path">
						</Path>
						<Path Opacity="0.6117647058823529" Width="25.334743976593018" Height="24.591683864593506" Canvas.Left="4.6156535148620605" Canvas.Top="5.23879861831665" Stretch="Fill" Data="M 5.197144031524658,12.100372314453125 C2.786926031112671,21.748779296875 8.26190185546875,27.98516845703125 14.3975830078125,29.48809814453125 20.53326416015625,30.991180419921875 28.99749755859375,27.63360595703125 29.88873291015625,17.663482666015625 31.31402587890625,1.7185360193252563 7.582335948944092,2.5518798828125 5.197144031524658,12.100372314453125 z">
							<Path.Fill>
								<LinearGradientBrush StartPoint="0.38204547195959315,0.9977895195654568" EndPoint="0.5811230354124666,0.0848415354082415">
									<GradientStop Color="#FFffffff" Offset="0"/>
									<GradientStop Color="#000574B7" Offset="0.9611110091209412"/>
									<GradientStop Color="#000172b6" Offset="0.9777780175209045"/>
								</LinearGradientBrush>
							</Path.Fill>
						</Path>
						<Path Opacity="1" Width="24.11866283416748" Height="16.906932830810547" Canvas.Left="5.579947471618652" Canvas.Top="4.055765151977539" Stretch="Fill" Data="M 5.638000011444092,12.484771728515625 C7.023560047149658,6.273499011993408 13.85638427734375,2.905822992324829 20.010986328125,4.413239002227783 26.16558837890625,5.920714855194092 30.85211181640625,12.1099853515625 29.4483642578125,18.316986083984375 28.046630859375,24.51470947265625 4.254456043243408,18.68682861328125 5.638000011444092,12.484771728515625 z">
							<Path.Fill>
								<LinearGradientBrush StartPoint="0.597168331781286,0.018452292178045785" EndPoint="0.38793924979234096,1.3473106469217073">
									<GradientStop Color="#FFffffff" Offset="0"/>
									<GradientStop Color="#005C8DC3" Offset="0.949999988079071"/>
									<GradientStop Color="#005588c1" Offset="0.9944440126419067"/>
								</LinearGradientBrush>
							</Path.Fill>
						</Path>
						<Path Opacity="1" Fill="#ffffff" Width="9.205267906188965" Height="14.999998092651367" Canvas.Left="15.794720649719238" Canvas.Top="9.999992370605469" Stretch="Fill" Data="M 16.391357421875,24.249237060546875 C17.13848876953125,25.17987060546875 18.4166259765625,25.255950927734375 19.223876953125,24.4178466796875 19.223876953125,24.4178466796875 24.51727294921875,18.86846923828125 24.51727294921875,18.86846923828125 25.20782470703125,18.1514892578125 25.1473388671875,16.94146728515625 24.40081787109375,16.16644287109375 24.40081787109375,16.16644287109375 24.34283447265625,16.1090087890625 24.34283447265625,16.1090087890625 24.34283447265625,16.1090087890625 24.28924560546875,16.050628662109375 24.28924560546875,16.050628662109375 24.28924560546875,16.050628662109375 18.995849609375,10.501190185546875 18.995849609375,10.501190185546875 18.30523681640625,9.784210205078125 17.1396484375,9.847015380859375 16.3931884765625,10.62200927734375 15.6571044921875,11.38616943359375 15.59112548828125,12.572845458984375 16.24468994140625,13.291290283203125 16.24468994140625,13.291290283203125 20.184280395507812,17.568161010742188 20.184280395507812,17.568161010742188 20.184280395507812,17.568161010742188 18.1920166015625,19.579071044921875 18.1920166015625,19.579071044921875 18.1920166015625,19.579071044921875 16.53582763671875,21.1612548828125 16.53582763671875,21.1612548828125 15.73016357421875,21.951171875 15.6558837890625,23.332916259765625 16.391357421875,24.249237060546875 z"/>
						<Path Opacity="1" Fill="#ffffff" Width="6.650805473327637" Height="10.837495803833008" Canvas.Left="10.071951866149902" Canvas.Top="12.081243515014648" Stretch="Fill" Data="M 10.503021240234375,22.37632179260254 C11.042823791503906,23.048704147338867 11.966278076171875,23.10367202758789 12.549516677856445,22.49814224243164 12.549516677856445,22.49814224243164 16.37399673461914,18.488718032836914 16.37399673461914,18.488718032836914 16.8729190826416,17.970699310302734 16.8292179107666,17.096458435058594 16.28985595703125,16.536502838134766 16.28985595703125,16.536502838134766 16.247962951660156,16.495006561279297 16.247962951660156,16.495006561279297 16.247962951660156,16.495006561279297 16.209245681762695,16.45282745361328 16.209245681762695,16.45282745361328 16.209245681762695,16.45282745361328 12.384767532348633,12.443358421325684 12.384767532348633,12.443358421325684 11.885799407958984,11.92534065246582 11.043662071228027,11.97071647644043 10.504344940185547,12.530649185180664 9.972524642944336,13.082755088806152 9.924854278564453,13.940128326416016 10.397054672241211,14.459205627441406 10.397054672241211,14.459205627441406 13.243409156799316,17.549243927001953 13.243409156799316,17.549243927001953 13.243409156799316,17.549243927001953 11.803997993469238,19.002126693725586 11.803997993469238,19.002126693725586 11.803997993469238,19.002126693725586 10.607400894165039,20.14525604248047 10.607400894165039,20.14525604248047 10.025309562683105,20.71596908569336 9.971641540527344,21.714279174804688 10.503021240234375,22.37632179260254 z"/>
					</Canvas>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter Property="Fill" Value="{StaticResource pathNavHoverBrush}" TargetName="Path"/>
						</Trigger>
						<Trigger Property="IsPressed" Value="True">
							<Setter Property="Fill" Value="{StaticResource pathNavPressedBrush}" TargetName="Path"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="btnDoubleArrowLeft" TargetType="{x:Type Button}" BasedOn="{x:Null}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
					<Canvas x:Name="arrowEnd">
						<Path Opacity="1" Fill="{StaticResource pathNavUpBrush}" Width="26.538509130477905" Height="26.87999701499939" Canvas.Left="3.934021234512329" Canvas.Top="3.5599844455718994" Stretch="Fill" Data="M 4.260498046875,13.852081298828125 C5.870666980743408,6.631226062774658 12.97955322265625,2.189301013946533 20.136474609375,3.942322015762329 27.2935791015625,5.695250988006592 31.76953125,12.9747314453125 30.13641357421875,20.190185546875 28.50628662109375,27.39276123046875 21.4036865234375,31.8055419921875 14.26959228515625,30.05792236328125 7.13555908203125,28.3104248046875 2.653441905975342,21.060028076171875 4.260498046875,13.852081298828125 z" x:Name="Path2">
						</Path>
						<Path Opacity="0.6117647058823529" Width="25.334743976593018" Height="24.591683864593506" Canvas.Left="4.6156535148620605" Canvas.Top="5.23879861831665" Stretch="Fill" Data="M 5.197144031524658,12.100372314453125 C2.786926031112671,21.748779296875 8.26190185546875,27.98516845703125 14.3975830078125,29.48809814453125 20.53326416015625,30.991180419921875 28.99749755859375,27.63360595703125 29.88873291015625,17.663482666015625 31.31402587890625,1.7185360193252563 7.582335948944092,2.5518798828125 5.197144031524658,12.100372314453125 z">
							<Path.Fill>
								<LinearGradientBrush StartPoint="0.38204547195959315,0.9977895195654568" EndPoint="0.5811230354124666,0.0848415354082415">
									<GradientStop Color="#FFffffff" Offset="0"/>
									<GradientStop Color="#000574B7" Offset="0.9611110091209412"/>
									<GradientStop Color="#000172b6" Offset="0.9777780175209045"/>
								</LinearGradientBrush>
							</Path.Fill>
						</Path>
						<Path Opacity="1" Width="24.11866283416748" Height="16.906932830810547" Canvas.Left="5.579947471618652" Canvas.Top="4.055765151977539" Stretch="Fill" Data="M 5.638000011444092,12.484771728515625 C7.023560047149658,6.273499011993408 13.85638427734375,2.905822992324829 20.010986328125,4.413239002227783 26.16558837890625,5.920714855194092 30.85211181640625,12.1099853515625 29.4483642578125,18.316986083984375 28.046630859375,24.51470947265625 4.254456043243408,18.68682861328125 5.638000011444092,12.484771728515625 z">
							<Path.Fill>
								<LinearGradientBrush StartPoint="0.597168331781286,0.018452292178045785" EndPoint="0.38793924979234096,1.3473106469217073">
									<GradientStop Color="#FFffffff" Offset="0"/>
									<GradientStop Color="#005C8DC3" Offset="0.949999988079071"/>
									<GradientStop Color="#005588c1" Offset="0.9944440126419067"/>
								</LinearGradientBrush>
							</Path.Fill>
						</Path>
						<ItemsControl d:IsGroup="True" Width="14.9280366897583" Height="14.9999980926514" Canvas.Left="10" Canvas.Top="9.99999237060547" x:Name="Group" RenderTransformOrigin="0.5,0.5">
							<ItemsControl.RenderTransform>
								<TransformGroup>
									<TranslateTransform X="0" Y="0"/>
									<ScaleTransform ScaleX="-1" ScaleY="1"/>
									<SkewTransform AngleX="0" AngleY="0"/>
									<RotateTransform Angle="0"/>
									<TranslateTransform X="0" Y="0"/>
									<TranslateTransform X="-0.5" Y="0"/>
								</TransformGroup>
							</ItemsControl.RenderTransform>
							<ItemsControl.Template>
								<ControlTemplate TargetType="{x:Type ItemsControl}">
									<Viewbox>
										<Viewbox.Child>
											<Canvas Width="14.9280366897583" Height="14.9999980926514" IsItemsHost="True"/>
										</Viewbox.Child>
									</Viewbox>
								</ControlTemplate>
							</ItemsControl.Template>
							<Path Opacity="1" Fill="#ffffff" Width="9.20526790618896" Height="14.9999980926514" Canvas.Left="5.72276878356934" Canvas.Top="0" Stretch="Fill" Data="M 16.391357421875,24.249237060546875 C17.13848876953125,25.17987060546875 18.4166259765625,25.255950927734375 19.223876953125,24.4178466796875 19.223876953125,24.4178466796875 24.51727294921875,18.86846923828125 24.51727294921875,18.86846923828125 25.20782470703125,18.1514892578125 25.1473388671875,16.94146728515625 24.40081787109375,16.16644287109375 24.40081787109375,16.16644287109375 24.34283447265625,16.1090087890625 24.34283447265625,16.1090087890625 24.34283447265625,16.1090087890625 24.28924560546875,16.050628662109375 24.28924560546875,16.050628662109375 24.28924560546875,16.050628662109375 18.995849609375,10.501190185546875 18.995849609375,10.501190185546875 18.30523681640625,9.784210205078125 17.1396484375,9.847015380859375 16.3931884765625,10.62200927734375 15.6571044921875,11.38616943359375 15.59112548828125,12.572845458984375 16.24468994140625,13.291290283203125 16.24468994140625,13.291290283203125 20.184280395507812,17.568161010742188 20.184280395507812,17.568161010742188 20.184280395507812,17.568161010742188 18.1920166015625,19.579071044921875 18.1920166015625,19.579071044921875 18.1920166015625,19.579071044921875 16.53582763671875,21.1612548828125 16.53582763671875,21.1612548828125 15.73016357421875,21.951171875 15.6558837890625,23.332916259765625 16.391357421875,24.249237060546875 z" x:Name="Path"/>
							<Path Opacity="1" Fill="#ffffff" Width="6.65080547332764" Height="10.837495803833" Canvas.Left="0" Canvas.Top="2.08125114440918" Stretch="Fill" Data="M 10.503021240234375,22.37632179260254 C11.042823791503906,23.048704147338867 11.966278076171875,23.10367202758789 12.549516677856445,22.49814224243164 12.549516677856445,22.49814224243164 16.37399673461914,18.488718032836914 16.37399673461914,18.488718032836914 16.8729190826416,17.970699310302734 16.8292179107666,17.096458435058594 16.28985595703125,16.536502838134766 16.28985595703125,16.536502838134766 16.247962951660156,16.495006561279297 16.247962951660156,16.495006561279297 16.247962951660156,16.495006561279297 16.209245681762695,16.45282745361328 16.209245681762695,16.45282745361328 16.209245681762695,16.45282745361328 12.384767532348633,12.443358421325684 12.384767532348633,12.443358421325684 11.885799407958984,11.92534065246582 11.043662071228027,11.97071647644043 10.504344940185547,12.530649185180664 9.972524642944336,13.082755088806152 9.924854278564453,13.940128326416016 10.397054672241211,14.459205627441406 10.397054672241211,14.459205627441406 13.243409156799316,17.549243927001953 13.243409156799316,17.549243927001953 13.243409156799316,17.549243927001953 11.803997993469238,19.002126693725586 11.803997993469238,19.002126693725586 11.803997993469238,19.002126693725586 10.607400894165039,20.14525604248047 10.607400894165039,20.14525604248047 10.025309562683105,20.71596908569336 9.971641540527344,21.714279174804688 10.503021240234375,22.37632179260254 z" x:Name="Path1"/>
						</ItemsControl>
					</Canvas>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter Property="Fill" Value="{StaticResource pathNavHoverBrush}" TargetName="Path2"/>
						</Trigger>
						<Trigger Property="IsPressed" Value="True">
							<Setter Property="Fill" Value="{StaticResource pathNavPressedBrush}" TargetName="Path2"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<!-- ************************************************** -->
	<!-- End CarouselPanelNavigator Resources -->
	<!-- ************************************************** -->
	<Style TargetType="{x:Type igWindows:CarouselPanelNavigator}">
		<Setter Property="HorizontalAlignment" Value="Right"/>
		<Setter Property="VerticalAlignment" Value="Bottom"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type igWindows:CarouselPanelNavigator}">
					<Grid HorizontalAlignment="Right" VerticalAlignment="Bottom" Margin="0,0,4,4" x:Name="navGrid" RenderTransformOrigin="0.5,0.5">
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="Auto"/>
						</Grid.ColumnDefinitions>
						<Grid.RowDefinitions>
							<RowDefinition Height="Auto"/>
						</Grid.RowDefinitions>
						<Grid.RenderTransform>
							<TransformGroup>
								<TranslateTransform X="0" Y="0"/>
								<ScaleTransform ScaleX="1" ScaleY="1"/>
								<SkewTransform AngleX="0" AngleY="0"/>
								<RotateTransform Angle="0"/>
								<TranslateTransform X="0" Y="0"/>
								<TranslateTransform X="0" Y="0"/>
							</TransformGroup>
						</Grid.RenderTransform>
						<Rectangle Opacity="0.3" Fill="sc#1, 1, 1, 1" RadiusX="10" RadiusY="10" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="0,0,0,0" Width="Auto" Height="Auto" x:Name="Rectangle1"/>
						<Rectangle Opacity="0.3" Fill="sc#1, 1, 1, 1" RadiusX="8.56683218782632" RadiusY="8.56683218782632" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="2,2,2,2" Width="Auto" Height="Auto" x:Name="Rectangle2"/>
						<Grid HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,8,0,0" Width="109.417478206505" Height="Auto" x:Name="gridButtons">
							<Grid.ColumnDefinitions>
								<ColumnDefinition/>
							</Grid.ColumnDefinitions>
							<Grid.RowDefinitions>
								<RowDefinition/>
							</Grid.RowDefinitions>
							<Button 
								x:Name="navigateLineRight"
								Style="{StaticResource btnArrowRight}" 
								HorizontalAlignment="Right" 
								Command="{x:Static igWindows:XamCarouselPanelCommands.NavigateToNextItem}" 
								CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=CarouselPanel}" 
								Margin="0,4.75708557998065,24,0" 
								Width="33" 										 
								d:LayoutOverrides="Height" 
								VerticalAlignment="Top" Height="33" 
								Canvas.Left="51.5027555076267" Canvas.Top="0">
								<Button.RenderTransform>
									<TransformGroup>
										<TranslateTransform X="0" Y="0"/>
										<ScaleTransform ScaleX="1" ScaleY="1"/>
										<SkewTransform AngleX="0" AngleY="0"/>
										<RotateTransform Angle="0"/>
										<TranslateTransform X="0" Y="0"/>
										<TranslateTransform X="0" Y="0"/>
									</TransformGroup>
								</Button.RenderTransform>
							</Button>
							<Button 
								x:Name="navigatePageRight" 
								d:LayoutOverrides="Width" 
								Style="{StaticResource btnDoubleArrowRight}" 
								Command="{x:Static igWindows:XamCarouselPanelCommands.NavigateToNextPage}" 
								CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=CarouselPanel}" 
								HorizontalAlignment="Right" VerticalAlignment="Top" 
								Margin="0,4.75708557998065,0,0" 
								Width="33" Height="33" 
								Canvas.Left="76.0445939324419" Canvas.Top="0" 										
								RenderTransformOrigin="0.5,0.5">
								<Button.RenderTransform>
									<TransformGroup>
										<TranslateTransform X="0" Y="0"/>
										<ScaleTransform ScaleX="0.70000000000000007" ScaleY="0.70000000000000007"/>
										<SkewTransform AngleX="0" AngleY="0"/>
										<RotateTransform Angle="0"/>
										<TranslateTransform X="0" Y="0"/>
										<TranslateTransform X="0" Y="0"/>
									</TransformGroup>
								</Button.RenderTransform>
							</Button>
							<Button 
								x:Name="navigateLineLeft" 
								d:LayoutOverrides="HorizontalAlignment" 
								Style="{StaticResource btnArrowLeft}" 
								Command="{x:Static igWindows:XamCarouselPanelCommands.NavigateToPreviousItem}" 
								CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=CarouselPanel}" 
								HorizontalAlignment="Left" 
								VerticalAlignment="Top" 										
								Margin="24,4.75708557998065,0,0" 
								Width="32.9999999999999" Height="33"										
								Canvas.Left="18.7709176140105" Canvas.Top="0">
								<Button.RenderTransform>
									<TransformGroup>
										<TranslateTransform X="0" Y="0"/>
										<ScaleTransform ScaleX="1" ScaleY="1"/>
										<SkewTransform AngleX="0" AngleY="0"/>
										<RotateTransform Angle="0"/>
										<TranslateTransform X="0" Y="0"/>
										<TranslateTransform X="0" Y="0"/>
									</TransformGroup>
								</Button.RenderTransform>
							</Button>
							<Button 
								x:Name="navigatePageLeft" 
								d:LayoutOverrides="Width" 
								Style="{StaticResource btnDoubleArrowLeft}" 
								Command="{x:Static igWindows:XamCarouselPanelCommands.NavigateToPreviousPage}" 
								CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=CarouselPanel}" 
								HorizontalAlignment="Left" 
								Margin="0,4.75708557998065,0,0" 
								Width="33" Height="33" 										
								VerticalAlignment="Top" 
								Canvas.Left="-4.95" Canvas.Top="0" 
								RenderTransformOrigin="0.5,0.5">
								<Button.RenderTransform>
									<TransformGroup>
										<TranslateTransform X="0" Y="0"/>
										<ScaleTransform ScaleX="0.70000000000000007" ScaleY="0.70000000000000007"/>
										<SkewTransform AngleX="0" AngleY="0"/>
										<RotateTransform Angle="0"/>
										<TranslateTransform X="0" Y="0"/>
										<TranslateTransform X="0" Y="0"/>
									</TransformGroup>
								</Button.RenderTransform>
							</Button>
						</Grid>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

    <!-- ==================== -->
    <!--     NA 2008 Vol 2    -->
    <!-- ==================== -->
    <!-- _________________________ XamTabControl Resources __________________________________________ -->
    <!-- ************************************************** -->
    <!-- XamTabControl Resources -->
    <!-- ************************************************** -->
	<Style TargetType="{x:Type RepeatButton}" x:Key="PagerScrollBtnBase">
		<!--<Setter Property="ClickMode" Value="Hover"/>-->
		<Setter Property="Focusable" Value="False"/>
		<Setter Property="BorderBrush" Value="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.TabItemNormalOuterBorderFillKey}}"/>
		<Setter Property="Background" Value="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.TabItemNormalTopCenterFillKey}}"/>
		<Setter Property="Foreground" Value="Black"/>
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="HorizontalContentAlignment" Value="Center"/>
		<Setter Property="VerticalContentAlignment" Value="Center"/>
		<Setter Property="Padding" Value="3"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type RepeatButton}">
					<Grid>
						<Border
							BorderBrush="{TemplateBinding BorderBrush}"
							BorderThickness="{TemplateBinding BorderThickness}"
							Background="{TemplateBinding Background}"
							CornerRadius="3">
							<Path
								Margin="{TemplateBinding Padding}"
								HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
								VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
								Data="{Binding Path=Content, RelativeSource={RelativeSource TemplatedParent}}"
								Fill="{TemplateBinding Foreground}"/>
						</Border>
						<Border
							x:Name="Highlight"
							Background="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.TabItemHottrackHighlightLightFillKey}}"
							BorderBrush="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.TabItemHottrackHighlightDarkFillKey}}"
							Visibility="Collapsed"/>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Style.Triggers>
		</Style.Triggers>
	</Style>
	
	<Style x:Key="{x:Static igWindows:XamTabControl.ScrollLeftButtonStyleKey}" TargetType="{x:Type RepeatButton}" BasedOn="{StaticResource PagerScrollBtnBase}">
		<Setter Property="Content" Value="M 4,0 L 4,6 0,3 Z"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type RepeatButton}">
					<Grid>
						<Border
							BorderBrush="{TemplateBinding BorderBrush}"
							BorderThickness="{TemplateBinding BorderThickness}"
							Background="{TemplateBinding Background}"
							CornerRadius="3,0,0,3">
							<Path
								Margin="{TemplateBinding Padding}"
								HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
								VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
								Data="{Binding Path=Content, RelativeSource={RelativeSource TemplatedParent}}"
								Fill="{TemplateBinding Foreground}"/>
						</Border>
						<Border
							x:Name="Highlight"
							Background="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.TabItemHottrackHighlightLightFillKey}}"
							BorderBrush="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.TabItemHottrackHighlightDarkFillKey}}"
							Visibility="Collapsed"
							CornerRadius="3,0,0,3"
							BorderThickness="1,1,0,1"
							Width="3"
							HorizontalAlignment="Left"/>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter TargetName="Highlight" Property="Visibility" Value="Visible"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	
	<Style x:Key="{x:Static igWindows:XamTabControl.ScrollRightButtonStyleKey}" TargetType="{x:Type RepeatButton}" BasedOn="{StaticResource PagerScrollBtnBase}">
		<Setter Property="Content" Value="M 0,0 L 0,6 4,3 Z"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type RepeatButton}">
					<Grid>
						<Border
							BorderBrush="{TemplateBinding BorderBrush}"
							BorderThickness="{TemplateBinding BorderThickness}"
							Background="{TemplateBinding Background}"
							CornerRadius="0,3,3,0">
							<Path
								Margin="{TemplateBinding Padding}"
								HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
								VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
								Data="{Binding Path=Content, RelativeSource={RelativeSource TemplatedParent}}"
								Fill="{TemplateBinding Foreground}"/>
						</Border>
						<Border
							x:Name="Highlight"
							Background="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.TabItemHottrackHighlightLightFillKey}}"
							BorderBrush="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.TabItemHottrackHighlightDarkFillKey}}"
							Visibility="Collapsed"
							CornerRadius="0,3,3,0"
							BorderThickness="0,1,1,1"
							Width="3"
							HorizontalAlignment="Right"/>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter TargetName="Highlight" Property="Visibility" Value="Visible"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	
	<Style x:Key="{x:Static igWindows:XamTabControl.ScrollUpButtonStyleKey}" TargetType="{x:Type RepeatButton}" BasedOn="{StaticResource PagerScrollBtnBase}">
		<Setter Property="Content" Value="M 0,4 L 6,4 3,0 Z"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type RepeatButton}">
					<Grid>
						<Border
							BorderBrush="{TemplateBinding BorderBrush}"
							BorderThickness="{TemplateBinding BorderThickness}"
							Background="{TemplateBinding Background}"
							CornerRadius="3,3,0,0">
							<Path
								Margin="{TemplateBinding Padding}"
								HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
								VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
								Data="{Binding Path=Content, RelativeSource={RelativeSource TemplatedParent}}"
								Fill="{TemplateBinding Foreground}"/>
						</Border>
						<Border
							x:Name="Highlight"
							Background="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.TabItemHottrackHighlightLightFillKey}}"
							BorderBrush="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.TabItemHottrackHighlightDarkFillKey}}"
							Visibility="Collapsed"
							CornerRadius="3,3,0,0"
							BorderThickness="1,1,1,0"
							Height="3"
							VerticalAlignment="Top"/>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter TargetName="Highlight" Property="Visibility" Value="Visible"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	
	<Style x:Key="{x:Static igWindows:XamTabControl.ScrollDownButtonStyleKey}" TargetType="{x:Type RepeatButton}" BasedOn="{StaticResource PagerScrollBtnBase}">
		<Setter Property="Content" Value="M 0,0 L 6,0 3,4 Z"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type RepeatButton}">
					<Grid>
						<Border
							BorderBrush="{TemplateBinding BorderBrush}"
							BorderThickness="{TemplateBinding BorderThickness}"
							Background="{TemplateBinding Background}"
							CornerRadius="0,0,3,3">
							<Path
								Margin="{TemplateBinding Padding}"
								HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
								VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
								Data="{Binding Path=Content, RelativeSource={RelativeSource TemplatedParent}}"
								Fill="{TemplateBinding Foreground}"/>
						</Border>
						<Border
							x:Name="Highlight"
							Background="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.TabItemHottrackHighlightLightFillKey}}"
							BorderBrush="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.TabItemHottrackHighlightDarkFillKey}}"
							Visibility="Collapsed"
							CornerRadius="0,0,3,3"
							BorderThickness="1,0,1,1"
							Height="3"
							VerticalAlignment="Bottom"/>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter TargetName="Highlight" Property="Visibility" Value="Visible"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	
	

	<!-- _________________________ XamTabControl - SingleRowTabItemPagerStyleKey ______________________________________ -->
	<Style x:Key="{x:Static igWindows:XamTabControl.SingleRowTabItemPagerStyleKey}" TargetType="{x:Type igWindows:XamPager}">
		<Setter Property="ScrollDownButtonStyle" Value="{DynamicResource {x:Static igWindows:XamTabControl.ScrollDownButtonStyleKey}}"/>
		<Setter Property="ScrollLeftButtonStyle" Value="{DynamicResource {x:Static igWindows:XamTabControl.ScrollLeftButtonStyleKey}}"/>
		<Setter Property="ScrollRightButtonStyle" Value="{DynamicResource {x:Static igWindows:XamTabControl.ScrollRightButtonStyleKey}}"/>
		<Setter Property="ScrollUpButtonStyle" Value="{DynamicResource {x:Static igWindows:XamTabControl.ScrollUpButtonStyleKey}}"/>
		<Setter Property="Control.Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type igWindows:XamPager}">
					<Grid>
						<Grid.RowDefinitions>
							<RowDefinition x:Name="row1" Height="Auto"/>
							<RowDefinition x:Name="row2" Height="Auto"/>
							<RowDefinition x:Name="row3" Height="Auto"/>
						</Grid.RowDefinitions>
						<Grid.ColumnDefinitions>
							<ColumnDefinition x:Name="col1" Width="Auto"/>
							<ColumnDefinition x:Name="col2" Width="Auto"/>
							<ColumnDefinition x:Name="col3" Width="Auto"/>
						</Grid.ColumnDefinitions>
						<!-- I would have template bound the cancontent scroll but when we try to change 
					this property from the tab control template trigger its being ignored because the 
					scoll viewer will bind to the cancontentscroll of the templated parent -->
						<igWindows:PagerContentPresenter x:Name="PART_PagerContentPresenter" ReserveSpaceForScrollButtons="False" CanContentScroll="True"/>
						<RepeatButton
								x:Name="PART_ScrollLeft"
								Style="{TemplateBinding ScrollLeftButtonStyle}"
								Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
								CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}"
								Command="{x:Static ScrollBar.LineLeftCommand}">
						</RepeatButton>
						<RepeatButton
								x:Name="PART_ScrollUp"
								Style="{TemplateBinding ScrollUpButtonStyle}"
								Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
								CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}"
								Command="{x:Static ScrollBar.LineUpCommand}"/>
						<RepeatButton
								x:Name="PART_ScrollRight"
								Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
								Style="{TemplateBinding ScrollRightButtonStyle}"
								CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}"
								Command="{x:Static ScrollBar.LineRightCommand}">
						</RepeatButton>
						<RepeatButton
								x:Name="PART_ScrollDown"
								Style="{TemplateBinding ScrollDownButtonStyle}"
								Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
								CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}"
								Command="{x:Static ScrollBar.LineDownCommand}"/>
					</Grid>
					<ControlTemplate.Triggers>
						<DataTrigger Binding="{Binding RelativeSource={RelativeSource FindAncestor, {x:Type igWindows:XamTabControl}, 1}, Path=TabStripPlacement}" Value="Top">
							<Setter Property="Grid.Row" TargetName="PART_ScrollLeft" Value="1"/>
							<Setter Property="Grid.Column" TargetName="PART_ScrollLeft" Value="1"/>
							<Setter Property="Margin" TargetName="PART_ScrollLeft" Value="3,0,1,2"/>
							<Setter Property="Grid.Row" TargetName="PART_ScrollRight" Value="1"/>
							<Setter Property="Grid.Column" TargetName="PART_ScrollRight" Value="2"/>
							<Setter Property="Margin" TargetName="PART_ScrollRight" Value="1,0,1,2"/>
							<Setter Property="Grid.RowSpan" TargetName="PART_PagerContentPresenter" Value="3"/>
							<Setter Property="Width" TargetName="col1" Value="*"/>
							<Setter Property="Height" TargetName="row1" Value="*"/>
							<Setter Property="ClipContentVertically" TargetName="PART_PagerContentPresenter" Value="False"/>
						</DataTrigger>
						<DataTrigger Binding="{Binding RelativeSource={RelativeSource FindAncestor, {x:Type igWindows:XamTabControl}, 1}, Path=TabStripPlacement}" Value="Bottom">
							<Setter Property="Grid.Row" TargetName="PART_ScrollLeft" Value="0"/>
							<Setter Property="Grid.Column" TargetName="PART_ScrollLeft" Value="1"/>
							<Setter Property="Margin" TargetName="PART_ScrollLeft" Value="3,2,1,0"/>
							<Setter Property="Grid.Row" TargetName="PART_ScrollRight" Value="0"/>
							<Setter Property="Grid.Column" TargetName="PART_ScrollRight" Value="2"/>
							<Setter Property="Margin" TargetName="PART_ScrollRight" Value="1,2,1,0"/>
							<Setter Property="Grid.RowSpan" TargetName="PART_PagerContentPresenter" Value="3"/>
							<Setter Property="Width" TargetName="col1" Value="*"/>
							<Setter Property="Height" TargetName="row3" Value="*"/>
							<Setter Property="ClipContentVertically" TargetName="PART_PagerContentPresenter" Value="False"/>
						</DataTrigger>
						<DataTrigger Binding="{Binding RelativeSource={RelativeSource FindAncestor, {x:Type igWindows:XamTabControl}, 1}, Path=TabStripPlacement}" Value="Left">
							<Setter Property="Grid.Row" TargetName="PART_ScrollUp" Value="1"/>
							<Setter Property="Grid.Column" TargetName="PART_ScrollUp" Value="1"/>
							<Setter Property="Margin" TargetName="PART_ScrollUp" Value="0,3,2,1"/>
							<Setter Property="Grid.Row" TargetName="PART_ScrollDown" Value="2"/>
							<Setter Property="Grid.Column" TargetName="PART_ScrollDown" Value="1"/>
							<Setter Property="Margin" TargetName="PART_ScrollDown" Value="0,1,2,1"/>
							<Setter Property="Grid.ColumnSpan" TargetName="PART_PagerContentPresenter" Value="2"/>
							<Setter Property="Height" TargetName="row1" Value="*"/>
							<Setter Property="Width" TargetName="col1" Value="*"/>
							<Setter Property="Width" TargetName="col3" Value="0"/>
							<Setter Property="ClipContentHorizontally" TargetName="PART_PagerContentPresenter" Value="False"/>
						</DataTrigger>
						<DataTrigger Binding="{Binding RelativeSource={RelativeSource FindAncestor, {x:Type igWindows:XamTabControl}, 1}, Path=TabStripPlacement}" Value="Right">
							<Setter Property="Grid.Row" TargetName="PART_ScrollUp" Value="1"/>
							<Setter Property="Grid.Column" TargetName="PART_ScrollUp" Value="0"/>
							<Setter Property="Margin" TargetName="PART_ScrollUp" Value="2,3,0,1"/>
							<Setter Property="Grid.Row" TargetName="PART_ScrollDown" Value="2"/>
							<Setter Property="Grid.Column" TargetName="PART_ScrollDown" Value="0"/>
							<Setter Property="Margin" TargetName="PART_ScrollDown" Value="2,1,0,1"/>
							<Setter Property="Grid.ColumnSpan" TargetName="PART_PagerContentPresenter" Value="2"/>
							<Setter Property="Height" TargetName="row1" Value="*"/>
							<Setter Property="Width" TargetName="col2" Value="*"/>
							<Setter Property="Width" TargetName="col3" Value="0"/>
							<Setter Property="ClipContentHorizontally" TargetName="PART_PagerContentPresenter" Value="False"/>
						</DataTrigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	
	
	<!-- _________________________ XamTabControl - MultiRowTabItemPagerStyleKey ______________________________________ -->
	<Style x:Key="{x:Static igWindows:XamTabControl.MultiRowTabItemPagerStyleKey}" TargetType="{x:Type igWindows:XamPager}">
		<Setter Property="ScrollDownButtonStyle" Value="{DynamicResource {x:Static igWindows:XamTabControl.ScrollDownButtonStyleKey}}"/>
		<Setter Property="ScrollLeftButtonStyle" Value="{DynamicResource {x:Static igWindows:XamTabControl.ScrollLeftButtonStyleKey}}"/>
		<Setter Property="ScrollRightButtonStyle" Value="{DynamicResource {x:Static igWindows:XamTabControl.ScrollRightButtonStyleKey}}"/>
		<Setter Property="ScrollUpButtonStyle" Value="{DynamicResource {x:Static igWindows:XamTabControl.ScrollUpButtonStyleKey}}"/>
		<Setter Property="Control.Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type igWindows:XamPager}">
					<Grid>
						<Grid.RowDefinitions>
							<RowDefinition x:Name="row1" Height="Auto"/>
							<RowDefinition x:Name="row2" Height="Auto"/>
							<RowDefinition x:Name="row3" Height="Auto"/>
						</Grid.RowDefinitions>
						<Grid.ColumnDefinitions>
							<ColumnDefinition x:Name="col1" Width="Auto"/>
							<ColumnDefinition x:Name="col2" Width="Auto"/>
							<ColumnDefinition x:Name="col3" Width="Auto"/>
						</Grid.ColumnDefinitions>
						<!-- I would have template bound the cancontent scroll but when we try to change 
					this property from the tab control template trigger its being ignored because the 
					scoll viewer will bind to the cancontentscroll of the templated parent -->
						<igWindows:PagerContentPresenter x:Name="PART_PagerContentPresenter" ReserveSpaceForScrollButtons="False" CanContentScroll="True"/>
						<RepeatButton
								x:Name="PART_ScrollLeft"
								Style="{TemplateBinding ScrollLeftButtonStyle}"
								Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
								CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}"
								Command="{x:Static ScrollBar.LineLeftCommand}">
						</RepeatButton>
						<RepeatButton
								x:Name="PART_ScrollUp"
								Style="{TemplateBinding ScrollUpButtonStyle}"
								Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
								CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}"
								Command="{x:Static ScrollBar.LineUpCommand}"/>
						<RepeatButton
								x:Name="PART_ScrollRight"
								Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
								Style="{TemplateBinding ScrollRightButtonStyle}"
								CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}"
								Command="{x:Static ScrollBar.LineRightCommand}">
						</RepeatButton>
						<RepeatButton
								x:Name="PART_ScrollDown"
								Style="{TemplateBinding ScrollDownButtonStyle}"
								Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
								CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}"
								Command="{x:Static ScrollBar.LineDownCommand}"/>
					</Grid>
					<ControlTemplate.Triggers>
						<DataTrigger Binding="{Binding RelativeSource={RelativeSource FindAncestor, {x:Type igWindows:XamTabControl}, 1}, Path=TabStripPlacement}" Value="Top">
							<Setter Property="Grid.Row" TargetName="PART_ScrollUp" Value="1"/>
							<Setter Property="Grid.Column" TargetName="PART_ScrollUp" Value="1"/>
							<Setter Property="Margin" TargetName="PART_ScrollUp" Value="3,0,0,1"/>
							<Setter Property="Grid.Row" TargetName="PART_ScrollDown" Value="2"/>
							<Setter Property="Grid.Column" TargetName="PART_ScrollDown" Value="1"/>
							<Setter Property="Margin" TargetName="PART_ScrollDown" Value="3,1,0,3"/>
							<Setter Property="Grid.RowSpan" TargetName="PART_PagerContentPresenter" Value="3"/>
							<Setter Property="Width" TargetName="col3" Value="0"/>
							<Setter Property="Width" TargetName="col1" Value="*"/>
							<Setter Property="Height" TargetName="row1" Value="*"/>
							<Setter Property="ClipContentVertically" TargetName="PART_PagerContentPresenter" Value="False"/>
						</DataTrigger>
						<DataTrigger Binding="{Binding RelativeSource={RelativeSource FindAncestor, {x:Type igWindows:XamTabControl}, 1}, Path=TabStripPlacement}" Value="Bottom">
							<Setter Property="Grid.Row" TargetName="PART_ScrollUp" Value="0"/>
							<Setter Property="Grid.Column" TargetName="PART_ScrollUp" Value="1"/>
							<Setter Property="Margin" TargetName="PART_ScrollUp" Value="3,3,0,1"/>
							<Setter Property="Grid.Row" TargetName="PART_ScrollDown" Value="1"/>
							<Setter Property="Grid.Column" TargetName="PART_ScrollDown" Value="1"/>
							<Setter Property="Margin" TargetName="PART_ScrollDown" Value="3,1,0,0"/>
							<Setter Property="Grid.RowSpan" TargetName="PART_PagerContentPresenter" Value="3"/>
							<Setter Property="Width" TargetName="col3" Value="0"/>
							<Setter Property="Width" TargetName="col1" Value="*"/>
							<Setter Property="Height" TargetName="row3" Value="*"/>
							<Setter Property="ClipContentVertically" TargetName="PART_PagerContentPresenter" Value="False"/>
						</DataTrigger>
						<DataTrigger Binding="{Binding RelativeSource={RelativeSource FindAncestor, {x:Type igWindows:XamTabControl}, 1}, Path=TabStripPlacement}" Value="Left">
							<Setter Property="Grid.Row" TargetName="PART_ScrollLeft" Value="0"/>
							<Setter Property="Grid.Column" TargetName="PART_ScrollLeft" Value="1"/>
							<Setter Property="Margin" TargetName="PART_ScrollLeft" Value="0,0,1,3"/>
							<Setter Property="Grid.Row" TargetName="PART_ScrollRight" Value="0"/>
							<Setter Property="Grid.Column" TargetName="PART_ScrollRight" Value="2"/>
							<Setter Property="Margin" TargetName="PART_ScrollRight" Value="1,0,3,3"/>
							<Setter Property="Grid.Row" TargetName="PART_PagerContentPresenter" Value="1"/>
							<Setter Property="Grid.ColumnSpan" TargetName="PART_PagerContentPresenter" Value="3"/>
							<Setter Property="Height" TargetName="row3" Value="0"/>
							<Setter Property="Height" TargetName="row2" Value="*"/>
							<Setter Property="Width" TargetName="col1" Value="*"/>
							<Setter Property="ClipContentHorizontally" TargetName="PART_PagerContentPresenter" Value="False"/>
						</DataTrigger>
						<DataTrigger Binding="{Binding RelativeSource={RelativeSource FindAncestor, {x:Type igWindows:XamTabControl}, 1}, Path=TabStripPlacement}" Value="Right">
							<Setter Property="Grid.Row" TargetName="PART_ScrollLeft" Value="1"/>
							<Setter Property="Grid.Column" TargetName="PART_ScrollLeft" Value="0"/>
							<Setter Property="Margin" TargetName="PART_ScrollLeft" Value="3,3,1,0"/>
							<Setter Property="Grid.Row" TargetName="PART_ScrollRight" Value="1"/>
							<Setter Property="Grid.Column" TargetName="PART_ScrollRight" Value="1"/>
							<Setter Property="Margin" TargetName="PART_ScrollRight" Value="1,3,0,0"/>
							<Setter Property="Grid.Row" TargetName="PART_PagerContentPresenter" Value="0"/>
							<Setter Property="Grid.ColumnSpan" TargetName="PART_PagerContentPresenter" Value="3"/>
							<Setter Property="Height" TargetName="row3" Value="0"/>
							<Setter Property="Height" TargetName="row1" Value="*"/>
							<Setter Property="Width" TargetName="col3" Value="*"/>
							<Setter Property="ClipContentHorizontally" TargetName="PART_PagerContentPresenter" Value="False"/>
						</DataTrigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- ************************************************** -->
    <!-- End XamTabControl Resources -->
    <!-- ************************************************** -->


    <!-- _________________________ XamTabControl ______________________________________ -->
	<Style TargetType="{x:Type igWindows:XamTabControl}">
		<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
		<Setter Property="Padding" Value="4"/>
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="BorderBrush" Value="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.TabItemIsSelectedOuterBorderFillKey}}"/>
		<Setter Property="Background" Value="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.TabContentBackgroundFillKey}}"/>
		<Setter Property="HorizontalContentAlignment" Value="Center"/>
		<Setter Property="VerticalContentAlignment" Value="Center"/>
		<Setter Property="Control.Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type igWindows:XamTabControl}">
					<Grid ClipToBounds="True" SnapsToDevicePixels="True" KeyboardNavigation.TabNavigation="Local">
						<Grid.ColumnDefinitions>
							<ColumnDefinition x:Name="gridCol0"/>
							<ColumnDefinition Width="0" x:Name="gridCol1"/>
						</Grid.ColumnDefinitions>
						<Grid.RowDefinitions>
							<RowDefinition Height="Auto" x:Name="gridRow0"/>
							<RowDefinition Height="*" x:Name="gridRow1"/>
						</Grid.RowDefinitions>
						<Border
							BorderBrush="{TemplateBinding BorderBrush}"
							x:Name="ContentPanel"
							KeyboardNavigation.TabIndex="2"
							KeyboardNavigation.TabNavigation="Local"
							KeyboardNavigation.DirectionalNavigation="Contained"
							Grid.Row="1"
							Visibility="Visible"
							Margin="0,-1,0,0"
							Background="{TemplateBinding Background}">
							<!--Background="#FF515151"-->
							<Border
								BorderThickness="{TemplateBinding Border.BorderThickness}"
								Background="{TemplateBinding Background}"
								BorderBrush="{TemplateBinding BorderBrush}"
								Margin="0,1,0,0">
								<!--<Border Background="{DynamicResource Container_Fill}" BorderBrush="{DynamicResource Container_BorderFill}" CornerRadius="5,5,5,5">-->
								<Border CornerRadius="5,5,5,5">
									<ContentPresenter
										ContentSource="SelectedContent"
										Margin="{TemplateBinding Control.Padding}"
										Height="{TemplateBinding TabItemContentHeight}"
										Name="PART_SelectedContentHost"
										SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
								</Border>
							</Border>
						</Border>
						<!--<DockPanel x:Name="PART_HeaderArea" Panel.ZIndex="1" Background="#FF535353">-->
            <!-- AS 5/4/10 TFS30695 
              Added Tab(Index|Navigation) settings so this gets focus first. -->
						<DockPanel 
							x:Name="PART_HeaderArea" 
							Panel.ZIndex="1"
							KeyboardNavigation.TabIndex="1"
							KeyboardNavigation.TabNavigation="Local"
                            Background="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.TabControlTabStripCenterFillKey}}">
							<ContentPresenter
								x:Name="PreTabItemContent"
								DockPanel.Dock="Left"
								ContentSource="PreTabItemContent"
								/>
							<Button
								Name="CloseButton"
								DockPanel.Dock="Right"
								Command="igWindows:TabControlCommands.CloseSelected"
								CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}"
								Visibility="Collapsed"
								Style="{DynamicResource {x:Static igWindows:XamTabControl.CloseButtonStyleKey}}"/>
							<ContentPresenter
								x:Name="PostTabItemContent"
								DockPanel.Dock="Right"
								ContentSource="PostTabItemContent" />
							<igWindows:XamPager x:Name="PART_TabItemScrollViewer" 
                                                Style="{DynamicResource {x:Static igWindows:XamTabControl.SingleRowTabItemPagerStyleKey}}"
                                                CanContentScroll="True" 
                                                ScrollViewer.VerticalScrollBarVisibility="{TemplateBinding TabItemVerticalScrollBarVisibility}" 
                                                ScrollViewer.HorizontalScrollBarVisibility="{TemplateBinding TabItemHorizontalScrollBarVisibility}">
								<!--SS 02/05/16 - TFS208818 - Increase right margin, so when we select the last item its border is fully visible
								<ItemsPresenter x:Name="PART_TabHeaderPanel" Margin="2,2,1,0" />-->
								<ItemsPresenter x:Name="PART_TabHeaderPanel" Margin="2,2,3,0" />
							</igWindows:XamPager>
						</DockPanel>
						<Popup
							x:Name="PART_Popup"
							StaysOpen="False"
							Width="{TemplateBinding PreferredDropDownExtent}"
							IsOpen="{Binding Path=IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}"
							CustomPopupPlacementCallback="{TemplateBinding PreferredDropDownPlacementCallback}"
							Placement="Custom"
							AllowsTransparency="True"
							PopupAnimation="{Binding Path=DropDownAnimation, RelativeSource={RelativeSource TemplatedParent}}">
							<Border
								BorderBrush="#FFD0CEBF"
								BorderThickness="0,0,1,1"
								KeyboardNavigation.TabIndex="2"
								KeyboardNavigation.TabNavigation="Local"
								KeyboardNavigation.DirectionalNavigation="Contained">
								<Border BorderBrush="{TemplateBinding Border.BorderBrush}" BorderThickness="{TemplateBinding Border.BorderThickness}">
									<Border Background="{TemplateBinding Panel.Background}">
										<ContentPresenter
											ContentSource="SelectedContent"
											Margin="{TemplateBinding Control.Padding}"
											Height="{TemplateBinding TabItemContentHeight}"
											Name="PART_SelectedContentHostMinimized"
											HorizontalAlignment="{Binding ElementName=PART_SelectedContentHost, Path=HorizontalAlignment}"
											VerticalAlignment="{Binding ElementName=PART_SelectedContentHost, Path=VerticalAlignment}"
											SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"
											ContentTemplateSelector="{TemplateBinding TabControl.SelectedContentTemplateSelector}"
											ContentTemplate="{TemplateBinding TabControl.SelectedContentTemplate}"
											Content="{x:Null}"/>
									</Border>
								</Border>
							</Border>
						</Popup>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="ShowTabHeaderCloseButton" Value="True">
							<Setter Property="Visibility" TargetName="CloseButton" Value="Visible"/>
						</Trigger>
						<Trigger Property="DropDownAnimation" Value="None">
							<!--<Setter Property="AllowsTransparency" TargetName="PART_Popup" Value="False"/>-->
						</Trigger>
						<Trigger Property="TabControl.TabStripPlacement" Value="Top">
							<Setter Property="Width" TargetName="PART_Popup" Value="{Binding Path=PreferredDropDownExtent, RelativeSource={x:Static RelativeSource.TemplatedParent}}"/>
							<Setter TargetName="CloseButton" Property="Margin" Value="3,1,3,0"/>
							<Setter TargetName="PreTabItemContent" Property="VerticalAlignment" Value="Bottom"/>
							<Setter TargetName="PostTabItemContent" Property="VerticalAlignment" Value="Bottom"/>
							<Setter TargetName="PostTabItemContent" Property="Margin" Value="3,0,3,2"/>
							<Setter TargetName="PreTabItemContent" Property="Margin" Value="3,0,3,2"/>
						</Trigger>
						<Trigger Property="TabControl.TabStripPlacement" Value="Bottom">
							<Setter TargetName="CloseButton" Property="Margin" Value="3,0,3,1"/>
							<Setter TargetName="PreTabItemContent" Property="Margin" Value="3,2,3,0"/>
							<Setter TargetName="PostTabItemContent" Property="Margin" Value="3,2,3,0"/>
							<Setter Property="Grid.Row" TargetName="PART_HeaderArea" Value="1"/>
							<Setter Property="Grid.Row" TargetName="ContentPanel" Value="0"/>
							<Setter Property="Height" TargetName="gridRow0" Value="*"/>
							<Setter Property="Height" TargetName="gridRow1" Value="Auto"/>
							<Setter Property="Width" TargetName="PART_Popup" Value="{Binding Path=PreferredDropDownExtent, RelativeSource={x:Static RelativeSource.TemplatedParent}}"/>
							<Setter Property="FrameworkElement.Margin" TargetName="PART_TabHeaderPanel" Value="2,0,2,2"/>
						</Trigger>
						<Trigger Property="TabControl.TabStripPlacement" Value="Left">
							<Setter TargetName="PostTabItemContent" Property="Margin" Value="5,3,0,3"/>
							<Setter TargetName="PreTabItemContent" Property="Margin" Value="5,3,0,3"/>
							<Setter Property="Margin" TargetName="CloseButton" Value="0,0,4,3"/>
							<Setter Property="DockPanel.Dock" TargetName="CloseButton" Value="Bottom"/>
							<Setter Property="HorizontalAlignment" TargetName="CloseButton" Value="Right"/>
							<Setter Property="Grid.Row" TargetName="PART_HeaderArea" Value="1"/>
							<Setter Property="Grid.Column" TargetName="ContentPanel" Value="1"/>
							<Setter Property="Height" TargetName="gridRow0" Value="0"/>
							<Setter Property="Width" TargetName="gridCol0" Value="Auto"/>
							<Setter Property="Width" TargetName="gridCol1" Value="*"/>
							<Setter Property="DockPanel.Dock" TargetName="PreTabItemContent" Value="Top"/>
							<Setter Property="DockPanel.Dock" TargetName="PostTabItemContent" Value="Bottom"/>
							<Setter Property="Height" TargetName="PART_Popup" Value="{Binding Path=PreferredDropDownExtent, RelativeSource={x:Static RelativeSource.TemplatedParent}}"/>
							<Setter Property="FrameworkElement.Margin" TargetName="PART_TabHeaderPanel" Value="2,2,0,2"/>
						</Trigger>
						<Trigger Property="TabControl.TabStripPlacement" Value="Right">
							<Setter TargetName="PostTabItemContent" Property="Margin" Value="4,3,0,3"/>
							<Setter TargetName="PreTabItemContent" Property="Margin" Value="4,3,0,3"/>
							<Setter Property="Margin" TargetName="CloseButton" Value="4,0,0,3"/>
							<Setter Property="DockPanel.Dock" TargetName="CloseButton" Value="Bottom"/>
							<Setter Property="HorizontalAlignment" TargetName="CloseButton" Value="Left"/>
							<Setter Property="Grid.Row" TargetName="PART_HeaderArea" Value="1"/>
							<Setter Property="Grid.Column" TargetName="PART_HeaderArea" Value="1"/>
							<Setter Property="Height" TargetName="gridRow0" Value="0"/>
							<Setter Property="Width" TargetName="gridCol0" Value="*"/>
							<Setter Property="Width" TargetName="gridCol1" Value="Auto"/>
							<Setter Property="DockPanel.Dock" TargetName="PreTabItemContent" Value="Top"/>
							<Setter Property="DockPanel.Dock" TargetName="PostTabItemContent" Value="Bottom"/>
							<Setter Property="Height" TargetName="PART_Popup" Value="{Binding Path=PreferredDropDownExtent, RelativeSource={x:Static RelativeSource.TemplatedParent}}"/>
							<Setter Property="FrameworkElement.Margin" TargetName="PART_TabHeaderPanel" Value="0,2,2,2"/>
						</Trigger>
						<Trigger Property="UIElement.IsEnabled" Value="False">
							<Setter Property="TextElement.Foreground" Value="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.GrayTextBrushKey}}"/>
						</Trigger>
						<Trigger Property="IsMinimized" Value="True">
							<Setter Property="Visibility" TargetName="ContentPanel" Value="Collapsed"/>
						</Trigger>
							<Trigger Property="IsMultiRow" Value="True">
								<Setter TargetName="PART_TabItemScrollViewer" Property="Style" Value="{DynamicResource {x:Static igWindows:XamTabControl.MultiRowTabItemPagerStyleKey}}"/>
							</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<!--<Setter Property="Background" Value="{DynamicResource Container_Fill}"/>-->
		<Style.Triggers>
			<Trigger Property="TabControl.TabStripPlacement" Value="Bottom">
				<Setter Property="Panel.Background" Value="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.TabItemIsSelectedBottomCenterFillKey}}"/>
			</Trigger>
			<Trigger Property="TabControl.TabStripPlacement" Value="Left">
				<Setter Property="Panel.Background" Value="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.TabItemIsSelectedLeftCenterFillKey}}"/>
			</Trigger>
			<Trigger Property="TabControl.TabStripPlacement" Value="Right">
				<Setter Property="Panel.Background" Value="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.TabItemIsSelectedRightCenterFillKey}}"/>
			</Trigger>
		</Style.Triggers>
	</Style>


	<!-- _________________________ TabItemEx ______________________________________ -->
	<Style x:Key="{x:Type igWindows:TabItemEx}" TargetType="{x:Type igWindows:TabItemEx}">
		<!-- <Setter Property="FocusVisualStyle" Value="{StaticResource Foo}" /> -->
		<Setter Property="Foreground" Value="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.TabItemNormalTextFillKey}}"/>
		<Setter Property="BorderBrush" Value="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.TabItemNormalOuterBorderFillKey}}"/>
		<Setter Property="Background" Value="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.TabItemNormalTopCenterFillKey}}"/>
		<Setter Property="HorizontalContentAlignment" Value="Stretch"/>
		<Setter Property="VerticalContentAlignment" Value="Stretch"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type igWindows:TabItemEx}">
					<Grid SnapsToDevicePixels="true">
						<Border
							Name="Bd"
							Padding="{TemplateBinding Padding}"
							BorderBrush="{TemplateBinding BorderBrush}"
							Background="{TemplateBinding Background}"
							BorderThickness="1,1,1,0"
							CornerRadius="3,3,0,0">
							<Grid>
								<Grid.ColumnDefinitions>
									<ColumnDefinition/>
									<ColumnDefinition Width="Auto"/>
								</Grid.ColumnDefinitions>
								<ContentPresenter
									Name="Content"
									ContentSource="Header"
									SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
									RecognizesAccessKey="true"
									HorizontalAlignment="{Binding Path=HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"
									VerticalAlignment="{Binding Path=VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
								<Button
									Name="CloseButton"
									Grid.Column="1"
									Command="igWindows:TabItemExCommands.Close"
									CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}"
									Visibility="{TemplateBinding ComputedCloseButtonVisibility}" 
									Style="{DynamicResource {x:Static igWindows:XamTabControl.CloseButtonStyleKey}}"
									Margin="10,0,0,0"
									/>
							</Grid>
						</Border>
						<Border
							x:Name="Highlight"
							Height="3"
							CornerRadius="3,3,0,0"
							Background="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.TabItemHottrackHighlightLightFillKey}}"
							BorderBrush="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.TabItemHottrackHighlightDarkFillKey}}"
							BorderThickness="1,1,1,0"
							Visibility="Collapsed"
							VerticalAlignment="Top"/>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="true"/>
						<Trigger Property="IsSelected" Value="true">
							<Setter Property="Panel.ZIndex" Value="1"/>
							<Setter TargetName="Highlight" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="Highlight" Property="Background" Value="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.TabItemIsSelectedHighlightLightFillKey}}"/>
                            <Setter TargetName="Highlight" Property="BorderBrush" Value="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.TabItemIsSelectedHighlightDarkFillKey}}"/>
							<Setter TargetName="Bd" Property="Background" Value="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.TabItemIsSelectedTopCenterFillKey}}"/>
							<Setter TargetName="Bd" Property="BorderBrush" Value="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.TabItemIsSelectedOuterBorderFillKey}}"/>
                            <Setter TargetName="Content" Property="TextElement.Foreground" Value="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.TabItemIsSelectedTextFillKey}}"/>
                        </Trigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsSelected" Value="false"/>
								<Condition Property="IsMouseOver" Value="true"/>
							</MultiTrigger.Conditions>
							<Setter TargetName="Highlight" Property="Visibility" Value="Visible"/>
						</MultiTrigger>
						
						<Trigger Property="TabStripPlacement" Value="Top">
							<Setter Property="Padding" Value="5,2,4,2"/>
							<Setter Property="Margin" Value="0,0,1,0"/>
						</Trigger>

						<Trigger Property="TabStripPlacement" Value="Bottom">
							<Setter Property="Padding" Value="5,2,4,2"/>
							<Setter Property="Margin" Value="0,0,1,0"/>
							<Setter TargetName="Bd" Property="Background" Value="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.TabItemNormalBottomCenterFillKey}}"/>
							<Setter TargetName="Bd" Property="BorderThickness" Value="1,0,1,1"/>
							<Setter TargetName="Bd" Property="CornerRadius" Value="0,0,3,3"/>
							<Setter TargetName="Bd" Property="BorderThickness" Value="1,0,1,1"/>
							<Setter TargetName="Highlight" Property="VerticalAlignment" Value="Bottom"/>
							<Setter TargetName="Highlight" Property="CornerRadius" Value="0,0,3,3"/>
							<Setter TargetName="Highlight" Property="BorderThickness" Value="1,0,1,1"/>
						</Trigger>
						<Trigger Property="TabStripPlacement" Value="Left">
							<Setter Property="Padding" Value="4,3,4,3"/>
							<Setter Property="Margin" Value="0,0,0,1"/>
							<Setter TargetName="Bd" Property="Background" Value="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.TabItemNormalLeftCenterFillKey}}"/>
							<Setter TargetName="Bd" Property="BorderThickness" Value="1,1,0,1"/>
							<Setter TargetName="Bd" Property="CornerRadius" Value="3,0,0,3"/>
							<Setter TargetName="Highlight" Property="VerticalAlignment" Value="Stretch"/>
							<Setter TargetName="Highlight" Property="HorizontalAlignment" Value="Left"/>
							<Setter TargetName="Highlight" Property="Height" Value="Auto"/>
							<Setter TargetName="Highlight" Property="Width" Value="3"/>
							<Setter TargetName="Highlight" Property="CornerRadius" Value="3,0,0,3"/>
							<Setter TargetName="Highlight" Property="BorderThickness" Value="1,1,0,1"/>
						</Trigger>
						<Trigger Property="TabStripPlacement" Value="Right">
							<Setter Property="Padding" Value="4,3,4,3"/>
							<Setter Property="Margin" Value="0,0,0,1"/>
							<Setter TargetName="Bd" Property="Background" Value="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.TabItemNormalRightCenterFillKey}}"/>
							<Setter TargetName="Bd" Property="BorderThickness" Value="0,1,1,1"/>
							<Setter TargetName="Bd" Property="CornerRadius" Value="0,3,3,0"/>
							<Setter TargetName="Highlight" Property="VerticalAlignment" Value="Stretch"/>
							<Setter TargetName="Highlight" Property="HorizontalAlignment" Value="Right"/>
							<Setter TargetName="Highlight" Property="Height" Value="Auto"/>
							<Setter TargetName="Highlight" Property="Width" Value="3"/>
							<Setter TargetName="Highlight" Property="CornerRadius" Value="0,3,3,0"/>
							<Setter TargetName="Highlight" Property="BorderThickness" Value="0,1,1,1"/>
						</Trigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsSelected" Value="true"/>
								<Condition Property="TabStripPlacement" Value="Top"/>
							</MultiTrigger.Conditions>
							<Setter Property="Margin" Value="-2,-2,-3,-1"/>
							<Setter TargetName="Content" Property="Margin" Value="0,0,0,1"/>
							<Setter Property="Padding" Value="7,1,8,3"/>
						</MultiTrigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsSelected" Value="true"/>
								<Condition Property="TabStripPlacement" Value="Bottom"/>
							</MultiTrigger.Conditions>
							<Setter TargetName="Bd" Property="Background" Value="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.TabItemIsSelectedBottomCenterFillKey}}"/>
							<Setter Property="Margin" Value="-2,-1,-3,-2"/>
							<Setter TargetName="Content" Property="Margin" Value="0,1,0,0"/>
							<Setter Property="Padding" Value="7,3,8,1"/>
						</MultiTrigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsSelected" Value="true"/>
								<Condition Property="TabStripPlacement" Value="Left"/>
							</MultiTrigger.Conditions>
							<Setter TargetName="Bd" Property="Background" Value="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.TabItemIsSelectedLeftCenterFillKey}}"/>
							<Setter Property="Margin" Value="-2,-2,-1,-3"/>
							<Setter TargetName="Content" Property="Margin" Value="1,0,2,0"/>
							<Setter Property="Padding" Value="4,5,4,7"/>
						</MultiTrigger>
						
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsSelected" Value="true"/>
								<Condition Property="TabStripPlacement" Value="Right"/>
							</MultiTrigger.Conditions>
							<Setter TargetName="Bd" Property="Background" Value="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.TabItemIsSelectedRightCenterFillKey}}"/>
							<Setter Property="Margin" Value="-1,-2,-2,-3"/>
							<Setter TargetName="Content" Property="Margin" Value="2,0,1,0"/>
							<Setter Property="Padding" Value="4,5,4,7"/>
						</MultiTrigger>
						
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsSelected" Value="false"/>
								<Condition Property="IsMouseOver" Value="true"/>
								<Condition Property="TabStripPlacement" Value="Top"/>
							</MultiTrigger.Conditions>
							<Setter TargetName="Bd" Property="Background" Value="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.TabItemHottrackTopCenterFillKey}}"/>
							<Setter TargetName="Bd" Property="BorderBrush" Value="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.TabItemHottrackOuterBorderFillKey}}"/>
						</MultiTrigger>
						
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsSelected" Value="false"/>
								<Condition Property="IsMouseOver" Value="true"/>
								<Condition Property="TabStripPlacement" Value="Bottom"/>
							</MultiTrigger.Conditions>
							<Setter TargetName="Bd" Property="Background" Value="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.TabItemHottrackBottomCenterFillKey}}"/>
							<Setter TargetName="Bd" Property="BorderBrush" Value="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.TabItemHottrackOuterBorderFillKey}}"/>
						</MultiTrigger>
						
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsSelected" Value="false"/>
								<Condition Property="IsMouseOver" Value="true"/>
								<Condition Property="TabStripPlacement" Value="Left"/>
							</MultiTrigger.Conditions>
							<Setter TargetName="Bd" Property="Background" Value="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.TabItemHottrackLeftCenterFillKey}}"/>
							<Setter TargetName="Bd" Property="BorderBrush" Value="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.TabItemHottrackOuterBorderFillKey}}"/>
						</MultiTrigger>
						
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsSelected" Value="false"/>
								<Condition Property="IsMouseOver" Value="true"/>
								<Condition Property="TabStripPlacement" Value="Right"/>
							</MultiTrigger.Conditions>
							<Setter TargetName="Bd" Property="Background" Value="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.TabItemHottrackRightCenterFillKey}}"/>
							<Setter TargetName="Bd" Property="BorderBrush" Value="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.TabItemHottrackOuterBorderFillKey}}"/>
						</MultiTrigger>
						
						<Trigger Property="IsEnabled" Value="false">
							<Setter TargetName="Bd" Property="Background" Value="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.TabItemDisabledCenterFillKey}}"/>
							<Setter TargetName="Bd" Property="BorderBrush" Value="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.TabItemDisabledOuterBorderFillKey}}" />
							<Setter Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" Property="Foreground"/>
							<Setter TargetName="Highlight" Property="Visibility" Value="Collapsed"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>


	<!-- _________________________ XamScreenTip ______________________________________ -->
  <Style TargetType="{x:Type igWindows:XamScreenTip}">
    <Setter Property="Foreground" Value="#EE000000"/>
    <Setter Property="FontFamily" Value="Segoe UI"/>
    <Setter Property="FontSize" Value="11"/>
    <Setter Property="BorderThickness" Value="1"/>
    <Setter Property="BorderBrush" Value="Black"/>

    <Setter Property="Background">
      <Setter.Value>
        <LinearGradientBrush EndPoint="0,0" StartPoint="0,1">
          <LinearGradientBrush.GradientStops>
            <GradientStop Offset="0" Color="#FFE4E4F0" />
            <GradientStop Offset=".8" Color="#FFFEFEFE" />
            <GradientStop Offset="1" Color="#FFFEFEFE" />
          </LinearGradientBrush.GradientStops>
        </LinearGradientBrush>
      </Setter.Value>
    </Setter>

    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type igWindows:XamScreenTip}">
          <Border BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}">
            <Grid Margin="{TemplateBinding Padding}">
              <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
              </Grid.RowDefinitions>

              <!-- Header Content -->
              <ContentControl Grid.Row="0" FontWeight="Bold"  Margin="5,5,5,5" Content="{TemplateBinding Header}" ContentTemplate="{TemplateBinding HeaderTemplate}" ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}"/>
              
              <!-- Header Separator -->
              <StackPanel Grid.Row="1" Margin="3,0,3,5" Visibility="{TemplateBinding HeaderSeparatorVisibility}">
                <Rectangle Height="1" Fill="Gray" HorizontalAlignment="Stretch" SnapsToDevicePixels="True"/>
                <Rectangle Height="1" Fill="White" HorizontalAlignment="Stretch" SnapsToDevicePixels="True"/>
              </StackPanel>

              <!-- Main Content -->
              <ContentPresenter Grid.Row="2" Margin="13,3,13,0" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"/>
              
              <!-- Footer Separator -->
              <StackPanel Grid.Row="3" Margin="3,5,3,7" Visibility="{TemplateBinding FooterSeparatorVisibility}">
                <Rectangle Height="1" Fill="Gray" HorizontalAlignment="Stretch" SnapsToDevicePixels="True"/>
                <Rectangle Height="1" Fill="White" HorizontalAlignment="Stretch" SnapsToDevicePixels="True"/>
              </StackPanel>

              <!-- Footer Content -->
              <ContentControl Grid.Row="4" FontWeight="Bold" Margin="5,0,5,5" Content="{TemplateBinding Footer}" ContentTemplate="{TemplateBinding FooterTemplate}" ContentTemplateSelector="{TemplateBinding FooterTemplateSelector}"/>
            </Grid>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  
  
  <!-- _________________________ PopupResizerBar ______________________________________ -->

  <!--ResizerBar Resource-->
  <LinearGradientBrush
				PresentationOptions:Freeze="true" 
                x:Key="GalleryToolDropDownPresenter_FooterBarGradient"
				StartPoint="0.5,0"
				EndPoint="0.5,1">
    <LinearGradientBrush.GradientStops>
      <GradientStopCollection>
        <GradientStop
          Color="#FFffffff"
          Offset="0" />
        <GradientStop
          Color="#FFffffff"
          Offset="0.02" />
        <GradientStop
          Color="#FFc6c6c6"
          Offset="0.9" />
        <GradientStop
          Color="#FFc6c6c6"
          Offset="1" />
      </GradientStopCollection>
    </LinearGradientBrush.GradientStops>
  </LinearGradientBrush>
  
  
  <Style TargetType="{x:Type igWindows:PopupResizerBar}">
    <Setter Property="Background" Value="#00000000"/>
    <Setter Property="Foreground" Value="{StaticResource GalleryToolDropDownPresenter_FooterBarGradient}"/>
    <Setter Property="BorderThickness" Value="0"/>
    <Setter Property="BorderBrush" Value="#00000000"/>
    <Setter Property="Height" Value="12"/>

    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type igWindows:PopupResizerBar}">
          <Border SnapsToDevicePixels="True" Background="{TemplateBinding Foreground}" BorderBrush="#FFE1E1E1" BorderThickness="0,1,0,0" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="Auto" Height="Auto" Margin="0">
            <igWindows:CardPanel Margin="{TemplateBinding Padding}">
              <igWindows:CardPanel x:Name="GlyphArea">
                <!-- the glyph that is used when the resizemode is Both and the location is Bottom-->
                <!-- TODO: replace with actual Glyph-->
                <!--<Rectangle
                    x:Name="BottomRightGlyph" 
                    Fill="{TemplateBinding Foreground}" 
                    Visibility="Collapsed" 
                     Width="{Binding RelativeSource={RelativeSource Self}, Path=ActualHeight, Mode=OneWay}"
                     />-->

                <!-- the thumb is transparent and needs to be placed after the glyphs so that it is on top with respect to z-order -->
                <Thumb x:Name="PART_Thumb" Background="Transparent" Foreground="Transparent" Opacity="0"/>

                                <Grid
										x:Name="BottomRightGlyph"
										Visibility="Collapsed"
										Width="{Binding RelativeSource={RelativeSource Self}, Path=ActualHeight, Mode=OneWay}"
										VerticalAlignment="Bottom"
										HorizontalAlignment="Right"
										Margin="0,0,2,2"
										Background="{x:Null}"
										IsHitTestVisible="False">
                                    <Path
										  Margin="1,1,0,0"
										  VerticalAlignment="Top"
										  Height="6"
										  Stretch="Fill"
										  Opacity="1"
										  Data="M 1,6 C1,6.5522918701171875 1.4477081298828125,7 2,7 2.5522918701171875,7 3,6.5522918701171875 3,6 3,5.4477081298828125 2.5522918701171875,5 2,5 1.4477081298828125,5 1,5.4477081298828125 1,6 zM 5,2 C5,2.5522918701171875 5.4477081298828125,3 6,3 6.5522918701171875,3 7,2.5522918701171875 7,2 7,1.4477081298828125 6.5522918701171875,1 6,1 5.4477081298828125,1 5,1.4477081298828125 5,2 zM 5,6 C5,6.5522918701171875 5.4477081298828125,7 6,7 6.5522918701171875,7 7,6.5522918701171875 7,6 7,5.4477081298828125 6.5522918701171875,5 6,5 5.4477081298828125,5 5,5.4477081298828125 5,6 z"
										  Fill="#FFFFFFFF" SnapsToDevicePixels="True" HorizontalAlignment="Left" Width="6" />
                                    <Grid
										  Opacity="1"
										  Margin="0,0,0,0"
										  HorizontalAlignment="Left" Width="6">
                                        <Path
											  Margin="0,4,0,0"
											  HorizontalAlignment="Left"
											  VerticalAlignment="Top"
											  Height="2"
											  Width="2"
											  Stretch="Fill"
											  Opacity="1"
											  Data="M 0,5 C0,4.4477081298828125 0.4477081298828125,4 1,4 1.5522918701171875,4 2,4.4477081298828125 2,5 2,5.5522918701171875 1.5522918701171875,6 1,6 0.4477081298828125,6 0,5.5522918701171875 0,5 z" SnapsToDevicePixels="True">
                                            <Path.Fill>
                                                <RadialGradientBrush
                                                    Center="1,1"
                                                    GradientOrigin="1,1"
                                                    RadiusX="2.362003799491166"
                                                    RadiusY="2.362003799491166">
                                                    <RadialGradientBrush.GradientStops>
                                                        <GradientStopCollection>
                                                            <GradientStop
                                                                Color="#FF444444"
                                                                Offset="0" />
                                                                                <GradientStop
                                                                Color="#FFffffff"
                                                                Offset="0.7623000144958496" />
                                                                                <GradientStop
                                                                Color="#FFffffff"
                                                                Offset="1" />
                                                        </GradientStopCollection>
                                                    </RadialGradientBrush.GradientStops>
                                                </RadialGradientBrush>
                                            </Path.Fill>
                                        </Path>
                                        
                                        <Path
											  Margin="4,4,0,0"
											  HorizontalAlignment="Left"
											  VerticalAlignment="Top"
											  Height="2"
											  Width="2"
											  Stretch="Fill"
											  Opacity="1"
											  Data="M 4,5 C4,4.4477081298828125 4.4477081298828125,4 5,4 5.5522918701171875,4 6,4.4477081298828125 6,5 6,5.5522918701171875 5.5522918701171875,6 5,6 4.4477081298828125,6 4,5.5522918701171875 4,5 z" SnapsToDevicePixels="True">
                                            <Path.Fill>
                                                <RadialGradientBrush
                                                    Center="1,1"
                                                    GradientOrigin="1,1"
                                                    RadiusX="2.362003799491166"
                                                    RadiusY="2.362003799491166">
                                                    <RadialGradientBrush.GradientStops>
                                                        <GradientStopCollection>
                                                            <GradientStop
                                                                Color="#FF444444"
                                                                Offset="0" />
                                                            <GradientStop
                                                                Color="#FFffffff"
                                                                Offset="0.7623000144958496" />
                                                            <GradientStop
                                                                Color="#FFffffff"
                                                                Offset="1" />
                                                        </GradientStopCollection>
                                                    </RadialGradientBrush.GradientStops>
                                                </RadialGradientBrush>
                                            </Path.Fill>
                                        </Path>
                                        
                                        <Path
											  Margin="4,0,0,0"
											  HorizontalAlignment="Left"
											  VerticalAlignment="Top"
											  Height="2"
											  Width="2"
											  Stretch="Fill"
											  Opacity="1"
											  Data="M 4,1 C4,0.4477081298828125 4.4477081298828125,0 5,0 5.5522918701171875,0 6,0.4477081298828125 6,1 6,1.5522918701171875 5.5522918701171875,2 5,2 4.4477081298828125,2 4,1.5522918701171875 4,1 z" SnapsToDevicePixels="True">
                                            <Path.Fill>
                                                <RadialGradientBrush
                                                    Center="1,1"
                                                    GradientOrigin="1,1"
                                                    RadiusX="2.362003799491166"
                                                    RadiusY="2.362003799491166">
                                                    <RadialGradientBrush.GradientStops>
                                                        <GradientStopCollection>
                                                            <GradientStop
                                                                Color="#FF444444"
                                                                Offset="0" />
                                                            <GradientStop
                                                                Color="#FFffffff"
                                                                Offset="0.7623000144958496" />
                                                            <GradientStop
                                                                Color="#FFffffff"
                                                                Offset="1" />
                                                        </GradientStopCollection>
                                                    </RadialGradientBrush.GradientStops>
                                                </RadialGradientBrush>
                                            </Path.Fill>
                                        </Path>
                                        
                                    </Grid>
                                </Grid>

                                <!-- the glyph that is used when the resizemode is Both and the location is Top-->
                            <Grid
                            x:Name="TopRightGlyph"
                            Visibility="Collapsed"
                            d:LayoutOverrides="HorizontalAlignment"
                            Background="{x:Null}"
                            Width="{Binding RelativeSource={RelativeSource Self}, Path=ActualHeight, Mode=OneWay}"
                            IsHitTestVisible="False">
                            <Path SnapsToDevicePixels="True" HorizontalAlignment="Right" Margin="0,1,2,0" VerticalAlignment="Top" Width="6" Height="6" Fill="#FFFFFFFF" Stretch="Fill" Data="F1 M1,2.9802322E-08 C1.5522847,0 2,0.44771525 2,1 C2,1.5522847 1.5522847,2 1,2 0.44771525,2 0,1.5522847 -5.9604645E-08,1 0,0.44771525 0.44771525,0 1,2.9802322E-08 z M1,-4 C1.5522847,-4 2,-3.5522847 2,-3 C2,-2.4477153 1.5522847,-2 1,-2 0.44771525,-2 0,-2.4477153 -5.9604645E-08,-3 0,-3.5522847 0.44771525,-4 1,-4 z M-3,-4 C-2.4477153,-4 -2,-3.5522847 -2,-3 C-2,-2.4477153 -2.4477153,-2 -3,-2 -3.5522847,-2 -4,-2.4477153 -4,-3 -4,-3.5522847 -3.5522847,-4 -3,-4 z"/>
                            <Grid
                            Opacity="1"
                            Margin="0,0,0,0"
                            HorizontalAlignment="Right" Width="Auto" VerticalAlignment="Top">
                            <Path
                            Margin="0,2,7,0"
                            HorizontalAlignment="Right"
                            VerticalAlignment="Top"
                            Height="2"
                            Width="2"
                            Stretch="Fill"
                            Opacity="1"
                            Data="M 0,5 C0,4.4477081298828125 0.4477081298828125,4 1,4 1.5522918701171875,4 2,4.4477081298828125 2,5 2,5.5522918701171875 1.5522918701171875,6 1,6 0.4477081298828125,6 0,5.5522918701171875 0,5 z" SnapsToDevicePixels="True">
                            <Path.Fill>
                            <RadialGradientBrush
                            Center="1,1"
                            GradientOrigin="1,1"
                            RadiusX="2.362003799491166"
                            RadiusY="2.362003799491166">
                                <RadialGradientBrush.GradientStops>
                                    <GradientStopCollection>
                                        <GradientStop
                                            Color="#FF444444"
                                            Offset="0" />
                                                        <GradientStop
                                            Color="#FFffffff"
                                            Offset="0.7623000144958496" />
                                                        <GradientStop
                                            Color="#FFffffff"
                                            Offset="1" />
                                    </GradientStopCollection>
                                </RadialGradientBrush.GradientStops>
                            </RadialGradientBrush>
                            </Path.Fill>
                            </Path>
                                
                            <Path
                            Margin="0,6,3,0"
                            HorizontalAlignment="Right"
                            VerticalAlignment="Top"
                            Height="2"
                            Width="2"
                            Stretch="Fill"
                            Opacity="1"
                            Data="M 4,5 C4,4.4477081298828125 4.4477081298828125,4 5,4 5.5522918701171875,4 6,4.4477081298828125 6,5 6,5.5522918701171875 5.5522918701171875,6 5,6 4.4477081298828125,6 4,5.5522918701171875 4,5 z" SnapsToDevicePixels="True" >
                            <Path.Fill>
                            <RadialGradientBrush
                            Center="1,1"
                            GradientOrigin="1,1"
                            RadiusX="2.362003799491166"
                            RadiusY="2.362003799491166">
                                <RadialGradientBrush.GradientStops>
                                    <GradientStopCollection>
                                        <GradientStop
                                            Color="#FF444444"
                                            Offset="0" />
                                                        <GradientStop
                                            Color="#FFffffff"
                                            Offset="0.7623000144958496" />
                                                        <GradientStop
                                            Color="#FFffffff"
                                            Offset="1" />
                                    </GradientStopCollection>
                                </RadialGradientBrush.GradientStops>
                            </RadialGradientBrush>
                            </Path.Fill>
                            </Path>

                            <Path
                            Margin="0,2,3,0"
                            HorizontalAlignment="Right"
                            VerticalAlignment="Top"
                            Height="2"
                            Width="2"
                            Stretch="Fill"
                            Opacity="1"
                            Data="M 4,1 C4,0.4477081298828125 4.4477081298828125,0 5,0 5.5522918701171875,0 6,0.4477081298828125 6,1 6,1.5522918701171875 5.5522918701171875,2 5,2 4.4477081298828125,2 4,1.5522918701171875 4,1 z" SnapsToDevicePixels="True">
                            <Path.Fill>
                            <RadialGradientBrush
                            Center="1,1"
                            GradientOrigin="1,1"
                            RadiusX="2.362003799491166"
                            RadiusY="2.362003799491166">
                                <RadialGradientBrush.GradientStops>
                                    <GradientStopCollection>
                                        <GradientStop
                                            Color="#FF444444"
                                            Offset="0" />
                                                        <GradientStop
                                            Color="#FFffffff"
                                            Offset="0.7623000144958496" />
                                                        <GradientStop
                                            Color="#FFffffff"
                                            Offset="1" />
                                    </GradientStopCollection>
                                </RadialGradientBrush.GradientStops>
                            </RadialGradientBrush>
                            </Path.Fill>
                            </Path>
                            </Grid>
                            </Grid>

                                <!-- the glyph that is used when the resizemode is VerticalOnly-->
                                <Grid
									x:Name="VerticalOnlyGlyph"
									 IsHitTestVisible="False"
									 Visibility="Collapsed"
									 Margin="0,0,0,0"
									 HorizontalAlignment="Center"
									 Width="Auto"
									 VerticalAlignment="Center"
									 Height="Auto">
                                    <Path SnapsToDevicePixels="True" HorizontalAlignment="Left" Margin="1,1,0,0" x:Name="WhiteShadows" VerticalAlignment="Top" Width="17" Height="2" Fill="#FFFFFFFF" Stretch="None" Data="F1 M16,5.9604645E-08 C16.552284,0 17,0.44771525 17,1 C17,1.5522847 16.552284,2 16,2 15.447715,2 15,1.5522847 15,1 15,0.44771525 15.447715,0 16,5.9604645E-08 z M11,5.9604645E-08 C11.552285,0 12,0.44771525 12,1 C12,1.5522847 11.552285,2 11,2 10.447715,2 10,1.5522847 10,1 10,0.44771525 10.447715,0 11,5.9604645E-08 z M6,5.9604645E-08 C6.5522847,0 7,0.44771525 7,1 C7,1.5522847 6.5522847,2 6,2 5.4477153,2 5,1.5522847 5,1 5,0.44771525 5.4477153,0 6,5.9604645E-08 z M0.99999994,5.9604645E-08 C1.5522847,0 2,0.44771525 1.9999999,1 C2,1.5522847 1.5522847,2 0.99999994,2 0.44771525,2 0,1.5522847 0,1 0,0.44771525 0.44771525,0 0.99999994,5.9604645E-08 z"/>
                                    <Path
											Height="2"
											Width="2"
											Stretch="Fill"
											Opacity="1"
											Data="M 4,5 C4,4.4477081298828125 4.4477081298828125,4 5,4 5.5522918701171875,4 6,4.4477081298828125 6,5 6,5.5522918701171875 5.5522918701171875,6 5,6 4.4477081298828125,6 4,5.5522918701171875 4,5 z" SnapsToDevicePixels="True" HorizontalAlignment="Left" Margin="0,0,6,0" x:Name="_1" VerticalAlignment="Top">
                                    <Path.Fill>
                                        <RadialGradientBrush
                                              Center="1,1"
                                              GradientOrigin="1,1"
                                              RadiusX="2.362003799491166"
                                              RadiusY="2.362003799491166">
                                            <RadialGradientBrush.GradientStops>
                                                <GradientStopCollection>
                                                    <GradientStop
                                                            Color="#FF444444"
                                                            Offset="0" />
                                                    <GradientStop
                                                            Color="#FFffffff"
                                                            Offset="0.7623000144958496" />
                                                    <GradientStop
                                                            Color="#FFffffff"
                                                            Offset="1" />
                                                </GradientStopCollection>
                                            </RadialGradientBrush.GradientStops>
                                        </RadialGradientBrush>
                                    </Path.Fill>
                                    </Path>
                
                                    <Path
											Margin="5,0,0,0"
											HorizontalAlignment="Left"
											VerticalAlignment="Top"
											Height="2"
											Width="2"
											Stretch="Fill"
											Opacity="1"
											Data="M 0,5 C0,4.4477081298828125 0.4477081298828125,4 1,4 1.5522918701171875,4 2,4.4477081298828125 2,5 2,5.5522918701171875 1.5522918701171875,6 1,6 0.4477081298828125,6 0,5.5522918701171875 0,5 z" SnapsToDevicePixels="True" x:Name="_2">
                                    <Path.Fill>
                                        <RadialGradientBrush
                                              Center="1,1"
                                              GradientOrigin="1,1"
                                              RadiusX="2.362003799491166"
                                              RadiusY="2.362003799491166">
                                            <RadialGradientBrush.GradientStops>
                                                <GradientStopCollection>
                                                    <GradientStop
                                                            Color="#FF444444"
                                                            Offset="0" />
                                                    <GradientStop
                                                            Color="#FFffffff"
                                                            Offset="0.7623000144958496" />
                                                    <GradientStop
                                                            Color="#FFffffff"
                                                            Offset="1" />
                                                </GradientStopCollection>
                                            </RadialGradientBrush.GradientStops>
                                        </RadialGradientBrush>
                                    </Path.Fill>
                                    </Path>

                                    <Path
											Margin="10,0,0,0"
											HorizontalAlignment="Left"
											VerticalAlignment="Top"
											Height="2"
											Width="2"
											Stretch="Fill"
											Opacity="1"
											Data="M 4,5 C4,4.4477081298828125 4.4477081298828125,4 5,4 5.5522918701171875,4 6,4.4477081298828125 6,5 6,5.5522918701171875 5.5522918701171875,6 5,6 4.4477081298828125,6 4,5.5522918701171875 4,5 z" SnapsToDevicePixels="True" x:Name="_3">
                                        <Path.Fill>
                                            <RadialGradientBrush
                                              Center="1,1"
                                              GradientOrigin="1,1"
                                              RadiusX="2.362003799491166"
                                              RadiusY="2.362003799491166">
                                                <RadialGradientBrush.GradientStops>
                                                    <GradientStopCollection>
                                                        <GradientStop
                                                            Color="#FF444444"
                                                            Offset="0" />
                                                        <GradientStop
                                                            Color="#FFffffff"
                                                            Offset="0.7623000144958496" />
                                                        <GradientStop
                                                            Color="#FFffffff"
                                                            Offset="1" />
                                                    </GradientStopCollection>
                                                </RadialGradientBrush.GradientStops>
                                            </RadialGradientBrush>
                                        </Path.Fill>
                                    </Path>
                                    
                                    <Path
											Margin="15,0,0,0"
											HorizontalAlignment="Left"
											VerticalAlignment="Top"
											Height="2"
											Width="2"
											Stretch="Fill"
											Opacity="1"
											Data="M 4,1 C4,0.4477081298828125 4.4477081298828125,0 5,0 5.5522918701171875,0 6,0.4477081298828125 6,1 6,1.5522918701171875 5.5522918701171875,2 5,2 4.4477081298828125,2 4,1.5522918701171875 4,1 z" SnapsToDevicePixels="True" x:Name="_4">
                                        <Path.Fill>
                                            <RadialGradientBrush
                                              Center="1,1"
                                              GradientOrigin="1,1"
                                              RadiusX="2.362003799491166"
                                              RadiusY="2.362003799491166">
                                                <RadialGradientBrush.GradientStops>
                                                    <GradientStopCollection>
                                                        <GradientStop
                                                            Color="#FF444444"
                                                            Offset="0" />
                                                                                    <GradientStop
                                                            Color="#FFffffff"
                                                            Offset="0.7623000144958496" />
                                                                                    <GradientStop
                                                            Color="#FFffffff"
                                                            Offset="1" />
                                                    </GradientStopCollection>
                                                </RadialGradientBrush.GradientStops>
                                            </RadialGradientBrush>
                                        </Path.Fill>
                                    </Path>
                                </Grid>
                  
                            </igWindows:CardPanel>
            </igWindows:CardPanel>
          </Border>
          <ControlTemplate.Triggers>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="ResizeMode" Value="Both"/>
                <Condition Property="Location" Value="Bottom"/>
              </MultiTrigger.Conditions>
             <Setter TargetName="BottomRightGlyph" Property="Visibility" Value="Visible"/>
              <Setter TargetName="PART_Thumb" Property="Cursor" Value="SizeNWSE"/>
             <Setter TargetName="GlyphArea" Property="HorizontalAlignment" Value="Right"/>
              </MultiTrigger>

						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="ResizeMode" Value="Both"/>
								<Condition Property="Location" Value="Bottom"/>
								<Condition Property="FlowDirection" Value="RightToLeft"/>
							</MultiTrigger.Conditions>
							<Setter TargetName="PART_Thumb" Property="Cursor" Value="SizeNESW"/>
						</MultiTrigger>

						<MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="ResizeMode" Value="Both"/>
                <Condition Property="Location" Value="Top"/>
              </MultiTrigger.Conditions>
             <Setter TargetName="TopRightGlyph" Property="Visibility" Value="Visible"/>
             <Setter TargetName="PART_Thumb" Property="Cursor" Value="SizeNESW"/>
             <Setter TargetName="GlyphArea" Property="HorizontalAlignment" Value="Right"/>
            </MultiTrigger>

						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="ResizeMode" Value="Both"/>
								<Condition Property="Location" Value="Top"/>
								<Condition Property="FlowDirection" Value="RightToLeft"/>
							</MultiTrigger.Conditions>
							<Setter TargetName="PART_Thumb" Property="Cursor" Value="SizeNWSE"/>
						</MultiTrigger>

						<Trigger Property="ResizeMode" Value="VerticalOnly">
              <Setter TargetName="VerticalOnlyGlyph" Property="Visibility" Value="Visible"/>
              <Setter TargetName="PART_Thumb" Property="Cursor" Value="SizeNS"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>


    <!-- ================================ -->
    <!--          ToolWindow          -->
    <!-- ================================ -->
    <Style TargetType="{x:Type igWindows:ToolWindow}">
        <Setter Property="Background" Value="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.ToolWindowBackgroundFillKey}}" />
        <Setter Property="BorderThickness" Value="15" />
        <Setter Property="BorderThickness" Value="{Binding Path=PreferredBorderThickness, RelativeSource={x:Static RelativeSource.Self}}" />
        <!-- AS 6/30/10 TFS14299
        <Setter Property="SnapsToDevicePixels" Value="True"/>-->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type igWindows:ToolWindow}">
                    <AdornerDecorator>
                        <Grid Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <Border x:Name="windowOuterBorder" BorderBrush="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.ToolWindowInactiveOuterBorderFillKey}}" BorderThickness="1,1,1,1"/>
                            <Border x:Name="windowInnerBorder" BorderThickness="1,1,1,1" BorderBrush="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.ToolWindowInactiveInnerBorderFillKey}}" Margin="1,1,1,1"/>
                            <Border x:Name="windowCenterBorder" Margin="2,2,2,2" Background="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.ToolWindowInactiveCenterFillKey}}">
                                <Grid SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                    <Grid.RowDefinitions>
                                        <RowDefinition x:Name="captionRow" Height="Auto" />
                                        <RowDefinition x:Name="contentRow" Height="*" />
                                    </Grid.RowDefinitions>
									<!-- AS 6/24/11 FloatingWindowCaptionSource - Bind Visibility -->
                                    <igWindows:CardPanel x:Name="PART_Caption" Background="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.ToolWindowInactiveCaptionFillKey}}" Visibility="{TemplateBinding CaptionVisibility}">
                                        <DockPanel x:Name="captionPanel" Margin="6,6,6,2">
                                            <Button 
                                                Style="{StaticResource ToolWindowCloseButtonStyle}" 
                                                Command="{x:Static igWindows:ToolWindow.CloseCommand}" 
                                                HorizontalAlignment="Right" VerticalAlignment="Center" 
                                                DockPanel.Dock="Right"/>
											<!-- NA 2011.1 - ToolWindow changes -->
											<Button x:Name="MaximizeButton"
												Style="{StaticResource ToolWindowMaximizeButtonStyle}"
                                                Command="{x:Static igWindows:ToolWindow.MaximizeCommand}" 
												Visibility="{TemplateBinding MaximizeButtonVisibility}"
                                                HorizontalAlignment="Right" VerticalAlignment="Center" 
												ToolTip="{StaticResource maximizeToolTip}"
                                                DockPanel.Dock="Right"
                                                Margin="1,0"/>
											<Button x:Name="MinimizeButton" 
												Style="{StaticResource ToolWindowMinimizeButtonStyle}"
                                                Command="{x:Static igWindows:ToolWindow.MinimizeCommand}" 
												Visibility="{TemplateBinding MinimizeButtonVisibility}"
                                                HorizontalAlignment="Right" VerticalAlignment="Center" 
												ToolTip="{StaticResource minimizeToolTip}"
                                                DockPanel.Dock="Right"/>
											<TextBlock x:Name="txtCaption"
											           Text="{TemplateBinding Title}" 
                                                       IsHitTestVisible="False" 
                                                       TextTrimming="CharacterEllipsis"
											           Foreground="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.ToolWindowInactiveCaptionTextFillKey}}"
											           FontFamily="{DynamicResource {x:Static SystemFonts.SmallCaptionFontFamilyKey}}"
											           FontSize="{DynamicResource {x:Static SystemFonts.SmallCaptionFontSizeKey}}"
											           FontStyle="{DynamicResource {x:Static SystemFonts.SmallCaptionFontStyleKey}}"
											           FontWeight="{DynamicResource {x:Static SystemFonts.SmallCaptionFontWeightKey}}"
											           TextDecorations="{DynamicResource {x:Static SystemFonts.SmallCaptionFontTextDecorationsKey}}"/>
								        </DockPanel>
                                    </igWindows:CardPanel>
                                    <Grid x:Name="Content" Background="{TemplateBinding Background}" Margin="6,0,6,6" Grid.Row="1">
                                        <ContentPresenter x:Name="PART_Content"
										    Grid.Row="1"
										    Margin="{TemplateBinding Padding}"
										    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
										    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
										    ContentSource="Content" />
                                        <!-- Put the resize grip within the border so it doesn't overlap the border -->
                                        <Grid Name="PART_ResizeGrip" Grid.RowSpan="2" Background="Transparent" HorizontalAlignment="Right" VerticalAlignment="Bottom" Visibility="Collapsed">
                                            <!-- We need to wrap the resize grip in an element and prevent hittesting on the resize grip -->
                                            <ResizeGrip IsTabStop="False" IsHitTestVisible="False" />
                                        </Grid>
                                    </Grid>
                                </Grid>
                            </Border>
                            <Grid x:Name="resizeAreas" Visibility="Collapsed" FlowDirection="LeftToRight">
                                <igWindows:ToolWindowResizeElement x:Name="PART_BorderTop" BorderLocation="Top"/>
                                <igWindows:ToolWindowResizeElement x:Name="PART_BorderLeft" BorderLocation="Left"/>
                                <igWindows:ToolWindowResizeElement x:Name="PART_BorderBottom" BorderLocation="Bottom"/>
                                <igWindows:ToolWindowResizeElement x:Name="PART_BorderRight" BorderLocation="Right"/>

                                <igWindows:ToolWindowResizeElement x:Name="PART_BorderTopLeft" BorderLocation="TopLeft"/>
                                <igWindows:ToolWindowResizeElement x:Name="PART_BorderTopRight" BorderLocation="TopRight"/>
                                <igWindows:ToolWindowResizeElement x:Name="PART_BorderBottomLeft" BorderLocation="BottomLeft"/>
                                <igWindows:ToolWindowResizeElement x:Name="PART_BorderBottomRight" BorderLocation="BottomRight"/>
                            </Grid>
                        </Grid>
                    </AdornerDecorator>
                    <ControlTemplate.Triggers>
						<!-- NA 2011.1 - ToolWindow changes -->
						<Trigger Property="WindowState" Value="Minimized">
							<Setter Property="Command" TargetName="MinimizeButton" Value="{x:Static igWindows:ToolWindow.RestoreCommand}" />
							<Setter Property="ToolTip" TargetName="MinimizeButton" Value="{StaticResource restoreUpToolTip}" />
							<Setter Property="Style" TargetName="MinimizeButton" Value="{StaticResource ToolWindowRestoreButtonStyle}" />
						</Trigger>
						<Trigger Property="WindowState" Value="Maximized">
							<Setter Property="Command" TargetName="MaximizeButton" Value="{x:Static igWindows:ToolWindow.RestoreCommand}" />
							<Setter Property="ToolTip" TargetName="MaximizeButton" Value="{StaticResource restoreDownToolTip}" />
							<Setter Property="Style" TargetName="MaximizeButton" Value="{StaticResource ToolWindowRestoreButtonStyle}" />
						</Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="WindowState" Value="Minimized" />
                                <Condition Property="IsUsingOSNonClientArea" Value="False" />
                                <!-- AS 1/4/12 TFS85418 -->
                                <Condition Property="CaptionVisibility" Value="Visible" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Visibility" TargetName="PART_Content" Value="Collapsed" />
                            <Setter Property="Height" TargetName="captionRow" Value="*" />
							<Setter Property="Height" TargetName="contentRow" Value="0" />
							<Setter Property="Margin" TargetName="captionPanel" Value="6,0" />
							<Setter Property="VerticalAlignment" TargetName="txtCaption" Value="Center" />
						</MultiTrigger>
						
						<!-- AS 6/24/11 FloatingWindowCaptionSource - Don't show any non-client area when maximized and window style is none -->
						<MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="WindowState" Value="Maximized" />
                                <Condition Property="IsUsingOSNonClientArea" Value="False" />
                            </MultiTrigger.Conditions>
							<Setter Property="Margin" TargetName="Content" Value="0" />
						</MultiTrigger>
						
						<Trigger Property="IsActive" Value="True">
                            <Setter Property="Foreground" TargetName="txtCaption" Value="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.ToolWindowActiveCaptionTextFillKey}}" />
                            <Setter TargetName="windowOuterBorder" Property="BorderBrush" Value="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.ToolWindowActiveOuterBorderFillKey}}"/>
                            <Setter TargetName="windowInnerBorder" Property="BorderBrush" Value="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.ToolWindowActiveInnerBorderFillKey}}"/>
                            <Setter TargetName="windowCenterBorder" Property="Background" Value="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.ToolWindowActiveCenterFillKey}}"/>
                            <Setter TargetName="PART_Caption" Property="Background" Value="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.ToolWindowActiveCaptionFillKey}}"/>
                        </Trigger>

                        <!-- Do not allow resizing unless canresize or canresizewithgrip -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="ResizeMode" Value="CanResize" />
                                <Condition Property="IsUsingOSNonClientArea" Value="False" />
								<!-- NA 2011.1 - ToolWindow changes -->
								<Condition Property="WindowState" Value="Normal" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Visibility" TargetName="resizeAreas" Value="Visible" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="ResizeMode" Value="CanResizeWithGrip" />
                                <Condition Property="IsUsingOSNonClientArea" Value="False" />
								<!-- NA 2011.1 - ToolWindow changes -->
								<Condition Property="WindowState" Value="Normal" />
							</MultiTrigger.Conditions>
                            <Setter Property="Visibility" TargetName="resizeAreas" Value="Visible" />
                        </MultiTrigger>

						<!-- NA 2011.1 - ToolWindow changes -->
						<!--<Trigger Property="ResizeMode" Value="CanResizeWithGrip">
                            <Setter Property="Visibility" TargetName="PART_ResizeGrip" Value="Visible" />
                        </Trigger>-->
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="ResizeMode" Value="CanResizeWithGrip" />
								<Condition Property="WindowState" Value="Normal" />
							</MultiTrigger.Conditions>
							<Setter Property="Visibility" TargetName="PART_ResizeGrip" Value="Visible" />
						</MultiTrigger>

						<Trigger Property="IsUsingOSNonClientArea" Value="True">
                            <Setter Property="Visibility" TargetName="PART_Caption" Value="Collapsed" />
                            <Setter Property="Margin" TargetName="Content" Value="0,0,0,0" />
                            <Setter Property="Visibility" TargetName="windowOuterBorder" Value="Collapsed" />
                            <Setter Property="Visibility" TargetName="windowInnerBorder" Value="Collapsed" />
                            <Setter Property="Background" TargetName="windowCenterBorder" Value="Transparent" />
                            <Setter Property="Padding" TargetName="windowCenterBorder" Value="0,0,0,0" />
                            <Setter Property="Margin" TargetName="windowCenterBorder" Value="0,0,0,0" />
                        </Trigger>

						<!-- AS 6/24/11 FloatingWindowCaptionSource - Show space on top when we're not providing the caption -->
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsUsingOSNonClientArea" Value="False" />
								<Condition Property="CaptionVisibility" Value="Collapsed" />
							</MultiTrigger.Conditions>
							<Setter Property="Margin" TargetName="Content" Value="6" />
						</MultiTrigger>
						
						<!-- AS 6/24/11 FloatingWindowCaptionSource - Hide the resize area when maximized and we're providing the nonclient area. -->
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsUsingOSNonClientArea" Value="False" />
								<Condition Property="WindowState" Value="Maximized" />
							</MultiTrigger.Conditions>
							<Setter Property="Margin" TargetName="windowCenterBorder" Value="0" />
							<Setter Property="Visibility" TargetName="windowInnerBorder" Value="Collapsed" />
							<Setter Property="Visibility" TargetName="windowOuterBorder" Value="Collapsed" />
							<Setter Property="Margin" TargetName="Content" Value="0" />
						</MultiTrigger>
                        
                        <!-- AS 1/4/12 TFS85418 -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="WindowState" Value="Minimized" />
                                <Condition Property="IsUsingOSNonClientArea" Value="False" />
                                <Condition Property="CaptionVisibility" Value="Collapsed" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Margin" TargetName="Content" Value="0" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsActive" Value="True">
                <Setter Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.ActiveBorderBrushKey}}" />
            </Trigger>
        </Style.Triggers>
    </Style>
	
    <!-- ================================ -->
    <!--          TileDragIndicator       -->
    <!-- ================================ -->
    <!-- JJD 12/14/09 - added -->
    <Style TargetType="{x:Type igTiles:TileDragIndicator}">
		<Setter Property="Template">
			<Setter.Value>
                <ControlTemplate TargetType="{x:Type igTiles:TileDragIndicator}">
                    <ContentPresenter/>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
    
    <!-- _________________________ XamBusyIndicator ______________________________________ -->

    <BooleanToVisibilityConverter x:Key="BoolToVisibiilityConverter" />
    <igPrim:NullableToVisibilityConverter x:Key="NullToCollapsedConverter" />

    <Style x:Key="BusyAnimationPresenterStyle" TargetType="{x:Type igPrim:BusyAnimationPresenter}">
        <Setter Property="Height" Value="68" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="IsTabStop" Value="False" /> 
    </Style>


    <!-- ================================ -->
    <!-- Azure animation -->
    <!-- ================================ -->
    <Style TargetType="{x:Type igPrim:AzureBusyAnimationPresenter}"
           BasedOn="{StaticResource BusyAnimationPresenterStyle}">
        <Setter Property="UpperElementsFill"
                Value="{StaticResource BusyIndicatorAnimationSecondItemBackgroundBrush}" />
        <Setter Property="LowerElementsFill"
                Value="{StaticResource BusyIndicatorAnimationFirstItemBackgroundBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="igPrim:AzureBusyAnimationPresenter">
                    <Viewbox>
                        <Viewbox.Resources>
                            <Storyboard x:Key="IsAnimatingStoryboard" >
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(RotateTransform.Angle)"
                                                                   Storyboard.TargetName="pathLevelTop1Angle"
                                                                   Duration="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(igPrim:BusyAnimationPresenter.AnimationPresenter).AnimationTotalDuration}"
                                                                   RepeatBehavior="Forever">

                                    <!-- LevelTop1 - Showing from left to right from -180 to 0 -->
                                    <SplineDoubleKeyFrame Value="-135" />
                                    <!-- #1 LevelTop1 starts showing -->
                                    <SplineDoubleKeyFrame Value="-95" />
                                    <!-- #2 LevelTop2 starts showing -->
                                    <SplineDoubleKeyFrame Value="-50" />
                                    <!-- #3 LevelTop3 starts showing -->
                                    <SplineDoubleKeyFrame Value="0" />
                                    <!-- #4 LevelTop1 completely shown -->
                                    <!-- LevelTop1 - Waiting, waiting for LevelTop2 & LevelTop3 to show  -->
                                    <SplineDoubleKeyFrame Value="0" />
                                    <!-- #5 LevelTop2 completely shown -->
                                    <SplineDoubleKeyFrame Value="0" />
                                    <!-- #6 LevelTop3 completely shown -->
                                    <!-- LevelTop1 - Hiding from left to right from 0 to 180, starts after all other top levels are already shown -->
                                    <SplineDoubleKeyFrame Value="45" />
                                    <!-- #7 LevelTop1 starts hiding -->
                                    <!-- #X1 LevelBottom3 starts showing -->
                                    <SplineDoubleKeyFrame Value="95" />
                                    <!-- #8 LevelTop2 starts hiding  -->
                                    <!-- #X2 LevelBottom2 starts showing -->
                                    <SplineDoubleKeyFrame Value="135" />
                                    <!-- #9 LevelTop3 starts hiding -->
                                    <!-- #X3 LevelBottom1 starts showing & LevelBottom3 completely shown -->
                                    <SplineDoubleKeyFrame Value="180" />
                                    <!-- #10 LevelTop1 completely hidden -->
                                    <!-- #X4 LevelBottom2 completely shown & LevelBottom3 starts hiding -->


                                    <!-- LevelTop1 - HIDDEN on the right, waiting LevelTop2 & LevelTop3 to hide -->
                                    <SplineDoubleKeyFrame Value="180" />
                                    <!-- #11 LevelTop2 completely hidden -->
                                    <!-- #X5 LevelBottom1 completely shown & LevelBottom2 starts hiding -->
                                    <SplineDoubleKeyFrame Value="180" />
                                    <!-- #12 LevelTop3 completely hidden -->
                                    <!-- #X6 LevelBottom1 starts hiding & LevelBottom3 completed/ -->


                                    <!-- LevelTop1 - Waiting - bottom layers -->
                                    <SplineDoubleKeyFrame Value="180" />
                                    <!-- #X7 LevelBottom3 stays still, LevelBottom2 completes, LevelBottom1 in progress -->
                                    <SplineDoubleKeyFrame Value="180" />
                                    <!-- #X8 LevelBottom3 stays still, LevelBottom2 stays still, LevelBottom1 completes -->
                                    <SplineDoubleKeyFrame Value="180" />
                                    <!-- #X9 LevelBottom3 stays still, LevelBottom2 stays still, LevelBottom1 stays still -->

                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(RotateTransform.Angle)"
                                                                   Storyboard.TargetName="pathLevelTop2Angle"
                                                                   Duration="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(igPrim:BusyAnimationPresenter.AnimationPresenter).AnimationTotalDuration}"
                                                                   RepeatBehavior="Forever">

                                    <!-- LevelTop2 - HIDDEN on the right, waiting for LevelTop1 to show -->
                                    <SplineDoubleKeyFrame Value="-180" />
                                    <!-- #1 LevelTop1 starts showing -->


                                    <!-- LevelTop2 - Showing from left to right from -180 to 0 -->
                                    <SplineDoubleKeyFrame Value="-150" />
                                    <!-- #2 LevelTop2 starts showing -->
                                    <SplineDoubleKeyFrame Value="-100" />
                                    <!-- #3 LevelTop3 starts showing -->
                                    <SplineDoubleKeyFrame Value="-50" />
                                    <!-- #4 LevelTop1 completely shown -->
                                    <SplineDoubleKeyFrame Value="0" />
                                    <!-- #5 LevelTop2 completely shown -->


                                    <!-- LevelTop2 - SHOWN on the right, waiting for LevelTop3 to show -->
                                    <SplineDoubleKeyFrame Value="0" />
                                    <!-- #6 LevelTop3 completely shown -->


                                    <!-- LevelTop2 - SHOWN on the right, waiting for LevelTop3 to hide -->
                                    <SplineDoubleKeyFrame Value="0" />
                                    <!-- #7 LevelTop1 starts hiding -->
                                    <!-- #X1 LevelBottom3 starts showing -->


                                    <!-- LevelTop2 - Hiding from left to right from 0 to 180 -->
                                    <SplineDoubleKeyFrame Value="30" />
                                    <!-- #8 LevelTop2 starts hiding -->
                                    <!-- #X2 LevelBottom2 starts showing -->
                                    <SplineDoubleKeyFrame Value="80" />
                                    <!-- #9 LevelTop3 starts hiding -->
                                    <!-- #X3 LevelBottom1 starts showing & LevelBottom3 completely shown -->
                                    <SplineDoubleKeyFrame Value="130" />
                                    <!-- #10 LevelTop1 completely hidden -->
                                    <!-- #X4 LevelBottom2 completely shown & LevelBottom3 starts hiding -->
                                    <SplineDoubleKeyFrame Value="180" />
                                    <!-- #11 LevelTop2 completely hidden -->
                                    <!-- #X5 LevelBottom1 completely shown & LevelBottom2 starts hiding -->
                                    <SplineDoubleKeyFrame Value="180" />
                                    <!-- #12 LevelTop3 completely hidden -->
                                    <!-- #X6 LevelBottom1 starts hiding & LevelBottom3 completed/ -->


                                    <!-- LevelTop2 - Waiting - bottom layers -->
                                    <SplineDoubleKeyFrame Value="180" />
                                    <!-- #X7 LevelBottom3 stays still, LevelBottom2 completes, LevelBottom1 in progress/ -->
                                    <SplineDoubleKeyFrame Value="180" />
                                    <!-- #X8 LevelBottom3 stays still, LevelBottom2 stays still, LevelBottom1 completes/ -->
                                    <SplineDoubleKeyFrame Value="180" />
                                    <!-- #X9 LevelBottom3 stays still, LevelBottom2 stays still, LevelBottom1 stays still/ -->

                                </DoubleAnimationUsingKeyFrames>

                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(RotateTransform.Angle)"
                                                                   Storyboard.TargetName="pathLevelTop3Angle"
                                                                   Duration="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(igPrim:BusyAnimationPresenter.AnimationPresenter).AnimationTotalDuration}"
                                                                   RepeatBehavior="Forever">

                                    <!-- LevelTop2 - HIDDEN on the right, waiting for LevelTop1 & LevelTop2 to show/ -->
                                    <SplineDoubleKeyFrame Value="-180" />
                                    <!-- #1 LevelTop1 starts showing/ -->
                                    <SplineDoubleKeyFrame Value="-180" />
                                    <!-- #2 LevelTop2 starts showing/ -->


                                    <!-- LevelTop3 - Showing from left to right from -180 to 0 -->
                                    <SplineDoubleKeyFrame Value="-170" />
                                    <!-- #3 LevelTop3 starts showing -->
                                    <SplineDoubleKeyFrame Value="-115" />
                                    <!-- #4 LevelTop1 completely shown -->
                                    <SplineDoubleKeyFrame Value="-60" />
                                    <!-- #5 LevelTop2 completely shown -->
                                    <SplineDoubleKeyFrame Value="0" />
                                    <!-- #6 LevelTop3 completely shown -->
                                    <!-- LevelTop3 - SHOWN on the right - PAUSE -->
                                    <SplineDoubleKeyFrame Value="0" />
                                    <!-- #7 LevelTop1 starts hiding -->
                                    <!-- #X1 LevelBottom3 starts showing -->
                                    <SplineDoubleKeyFrame Value="0" />
                                    <!-- #8 LevelTop2 starts hiding -->
                                    <!-- #X2 LevelBottom2 starts showing -->


                                    <!-- LevelTop3 - Hiding from left to right from 0 to 180 -->
                                    <SplineDoubleKeyFrame Value="10" />
                                    <!-- #9 LevelTop3 starts hiding -->
                                    <!-- #X3 LevelBottom1 starts showing & LevelBottom3 completely shown -->
                                    <SplineDoubleKeyFrame Value="65" />
                                    <!-- #10 LevelTop1 completely hidden -->
                                    <!-- #X4 LevelBottom2 completely shown & LevelBottom3 starts hiding -->
                                    <SplineDoubleKeyFrame Value="120" />
                                    <!-- #11 LevelTop2 completely hidden -->
                                    <!-- #X5 LevelBottom1 completely shown & LevelBottom2 starts hiding -->
                                    <SplineDoubleKeyFrame Value="180" />
                                    <!-- #12 LevelTop3 completely hidden -->
                                    <!-- #X6 LevelBottom1 starts hiding & LevelBottom3 completed/ -->


                                    <!-- LevelTop3 - Waiting - bottom layers -->
                                    <SplineDoubleKeyFrame Value="180" />
                                    <!-- #X7 LevelBottom3 stays still, LevelBottom2 completes, LevelBottom1 in progress/ -->
                                    <SplineDoubleKeyFrame Value="180" />
                                    <!-- #X8 LevelBottom3 stays still, LevelBottom2 stays still, LevelBottom1 completes/ -->
                                    <SplineDoubleKeyFrame Value="180" />
                                    <!-- #X9 LevelBottom3 stays still, LevelBottom2 stays still, LevelBottom1 stays still/ -->

                                </DoubleAnimationUsingKeyFrames>

                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(RotateTransform.Angle)"
                                                                   Storyboard.TargetName="pathLevelBottom3Angle"
                                                                   Duration="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(igPrim:BusyAnimationPresenter.AnimationPresenter).AnimationTotalDuration}"
                                                                   RepeatBehavior="Forever">

                                    <!-- LevelTop3 - Waiting - top layers / -->
                                    <SplineDoubleKeyFrame Value="-180" />
                                    <!-- #1 LevelTop1 starts showing/ -->
                                    <SplineDoubleKeyFrame Value="-180" />
                                    <!-- #2 LevelTop2 starts showing/ -->
                                    <SplineDoubleKeyFrame Value="-180" />
                                    <!-- #3 LevelTop3 starts showing -->
                                    <SplineDoubleKeyFrame Value="-180" />
                                    <!-- #4 LevelTop1 completely shown -->
                                    <SplineDoubleKeyFrame Value="-180" />
                                    <!-- #5 LevelTop2 completely shown -->
                                    <SplineDoubleKeyFrame Value="-180" />
                                    <!-- #6 LevelTop3 completely shown -->


                                    <!-- LevelBottom3 - Showing from right to left from -180 to 0 -->
                                    <SplineDoubleKeyFrame Value="-135" />
                                    <!-- #X1 LevelBottom3 starts showing -->
                                    <!-- #7 LevelTop1 starts hiding -->
                                    <SplineDoubleKeyFrame Value="-70" />
                                    <!-- #X2 LevelBottom2 starts showing -->
                                    <!-- #8 LevelTop2 starts hiding -->
                                    <SplineDoubleKeyFrame Value="0" />
                                    <!-- #X3 LevelBottom1 starts showing & LevelBottom3 completely shown -->
                                    <!-- #9 LevelTop3 starts hiding -->


                                    <!-- LevelBottom3 - SHOWN on the right - waiting for LevelBottom2 & LevelBottom1 to show -->
                                    <!-- #10 LevelTop1 completely hidden -->
                                    <SplineDoubleKeyFrame Value="40" />
                                    <!-- #X4 LevelBottom2 completely shown & LevelBottom3 starts hiding -->
                                    <!-- #11 LevelTop2 completely hidden -->
                                    <SplineDoubleKeyFrame Value="90" />
                                    <!-- #X5 LevelBottom1 completely shown & LevelBottom2 starts hiding -->
                                    <!-- #12 LevelTop3 completely hidden -->


                                    <!-- LevelBottom3 - Hiding from right to left from 0 to 180, starts hiding FIRST after all other top levels are already shown -->
                                    <SplineDoubleKeyFrame Value="130" />
                                    <!-- #X6 LevelBottom1 starts hiding & LevelBottom3 completed/ -->
                                    <SplineDoubleKeyFrame Value="180" />
                                    <!-- #X7 LevelBottom3 stays still, LevelBottom2 completes, LevelBottom1 in progress/ -->
                                    <SplineDoubleKeyFrame Value="180" />
                                    <!-- #X8 LevelBottom3 stays still, LevelBottom2 stays still, LevelBottom1 completes/ -->
                                    <SplineDoubleKeyFrame Value="180" />
                                    <!-- #X9 LevelBottom3 stays still, LevelBottom2 stays still, LevelBottom1 stays still/ -->

                                </DoubleAnimationUsingKeyFrames>

                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(RotateTransform.Angle)"
                                                                   Storyboard.TargetName="pathLevelBottom2Angle"
                                                                   Duration="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(igPrim:BusyAnimationPresenter.AnimationPresenter).AnimationTotalDuration}"
                                                                   RepeatBehavior="Forever">

                                    <!-- LevelTop2 - Waiting - top layers -->
                                    <SplineDoubleKeyFrame Value="-180" />
                                    <!-- #1 LevelTop1 starts showing/ -->
                                    <SplineDoubleKeyFrame Value="-180" />
                                    <!-- #2 LevelTop2 starts showing/ -->
                                    <SplineDoubleKeyFrame Value="-180" />
                                    <!-- #3 LevelTop3 starts showing -->
                                    <SplineDoubleKeyFrame Value="-180" />
                                    <!-- #4 LevelTop1 completely shown -->
                                    <SplineDoubleKeyFrame Value="-180" />
                                    <!-- #5 LevelTop2 completely shown -->
                                    <SplineDoubleKeyFrame Value="-180" />
                                    <!-- #6 LevelTop3 completely shown -->


                                    <!-- LevelTop2 - HIDDEN on the right, waiting for LevelTop1 & LevelTop2 to show/ -->
                                    <SplineDoubleKeyFrame Value="-180" />
                                    <!-- #X1 LevelBottom3 starts showing -->


                                    <!-- LevelBottom2 - Showing from right to left from -180 to 0 -->
                                    <SplineDoubleKeyFrame Value="-150" />
                                    <!-- #X2 LevelBottom2 starts showing -->
                                    <SplineDoubleKeyFrame Value="-75" />
                                    <!-- #X3 LevelBottom1 starts showing & LevelBottom3 completely shown -->
                                    <SplineDoubleKeyFrame Value="0" />
                                    <!-- #X4 LevelBottom2 completely shown & LevelBottom3 starts hiding -->


                                    <!-- LevelBottom2 - SHOWN on the right - waiting for LevelBottom1 to show -->
                                    <SplineDoubleKeyFrame Value="30" />
                                    <!-- #X5 LevelBottom1 completely shown & LevelBottom2 starts hiding -->
                                    <SplineDoubleKeyFrame Value="80" />
                                    <!-- #X6 LevelBottom1 starts hiding & LevelBottom3 completed/ -->


                                    <!-- LevelBottom2 - Hiding from right to left from 0 to 180 -->
                                    <SplineDoubleKeyFrame Value="130" />
                                    <!-- #X7 LevelBottom3 stays still, LevelBottom2 completes, LevelBottom1 in progress/ -->
                                    <SplineDoubleKeyFrame Value="180" />
                                    <!-- #X8 LevelBottom3 stays still, LevelBottom2 stays still, LevelBottom1 completes/ -->
                                    <SplineDoubleKeyFrame Value="180" />
                                    <!-- #X9 LevelBottom3 stays still, LevelBottom2 stays still, LevelBottom1 stays still/ -->

                                </DoubleAnimationUsingKeyFrames>

                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(RotateTransform.Angle)"
                                                                   Storyboard.TargetName="pathLevelBottom1Angle"
                                                                   Duration="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(igPrim:BusyAnimationPresenter.AnimationPresenter).AnimationTotalDuration}"
                                                                   RepeatBehavior="Forever">

                                    <!-- LevelTop1 - Waiting - top layers -->
                                    <SplineDoubleKeyFrame Value="-180" />
                                    <!-- #1 LevelTop1 starts showing/ -->
                                    <SplineDoubleKeyFrame Value="-180" />
                                    <!-- #2 LevelTop2 starts showing/ -->
                                    <SplineDoubleKeyFrame Value="-180" />
                                    <!-- #3 LevelTop3 starts showing -->
                                    <SplineDoubleKeyFrame Value="-180" />
                                    <!-- #4 LevelTop1 completely shown -->
                                    <SplineDoubleKeyFrame Value="-180" />
                                    <!-- #5 LevelTop2 completely shown -->
                                    <SplineDoubleKeyFrame Value="-180" />
                                    <!-- #6 LevelTop3 completely shown -->


                                    <!-- LevelBottom1 - HIDDEN on the right, waiting for LevelTop2 & LevelTop3 to show -->
                                    <SplineDoubleKeyFrame Value="-180" />
                                    <!-- #X1 LevelBottom3 starts showing -->
                                    <SplineDoubleKeyFrame Value="-180" />
                                    <!-- #X2 LevelBottom2 starts showing -->


                                    <!-- LevelBottom1 - Showing from right to left from -180 to 0 -->
                                    <SplineDoubleKeyFrame Value="-170" />
                                    <!-- #X3 LevelBottom1 starts showing & LevelBottom3 completely shown -->
                                    <SplineDoubleKeyFrame Value="-115" />
                                    <!-- #X4 LevelBottom2 completely shown & LevelBottom3 starts hiding -->
                                    <SplineDoubleKeyFrame Value="0" />
                                    <!-- #X5 LevelBottom1 completely shown & LevelBottom2 starts hiding -->
                                    <SplineDoubleKeyFrame Value="60" />
                                    <!-- #X6 LevelBottom1 starts hiding & LevelBottom3 completed/ -->


                                    <!-- LevelBottom1 - SHOWN on the right, waiting for LevelTop1 & LevelBottom2 to hide -->
                                    <SplineDoubleKeyFrame Value="100" />
                                    <!-- #X7 LevelBottom3 stays still, LevelBottom2 completes, LevelBottom1 in progress/ -->
                                    <SplineDoubleKeyFrame Value="140" />
                                    <!-- #X8 LevelBottom3 stays still, LevelBottom2 stays still, LevelBottom1 completes/ -->
                                    <SplineDoubleKeyFrame Value="180" />
                                    <!-- #X9 LevelBottom3 stays still, LevelBottom2 stays still, LevelBottom1 stays still/ -->

                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                        </Viewbox.Resources>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup Name="AnimationStates">
                                <VisualState Name="IsAnimating"
                                             Storyboard="{StaticResource IsAnimatingStoryboard}" />
                                <VisualState Name="IsNotAnimating" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid Margin="0,2,0,0">
                            <Grid Name="pathLevelTop1">
                                <Path Fill="{TemplateBinding UpperElementsFill}"
                                      Opacity="0.85">
                                    <Path.Data>
                                        <CombinedGeometry GeometryCombineMode="Exclude">
                                            <CombinedGeometry.Geometry1>
                                                <EllipseGeometry RadiusX="100"
                                                                 RadiusY="100"
                                                                 Center="100,100" />
                                            </CombinedGeometry.Geometry1>
                                            <CombinedGeometry.Geometry2>
                                                <EllipseGeometry RadiusX="88"
                                                                 RadiusY="88"
                                                                 Center="100,100" />
                                            </CombinedGeometry.Geometry2>
                                        </CombinedGeometry>
                                    </Path.Data>
                                    <Path.Clip>
                                        <RectangleGeometry Rect="0,0,200,98" />
                                    </Path.Clip>
                                </Path>
                                <Grid.Clip>
                                    <RectangleGeometry Rect="0,0,200,98">
                                        <RectangleGeometry.Transform>
                                            <RotateTransform x:Name="pathLevelTop1Angle"
                                                             CenterX="100"
                                                             CenterY="100"
                                                             Angle="-180" />
                                        </RectangleGeometry.Transform>
                                    </RectangleGeometry>
                                </Grid.Clip>
                            </Grid>

                            <Grid Name="pathLevelTop2">
                                <Path Fill="{TemplateBinding UpperElementsFill}"
                                      Opacity="0.65">
                                    <Path.Data>
                                        <CombinedGeometry GeometryCombineMode="Exclude">
                                            <CombinedGeometry.Geometry1>
                                                <EllipseGeometry RadiusX="85"
                                                                 RadiusY="85"
                                                                 Center="100,100" />
                                            </CombinedGeometry.Geometry1>
                                            <CombinedGeometry.Geometry2>
                                                <EllipseGeometry RadiusX="73"
                                                                 RadiusY="73"
                                                                 Center="100,100" />
                                            </CombinedGeometry.Geometry2>
                                        </CombinedGeometry>
                                    </Path.Data>
                                    <Path.Clip>
                                        <RectangleGeometry Rect="0,0,200,98" />
                                    </Path.Clip>
                                </Path>
                                <Grid.Clip>
                                    <RectangleGeometry Rect="0,0,200,98">
                                        <RectangleGeometry.Transform>
                                            <RotateTransform x:Name="pathLevelTop2Angle"
                                                             CenterX="100"
                                                             CenterY="100"
                                                             Angle="-180" />
                                        </RectangleGeometry.Transform>
                                    </RectangleGeometry>
                                </Grid.Clip>
                            </Grid>

                            <Grid Name="pathLevelTop3">
                                <Path Fill="{TemplateBinding UpperElementsFill}"
                                      Opacity="0.45">
                                    <Path.Data>
                                        <CombinedGeometry GeometryCombineMode="Exclude">
                                            <CombinedGeometry.Geometry1>
                                                <EllipseGeometry RadiusX="70"
                                                                 RadiusY="70"
                                                                 Center="100,100" />
                                            </CombinedGeometry.Geometry1>
                                            <CombinedGeometry.Geometry2>
                                                <EllipseGeometry RadiusX="58"
                                                                 RadiusY="58"
                                                                 Center="100,100" />
                                            </CombinedGeometry.Geometry2>
                                        </CombinedGeometry>
                                    </Path.Data>
                                    <Path.Clip>
                                        <RectangleGeometry Rect="0,0,200,98" />
                                    </Path.Clip>
                                </Path>
                                <Grid.Clip>
                                    <RectangleGeometry Rect="0,0,200,98">
                                        <RectangleGeometry.Transform>
                                            <RotateTransform x:Name="pathLevelTop3Angle"
                                                             CenterX="100"
                                                             CenterY="100"
                                                             Angle="-180" />
                                        </RectangleGeometry.Transform>
                                    </RectangleGeometry>
                                </Grid.Clip>
                            </Grid>

                            <Grid Name="pathLevelBottom1">
                                <Path Fill="{TemplateBinding LowerElementsFill}"
                                      Opacity="0.85">
                                    <Path.Data>
                                        <CombinedGeometry GeometryCombineMode="Exclude">
                                            <CombinedGeometry.Geometry1>
                                                <EllipseGeometry RadiusX="100"
                                                                 RadiusY="100"
                                                                 Center="100,100" />
                                            </CombinedGeometry.Geometry1>
                                            <CombinedGeometry.Geometry2>
                                                <EllipseGeometry RadiusX="88"
                                                                 RadiusY="88"
                                                                 Center="100,100" />
                                            </CombinedGeometry.Geometry2>
                                        </CombinedGeometry>
                                    </Path.Data>
                                    <Path.Clip>
                                        <RectangleGeometry Rect="0,102,200,98" />
                                    </Path.Clip>
                                </Path>
                                <Grid.Clip>
                                    <RectangleGeometry Rect="0,102,200,98">
                                        <RectangleGeometry.Transform>
                                            <RotateTransform x:Name="pathLevelBottom1Angle"
                                                             CenterX="100"
                                                             CenterY="100"
                                                             Angle="-180" />
                                        </RectangleGeometry.Transform>
                                    </RectangleGeometry>
                                </Grid.Clip>
                            </Grid>


                            <Grid Name="pathLevelBottom2">
                                <Path Fill="{TemplateBinding LowerElementsFill}"
                                      Opacity="0.65">
                                    <Path.Data>
                                        <CombinedGeometry GeometryCombineMode="Exclude">
                                            <CombinedGeometry.Geometry1>
                                                <EllipseGeometry RadiusX="85"
                                                                 RadiusY="85"
                                                                 Center="100,100" />
                                            </CombinedGeometry.Geometry1>
                                            <CombinedGeometry.Geometry2>
                                                <EllipseGeometry RadiusX="73"
                                                                 RadiusY="73"
                                                                 Center="100,100" />
                                            </CombinedGeometry.Geometry2>
                                        </CombinedGeometry>
                                    </Path.Data>
                                    <Path.Clip>
                                        <RectangleGeometry Rect="0,102,200,98" />
                                    </Path.Clip>
                                </Path>
                                <Grid.Clip>
                                    <RectangleGeometry Rect="0,102,200,98">
                                        <RectangleGeometry.Transform>
                                            <RotateTransform x:Name="pathLevelBottom2Angle"
                                                             CenterX="100"
                                                             CenterY="100"
                                                             Angle="-180" />
                                        </RectangleGeometry.Transform>
                                    </RectangleGeometry>
                                </Grid.Clip>
                            </Grid>

                            <Grid Name="pathLevelBottom3">
                                <Path Fill="{TemplateBinding LowerElementsFill}"
                                      Opacity="0.45">
                                    <Path.Data>
                                        <CombinedGeometry GeometryCombineMode="Exclude">
                                            <CombinedGeometry.Geometry1>
                                                <EllipseGeometry RadiusX="70"
                                                                 RadiusY="70"
                                                                 Center="100,100" />
                                            </CombinedGeometry.Geometry1>
                                            <CombinedGeometry.Geometry2>
                                                <EllipseGeometry RadiusX="58"
                                                                 RadiusY="58"
                                                                 Center="100,100" />
                                            </CombinedGeometry.Geometry2>
                                        </CombinedGeometry>
                                    </Path.Data>
                                    <Path.Clip>
                                        <RectangleGeometry Rect="0,102,200,98" />
                                    </Path.Clip>
                                </Path>
                                <Grid.Clip>
                                    <RectangleGeometry Rect="0,102,200,98">
                                        <RectangleGeometry.Transform>
                                            <RotateTransform x:Name="pathLevelBottom3Angle"
                                                             CenterX="100"
                                                             CenterY="100"
                                                             Angle="-180" />
                                        </RectangleGeometry.Transform>
                                    </RectangleGeometry>
                                </Grid.Clip>
                            </Grid>
                        </Grid>
                    </Viewbox>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- ================================ -->
    <!-- Gears animation -->
    <!-- ================================ -->
    <Style TargetType="{x:Type igPrim:GearsBusyAnimationPresenter}" BasedOn="{StaticResource BusyAnimationPresenterStyle}">
        <Setter Property="SmallGearFill" Value="{StaticResource BusyIndicatorAnimationSecondItemBackgroundBrush}" />
        <Setter Property="BigGearFill" Value="{StaticResource BusyIndicatorAnimationFirstItemBackgroundBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="igPrim:GearsBusyAnimationPresenter">
                    <Viewbox>
                        <Viewbox.Resources>
                            <Storyboard x:Key="IsAnimatingStoryboard"
                                        RepeatBehavior="Forever">
                                <DoubleAnimation To="240"
                                                 Storyboard.TargetName="rotateTransform"
                                                 Storyboard.TargetProperty="Angle"
                                                 Duration="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(igPrim:BusyAnimationPresenter.AnimationPresenter).AnimationTotalDuration}" />
                                <DoubleAnimation To="-360"
                                                 Storyboard.TargetName="rotateTransformSmall"
                                                 Storyboard.TargetProperty="Angle"
                                                 Duration="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(igPrim:BusyAnimationPresenter.AnimationPresenter).AnimationTotalDuration}" />
                            </Storyboard>
                        </Viewbox.Resources>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup Name="AnimationStates">
                                <VisualState Name="IsAnimating"
                                             Storyboard="{StaticResource IsAnimatingStoryboard}" />
                                <VisualState Name="IsNotAnimating" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid x:Name="animationRoot">
                            <Path x:Name="bigGear"
                                  Data="M666.5 414.1V385c0-5.5-4.5-10.2-10-10.4l-47.6-2c-5.5-0.2-10.6-4.9-11.6-10.3c-1.9-9.6-4.4-19-7.6-28.1  c-1.8-5.2 0.2-11.8 4.8-14.8l40-26.2c4.6-3 6.1-9.4 3.4-14.1l-14.5-25.2c-2.8-4.8-9-6.6-13.9-4l-42.7 22.3  c-4.9 2.6-11.6 1.1-15.3-3.1c-6.3-7.2-13.2-14-20.5-20.3c-4.2-3.6-5.7-10.3-3.2-15.2l21.8-43.2c2.5-4.9 0.6-11.2-4.2-13.9L520.2 162  c-4.8-2.8-11.1-1.2-14 3.4l-26.1 41c-3 4.7-9.5 6.8-14.7 5c-8.5-2.9-17.2-5.2-26.2-7c-5.4-1.1-10.1-6.1-10.4-11.6l-2.9-49.1  c-0.3-5.5-5.1-10-10.6-10l-30.1 0.1c-5.5 0-10.3 4.5-10.7 10l-3.2 49.2c-0.4 5.5-5.1 10.6-10.5 11.7c-8.4 1.7-16.6 3.9-24.5 6.6  c-5.2 1.8-11.8-0.3-14.9-4.9L294.2 165c-3-4.6-9.4-6.1-14.1-3.3l-26 15.1c-4.8 2.8-6.7 9-4.2 14l21.9 44.5c2.4 5 0.9 11.7-3.2 15.4  c-6.3 5.6-12.2 11.5-17.8 17.8c-3.6 4.1-10.4 5.7-15.4 3.2l-44.6-22.3c-4.9-2.5-11.2-0.6-13.9 4.2l-15 26.1  c-2.7 4.8-1.3 11.2 3.3 14.2l41.3 27.6c4.6 3.1 6.6 9.7 4.9 14.9c-2.7 7.9-4.9 16-6.6 24.4c-1.1 5.4-6.2 10.1-11.7 10.4l-49.6 2.9  c-5.5 0.3-10 5.1-10 10.6l0.1 30.1c0 5.5 4.5 10.3 10 10.7l49.3 3.2c5.5 0.4 10.6 5.1 11.7 10.5c1.6 8.4 3.8 16.6 6.5 24.6  c1.7 5.2-0.3 11.9-5 14.9l-41.2 27.1c-4.6 3-6.1 9.4-3.3 14.1l15.1 26c2.8 4.8 9 6.7 14 4.2l44-21.7c5-2.4 11.7-0.9 15.3 3.3  c5.6 6.5 11.7 12.6 18.1 18.2c4.1 3.7 5.6 10.5 3.2 15.4L249.4 609c-2.5 4.9-0.6 11.2 4.2 13.9l26.1 15c4.8 2.7 11.2 1.3 14.2-3.3  l26.9-40.3c3.1-4.6 9.7-6.6 14.9-4.8c8.6 3 17.5 5.4 26.6 7.1c5.4 1.1 10.1 6.1 10.4 11.7l2.7 48c0.3 5.5 5 10 10.6 10h29.1  c5.5 0 10.2-4.5 10.4-10l2-47.8c0.2-5.5 4.9-10.6 10.3-11.6c9.7-1.8 19.1-4.3 28.2-7.4c5.2-1.8 11.8 0.3 14.9 4.9l26.1 39.9  c3 4.6 9.4 6.1 14.1 3.4l25.2-14.5c4.8-2.8 6.6-9 4-13.9l-22-42.1c-2.6-4.9-1.1-11.6 3.1-15.2c7.4-6.4 14.3-13.3 20.7-20.7  c3.6-4.2 10.4-5.7 15.3-3.2l42.4 21.4c4.9 2.5 11.2 0.6 13.9-4.2l14.5-25.2c2.8-4.8 1.2-11.1-3.4-14l-40-25.4  c-4.7-3-6.7-9.5-4.9-14.7c3.2-9.2 5.7-18.6 7.5-28.3c1-5.4 6.1-10.1 11.6-10.4l47.5-2.7C662 424.3 666.5 419.6 666.5 414.1z   M397.4 459.2c-33.5 0-60.7-27.2-60.7-60.7s27.2-60.7 60.7-60.7s60.7 27.2 60.7 60.7S430.9 459.2 397.4 459.2z"
                                  Fill="{TemplateBinding BigGearFill}"
                                  HorizontalAlignment="Left"
                                  Height="90"
                                  Margin="3.693,8.02,0,0"
                                  Stretch="Fill"
                                  VerticalAlignment="Top"
                                  Width="90"
                                  RenderTransformOrigin="0.5,0.5">
                                <Path.RenderTransform>
                                    <RotateTransform x:Name="rotateTransform" />
                                </Path.RenderTransform>
                            </Path>
                            <Path x:Name="smallGear"
                                  Data="M598.2 411.6v-29.1c0-5.5-4.5-10.2-10-10.4l-48-2c-5.5-0.2-10.9-4.8-12.6-10.1c-2.9-9.3-6.7-18.2-11.5-26.6   c-2.7-4.8-2.3-11.8 1.4-16l32-35.8c3.7-4.1 3.5-10.6-0.4-14.5l-20.6-20.6c-3.9-3.9-10.4-4-14.4-0.3l-36 33.1   c-4.1 3.7-11.1 4.4-16 1.8c-7.5-4-15.5-7.2-23.8-9.7c-5.3-1.6-9.9-7-10.3-12.5l-2.9-49.4c-0.3-5.5-5.1-10-10.6-10l-30.1 0.1   c-5.5 0-10.3 4.5-10.7 10l-3.3 49.6c-0.4 5.5-5 10.9-10.3 12.6c-8 2.5-15.6 5.7-22.8 9.6c-4.9 2.6-12 2.1-16.1-1.6l-37.4-33.2   c-4.1-3.7-10.6-3.5-14.5 0.4l-21.2 21.3c-3.9 3.9-4.1 10.5-0.5 14.6l32.9 37.5c3.6 4.2 4.2 11.3 1.6 16.2   c-3.9 7.2-7.1 14.9-9.6 22.8c-1.6 5.3-7.1 9.9-12.6 10.2l-49.7 2.9c-5.5 0.3-10 5.1-10 10.6l0.1 30.1c0 5.5 4.5 10.3 10 10.7   l49.3 3.2c5.5 0.4 10.9 5 12.5 10.3c2.4 8.2 5.6 16 9.5 23.4c2.6 4.9 2 12-1.7 16.2l-32.6 36.7c-3.7 4.1-3.5 10.6 0.4 14.5   l21.3 21.2c3.9 3.9 10.5 4.1 14.6 0.5l36.5-32c4.2-3.6 11.3-4.1 16.1-1.5c8.3 4.5 17.1 8.2 26.4 10.9c5.3 1.5 10 6.9 10.3 12.4   l2.7 47.6c0.3 5.5 5 10 10.6 10h29.1c5.5 0 10.2-4.5 10.4-10l2-47.7c0.2-5.5 4.8-10.9 10.1-12.5c9.5-2.8 18.6-6.7 27.2-11.4   c4.8-2.7 11.9-2.2 16 1.5l35.2 31.4c4.1 3.7 10.6 3.5 14.5-0.4l20.6-20.6c3.9-3.9 4-10.4 0.3-14.4l-32.2-35   c-3.7-4.1-4.3-11.1-1.7-16c4.6-8.6 8.3-17.8 11-27.3c1.5-5.3 6.8-10 12.3-10.3l47.2-2.7C593.7 421.8 598.2 417.1 598.2 411.6z    M400 450.6c-28.4 0-51.4-23-51.4-51.4s23-51.4 51.4-51.4s51.4 23 51.4 51.4S428.4 450.6 400 450.6z"
                                  Fill="{TemplateBinding SmallGearFill}"
                                  HorizontalAlignment="Left"
                                  Height="60"
                                  Margin="79.965,54.187,0,0"
                                  Stretch="Fill"
                                  VerticalAlignment="Top"
                                  Width="60"
                                  RenderTransformOrigin="0.5,0.5">
                                <Path.RenderTransform>
                                    <RotateTransform x:Name="rotateTransformSmall" />
                                </Path.RenderTransform>
                            </Path>
                        </Grid>
                    </Viewbox>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- ================================ -->
    <!-- ProgressBar-->
    <!-- ================================ -->
    <Style x:Key="ProgressBarStyle"
           TargetType="{x:Type ProgressBar}">
        <Setter Property="Foreground"
                Value="{StaticResource ProgressBar.Foreground}" />
        <Setter Property="Background"
                Value="{StaticResource ProgressBar.Background}" />
        <Setter Property="BorderBrush"
                Value="{StaticResource ProgressBar.Border}" />
        <Setter Property="BorderThickness"
                Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ProgressBar}">
                    <Grid x:Name="TemplateRoot">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Determinate" />
                                <VisualState x:Name="Indeterminate">
                                    <Storyboard RepeatBehavior="Forever">
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)"
                                                                       Storyboard.TargetName="Animation">
                                            <EasingDoubleKeyFrame KeyTime="0"
                                                                  Value="0.25" />
                                            <EasingDoubleKeyFrame KeyTime="0:0:1"
                                                                  Value="0.25" />
                                            <EasingDoubleKeyFrame KeyTime="0:0:2"
                                                                  Value="0.25" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <PointAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransformOrigin)"
                                                                      Storyboard.TargetName="Animation">
                                            <EasingPointKeyFrame KeyTime="0"
                                                                 Value="-0.5,0.5" />
                                            <EasingPointKeyFrame KeyTime="0:0:1"
                                                                 Value="0.5,0.5" />
                                            <EasingPointKeyFrame KeyTime="0:0:2"
                                                                 Value="1.5,0.5" />
                                        </PointAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}" />
                        <Rectangle x:Name="PART_Track" />
                        <Grid x:Name="PART_Indicator"
                              ClipToBounds="true"
                              HorizontalAlignment="Left">
                            <Rectangle x:Name="Indicator"
                                       Fill="{StaticResource ProgressBar.Progress}"
                                       RenderTransformOrigin="0.5,0.5"
                                       Margin="1" />
                            <Rectangle x:Name="Animation"
                                       Fill="{StaticResource ProgressBar.Progress}"
                                       RenderTransformOrigin="0.5,0.5"
                                       Margin="1">
                                <Rectangle.RenderTransform>
                                    <TransformGroup>
                                        <ScaleTransform />
                                        <SkewTransform />
                                        <RotateTransform />
                                        <TranslateTransform />
                                    </TransformGroup>
                                </Rectangle.RenderTransform>
                            </Rectangle>
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Orientation"
                                 Value="Vertical">
                            <Setter Property="LayoutTransform"
                                    TargetName="TemplateRoot">
                                <Setter.Value>
                                    <RotateTransform Angle="-90" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsIndeterminate"
                                 Value="true">
                            <Setter Property="Visibility"
                                    TargetName="Indicator"
                                    Value="Collapsed" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- ================================ -->
    <!-- ProgressBar animation-->
    <!-- ================================ -->
    <Style TargetType="{x:Type igPrim:ProgressBarBusyAnimationPresenter}"
           BasedOn="{StaticResource BusyAnimationPresenterStyle}">
        <Setter Property="ProgressBarStyle"
                Value="{StaticResource ProgressBarStyle}" />
        <Setter Property="Height" Value="24" />        
        <Setter Property="Width" Value="200" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="igPrim:ProgressBarBusyAnimationPresenter">
                    <Grid>
                        <ProgressBar HorizontalAlignment="Stretch"
                                     VerticalAlignment="Stretch"
                                     Style="{TemplateBinding ProgressBarStyle}"
                                     IsIndeterminate="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(interactions:XamBusyIndicator.BusyIndicator).IsIndeterminate}"
                                     Foreground="{TemplateBinding Foreground}"
                                     Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=AnimatedProgressValue}"
                                     Maximum="1" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- ================================ -->
    <!-- ProgressRing animation-->
    <!-- ================================ -->
    <Style TargetType="{x:Type igPrim:ProgressRingBusyAnimationPresenter}" BasedOn="{StaticResource BusyAnimationPresenterStyle}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="RingFill" Value="{StaticResource BusyIndicatorAnimationSecondItemBackgroundBrush}" />
        <Setter Property="RingBackground" Value="{StaticResource BusyIndicatorAnimationFirstItemBackgroundBrush}" />
        <Setter Property="Foreground" Value="{StaticResource BusyIndicatorForegroundBrush}" />
        <Setter Property="Height" Value="75" />
        <Setter Property="Width" Value="75" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="igPrim:ProgressRingBusyAnimationPresenter">
                    <Viewbox>
                        <Viewbox.Resources>
                            <Storyboard x:Key="IsAnimatingStoryboard">
                                <DoubleAnimation Duration="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(igPrim:BusyAnimationPresenter.AnimationPresenter).AnimationTotalDuration}"
                                                 Storyboard.TargetProperty="(UIElement.RenderTransform).(RotateTransform.Angle)"
                                                 Storyboard.TargetName="IsIndeterminateRoot"
                                                 To="720"
                                                 RepeatBehavior="Forever" />
                            </Storyboard>
                        </Viewbox.Resources>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup Name="AnimationStates">
                                <VisualState Name="IsAnimating"
                                             Storyboard="{StaticResource IsAnimatingStoryboard}" />
                                <VisualState Name="IsNotAnimating" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid>
                            <Grid Name="IsNotIndeterminateRoot">
                                <Ellipse Fill="{TemplateBinding Background}"
                                         Height="88"
                                         Width="88" />
                                <Path Stroke="{TemplateBinding RingBackground}"
                                      StrokeThickness="12"
                                      Height="112"
                                      Width="112"
                                      Margin="12,12,0,0">
                                    <Path.Data>
                                        <PathGeometry>
                                            <PathGeometry.Figures>
                                                <PathFigureCollection>
                                                    <PathFigure x:Name="pathFigureBack"
                                                                StartPoint="50,0"
                                                                IsClosed="True">
                                                        <PathFigure.Segments>
                                                            <PathSegmentCollection>
                                                                <ArcSegment Point="49.9999,0"
                                                                            Size="50,50"
                                                                            IsLargeArc="True"
                                                                            SweepDirection="Clockwise" />
                                                            </PathSegmentCollection>
                                                        </PathFigure.Segments>
                                                    </PathFigure>
                                                </PathFigureCollection>
                                            </PathGeometry.Figures>
                                        </PathGeometry>
                                    </Path.Data>
                                </Path>
                                <Path Stroke="{TemplateBinding RingFill}"
                                      StrokeThickness="12"
                                      Height="112"
                                      Width="112"
                                      Margin="12,12,0,0">
                                    <Path.Data>
                                        <PathGeometry>
                                            <PathGeometry.Figures>
                                                <PathFigureCollection>
                                                    <PathFigure x:Name="PART_pathFigure" StartPoint="50,0">
                                                        <PathFigure.Segments>
                                                            <PathSegmentCollection>
                                                                <ArcSegment x:Name="PART_arcSegment"
                                                                            Size="50,50"
                                                                            SweepDirection="Clockwise" />
                                                            </PathSegmentCollection>
                                                        </PathFigure.Segments>
                                                    </PathFigure>
                                                </PathFigureCollection>
                                            </PathGeometry.Figures>
                                        </PathGeometry>
                                    </Path.Data>
                                </Path>
                                <TextBlock HorizontalAlignment="Center"
                                           VerticalAlignment="Center"
                                           Foreground="{TemplateBinding Foreground}"
                                           FontWeight="SemiBold"
                                           FontSize="24"
                                           Text="{Binding Path=(igPrim:BusyAnimationPresenter.AnimationPresenter).AnimatedProgressValue, RelativeSource={RelativeSource Self}, StringFormat={}{0:P0}}" />
                            </Grid>

                            <Grid Name="IsIndeterminateRoot" >
                                <Ellipse Fill="{TemplateBinding Background}"
                                         Height="88"
                                         Width="88" />
                                <Path Stroke="{TemplateBinding RingBackground}"
                                      StrokeThickness="12"
                                      Height="112"
                                      Width="112"
                                      Margin="12,12,0,0">
                                    <Path.Data>
                                        <PathGeometry>
                                            <PathGeometry.Figures>
                                                <PathFigureCollection>
                                                    <PathFigure StartPoint="50,0"
                                                                IsClosed="True">
                                                        <PathFigure.Segments>
                                                            <PathSegmentCollection>
                                                                <ArcSegment Point="49.9999,0"
                                                                            Size="50,50"
                                                                            IsLargeArc="True"
                                                                            SweepDirection="Clockwise" />
                                                            </PathSegmentCollection>
                                                        </PathFigure.Segments>
                                                    </PathFigure>
                                                </PathFigureCollection>
                                            </PathGeometry.Figures>
                                        </PathGeometry>
                                    </Path.Data>
                                </Path>
                                <Path Stroke="{TemplateBinding RingFill}"
                                      StrokeThickness="12"
                                      Height="112"
                                      Width="112"
                                      Margin="12,12,0,0">
                                    <Path.Data>
                                        <PathGeometry>
                                            <PathGeometry.Figures>
                                                <PathFigureCollection>
                                                    <PathFigure StartPoint="50,0" >
                                                        <PathFigure.Segments>
                                                            <PathSegmentCollection>
                                                                <ArcSegment Size="50,50"
                                                                            Point="95.241352623301,28.7110354217464"
                                                                            SweepDirection="Clockwise" />
                                                            </PathSegmentCollection>
                                                        </PathFigure.Segments>
                                                    </PathFigure>
                                                </PathFigureCollection>
                                            </PathGeometry.Figures>
                                        </PathGeometry>
                                    </Path.Data>
                                </Path>
                                <Grid.RenderTransform>
                                    <RotateTransform CenterX="62"  CenterY="62" />
                                </Grid.RenderTransform>
                            </Grid>
                        </Grid>
                        
                    </Viewbox>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding Path=(interactions:XamBusyIndicator.BusyIndicator).IsIndeterminate, RelativeSource={RelativeSource Self}}" 
                                     Value="False">
                            <Setter TargetName="IsNotIndeterminateRoot"
                                    Property="Visibility"
                                    Value="Visible" />
                            <Setter TargetName="IsIndeterminateRoot"
                                    Property="Visibility"
                                    Value="Collapsed" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Path=(interactions:XamBusyIndicator.BusyIndicator).IsIndeterminate, RelativeSource={RelativeSource Self}}"
                                     Value="True">
                            <Setter TargetName="IsNotIndeterminateRoot"
                                    Property="Visibility"
                                    Value="Collapsed" />
                            <Setter TargetName="IsIndeterminateRoot"
                                    Property="Visibility"
                                    Value="Visible" />
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- ================================ -->
    <!-- SpinnerBalls animation -->
    <!-- ================================ -->
    <Style TargetType="{x:Type igPrim:SpinnerBallsBusyAnimationPresenter}" BasedOn="{StaticResource BusyAnimationPresenterStyle}">
        <Setter Property="AnimationFill" Value="{StaticResource BusyIndicatorAnimationFirstItemBackgroundBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="igPrim:SpinnerBallsBusyAnimationPresenter">
                    <Viewbox>
                        <Viewbox.Resources>
                            <Storyboard x:Key="IsAnimatingStoryboard">
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                               Duration="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(igPrim:BusyAnimationPresenter.AnimationPresenter).AnimationTotalDuration}"
                                                               Storyboard.TargetName="circle1"
                                                               RepeatBehavior="Forever">
                                    <SplineDoubleKeyFrame Value="0" />
                                    <SplineDoubleKeyFrame Value="1" />
                                    <SplineDoubleKeyFrame Value="0.7" />
                                    <SplineDoubleKeyFrame Value="0.5" />
                                    <SplineDoubleKeyFrame Value="0.3" />
                                    <SplineDoubleKeyFrame Value="0.15" />
                                    <SplineDoubleKeyFrame Value="0" />
                                    <SplineDoubleKeyFrame Value="0" />
                                    <SplineDoubleKeyFrame Value="0" />
                                    <SplineDoubleKeyFrame Value="1" />
                                    <SplineDoubleKeyFrame Value="0.7" />
                                    <SplineDoubleKeyFrame Value="0.5" />
                                    <SplineDoubleKeyFrame Value="0.3" />
                                    <SplineDoubleKeyFrame Value="0.15" />
                                    <SplineDoubleKeyFrame Value="0" />
                                    <SplineDoubleKeyFrame Value="0" />
                                    <SplineDoubleKeyFrame Value="0" />
                                    <SplineDoubleKeyFrame Value="1" />
                                    <SplineDoubleKeyFrame Value="0.7" />
                                    <SplineDoubleKeyFrame Value="0.5" />
                                    <SplineDoubleKeyFrame Value="0.3" />
                                    <SplineDoubleKeyFrame Value="0.15" />
                                    <SplineDoubleKeyFrame Value="0" />
                                    <SplineDoubleKeyFrame Value="0" />
                                    <SplineDoubleKeyFrame Value="0" />
                                    <SplineDoubleKeyFrame Value="1" />
                                    <SplineDoubleKeyFrame Value="0.7" />
                                    <SplineDoubleKeyFrame Value="0.5" />
                                    <SplineDoubleKeyFrame Value="0.3" />
                                    <SplineDoubleKeyFrame Value="0.15" />
                                    <SplineDoubleKeyFrame Value="0" />
                                    <SplineDoubleKeyFrame Value="0" />
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                               Duration="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(igPrim:BusyAnimationPresenter.AnimationPresenter).AnimationTotalDuration}"
                                                               Storyboard.TargetName="circle2"
                                                               RepeatBehavior="Forever">
                                    <SplineDoubleKeyFrame Value="0" />
                                    <SplineDoubleKeyFrame Value="0" />
                                    <SplineDoubleKeyFrame Value="1" />
                                    <SplineDoubleKeyFrame Value="0.7" />
                                    <SplineDoubleKeyFrame Value="0.5" />
                                    <SplineDoubleKeyFrame Value="0.3" />
                                    <SplineDoubleKeyFrame Value="0.15" />
                                    <SplineDoubleKeyFrame Value="0" />
                                    <SplineDoubleKeyFrame Value="0" />
                                    <SplineDoubleKeyFrame Value="0" />
                                    <SplineDoubleKeyFrame Value="1" />
                                    <SplineDoubleKeyFrame Value="0.7" />
                                    <SplineDoubleKeyFrame Value="0.5" />
                                    <SplineDoubleKeyFrame Value="0.3" />
                                    <SplineDoubleKeyFrame Value="0.15" />
                                    <SplineDoubleKeyFrame Value="0" />
                                    <SplineDoubleKeyFrame Value="0" />
                                    <SplineDoubleKeyFrame Value="0" />
                                    <SplineDoubleKeyFrame Value="1" />
                                    <SplineDoubleKeyFrame Value="0.7" />
                                    <SplineDoubleKeyFrame Value="0.5" />
                                    <SplineDoubleKeyFrame Value="0.3" />
                                    <SplineDoubleKeyFrame Value="0.15" />
                                    <SplineDoubleKeyFrame Value="0" />
                                    <SplineDoubleKeyFrame Value="0" />
                                    <SplineDoubleKeyFrame Value="0" />
                                    <SplineDoubleKeyFrame Value="1" />
                                    <SplineDoubleKeyFrame Value="0.7" />
                                    <SplineDoubleKeyFrame Value="0.5" />
                                    <SplineDoubleKeyFrame Value="0.3" />
                                    <SplineDoubleKeyFrame Value="0.15" />
                                    <SplineDoubleKeyFrame Value="0" />
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                               Duration="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(igPrim:BusyAnimationPresenter.AnimationPresenter).AnimationTotalDuration}"
                                                               Storyboard.TargetName="circle3"
                                                               RepeatBehavior="Forever">
                                    <SplineDoubleKeyFrame Value="0" />
                                    <SplineDoubleKeyFrame Value="0" />
                                    <SplineDoubleKeyFrame Value="0" />
                                    <SplineDoubleKeyFrame Value="1" />
                                    <SplineDoubleKeyFrame Value="0.7" />
                                    <SplineDoubleKeyFrame Value="0.5" />
                                    <SplineDoubleKeyFrame Value="0.3" />
                                    <SplineDoubleKeyFrame Value="0.15" />
                                    <SplineDoubleKeyFrame Value="0" />
                                    <SplineDoubleKeyFrame Value="0" />
                                    <SplineDoubleKeyFrame Value="0" />
                                    <SplineDoubleKeyFrame Value="1" />
                                    <SplineDoubleKeyFrame Value="0.7" />
                                    <SplineDoubleKeyFrame Value="0.5" />
                                    <SplineDoubleKeyFrame Value="0.3" />
                                    <SplineDoubleKeyFrame Value="0.15" />
                                    <SplineDoubleKeyFrame Value="0" />
                                    <SplineDoubleKeyFrame Value="0" />
                                    <SplineDoubleKeyFrame Value="0" />
                                    <SplineDoubleKeyFrame Value="1" />
                                    <SplineDoubleKeyFrame Value="0.7" />
                                    <SplineDoubleKeyFrame Value="0.5" />
                                    <SplineDoubleKeyFrame Value="0.3" />
                                    <SplineDoubleKeyFrame Value="0.15" />
                                    <SplineDoubleKeyFrame Value="0" />
                                    <SplineDoubleKeyFrame Value="0" />
                                    <SplineDoubleKeyFrame Value="0" />
                                    <SplineDoubleKeyFrame Value="1" />
                                    <SplineDoubleKeyFrame Value="0.7" />
                                    <SplineDoubleKeyFrame Value="0.5" />
                                    <SplineDoubleKeyFrame Value="0.3" />
                                    <SplineDoubleKeyFrame Value="0.15" />
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                               Duration="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(igPrim:BusyAnimationPresenter.AnimationPresenter).AnimationTotalDuration}"
                                                               Storyboard.TargetName="circle4"
                                                               RepeatBehavior="Forever">
                                    <SplineDoubleKeyFrame Value="0.15" />
                                    <SplineDoubleKeyFrame Value="0" />
                                    <SplineDoubleKeyFrame Value="0" />
                                    <SplineDoubleKeyFrame Value="0" />
                                    <SplineDoubleKeyFrame Value="1" />
                                    <SplineDoubleKeyFrame Value="0.7" />
                                    <SplineDoubleKeyFrame Value="0.5" />
                                    <SplineDoubleKeyFrame Value="0.3" />
                                    <SplineDoubleKeyFrame Value="0.15" />
                                    <SplineDoubleKeyFrame Value="0" />
                                    <SplineDoubleKeyFrame Value="0" />
                                    <SplineDoubleKeyFrame Value="0" />
                                    <SplineDoubleKeyFrame Value="1" />
                                    <SplineDoubleKeyFrame Value="0.7" />
                                    <SplineDoubleKeyFrame Value="0.5" />
                                    <SplineDoubleKeyFrame Value="0.3" />
                                    <SplineDoubleKeyFrame Value="0.15" />
                                    <SplineDoubleKeyFrame Value="0" />
                                    <SplineDoubleKeyFrame Value="0" />
                                    <SplineDoubleKeyFrame Value="0" />
                                    <SplineDoubleKeyFrame Value="1" />
                                    <SplineDoubleKeyFrame Value="0.7" />
                                    <SplineDoubleKeyFrame Value="0.5" />
                                    <SplineDoubleKeyFrame Value="0.3" />
                                    <SplineDoubleKeyFrame Value="0.15" />
                                    <SplineDoubleKeyFrame Value="0" />
                                    <SplineDoubleKeyFrame Value="0" />
                                    <SplineDoubleKeyFrame Value="0" />
                                    <SplineDoubleKeyFrame Value="1" />
                                    <SplineDoubleKeyFrame Value="0.7" />
                                    <SplineDoubleKeyFrame Value="0.5" />
                                    <SplineDoubleKeyFrame Value="0.3" />
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                               Duration="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(igPrim:BusyAnimationPresenter.AnimationPresenter).AnimationTotalDuration}"
                                                               Storyboard.TargetName="circle5"
                                                               RepeatBehavior="Forever">
                                    <SplineDoubleKeyFrame Value="0.3" />
                                    <SplineDoubleKeyFrame Value="0.15" />
                                    <SplineDoubleKeyFrame Value="0" />
                                    <SplineDoubleKeyFrame Value="0" />
                                    <SplineDoubleKeyFrame Value="0" />
                                    <SplineDoubleKeyFrame Value="1" />
                                    <SplineDoubleKeyFrame Value="0.7" />
                                    <SplineDoubleKeyFrame Value="0.5" />
                                    <SplineDoubleKeyFrame Value="0.3" />
                                    <SplineDoubleKeyFrame Value="0.15" />
                                    <SplineDoubleKeyFrame Value="0" />
                                    <SplineDoubleKeyFrame Value="0" />
                                    <SplineDoubleKeyFrame Value="0" />
                                    <SplineDoubleKeyFrame Value="1" />
                                    <SplineDoubleKeyFrame Value="0.7" />
                                    <SplineDoubleKeyFrame Value="0.5" />
                                    <SplineDoubleKeyFrame Value="0.3" />
                                    <SplineDoubleKeyFrame Value="0.15" />
                                    <SplineDoubleKeyFrame Value="0" />
                                    <SplineDoubleKeyFrame Value="0" />
                                    <SplineDoubleKeyFrame Value="0" />
                                    <SplineDoubleKeyFrame Value="1" />
                                    <SplineDoubleKeyFrame Value="0.7" />
                                    <SplineDoubleKeyFrame Value="0.5" />
                                    <SplineDoubleKeyFrame Value="0.3" />
                                    <SplineDoubleKeyFrame Value="0.15" />
                                    <SplineDoubleKeyFrame Value="0" />
                                    <SplineDoubleKeyFrame Value="0" />
                                    <SplineDoubleKeyFrame Value="0" />
                                    <SplineDoubleKeyFrame Value="1" />
                                    <SplineDoubleKeyFrame Value="0.7" />
                                    <SplineDoubleKeyFrame Value="0.5" />
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                               Duration="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(igPrim:BusyAnimationPresenter.AnimationPresenter).AnimationTotalDuration}"
                                                               Storyboard.TargetName="circle6"
                                                               RepeatBehavior="Forever">
                                    <SplineDoubleKeyFrame Value="0.5" />
                                    <SplineDoubleKeyFrame Value="0.3" />
                                    <SplineDoubleKeyFrame Value="0.15" />
                                    <SplineDoubleKeyFrame Value="0" />
                                    <SplineDoubleKeyFrame Value="0" />
                                    <SplineDoubleKeyFrame Value="0" />
                                    <SplineDoubleKeyFrame Value="1" />
                                    <SplineDoubleKeyFrame Value="0.7" />
                                    <SplineDoubleKeyFrame Value="0.5" />
                                    <SplineDoubleKeyFrame Value="0.3" />
                                    <SplineDoubleKeyFrame Value="0.15" />
                                    <SplineDoubleKeyFrame Value="0" />
                                    <SplineDoubleKeyFrame Value="0" />
                                    <SplineDoubleKeyFrame Value="0" />
                                    <SplineDoubleKeyFrame Value="1" />
                                    <SplineDoubleKeyFrame Value="0.7" />
                                    <SplineDoubleKeyFrame Value="0.5" />
                                    <SplineDoubleKeyFrame Value="0.3" />
                                    <SplineDoubleKeyFrame Value="0.15" />
                                    <SplineDoubleKeyFrame Value="0" />
                                    <SplineDoubleKeyFrame Value="0" />
                                    <SplineDoubleKeyFrame Value="0" />
                                    <SplineDoubleKeyFrame Value="1" />
                                    <SplineDoubleKeyFrame Value="0.7" />
                                    <SplineDoubleKeyFrame Value="0.5" />
                                    <SplineDoubleKeyFrame Value="0.3" />
                                    <SplineDoubleKeyFrame Value="0.15" />
                                    <SplineDoubleKeyFrame Value="0" />
                                    <SplineDoubleKeyFrame Value="0" />
                                    <SplineDoubleKeyFrame Value="0" />
                                    <SplineDoubleKeyFrame Value="1" />
                                    <SplineDoubleKeyFrame Value="0.7" />
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                               Duration="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(igPrim:BusyAnimationPresenter.AnimationPresenter).AnimationTotalDuration}"
                                                               Storyboard.TargetName="circle7"
                                                               RepeatBehavior="Forever">
                                    <SplineDoubleKeyFrame Value="0.7" />
                                    <SplineDoubleKeyFrame Value="0.5" />
                                    <SplineDoubleKeyFrame Value="0.3" />
                                    <SplineDoubleKeyFrame Value="0.15" />
                                    <SplineDoubleKeyFrame Value="0" />
                                    <SplineDoubleKeyFrame Value="0" />
                                    <SplineDoubleKeyFrame Value="0" />
                                    <SplineDoubleKeyFrame Value="1" />
                                    <SplineDoubleKeyFrame Value="0.7" />
                                    <SplineDoubleKeyFrame Value="0.5" />
                                    <SplineDoubleKeyFrame Value="0.3" />
                                    <SplineDoubleKeyFrame Value="0.15" />
                                    <SplineDoubleKeyFrame Value="0" />
                                    <SplineDoubleKeyFrame Value="0" />
                                    <SplineDoubleKeyFrame Value="0" />
                                    <SplineDoubleKeyFrame Value="1" />
                                    <SplineDoubleKeyFrame Value="0.7" />
                                    <SplineDoubleKeyFrame Value="0.5" />
                                    <SplineDoubleKeyFrame Value="0.3" />
                                    <SplineDoubleKeyFrame Value="0.15" />
                                    <SplineDoubleKeyFrame Value="0" />
                                    <SplineDoubleKeyFrame Value="0" />
                                    <SplineDoubleKeyFrame Value="0" />
                                    <SplineDoubleKeyFrame Value="1" />
                                    <SplineDoubleKeyFrame Value="0.7" />
                                    <SplineDoubleKeyFrame Value="0.5" />
                                    <SplineDoubleKeyFrame Value="0.3" />
                                    <SplineDoubleKeyFrame Value="0.15" />
                                    <SplineDoubleKeyFrame Value="0" />
                                    <SplineDoubleKeyFrame Value="0" />
                                    <SplineDoubleKeyFrame Value="0" />
                                    <SplineDoubleKeyFrame Value="1" />
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                               Duration="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(igPrim:BusyAnimationPresenter.AnimationPresenter).AnimationTotalDuration}"
                                                               Storyboard.TargetName="circle8"
                                                               RepeatBehavior="Forever">
                                    <SplineDoubleKeyFrame Value="1" />
                                    <SplineDoubleKeyFrame Value="0.7" />
                                    <SplineDoubleKeyFrame Value="0.5" />
                                    <SplineDoubleKeyFrame Value="0.3" />
                                    <SplineDoubleKeyFrame Value="0.15" />
                                    <SplineDoubleKeyFrame Value="0" />
                                    <SplineDoubleKeyFrame Value="0" />
                                    <SplineDoubleKeyFrame Value="0" />
                                    <SplineDoubleKeyFrame Value="1" />
                                    <SplineDoubleKeyFrame Value="0.7" />
                                    <SplineDoubleKeyFrame Value="0.5" />
                                    <SplineDoubleKeyFrame Value="0.3" />
                                    <SplineDoubleKeyFrame Value="0.15" />
                                    <SplineDoubleKeyFrame Value="0" />
                                    <SplineDoubleKeyFrame Value="0" />
                                    <SplineDoubleKeyFrame Value="0" />
                                    <SplineDoubleKeyFrame Value="1" />
                                    <SplineDoubleKeyFrame Value="0.7" />
                                    <SplineDoubleKeyFrame Value="0.5" />
                                    <SplineDoubleKeyFrame Value="0.3" />
                                    <SplineDoubleKeyFrame Value="0.15" />
                                    <SplineDoubleKeyFrame Value="0" />
                                    <SplineDoubleKeyFrame Value="0" />
                                    <SplineDoubleKeyFrame Value="0" />
                                    <SplineDoubleKeyFrame Value="1" />
                                    <SplineDoubleKeyFrame Value="0.7" />
                                    <SplineDoubleKeyFrame Value="0.5" />
                                    <SplineDoubleKeyFrame Value="0.3" />
                                    <SplineDoubleKeyFrame Value="0.15" />
                                    <SplineDoubleKeyFrame Value="0" />
                                    <SplineDoubleKeyFrame Value="0" />
                                    <SplineDoubleKeyFrame Value="0" />
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                        </Viewbox.Resources>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup Name="AnimationStates">
                                <VisualState Name="IsAnimating"
                                             Storyboard="{StaticResource IsAnimatingStoryboard}" />
                                <VisualState Name="IsNotAnimating" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Canvas Name="Root_layer"
                                Width="100"
                                Height="100">
                            <Ellipse Name="circle1"
                                     Canvas.Left="40"
                                     Canvas.Top="0"
                                     Width="20"
                                     Height="20"
                                     Fill="{TemplateBinding AnimationFill}"
                                     Opacity="0" />
                            <Ellipse Name="circle2"
                                     Canvas.Left="66.5"
                                     Canvas.Top="13.5"
                                     Width="20"
                                     Height="20"
                                     Fill="{TemplateBinding AnimationFill}"
                                     Opacity="0" />
                            <Ellipse Name="circle3"
                                     Canvas.Left="80"
                                     Canvas.Top="40"
                                     Width="20"
                                     Height="20"
                                     Fill="{TemplateBinding AnimationFill}"
                                     Opacity="0" />
                            <Ellipse Name="circle4"
                                     Canvas.Left="66.5"
                                     Canvas.Top="66.5"
                                     Width="20"
                                     Height="20"
                                     Fill="{TemplateBinding AnimationFill}"
                                     Opacity="0" />
                            <Ellipse Name="circle5"
                                     Canvas.Left="40"
                                     Canvas.Top="80"
                                     Width="20"
                                     Height="20"
                                     Fill="{TemplateBinding AnimationFill}"
                                     Opacity="0" />
                            <Ellipse Name="circle6"
                                     Canvas.Left="13.5"
                                     Canvas.Top="66.5"
                                     Width="20"
                                     Height="20"
                                     Fill="{TemplateBinding AnimationFill}"
                                     Opacity="0" />
                            <Ellipse Name="circle7"
                                     Canvas.Left="0"
                                     Canvas.Top="40"
                                     Width="20"
                                     Height="20"
                                     Fill="{TemplateBinding AnimationFill}"
                                     Opacity="0" />
                            <Ellipse Name="circle8"
                                     Canvas.Left="13.5"
                                     Canvas.Top="13.5"
                                     Width="20"
                                     Height="20"
                                     Fill="{TemplateBinding AnimationFill}"
                                     Opacity="0" />
                        </Canvas>
                    </Viewbox>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- ================================ -->
    <!-- SpinnerBars animation -->
    <!-- ================================ -->
    <Style TargetType="{x:Type igPrim:SpinnerBarsBusyAnimationPresenter}" BasedOn="{StaticResource BusyAnimationPresenterStyle}">
        <Setter Property="AnimationFill" Value="{StaticResource BusyIndicatorAnimationFirstItemBackgroundBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="igPrim:SpinnerBarsBusyAnimationPresenter">
                    <Viewbox>
                        <Viewbox.Resources>
                            <Storyboard x:Key="IsAnimatingStoryboard">
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                               Duration="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(igPrim:BusyAnimationPresenter.AnimationPresenter).AnimationTotalDuration}"
                                                               Storyboard.TargetName="rectangle1"
                                                               RepeatBehavior="Forever">
                                    <SplineDoubleKeyFrame Value="1" />
                                    <SplineDoubleKeyFrame Value="0.9" />
                                    <SplineDoubleKeyFrame Value="0.8" />
                                    <SplineDoubleKeyFrame Value="0.7" />
                                    <SplineDoubleKeyFrame Value="0.6" />
                                    <SplineDoubleKeyFrame Value="0.5" />
                                    <SplineDoubleKeyFrame Value="0.4" />
                                    <SplineDoubleKeyFrame Value="0.3" />
                                    <SplineDoubleKeyFrame Value="0.2" />
                                    <SplineDoubleKeyFrame Value="0.1" />
                                    <SplineDoubleKeyFrame Value="0.05" />
                                    <SplineDoubleKeyFrame Value="0.00" />
                                    <SplineDoubleKeyFrame Value="1" />
                                    <SplineDoubleKeyFrame Value="0.9" />
                                    <SplineDoubleKeyFrame Value="0.8" />
                                    <SplineDoubleKeyFrame Value="0.7" />
                                    <SplineDoubleKeyFrame Value="0.6" />
                                    <SplineDoubleKeyFrame Value="0.5" />
                                    <SplineDoubleKeyFrame Value="0.4" />
                                    <SplineDoubleKeyFrame Value="0.3" />
                                    <SplineDoubleKeyFrame Value="0.2" />
                                    <SplineDoubleKeyFrame Value="0.1" />
                                    <SplineDoubleKeyFrame Value="0.05" />
                                    <SplineDoubleKeyFrame Value="0.00" />
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                               Duration="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(igPrim:BusyAnimationPresenter.AnimationPresenter).AnimationTotalDuration}"
                                                               Storyboard.TargetName="rectangle2"
                                                               RepeatBehavior="Forever">
                                    <SplineDoubleKeyFrame Value="0.00" />
                                    <SplineDoubleKeyFrame Value="1" />
                                    <SplineDoubleKeyFrame Value="0.9" />
                                    <SplineDoubleKeyFrame Value="0.8" />
                                    <SplineDoubleKeyFrame Value="0.7" />
                                    <SplineDoubleKeyFrame Value="0.6" />
                                    <SplineDoubleKeyFrame Value="0.5" />
                                    <SplineDoubleKeyFrame Value="0.4" />
                                    <SplineDoubleKeyFrame Value="0.3" />
                                    <SplineDoubleKeyFrame Value="0.2" />
                                    <SplineDoubleKeyFrame Value="0.1" />
                                    <SplineDoubleKeyFrame Value="0.05" />
                                    <SplineDoubleKeyFrame Value="0.00" />
                                    <SplineDoubleKeyFrame Value="1" />
                                    <SplineDoubleKeyFrame Value="0.9" />
                                    <SplineDoubleKeyFrame Value="0.8" />
                                    <SplineDoubleKeyFrame Value="0.7" />
                                    <SplineDoubleKeyFrame Value="0.6" />
                                    <SplineDoubleKeyFrame Value="0.5" />
                                    <SplineDoubleKeyFrame Value="0.4" />
                                    <SplineDoubleKeyFrame Value="0.3" />
                                    <SplineDoubleKeyFrame Value="0.2" />
                                    <SplineDoubleKeyFrame Value="0.1" />
                                    <SplineDoubleKeyFrame Value="0.05" />
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                               Duration="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(igPrim:BusyAnimationPresenter.AnimationPresenter).AnimationTotalDuration}"
                                                               Storyboard.TargetName="rectangle3"
                                                               RepeatBehavior="Forever">
                                    <SplineDoubleKeyFrame Value="0.05" />
                                    <SplineDoubleKeyFrame Value="0.00" />
                                    <SplineDoubleKeyFrame Value="1" />
                                    <SplineDoubleKeyFrame Value="0.9" />
                                    <SplineDoubleKeyFrame Value="0.8" />
                                    <SplineDoubleKeyFrame Value="0.7" />
                                    <SplineDoubleKeyFrame Value="0.6" />
                                    <SplineDoubleKeyFrame Value="0.5" />
                                    <SplineDoubleKeyFrame Value="0.4" />
                                    <SplineDoubleKeyFrame Value="0.3" />
                                    <SplineDoubleKeyFrame Value="0.2" />
                                    <SplineDoubleKeyFrame Value="0.1" />
                                    <SplineDoubleKeyFrame Value="0.05" />
                                    <SplineDoubleKeyFrame Value="0.00" />
                                    <SplineDoubleKeyFrame Value="1" />
                                    <SplineDoubleKeyFrame Value="0.9" />
                                    <SplineDoubleKeyFrame Value="0.8" />
                                    <SplineDoubleKeyFrame Value="0.7" />
                                    <SplineDoubleKeyFrame Value="0.6" />
                                    <SplineDoubleKeyFrame Value="0.5" />
                                    <SplineDoubleKeyFrame Value="0.4" />
                                    <SplineDoubleKeyFrame Value="0.3" />
                                    <SplineDoubleKeyFrame Value="0.2" />
                                    <SplineDoubleKeyFrame Value="0.1" />
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                               Duration="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(igPrim:BusyAnimationPresenter.AnimationPresenter).AnimationTotalDuration}"
                                                               Storyboard.TargetName="rectangle4"
                                                               RepeatBehavior="Forever">
                                    <SplineDoubleKeyFrame Value="0.1" />
                                    <SplineDoubleKeyFrame Value="0.05" />
                                    <SplineDoubleKeyFrame Value="0.00" />
                                    <SplineDoubleKeyFrame Value="1" />
                                    <SplineDoubleKeyFrame Value="0.9" />
                                    <SplineDoubleKeyFrame Value="0.8" />
                                    <SplineDoubleKeyFrame Value="0.7" />
                                    <SplineDoubleKeyFrame Value="0.6" />
                                    <SplineDoubleKeyFrame Value="0.5" />
                                    <SplineDoubleKeyFrame Value="0.4" />
                                    <SplineDoubleKeyFrame Value="0.3" />
                                    <SplineDoubleKeyFrame Value="0.2" />
                                    <SplineDoubleKeyFrame Value="0.1" />
                                    <SplineDoubleKeyFrame Value="0.05" />
                                    <SplineDoubleKeyFrame Value="0.00" />
                                    <SplineDoubleKeyFrame Value="1" />
                                    <SplineDoubleKeyFrame Value="0.9" />
                                    <SplineDoubleKeyFrame Value="0.8" />
                                    <SplineDoubleKeyFrame Value="0.7" />
                                    <SplineDoubleKeyFrame Value="0.6" />
                                    <SplineDoubleKeyFrame Value="0.5" />
                                    <SplineDoubleKeyFrame Value="0.4" />
                                    <SplineDoubleKeyFrame Value="0.3" />
                                    <SplineDoubleKeyFrame Value="0.2" />
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                               Duration="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(igPrim:BusyAnimationPresenter.AnimationPresenter).AnimationTotalDuration}"
                                                               Storyboard.TargetName="rectangle5"
                                                               RepeatBehavior="Forever">
                                    <SplineDoubleKeyFrame Value="0.2" />
                                    <SplineDoubleKeyFrame Value="0.1" />
                                    <SplineDoubleKeyFrame Value="0.05" />
                                    <SplineDoubleKeyFrame Value="0.00" />
                                    <SplineDoubleKeyFrame Value="1" />
                                    <SplineDoubleKeyFrame Value="0.9" />
                                    <SplineDoubleKeyFrame Value="0.8" />
                                    <SplineDoubleKeyFrame Value="0.7" />
                                    <SplineDoubleKeyFrame Value="0.6" />
                                    <SplineDoubleKeyFrame Value="0.5" />
                                    <SplineDoubleKeyFrame Value="0.4" />
                                    <SplineDoubleKeyFrame Value="0.3" />
                                    <SplineDoubleKeyFrame Value="0.2" />
                                    <SplineDoubleKeyFrame Value="0.1" />
                                    <SplineDoubleKeyFrame Value="0.05" />
                                    <SplineDoubleKeyFrame Value="0.00" />
                                    <SplineDoubleKeyFrame Value="1" />
                                    <SplineDoubleKeyFrame Value="0.9" />
                                    <SplineDoubleKeyFrame Value="0.8" />
                                    <SplineDoubleKeyFrame Value="0.7" />
                                    <SplineDoubleKeyFrame Value="0.6" />
                                    <SplineDoubleKeyFrame Value="0.5" />
                                    <SplineDoubleKeyFrame Value="0.4" />
                                    <SplineDoubleKeyFrame Value="0.3" />
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                               Duration="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(igPrim:BusyAnimationPresenter.AnimationPresenter).AnimationTotalDuration}"
                                                               Storyboard.TargetName="rectangle6"
                                                               RepeatBehavior="Forever">
                                    <SplineDoubleKeyFrame Value="0.3" />
                                    <SplineDoubleKeyFrame Value="0.2" />
                                    <SplineDoubleKeyFrame Value="0.1" />
                                    <SplineDoubleKeyFrame Value="0.05" />
                                    <SplineDoubleKeyFrame Value="0.00" />
                                    <SplineDoubleKeyFrame Value="1" />
                                    <SplineDoubleKeyFrame Value="0.9" />
                                    <SplineDoubleKeyFrame Value="0.8" />
                                    <SplineDoubleKeyFrame Value="0.7" />
                                    <SplineDoubleKeyFrame Value="0.6" />
                                    <SplineDoubleKeyFrame Value="0.5" />
                                    <SplineDoubleKeyFrame Value="0.4" />
                                    <SplineDoubleKeyFrame Value="0.3" />
                                    <SplineDoubleKeyFrame Value="0.2" />
                                    <SplineDoubleKeyFrame Value="0.1" />
                                    <SplineDoubleKeyFrame Value="0.05" />
                                    <SplineDoubleKeyFrame Value="0.00" />
                                    <SplineDoubleKeyFrame Value="1" />
                                    <SplineDoubleKeyFrame Value="0.9" />
                                    <SplineDoubleKeyFrame Value="0.8" />
                                    <SplineDoubleKeyFrame Value="0.7" />
                                    <SplineDoubleKeyFrame Value="0.6" />
                                    <SplineDoubleKeyFrame Value="0.5" />
                                    <SplineDoubleKeyFrame Value="0.4" />
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                               Duration="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(igPrim:BusyAnimationPresenter.AnimationPresenter).AnimationTotalDuration}"
                                                               Storyboard.TargetName="rectangle7"
                                                               RepeatBehavior="Forever">
                                    <SplineDoubleKeyFrame Value="0.4" />
                                    <SplineDoubleKeyFrame Value="0.3" />
                                    <SplineDoubleKeyFrame Value="0.2" />
                                    <SplineDoubleKeyFrame Value="0.1" />
                                    <SplineDoubleKeyFrame Value="0.05" />
                                    <SplineDoubleKeyFrame Value="0.00" />
                                    <SplineDoubleKeyFrame Value="1" />
                                    <SplineDoubleKeyFrame Value="0.9" />
                                    <SplineDoubleKeyFrame Value="0.8" />
                                    <SplineDoubleKeyFrame Value="0.7" />
                                    <SplineDoubleKeyFrame Value="0.6" />
                                    <SplineDoubleKeyFrame Value="0.5" />
                                    <SplineDoubleKeyFrame Value="0.4" />
                                    <SplineDoubleKeyFrame Value="0.3" />
                                    <SplineDoubleKeyFrame Value="0.2" />
                                    <SplineDoubleKeyFrame Value="0.1" />
                                    <SplineDoubleKeyFrame Value="0.05" />
                                    <SplineDoubleKeyFrame Value="0.00" />
                                    <SplineDoubleKeyFrame Value="1" />
                                    <SplineDoubleKeyFrame Value="0.9" />
                                    <SplineDoubleKeyFrame Value="0.8" />
                                    <SplineDoubleKeyFrame Value="0.7" />
                                    <SplineDoubleKeyFrame Value="0.6" />
                                    <SplineDoubleKeyFrame Value="0.5" />
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                               Duration="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(igPrim:BusyAnimationPresenter.AnimationPresenter).AnimationTotalDuration}"
                                                               Storyboard.TargetName="rectangle8"
                                                               RepeatBehavior="Forever">
                                    <SplineDoubleKeyFrame Value="0.5" />
                                    <SplineDoubleKeyFrame Value="0.4" />
                                    <SplineDoubleKeyFrame Value="0.3" />
                                    <SplineDoubleKeyFrame Value="0.2" />
                                    <SplineDoubleKeyFrame Value="0.1" />
                                    <SplineDoubleKeyFrame Value="0.05" />
                                    <SplineDoubleKeyFrame Value="0.00" />
                                    <SplineDoubleKeyFrame Value="1" />
                                    <SplineDoubleKeyFrame Value="0.9" />
                                    <SplineDoubleKeyFrame Value="0.8" />
                                    <SplineDoubleKeyFrame Value="0.7" />
                                    <SplineDoubleKeyFrame Value="0.6" />
                                    <SplineDoubleKeyFrame Value="0.5" />
                                    <SplineDoubleKeyFrame Value="0.4" />
                                    <SplineDoubleKeyFrame Value="0.3" />
                                    <SplineDoubleKeyFrame Value="0.2" />
                                    <SplineDoubleKeyFrame Value="0.1" />
                                    <SplineDoubleKeyFrame Value="0.05" />
                                    <SplineDoubleKeyFrame Value="0.00" />
                                    <SplineDoubleKeyFrame Value="1" />
                                    <SplineDoubleKeyFrame Value="0.9" />
                                    <SplineDoubleKeyFrame Value="0.8" />
                                    <SplineDoubleKeyFrame Value="0.7" />
                                    <SplineDoubleKeyFrame Value="0.6" />
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                               Duration="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(igPrim:BusyAnimationPresenter.AnimationPresenter).AnimationTotalDuration}"
                                                               Storyboard.TargetName="rectangle9"
                                                               RepeatBehavior="Forever">
                                    <SplineDoubleKeyFrame Value="0.6" />
                                    <SplineDoubleKeyFrame Value="0.5" />
                                    <SplineDoubleKeyFrame Value="0.4" />
                                    <SplineDoubleKeyFrame Value="0.3" />
                                    <SplineDoubleKeyFrame Value="0.2" />
                                    <SplineDoubleKeyFrame Value="0.1" />
                                    <SplineDoubleKeyFrame Value="0.05" />
                                    <SplineDoubleKeyFrame Value="0.00" />
                                    <SplineDoubleKeyFrame Value="1" />
                                    <SplineDoubleKeyFrame Value="0.9" />
                                    <SplineDoubleKeyFrame Value="0.8" />
                                    <SplineDoubleKeyFrame Value="0.7" />
                                    <SplineDoubleKeyFrame Value="0.6" />
                                    <SplineDoubleKeyFrame Value="0.5" />
                                    <SplineDoubleKeyFrame Value="0.4" />
                                    <SplineDoubleKeyFrame Value="0.3" />
                                    <SplineDoubleKeyFrame Value="0.2" />
                                    <SplineDoubleKeyFrame Value="0.1" />
                                    <SplineDoubleKeyFrame Value="0.05" />
                                    <SplineDoubleKeyFrame Value="0.00" />
                                    <SplineDoubleKeyFrame Value="1" />
                                    <SplineDoubleKeyFrame Value="0.9" />
                                    <SplineDoubleKeyFrame Value="0.8" />
                                    <SplineDoubleKeyFrame Value="0.7" />
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                               Duration="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(igPrim:BusyAnimationPresenter.AnimationPresenter).AnimationTotalDuration}"
                                                               Storyboard.TargetName="rectangle10"
                                                               RepeatBehavior="Forever">
                                    <SplineDoubleKeyFrame Value="0.7" />
                                    <SplineDoubleKeyFrame Value="0.6" />
                                    <SplineDoubleKeyFrame Value="0.5" />
                                    <SplineDoubleKeyFrame Value="0.4" />
                                    <SplineDoubleKeyFrame Value="0.3" />
                                    <SplineDoubleKeyFrame Value="0.2" />
                                    <SplineDoubleKeyFrame Value="0.1" />
                                    <SplineDoubleKeyFrame Value="0.05" />
                                    <SplineDoubleKeyFrame Value="0.00" />
                                    <SplineDoubleKeyFrame Value="1" />
                                    <SplineDoubleKeyFrame Value="0.9" />
                                    <SplineDoubleKeyFrame Value="0.8" />
                                    <SplineDoubleKeyFrame Value="0.7" />
                                    <SplineDoubleKeyFrame Value="0.6" />
                                    <SplineDoubleKeyFrame Value="0.5" />
                                    <SplineDoubleKeyFrame Value="0.4" />
                                    <SplineDoubleKeyFrame Value="0.3" />
                                    <SplineDoubleKeyFrame Value="0.2" />
                                    <SplineDoubleKeyFrame Value="0.1" />
                                    <SplineDoubleKeyFrame Value="0.05" />
                                    <SplineDoubleKeyFrame Value="0.00" />
                                    <SplineDoubleKeyFrame Value="1" />
                                    <SplineDoubleKeyFrame Value="0.9" />
                                    <SplineDoubleKeyFrame Value="0.8" />
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                               Duration="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(igPrim:BusyAnimationPresenter.AnimationPresenter).AnimationTotalDuration}"
                                                               Storyboard.TargetName="rectangle11"
                                                               RepeatBehavior="Forever">
                                    <SplineDoubleKeyFrame Value="0.8" />
                                    <SplineDoubleKeyFrame Value="0.7" />
                                    <SplineDoubleKeyFrame Value="0.6" />
                                    <SplineDoubleKeyFrame Value="0.5" />
                                    <SplineDoubleKeyFrame Value="0.4" />
                                    <SplineDoubleKeyFrame Value="0.3" />
                                    <SplineDoubleKeyFrame Value="0.2" />
                                    <SplineDoubleKeyFrame Value="0.1" />
                                    <SplineDoubleKeyFrame Value="0.05" />
                                    <SplineDoubleKeyFrame Value="0.00" />
                                    <SplineDoubleKeyFrame Value="1" />
                                    <SplineDoubleKeyFrame Value="0.9" />
                                    <SplineDoubleKeyFrame Value="0.8" />
                                    <SplineDoubleKeyFrame Value="0.7" />
                                    <SplineDoubleKeyFrame Value="0.6" />
                                    <SplineDoubleKeyFrame Value="0.5" />
                                    <SplineDoubleKeyFrame Value="0.4" />
                                    <SplineDoubleKeyFrame Value="0.3" />
                                    <SplineDoubleKeyFrame Value="0.2" />
                                    <SplineDoubleKeyFrame Value="0.1" />
                                    <SplineDoubleKeyFrame Value="0.05" />
                                    <SplineDoubleKeyFrame Value="0.00" />
                                    <SplineDoubleKeyFrame Value="1" />
                                    <SplineDoubleKeyFrame Value="0.9" />
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                               Duration="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(igPrim:BusyAnimationPresenter.AnimationPresenter).AnimationTotalDuration}"
                                                               Storyboard.TargetName="rectangle12"
                                                               RepeatBehavior="Forever">
                                    <SplineDoubleKeyFrame Value="0.9" />
                                    <SplineDoubleKeyFrame Value="0.8" />
                                    <SplineDoubleKeyFrame Value="0.7" />
                                    <SplineDoubleKeyFrame Value="0.6" />
                                    <SplineDoubleKeyFrame Value="0.5" />
                                    <SplineDoubleKeyFrame Value="0.4" />
                                    <SplineDoubleKeyFrame Value="0.3" />
                                    <SplineDoubleKeyFrame Value="0.2" />
                                    <SplineDoubleKeyFrame Value="0.1" />
                                    <SplineDoubleKeyFrame Value="0.05" />
                                    <SplineDoubleKeyFrame Value="0.00" />
                                    <SplineDoubleKeyFrame Value="1" />
                                    <SplineDoubleKeyFrame Value="0.9" />
                                    <SplineDoubleKeyFrame Value="0.8" />
                                    <SplineDoubleKeyFrame Value="0.7" />
                                    <SplineDoubleKeyFrame Value="0.6" />
                                    <SplineDoubleKeyFrame Value="0.5" />
                                    <SplineDoubleKeyFrame Value="0.4" />
                                    <SplineDoubleKeyFrame Value="0.3" />
                                    <SplineDoubleKeyFrame Value="0.2" />
                                    <SplineDoubleKeyFrame Value="0.1" />
                                    <SplineDoubleKeyFrame Value="0.05" />
                                    <SplineDoubleKeyFrame Value="0.00" />
                                    <SplineDoubleKeyFrame Value="1" />
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                        </Viewbox.Resources>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup Name="AnimationStates">
                                <VisualState Name="IsAnimating"
                                             Storyboard="{StaticResource IsAnimatingStoryboard}" />
                                <VisualState Name="IsNotAnimating" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Canvas Name="Root_layer"
                                Width="70"
                                Height="70">
                            <Canvas.RenderTransform>
                                <TranslateTransform X="0"
                                                    Y="0" />
                            </Canvas.RenderTransform>
                            <Canvas>
                                <Rectangle x:Name="rectangle10"
                                           Fill="{TemplateBinding AnimationFill}"
                                           Height="4.4"
                                           Canvas.Top="32.8"
                                           Width="20"
                                           Opacity="0.7" />
                                <Rectangle x:Name="rectangle1"
                                           Fill="{TemplateBinding AnimationFill}"
                                           Height="20"
                                           Canvas.Left="32.8"
                                           Width="4.4"
                                           Opacity="1" />
                                <Rectangle x:Name="rectangle4"
                                           Fill="{TemplateBinding AnimationFill}"
                                           Height="4.4"
                                           Canvas.Left="50"
                                           Canvas.Top="32.8"
                                           Width="20"
                                           Opacity="0.1" />
                                <Rectangle x:Name="rectangle7"
                                           Fill="{TemplateBinding AnimationFill}"
                                           Height="20"
                                           Canvas.Left="32.8"
                                           Canvas.Top="50"
                                           Width="4.4"
                                           Opacity="0.4" />
                            </Canvas>
                            <Canvas>
                                <Canvas.RenderTransform>
                                    <RotateTransform Angle="30" />
                                </Canvas.RenderTransform>
                                <Rectangle x:Name="rectangle2"
                                           Fill="{TemplateBinding AnimationFill}"
                                           Height="20"
                                           Canvas.Left="45.679"
                                           Canvas.Top="-22.172"
                                           Width="4.4"
                                           Opacity="0" />
                                <Rectangle x:Name="rectangle5"
                                           Fill="{TemplateBinding AnimationFill}"
                                           Height="4.4"
                                           Canvas.Left="62.879"
                                           Canvas.Top="10.628"
                                           Width="20"
                                           Opacity="0.2" />
                                <Rectangle x:Name="rectangle8"
                                           Fill="{TemplateBinding AnimationFill}"
                                           Height="20"
                                           Canvas.Left="45.679"
                                           Canvas.Top="27.828"
                                           Width="4.4"
                                           Opacity="0.5" />
                                <Rectangle x:Name="rectangle11"
                                           Fill="{TemplateBinding AnimationFill}"
                                           Height="4.4"
                                           Canvas.Left="12.879"
                                           Canvas.Top="10.628"
                                           Width="20"
                                           Opacity="0.7" />
                            </Canvas>
                            <Canvas>
                                <Canvas.RenderTransform>
                                    <RotateTransform Angle="60" />
                                </Canvas.RenderTransform>
                                <Rectangle x:Name="rectangle3"
                                           Fill="{TemplateBinding AnimationFill}"
                                           Height="20"
                                           Canvas.Left="45.728"
                                           Canvas.Top="-47.807"
                                           Width="4.4"
                                           Opacity="0.05" />
                                <Rectangle x:Name="rectangle6"
                                           Fill="{TemplateBinding AnimationFill}"
                                           Height="4.4"
                                           Canvas.Left="62.928"
                                           Canvas.Top="-15.007"
                                           Width="20"
                                           Opacity="0.3" />
                                <Rectangle x:Name="rectangle9"
                                           Fill="{TemplateBinding AnimationFill}"
                                           Height="20"
                                           Canvas.Left="45.728"
                                           Canvas.Top="2.193"
                                           Width="4.4"
                                           Opacity="0.6" />
                                <Rectangle x:Name="rectangle12"
                                           Fill="{TemplateBinding AnimationFill}"
                                           Height="4.4"
                                           Canvas.Left="12.928"
                                           Canvas.Top="-15.007"
                                           Width="20"
                                           Opacity="0.9" />
                            </Canvas>
                        </Canvas>
                    </Viewbox>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- ================================ -->
    <!-- SpinnerBarsWave animation -->
    <!-- ================================ -->
    <Style TargetType="{x:Type igPrim:SpinnerBarsWaveBusyAnimationPresenter}" BasedOn="{StaticResource BusyAnimationPresenterStyle}">
        <Setter Property="AnimationFill" Value="{StaticResource BusyIndicatorAnimationFirstItemBackgroundBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="igPrim:SpinnerBarsWaveBusyAnimationPresenter">
                    <Viewbox>
                        <Viewbox.Resources>
                            <Storyboard x:Key="IsAnimatingStoryboard">
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                               Duration="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(igPrim:BusyAnimationPresenter.AnimationPresenter).AnimationTotalDuration}"
                                                               Storyboard.TargetName="rectangle1"
                                                               RepeatBehavior="Forever">
                                    <SplineDoubleKeyFrame Value="0.8" />
                                    <SplineDoubleKeyFrame Value="0.6" />
                                    <SplineDoubleKeyFrame Value="0.4" />
                                    <SplineDoubleKeyFrame Value="0.2" />
                                    <SplineDoubleKeyFrame Value="0.1" />
                                    <SplineDoubleKeyFrame Value="0" />
                                    <SplineDoubleKeyFrame Value="0.8" />
                                    <SplineDoubleKeyFrame Value="0.6" />
                                    <SplineDoubleKeyFrame Value="0.4" />
                                    <SplineDoubleKeyFrame Value="0.2" />
                                    <SplineDoubleKeyFrame Value="0.1" />
                                    <SplineDoubleKeyFrame Value="0" />
                                    <SplineDoubleKeyFrame Value="0.8" />
                                    <SplineDoubleKeyFrame Value="0.6" />
                                    <SplineDoubleKeyFrame Value="0.4" />
                                    <SplineDoubleKeyFrame Value="0.2" />
                                    <SplineDoubleKeyFrame Value="0.1" />
                                    <SplineDoubleKeyFrame Value="0" />
                                    <SplineDoubleKeyFrame Value="0.8" />
                                    <SplineDoubleKeyFrame Value="0.6" />
                                    <SplineDoubleKeyFrame Value="0.4" />
                                    <SplineDoubleKeyFrame Value="0.2" />
                                    <SplineDoubleKeyFrame Value="0.1" />
                                    <SplineDoubleKeyFrame Value="0" />
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                               Duration="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(igPrim:BusyAnimationPresenter.AnimationPresenter).AnimationTotalDuration}"
                                                               Storyboard.TargetName="rectangle2"
                                                               RepeatBehavior="Forever">
                                    <SplineDoubleKeyFrame Value="0" />
                                    <SplineDoubleKeyFrame Value="0.8" />
                                    <SplineDoubleKeyFrame Value="0.6" />
                                    <SplineDoubleKeyFrame Value="0.4" />
                                    <SplineDoubleKeyFrame Value="0.2" />
                                    <SplineDoubleKeyFrame Value="0.1" />
                                    <SplineDoubleKeyFrame Value="0" />
                                    <SplineDoubleKeyFrame Value="0.8" />
                                    <SplineDoubleKeyFrame Value="0.6" />
                                    <SplineDoubleKeyFrame Value="0.4" />
                                    <SplineDoubleKeyFrame Value="0.2" />
                                    <SplineDoubleKeyFrame Value="0.1" />
                                    <SplineDoubleKeyFrame Value="0" />
                                    <SplineDoubleKeyFrame Value="0.8" />
                                    <SplineDoubleKeyFrame Value="0.6" />
                                    <SplineDoubleKeyFrame Value="0.4" />
                                    <SplineDoubleKeyFrame Value="0.2" />
                                    <SplineDoubleKeyFrame Value="0.1" />
                                    <SplineDoubleKeyFrame Value="0" />
                                    <SplineDoubleKeyFrame Value="0.8" />
                                    <SplineDoubleKeyFrame Value="0.6" />
                                    <SplineDoubleKeyFrame Value="0.4" />
                                    <SplineDoubleKeyFrame Value="0.2" />
                                    <SplineDoubleKeyFrame Value="0.1" />
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                               Duration="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(igPrim:BusyAnimationPresenter.AnimationPresenter).AnimationTotalDuration}"
                                                               Storyboard.TargetName="rectangle3"
                                                               RepeatBehavior="Forever">
                                    <SplineDoubleKeyFrame Value="0.1" />
                                    <SplineDoubleKeyFrame Value="0" />
                                    <SplineDoubleKeyFrame Value="0.8" />
                                    <SplineDoubleKeyFrame Value="0.6" />
                                    <SplineDoubleKeyFrame Value="0.4" />
                                    <SplineDoubleKeyFrame Value="0.2" />
                                    <SplineDoubleKeyFrame Value="0.1" />
                                    <SplineDoubleKeyFrame Value="0" />
                                    <SplineDoubleKeyFrame Value="0.8" />
                                    <SplineDoubleKeyFrame Value="0.6" />
                                    <SplineDoubleKeyFrame Value="0.4" />
                                    <SplineDoubleKeyFrame Value="0.2" />
                                    <SplineDoubleKeyFrame Value="0.1" />
                                    <SplineDoubleKeyFrame Value="0" />
                                    <SplineDoubleKeyFrame Value="0.8" />
                                    <SplineDoubleKeyFrame Value="0.6" />
                                    <SplineDoubleKeyFrame Value="0.4" />
                                    <SplineDoubleKeyFrame Value="0.2" />
                                    <SplineDoubleKeyFrame Value="0.1" />
                                    <SplineDoubleKeyFrame Value="0" />
                                    <SplineDoubleKeyFrame Value="0.8" />
                                    <SplineDoubleKeyFrame Value="0.6" />
                                    <SplineDoubleKeyFrame Value="0.4" />
                                    <SplineDoubleKeyFrame Value="0.2" />
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                               Duration="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(igPrim:BusyAnimationPresenter.AnimationPresenter).AnimationTotalDuration}"
                                                               Storyboard.TargetName="rectangle4"
                                                               RepeatBehavior="Forever">
                                    <SplineDoubleKeyFrame Value="0.2" />
                                    <SplineDoubleKeyFrame Value="0.1" />
                                    <SplineDoubleKeyFrame Value="0" />
                                    <SplineDoubleKeyFrame Value="0.8" />
                                    <SplineDoubleKeyFrame Value="0.6" />
                                    <SplineDoubleKeyFrame Value="0.4" />
                                    <SplineDoubleKeyFrame Value="0.2" />
                                    <SplineDoubleKeyFrame Value="0.1" />
                                    <SplineDoubleKeyFrame Value="0" />
                                    <SplineDoubleKeyFrame Value="0.8" />
                                    <SplineDoubleKeyFrame Value="0.6" />
                                    <SplineDoubleKeyFrame Value="0.4" />
                                    <SplineDoubleKeyFrame Value="0.2" />
                                    <SplineDoubleKeyFrame Value="0.1" />
                                    <SplineDoubleKeyFrame Value="0" />
                                    <SplineDoubleKeyFrame Value="0.8" />
                                    <SplineDoubleKeyFrame Value="0.6" />
                                    <SplineDoubleKeyFrame Value="0.4" />
                                    <SplineDoubleKeyFrame Value="0.2" />
                                    <SplineDoubleKeyFrame Value="0.1" />
                                    <SplineDoubleKeyFrame Value="0" />
                                    <SplineDoubleKeyFrame Value="0.8" />
                                    <SplineDoubleKeyFrame Value="0.6" />
                                    <SplineDoubleKeyFrame Value="0.4" />
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                               Duration="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(igPrim:BusyAnimationPresenter.AnimationPresenter).AnimationTotalDuration}"
                                                               Storyboard.TargetName="rectangle5"
                                                               RepeatBehavior="Forever">
                                    <SplineDoubleKeyFrame Value="0.4" />
                                    <SplineDoubleKeyFrame Value="0.2" />
                                    <SplineDoubleKeyFrame Value="0.1" />
                                    <SplineDoubleKeyFrame Value="0" />
                                    <SplineDoubleKeyFrame Value="0.8" />
                                    <SplineDoubleKeyFrame Value="0.6" />
                                    <SplineDoubleKeyFrame Value="0.4" />
                                    <SplineDoubleKeyFrame Value="0.2" />
                                    <SplineDoubleKeyFrame Value="0.1" />
                                    <SplineDoubleKeyFrame Value="0" />
                                    <SplineDoubleKeyFrame Value="0.8" />
                                    <SplineDoubleKeyFrame Value="0.6" />
                                    <SplineDoubleKeyFrame Value="0.4" />
                                    <SplineDoubleKeyFrame Value="0.2" />
                                    <SplineDoubleKeyFrame Value="0.1" />
                                    <SplineDoubleKeyFrame Value="0" />
                                    <SplineDoubleKeyFrame Value="0.8" />
                                    <SplineDoubleKeyFrame Value="0.6" />
                                    <SplineDoubleKeyFrame Value="0.4" />
                                    <SplineDoubleKeyFrame Value="0.2" />
                                    <SplineDoubleKeyFrame Value="0.1" />
                                    <SplineDoubleKeyFrame Value="0" />
                                    <SplineDoubleKeyFrame Value="0.8" />
                                    <SplineDoubleKeyFrame Value="0.6" />
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                               Duration="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(igPrim:BusyAnimationPresenter.AnimationPresenter).AnimationTotalDuration}"
                                                               Storyboard.TargetName="rectangle6"
                                                               RepeatBehavior="Forever">
                                    <SplineDoubleKeyFrame Value="0.6" />
                                    <SplineDoubleKeyFrame Value="0.4" />
                                    <SplineDoubleKeyFrame Value="0.2" />
                                    <SplineDoubleKeyFrame Value="0.1" />
                                    <SplineDoubleKeyFrame Value="0" />
                                    <SplineDoubleKeyFrame Value="0.8" />
                                    <SplineDoubleKeyFrame Value="0.6" />
                                    <SplineDoubleKeyFrame Value="0.4" />
                                    <SplineDoubleKeyFrame Value="0.2" />
                                    <SplineDoubleKeyFrame Value="0.1" />
                                    <SplineDoubleKeyFrame Value="0" />
                                    <SplineDoubleKeyFrame Value="0.8" />
                                    <SplineDoubleKeyFrame Value="0.6" />
                                    <SplineDoubleKeyFrame Value="0.4" />
                                    <SplineDoubleKeyFrame Value="0.2" />
                                    <SplineDoubleKeyFrame Value="0.1" />
                                    <SplineDoubleKeyFrame Value="0" />
                                    <SplineDoubleKeyFrame Value="0.8" />
                                    <SplineDoubleKeyFrame Value="0.6" />
                                    <SplineDoubleKeyFrame Value="0.4" />
                                    <SplineDoubleKeyFrame Value="0.2" />
                                    <SplineDoubleKeyFrame Value="0.1" />
                                    <SplineDoubleKeyFrame Value="0" />
                                    <SplineDoubleKeyFrame Value="0.8" />
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                               Duration="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(igPrim:BusyAnimationPresenter.AnimationPresenter).AnimationTotalDuration}"
                                                               Storyboard.TargetName="rectangle7"
                                                               RepeatBehavior="Forever">
                                    <SplineDoubleKeyFrame Value="0.8" />
                                    <SplineDoubleKeyFrame Value="0.6" />
                                    <SplineDoubleKeyFrame Value="0.4" />
                                    <SplineDoubleKeyFrame Value="0.2" />
                                    <SplineDoubleKeyFrame Value="0.1" />
                                    <SplineDoubleKeyFrame Value="0" />
                                    <SplineDoubleKeyFrame Value="0.8" />
                                    <SplineDoubleKeyFrame Value="0.6" />
                                    <SplineDoubleKeyFrame Value="0.4" />
                                    <SplineDoubleKeyFrame Value="0.2" />
                                    <SplineDoubleKeyFrame Value="0.1" />
                                    <SplineDoubleKeyFrame Value="0" />
                                    <SplineDoubleKeyFrame Value="0.8" />
                                    <SplineDoubleKeyFrame Value="0.6" />
                                    <SplineDoubleKeyFrame Value="0.4" />
                                    <SplineDoubleKeyFrame Value="0.2" />
                                    <SplineDoubleKeyFrame Value="0.1" />
                                    <SplineDoubleKeyFrame Value="0" />
                                    <SplineDoubleKeyFrame Value="0.8" />
                                    <SplineDoubleKeyFrame Value="0.6" />
                                    <SplineDoubleKeyFrame Value="0.4" />
                                    <SplineDoubleKeyFrame Value="0.2" />
                                    <SplineDoubleKeyFrame Value="0.1" />
                                    <SplineDoubleKeyFrame Value="0" />
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                               Duration="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(igPrim:BusyAnimationPresenter.AnimationPresenter).AnimationTotalDuration}"
                                                               Storyboard.TargetName="rectangle8"
                                                               RepeatBehavior="Forever">
                                    <SplineDoubleKeyFrame Value="0" />
                                    <SplineDoubleKeyFrame Value="0.8" />
                                    <SplineDoubleKeyFrame Value="0.6" />
                                    <SplineDoubleKeyFrame Value="0.4" />
                                    <SplineDoubleKeyFrame Value="0.2" />
                                    <SplineDoubleKeyFrame Value="0.1" />
                                    <SplineDoubleKeyFrame Value="0" />
                                    <SplineDoubleKeyFrame Value="0.8" />
                                    <SplineDoubleKeyFrame Value="0.6" />
                                    <SplineDoubleKeyFrame Value="0.4" />
                                    <SplineDoubleKeyFrame Value="0.2" />
                                    <SplineDoubleKeyFrame Value="0.1" />
                                    <SplineDoubleKeyFrame Value="0" />
                                    <SplineDoubleKeyFrame Value="0.8" />
                                    <SplineDoubleKeyFrame Value="0.6" />
                                    <SplineDoubleKeyFrame Value="0.4" />
                                    <SplineDoubleKeyFrame Value="0.2" />
                                    <SplineDoubleKeyFrame Value="0.1" />
                                    <SplineDoubleKeyFrame Value="0" />
                                    <SplineDoubleKeyFrame Value="0.8" />
                                    <SplineDoubleKeyFrame Value="0.6" />
                                    <SplineDoubleKeyFrame Value="0.4" />
                                    <SplineDoubleKeyFrame Value="0.2" />
                                    <SplineDoubleKeyFrame Value="0.1" />
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                               Duration="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(igPrim:BusyAnimationPresenter.AnimationPresenter).AnimationTotalDuration}"
                                                               Storyboard.TargetName="rectangle9"
                                                               RepeatBehavior="Forever">
                                    <SplineDoubleKeyFrame Value="0.1" />
                                    <SplineDoubleKeyFrame Value="0" />
                                    <SplineDoubleKeyFrame Value="0.8" />
                                    <SplineDoubleKeyFrame Value="0.6" />
                                    <SplineDoubleKeyFrame Value="0.4" />
                                    <SplineDoubleKeyFrame Value="0.2" />
                                    <SplineDoubleKeyFrame Value="0.1" />
                                    <SplineDoubleKeyFrame Value="0" />
                                    <SplineDoubleKeyFrame Value="0.8" />
                                    <SplineDoubleKeyFrame Value="0.6" />
                                    <SplineDoubleKeyFrame Value="0.4" />
                                    <SplineDoubleKeyFrame Value="0.2" />
                                    <SplineDoubleKeyFrame Value="0.1" />
                                    <SplineDoubleKeyFrame Value="0" />
                                    <SplineDoubleKeyFrame Value="0.8" />
                                    <SplineDoubleKeyFrame Value="0.6" />
                                    <SplineDoubleKeyFrame Value="0.4" />
                                    <SplineDoubleKeyFrame Value="0.2" />
                                    <SplineDoubleKeyFrame Value="0.1" />
                                    <SplineDoubleKeyFrame Value="0" />
                                    <SplineDoubleKeyFrame Value="0.8" />
                                    <SplineDoubleKeyFrame Value="0.6" />
                                    <SplineDoubleKeyFrame Value="0.4" />
                                    <SplineDoubleKeyFrame Value="0.2" />
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                               Duration="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(igPrim:BusyAnimationPresenter.AnimationPresenter).AnimationTotalDuration}"
                                                               Storyboard.TargetName="rectangle10"
                                                               RepeatBehavior="Forever">
                                    <SplineDoubleKeyFrame Value="0.2" />
                                    <SplineDoubleKeyFrame Value="0.1" />
                                    <SplineDoubleKeyFrame Value="0" />
                                    <SplineDoubleKeyFrame Value="0.8" />
                                    <SplineDoubleKeyFrame Value="0.6" />
                                    <SplineDoubleKeyFrame Value="0.4" />
                                    <SplineDoubleKeyFrame Value="0.2" />
                                    <SplineDoubleKeyFrame Value="0.1" />
                                    <SplineDoubleKeyFrame Value="0" />
                                    <SplineDoubleKeyFrame Value="0.8" />
                                    <SplineDoubleKeyFrame Value="0.6" />
                                    <SplineDoubleKeyFrame Value="0.4" />
                                    <SplineDoubleKeyFrame Value="0.2" />
                                    <SplineDoubleKeyFrame Value="0.1" />
                                    <SplineDoubleKeyFrame Value="0" />
                                    <SplineDoubleKeyFrame Value="0.8" />
                                    <SplineDoubleKeyFrame Value="0.6" />
                                    <SplineDoubleKeyFrame Value="0.4" />
                                    <SplineDoubleKeyFrame Value="0.2" />
                                    <SplineDoubleKeyFrame Value="0.1" />
                                    <SplineDoubleKeyFrame Value="0" />
                                    <SplineDoubleKeyFrame Value="0.8" />
                                    <SplineDoubleKeyFrame Value="0.6" />
                                    <SplineDoubleKeyFrame Value="0.4" />
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                               Duration="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(igPrim:BusyAnimationPresenter.AnimationPresenter).AnimationTotalDuration}"
                                                               Storyboard.TargetName="rectangle11"
                                                               RepeatBehavior="Forever">
                                    <SplineDoubleKeyFrame Value="0.4" />
                                    <SplineDoubleKeyFrame Value="0.2" />
                                    <SplineDoubleKeyFrame Value="0.1" />
                                    <SplineDoubleKeyFrame Value="0" />
                                    <SplineDoubleKeyFrame Value="0.8" />
                                    <SplineDoubleKeyFrame Value="0.6" />
                                    <SplineDoubleKeyFrame Value="0.4" />
                                    <SplineDoubleKeyFrame Value="0.2" />
                                    <SplineDoubleKeyFrame Value="0.1" />
                                    <SplineDoubleKeyFrame Value="0" />
                                    <SplineDoubleKeyFrame Value="0.8" />
                                    <SplineDoubleKeyFrame Value="0.6" />
                                    <SplineDoubleKeyFrame Value="0.4" />
                                    <SplineDoubleKeyFrame Value="0.2" />
                                    <SplineDoubleKeyFrame Value="0.1" />
                                    <SplineDoubleKeyFrame Value="0" />
                                    <SplineDoubleKeyFrame Value="0.8" />
                                    <SplineDoubleKeyFrame Value="0.6" />
                                    <SplineDoubleKeyFrame Value="0.4" />
                                    <SplineDoubleKeyFrame Value="0.2" />
                                    <SplineDoubleKeyFrame Value="0.1" />
                                    <SplineDoubleKeyFrame Value="0" />
                                    <SplineDoubleKeyFrame Value="0.8" />
                                    <SplineDoubleKeyFrame Value="0.6" />
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                               Duration="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(igPrim:BusyAnimationPresenter.AnimationPresenter).AnimationTotalDuration}"
                                                               Storyboard.TargetName="rectangle12"
                                                               RepeatBehavior="Forever">
                                    <SplineDoubleKeyFrame Value="0.6" />
                                    <SplineDoubleKeyFrame Value="0.4" />
                                    <SplineDoubleKeyFrame Value="0.2" />
                                    <SplineDoubleKeyFrame Value="0.1" />
                                    <SplineDoubleKeyFrame Value="0" />
                                    <SplineDoubleKeyFrame Value="0.8" />
                                    <SplineDoubleKeyFrame Value="0.6" />
                                    <SplineDoubleKeyFrame Value="0.4" />
                                    <SplineDoubleKeyFrame Value="0.2" />
                                    <SplineDoubleKeyFrame Value="0.1" />
                                    <SplineDoubleKeyFrame Value="0" />
                                    <SplineDoubleKeyFrame Value="0.8" />
                                    <SplineDoubleKeyFrame Value="0.6" />
                                    <SplineDoubleKeyFrame Value="0.4" />
                                    <SplineDoubleKeyFrame Value="0.2" />
                                    <SplineDoubleKeyFrame Value="0.1" />
                                    <SplineDoubleKeyFrame Value="0" />
                                    <SplineDoubleKeyFrame Value="0.8" />
                                    <SplineDoubleKeyFrame Value="0.6" />
                                    <SplineDoubleKeyFrame Value="0.4" />
                                    <SplineDoubleKeyFrame Value="0.2" />
                                    <SplineDoubleKeyFrame Value="0.1" />
                                    <SplineDoubleKeyFrame Value="0" />
                                    <SplineDoubleKeyFrame Value="0.8" />
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                        </Viewbox.Resources>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup Name="AnimationStates">
                                <VisualState Name="IsAnimating"
                                             Storyboard="{StaticResource IsAnimatingStoryboard}" />
                                <VisualState Name="IsNotAnimating" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Canvas Name="Root_layer"
                                Canvas.Left="0"
                                Canvas.Top="0"
                                Width="70"
                                Height="70">
                            <Canvas.RenderTransform>
                                <TranslateTransform X="0"
                                                    Y="0" />
                            </Canvas.RenderTransform>
                            <Canvas>
                                <Rectangle x:Name="rectangle1"
                                           Fill="{TemplateBinding AnimationFill}"
                                           Height="20"
                                           Canvas.Left="32.8"
                                           Width="4.4"
                                           Opacity="0.8" />
                                <Rectangle x:Name="rectangle4"
                                           Fill="{TemplateBinding AnimationFill}"
                                           Height="4.4"
                                           Canvas.Left="50"
                                           Canvas.Top="32.8"
                                           Width="20"
                                           Opacity="0.2" />
                                <Rectangle x:Name="rectangle7"
                                           Fill="{TemplateBinding AnimationFill}"
                                           Height="20"
                                           Canvas.Left="32.8"
                                           Canvas.Top="50"
                                           Width="4.4"
                                           Opacity="0.8" />
                                <Rectangle x:Name="rectangle10"
                                           Fill="{TemplateBinding AnimationFill}"
                                           Height="4.4"
                                           Canvas.Top="32.8"
                                           Width="20"
                                           Opacity="0.2" />
                            </Canvas>
                            <Canvas>
                                <Canvas.RenderTransform>
                                    <RotateTransform Angle="30" />
                                </Canvas.RenderTransform>
                                <Rectangle x:Name="rectangle2"
                                           Fill="{TemplateBinding AnimationFill}"
                                           Height="20"
                                           Canvas.Left="45.679"
                                           Canvas.Top="-22.172"
                                           Width="4.4"
                                           Opacity="0" />
                                <Rectangle x:Name="rectangle5"
                                           Fill="{TemplateBinding AnimationFill}"
                                           Height="4.4"
                                           Canvas.Left="62.879"
                                           Canvas.Top="10.628"
                                           Width="20"
                                           Opacity="0.4" />
                                <Rectangle x:Name="rectangle8"
                                           Fill="{TemplateBinding AnimationFill}"
                                           Height="20"
                                           Canvas.Left="45.679"
                                           Canvas.Top="27.828"
                                           Width="4.4"
                                           Opacity="0" />
                                <Rectangle x:Name="rectangle11"
                                           Fill="{TemplateBinding AnimationFill}"
                                           Height="4.4"
                                           Canvas.Left="12.879"
                                           Canvas.Top="10.628"
                                           Width="20"
                                           Opacity="0.4" />
                            </Canvas>
                            <Canvas>
                                <Canvas.RenderTransform>
                                    <RotateTransform Angle="60" />
                                </Canvas.RenderTransform>
                                <Rectangle x:Name="rectangle3"
                                           Fill="{TemplateBinding AnimationFill}"
                                           Height="20"
                                           Canvas.Left="45.728"
                                           Canvas.Top="-47.807"
                                           Width="4.4"
                                           Opacity="0.1" />
                                <Rectangle x:Name="rectangle6"
                                           Fill="{TemplateBinding AnimationFill}"
                                           Height="4.4"
                                           Canvas.Left="62.928"
                                           Canvas.Top="-15.007"
                                           Width="20"
                                           Opacity="0.6" />
                                <Rectangle x:Name="rectangle9"
                                           Fill="{TemplateBinding AnimationFill}"
                                           Height="20"
                                           Canvas.Left="45.728"
                                           Canvas.Top="2.193"
                                           Width="4.4"
                                           Opacity="0.1" />
                                <Rectangle x:Name="rectangle12"
                                           Fill="{TemplateBinding AnimationFill}"
                                           Height="4.4"
                                           Canvas.Left="12.928"
                                           Canvas.Top="-15.007"
                                           Width="20"
                                           Opacity="0.6" />
                            </Canvas>
                        </Canvas>
                    </Viewbox>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- ================================ -->
    <!-- SpinnerSegmented animation -->
    <!-- ================================ -->
    <Style TargetType="{x:Type igPrim:SpinnerSegmentedBusyAnimationPresenter}" BasedOn="{StaticResource BusyAnimationPresenterStyle}">
        <Setter Property="AnimationFill" Value="{StaticResource BusyIndicatorAnimationFirstItemBackgroundBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="igPrim:SpinnerSegmentedBusyAnimationPresenter">
                    <Viewbox>
                        <Viewbox.Resources>
                            <Storyboard x:Key="IsAnimatingStoryboard">
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                               Duration="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(igPrim:BusyAnimationPresenter.AnimationPresenter).AnimationTotalDuration}"
                                                               Storyboard.TargetName="segment1"
                                                               RepeatBehavior="Forever">
                                    <SplineDoubleKeyFrame Value="1" />
                                    <SplineDoubleKeyFrame Value="0.3" />
                                    <SplineDoubleKeyFrame Value="0.3" />
                                    <SplineDoubleKeyFrame Value="0.3" />
                                    <SplineDoubleKeyFrame Value="0.3" />
                                    <SplineDoubleKeyFrame Value="0.3" />
                                    <SplineDoubleKeyFrame Value="0.3" />
                                    <SplineDoubleKeyFrame Value="0.3" />
                                    <SplineDoubleKeyFrame Value="1" />
                                    <SplineDoubleKeyFrame Value="0.3" />
                                    <SplineDoubleKeyFrame Value="0.3" />
                                    <SplineDoubleKeyFrame Value="0.3" />
                                    <SplineDoubleKeyFrame Value="0.3" />
                                    <SplineDoubleKeyFrame Value="0.3" />
                                    <SplineDoubleKeyFrame Value="0.3" />
                                    <SplineDoubleKeyFrame Value="0.3" />
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                               Duration="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(igPrim:BusyAnimationPresenter.AnimationPresenter).AnimationTotalDuration}"
                                                               Storyboard.TargetName="segment2"
                                                               RepeatBehavior="Forever">
                                    <SplineDoubleKeyFrame Value="0.3" />
                                    <SplineDoubleKeyFrame Value="1" />
                                    <SplineDoubleKeyFrame Value="0.3" />
                                    <SplineDoubleKeyFrame Value="0.3" />
                                    <SplineDoubleKeyFrame Value="0.3" />
                                    <SplineDoubleKeyFrame Value="0.3" />
                                    <SplineDoubleKeyFrame Value="0.3" />
                                    <SplineDoubleKeyFrame Value="0.3" />
                                    <SplineDoubleKeyFrame Value="0.3" />
                                    <SplineDoubleKeyFrame Value="1" />
                                    <SplineDoubleKeyFrame Value="0.3" />
                                    <SplineDoubleKeyFrame Value="0.3" />
                                    <SplineDoubleKeyFrame Value="0.3" />
                                    <SplineDoubleKeyFrame Value="0.3" />
                                    <SplineDoubleKeyFrame Value="0.3" />
                                    <SplineDoubleKeyFrame Value="0.3" />
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                               Duration="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(igPrim:BusyAnimationPresenter.AnimationPresenter).AnimationTotalDuration}"
                                                               Storyboard.TargetName="segment3"
                                                               RepeatBehavior="Forever">
                                    <SplineDoubleKeyFrame Value="0.3" />
                                    <SplineDoubleKeyFrame Value="0.3" />
                                    <SplineDoubleKeyFrame Value="1" />
                                    <SplineDoubleKeyFrame Value="0.3" />
                                    <SplineDoubleKeyFrame Value="0.3" />
                                    <SplineDoubleKeyFrame Value="0.3" />
                                    <SplineDoubleKeyFrame Value="0.3" />
                                    <SplineDoubleKeyFrame Value="0.3" />
                                    <SplineDoubleKeyFrame Value="0.3" />
                                    <SplineDoubleKeyFrame Value="0.3" />
                                    <SplineDoubleKeyFrame Value="1" />
                                    <SplineDoubleKeyFrame Value="0.3" />
                                    <SplineDoubleKeyFrame Value="0.3" />
                                    <SplineDoubleKeyFrame Value="0.3" />
                                    <SplineDoubleKeyFrame Value="0.3" />
                                    <SplineDoubleKeyFrame Value="0.3" />
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                               Duration="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(igPrim:BusyAnimationPresenter.AnimationPresenter).AnimationTotalDuration}"
                                                               Storyboard.TargetName="segment4"
                                                               RepeatBehavior="Forever">
                                    <SplineDoubleKeyFrame Value="0.3" />
                                    <SplineDoubleKeyFrame Value="0.3" />
                                    <SplineDoubleKeyFrame Value="0.3" />
                                    <SplineDoubleKeyFrame Value="1" />
                                    <SplineDoubleKeyFrame Value="0.3" />
                                    <SplineDoubleKeyFrame Value="0.3" />
                                    <SplineDoubleKeyFrame Value="0.3" />
                                    <SplineDoubleKeyFrame Value="0.3" />
                                    <SplineDoubleKeyFrame Value="0.3" />
                                    <SplineDoubleKeyFrame Value="0.3" />
                                    <SplineDoubleKeyFrame Value="0.3" />
                                    <SplineDoubleKeyFrame Value="1" />
                                    <SplineDoubleKeyFrame Value="0.3" />
                                    <SplineDoubleKeyFrame Value="0.3" />
                                    <SplineDoubleKeyFrame Value="0.3" />
                                    <SplineDoubleKeyFrame Value="0.3" />
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                               Duration="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(igPrim:BusyAnimationPresenter.AnimationPresenter).AnimationTotalDuration}"
                                                               Storyboard.TargetName="segment5"
                                                               RepeatBehavior="Forever">
                                    <SplineDoubleKeyFrame Value="0.3" />
                                    <SplineDoubleKeyFrame Value="0.3" />
                                    <SplineDoubleKeyFrame Value="0.3" />
                                    <SplineDoubleKeyFrame Value="0.3" />
                                    <SplineDoubleKeyFrame Value="1" />
                                    <SplineDoubleKeyFrame Value="0.3" />
                                    <SplineDoubleKeyFrame Value="0.3" />
                                    <SplineDoubleKeyFrame Value="0.3" />
                                    <SplineDoubleKeyFrame Value="0.3" />
                                    <SplineDoubleKeyFrame Value="0.3" />
                                    <SplineDoubleKeyFrame Value="0.3" />
                                    <SplineDoubleKeyFrame Value="0.3" />
                                    <SplineDoubleKeyFrame Value="1" />
                                    <SplineDoubleKeyFrame Value="0.3" />
                                    <SplineDoubleKeyFrame Value="0.3" />
                                    <SplineDoubleKeyFrame Value="0.3" />
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                               Duration="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(igPrim:BusyAnimationPresenter.AnimationPresenter).AnimationTotalDuration}"
                                                               Storyboard.TargetName="segment6"
                                                               RepeatBehavior="Forever">
                                    <SplineDoubleKeyFrame Value="0.3" />
                                    <SplineDoubleKeyFrame Value="0.3" />
                                    <SplineDoubleKeyFrame Value="0.3" />
                                    <SplineDoubleKeyFrame Value="0.3" />
                                    <SplineDoubleKeyFrame Value="0.3" />
                                    <SplineDoubleKeyFrame Value="1" />
                                    <SplineDoubleKeyFrame Value="0.3" />
                                    <SplineDoubleKeyFrame Value="0.3" />
                                    <SplineDoubleKeyFrame Value="0.3" />
                                    <SplineDoubleKeyFrame Value="0.3" />
                                    <SplineDoubleKeyFrame Value="0.3" />
                                    <SplineDoubleKeyFrame Value="0.3" />
                                    <SplineDoubleKeyFrame Value="0.3" />
                                    <SplineDoubleKeyFrame Value="1" />
                                    <SplineDoubleKeyFrame Value="0.3" />
                                    <SplineDoubleKeyFrame Value="0.3" />
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                               Duration="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(igPrim:BusyAnimationPresenter.AnimationPresenter).AnimationTotalDuration}"
                                                               Storyboard.TargetName="segment7"
                                                               RepeatBehavior="Forever">
                                    <SplineDoubleKeyFrame Value="0.3" />
                                    <SplineDoubleKeyFrame Value="0.3" />
                                    <SplineDoubleKeyFrame Value="0.3" />
                                    <SplineDoubleKeyFrame Value="0.3" />
                                    <SplineDoubleKeyFrame Value="0.3" />
                                    <SplineDoubleKeyFrame Value="0.3" />
                                    <SplineDoubleKeyFrame Value="1" />
                                    <SplineDoubleKeyFrame Value="0.3" />
                                    <SplineDoubleKeyFrame Value="0.3" />
                                    <SplineDoubleKeyFrame Value="0.3" />
                                    <SplineDoubleKeyFrame Value="0.3" />
                                    <SplineDoubleKeyFrame Value="0.3" />
                                    <SplineDoubleKeyFrame Value="0.3" />
                                    <SplineDoubleKeyFrame Value="0.3" />
                                    <SplineDoubleKeyFrame Value="1" />
                                    <SplineDoubleKeyFrame Value="0.3" />
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                               Duration="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(igPrim:BusyAnimationPresenter.AnimationPresenter).AnimationTotalDuration}"
                                                               Storyboard.TargetName="segment8"
                                                               RepeatBehavior="Forever">
                                    <SplineDoubleKeyFrame Value="0.3" />
                                    <SplineDoubleKeyFrame Value="0.3" />
                                    <SplineDoubleKeyFrame Value="0.3" />
                                    <SplineDoubleKeyFrame Value="0.3" />
                                    <SplineDoubleKeyFrame Value="0.3" />
                                    <SplineDoubleKeyFrame Value="0.3" />
                                    <SplineDoubleKeyFrame Value="0.3" />
                                    <SplineDoubleKeyFrame Value="1" />
                                    <SplineDoubleKeyFrame Value="0.3" />
                                    <SplineDoubleKeyFrame Value="0.3" />
                                    <SplineDoubleKeyFrame Value="0.3" />
                                    <SplineDoubleKeyFrame Value="0.3" />
                                    <SplineDoubleKeyFrame Value="0.3" />
                                    <SplineDoubleKeyFrame Value="0.3" />
                                    <SplineDoubleKeyFrame Value="0.3" />
                                    <SplineDoubleKeyFrame Value="1" />
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                        </Viewbox.Resources>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup Name="AnimationStates">
                                <VisualState Name="IsAnimating"
                                             Storyboard="{StaticResource IsAnimatingStoryboard}" />
                                <VisualState Name="IsNotAnimating" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Canvas Name="Root_layer"
                                Width="70"
                                Height="70">
                            <Path Name="segment1"
                                  Fill="{TemplateBinding AnimationFill}"
                                  Data="M58.6 9.1c-5.9-5.4-13.5-8.7-22-9.1v10.9c5.5 0.4 10.4 2.5 14.3 5.9L58.6 9.1z"
                                  Opacity="0.3" />
                            <Path Name="segment2"
                                  Fill="{TemplateBinding AnimationFill}"
                                  Data="M53.2 19.1c3.4 3.9 5.6 8.8 5.9 14.3H70c-0.4-8.5-3.8-16.1-9.1-22L53.2 19.1z"
                                  Opacity="0.3" />
                            <Path Name="segment3"
                                  Fill="{TemplateBinding AnimationFill}"
                                  Data="M59.2 36.6c-0.4 5.5-2.5 10.4-5.9 14.3l7.7 7.7c5.4-5.9 8.7-13.5 9.1-22H59.2z"
                                  Opacity="0.3" />
                            <Path Name="segment4"
                                  Fill="{TemplateBinding AnimationFill}"
                                  Data="M50.9 53.2c-3.9 3.4-8.8 5.6-14.3 5.9V70c8.5-0.4 16.1-3.8 22-9.1L50.9 53.2z"
                                  Opacity="0.3" />
                            <Path Name="segment5"
                                  Fill="{TemplateBinding AnimationFill}"
                                  Data="M33.4 59.2c-5.5-0.4-10.4-2.5-14.3-5.9l-7.7 7.7c5.9 5.4 13.5 8.7 22 9.1V59.2z"
                                  Opacity="0.3" />
                            <Path Name="segment6"
                                  Fill="{TemplateBinding AnimationFill}"
                                  Data="M16.8 50.9c-3.4-3.9-5.6-8.8-5.9-14.3H0c0.4 8.5 3.8 16.1 9.1 22L16.8 50.9z"
                                  Opacity="0.3" />
                            <Path Name="segment7"
                                  Fill="{TemplateBinding AnimationFill}"
                                  Data="M10.9 33.4c0.4-5.5 2.5-10.4 5.9-14.3l-7.7-7.7c-5.4 5.9-8.7 13.5-9.1 22H10.9z"
                                  Opacity="0.3" />
                            <Path Name="segment8"
                                  Fill="{TemplateBinding AnimationFill}"
                                  Data="M33.4 10.9V0c-8.5 0.4-16.1 3.8-22 9.1l7.7 7.7C23 13.4 27.9 11.3 33.4 10.9z"
                                  Opacity="0.3" />
                        </Canvas>
                    </Viewbox>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type igPrim:CustomBusyAnimationPresenter}" BasedOn="{StaticResource BusyAnimationPresenterStyle}">
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="igPrim:CustomBusyAnimationPresenter">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}" 
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Padding="{TemplateBinding Padding}">
                        <ContentPresenter 
                            Content="{Binding}"
                            ContentTemplate="{Binding DataTemplate}" 
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type interactions:XamBusyIndicator}">  
        <Setter Property="Padding" Value="4" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />        
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="DisplayAfter" Value="00:00:00.001" />
        <Setter Property="Background" Value="Transparent" /> 
        <Setter Property="OverlayStyle">
            <Setter.Value>
                <Style TargetType="Rectangle">
                    <Setter Property="Fill" Value="{StaticResource OverlayBackgroundBrush}"/>
                    <Setter Property="Stroke" Value="{StaticResource OverlayBorderBrush}"/>
                    <Setter Property="StrokeThickness" Value="0"/>
                    <Setter Property="Opacity" Value=".5"/>                    
                </Style>
            </Setter.Value>
        </Setter> 
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type interactions:XamBusyIndicator}">
                    <Grid SnapsToDevicePixels="True" Margin="0"  >
                        <ContentPresenter VerticalAlignment="Stretch"
                                          HorizontalAlignment="Stretch"
                                          Margin="0"/>

                        <Rectangle x:Name="PART_Overlay"
                                   Style="{TemplateBinding OverlayStyle}"
                                   Visibility="{Binding Path=(interactions:XamBusyIndicator.BusyIndicator).IsIndicatorVisible, RelativeSource={RelativeSource Self}, Converter={StaticResource BoolToVisibiilityConverter}}" />

                        <Border TextBlock.Foreground="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Foreground, FallbackValue={StaticResource BusyIndicatorForegroundBrush}}"
                                Visibility="{TemplateBinding Property=IsIndicatorVisible, Converter={StaticResource BoolToVisibiilityConverter}}"                                
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                Background="{TemplateBinding Background}"
                                Padding="{TemplateBinding Padding}"
                                CornerRadius="0">
                            <Grid >
                                <Grid.RowDefinitions>
                                    <RowDefinition />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>
                                <ContentPresenter Content="{TemplateBinding AnimationPresenter}" />
                                <ContentPresenter Grid.Row="1" 
                                                  Margin="0,7,0,0"
                                                  TextBlock.TextAlignment="Center"
                                                  Content="{TemplateBinding BusyContent}"
                                                  ContentTemplate="{TemplateBinding BusyContentTemplate}"
                                                  ContentTemplateSelector="{TemplateBinding BusyContentTemplateSelector}"
                                                  ContentStringFormat="{TemplateBinding BusyContentStringFormat}"
                                                  Visibility="{TemplateBinding Property=BusyContent, Converter={StaticResource NullToCollapsedConverter}}"/>
                            </Grid>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
</ResourceDictionary>
