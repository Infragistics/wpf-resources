<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:ig="http://infragistics.com/Windows" xmlns:controls="http://infragistics.com/Windows" xmlns:igWindows="http://infragistics.com/Windows" xmlns:themes="http://infragistics.com/Themes" xmlns:luna="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Luna" xmlns:d="http://schemas.microsoft.com/expression/interactivedesigner/2006" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:PresentationOptions="http://schemas.microsoft.com/winfx/2006/xaml/presentation/options" xmlns:igPrim="http://schemas.infragistics.com/xaml/primitives" mc:Ignorable="d" xmlns:shared="http://infragistics.com/Windows">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="PrimitivesGeneric_Brushes.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <!-- JJD 06/19/17 - TFS224431
    Note: I added this here instead of generic brushes so that it would be sure to be picked up in by themes -->
    <SolidColorBrush PresentationOptions:Freeze="true" x:Key="{x:Static igWindows:PrimitivesBrushKeys.ResizerBarFillKey}" themes:ResourceWasher.WashGroup="BaseColor" Color="#2E000000"/>
    
    <!-- _________________________ DynamicResourceString __________________________________________ -->
    <DataTemplate DataType="{x:Type shared:DynamicResourceString}">
        <TextBlock Text="{Binding Path=Value}" />
    </DataTemplate>

    <!-- _________________________ SortIndicator __________________________________________ -->
    <Style TargetType="{x:Type controls:SortIndicator}">
        <!-- JJD 11/29/10 - TFS59556 - By default this class if not hit test visible -->
        <!--<Setter Property="Cursor" Value="Hand" />-->
        <Setter Property="MinHeight" Value="3.5" />
        <Setter Property="MinWidth" Value="7" />
        <Setter Property="Visibility" Value="Hidden" />
        <Setter Property="Background" Value="{DynamicResource {ComponentResourceKey {x:Type controls:SortIndicator}, SortIndicatorBackground}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:SortIndicator}">
                    <Polygon Name="Arrow" Fill="{TemplateBinding Background}" Points="0,0 7,0 3.5,3.5" StrokeEndLineCap="Round" StrokeStartLineCap="Round" StrokeLineJoin="Round" />

                    <ControlTemplate.Triggers>
                        <Trigger Property="SortStatus" Value="Descending">
                            <Setter Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="SortStatus" Value="Ascending">
                            <Setter TargetName="Arrow" Property="Points" Value="0,3.5 7,3.5 3.5,0" />
                            <Setter Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="Arrow" Property="Polygon.Fill" Value="{DynamicResource {ComponentResourceKey {x:Type controls:SortIndicator}, SortIndicatorBackgroundHover}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- _________________________ ExpanderBar __________________________________________ -->
    <Style TargetType="{x:Type controls:ExpanderBar}">
        <Setter Property="Background">
            <Setter.Value>
                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                    <GradientStop Offset="0" Color="#FFFFFFFF" />
                    <GradientStop Offset=".06" Color="#FFFFFFFF" />
                    <GradientStop Offset=".37" Color="#FFD0D0D0" />
                    <GradientStop Offset=".61" Color="#FFCCCCCC" />
                    <GradientStop Offset=".63" Color="#FFBDBDBD" />
                    <GradientStop Offset=".71" Color="#FFBDBDBD" />
                    <GradientStop Offset=".74" Color="#FFD0D0D0" />
                    <GradientStop Offset="1" Color="#FFCECECE" />
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="BackgroundHover">
            <Setter.Value>
                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                    <GradientStop Offset="0" Color="#FFFFFFFF" />
                    <GradientStop Offset=".06" Color="#FFFFFFFF" />
                    <GradientStop Offset=".37" Color="#FFBED9EC" />
                    <GradientStop Offset=".61" Color="#FFC3DBED" />
                    <GradientStop Offset=".63" Color="#FFA4CDE9" />
                    <GradientStop Offset=".71" Color="#FF9DCAE9" />
                    <GradientStop Offset=".74" Color="#FFAED4ED" />
                    <GradientStop Offset="1" Color="#FFBADAF2" />
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="BorderBrush" Value="#FF898C95" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="BorderHoverBrush" Value="#FF4DA2E4" />
        <Setter Property="MinHeight" Value="10" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:ExpanderBar}">
                    <!--<Grid Height="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Height}">-->
                    <Grid>
                        <Rectangle x:Name="bgRect" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="{TemplateBinding BorderThickness}" Fill="{TemplateBinding Background}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="true" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="bgRect" Property="Fill" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BackgroundHover}" />
                            <Setter TargetName="bgRect" Property="Stroke" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderHoverBrush}" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- _________________________ ExpansionIndicator __________________________________________ -->
    <Style TargetType="{x:Type controls:ExpansionIndicator}">
        <Setter Property="Background">
            <Setter.Value>
                <LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
                    <GradientStop Color="sc#1, 0.57900393, 0.57900393, 0.57900393" Offset="1" />
                    <GradientStop Color="#FFFFFFFF" Offset="0.36153846153846259" />
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="BorderBrush" Value="#FF999999" />
        <Setter Property="Foreground" Value="#FF000000" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="ClipToBounds" Value="False" />
        <Setter Property="Margin" Value="5,0,3,0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:ExpansionIndicator}">
                    <Grid Background="#00FFFFFF">
                        <Grid Width="9" Height="9" x:Name="grdExpansionIndicatorClosed" RenderTransformOrigin="0.5,0.5" SnapsToDevicePixels="True">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition />
                            </Grid.RowDefinitions>
                            <Border Background="{TemplateBinding BorderBrush}" x:Name="outerBorder" RenderTransformOrigin="0.5,0.5" CornerRadius="2,2,2,2" />
                            <Border x:Name="innerFill" Margin="1,1,1,1" Width="Auto" Height="Auto" RenderTransformOrigin="0.5,0.5" CornerRadius="1.5,1.5,1.5,1.5" Background="{TemplateBinding Background}" />
                            <Rectangle Fill="{TemplateBinding Foreground}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="2,4,2,4" Width="Auto" Height="1" x:Name="plusHorizontal" RenderTransformOrigin="0.5,0.5" />
                            <Rectangle Fill="{TemplateBinding Foreground}" Margin="4,2,4,2" Width="1" Height="Auto" x:Name="plusVert" RenderTransformOrigin="0.5,0.5" />
                        </Grid>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <!-- Checked -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsChecked" Value="true" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="plusVert" Property="Visibility" Value="Collapsed" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- ==================== -->
    <!--     NA 2007 Vol 2    -->
    <!-- ==================== -->
    <!-- _________________________ Mouse Panning Images __________________________________________ -->
    <GeometryDrawing PresentationOptions:Freeze="true" x:Key="MousePanningCircle" Brush="White">
        <GeometryDrawing.Pen>
            <Pen Brush="Black" Thickness="1" />
        </GeometryDrawing.Pen>
        <GeometryDrawing.Geometry>
            <GeometryGroup>
                <EllipseGeometry RadiusX="12.5" RadiusY="12.5" Center="12.5,12.5" />
            </GeometryGroup>
        </GeometryDrawing.Geometry>
    </GeometryDrawing>
    <Pen PresentationOptions:Freeze="true" x:Key="WhitePen" Brush="White" Thickness="1" />
    <PathGeometry PresentationOptions:Freeze="true" x:Key="MousePanningCenterMark" Figures="M 9,10  L 10,10  10,9 13,9 13,10 14,10 14,13 13,13 13,14 10,14 10,13 9,13 Z" />
    <TranslateTransform PresentationOptions:Freeze="true" x:Key="TranslateTransform1by1" X="1" Y="1" />

    <!-- _________________________ Mouse Panning Image - All __________________________________________ -->
    <DrawingImage PresentationOptions:Freeze="true" x:Key="{x:Static controls:MousePanningDecorator.ScrollAllImageKey}">
        <DrawingImage.Drawing>
            <DrawingGroup>
                <StaticResource ResourceKey="MousePanningCircle" />
                <GeometryDrawing Brush="Black" Pen="{StaticResource WhitePen}">
                    <GeometryDrawing.Geometry>
                        <GeometryGroup Transform="{StaticResource TranslateTransform1by1}">
                            <PathGeometry Figures="M 11, 0 L 12,0  17,6  6,6 Z" />
                            <PathGeometry Figures="M 11,23 L 12,23 17,17 6,17  Z" />
                            <PathGeometry Figures="M 17, 6 L 23,11 23,12 17,17 Z" />
                            <PathGeometry Figures="M 0,11  L 0,12  6,17  6,6 Z" />
                            <StaticResource ResourceKey="MousePanningCenterMark" />
                        </GeometryGroup>
                    </GeometryDrawing.Geometry>
                </GeometryDrawing>
            </DrawingGroup>
        </DrawingImage.Drawing>
    </DrawingImage>

    <!-- _________________________ Mouse Panning Image - NS __________________________________________ -->
    <DrawingImage PresentationOptions:Freeze="true" x:Key="{x:Static controls:MousePanningDecorator.ScrollNSImageKey}">
        <DrawingImage.Drawing>
            <DrawingGroup>
                <StaticResource ResourceKey="MousePanningCircle" />
                <GeometryDrawing Brush="Black" Pen="{StaticResource WhitePen}">
                    <GeometryDrawing.Geometry>
                        <GeometryGroup Transform="{StaticResource TranslateTransform1by1}">
                            <PathGeometry Figures="M 11, 0 L 12,0  19,8  4,8 Z" />
                            <PathGeometry Figures="M 11,23 L 12,23 19,15 4,15  Z" />
                            <StaticResource ResourceKey="MousePanningCenterMark" />
                        </GeometryGroup>
                    </GeometryDrawing.Geometry>
                </GeometryDrawing>
            </DrawingGroup>
        </DrawingImage.Drawing>
    </DrawingImage>

    <!-- _________________________ Mouse Panning Image - EW __________________________________________ -->
    <DrawingImage PresentationOptions:Freeze="true" x:Key="{x:Static controls:MousePanningDecorator.ScrollEWImageKey}">
        <DrawingImage.Drawing>
            <DrawingGroup>
                <StaticResource ResourceKey="MousePanningCircle" />
                <GeometryDrawing Brush="Black" Pen="{StaticResource WhitePen}">
                    <GeometryDrawing.Geometry>
                        <GeometryGroup Transform="{StaticResource TranslateTransform1by1}">
                            <PathGeometry Figures="M 15,4 L 23,11 23,12 15,19 Z" />
                            <PathGeometry Figures="M 0,11 L 0,12  8,19  8,4 Z" />
                            <StaticResource ResourceKey="MousePanningCenterMark" />
                        </GeometryGroup>
                    </GeometryDrawing.Geometry>
                </GeometryDrawing>
            </DrawingGroup>
        </DrawingImage.Drawing>
    </DrawingImage>

    <!-- _________________________ XamPager Resources __________________________________________ -->
    <!-- ************************************************** -->
    <!-- XamPager Resources -->
    <!-- ************************************************** -->
    <Style TargetType="{x:Type RepeatButton}" x:Key="PagerScrollBtnBase">
        <!--<Setter Property="ClickMode" Value="Hover"/>-->
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Background" Value="#CCCCCC" />
        <Setter Property="Foreground" Value="Black" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="BorderBrush" Value="Black" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="3" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="3">
                        <Path Margin="{TemplateBinding Padding}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Data="{Binding Path=Content, RelativeSource={RelativeSource TemplatedParent}}" Fill="{TemplateBinding Foreground}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="White" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type RepeatButton}" BasedOn="{StaticResource PagerScrollBtnBase}" x:Key="Pager_ScrollLeftButtonStyle">
        <Setter Property="Content" Value="M 4,0 L 4,8 0,4 Z" />
    </Style>
    <Style TargetType="{x:Type RepeatButton}" BasedOn="{StaticResource PagerScrollBtnBase}" x:Key="Pager_ScrollUpButtonStyle">
        <Setter Property="Content" Value="M 0,4 L 8,4 4,0 Z" />
    </Style>
    <Style TargetType="{x:Type RepeatButton}" BasedOn="{StaticResource PagerScrollBtnBase}" x:Key="Pager_ScrollRightButtonStyle">
        <Setter Property="Content" Value="M 0,0 L 0,8 4,4 Z" />
    </Style>
    <Style TargetType="{x:Type RepeatButton}" BasedOn="{StaticResource PagerScrollBtnBase}" x:Key="Pager_ScrollDownButtonStyle">
        <Setter Property="Content" Value="M 0,0 L 8,0 4,4 Z" />
    </Style>
    <!-- ************************************************** -->
    <!-- End XamPager Resources -->
    <!-- ************************************************** -->

    <!-- _________________________ XamPager __________________________________________ -->
    <Style TargetType="{x:Type controls:XamPager}" BasedOn="{StaticResource {x:Type ScrollViewer}}">
        <Setter Property="ScrollLeftButtonStyle" Value="{StaticResource Pager_ScrollLeftButtonStyle}" />
        <Setter Property="ScrollRightButtonStyle" Value="{StaticResource Pager_ScrollRightButtonStyle}" />
        <Setter Property="ScrollUpButtonStyle" Value="{StaticResource Pager_ScrollUpButtonStyle}" />
        <Setter Property="ScrollDownButtonStyle" Value="{StaticResource Pager_ScrollDownButtonStyle}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:XamPager}">
                    <Grid Background="{TemplateBinding Background}">
                        <Grid.RowDefinitions>
                            <RowDefinition x:Name="gridRow0" Height="Auto" />
                            <RowDefinition x:Name="gridRow1" Height="*" />
                            <RowDefinition x:Name="gridRow2" Height="Auto" />
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition x:Name="gridCol0" Width="Auto" />
                            <ColumnDefinition x:Name="gridCol1" Width="*" />
                            <ColumnDefinition x:Name="gridCol2" Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <RepeatButton x:Name="PART_ScrollLeft" Grid.Column="0" Grid.Row="1" Panel.ZIndex="1" Style="{TemplateBinding ScrollLeftButtonStyle}" Visibility="{TemplateBinding ScrollLeftVisibility}" Command="{x:Static ScrollBar.LineLeftCommand}" CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}" />
                        <RepeatButton x:Name="PART_ScrollUp" Grid.Column="1" Grid.Row="0" Panel.ZIndex="1" Style="{TemplateBinding ScrollUpButtonStyle}" Visibility="{TemplateBinding ScrollUpVisibility}" Command="{x:Static ScrollBar.LineUpCommand}" CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}" />
                        <RepeatButton x:Name="PART_ScrollRight" Grid.Row="1" Grid.Column="2" Panel.ZIndex="1" Style="{TemplateBinding ScrollRightButtonStyle}" Visibility="{TemplateBinding ScrollRightVisibility}" Command="{x:Static ScrollBar.LineRightCommand}" CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}" />
                        <RepeatButton x:Name="PART_ScrollDown" Grid.Column="1" Grid.Row="2" Panel.ZIndex="1" Style="{TemplateBinding ScrollDownButtonStyle}" Visibility="{TemplateBinding ScrollDownVisibility}" Command="{x:Static ScrollBar.LineDownCommand}" CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}" />
                        <controls:PagerContentPresenter x:Name="PART_PagerContentPresenter" Panel.ZIndex="0" CanContentScroll="{TemplateBinding CanContentScroll}" Margin="{TemplateBinding Padding}" Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="3" Grid.RowSpan="3" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HorizontalScrollBarVisibility" Value="Visible">
                            <Setter Property="Grid.Column" TargetName="PART_PagerContentPresenter" Value="1" />
                            <Setter Property="Grid.ColumnSpan" TargetName="PART_PagerContentPresenter" Value="1" />
                        </Trigger>
                        <Trigger Property="VerticalScrollBarVisibility" Value="Visible">
                            <Setter Property="Grid.Row" TargetName="PART_PagerContentPresenter" Value="1" />
                            <Setter Property="Grid.RowSpan" TargetName="PART_PagerContentPresenter" Value="1" />
                        </Trigger>
                        <Trigger Property="ComputedVerticalScrollBarVisibility" Value="Collapsed">
                            <Setter TargetName="gridRow0" Property="Height" Value="0" />
                            <Setter TargetName="gridRow2" Property="Height" Value="0" />
                            <Setter Property="Grid.Row" TargetName="PART_PagerContentPresenter" Value="1" />
                            <Setter Property="Grid.RowSpan" TargetName="PART_PagerContentPresenter" Value="1" />
                        </Trigger>
                        <Trigger Property="ComputedHorizontalScrollBarVisibility" Value="Collapsed">
                            <Setter TargetName="gridCol0" Property="Width" Value="0" />
                            <Setter TargetName="gridCol2" Property="Width" Value="0" />
                            <Setter Property="Grid.Row" TargetName="PART_PagerContentPresenter" Value="1" />
                            <Setter Property="Grid.RowSpan" TargetName="PART_PagerContentPresenter" Value="1" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--SSP 8/10/08 Moveable Fields Feature -->
    <!-- _________________________ DropIndicator ______________________________________ -->
    <Style TargetType="{x:Type controls:DropIndicator}" BasedOn="{x:Null}">
        <Setter Property="Background" Value="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.DropIndicatorFillKey}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:DropIndicator}">
                    <ControlTemplate.Resources>

                        <Storyboard x:Key="ArrowTL">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="TL1" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00" Value="-4.669" />
                                <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="TL2" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00" Value="-4.669" />
                                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="TL2" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0" />
                                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="1" />
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="TL1" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0" />
                                <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="1" />
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="BR1" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00" Value="5" />
                                <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="BR2" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00" Value="5" />
                                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="BR1" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0" />
                                <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="1" />
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="BR2" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0" />
                                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="1" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>

                    </ControlTemplate.Resources>
                    <StackPanel x:Name="mainPanel" Orientation="Vertical">
                        <Grid x:Name="ArrowTL" Width="12" Height="25">
                            <Path x:Name="TL2" Margin="0,0,0,5" HorizontalAlignment="Center" VerticalAlignment="Bottom" Width="8" Stretch="Fill" Opacity="1" Data="M 5,10 C5,10 0,5 0,5 0,5 0,0 0,0 0,0 5,5 5,5 5,5 10,0 10,0 10,0 10,5 10,5 10,5 5,10 5,10 z" Stroke="#4CFFFFFF" Fill="{TemplateBinding Background}" RenderTransformOrigin="0.5,0.5" Height="6">
                                <Path.RenderTransform>
                                    <TransformGroup>
                                        <ScaleTransform ScaleX="1" ScaleY="1" />
                                        <SkewTransform AngleX="0" AngleY="0" />
                                        <RotateTransform Angle="0" />
                                        <TranslateTransform X="0" Y="0" />
                                    </TransformGroup>
                                </Path.RenderTransform>
                            </Path>
                            <Path x:Name="TL1" Stretch="Fill" Opacity="1" Data="M 5,10 C5,10 0,5 0,5 0,5 0,0 0,0 0,0 5,5 5,5 5,5 10,0 10,0 10,0 10,5 10,5 10,5 5,10 5,10 z" VerticalAlignment="Bottom" HorizontalAlignment="Center" Width="8" Height="6" Stroke="#4CFFFFFF" Fill="{TemplateBinding Background}" RenderTransformOrigin="0.5,0.5">
                                <Path.RenderTransform>
                                    <TransformGroup>
                                        <ScaleTransform ScaleX="1" ScaleY="1" />
                                        <SkewTransform AngleX="0" AngleY="0" />
                                        <RotateTransform Angle="0" />
                                        <TranslateTransform X="0" Y="0" />
                                    </TransformGroup>
                                </Path.RenderTransform>
                            </Path>
                        </Grid>
                        <!--Location of element is used to properly align the drop indicator with the drop target field-->
                        <Rectangle x:Name="PART_Offset" Width="1" Height="1" HorizontalAlignment="Center" VerticalAlignment="Center" Visibility="Hidden" />
                        <Rectangle x:Name="spaceRect" Width="{TemplateBinding DropTargetWidth}" Height="{TemplateBinding DropTargetHeight}" Visibility="Hidden" HorizontalAlignment="Center" VerticalAlignment="Center" Stroke="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.DropTargetStrokeKey}}" StrokeThickness="2" RadiusX="3" RadiusY="3" />
                        <Grid Width="12" Height="25" x:Name="ArrowBR">
                            <Path x:Name="BR1" Stretch="Fill" Opacity="1" Data="M 5,0 C5,0 0,5 0,5 0,5 0,10 0,10 0,10 5,5 5,5 5,5 10,10 10,10 10,10 10,5 10,5 10,5 5,0 5,0 z" Fill="{TemplateBinding Background}" Width="8" Height="6" VerticalAlignment="Top" Stroke="#4CFFFFFF" RenderTransformOrigin="0.5,0.5">
                                <Path.RenderTransform>
                                    <TransformGroup>
                                        <ScaleTransform ScaleX="1" ScaleY="1" />
                                        <SkewTransform AngleX="0" AngleY="0" />
                                        <RotateTransform Angle="0" />
                                        <TranslateTransform X="0" Y="0" />
                                    </TransformGroup>
                                </Path.RenderTransform>
                            </Path>
                            <Path x:Name="BR2" Stretch="Fill" Opacity="1" Data="M 5,0 C5,0 0,5 0,5 0,5 0,10 0,10 0,10 5,5 5,5 5,5 10,10 10,10 10,10 10,5 10,5 10,5 5,0 5,0 z" Fill="{TemplateBinding Background}" VerticalAlignment="Top" Width="8" Height="6" Stroke="#4CFFFFFF" RenderTransformOrigin="0.5,0.5" Margin="0,5,0,0">
                                <Path.RenderTransform>
                                    <TransformGroup>
                                        <ScaleTransform ScaleX="1" ScaleY="1" />
                                        <SkewTransform AngleX="0" AngleY="0" />
                                        <RotateTransform Angle="0" />
                                        <TranslateTransform X="0" Y="0" />
                                    </TransformGroup>
                                </Path.RenderTransform>
                            </Path>
                        </Grid>
                    </StackPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Orientation" Value="Horizontal">
                            <Setter TargetName="spaceRect" Property="Height" Value="1" />
                            <Setter TargetName="mainPanel" Property="Orientation" Value="Horizontal" />
                            <Setter TargetName="ArrowTL" Property="LayoutTransform">
                                <Setter.Value>
                                    <RotateTransform CenterX="15" CenterY="50" Angle="-90" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="ArrowBR" Property="LayoutTransform">
                                <Setter.Value>
                                    <RotateTransform CenterX="15" CenterY="0" Angle="-90" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>

                        <Trigger Property="Orientation" Value="Vertical">
                            <Setter TargetName="spaceRect" Property="Width" Value="1" />
                        </Trigger>

                        <!-- JJD 9/18/09
                             Use event triggers below instead of property triggers which can root the element 
                             in certain situations due to a bug in the WPF framework
                        
                        <Trigger Property="DropLocation" Value="{x:Null}">
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource ArrowTL}" x:Name="ArrowTL_SB"/>
                                <StopStoryboard BeginStoryboardName="ArrowTL_SB"/>
                            </Trigger.EnterActions>
                        </Trigger>

                        
                        <Trigger Property="DropLocation" Value="LeftOfTarget">
                            <Trigger.EnterActions>
                                <SeekStoryboard BeginStoryboardName="ArrowTL_SB" Offset="0:0:0" Origin="BeginTime" />
                                <ResumeStoryboard BeginStoryboardName="ArrowTL_SB" />
                            </Trigger.EnterActions>
                        </Trigger>
                        <Trigger Property="DropLocation" Value="RightOfTarget">
                            <Trigger.EnterActions>
                                <SeekStoryboard BeginStoryboardName="ArrowTL_SB" Offset="0:0:0" Origin="BeginTime" />
                                <ResumeStoryboard BeginStoryboardName="ArrowTL_SB" />
                            </Trigger.EnterActions>
                        </Trigger>
                        <Trigger Property="DropLocation" Value="AboveTarget">
                            <Trigger.EnterActions>
                                <SeekStoryboard BeginStoryboardName="ArrowTL_SB" Offset="0:0:0" Origin="BeginTime" />
                                <ResumeStoryboard BeginStoryboardName="ArrowTL_SB" />
                            </Trigger.EnterActions>
                        </Trigger>
                        <Trigger Property="DropLocation" Value="BelowTarget">
                            <Trigger.EnterActions>
                                <SeekStoryboard BeginStoryboardName="ArrowTL_SB" Offset="0:0:0" Origin="BeginTime" />
                                <ResumeStoryboard BeginStoryboardName="ArrowTL_SB" />
                            </Trigger.EnterActions>
                        </Trigger>
                        -->

                        <Trigger Property="DropLocation" Value="OverTarget">
                            <!-- JJD 9/18/09 - Use event rtiggers below instead to prevent rooting
                            <Trigger.ExitActions>
                                <StopStoryboard BeginStoryboardName="ArrowTL_SB"/>
                            </Trigger.ExitActions>-->
                            <Setter TargetName="spaceRect" Property="Visibility" Value="Visible" />
                            <Setter TargetName="ArrowTL" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="ArrowBR" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="PART_Offset" Property="HorizontalAlignment" Value="Left" />
                            <Setter TargetName="PART_Offset" Property="VerticalAlignment" Value="Top" />
                        </Trigger>

                        <EventTrigger RoutedEvent="controls:DropIndicator.DropTargetInitialize">
                            <EventTrigger.Actions>
                                <BeginStoryboard Storyboard="{StaticResource ArrowTL}" x:Name="ArrowTL_SB" />
                                <StopStoryboard BeginStoryboardName="ArrowTL_SB" />
                            </EventTrigger.Actions>
                        </EventTrigger>

                        <EventTrigger RoutedEvent="controls:DropIndicator.DropTargetEnter">
                            <EventTrigger.Actions>
                                <SeekStoryboard BeginStoryboardName="ArrowTL_SB" Offset="0:0:0" Origin="BeginTime" />
                                <ResumeStoryboard BeginStoryboardName="ArrowTL_SB" />
                            </EventTrigger.Actions>
                        </EventTrigger>

                        <EventTrigger RoutedEvent="controls:DropIndicator.DropTargetLeave">
                            <EventTrigger.Actions>
                                <StopStoryboard BeginStoryboardName="ArrowTL_SB" />
                            </EventTrigger.Actions>
                        </EventTrigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- ==================== -->
    <!--     NA 2009 Vol 1    -->
    <!-- ==================== -->

    <!-- =============================================================================== -->
    <!-- ComparisonOperatorSelector operator images                                                        -->
    <!-- =============================================================================== -->
    <!-- JJD 03/10/16 - Since we switched to using a DynamicResource the DrawingImage can't be frozen so use x:Shared="false" instead -->
    <DrawingImage x:Key="{x:Static igWindows:ComparisonOperatorSelector.OperatorEqualsImageKey}" ig:Utilities.SnapElementToDevicePixels="True" x:Shared="false">
      <DrawingImage.Drawing>
        <GeometryDrawing Brush="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.ComparisonOperatorSelectorDrawingImagesFill}}">
          <GeometryDrawing.Geometry>
            <PathGeometry Figures="M 0,2 C0,3 0,6 0,6 0,6 10,6 10,6 10,6 10,4 10,4 10,4 0,4 0,4 zM 0,0 C0,0 0,2 0,2 0,2 10,2 10,2 10,2 10,0 10,0 10,0 0,0 0,0 z" />
          </GeometryDrawing.Geometry>
        </GeometryDrawing>
      </DrawingImage.Drawing>
    </DrawingImage>

    <!-- JJD 03/10/16 - Since we switched to using a DynamicResource the DrawingImage can't be frozen so use x:Shared="false" instead -->
    <DrawingImage x:Key="{x:Static igWindows:ComparisonOperatorSelector.OperatorNotEqualsImageKey}" ig:Utilities.SnapElementToDevicePixels="True" x:Shared="false">
      <DrawingImage.Drawing>
        <GeometryDrawing Brush="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.ComparisonOperatorSelectorDrawingImagesFill}}">
          <GeometryDrawing.Geometry>
            <GeometryGroup FillRule="NonZero">
              <PathGeometry Figures="M 0,2 C0,3 0,6 0,6 0,6 10,6 10,6 10,6 10,4 10,4 10,4 0,4 0,4 zM 0,0 C0,0 0,2 0,2 0,2 10,2 10,2 10,2 10,0 10,0 10,0 0,0 0,0 z">
                <PathGeometry.Transform>
                  <TranslateTransform Y="2" />
                </PathGeometry.Transform>
              </PathGeometry>
              <PathGeometry Figures="M 0,10 C0,10 2,10 2,10 2,10 8,0 8,0 8,0 6,0 6,0 6,0 0,10 0,10 z">
                <PathGeometry.Transform>
                  <ScaleTransform ScaleX="1.25" />
                </PathGeometry.Transform>
              </PathGeometry>
            </GeometryGroup>
          </GeometryDrawing.Geometry>
        </GeometryDrawing>
      </DrawingImage.Drawing>
    </DrawingImage>

    <!-- JJD 03/10/16 - Since we switched to using a DynamicResource the DrawingImage can't be frozen so use x:Shared="false" instead -->
    <DrawingImage x:Key="{x:Static igWindows:ComparisonOperatorSelector.OperatorLessThanImageKey}" ig:Utilities.SnapElementToDevicePixels="True" x:Shared="false">
      <DrawingImage.Drawing>
        <GeometryDrawing Brush="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.ComparisonOperatorSelectorDrawingImagesFill}}">
          <GeometryDrawing.Geometry>
            <PathGeometry Figures="M 7,0 C7,0 8,1 8,1 8,1 3,4 3,4 3,4 8,7 8,7 8,7 7,8 7,8 7,8 0,4 0,4 0,4 7,0 7,0 z" />
          </GeometryDrawing.Geometry>
        </GeometryDrawing>
      </DrawingImage.Drawing>
    </DrawingImage>

    <!-- JJD 03/10/16 - Since we switched to using a DynamicResource the DrawingImage can't be frozen so use x:Shared="false" instead -->
    <DrawingImage x:Key="{x:Static igWindows:ComparisonOperatorSelector.OperatorLessThanOrEqualToImageKey}" ig:Utilities.SnapElementToDevicePixels="True" x:Shared="false">
      <DrawingImage.Drawing>
        <GeometryDrawing Brush="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.ComparisonOperatorSelectorDrawingImagesFill}}">
          <GeometryDrawing.Geometry>
            <GeometryGroup FillRule="NonZero">
              <PathGeometry Figures="M 7,0 C7,0 8,1 8,1 8,1 3,4 3,4 3,4 8,7 8,7 8,7 7,8 7,8 7,8 0,4 0,4 0,4 7,0 7,0 z">
                <PathGeometry.Transform>
                  <ScaleTransform ScaleY="0.75" />
                </PathGeometry.Transform>
              </PathGeometry>
              <RectangleGeometry Rect="0,0,8,1">
                <RectangleGeometry.Transform>
                  <TranslateTransform Y="7" />
                </RectangleGeometry.Transform>
              </RectangleGeometry>
            </GeometryGroup>
          </GeometryDrawing.Geometry>
        </GeometryDrawing>
      </DrawingImage.Drawing>
    </DrawingImage>

    <!-- JJD 03/10/16 - Since we switched to using a DynamicResource the DrawingImage can't be frozen so use x:Shared="false" instead -->
    <DrawingImage x:Key="{x:Static igWindows:ComparisonOperatorSelector.OperatorGreaterThanImageKey}" ig:Utilities.SnapElementToDevicePixels="True" x:Shared="false">
      <DrawingImage.Drawing>
        <GeometryDrawing Brush="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.ComparisonOperatorSelectorDrawingImagesFill}}">
          <GeometryDrawing.Geometry>
            <PathGeometry Figures="M 1,0 C1,0 0,1 0,1 0,1 5,4 5,4 5,4 0,7 0,7 0,7 1,8 1,8 1,8 8,4 8,4 8,4 1,0 1,0 z" />
          </GeometryDrawing.Geometry>
        </GeometryDrawing>
      </DrawingImage.Drawing>
    </DrawingImage>

    <!-- JJD 03/10/16 - Since we switched to using a DynamicResource the DrawingImage can't be frozen so use x:Shared="false" instead -->
    <DrawingImage x:Key="{x:Static igWindows:ComparisonOperatorSelector.OperatorGreaterThanOrEqualToImageKey}" ig:Utilities.SnapElementToDevicePixels="True" x:Shared="false">
      <DrawingImage.Drawing>
        <GeometryDrawing Brush="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.ComparisonOperatorSelectorDrawingImagesFill}}">
          <GeometryDrawing.Geometry>
            <GeometryGroup FillRule="NonZero">
              <PathGeometry Figures="M 1,0 C1,0 0,1 0,1 0,1 5,4 5,4 5,4 0,7 0,7 0,7 1,8 1,8 1,8 8,4 8,4 8,4 1,0 1,0 z">
                <PathGeometry.Transform>
                  <ScaleTransform ScaleY="0.75" />
                </PathGeometry.Transform>
              </PathGeometry>
              <RectangleGeometry Rect="0,0,8,1">
                <RectangleGeometry.Transform>
                  <TranslateTransform Y="7" />
                </RectangleGeometry.Transform>
              </RectangleGeometry>
            </GeometryGroup>
          </GeometryDrawing.Geometry>
        </GeometryDrawing>
      </DrawingImage.Drawing>
    </DrawingImage>

    <!-- JJD 03/10/16 - Since we switched to using a DynamicResource the DrawingImage can't be frozen so use x:Shared="false" instead -->
    <DrawingImage x:Key="{x:Static igWindows:ComparisonOperatorSelector.OperatorContainsImageKey}" ig:Utilities.SnapElementToDevicePixels="True" x:Shared="false">
      <DrawingImage.Drawing>
        <GeometryDrawing Brush="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.ComparisonOperatorSelectorDrawingImagesFill}}">
          <GeometryDrawing.Geometry>
            <GeometryGroup FillRule="NonZero">
              <RectangleGeometry Rect="0,0,12,1" />
              <RectangleGeometry Rect="11,0,1,12" />
              <RectangleGeometry Rect="0,11,12,1" />
              <RectangleGeometry Rect="0,0,1,12" />
              <RectangleGeometry Rect="3,3,6,6" />
            </GeometryGroup>
          </GeometryDrawing.Geometry>
        </GeometryDrawing>
      </DrawingImage.Drawing>
    </DrawingImage>

    <!-- JJD 03/10/16 - Since we switched to using a DynamicResource the DrawingImage can't be frozen so use x:Shared="false" instead -->
    <DrawingImage x:Key="{x:Static igWindows:ComparisonOperatorSelector.OperatorDoesNotContainImageKey}" ig:Utilities.SnapElementToDevicePixels="True" x:Shared="false">
      <DrawingImage.Drawing>
        <DrawingGroup>
          <GeometryDrawing Brush="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.ComparisonOperatorSelectorDrawingImagesFill}}">
            <GeometryDrawing.Geometry>
              <GeometryGroup>
                <RectangleGeometry Rect="3,0,6,1" />
                <RectangleGeometry Rect="11,3,1,6" />
                <RectangleGeometry Rect="3,11,6,1" />
                <RectangleGeometry Rect="0,3,1,6" />
                <RectangleGeometry Rect="3,3,6,6" />
              </GeometryGroup>
            </GeometryDrawing.Geometry>
          </GeometryDrawing>
          <GeometryDrawing Brush="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.ComparisonOperatorSelectorDrawingImagesFill}}">
            <GeometryDrawing.Geometry>
              <GeometryGroup>
                <PathGeometry Figures="M0,12 C0,12 0,12 0,12 C2,12 2,12 2,12 C12,0 12,0 12,0 C10,0 10,0 10,0 z" />
              </GeometryGroup>
            </GeometryDrawing.Geometry>
          </GeometryDrawing>
        </DrawingGroup>
      </DrawingImage.Drawing>
    </DrawingImage>

    <!-- NAS14.1 - In/NotIn Operators-->
    <!-- JJD 03/10/16 - Since we switched to using a DynamicResource the DrawingImage can't be frozen so use x:Shared="false" instead -->
    <DrawingImage x:Key="{x:Static igWindows:ComparisonOperatorSelector.OperatorInImageKey}" ig:Utilities.SnapElementToDevicePixels="True" x:Shared="false">
      <DrawingImage.Drawing>
        <GeometryDrawing Brush="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.ComparisonOperatorSelectorDrawingImagesFill}}">
          <GeometryDrawing.Geometry>
            <PathGeometry Figures="M5,4 L6,4 6,5 5,5 z M4,3 L5,3 5,4 4,4 z M7,0 L8,0 8,8 7,8 7,7 6,7 6,6 6,5 7,5 z M2,0 L3,0 3,1 4,1 4,2 4,3 3,3 3,8 2,8 z M0,0 L1,0 1,8 0,8 z" />
          </GeometryDrawing.Geometry>
        </GeometryDrawing>
      </DrawingImage.Drawing>
    </DrawingImage>

    <!-- NAS14.1 - In/NotIn Operators-->
    <!-- JJD 03/10/16 - Since we switched to using a DynamicResource the DrawingImage can't be frozen so use x:Shared="false" instead -->
    <DrawingImage x:Key="{x:Static igWindows:ComparisonOperatorSelector.OperatorNotInImageKey}" ig:Utilities.SnapElementToDevicePixels="True" x:Shared="false">
      <DrawingImage.Drawing>
        <GeometryDrawing Brush="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.ComparisonOperatorSelectorDrawingImagesFill}}">
          <GeometryDrawing.Geometry>
            <PathGeometry Figures="M0,11 L1,11 1,12 0,12 z M1,10 L2.0000001,10 2.0000001,11 1,11 z M7,6 L8,6 8,7 7,7 z M6,5 L7,5 7,6 6,6 z M7,4 L8,4 8,5 7,5 z M9,2.0000001 L10,2.0000001 10,2.9999998 10,10 9,10 9,9 8,9 8,8 8,7 9,7 9,4 8,4 8,2.9999998 9,2.9999998 z M2.0000001,2.0000001 L3,2.0000001 3,8 4,8 4,7 4,2.0000001 5,2.0000001 5,3 6,3 6,4 6,5 5,5 5,6 6,6 6,7 5,7 5,8 5,10 4,10 4,9 3,9 3,10 2.0000001,10 2.0000001,9&#xD;&#xA; z M10,1 L11,1 11,2.0000001 10,2.0000001 z M11,0 L12,0 12,1 11,1 z" />
          </GeometryDrawing.Geometry>
        </GeometryDrawing>
      </DrawingImage.Drawing>
    </DrawingImage>

    <!-- JJD 03/10/16 - Since we switched to using a DynamicResource the DrawingImage can't be frozen so use x:Shared="false" instead -->
    <DrawingImage x:Key="{x:Static igWindows:ComparisonOperatorSelector.OperatorLikeImageKey}" ig:Utilities.SnapElementToDevicePixels="True" x:Shared="false">
      <DrawingImage.Drawing>
        <GeometryDrawing Brush="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.ComparisonOperatorSelectorDrawingImagesFill}}">
          <GeometryDrawing.Geometry>
            <GeometryGroup FillRule="NonZero">
              <RectangleGeometry Rect="2,2,6,6" />
              <RectangleGeometry Rect="2,2,6,6">
                <RectangleGeometry.Transform>
                  <RotateTransform Angle="45" CenterX="5" CenterY="5" />
                </RectangleGeometry.Transform>
              </RectangleGeometry>
            </GeometryGroup>
          </GeometryDrawing.Geometry>
        </GeometryDrawing>
      </DrawingImage.Drawing>
    </DrawingImage>

    <!-- JJD 03/10/16 - Since we switched to using a DynamicResource the DrawingImage can't be frozen so use x:Shared="false" instead -->
    <DrawingImage x:Key="{x:Static igWindows:ComparisonOperatorSelector.OperatorNotLikeImageKey}" ig:Utilities.SnapElementToDevicePixels="True" x:Shared="false">
      <DrawingImage.Drawing>
        <GeometryDrawing Brush="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.ComparisonOperatorSelectorDrawingImagesFill}}">
          <GeometryDrawing.Geometry>
            <GeometryGroup FillRule="NonZero">
              <RectangleGeometry Rect="4,3,6,6" />
              <RectangleGeometry Rect="4,3,6,6">
                <RectangleGeometry.Transform>
                  <RotateTransform Angle="45" CenterX="7" CenterY="6" />
                </RectangleGeometry.Transform>
              </RectangleGeometry>
              <PathGeometry Figures="M0,12 C0,12 0,12 0,12 C2,12 2,12 2,12 C12,0 12,0 12,0 C10,0 10,0 10,0 z" />
            </GeometryGroup>
          </GeometryDrawing.Geometry>
        </GeometryDrawing>
      </DrawingImage.Drawing>
    </DrawingImage>

    <!-- JJD 03/10/16 - Since we switched to using a DynamicResource the DrawingImage can't be frozen so use x:Shared="false" instead -->
    <DrawingImage x:Key="{x:Static igWindows:ComparisonOperatorSelector.OperatorMatchImageKey}" ig:Utilities.SnapElementToDevicePixels="True" x:Shared="false">
      <DrawingImage.Drawing>
        <GeometryDrawing Brush="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.ComparisonOperatorSelectorDrawingImagesFill}}">
          <GeometryDrawing.Geometry>
            <GeometryGroup FillRule="NonZero">
              <RectangleGeometry Rect="0,0,3,3">
                <RectangleGeometry.Transform>
                  <TranslateTransform Y="4" />
                </RectangleGeometry.Transform>
              </RectangleGeometry>
              <RectangleGeometry Rect="3,1,6,1">
                <RectangleGeometry.Transform>
                  <TranslateTransform Y="4" />
                </RectangleGeometry.Transform>
              </RectangleGeometry>
              <RectangleGeometry Rect="9,0,3,3">
                <RectangleGeometry.Transform>
                  <TranslateTransform Y="4" />
                </RectangleGeometry.Transform>
              </RectangleGeometry>
            </GeometryGroup>
          </GeometryDrawing.Geometry>
        </GeometryDrawing>
      </DrawingImage.Drawing>
    </DrawingImage>

    <!-- JJD 03/10/16 - Since we switched to using a DynamicResource the DrawingImage can't be frozen so use x:Shared="false" instead -->
    <DrawingImage x:Key="{x:Static igWindows:ComparisonOperatorSelector.OperatorDoesNotMatchImageKey}" ig:Utilities.SnapElementToDevicePixels="True" x:Shared="false">
      <DrawingImage.Drawing>
        <GeometryDrawing Brush="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.ComparisonOperatorSelectorDrawingImagesFill}}">
          <GeometryDrawing.Geometry>
            <GeometryGroup FillRule="NonZero">
              <RectangleGeometry Rect="0,0,3,3">
                <RectangleGeometry.Transform>
                  <TranslateTransform Y="4" />
                </RectangleGeometry.Transform>
              </RectangleGeometry>
              <RectangleGeometry Rect="4,1,4,1">
                <RectangleGeometry.Transform>
                  <TranslateTransform Y="4" />
                </RectangleGeometry.Transform>
              </RectangleGeometry>
              <RectangleGeometry Rect="9,0,3,3">
                <RectangleGeometry.Transform>
                  <TranslateTransform Y="4" />
                </RectangleGeometry.Transform>
              </RectangleGeometry>
            </GeometryGroup>
          </GeometryDrawing.Geometry>
        </GeometryDrawing>
      </DrawingImage.Drawing>
    </DrawingImage>

    <!-- JJD 03/10/16 - Since we switched to using a DynamicResource the DrawingImage can't be frozen so use x:Shared="false" instead -->
    <DrawingImage x:Key="{x:Static igWindows:ComparisonOperatorSelector.OperatorStartsWithImageKey}" ig:Utilities.SnapElementToDevicePixels="True" x:Shared="false">
      <DrawingImage.Drawing>
        <GeometryDrawing Brush="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.ComparisonOperatorSelectorDrawingImagesFill}}">
          <GeometryDrawing.Geometry>
            <GeometryGroup FillRule="NonZero">
              <PathGeometry Figures="M3.5126953,5.1024218 C3.4768879,5.3208466 3.4357095,5.4927216 3.3891602,5.6180468 L2.1914063,8.899785 L4.8608398,8.899785 L3.6523438,5.6180468 C3.6129556,5.5106254 3.5735674,5.3387504 3.5341797,5.1024218 z M3.0722656,4.1678514 L4.0068359,4.1678514 L6.9716797,11.87 L5.9726563,11.87 L5.15625,9.7108202 L1.890625,9.7108202 L1.1225586,11.87 L0.11816403,11.87 z" />
              <PathGeometry Figures="M3.9477539,9.087656 L2.6210938,9.2702732 C2.2128906,9.3275652 1.9049479,9.4287205 1.6972656,9.57374 C1.4895833,9.7187595 1.3857422,9.9756775 1.3857422,10.344492 C1.3857422,10.613047 1.4815266,10.832366 1.6730957,11.002451 C1.8646647,11.172536 2.1197915,11.257578 2.4384766,11.257578 C2.8753252,11.257578 3.2360837,11.104502 3.520752,10.798349 C3.8054197,10.492197 3.9477537,10.104584 3.9477539,9.6355076 z M2.8896484,6.2409763 C4.1822915,6.2409763 4.8286133,6.9248958 4.8286133,8.2927341 L4.8286133,11.869883 L3.9477539,11.869883 L3.9477539,11.010508 L3.9262695,11.010508 C3.5431314,11.669362 2.9791665,11.998789 2.234375,11.998789 C1.6865234,11.998789 1.2577311,11.853769 0.94799799,11.56373 C0.63826495,11.273691 0.48339841,10.888762 0.48339844,10.408945 C0.48339841,9.3812761 1.0885416,8.7832947 2.2988281,8.6149998 L3.9477539,8.3840427 C3.9477537,7.4494724 3.5699868,6.9821873 2.8144531,6.9821873 C2.1520181,6.9821873 1.5540364,7.2077732 1.0205078,7.6589451 L1.0205078,6.7566013 C1.5611979,6.4128513 2.1842446,6.2409763 2.8896484,6.2409763 z">
                <PathGeometry.Transform>
                  <TranslateTransform X="7" />
                </PathGeometry.Transform>
              </PathGeometry>
              <RectangleGeometry Rect="0,0,7,1">
                <RectangleGeometry.Transform>
                  <TranslateTransform Y="13" />
                </RectangleGeometry.Transform>
              </RectangleGeometry>
            </GeometryGroup>
          </GeometryDrawing.Geometry>
        </GeometryDrawing>
      </DrawingImage.Drawing>
    </DrawingImage>

    <!-- JJD 03/10/16 - Since we switched to using a DynamicResource the DrawingImage can't be frozen so use x:Shared="false" instead -->
    <DrawingImage x:Key="{x:Static igWindows:ComparisonOperatorSelector.OperatorEndsWithImageKey}" ig:Utilities.SnapElementToDevicePixels="True" x:Shared="false">
      <DrawingImage.Drawing>
        <GeometryDrawing Brush="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.ComparisonOperatorSelectorDrawingImagesFill}}">
          <GeometryDrawing.Geometry>
            <GeometryGroup FillRule="NonZero">
              <PathGeometry Figures="M3.9477539,9.087656 L2.6210938,9.2702732 C2.2128906,9.3275652 1.9049479,9.4287205 1.6972656,9.57374 C1.4895833,9.7187595 1.3857422,9.9756775 1.3857422,10.344492 C1.3857422,10.613047 1.4815266,10.832366 1.6730957,11.002451 C1.8646647,11.172536 2.1197915,11.257578 2.4384766,11.257578 C2.8753252,11.257578 3.2360837,11.104502 3.520752,10.798349 C3.8054197,10.492197 3.9477537,10.104584 3.9477539,9.6355076 z M2.8896484,6.2409763 C4.1822915,6.2409763 4.8286133,6.9248958 4.8286133,8.2927341 L4.8286133,11.869883 L3.9477539,11.869883 L3.9477539,11.010508 L3.9262695,11.010508 C3.5431314,11.669362 2.9791665,11.998789 2.234375,11.998789 C1.6865234,11.998789 1.2577311,11.853769 0.94799799,11.56373 C0.63826495,11.273691 0.48339841,10.888762 0.48339844,10.408945 C0.48339841,9.3812761 1.0885416,8.7832947 2.2988281,8.6149998 L3.9477539,8.3840427 C3.9477537,7.4494724 3.5699868,6.9821873 2.8144531,6.9821873 C2.1520181,6.9821873 1.5540364,7.2077732 1.0205078,7.6589451 L1.0205078,6.7566013 C1.5611979,6.4128513 2.1842446,6.2409763 2.8896484,6.2409763 z" />
              <PathGeometry Figures="M3.5126953,5.1024218 C3.4768879,5.3208466 3.4357095,5.4927216 3.3891602,5.6180468 L2.1914063,8.899785 L4.8608398,8.899785 L3.6523438,5.6180468 C3.6129556,5.5106254 3.5735674,5.3387504 3.5341797,5.1024218 z M3.0722656,4.1678514 L4.0068359,4.1678514 L6.9716797,11.87 L5.9726563,11.87 L5.15625,9.7108202 L1.890625,9.7108202 L1.1225586,11.87 L0.11816403,11.87 z">
                <PathGeometry.Transform>
                  <TranslateTransform X="6" />
                </PathGeometry.Transform>
              </PathGeometry>
              <RectangleGeometry Rect="6,0,7,1">
                <RectangleGeometry.Transform>
                  <TranslateTransform Y="13" />
                </RectangleGeometry.Transform>
              </RectangleGeometry>
            </GeometryGroup>
          </GeometryDrawing.Geometry>
        </GeometryDrawing>
      </DrawingImage.Drawing>
    </DrawingImage>

    <!-- JJD 03/10/16 - Since we switched to using a DynamicResource the DrawingImage can't be frozen so use x:Shared="false" instead -->
    <DrawingImage x:Key="{x:Static igWindows:ComparisonOperatorSelector.OperatorDoesNotStartWithImageKey}" ig:Utilities.SnapElementToDevicePixels="True" x:Shared="false">
      <DrawingImage.Drawing>
        <DrawingGroup>
          <GeometryDrawing Brush="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.ComparisonOperatorSelectorDrawingImagesFill}}">
            <GeometryDrawing.Geometry>
              <GeometryGroup FillRule="NonZero">
                <PathGeometry Figures="M3.5126953,5.1024218 C3.4768879,5.3208466 3.4357095,5.4927216 3.3891602,5.6180468 L2.1914063,8.899785 L4.8608398,8.899785 L3.6523438,5.6180468 C3.6129556,5.5106254 3.5735674,5.3387504 3.5341797,5.1024218 z M3.0722656,4.1678514 L4.0068359,4.1678514 L6.9716797,11.87 L5.9726563,11.87 L5.15625,9.7108202 L1.890625,9.7108202 L1.1225586,11.87 L0.11816403,11.87 z" />
                <PathGeometry Figures="M3.9477539,9.087656 L2.6210938,9.2702732 C2.2128906,9.3275652 1.9049479,9.4287205 1.6972656,9.57374 C1.4895833,9.7187595 1.3857422,9.9756775 1.3857422,10.344492 C1.3857422,10.613047 1.4815266,10.832366 1.6730957,11.002451 C1.8646647,11.172536 2.1197915,11.257578 2.4384766,11.257578 C2.8753252,11.257578 3.2360837,11.104502 3.520752,10.798349 C3.8054197,10.492197 3.9477537,10.104584 3.9477539,9.6355076 z M2.8896484,6.2409763 C4.1822915,6.2409763 4.8286133,6.9248958 4.8286133,8.2927341 L4.8286133,11.869883 L3.9477539,11.869883 L3.9477539,11.010508 L3.9262695,11.010508 C3.5431314,11.669362 2.9791665,11.998789 2.234375,11.998789 C1.6865234,11.998789 1.2577311,11.853769 0.94799799,11.56373 C0.63826495,11.273691 0.48339841,10.888762 0.48339844,10.408945 C0.48339841,9.3812761 1.0885416,8.7832947 2.2988281,8.6149998 L3.9477539,8.3840427 C3.9477537,7.4494724 3.5699868,6.9821873 2.8144531,6.9821873 C2.1520181,6.9821873 1.5540364,7.2077732 1.0205078,7.6589451 L1.0205078,6.7566013 C1.5611979,6.4128513 2.1842446,6.2409763 2.8896484,6.2409763 z">
                  <PathGeometry.Transform>
                    <TranslateTransform X="7" />
                  </PathGeometry.Transform>
                </PathGeometry>
                <RectangleGeometry Rect="0,0,7,1">
                  <RectangleGeometry.Transform>
                    <TranslateTransform Y="13" />
                  </RectangleGeometry.Transform>
                </RectangleGeometry>
              </GeometryGroup>
            </GeometryDrawing.Geometry>
          </GeometryDrawing>
          <GeometryDrawing Brush="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.ComparisonOperatorSelectorDrawingImagesFill}}">
            <GeometryDrawing.Geometry>
              <PathGeometry Figures="M1,14 C1,14 1,14 1,14 C2,14 2,14 2,14 C13,0 13,0 13,0 C12,0 12,0 12,0 z">
                <PathGeometry.Transform>
                  <TranslateTransform Y="1" />
                </PathGeometry.Transform>
              </PathGeometry>
            </GeometryDrawing.Geometry>
          </GeometryDrawing>
        </DrawingGroup>
      </DrawingImage.Drawing>
    </DrawingImage>

    <!-- JJD 03/10/16 - Since we switched to using a DynamicResource the DrawingImage can't be frozen so use x:Shared="false" instead -->
    <DrawingImage x:Key="{x:Static igWindows:ComparisonOperatorSelector.OperatorDoesNotEndWithImageKey}" ig:Utilities.SnapElementToDevicePixels="True" x:Shared="false">
      <DrawingImage.Drawing>
        <DrawingGroup>
          <GeometryDrawing Brush="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.ComparisonOperatorSelectorDrawingImagesFill}}">
            <GeometryDrawing.Geometry>
              <GeometryGroup FillRule="NonZero">
                <PathGeometry Figures="M3.9477539,9.087656 L2.6210938,9.2702732 C2.2128906,9.3275652 1.9049479,9.4287205 1.6972656,9.57374 C1.4895833,9.7187595 1.3857422,9.9756775 1.3857422,10.344492 C1.3857422,10.613047 1.4815266,10.832366 1.6730957,11.002451 C1.8646647,11.172536 2.1197915,11.257578 2.4384766,11.257578 C2.8753252,11.257578 3.2360837,11.104502 3.520752,10.798349 C3.8054197,10.492197 3.9477537,10.104584 3.9477539,9.6355076 z M2.8896484,6.2409763 C4.1822915,6.2409763 4.8286133,6.9248958 4.8286133,8.2927341 L4.8286133,11.869883 L3.9477539,11.869883 L3.9477539,11.010508 L3.9262695,11.010508 C3.5431314,11.669362 2.9791665,11.998789 2.234375,11.998789 C1.6865234,11.998789 1.2577311,11.853769 0.94799799,11.56373 C0.63826495,11.273691 0.48339841,10.888762 0.48339844,10.408945 C0.48339841,9.3812761 1.0885416,8.7832947 2.2988281,8.6149998 L3.9477539,8.3840427 C3.9477537,7.4494724 3.5699868,6.9821873 2.8144531,6.9821873 C2.1520181,6.9821873 1.5540364,7.2077732 1.0205078,7.6589451 L1.0205078,6.7566013 C1.5611979,6.4128513 2.1842446,6.2409763 2.8896484,6.2409763 z" />
                <PathGeometry Figures="M3.5126953,5.1024218 C3.4768879,5.3208466 3.4357095,5.4927216 3.3891602,5.6180468 L2.1914063,8.899785 L4.8608398,8.899785 L3.6523438,5.6180468 C3.6129556,5.5106254 3.5735674,5.3387504 3.5341797,5.1024218 z M3.0722656,4.1678514 L4.0068359,4.1678514 L6.9716797,11.87 L5.9726563,11.87 L5.15625,9.7108202 L1.890625,9.7108202 L1.1225586,11.87 L0.11816403,11.87 z">
                  <PathGeometry.Transform>
                    <TranslateTransform X="6" />
                  </PathGeometry.Transform>
                </PathGeometry>
                <RectangleGeometry Rect="6,0,7,1">
                  <RectangleGeometry.Transform>
                    <TranslateTransform Y="13" />
                  </RectangleGeometry.Transform>
                </RectangleGeometry>
              </GeometryGroup>
            </GeometryDrawing.Geometry>
          </GeometryDrawing>
          <GeometryDrawing Brush="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.ComparisonOperatorSelectorDrawingImagesFill}}">
            <GeometryDrawing.Geometry>
              <PathGeometry Figures="M1,14 C1,14 1,14 1,14 C2,14 2,14 2,14 C13,0 13,0 13,0 C12,0 12,0 12,0 z">
                <PathGeometry.Transform>
                  <TranslateTransform Y="1" />
                </PathGeometry.Transform>
              </PathGeometry>
            </GeometryDrawing.Geometry>
          </GeometryDrawing>
        </DrawingGroup>
      </DrawingImage.Drawing>
    </DrawingImage>

    <!-- JJD 03/10/16 - Since we switched to using a DynamicResource the DrawingImage can't be frozen so use x:Shared="false" instead -->
    <DrawingImage x:Key="{x:Static igWindows:ComparisonOperatorSelector.OperatorTopImageKey}" ig:Utilities.SnapElementToDevicePixels="True" x:Shared="false">
      <DrawingImage.Drawing>
        <GeometryDrawing Brush="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.ComparisonOperatorSelectorDrawingImagesFill}}">
          <GeometryDrawing.Geometry>
            <PathGeometry Figures="M0,6 C0,6 0,6 0,6 C8,6 8,6 8,6 C4,0 4,0 4,0z" />
          </GeometryDrawing.Geometry>
        </GeometryDrawing>
      </DrawingImage.Drawing>
    </DrawingImage>

    <!-- JJD 03/10/16 - Since we switched to using a DynamicResource the DrawingImage can't be frozen so use x:Shared="false" instead -->
    <DrawingImage x:Key="{x:Static igWindows:ComparisonOperatorSelector.OperatorBottomImageKey}" ig:Utilities.SnapElementToDevicePixels="True" x:Shared="false">
      <DrawingImage.Drawing>
        <GeometryDrawing Brush="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.ComparisonOperatorSelectorDrawingImagesFill}}">
          <GeometryDrawing.Geometry>
            <PathGeometry Figures="M0,0 C0,0 0,0 0,0 C8,0 8,0 8,0 C4,6 4,6 4,6z" />
          </GeometryDrawing.Geometry>
        </GeometryDrawing>
      </DrawingImage.Drawing>
    </DrawingImage>

    <!-- JJD 03/10/16 - Since we switched to using a DynamicResource the DrawingImage can't be frozen so use x:Shared="false" instead -->
    <DrawingImage x:Key="{x:Static igWindows:ComparisonOperatorSelector.OperatorTopPercentileImageKey}" ig:Utilities.SnapElementToDevicePixels="True" x:Shared="false">
      <DrawingImage.Drawing>
        <GeometryDrawing Brush="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.ComparisonOperatorSelectorDrawingImagesFill}}">
          <GeometryDrawing.Geometry>
            <GeometryGroup FillRule="NonZero">
              <PathGeometry Figures="M6.2109375,7.8202343 C5.8984375,7.8202343 5.6534829,7.9341669 5.4760742,8.1620312 C5.298665,8.3898964 5.2099609,8.7056513 5.2099609,9.1092968 C5.2099609,9.4966669 5.2978516,9.8002148 5.4736328,10.019941 C5.6494141,10.239668 5.8886719,10.349531 6.1914063,10.349531 C6.4973955,10.349531 6.7366533,10.234785 6.9091797,10.005293 C7.0817056,9.7758007 7.1679688,9.4608593 7.1679688,9.0604687 C7.1679688,8.6633339 7.0825195,8.3573437 6.9116211,8.1424999 C6.7407227,7.9276562 6.5071611,7.8202343 6.2109375,7.8202343 z M6.2402344,7.2684765 C6.7350259,7.2684765 7.1207681,7.4247265 7.3974609,7.7372265 C7.6741533,8.0497265 7.8125,8.4875526 7.8125,9.050703 C7.8125,9.6073437 7.6586914,10.054121 7.3510742,10.391035 C7.043457,10.727949 6.640625,10.896406 6.1425781,10.896406 C5.6608071,10.896406 5.2766924,10.736901 4.9902344,10.417891 C4.7037759,10.09888 4.5605469,9.675703 4.5605469,9.1483593 C4.5605469,8.5689325 4.7135415,8.1107616 5.0195313,7.7738476 C5.3255205,7.4369335 5.7324219,7.2684765 6.2402344,7.2684765 z M2.0410156,4.2167187 C1.7317708,4.2167187 1.4876301,4.3314648 1.3085938,4.560957 C1.1295573,4.7904491 1.0400391,5.1053905 1.0400391,5.5057812 C1.0400391,5.8996615 1.1279297,6.2064648 1.3037109,6.4261913 C1.4794921,6.6459179 1.7187499,6.7557812 2.0214844,6.7557812 C2.3274739,6.7557812 2.5667317,6.641849 2.7392578,6.4139843 C2.9117837,6.18612 2.9980469,5.8703647 2.9980469,5.4667187 C2.9980469,5.0728388 2.9125977,4.7660351 2.7416992,4.5463085 C2.5708008,4.326582 2.3372395,4.2167187 2.0410156,4.2167187 z M5.9570313,3.7870312 L6.6601563,3.7870312 L2.1679688,10.837812 L1.4697266,10.837812 z M2.0703125,3.6796093 C2.5683594,3.6796093 2.9549153,3.8342319 3.2299805,4.1434765 C3.5050454,4.4527216 3.6425781,4.8872919 3.6425781,5.4471874 C3.6425781,6.0070834 3.4887695,6.4554882 3.1811523,6.7924023 C2.8735352,7.1293163 2.4707031,7.2977734 1.9726563,7.2977734 C1.4908854,7.2977734 1.1067708,7.139082 0.8203125,6.8216991 C0.53385413,6.5043163 0.390625,6.0803256 0.390625,5.5497265 C0.390625,4.9702997 0.54199219,4.5137568 0.84472656,4.1800976 C1.1474609,3.8464389 1.5559895,3.6796093 2.0703125,3.6796093 z" />
              <PathGeometry Figures="M0,6 C0,6 0,6 0,6 C8,6 8,6 8,6 C4,0 4,0 4,0z">
                <PathGeometry.Transform>
                  <TranslateTransform Y="12" />
                </PathGeometry.Transform>
              </PathGeometry>
            </GeometryGroup>
          </GeometryDrawing.Geometry>
        </GeometryDrawing>
      </DrawingImage.Drawing>
    </DrawingImage>

    <!-- JJD 03/10/16 - Since we switched to using a DynamicResource the DrawingImage can't be frozen so use x:Shared="false" instead -->
    <DrawingImage x:Key="{x:Static igWindows:ComparisonOperatorSelector.OperatorBottomPercentileImageKey}" ig:Utilities.SnapElementToDevicePixels="True" x:Shared="false">
      <DrawingImage.Drawing>
        <GeometryDrawing Brush="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.ComparisonOperatorSelectorDrawingImagesFill}}">
          <GeometryDrawing.Geometry>
            <GeometryGroup FillRule="NonZero">
              <PathGeometry Figures="M0,0 C0,0 0,0 0,0 C8,0 8,0 8,0 C4,6 4,6 4,6z" />
              <PathGeometry Figures="M6.2109375,7.8202343 C5.8984375,7.8202343 5.6534829,7.9341669 5.4760742,8.1620312 C5.298665,8.3898964 5.2099609,8.7056513 5.2099609,9.1092968 C5.2099609,9.4966669 5.2978516,9.8002148 5.4736328,10.019941 C5.6494141,10.239668 5.8886719,10.349531 6.1914063,10.349531 C6.4973955,10.349531 6.7366533,10.234785 6.9091797,10.005293 C7.0817056,9.7758007 7.1679688,9.4608593 7.1679688,9.0604687 C7.1679688,8.6633339 7.0825195,8.3573437 6.9116211,8.1424999 C6.7407227,7.9276562 6.5071611,7.8202343 6.2109375,7.8202343 z M6.2402344,7.2684765 C6.7350259,7.2684765 7.1207681,7.4247265 7.3974609,7.7372265 C7.6741533,8.0497265 7.8125,8.4875526 7.8125,9.050703 C7.8125,9.6073437 7.6586914,10.054121 7.3510742,10.391035 C7.043457,10.727949 6.640625,10.896406 6.1425781,10.896406 C5.6608071,10.896406 5.2766924,10.736901 4.9902344,10.417891 C4.7037759,10.09888 4.5605469,9.675703 4.5605469,9.1483593 C4.5605469,8.5689325 4.7135415,8.1107616 5.0195313,7.7738476 C5.3255205,7.4369335 5.7324219,7.2684765 6.2402344,7.2684765 z M2.0410156,4.2167187 C1.7317708,4.2167187 1.4876301,4.3314648 1.3085938,4.560957 C1.1295573,4.7904491 1.0400391,5.1053905 1.0400391,5.5057812 C1.0400391,5.8996615 1.1279297,6.2064648 1.3037109,6.4261913 C1.4794921,6.6459179 1.7187499,6.7557812 2.0214844,6.7557812 C2.3274739,6.7557812 2.5667317,6.641849 2.7392578,6.4139843 C2.9117837,6.18612 2.9980469,5.8703647 2.9980469,5.4667187 C2.9980469,5.0728388 2.9125977,4.7660351 2.7416992,4.5463085 C2.5708008,4.326582 2.3372395,4.2167187 2.0410156,4.2167187 z M5.9570313,3.7870312 L6.6601563,3.7870312 L2.1679688,10.837812 L1.4697266,10.837812 z M2.0703125,3.6796093 C2.5683594,3.6796093 2.9549153,3.8342319 3.2299805,4.1434765 C3.5050454,4.4527216 3.6425781,4.8872919 3.6425781,5.4471874 C3.6425781,6.0070834 3.4887695,6.4554882 3.1811523,6.7924023 C2.8735352,7.1293163 2.4707031,7.2977734 1.9726563,7.2977734 C1.4908854,7.2977734 1.1067708,7.139082 0.8203125,6.8216991 C0.53385413,6.5043163 0.390625,6.0803256 0.390625,5.5497265 C0.390625,4.9702997 0.54199219,4.5137568 0.84472656,4.1800976 C1.1474609,3.8464389 1.5559895,3.6796093 2.0703125,3.6796093 z">
                <PathGeometry.Transform>
                  <TranslateTransform Y="5" />
                </PathGeometry.Transform>
              </PathGeometry>
            </GeometryGroup>
          </GeometryDrawing.Geometry>
        </GeometryDrawing>
      </DrawingImage.Drawing>
    </DrawingImage>

    <!-- _________________________ ComparisonOperatorListItem __________________________________________ -->
    <DataTemplate DataType="{x:Type igWindows:ComparisonOperatorListItem}">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <TextBlock x:Name="TextBlock" Text="{Binding Path=Description}" Grid.Column="1" Grid.Row="0" />
            <Border Margin="4,0,4,0">
                <!--<Image Height="{Binding ElementName=TextBlock, Path=ActualHeight}"-->
                <Image ig:Utilities.SnapElementToDevicePixels="True" Stretch="Uniform" StretchDirection="Both" Source="{Binding Path=Image}" Grid.Column="0" Grid.Row="0" />
            </Border>
        </Grid>
    </DataTemplate>

    <!-- _________________________ ComparisonOperatorSelector.DropDownButtonStyleKey __________________________________________ -->
    <Style x:Key="{x:Static igWindows:ComparisonOperatorSelector.DropDownButtonStyleKey}" TargetType="{x:Type ToggleButton}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="MinWidth" Value="0" />
        <Setter Property="MinHeight" Value="0" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Padding" Value="2" />
        <Setter Property="ClickMode" Value="Press" />
        <!-- JJD 10/07/14 TFS182586 
            Replaced FindAncestor binding with new attached (inherits) property ComparisonOperatorSelector.Selector -->
        <!--<Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource FindAncestor, {x:Type igWindows:ComparisonOperatorSelector}, 1}, Path=SelectedOperatorInfo.Description}" />-->
        <Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Self}, Path=(igWindows:ComparisonOperatorSelector.Selector).SelectedOperatorInfo.Description}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" ig:Utilities.SnapElementToDevicePixels="True">
                        <!-- JJD 10/07/14 TFS182586 
                            Replaced FindAncestor binding with new attached (inherits) property ComparisonOperatorSelector.Selector -->
                        <igWindows:AutoDisabledImage Margin="{TemplateBinding Padding}" MinHeight="14" MinWidth="14" Stretch="None" HorizontalAlignment="Center" VerticalAlignment="Center" 
                                                     Source="{Binding RelativeSource={RelativeSource Self}, Path=(igWindows:ComparisonOperatorSelector.Selector).SelectedOperatorInfo.Image}" />
                                                     <!--Source="{Binding RelativeSource={RelativeSource FindAncestor, {x:Type igWindows:ComparisonOperatorSelector}, 1}, Path=SelectedOperatorInfo.Image}" />-->
                    </Border>
                    <ControlTemplate.Triggers>

                        <!--<Trigger Property="Tag" Value="MouseOverControlTrue">
              <Setter Property="BorderBrush" TargetName="InnerBorder" Value="{DynamicResource {x:Static igEditors:EditorsBrushKeys.DropdownBtnHottrackInnerBorderFillKey}}"/>
              <Setter Property="Background" TargetName="OuterBorder_Center" Value="{DynamicResource {x:Static igEditors:EditorsBrushKeys.DropdownBtnHottrackCenterFillKey}}"/>
              <Setter Property="BorderBrush" TargetName="OuterBorder_Center" Value="{DynamicResource {x:Static igEditors:EditorsBrushKeys.DropdownBtnHottrackOuterBorderFillKey}}"/>
            </Trigger>

            <Trigger Property="IsChecked" Value="True">
              <Setter Property="BorderBrush" TargetName="OuterBorder_Center" Value="{DynamicResource {x:Static igEditors:EditorsBrushKeys.DropdownBtnPressedOuterBorderFillKey}}"/>
              <Setter Property="Background" TargetName="OuterBorder_Center" Value="{DynamicResource {x:Static igEditors:EditorsBrushKeys.DropdownBtnPressedCenterFillKey}}"/>
              <Setter Property="BorderBrush" TargetName="InnerBorder" Value="{DynamicResource {x:Static igEditors:EditorsBrushKeys.DropdownBtnPressedInnerBorderFillKey}}"/>
            </Trigger>

            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="IsChecked" Value="False"/>
                <Condition Property="IsMouseOver" Value="True"/>
              </MultiTrigger.Conditions>
              <Setter Property="BorderBrush" TargetName="InnerBorder" Value="{DynamicResource {x:Static igEditors:EditorsBrushKeys.DropdownBtnHottrackInnerBorderFillKey}}"/>
              <Setter Property="Background" TargetName="OuterBorder_Center" Value="{DynamicResource {x:Static igEditors:EditorsBrushKeys.DropdownBtnHottrackCenterFillKey}}"/>
              <Setter Property="BorderBrush" TargetName="OuterBorder_Center" Value="{DynamicResource {x:Static igEditors:EditorsBrushKeys.DropdownBtnHottrackOuterBorderFillKey}}"/>
            </MultiTrigger>-->

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- _________________________ ComparisonOperatorSelectorComboBoxStyle __________________________________________ -->
    <Style x:Key="ComparisonOperatorSelectorComboBoxStyle" TargetType="{x:Type ComboBox}">
        <Setter Property="IsSynchronizedWithCurrentItem" Value="False" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="FocusVisualStyle">
            <Setter.Value>
                <Style />
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Grid>
                        <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                            <!-- JJD 10/07/14 TFS182586 
                                    Replaced FindAncestor binding with new attached (inherits) property ComparisonOperatorSelector.Selector -->
                            <!--<ToggleButton x:Name="PART_DropDownButton" Style="{Binding RelativeSource={RelativeSource FindAncestor, {x:Type igWindows:ComparisonOperatorSelector}, 1}, Path=DropDownButtonStyle}" IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" />-->
                            <ToggleButton x:Name="PART_DropDownButton" 
                                          Style="{Binding RelativeSource={RelativeSource Self}, Path=(igWindows:ComparisonOperatorSelector.Selector).DropDownButtonStyle}" 
                                          IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" />
                        </Border>
                        <Popup x:Name="PART_Popup" AllowsTransparency="True" Placement="Bottom" IsOpen="{TemplateBinding IsDropDownOpen}" VerticalOffset="1" HorizontalOffset="-1" Focusable="False" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" MaxHeight="{TemplateBinding MaxDropDownHeight}">
                            <luna:SystemDropShadowChrome x:Name="Shdw" Color="Transparent">
                                <Border Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" BorderThickness="1" BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}">
                                    <!-- JM 02-08-10 TFS 27163 -->
                                    <!--<ScrollViewer x:Name="ScrollViewer">-->
                                    <ScrollViewer x:Name="ScrollViewer" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto">
                                        <ItemsPresenter KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                    </ScrollViewer>
                                </Border>
                            </luna:SystemDropShadowChrome>
                        </Popup>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="HasItems" Value="False">
                            <Setter TargetName="PART_Popup" Property="MinHeight" Value="95" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" Property="Foreground" />
                        </Trigger>
                        <Trigger SourceName="PART_Popup" Property="HasDropShadow" Value="True">
                            <Setter TargetName="Shdw" Property="Margin" Value="0,0,5,5" />
                            <Setter TargetName="Shdw" Property="Color" Value="#71000000" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- _________________________ ComparisonOperatorSelector __________________________________________ -->
    <Style TargetType="{x:Type igWindows:ComparisonOperatorSelector}">
        <Setter Property="DropDownButtonStyle" Value="{DynamicResource {x:Static igWindows:ComparisonOperatorSelector.DropDownButtonStyleKey}}" />
        <Setter Property="OperatorEqualsImage" Value="{DynamicResource {x:Static igWindows:ComparisonOperatorSelector.OperatorEqualsImageKey}}" />
        <Setter Property="OperatorNotEqualsImage" Value="{DynamicResource {x:Static igWindows:ComparisonOperatorSelector.OperatorNotEqualsImageKey}}" />
        <Setter Property="OperatorLessThanImage" Value="{DynamicResource {x:Static igWindows:ComparisonOperatorSelector.OperatorLessThanImageKey}}" />
        <Setter Property="OperatorLessThanOrEqualToImage" Value="{DynamicResource {x:Static igWindows:ComparisonOperatorSelector.OperatorLessThanOrEqualToImageKey}}" />
        <Setter Property="OperatorGreaterThanImage" Value="{DynamicResource {x:Static igWindows:ComparisonOperatorSelector.OperatorGreaterThanImageKey}}" />
        <Setter Property="OperatorGreaterThanOrEqualToImage" Value="{DynamicResource {x:Static igWindows:ComparisonOperatorSelector.OperatorGreaterThanOrEqualToImageKey}}" />
        <Setter Property="OperatorContainsImage" Value="{DynamicResource {x:Static igWindows:ComparisonOperatorSelector.OperatorContainsImageKey}}" />
        <Setter Property="OperatorDoesNotContainImage" Value="{DynamicResource {x:Static igWindows:ComparisonOperatorSelector.OperatorDoesNotContainImageKey}}" />
        <!-- SSP 12/4/13 NAS14.1 Filter In/NotIn Operator -->
        <Setter Property="OperatorInImage" Value="{DynamicResource {x:Static igWindows:ComparisonOperatorSelector.OperatorInImageKey}}" />
        <Setter Property="OperatorNotInImage" Value="{DynamicResource {x:Static igWindows:ComparisonOperatorSelector.OperatorNotInImageKey}}" />
        <Setter Property="OperatorLikeImage" Value="{DynamicResource {x:Static igWindows:ComparisonOperatorSelector.OperatorLikeImageKey}}" />
        <Setter Property="OperatorNotLikeImage" Value="{DynamicResource {x:Static igWindows:ComparisonOperatorSelector.OperatorNotLikeImageKey}}" />
        <Setter Property="OperatorMatchImage" Value="{DynamicResource {x:Static igWindows:ComparisonOperatorSelector.OperatorMatchImageKey}}" />
        <Setter Property="OperatorDoesNotMatchImage" Value="{DynamicResource {x:Static igWindows:ComparisonOperatorSelector.OperatorDoesNotMatchImageKey}}" />
        <Setter Property="OperatorStartsWithImage" Value="{DynamicResource {x:Static igWindows:ComparisonOperatorSelector.OperatorStartsWithImageKey}}" />
        <Setter Property="OperatorDoesNotStartWithImage" Value="{DynamicResource {x:Static igWindows:ComparisonOperatorSelector.OperatorDoesNotStartWithImageKey}}" />
        <Setter Property="OperatorEndsWithImage" Value="{DynamicResource {x:Static igWindows:ComparisonOperatorSelector.OperatorEndsWithImageKey}}" />
        <Setter Property="OperatorDoesNotEndWithImage" Value="{DynamicResource {x:Static igWindows:ComparisonOperatorSelector.OperatorDoesNotEndWithImageKey}}" />
        <Setter Property="OperatorTopImage" Value="{DynamicResource {x:Static igWindows:ComparisonOperatorSelector.OperatorTopImageKey}}" />
        <Setter Property="OperatorBottomImage" Value="{DynamicResource {x:Static igWindows:ComparisonOperatorSelector.OperatorBottomImageKey}}" />
        <Setter Property="OperatorTopPercentileImage" Value="{DynamicResource {x:Static igWindows:ComparisonOperatorSelector.OperatorTopPercentileImageKey}}" />
        <Setter Property="OperatorBottomPercentileImage" Value="{DynamicResource {x:Static igWindows:ComparisonOperatorSelector.OperatorBottomPercentileImageKey}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type igWindows:ComparisonOperatorSelector}">
                    <ComboBox x:Name="PART_ComboBox" ItemsSource="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Items}" SelectedIndex="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=SelectedIndex, Mode=TwoWay}" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Style="{StaticResource ComparisonOperatorSelectorComboBoxStyle}" IsDropDownOpen="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsDropDownOpen, Mode=TwoWay}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="simpleScrollViewer" TargetType="ScrollViewer">
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="BorderBrush" Value="{x:Null}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Margin" Value="0" />
    </Style>

    <Style TargetType="igPrim:EmbeddedTextBox">
        <Setter Property="Background" Value="Transparent" />
        <!-- Don't set the foreground so it can be inherited
		<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}" />
		-->
        <Setter Property="BorderBrush" Value="{x:Null}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="KeyboardNavigation.TabNavigation" Value="None" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="igPrim:EmbeddedTextBox">
                    <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                        <ScrollViewer x:Name="PART_ContentHost" Padding="{TemplateBinding Padding}" Style="{StaticResource simpleScrollViewer}" Focusable="False" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>