<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:ig="http://infragistics.com/Windows"
	xmlns:controls="http://infragistics.com/Windows"
    xmlns:igWindows="http://infragistics.com/Windows"
	xmlns:looks="http://infragistics.com/Windows.Looks"
	xmlns:themes="http://infragistics.com/Themes"
	xmlns:d="http://schemas.microsoft.com/expression/interactivedesigner/2006"
	xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
	mc:Ignorable="d"
	>
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="PrimitivesGeneric_Express.xaml" />
        <ResourceDictionary Source="PrimitivesOffice2010Blue_Brushes.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <!-- _________________________ SortIndicator __________________________________________ -->
    <Style TargetType="{x:Type controls:SortIndicator}">
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="MinHeight" Value="3.5" />
        <Setter Property="MinWidth" Value="7" />
        <Setter Property="Visibility" Value="Hidden"/>
        <Setter Property="Background" Value="{DynamicResource {ComponentResourceKey {x:Type controls:SortIndicator}, SortIndicatorBackground}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:SortIndicator}">
                    <Polygon Name="Arrow" 
								  Fill="{TemplateBinding Background}" 
								  Points="0,0 7,0 3.5,3.5" 	
								  StrokeEndLineCap="Round" StrokeStartLineCap="Round" StrokeLineJoin="Round" />

                    <ControlTemplate.Triggers>
                        <Trigger Property="SortStatus" Value="Descending">
                            <Setter Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="SortStatus" Value="Ascending">
                            <Setter TargetName="Arrow" Property="Points" 
											   Value="0,3.5 7,3.5 3.5,0" />
                            <Setter Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="Arrow" Property="Polygon.Fill" Value="{DynamicResource {ComponentResourceKey {x:Type controls:SortIndicator}, SortIndicatorBackgroundHover}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- _________________________ ExpanderBar __________________________________________ -->
    <Style TargetType="{x:Type controls:ExpanderBar}" BasedOn="{x:Static themes:PrimitivesGeneric.ExpanderBar}">
        <Setter Property="BackgroundHover">
            <Setter.Value>
                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                    <GradientStop Offset="0" Color="#FFFFFFFF"/>
                    <GradientStop Offset=".06" Color="#FFFFFFFF"/>
                    <GradientStop Offset=".37" Color="#FFE3EDFB"/>
                    <GradientStop Offset=".61" Color="#FFB8D8FF"/>
                    <GradientStop Offset=".63" Color="#FFD7E7F7"/>
                    <GradientStop Offset=".71" Color="#FFD7E7F7"/>
                    <GradientStop Offset=".74" Color="#FFE3EDFB"/>
                    <GradientStop Offset="1" Color="#FFE3EDF9"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="BorderHoverBrush" Value="#FF7FD4F7" />
    </Style>

    <!--SSP 8/10/08 Moveable Fields Feature -->
    <!-- _________________________ DropIndicator ______________________________________ -->
    <Style TargetType="{x:Type controls:DropIndicator}">
        <Setter Property="Background" Value="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.DropIndicatorFillKey}}"/>
        <Setter Property="Template" >
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:DropIndicator}">
                    <ControlTemplate.Resources>
                    </ControlTemplate.Resources>
                    <StackPanel x:Name="mainPanel" Orientation="Vertical" >
                        <Grid x:Name="ArrowTL" Width="9" Height="12" >
                            <Path
		Height="12"
		Width="9"
		Stretch="Fill"
		Opacity="1"
		Data="M 420,371 C420,371 423,371 423,371 423,371 423,378 423,378 423,378 426,378 426,378 426,378 421.5,383 421.5,383 421.5,383 417,378 417,378 417,378 420,378 420,378 420,378 420,371 420,371 z"
		Fill="{TemplateBinding Background}" Stroke="#FFFFFFFF" />
                        </Grid>
                        <!--Location of element is used to properly align the drop indicator with the drop target field-->
                        <Rectangle x:Name="PART_Offset"
												 Width="1" Height="1"
												 HorizontalAlignment="Center"
												 VerticalAlignment="Center"
												 Visibility="Hidden" />
                        <Grid 
					    x:Name="spaceRect"
					    Width="{TemplateBinding DropTargetWidth}"
						Height="{TemplateBinding DropTargetHeight}" 
						HorizontalAlignment="Center" 
						VerticalAlignment="Center"
						Visibility="Hidden"
						>
                            <Rectangle
								
								Stroke="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.DropTargetStrokeKey}}"
								StrokeThickness="1"
                                Margin="2,2,2,4"
							/>
                        </Grid>
                        <Grid Width="9" Height="12" x:Name="ArrowBR">
                            <Path
		Height="12"
		Width="9"
		Stretch="Fill"
		Opacity="1"
		Data="M 430,383 C430,383 433,383 433,383 433,383 433,376 433,376 433,376 436,376 436,376 436,376 431.5,371 431.5,371 431.5,371 427,376 427,376 427,376 430,376 430,376 430,376 430,383 430,383 z"
		Fill="{TemplateBinding Background}" Stroke="#FFFFFFFF" />
                        </Grid>
                    </StackPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Orientation" Value="Horizontal">
                            <Setter TargetName="spaceRect" Property="Height" Value="1" />
                            <Setter TargetName="mainPanel" Property="Orientation" Value="Horizontal" />
                            <Setter TargetName="ArrowTL" Property="LayoutTransform" >
                                <Setter.Value>
                                    <RotateTransform CenterX="15" CenterY="50" Angle="-90" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="ArrowBR" Property="LayoutTransform" >
                                <Setter.Value>
                                    <RotateTransform CenterX="15" CenterY="0" Angle="-90" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>

                        <Trigger Property="Orientation" Value="Vertical">
                            <Setter TargetName="spaceRect" Property="Width" Value="1" />
                        </Trigger>

                        <Trigger Property="DropLocation" Value="OverTarget">
                            <Setter TargetName="spaceRect" Property="Visibility" Value="Visible" />
                            <Setter TargetName="ArrowTL" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="ArrowBR" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="PART_Offset" Property="HorizontalAlignment" Value="Left" />
                            <Setter TargetName="PART_Offset" Property="VerticalAlignment" Value="Top" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
       <!-- _________________________ ComparisonOperatorSelectorComboBoxStyle __________________________________________ -->
    <Style x:Key="ComparisonOperatorSelectorComboBoxStyle" TargetType="{x:Type ComboBox}">
        <Setter Property="IsSynchronizedWithCurrentItem" Value="False" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="FocusVisualStyle">
            <Setter.Value>
                <Style />
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Grid>
                        <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                             <ToggleButton x:Name="PART_DropDownButton" 
                                          Style="{Binding RelativeSource={RelativeSource Self}, Path=(igWindows:ComparisonOperatorSelector.Selector).DropDownButtonStyle}" 
                                          IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" />
                        </Border>
                        <Popup x:Name="PART_Popup" AllowsTransparency="True" Placement="Bottom" IsOpen="{TemplateBinding IsDropDownOpen}" VerticalOffset="1" HorizontalOffset="-1" Focusable="False" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" MaxHeight="{TemplateBinding MaxDropDownHeight}">
                         <Border Background="{DynamicResource {ComponentResourceKey {x:Type controls:IGControlBase}, PopupBackgroundBrush}}" BorderThickness="1" BorderBrush="{DynamicResource {ComponentResourceKey {x:Type controls:IGControlBase}, PopupBorderBrush}}">
                                <ScrollViewer x:Name="ScrollViewer" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto">
                                        <ItemsPresenter KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                    </ScrollViewer>
                                </Border>
                        </Popup>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="HasItems" Value="False">
                            <Setter TargetName="PART_Popup" Property="MinHeight" Value="95" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                                 <Setter Property="Opacity" Value="0.3" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
 <!-- ********************************** ComboBoxItem Style **********************************-->
  <Style x:Key="ComboBoxItemStyle" TargetType="ComboBoxItem">
    <Setter Property="Padding" Value="5,3,5,3"/>
    <Setter Property="HorizontalContentAlignment" Value="Left"/>
    <Setter Property="VerticalContentAlignment" Value="Center"/>
    <Setter Property="Background" Value="Transparent"/>
    <Setter Property="Foreground" Value="{DynamicResource {ComponentResourceKey {x:Type controls:IGControlBase}, ForegroundBrush}}"/>
    <Setter Property="BorderThickness" Value="1"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="ComboBoxItem">
          <Grid Background="{TemplateBinding Background}" >
            <Border x:Name="hoverBorder" Background="{DynamicResource {ComponentResourceKey {x:Type controls:IGControlBase}, ComboBoxItemHoverBackgroundBrush}}" BorderBrush="{DynamicResource {ComponentResourceKey {x:Type controls:IGControlBase},  ComboBoxItemHoverBorderBrush}}" BorderThickness="{TemplateBinding BorderThickness}" Visibility="Collapsed" CornerRadius="2">
              <Rectangle Stroke="{DynamicResource {ComponentResourceKey {x:Type controls:IGControlBase},  ComboBoxItemHoverHighlightBorderBrush}}" StrokeThickness="1" RadiusX="1" RadiusY="1"/>
            </Border>
            <Border x:Name="SelectedBorder" Background="{DynamicResource {ComponentResourceKey {x:Type controls:IGControlBase},  ComboBoxItemSelectedBackgroundBrush}}" BorderBrush="{DynamicResource {ComponentResourceKey {x:Type controls:IGControlBase}, ComboBoxItemSelectedBorderBrush}}" CornerRadius="2" BorderThickness="{TemplateBinding BorderThickness}" Visibility="Collapsed" IsHitTestVisible="False"/>
            <Rectangle x:Name="FocusVisualElement" Stroke="{DynamicResource {ComponentResourceKey {x:Type controls:IGControlBase},  ComboBoxItemFocusedBorderBrush}}" StrokeThickness="{TemplateBinding BorderThickness}" Visibility="Collapsed" RadiusX="2" RadiusY="2"/>
            <ContentPresenter x:Name="contentPresenter" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}"/>
          </Grid>
             <ControlTemplate.Triggers>
                 <Trigger Property="IsMouseOver" Value="True">
                     <Setter Property="Visibility" TargetName="hoverBorder" Value="Visible" />
                 </Trigger>
                 <Trigger Property="IsEnabled" Value="False">
                     <Setter TargetName="contentPresenter" Property="Opacity" Value="0.5" />
                 </Trigger>
                 <Trigger Property="IsSelected" Value="True">
                     <Setter Property="Visibility" TargetName="SelectedBorder" Value="Visible" />
                 </Trigger>
                  <Trigger Property="IsFocused" Value="True">
                      <Setter Property="Visibility" TargetName="FocusVisualElement" Value="Visible" />
                  </Trigger>
             </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
    
       <!-- _________________________ ComparisonOperatorSelector __________________________________________ -->
    <Style TargetType="{x:Type igWindows:ComparisonOperatorSelector}">
        <Setter Property="DropDownButtonStyle" Value="{DynamicResource {x:Static igWindows:ComparisonOperatorSelector.DropDownButtonStyleKey}}" />
        <Setter Property="OperatorEqualsImage" Value="{DynamicResource {x:Static igWindows:ComparisonOperatorSelector.OperatorEqualsImageKey}}" />
        <Setter Property="OperatorNotEqualsImage" Value="{DynamicResource {x:Static igWindows:ComparisonOperatorSelector.OperatorNotEqualsImageKey}}" />
        <Setter Property="OperatorLessThanImage" Value="{DynamicResource {x:Static igWindows:ComparisonOperatorSelector.OperatorLessThanImageKey}}" />
        <Setter Property="OperatorLessThanOrEqualToImage" Value="{DynamicResource {x:Static igWindows:ComparisonOperatorSelector.OperatorLessThanOrEqualToImageKey}}" />
        <Setter Property="OperatorGreaterThanImage" Value="{DynamicResource {x:Static igWindows:ComparisonOperatorSelector.OperatorGreaterThanImageKey}}" />
        <Setter Property="OperatorGreaterThanOrEqualToImage" Value="{DynamicResource {x:Static igWindows:ComparisonOperatorSelector.OperatorGreaterThanOrEqualToImageKey}}" />
        <Setter Property="OperatorContainsImage" Value="{DynamicResource {x:Static igWindows:ComparisonOperatorSelector.OperatorContainsImageKey}}" />
        <Setter Property="OperatorDoesNotContainImage" Value="{DynamicResource {x:Static igWindows:ComparisonOperatorSelector.OperatorDoesNotContainImageKey}}" />
        <!-- SSP 12/4/13 NAS14.1 Filter In/NotIn Operator -->
        <Setter Property="OperatorInImage" Value="{DynamicResource {x:Static igWindows:ComparisonOperatorSelector.OperatorInImageKey}}" />
        <Setter Property="OperatorNotInImage" Value="{DynamicResource {x:Static igWindows:ComparisonOperatorSelector.OperatorNotInImageKey}}" />
        <Setter Property="OperatorLikeImage" Value="{DynamicResource {x:Static igWindows:ComparisonOperatorSelector.OperatorLikeImageKey}}" />
        <Setter Property="OperatorNotLikeImage" Value="{DynamicResource {x:Static igWindows:ComparisonOperatorSelector.OperatorNotLikeImageKey}}" />
        <Setter Property="OperatorMatchImage" Value="{DynamicResource {x:Static igWindows:ComparisonOperatorSelector.OperatorMatchImageKey}}" />
        <Setter Property="OperatorDoesNotMatchImage" Value="{DynamicResource {x:Static igWindows:ComparisonOperatorSelector.OperatorDoesNotMatchImageKey}}" />
        <Setter Property="OperatorStartsWithImage" Value="{DynamicResource {x:Static igWindows:ComparisonOperatorSelector.OperatorStartsWithImageKey}}" />
        <Setter Property="OperatorDoesNotStartWithImage" Value="{DynamicResource {x:Static igWindows:ComparisonOperatorSelector.OperatorDoesNotStartWithImageKey}}" />
        <Setter Property="OperatorEndsWithImage" Value="{DynamicResource {x:Static igWindows:ComparisonOperatorSelector.OperatorEndsWithImageKey}}" />
        <Setter Property="OperatorDoesNotEndWithImage" Value="{DynamicResource {x:Static igWindows:ComparisonOperatorSelector.OperatorDoesNotEndWithImageKey}}" />
        <Setter Property="OperatorTopImage" Value="{DynamicResource {x:Static igWindows:ComparisonOperatorSelector.OperatorTopImageKey}}" />
        <Setter Property="OperatorBottomImage" Value="{DynamicResource {x:Static igWindows:ComparisonOperatorSelector.OperatorBottomImageKey}}" />
        <Setter Property="OperatorTopPercentileImage" Value="{DynamicResource {x:Static igWindows:ComparisonOperatorSelector.OperatorTopPercentileImageKey}}" />
        <Setter Property="OperatorBottomPercentileImage" Value="{DynamicResource {x:Static igWindows:ComparisonOperatorSelector.OperatorBottomPercentileImageKey}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type igWindows:ComparisonOperatorSelector}">
                    <ComboBox x:Name="PART_ComboBox" ItemsSource="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Items}" SelectedIndex="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=SelectedIndex, Mode=TwoWay}" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" ItemContainerStyle="{StaticResource ComboBoxItemStyle}" Style="{StaticResource ComparisonOperatorSelectorComboBoxStyle}" IsDropDownOpen="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsDropDownOpen, Mode=TwoWay}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>