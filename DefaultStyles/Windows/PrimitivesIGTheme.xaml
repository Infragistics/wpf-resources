<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:igWindows="http://infragistics.com/Windows"
                    xmlns:controls="http://infragistics.com/Windows"
                    xmlns:interactions="http://schemas.infragistics.com/xaml"
                    xmlns:igPrim="http://schemas.infragistics.com/xaml/primitives"
					xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" mc:Ignorable="d"
					>
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="PrimitivesGeneric.xaml" />
        <ResourceDictionary Source="PrimitivesIGTheme_Brushes.xaml" />
    </ResourceDictionary.MergedDictionaries>
	
    <!-- ************************************************** -->
    <!-- XamTabControl Resources -->
    <!-- ************************************************** -->
    <Style TargetType="{x:Type RepeatButton}" x:Key="PagerScrollBtnBase">
        <!--<Setter Property="ClickMode" Value="Hover"/>-->
        <Setter Property="Focusable" Value="False" />
        <Setter Property="BorderBrush" Value="{DynamicResource {x:Static controls:PrimitivesBrushKeys.XamPagerButtonOuterBorderFillKey}}" />
        <Setter Property="Background" Value="{DynamicResource {x:Static controls:PrimitivesBrushKeys.XamPagerButtonCenterGrayGradientFillKey}}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="2" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Grid>
                        <Border BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}"
                                CornerRadius="1">
                            <ContentPresenter Margin="{TemplateBinding Padding}"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              ContentTemplate="{TemplateBinding ContentTemplate}"
                                              Content="{TemplateBinding Content}" />
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="BorderBrush" Value="{DynamicResource {x:Static controls:PrimitivesBrushKeys.XamPagerButtonHottrackBorderFillKey}}" />
                <Setter Property="Background" Value="{DynamicResource {x:Static controls:PrimitivesBrushKeys.XamPagerButtonHottrackFillKey}}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="BorderBrush" Value="{DynamicResource {x:Static controls:PrimitivesBrushKeys.XamPagerButtonPressedBorderFillKey}}" />
                <Setter Property="Background" Value="{DynamicResource {x:Static controls:PrimitivesBrushKeys.XamPagerButtonPressedCenterFillKey}}" />
            </Trigger>
        </Style.Triggers>
    </Style>
	
    <Style x:Key="{x:Static controls:XamTabControl.ScrollLeftButtonStyleKey}" TargetType="{x:Type RepeatButton}" BasedOn="{StaticResource PagerScrollBtnBase}">
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Grid Width="6" Height="10">
                        <Path Width="6"
                              Height="10"
                              Data="M 4,0 C4,0 4,1 4,1 4,1 3,1 3,1 3,1 3,2 3,2 3,2 2,2 2,2 2,2 2,3 2,3 2,3 1,3 1,3 1,3 1,4 1,4 1,4 0,4 0,4 0,4 0,6 0,6 0,6 1,6 1,6 1,6 1,7 1,7 1,7 2,7 2,7 2,7 2,8 2,8 2,8 3,8 3,8 3,8 3,9 3,9 3,9 4,9 4,9 4,9 4,10 4,10 4,10 6,10 6,10 6,10 6,0 6,0 6,0 4,0 4,0 z"
                              Fill="#7F535353"
                              Stretch="Fill" />
                        <Path Width="4"
                              Height="8"
                              Data="M 3,0 C3,0 3,1 3,1 3,1 2,1 2,1 2,1 2,2 2,2 2,2 1,2 1,2 1,2 1,3 1,3 1,3 0,3 0,3 0,3 0,5 0,5 0,5 1,5 1,5 1,5 1,6 1,6 1,6 2,6 2,6 2,6 2,7 2,7 2,7 3,7 3,7 3,7 3,8 3,8 3,8 4,8 4,8 4,8 4,0 4,0 4,0 3,0 3,0 z"
                              Fill="{DynamicResource {x:Static controls:PrimitivesBrushKeys.XamPagerButtonGlyphFillKey}}"
                              Stretch="Fill" />
                    </Grid>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>
	
    <Style x:Key="{x:Static controls:XamTabControl.ScrollRightButtonStyleKey}" TargetType="{x:Type RepeatButton}" BasedOn="{StaticResource PagerScrollBtnBase}">
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Grid Width="6" Height="10">
                        <Path Width="6"
                              Height="10"
                              Data="M 2,0 C2,0 2,1 2,1 2,1 3,1 3,1 3,1 3,2 3,2 3,2 4,2 4,2 4,2 4,3 4,3 4,3 5,3 5,3 5,3 5,4 5,4 5,4 6,4 6,4 6,4 6,6 6,6 6,6 5,6 5,6 5,6 5,7 5,7 5,7 4,7 4,7 4,7 4,8 4,8 4,8 3,8 3,8 3,8 3,9 3,9 3,9 2,9 2,9 2,9 2,10 2,10 2,10 0,10 0,10 0,10 0,0 0,0 0,0 2,0 2,0 z"
                              Fill="#7F535353"
                              Stretch="Fill" />
                        <Path Width="4"
                              Height="8"
                              Data="M 1,0 C1,0 1,1 1,1 1,1 2,1 2,1 2,1 2,2 2,2 2,2 3,2 3,2 3,2 3,3 3,3 3,3 4,3 4,3 4,3 4,5 4,5 4,5 3,5 3,5 3,5 3,6 3,6 3,6 2,6 2,6 2,6 2,7 2,7 2,7 1,7 1,7 1,7 1,8 1,8 1,8 0,8 0,8 0,8 0,0 0,0 0,0 1,0 1,0 z"
                              Fill="{DynamicResource {x:Static controls:PrimitivesBrushKeys.XamPagerButtonGlyphFillKey}}"
                              Stretch="Fill" />
                    </Grid>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>
	
    <Style x:Key="{x:Static controls:XamTabControl.ScrollUpButtonStyleKey}" TargetType="{x:Type RepeatButton}" BasedOn="{StaticResource PagerScrollBtnBase}">
        <Setter Property="ContentTemplate">
            <Setter.Value>
				<DataTemplate>
					<Grid Width="10" Height="6">
						<Path Width="10"
							  Height="6"
							  Data="M 0,4 C0,4 1,4 1,4 1,4 1,3 1,3 1,3 2,3 2,3 2,3 2,2 2,2 2,2 3,2 3,2 3,2 3,1 3,1 3,1 4,1 4,1 4,1 4,0 4,0 4,0 6,0 6,0 6,0 6,1 6,1 6,1 7,1 7,1 7,1 7,2 7,2 7,2 8,2 8,2 8,2 8,3 8,3 8,3 9,3 9,3 9,3 9,4 9,4 9,4 10,4 10,4 10,4 10,6 10,6 10,6 0,6 0,6 0,6 0,4 0,4 z"
							  Fill="#7F535353"
							  Stretch="Fill" />
						<Path Width="8"
							  Height="4"
							  Data="M 0,3 C0,3 1,3 1,3 1,3 1,2 1,2 1,2 2,2 2,2 2,2 2,1 2,1 2,1 3,1 3,1 3,1 3,0 3,0 3,0 5,0 5,0 5,0 5,1 5,1 5,1 6,1 6,1 6,1 6,2 6,2 6,2 7,2 7,2 7,2 7,3 7,3 7,3 8,3 8,3 8,3 8,4 8,4 8,4 0,4 0,4 0,4 0,3 0,3 z"
							  Fill="{DynamicResource {x:Static controls:PrimitivesBrushKeys.XamPagerButtonGlyphFillKey}}"
							  Stretch="Fill" />
					</Grid>
				</DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>
	
    <Style x:Key="{x:Static controls:XamTabControl.ScrollDownButtonStyleKey}" TargetType="{x:Type RepeatButton}" BasedOn="{StaticResource PagerScrollBtnBase}">
        <Setter Property="ContentTemplate">
            <Setter.Value>
				<DataTemplate>
					<Grid Width="10" Height="6">
						<Path Width="10"
							  Height="6"
							  Data="M 0,2 C0,2 1,2 1,2 1,2 1,3 1,3 1,3 2,3 2,3 2,3 2,4 2,4 2,4 3,4 3,4 3,4 3,5 3,5 3,5 4,5 4,5 4,5 4,6 4,6 4,6 6,6 6,6 6,6 6,5 6,5 6,5 7,5 7,5 7,5 7,4 7,4 7,4 8,4 8,4 8,4 8,3 8,3 8,3 9,3 9,3 9,3 9,2 9,2 9,2 10,2 10,2 10,2 10,0 10,0 10,0 0,0 0,0 0,0 0,2 0,2 z"
							  Fill="#7F535353"
							  Stretch="Fill" />
						<Path Width="8"
							  Height="4"
							  Data="M 0,1 C0,1 1,1 1,1 1,1 1,2 1,2 1,2 2,2 2,2 2,2 2,3 2,3 2,3 3,3 3,3 3,3 3,4 3,4 3,4 5,4 5,4 5,4 5,3 5,3 5,3 6,3 6,3 6,3 6,2 6,2 6,2 7,2 7,2 7,2 7,1 7,1 7,1 8,1 8,1 8,1 8,0 8,0 8,0 0,0 0,0 0,0 0,1 0,1 z"
							  Fill="{DynamicResource {x:Static controls:PrimitivesBrushKeys.XamPagerButtonGlyphFillKey}}"
							  Stretch="Fill" />
					</Grid>
				</DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- _________________________ XamTabControl ______________________________________ -->
    <Style TargetType="{x:Type controls:XamTabControl}">
        <Setter Property="Padding" Value="3"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="{DynamicResource {x:Static controls:PrimitivesBrushKeys.TabItemIsSelectedOuterBorderFillKey}}"/>
        <Setter Property="Background" Value="{DynamicResource {x:Static controls:PrimitivesBrushKeys.TabContentBackgroundFillKey}}"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:XamTabControl}">
                    <Grid ClipToBounds="True" SnapsToDevicePixels="True" KeyboardNavigation.TabNavigation="Local">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition x:Name="gridCol0"/>
                            <ColumnDefinition Width="0" x:Name="gridCol1"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" x:Name="gridRow0"/>
                            <RowDefinition Height="*" x:Name="gridRow1"/>
                        </Grid.RowDefinitions>
                        <Border
							BorderBrush="{TemplateBinding BorderBrush}"
							x:Name="ContentPanel"
							KeyboardNavigation.TabIndex="2"
							KeyboardNavigation.TabNavigation="Local"
							KeyboardNavigation.DirectionalNavigation="Contained"
							Grid.Row="1"
							Visibility="Visible"
							Margin="0,-1,0,0"
							Background="{TemplateBinding Background}">
                            <!--Background="#FF515151"-->
                            <Border
								BorderThickness="{TemplateBinding Border.BorderThickness}"
								Background="{TemplateBinding Background}"
								BorderBrush="{TemplateBinding BorderBrush}"
								Margin="0,1,0,0">
                                <!--<Border Background="{DynamicResource Container_Fill}" BorderBrush="{DynamicResource Container_BorderFill}" CornerRadius="5,5,5,5">-->
                                <Border CornerRadius="0">
                                    <ContentPresenter
										ContentSource="SelectedContent"
										Margin="{TemplateBinding Padding}"
										Height="{TemplateBinding TabItemContentHeight}"
										x:Name="PART_SelectedContentHost"
										SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                </Border>
                            </Border>
                        </Border>
                        <!--<DockPanel x:Name="PART_HeaderArea" Panel.ZIndex="1" Background="#FF535353">-->
                        <!-- AS 5/4/10 TFS30695
              Added Tab(Index|Navigation) settings so this gets focus first. -->
                        <DockPanel
							x:Name="PART_HeaderArea"
							Panel.ZIndex="1"
							KeyboardNavigation.TabIndex="1"
							KeyboardNavigation.TabNavigation="Local"
                            Background="{DynamicResource {x:Static controls:PrimitivesBrushKeys.TabControlTabStripCenterFillKey}}"
							>
                            <ContentPresenter
								x:Name="PreTabItemContent"
								DockPanel.Dock="Left"
								ContentSource="PreTabItemContent"
								VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
								/>
                            <Button
								x:Name="CloseButton"
								DockPanel.Dock="Right"
								Command="controls:TabControlCommands.CloseSelected"
								CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}"
								Visibility="Collapsed"
								Style="{DynamicResource {x:Static controls:XamTabControl.CloseButtonStyleKey}}"/>
                            <ContentPresenter
								x:Name="PostTabItemContent"
								DockPanel.Dock="Right"
								ContentSource="PostTabItemContent"
								VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                            <controls:XamPager x:Name="PART_TabItemScrollViewer"
								Style="{DynamicResource {x:Static controls:XamTabControl.SingleRowTabItemPagerStyleKey}}"
								CanContentScroll="True"
								ScrollViewer.VerticalScrollBarVisibility="{TemplateBinding TabItemVerticalScrollBarVisibility}"
								ScrollViewer.HorizontalScrollBarVisibility="{TemplateBinding TabItemHorizontalScrollBarVisibility}"	>
                                <ItemsPresenter x:Name="PART_TabHeaderPanel" Margin="2,0,1,0" />
                            </controls:XamPager>
                        </DockPanel>
                        <Popup
							x:Name="PART_Popup"
							StaysOpen="False"
							Width="{TemplateBinding PreferredDropDownExtent}"
							IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}"
							CustomPopupPlacementCallback="{TemplateBinding PreferredDropDownPlacementCallback}"
							Placement="Custom"
							AllowsTransparency="True"
							PopupAnimation="{Binding DropDownAnimation, RelativeSource={RelativeSource TemplatedParent}}">
                            <Border
								BorderBrush="#FFD0CEBF"
								BorderThickness="0,0,1,1"
								KeyboardNavigation.TabIndex="2"
								KeyboardNavigation.TabNavigation="Local"
								KeyboardNavigation.DirectionalNavigation="Contained">
                                <Border BorderBrush="{TemplateBinding Border.BorderBrush}" BorderThickness="{TemplateBinding Border.BorderThickness}">
                                    <Border Background="{TemplateBinding Panel.Background}">
                                        <ContentPresenter
											ContentSource="SelectedContent"
											Margin="{TemplateBinding Padding}"
											Height="{TemplateBinding TabItemContentHeight}"
											x:Name="PART_SelectedContentHostMinimized"
											HorizontalAlignment="{Binding HorizontalAlignment, ElementName=PART_SelectedContentHost}"
											VerticalAlignment="{Binding VerticalAlignment, ElementName=PART_SelectedContentHost}"
											SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
											ContentTemplateSelector="{TemplateBinding SelectedContentTemplateSelector}"
											ContentTemplate="{TemplateBinding SelectedContentTemplate}"
											Content="{x:Null}"/>
                                    </Border>
                                </Border>
                            </Border>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="ShowTabHeaderCloseButton" Value="True">
                            <Setter Property="Visibility" TargetName="CloseButton" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="DropDownAnimation" Value="None">
                            <!--<Setter Property="AllowsTransparency" TargetName="PART_Popup" Value="False"/>-->
                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Top">
                            <Setter Property="Width" TargetName="PART_Popup" Value="{Binding PreferredDropDownExtent, RelativeSource={x:Static RelativeSource.TemplatedParent}}"/>
                            <Setter TargetName="CloseButton" Property="Margin" Value="3,1,3,0"/>
                            <Setter TargetName="PreTabItemContent" Property="VerticalAlignment" Value="Bottom"/>
                            <Setter TargetName="PostTabItemContent" Property="VerticalAlignment" Value="Bottom"/>
                            <Setter TargetName="PostTabItemContent" Property="Margin" Value="3,0,3,7"/>
                            <Setter TargetName="PreTabItemContent" Property="Margin" Value="3,0,3,7"/>
                            <Setter Property="Margin" TargetName="PART_TabHeaderPanel" Value="2,2,2,0"/>
                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Bottom">
                            <Setter TargetName="CloseButton" Property="Margin" Value="3,0,3,1"/>
                            <Setter TargetName="PreTabItemContent" Property="Margin" Value="3,2,3,0"/>
                            <Setter TargetName="PostTabItemContent" Property="Margin" Value="3,2,3,0"/>
                            <Setter Property="Grid.Row" TargetName="PART_HeaderArea" Value="1"/>
                            <Setter Property="Grid.Row" TargetName="ContentPanel" Value="0"/>
                            <Setter Property="Height" TargetName="gridRow0" Value="*"/>
                            <Setter Property="Height" TargetName="gridRow1" Value="Auto"/>
                            <Setter Property="Width" TargetName="PART_Popup" Value="{Binding PreferredDropDownExtent, RelativeSource={x:Static RelativeSource.TemplatedParent}}"/>
                            <Setter Property="Margin" TargetName="PART_TabHeaderPanel" Value="2,0,2,2"/>
                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Left">
                            <Setter TargetName="PostTabItemContent" Property="Margin" Value="5,3,0,3"/>
                            <Setter TargetName="PreTabItemContent" Property="Margin" Value="5,3,0,3"/>
                            <Setter Property="Margin" TargetName="CloseButton" Value="0,0,4,3"/>
                            <Setter Property="DockPanel.Dock" TargetName="CloseButton" Value="Bottom"/>
                            <Setter Property="HorizontalAlignment" TargetName="CloseButton" Value="Right"/>
                            <Setter Property="Grid.Row" TargetName="PART_HeaderArea" Value="1"/>
                            <Setter Property="Grid.Column" TargetName="ContentPanel" Value="1"/>
                            <Setter Property="Height" TargetName="gridRow0" Value="0"/>
                            <Setter Property="Width" TargetName="gridCol0" Value="Auto"/>
                            <Setter Property="Width" TargetName="gridCol1" Value="*"/>
                            <Setter Property="DockPanel.Dock" TargetName="PreTabItemContent" Value="Top"/>
                            <Setter Property="DockPanel.Dock" TargetName="PostTabItemContent" Value="Bottom"/>
                            <Setter Property="Height" TargetName="PART_Popup" Value="{Binding PreferredDropDownExtent, RelativeSource={x:Static RelativeSource.TemplatedParent}}"/>
                            <Setter Property="Margin" TargetName="PART_TabHeaderPanel" Value="2,2,0,2"/>
                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Right">
                            <Setter TargetName="PostTabItemContent" Property="Margin" Value="4,3,0,3"/>
                            <Setter TargetName="PreTabItemContent" Property="Margin" Value="4,3,0,3"/>
                            <Setter Property="Margin" TargetName="CloseButton" Value="4,0,0,3"/>
                            <Setter Property="DockPanel.Dock" TargetName="CloseButton" Value="Bottom"/>
                            <Setter Property="HorizontalAlignment" TargetName="CloseButton" Value="Left"/>
                            <Setter Property="Grid.Row" TargetName="PART_HeaderArea" Value="1"/>
                            <Setter Property="Grid.Column" TargetName="PART_HeaderArea" Value="1"/>
                            <Setter Property="Height" TargetName="gridRow0" Value="0"/>
                            <Setter Property="Width" TargetName="gridCol0" Value="*"/>
                            <Setter Property="Width" TargetName="gridCol1" Value="Auto"/>
                            <Setter Property="DockPanel.Dock" TargetName="PreTabItemContent" Value="Top"/>
                            <Setter Property="DockPanel.Dock" TargetName="PostTabItemContent" Value="Bottom"/>
                            <Setter Property="Height" TargetName="PART_Popup" Value="{Binding PreferredDropDownExtent, RelativeSource={x:Static RelativeSource.TemplatedParent}}"/>
                            <Setter Property="Margin" TargetName="PART_TabHeaderPanel" Value="0,2,2,2"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="TextElement.Foreground" Value="{DynamicResource {x:Static controls:PrimitivesBrushKeys.GrayTextBrushKey}}"/>
                        </Trigger>
                        <Trigger Property="IsMinimized" Value="True">
                            <Setter Property="Visibility" TargetName="ContentPanel" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="IsMultiRow" Value="True">
                            <Setter TargetName="PART_TabItemScrollViewer" Property="Style" Value="{DynamicResource {x:Static controls:XamTabControl.MultiRowTabItemPagerStyleKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <!--<Setter Property="Background" Value="{DynamicResource Container_Fill}"/>-->
        <Style.Triggers>
            <Trigger Property="TabStripPlacement" Value="Bottom">
                <Setter Property="Panel.Background" Value="{DynamicResource {x:Static controls:PrimitivesBrushKeys.TabItemIsSelectedBottomCenterFillKey}}"/>
            </Trigger>
            <Trigger Property="TabStripPlacement" Value="Left">
                <Setter Property="Panel.Background" Value="{DynamicResource {x:Static controls:PrimitivesBrushKeys.TabItemIsSelectedLeftCenterFillKey}}"/>
            </Trigger>
            <Trigger Property="TabStripPlacement" Value="Right">
                <Setter Property="Panel.Background" Value="{DynamicResource {x:Static controls:PrimitivesBrushKeys.TabItemIsSelectedRightCenterFillKey}}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <!-- _________________________ TabItemEx ______________________________________ -->
    <Style x:Key="{x:Type controls:TabItemEx}" TargetType="{x:Type controls:TabItemEx}">
        <!-- <Setter Property="FocusVisualStyle" Value="{StaticResource Foo}" /> -->
        <Setter Property="BorderBrush" Value="{DynamicResource {x:Static controls:PrimitivesBrushKeys.TabItemNormalOuterBorderFillKey}}"/>
        <Setter Property="Background" Value="{DynamicResource {x:Static controls:PrimitivesBrushKeys.TabItemNormalTopCenterFillKey}}"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
		<!--SS 01/29/16 TFS213085 Change VerticalAlignment to Strech, so all tabs can be aligned to the highest-->
		<!--<Setter Property="VerticalAlignment" Value="Bottom"/>-->
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="Padding" Value="4 3"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:TabItemEx}">
                    <Grid SnapsToDevicePixels="true">
                		<Border
                			x:Name="Bd"
                			Padding="{TemplateBinding Padding}"
                			BorderBrush="{TemplateBinding BorderBrush}"
                			Background="{TemplateBinding Background}"
                			BorderThickness="1,1,1,0"
                            CornerRadius="2,2,0,0">
                			<Grid>
                				<Grid.ColumnDefinitions>
                					<ColumnDefinition/>
                					<ColumnDefinition Width="Auto"/>
                				</Grid.ColumnDefinitions>
                				<ContentPresenter
                					TextElement.Foreground="{DynamicResource {x:Static controls:PrimitivesBrushKeys.TabItemNormalTextFillKey}}"
                					x:Name="Content"
                					ContentSource="Header"
                					SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                					RecognizesAccessKey="true"
                					HorizontalAlignment="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"
                					VerticalAlignment="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                				<Button
                					x:Name="CloseButton"
                					Grid.Column="1"
                					Command="controls:TabItemExCommands.Close"
                					CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                					Visibility="{TemplateBinding ComputedCloseButtonVisibility}"
                					Style="{DynamicResource {x:Static controls:XamTabControl.CloseButtonStyleKey}}"
                					Margin="10,0,0,0"
                                    SnapsToDevicePixels="true"/>
                			</Grid>
                		</Border>
                		<Border
                			x:Name="Highlight"
                			Height="3"
                			CornerRadius="2,2,0,0"
                			Background="{DynamicResource {x:Static controls:PrimitivesBrushKeys.TabItemHottrackHighlightLightFillKey}}"
                			BorderBrush="{DynamicResource {x:Static controls:PrimitivesBrushKeys.TabItemHottrackHighlightDarkFillKey}}"
                			BorderThickness="1,1,1,0"
                			Visibility="Visible"
                			VerticalAlignment="Top"/>
                	</Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="Content" Property="TextElement.Foreground" Value="{DynamicResource {x:Static controls:PrimitivesBrushKeys.TabItemHottrackTextFillKey}}"/>
                        </Trigger>
                        <Trigger Property="IsSelected" Value="true">
                            <Setter Property="Panel.ZIndex" Value="1"/>
                            <Setter TargetName="Highlight" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="Highlight" Property="Background" Value="{DynamicResource {x:Static controls:PrimitivesBrushKeys.TabItemIsSelectedHighlightLightFillKey}}"/>
                            <Setter TargetName="Highlight" Property="BorderBrush" Value="{DynamicResource {x:Static controls:PrimitivesBrushKeys.TabItemIsSelectedHighlightDarkFillKey}}"/>
                            <Setter TargetName="Bd" Property="Background" Value="{DynamicResource {x:Static controls:PrimitivesBrushKeys.TabItemIsSelectedTopCenterFillKey}}"/>
                            <Setter TargetName="Bd" Property="BorderBrush" Value="{DynamicResource {x:Static controls:PrimitivesBrushKeys.TabItemIsSelectedOuterBorderFillKey}}"/>
                            <Setter TargetName="Content" Property="TextElement.Foreground" Value="{DynamicResource {x:Static controls:PrimitivesBrushKeys.TabItemIsSelectedTextFillKey}}"/>
                            <Setter TargetName="CloseButton" Property="Foreground" Value="{DynamicResource {x:Static controls:PrimitivesBrushKeys.TabItemIsSelectedCloseButtonForegroundKey}}"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="false"/>
                                <Condition Property="IsMouseOver" Value="true"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Highlight" Property="Visibility" Value="Visible"/>
                        </MultiTrigger>
                        <Trigger Property="TabStripPlacement" Value="Top">
                            <Setter Property="Margin" Value="0,1,0,0"/>
                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Bottom">
                            <Setter Property="Margin" Value="0,0,0,1"/>
                            <Setter TargetName="Bd" Property="Background" Value="{DynamicResource {x:Static controls:PrimitivesBrushKeys.TabItemNormalBottomCenterFillKey}}"/>
                            <Setter TargetName="Bd" Property="BorderThickness" Value="1,0,1,1"/>
                            <Setter TargetName="Bd" Property="CornerRadius" Value="0"/>
                            <Setter TargetName="Bd" Property="BorderThickness" Value="1,0,1,1"/>
                            <Setter TargetName="Highlight" Property="VerticalAlignment" Value="Bottom"/>
                            <Setter TargetName="Highlight" Property="CornerRadius" Value="0"/>
                            <Setter TargetName="Highlight" Property="BorderThickness" Value="1,0,1,1"/>
                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Left">
                            <Setter Property="Margin" Value="1,0,0,0"/>
                            <Setter TargetName="Bd" Property="Background" Value="{DynamicResource {x:Static controls:PrimitivesBrushKeys.TabItemNormalLeftCenterFillKey}}"/>
                            <Setter TargetName="Bd" Property="BorderThickness" Value="1,1,0,1"/>
                            <Setter TargetName="Bd" Property="CornerRadius" Value="0"/>
                            <Setter TargetName="Highlight" Property="VerticalAlignment" Value="Stretch"/>
                            <Setter TargetName="Highlight" Property="HorizontalAlignment" Value="Left"/>
                            <Setter TargetName="Highlight" Property="Height" Value="Auto"/>
                            <Setter TargetName="Highlight" Property="Width" Value="3"/>
                            <Setter TargetName="Highlight" Property="CornerRadius" Value="0"/>
                            <Setter TargetName="Highlight" Property="BorderThickness" Value="1,1,0,1"/>
                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Right">
                            <Setter Property="Margin" Value="0,0,1,0"/>
                            <Setter TargetName="Bd" Property="Background" Value="{DynamicResource {x:Static controls:PrimitivesBrushKeys.TabItemNormalRightCenterFillKey}}"/>
                            <Setter TargetName="Bd" Property="BorderThickness" Value="0,1,1,1"/>
                            <Setter TargetName="Bd" Property="CornerRadius" Value="0"/>
                            <Setter TargetName="Highlight" Property="VerticalAlignment" Value="Stretch"/>
                            <Setter TargetName="Highlight" Property="HorizontalAlignment" Value="Right"/>
                            <Setter TargetName="Highlight" Property="Height" Value="Auto"/>
                            <Setter TargetName="Highlight" Property="Width" Value="3"/>
                            <Setter TargetName="Highlight" Property="CornerRadius" Value="0"/>
                            <Setter TargetName="Highlight" Property="BorderThickness" Value="0,1,1,1"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="true"/>
                                <Condition Property="TabStripPlacement" Value="Top"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Margin" Value="0,1,0,-1"/>
                            <Setter TargetName="Content" Property="Margin" Value="0,0,0,1"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="true"/>
                                <Condition Property="TabStripPlacement" Value="Bottom"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Bd" Property="Background" Value="{DynamicResource {x:Static controls:PrimitivesBrushKeys.TabItemIsSelectedBottomCenterFillKey}}"/>
                            <Setter Property="Margin" Value="0,-1,0,1"/>
                            <Setter TargetName="Content" Property="Margin" Value="0,1,0,0"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="true"/>
                                <Condition Property="TabStripPlacement" Value="Left"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Bd" Property="Background" Value="{DynamicResource {x:Static controls:PrimitivesBrushKeys.TabItemIsSelectedLeftCenterFillKey}}"/>
                            <Setter Property="Margin" Value="1,0,-1,0"/>
                            <Setter TargetName="Content" Property="Margin" Value="0,0,1,0"/>
                            <Setter TargetName="CloseButton" Property="Margin" Value="9,0,1,0"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="true"/>
                                <Condition Property="TabStripPlacement" Value="Right"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Bd" Property="Background" Value="{DynamicResource {x:Static controls:PrimitivesBrushKeys.TabItemIsSelectedRightCenterFillKey}}"/>
                            <Setter Property="Margin" Value="-1,0,1,0"/>
                            <Setter TargetName="Content" Property="Margin" Value="1,0,0,0"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="false"/>
                                <Condition Property="IsMouseOver" Value="true"/>
                                <Condition Property="TabStripPlacement" Value="Top"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Bd" Property="Background" Value="{DynamicResource {x:Static controls:PrimitivesBrushKeys.TabItemHottrackTopCenterFillKey}}"/>
                            <Setter TargetName="Bd" Property="BorderBrush" Value="{DynamicResource {x:Static controls:PrimitivesBrushKeys.TabItemHottrackOuterBorderFillKey}}"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="false"/>
                                <Condition Property="IsMouseOver" Value="true"/>
                                <Condition Property="TabStripPlacement" Value="Bottom"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Bd" Property="Background" Value="{DynamicResource {x:Static controls:PrimitivesBrushKeys.TabItemHottrackBottomCenterFillKey}}"/>
                            <Setter TargetName="Bd" Property="BorderBrush" Value="{DynamicResource {x:Static controls:PrimitivesBrushKeys.TabItemHottrackOuterBorderFillKey}}"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="false"/>
                                <Condition Property="IsMouseOver" Value="true"/>
                                <Condition Property="TabStripPlacement" Value="Left"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Bd" Property="Background" Value="{DynamicResource {x:Static controls:PrimitivesBrushKeys.TabItemHottrackLeftCenterFillKey}}"/>
                            <Setter TargetName="Bd" Property="BorderBrush" Value="{DynamicResource {x:Static controls:PrimitivesBrushKeys.TabItemHottrackOuterBorderFillKey}}"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="false"/>
                                <Condition Property="IsMouseOver" Value="true"/>
                                <Condition Property="TabStripPlacement" Value="Right"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Bd" Property="Background" Value="{DynamicResource {x:Static controls:PrimitivesBrushKeys.TabItemHottrackRightCenterFillKey}}"/>
                            <Setter TargetName="Bd" Property="BorderBrush" Value="{DynamicResource {x:Static controls:PrimitivesBrushKeys.TabItemHottrackOuterBorderFillKey}}"/>
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="Bd" Property="Background" Value="{DynamicResource {x:Static controls:PrimitivesBrushKeys.TabItemDisabledCenterFillKey}}"/>
                            <Setter TargetName="Bd" Property="BorderBrush" Value="{DynamicResource {x:Static controls:PrimitivesBrushKeys.TabItemDisabledOuterBorderFillKey}}" />
                            <Setter TargetName="Content" Property="TextElement.Foreground" Value="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.GrayTextBrushKey}}"/>
                            <Setter TargetName="Highlight" Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <!-- _________________________ XamBusyIndicator ______________________________________ -->

    <!-- ================================ -->
    <!-- ProgressBar -->
    <!-- ================================ -->
    <Style x:Key="ProgressBarIGStyle" TargetType="{x:Type ProgressBar}" BasedOn="{StaticResource ProgressBarStyle}">
        <Setter Property="Foreground" Value="{StaticResource ProgressBar.Foreground}"/>
        <Setter Property="Background" Value="{StaticResource ProgressBar.Background}"/>
        <Setter Property="BorderBrush" Value="{StaticResource ProgressBar.Border}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ProgressBar}">
                    <Grid x:Name="TemplateRoot">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Determinate"/>
                                <VisualState x:Name="Indeterminate">
                                    <Storyboard RepeatBehavior="Forever">
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="Animation">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="0.25"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:1" Value="0.25"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:2" Value="0.25"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <PointAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransformOrigin)" Storyboard.TargetName="Animation">
                                            <EasingPointKeyFrame KeyTime="0" Value="-0.5,0.5"/>
                                            <EasingPointKeyFrame KeyTime="0:0:1" Value="0.5,0.5"/>
                                            <EasingPointKeyFrame KeyTime="0:0:2" Value="1.5,0.5"/>
                                        </PointAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="3"/>
                        <Rectangle x:Name="PART_Track"/>
                        <Grid x:Name="PART_Indicator" ClipToBounds="true" HorizontalAlignment="Left">
                            <Rectangle x:Name="Indicator" Fill="{StaticResource ProgressBar.Progress}" RenderTransformOrigin="0.5,0.5" Margin="1" RadiusX="3" RadiusY="3" />
                            <Rectangle x:Name="Animation" Fill="{StaticResource ProgressBar.Progress}" RenderTransformOrigin="0.5,0.5" Margin="1" RadiusX="3" RadiusY="3">
                                <Rectangle.RenderTransform>
                                    <TransformGroup>
                                        <ScaleTransform />
                                        <SkewTransform/>
                                        <RotateTransform/>
                                        <TranslateTransform/>
                                    </TransformGroup>
                                </Rectangle.RenderTransform>
                            </Rectangle>
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Orientation" Value="Vertical">
                            <Setter Property="LayoutTransform" TargetName="TemplateRoot">
                                <Setter.Value>
                                    <RotateTransform Angle="-90"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsIndeterminate" Value="true">
                            <Setter Property="Visibility" TargetName="Indicator" Value="Collapsed"/>
                            <Setter Property="Margin" TargetName="PART_Indicator" Value="1,0,1,0"/>
                            <Setter Property="RadiusX" TargetName="Animation" Value="6"/>
                            <Setter Property="RadiusY" TargetName="Animation" Value="6"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type igPrim:ProgressBarBusyAnimationPresenter}" BasedOn="{StaticResource BusyAnimationPresenterStyle}">
        <Setter Property="ProgressBarStyle" Value="{StaticResource ProgressBarIGStyle}" />
        <Setter Property="Height" Value="24" />
    </Style>

    <!-- ================================ -->
    <!-- ProgressRing -->
    <!-- ================================ -->
    <Style TargetType="{x:Type igPrim:ProgressRingBusyAnimationPresenter}" BasedOn="{StaticResource BusyAnimationPresenterStyle}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="RingFill" Value="{StaticResource BusyIndicatorAnimationSecondItemBackgroundBrush}" />
        <Setter Property="RingBackground" Value="{StaticResource BusyIndicatorAnimationFirstItemBackgroundBrush}" />
        <Setter Property="Foreground" Value="{StaticResource BusyIndicatorForegroundBrush}" />
    </Style>

    <!-- ================================ -->
    <!-- Gears animation -->
    <!-- ================================ -->
    <Style TargetType="{x:Type igPrim:GearsBusyAnimationPresenter}" BasedOn="{StaticResource BusyAnimationPresenterStyle}">
        <Setter Property="SmallGearFill" Value="{StaticResource BusyIndicatorAnimationSecondItemBackgroundBrush}" />
        <Setter Property="BigGearFill" Value="{StaticResource BusyIndicatorAnimationFirstItemBackgroundBrush}" />
    </Style>

    <!-- ================================ -->
    <!-- SpinnerBalls animation -->
    <!-- ================================ -->
    <Style TargetType="{x:Type igPrim:SpinnerBallsBusyAnimationPresenter}"
           BasedOn="{StaticResource BusyAnimationPresenterStyle}">
        <Setter Property="AnimationFill" Value="{StaticResource BusyIndicatorAnimationFirstItemBackgroundBrush}" />
    </Style>

    <!-- ================================ -->
    <!-- SpinnerBars animation -->
    <!-- ================================ -->
    <Style TargetType="{x:Type igPrim:SpinnerBarsBusyAnimationPresenter}"
           BasedOn="{StaticResource BusyAnimationPresenterStyle}">
        <Setter Property="AnimationFill" Value="{StaticResource BusyIndicatorAnimationFirstItemBackgroundBrush}" />
    </Style>

    <!-- ================================ -->
    <!-- SpinnerBarsWave animation -->
    <!-- ================================ -->
    <Style TargetType="{x:Type igPrim:SpinnerBarsWaveBusyAnimationPresenter}"
           BasedOn="{StaticResource BusyAnimationPresenterStyle}">
        <Setter Property="AnimationFill" Value="{StaticResource BusyIndicatorAnimationFirstItemBackgroundBrush}" />
    </Style>

    <!-- ================================ -->
    <!-- SpinnerSegmented animation -->
    <!-- ================================ -->
    <Style TargetType="{x:Type igPrim:SpinnerSegmentedBusyAnimationPresenter}" BasedOn="{StaticResource BusyAnimationPresenterStyle}">
        <Setter Property="AnimationFill" Value="{StaticResource BusyIndicatorAnimationFirstItemBackgroundBrush}" />
    </Style>

    <!-- ================================ -->
    <!-- Azure animation -->
    <!-- ================================ -->
    <Style TargetType="{x:Type igPrim:AzureBusyAnimationPresenter}" BasedOn="{StaticResource BusyAnimationPresenterStyle}">
        <Setter Property="UpperElementsFill" Value="{StaticResource BusyIndicatorAnimationSecondItemBackgroundBrush}" />
        <Setter Property="LowerElementsFill" Value="{StaticResource BusyIndicatorAnimationFirstItemBackgroundBrush}" />
    </Style>
    
</ResourceDictionary>