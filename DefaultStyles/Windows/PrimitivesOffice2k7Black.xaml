<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:ig="http://infragistics.com/Windows"
	xmlns:igWindows="http://infragistics.com/Windows"
	xmlns:igWindowsBase="http://infragistics.com/Windows"
	xmlns:looks="http://infragistics.com/Windows.Looks"
	xmlns:themes="http://infragistics.com/Themes"
	xmlns:d="http://schemas.microsoft.com/expression/interactivedesigner/2006"
	xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
	mc:Ignorable="d"
	>
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="PrimitivesAero.xaml" />
        <ResourceDictionary Source="PrimitivesOffice2k7Black_Brushes.xaml" />
    </ResourceDictionary.MergedDictionaries>

	
	<!-- CloseButtonStyle -->
	<Style x:Key="{x:Static igWindows:XamTabControl.CloseButtonStyleKey}" TargetType="{x:Type Button}">
		<Setter Property="ToolTip" Value="{Binding Source={x:Static igWindowsBase:ResourcesWindows.CloseButtonToolTip}, Path=Value}"/>
		<Setter Property="Width" Value="13"/>
		<Setter Property="Height" Value="13"/>
		<Setter Property="Focusable" Value="False"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
					<Grid>
						<Border
							x:Name="closeButtonOuterBorder"
							BorderThickness="1,1,1,1"
							BorderBrush="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.ToolWindowActiveCloseButtonNormalOuterBorderFillKey}}"
							CornerRadius="2"/>
						<Border
							x:Name="closeButtonInnerBorder"
							BorderThickness="1,1,1,1"
							Margin="1"
							BorderBrush="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.ToolWindowActiveCloseButtonNormalInnerBorderFillKey}}"
							CornerRadius="1"/>
						<Border
							x:Name="closeButtonCenter"
							Margin="2"
							Background="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.ToolWindowActiveCloseButtonNormalCenterFillKey}}"
							CornerRadius="1">
							<Path
								x:Name="closeGlyph"
								Data="M0,0L7,7 M0,7L7,0"
								Margin="1"
								StrokeThickness="2"
								SnapsToDevicePixels="True"
								Stroke="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.ToolWindowActiveCloseButtonNormalGlyphFillKey}}"/>
						</Border>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter TargetName="closeButtonOuterBorder" Property="BorderBrush" Value="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.ToolWindowActiveCloseButtonHottrackOuterBorderFillKey}}"/>
							<Setter TargetName="closeButtonInnerBorder" Property="BorderBrush" Value="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.ToolWindowActiveCloseButtonHottrackInnerBorderFillKey}}"/>
							<Setter TargetName="closeButtonCenter" Property="Background" Value="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.ToolWindowActiveCloseButtonHottrackCenterFillKey}}"/>
							<Setter TargetName="closeGlyph" Property="Stroke" Value="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.ToolWindowActiveCloseButtonHottrackGlyphFillKey}}"/>
						</Trigger>
						<Trigger Property="IsPressed" Value="True">
							<Setter TargetName="closeButtonOuterBorder" Property="BorderBrush" Value="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.ToolWindowActiveCloseButtonPressedOuterBorderFillKey}}"/>
							<Setter TargetName="closeButtonInnerBorder" Property="BorderBrush" Value="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.ToolWindowActiveCloseButtonPressedInnerBorderFillKey}}"/>
							<Setter TargetName="closeButtonCenter" Property="Background" Value="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.ToolWindowActiveCloseButtonPressedCenterFillKey}}"/>
							<Setter TargetName="closeGlyph" Property="Stroke" Value="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.ToolWindowActiveCloseButtonPressedGlyphFillKey}}"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	
	
	
	<!-- ************************************************** -->
	<!-- XamTabControl Resources -->
	<!-- ************************************************** -->
	
	<Style TargetType="{x:Type RepeatButton}" x:Key="PagerScrollBtnBase">
		<!--<Setter Property="ClickMode" Value="Hover"/>-->
		<Setter Property="Focusable" Value="False"/>
		<Setter Property="Foreground" Value="Black"/>
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="HorizontalContentAlignment" Value="Center"/>
		<Setter Property="VerticalContentAlignment" Value="Center"/>
		<Setter Property="Padding" Value="3"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type RepeatButton}">
					<Grid>
						<Border
							BorderBrush="{TemplateBinding BorderBrush}"
							BorderThickness="{TemplateBinding BorderThickness}"
							Background="{TemplateBinding Background}"
							CornerRadius="3">
							<Path
								Margin="{TemplateBinding Padding}"
								HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
								VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
								Data="{Binding Path=Content, RelativeSource={RelativeSource TemplatedParent}}"
								Fill="{TemplateBinding Foreground}"/>
						</Border>
						<Border
							x:Name="Highlight"
							Background="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.TabItemHottrackHighlightLightFillKey}}"
							BorderBrush="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.TabItemHottrackHighlightDarkFillKey}}"
							Visibility="Collapsed"/>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Style.Triggers>
		</Style.Triggers>
	</Style>

	<Style x:Key="{x:Static igWindows:XamTabControl.ScrollLeftButtonStyleKey}" TargetType="{x:Type RepeatButton}" BasedOn="{StaticResource PagerScrollBtnBase}">
		<Setter Property="Content" Value="M3,0L3,5 0,2.5z"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type RepeatButton}">
					<Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="12" Height="Auto" x:Name="grid">
						<Border HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="Auto" Height="Auto" Background="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.XamPagerButtonBlueGradientFillKey}}" CornerRadius="4,0,0,4" BorderBrush="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.XamPagerButtonOuterBorderFillKey}}" BorderThickness="1,1,0,1" x:Name="border1" SnapsToDevicePixels="True"/>
						<Rectangle HorizontalAlignment="Right" Margin="0,1,0,1" Width="1" Fill="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.XamPagerButtonLeftOuterBorderGradientFillKey}}" Stroke="{x:Null}" SnapsToDevicePixels="True" x:Name="rectangle1"/>
						<Rectangle HorizontalAlignment="Right" Margin="0,1,1,1" Width="1" Fill="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.XamPagerButtonLeftInnerBorderGradientFillKey}}" x:Name="rectangle" SnapsToDevicePixels="True"/>
						<Border HorizontalAlignment="Stretch" Margin="2,2,2,2" Width="Auto" Background="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.XamPagerButtonCenterGrayGradientFillKey}}" CornerRadius="3,0,0,3" x:Name="border" SnapsToDevicePixels="True"/>
						<Path Fill="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.XamPagerButtonGlyphFillKey}}" SnapsToDevicePixels="True" HorizontalAlignment="Center" Margin="0,8,1,7" VerticalAlignment="Center" Stretch="None" Data="{Binding Path=Content, RelativeSource={RelativeSource TemplatedParent}}"/>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter Property="Margin" TargetName="rectangle" Value="0,2,1,1"/>
							<Setter Property="Background" TargetName="border1" Value="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.XamPagerButtonHottrackFillKey}}"/>
							<Setter Property="BorderBrush" TargetName="border1" Value="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.XamPagerButtonHottrackBorderFillKey}}"/>
							<Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.XamPagerButtonHottrackBorderFillKey}}"/>
							<Setter Property="Visibility" TargetName="border" Value="Hidden"/>
						</Trigger>
						<Trigger Property="IsPressed" Value="True">
							<Setter Property="BorderBrush" TargetName="border1" Value="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.XamPagerButtonPressedBorderFillKey}}"/>
							<Setter Property="Margin" TargetName="border" Value="1,0,1,0"/>
							<Setter Property="Visibility" TargetName="rectangle1" Value="Collapsed"/>
							<Setter Property="BorderThickness" TargetName="border1" Value="1,1,1,1"/>
							<Setter Property="Background" TargetName="border" Value="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.XamPagerButtonPressedCenterFillKey}}"/>
							<Setter Property="Visibility" TargetName="border" Value="Visible"/>
							<Setter Property="Background" TargetName="border1" Value="{x:Null}"/>
							<Setter Property="Margin" TargetName="rectangle" Value="1,1,1,1"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="{x:Static igWindows:XamTabControl.ScrollRightButtonStyleKey}" TargetType="{x:Type RepeatButton}" BasedOn="{StaticResource PagerScrollBtnBase}">
		<Setter Property="Content" Value="M0,0L0,5 3,2.5z"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type RepeatButton}">
					<Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="12" Height="Auto" x:Name="grid">
						<Border HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="Auto" Height="Auto" Background="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.XamPagerButtonBlueGradientFillKey}}" CornerRadius="0,4,4,0" BorderBrush="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.XamPagerButtonOuterBorderFillKey}}" BorderThickness="0,1,1,1" x:Name="border1" SnapsToDevicePixels="True"/>
						<Rectangle HorizontalAlignment="Left" Margin="0,1,0,1" Width="1" Fill="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.XamPagerButtonLeftOuterBorderGradientFillKey}}" Stroke="{x:Null}" SnapsToDevicePixels="True" x:Name="rectangle1"/>
						<Rectangle HorizontalAlignment="Left" Margin="1,1,0,1" Width="1" Fill="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.XamPagerButtonLeftInnerBorderGradientFillKey}}" x:Name="rectangle" SnapsToDevicePixels="True"/>
						<Border HorizontalAlignment="Stretch" Margin="2,2,2,2" Width="Auto" Background="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.XamPagerButtonCenterGrayGradientFillKey}}" CornerRadius="0,3,3,0" x:Name="border" SnapsToDevicePixels="True"/>
						<Path Fill="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.XamPagerButtonGlyphFillKey}}" HorizontalAlignment="Center" Margin="0,8,0,7" VerticalAlignment="Center" Width="Auto" Stretch="None" Data="{Binding Path=Content, RelativeSource={RelativeSource TemplatedParent}}"/>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter Property="Margin" TargetName="rectangle" Value="1,2,0,1"/>
							<Setter Property="Background" TargetName="border1" Value="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.XamPagerButtonHottrackFillKey}}"/>
							<Setter Property="BorderBrush" TargetName="border1" Value="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.XamPagerButtonHottrackBorderFillKey}}"/>
							<Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.XamPagerButtonHottrackBorderFillKey}}"/>
							<Setter Property="Visibility" TargetName="border" Value="Hidden"/>
						</Trigger>
						<Trigger Property="IsPressed" Value="True">
							<Setter Property="BorderBrush" TargetName="border1" Value="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.XamPagerButtonPressedBorderFillKey}}"/>
							<Setter Property="Margin" TargetName="border" Value="1,0,1,0"/>
							<Setter Property="Visibility" TargetName="rectangle1" Value="Collapsed"/>
							<Setter Property="BorderThickness" TargetName="border1" Value="1,1,1,1"/>
							<Setter Property="Background" TargetName="border" Value="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.XamPagerButtonPressedCenterFillKey}}"/>
							<Setter Property="Visibility" TargetName="border" Value="Visible"/>
							<Setter Property="Background" TargetName="border1" Value="{x:Null}"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="{x:Static igWindows:XamTabControl.ScrollUpButtonStyleKey}" TargetType="{x:Type RepeatButton}" BasedOn="{StaticResource {x:Static igWindows:XamTabControl.ScrollLeftButtonStyleKey}}">
		<Setter Property="Content" Value="M0,3L5,3 2.5,0z"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type RepeatButton}">
					<Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="Auto" Height="12" x:Name="grid">
						<Border HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="Auto" Height="Auto" Background="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.XamPagerButtonHBlueGradientFillKey}}" CornerRadius="4,4,0,0" BorderBrush="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.XamPagerButtonHOuterBorderFillKey}}" BorderThickness="1,1,1,0" x:Name="border1" SnapsToDevicePixels="True"/>
						<Rectangle VerticalAlignment="Bottom" Margin="1,0,1,0" Height="1" Fill="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.XamPagerButtonHLeftOuterBorderGradientFillKey}}" Stroke="{x:Null}" SnapsToDevicePixels="True" x:Name="rectangle1"/>
						<Rectangle VerticalAlignment="Bottom" Margin="1,0,1,1" Height="1" Fill="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.XamPagerButtonHLeftInnerBorderGradientFillKey}}" x:Name="rectangle" SnapsToDevicePixels="True"/>
						<Border VerticalAlignment="Stretch" Margin="2,2,2,2" Height="Auto" Background="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.XamPagerButtonHCenterGrayGradientFillKey}}" CornerRadius="3,3,0,0" x:Name="border" SnapsToDevicePixels="True"/>
						<Path Fill="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.XamPagerButtonHGlyphFillKey}}" HorizontalAlignment="Center" VerticalAlignment="Center" Width="Auto" Margin="8,0,7,0" Stretch="None" Data="{Binding Path=Content, RelativeSource={RelativeSource TemplatedParent}}"/>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter Property="Margin" TargetName="rectangle" Value="2,0,1,1"/>
							<Setter Property="Background" TargetName="border1" Value="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.XamPagerButtonHHottrackFillKey}}"/>
							<Setter Property="BorderBrush" TargetName="border1" Value="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.XamPagerButtonHHottrackBorderFillKey}}"/>
							<Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.XamPagerButtonHHottrackBorderFillKey}}"/>
							<Setter Property="Visibility" TargetName="border" Value="Hidden"/>
						</Trigger>
						<Trigger Property="IsPressed" Value="True">
							<Setter Property="BorderBrush" TargetName="border1" Value="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.XamPagerButtonHPressedBorderFillKey}}"/>
							<Setter Property="Margin" TargetName="border" Value="0,1,0,1"/>
							<Setter Property="Visibility" TargetName="rectangle1" Value="Collapsed"/>
							<Setter Property="BorderThickness" TargetName="border1" Value="1,1,1,1"/>
							<Setter Property="Background" TargetName="border" Value="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.XamPagerButtonHPressedCenterFillKey}}"/>
							<Setter Property="Visibility" TargetName="border" Value="Visible"/>
							<Setter Property="Background" TargetName="border1" Value="{x:Null}"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="{x:Static igWindows:XamTabControl.ScrollDownButtonStyleKey}" TargetType="{x:Type RepeatButton}" BasedOn="{StaticResource {x:Static igWindows:XamTabControl.ScrollRightButtonStyleKey}}">
		<Setter Property="Content" Value="M0,0L2.5,3 5,0z"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type RepeatButton}">
					<Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Height="12" Width="Auto" x:Name="grid">
						<Border HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="Auto" Height="Auto" Background="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.XamPagerButtonHBlueGradientFillKey}}" CornerRadius="0,0,4,4" BorderBrush="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.XamPagerButtonHOuterBorderFillKey}}" BorderThickness="1,0,1,1" x:Name="border1" SnapsToDevicePixels="True"/>
						<Rectangle VerticalAlignment="Top" Margin="1,0,1,0" Height="1" Fill="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.XamPagerButtonHLeftOuterBorderGradientFillKey}}" Stroke="{x:Null}" SnapsToDevicePixels="True" x:Name="rectangle1"/>
						<Rectangle VerticalAlignment="Top" Margin="1,1,1,0" Height="1" Fill="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.XamPagerButtonHLeftInnerBorderGradientFillKey}}" x:Name="rectangle" SnapsToDevicePixels="True"/>
						<Border VerticalAlignment="Stretch" Margin="2,2,2,2" Height="Auto" Background="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.XamPagerButtonHCenterGrayGradientFillKey}}" CornerRadius="0,0,3,3" x:Name="border" SnapsToDevicePixels="True"/>
						<Path Fill="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.XamPagerButtonHGlyphFillKey}}" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="8,0,7,0" Width="Auto" Stretch="None" Data="{Binding Path=Content, RelativeSource={RelativeSource TemplatedParent}}"/>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter Property="Margin" TargetName="rectangle" Value="2,1,1,0"/>
							<Setter Property="Background" TargetName="border1" Value="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.XamPagerButtonHHottrackFillKey}}"/>
							<Setter Property="BorderBrush" TargetName="border1" Value="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.XamPagerButtonHHottrackBorderFillKey}}"/>
							<Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.XamPagerButtonHHottrackBorderFillKey}}"/>
							<Setter Property="Visibility" TargetName="border" Value="Hidden"/>
						</Trigger>
						<Trigger Property="IsPressed" Value="True">
							<Setter Property="BorderBrush" TargetName="border1" Value="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.XamPagerButtonHPressedBorderFillKey}}"/>
							<Setter Property="Margin" TargetName="border" Value="0,1,0,1"/>
							<Setter Property="Visibility" TargetName="rectangle1" Value="Collapsed"/>
							<Setter Property="BorderThickness" TargetName="border1" Value="1,1,1,1"/>
							<Setter Property="Background" TargetName="border" Value="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.XamPagerButtonHPressedCenterFillKey}}"/>
							<Setter Property="Visibility" TargetName="border" Value="Visible"/>
							<Setter Property="Background" TargetName="border1" Value="{x:Null}"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>



	<!-- _________________________ XamTabControl - SingleRowTabItemPagerStyleKey ______________________________________ -->
	<Style x:Key="{x:Static igWindows:XamTabControl.SingleRowTabItemPagerStyleKey}" TargetType="{x:Type igWindows:XamPager}">
		<Setter Property="ScrollDownButtonStyle" Value="{DynamicResource {x:Static igWindows:XamTabControl.ScrollDownButtonStyleKey}}"/>
		<Setter Property="ScrollLeftButtonStyle" Value="{DynamicResource {x:Static igWindows:XamTabControl.ScrollLeftButtonStyleKey}}"/>
		<Setter Property="ScrollRightButtonStyle" Value="{DynamicResource {x:Static igWindows:XamTabControl.ScrollRightButtonStyleKey}}"/>
		<Setter Property="ScrollUpButtonStyle" Value="{DynamicResource {x:Static igWindows:XamTabControl.ScrollUpButtonStyleKey}}"/>
		<Setter Property="Control.Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type igWindows:XamPager}">
					<Grid>
						<Grid.RowDefinitions>
							<RowDefinition x:Name="row1" Height="Auto"/>
							<RowDefinition x:Name="row2" Height="Auto"/>
							<RowDefinition x:Name="row3" Height="Auto"/>
						</Grid.RowDefinitions>
						<Grid.ColumnDefinitions>
							<ColumnDefinition x:Name="col1" Width="Auto"/>
							<ColumnDefinition x:Name="col2" Width="Auto"/>
							<ColumnDefinition x:Name="col3" Width="Auto"/>
						</Grid.ColumnDefinitions>
						<!-- I would have template bound the cancontent scroll but when we try to change 
					this property from the tab control template trigger its being ignored because the 
					scoll viewer will bind to the cancontentscroll of the templated parent -->
						<igWindows:PagerContentPresenter x:Name="PART_PagerContentPresenter" ReserveSpaceForScrollButtons="False" CanContentScroll="True"/>
						<RepeatButton
								x:Name="PART_ScrollLeft"
								Style="{TemplateBinding ScrollLeftButtonStyle}"
								Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
								CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}"
								Command="{x:Static ScrollBar.LineLeftCommand}">
						</RepeatButton>
						<RepeatButton
								x:Name="PART_ScrollUp"
								Style="{TemplateBinding ScrollUpButtonStyle}"
								Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
								CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}"
								Command="{x:Static ScrollBar.LineUpCommand}"/>
						<RepeatButton
								x:Name="PART_ScrollRight"
								Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
								Style="{TemplateBinding ScrollRightButtonStyle}"
								CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}"
								Command="{x:Static ScrollBar.LineRightCommand}">
						</RepeatButton>
						<RepeatButton
								x:Name="PART_ScrollDown"
								Style="{TemplateBinding ScrollDownButtonStyle}"
								Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
								CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}"
								Command="{x:Static ScrollBar.LineDownCommand}"/>
					</Grid>
					<ControlTemplate.Triggers>
						<DataTrigger Binding="{Binding RelativeSource={RelativeSource FindAncestor, {x:Type igWindows:XamTabControl}, 1}, Path=TabStripPlacement}" Value="Top">
							<Setter Property="Grid.Row" TargetName="PART_ScrollLeft" Value="1"/>
							<Setter Property="Grid.Column" TargetName="PART_ScrollLeft" Value="1"/>
							<Setter Property="Margin" TargetName="PART_ScrollLeft" Value="3,0,1,2"/>
							<Setter Property="Grid.Row" TargetName="PART_ScrollRight" Value="1"/>
							<Setter Property="Grid.Column" TargetName="PART_ScrollRight" Value="2"/>
							<Setter Property="Margin" TargetName="PART_ScrollRight" Value="1,0,1,2"/>
							<Setter Property="Grid.RowSpan" TargetName="PART_PagerContentPresenter" Value="3"/>
							<Setter Property="Width" TargetName="col1" Value="*"/>
							<Setter Property="Height" TargetName="row1" Value="*"/>
							<Setter Property="ClipContentVertically" TargetName="PART_PagerContentPresenter" Value="False"/>
						</DataTrigger>
						<DataTrigger Binding="{Binding RelativeSource={RelativeSource FindAncestor, {x:Type igWindows:XamTabControl}, 1}, Path=TabStripPlacement}" Value="Bottom">
							<Setter Property="Grid.Row" TargetName="PART_ScrollLeft" Value="0"/>
							<Setter Property="Grid.Column" TargetName="PART_ScrollLeft" Value="1"/>
							<Setter Property="Margin" TargetName="PART_ScrollLeft" Value="3,2,1,0"/>
							<Setter Property="Grid.Row" TargetName="PART_ScrollRight" Value="0"/>
							<Setter Property="Grid.Column" TargetName="PART_ScrollRight" Value="2"/>
							<Setter Property="Margin" TargetName="PART_ScrollRight" Value="1,2,1,0"/>
							<Setter Property="Grid.RowSpan" TargetName="PART_PagerContentPresenter" Value="3"/>
							<Setter Property="Width" TargetName="col1" Value="*"/>
							<Setter Property="Height" TargetName="row3" Value="*"/>
							<Setter Property="ClipContentVertically" TargetName="PART_PagerContentPresenter" Value="False"/>
						</DataTrigger>
						<DataTrigger Binding="{Binding RelativeSource={RelativeSource FindAncestor, {x:Type igWindows:XamTabControl}, 1}, Path=TabStripPlacement}" Value="Left">
							<Setter Property="Grid.Row" TargetName="PART_ScrollUp" Value="1"/>
							<Setter Property="Grid.Column" TargetName="PART_ScrollUp" Value="1"/>
							<Setter Property="Margin" TargetName="PART_ScrollUp" Value="0,3,2,1"/>
							<Setter Property="Grid.Row" TargetName="PART_ScrollDown" Value="2"/>
							<Setter Property="Grid.Column" TargetName="PART_ScrollDown" Value="1"/>
							<Setter Property="Margin" TargetName="PART_ScrollDown" Value="0,1,2,1"/>
							<Setter Property="Grid.ColumnSpan" TargetName="PART_PagerContentPresenter" Value="2"/>
							<Setter Property="Height" TargetName="row1" Value="*"/>
							<Setter Property="Width" TargetName="col1" Value="*"/>
							<Setter Property="Width" TargetName="col3" Value="0"/>
							<Setter Property="ClipContentHorizontally" TargetName="PART_PagerContentPresenter" Value="False"/>
						</DataTrigger>
						<DataTrigger Binding="{Binding RelativeSource={RelativeSource FindAncestor, {x:Type igWindows:XamTabControl}, 1}, Path=TabStripPlacement}" Value="Right">
							<Setter Property="Grid.Row" TargetName="PART_ScrollUp" Value="1"/>
							<Setter Property="Grid.Column" TargetName="PART_ScrollUp" Value="0"/>
							<Setter Property="Margin" TargetName="PART_ScrollUp" Value="2,3,0,1"/>
							<Setter Property="Grid.Row" TargetName="PART_ScrollDown" Value="2"/>
							<Setter Property="Grid.Column" TargetName="PART_ScrollDown" Value="0"/>
							<Setter Property="Margin" TargetName="PART_ScrollDown" Value="2,1,0,1"/>
							<Setter Property="Grid.ColumnSpan" TargetName="PART_PagerContentPresenter" Value="2"/>
							<Setter Property="Height" TargetName="row1" Value="*"/>
							<Setter Property="Width" TargetName="col2" Value="*"/>
							<Setter Property="Width" TargetName="col3" Value="0"/>
							<Setter Property="ClipContentHorizontally" TargetName="PART_PagerContentPresenter" Value="False"/>
						</DataTrigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>


	<!-- _________________________ XamTabControl - MultiRowTabItemPagerStyleKey ______________________________________ -->
	<Style x:Key="{x:Static igWindows:XamTabControl.MultiRowTabItemPagerStyleKey}" TargetType="{x:Type igWindows:XamPager}">
		<Setter Property="ScrollDownButtonStyle" Value="{DynamicResource {x:Static igWindows:XamTabControl.ScrollDownButtonStyleKey}}"/>
		<Setter Property="ScrollLeftButtonStyle" Value="{DynamicResource {x:Static igWindows:XamTabControl.ScrollLeftButtonStyleKey}}"/>
		<Setter Property="ScrollRightButtonStyle" Value="{DynamicResource {x:Static igWindows:XamTabControl.ScrollRightButtonStyleKey}}"/>
		<Setter Property="ScrollUpButtonStyle" Value="{DynamicResource {x:Static igWindows:XamTabControl.ScrollUpButtonStyleKey}}"/>
		<Setter Property="Control.Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type igWindows:XamPager}">
					<Grid>
						<Grid.RowDefinitions>
							<RowDefinition x:Name="row1" Height="Auto"/>
							<RowDefinition x:Name="row2" Height="Auto"/>
							<RowDefinition x:Name="row3" Height="Auto"/>
						</Grid.RowDefinitions>
						<Grid.ColumnDefinitions>
							<ColumnDefinition x:Name="col1" Width="Auto"/>
							<ColumnDefinition x:Name="col2" Width="Auto"/>
							<ColumnDefinition x:Name="col3" Width="Auto"/>
						</Grid.ColumnDefinitions>
						<!-- I would have template bound the cancontent scroll but when we try to change 
					this property from the tab control template trigger its being ignored because the 
					scoll viewer will bind to the cancontentscroll of the templated parent -->
						<igWindows:PagerContentPresenter x:Name="PART_PagerContentPresenter" ReserveSpaceForScrollButtons="False" CanContentScroll="True"/>
						<RepeatButton
								x:Name="PART_ScrollLeft"
								Style="{TemplateBinding ScrollLeftButtonStyle}"
								Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
								CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}"
								Command="{x:Static ScrollBar.LineLeftCommand}">
						</RepeatButton>
						<RepeatButton
								x:Name="PART_ScrollUp"
								Style="{TemplateBinding ScrollUpButtonStyle}"
								Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
								CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}"
								Command="{x:Static ScrollBar.LineUpCommand}"/>
						<RepeatButton
								x:Name="PART_ScrollRight"
								Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
								Style="{TemplateBinding ScrollRightButtonStyle}"
								CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}"
								Command="{x:Static ScrollBar.LineRightCommand}">
						</RepeatButton>
						<RepeatButton
								x:Name="PART_ScrollDown"
								Style="{TemplateBinding ScrollDownButtonStyle}"
								Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
								CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}"
								Command="{x:Static ScrollBar.LineDownCommand}"/>
					</Grid>
					<ControlTemplate.Triggers>
						<DataTrigger Binding="{Binding RelativeSource={RelativeSource FindAncestor, {x:Type igWindows:XamTabControl}, 1}, Path=TabStripPlacement}" Value="Top">
							<Setter Property="Grid.Row" TargetName="PART_ScrollUp" Value="1"/>
							<Setter Property="Grid.Column" TargetName="PART_ScrollUp" Value="1"/>
							<Setter Property="Margin" TargetName="PART_ScrollUp" Value="3,0,0,1"/>
							<Setter Property="Grid.Row" TargetName="PART_ScrollDown" Value="2"/>
							<Setter Property="Grid.Column" TargetName="PART_ScrollDown" Value="1"/>
							<Setter Property="Margin" TargetName="PART_ScrollDown" Value="3,1,0,3"/>
							<Setter Property="Grid.RowSpan" TargetName="PART_PagerContentPresenter" Value="3"/>
							<Setter Property="Width" TargetName="col3" Value="0"/>
							<Setter Property="Width" TargetName="col1" Value="*"/>
							<Setter Property="Height" TargetName="row1" Value="*"/>
							<Setter Property="ClipContentVertically" TargetName="PART_PagerContentPresenter" Value="False"/>
						</DataTrigger>
						<DataTrigger Binding="{Binding RelativeSource={RelativeSource FindAncestor, {x:Type igWindows:XamTabControl}, 1}, Path=TabStripPlacement}" Value="Bottom">
							<Setter Property="Grid.Row" TargetName="PART_ScrollUp" Value="0"/>
							<Setter Property="Grid.Column" TargetName="PART_ScrollUp" Value="1"/>
							<Setter Property="Margin" TargetName="PART_ScrollUp" Value="3,3,0,1"/>
							<Setter Property="Grid.Row" TargetName="PART_ScrollDown" Value="1"/>
							<Setter Property="Grid.Column" TargetName="PART_ScrollDown" Value="1"/>
							<Setter Property="Margin" TargetName="PART_ScrollDown" Value="3,1,0,0"/>
							<Setter Property="Grid.RowSpan" TargetName="PART_PagerContentPresenter" Value="3"/>
							<Setter Property="Width" TargetName="col3" Value="0"/>
							<Setter Property="Width" TargetName="col1" Value="*"/>
							<Setter Property="Height" TargetName="row3" Value="*"/>
							<Setter Property="ClipContentVertically" TargetName="PART_PagerContentPresenter" Value="False"/>
						</DataTrigger>
						<DataTrigger Binding="{Binding RelativeSource={RelativeSource FindAncestor, {x:Type igWindows:XamTabControl}, 1}, Path=TabStripPlacement}" Value="Left">
							<Setter Property="Grid.Row" TargetName="PART_ScrollLeft" Value="0"/>
							<Setter Property="Grid.Column" TargetName="PART_ScrollLeft" Value="1"/>
							<Setter Property="Margin" TargetName="PART_ScrollLeft" Value="0,0,1,3"/>
							<Setter Property="Grid.Row" TargetName="PART_ScrollRight" Value="0"/>
							<Setter Property="Grid.Column" TargetName="PART_ScrollRight" Value="2"/>
							<Setter Property="Margin" TargetName="PART_ScrollRight" Value="1,0,3,3"/>
							<Setter Property="Grid.Row" TargetName="PART_PagerContentPresenter" Value="1"/>
							<Setter Property="Grid.ColumnSpan" TargetName="PART_PagerContentPresenter" Value="3"/>
							<Setter Property="Height" TargetName="row3" Value="0"/>
							<Setter Property="Height" TargetName="row2" Value="*"/>
							<Setter Property="Width" TargetName="col1" Value="*"/>
							<Setter Property="ClipContentHorizontally" TargetName="PART_PagerContentPresenter" Value="False"/>
						</DataTrigger>
						<DataTrigger Binding="{Binding RelativeSource={RelativeSource FindAncestor, {x:Type igWindows:XamTabControl}, 1}, Path=TabStripPlacement}" Value="Right">
							<Setter Property="Grid.Row" TargetName="PART_ScrollLeft" Value="1"/>
							<Setter Property="Grid.Column" TargetName="PART_ScrollLeft" Value="0"/>
							<Setter Property="Margin" TargetName="PART_ScrollLeft" Value="3,3,1,0"/>
							<Setter Property="Grid.Row" TargetName="PART_ScrollRight" Value="1"/>
							<Setter Property="Grid.Column" TargetName="PART_ScrollRight" Value="1"/>
							<Setter Property="Margin" TargetName="PART_ScrollRight" Value="1,3,0,0"/>
							<Setter Property="Grid.Row" TargetName="PART_PagerContentPresenter" Value="0"/>
							<Setter Property="Grid.ColumnSpan" TargetName="PART_PagerContentPresenter" Value="3"/>
							<Setter Property="Height" TargetName="row3" Value="0"/>
							<Setter Property="Height" TargetName="row1" Value="*"/>
							<Setter Property="Width" TargetName="col3" Value="*"/>
							<Setter Property="ClipContentHorizontally" TargetName="PART_PagerContentPresenter" Value="False"/>
						</DataTrigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	
	<!-- ************************************************** -->
	<!-- End XamTabControl Resources -->
	<!-- ************************************************** -->
    
    
    <!-- _________________________ XamTabControl ______________________________________ -->
	<Style TargetType="{x:Type igWindows:XamTabControl}">
		<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
		<Setter Property="Padding" Value="4"/>
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="BorderBrush" Value="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.TabItemIsSelectedOuterBorderFillKey}}"/>
		<Setter Property="Background" Value="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.TabControlTopCenterFillKey}}"/>
		<Setter Property="Border.CornerRadius" Value="3"/>
		<Setter Property="HorizontalContentAlignment" Value="Center"/>
		<Setter Property="VerticalContentAlignment" Value="Center"/>
		<Setter Property="Control.Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type igWindows:XamTabControl}">
					<Grid ClipToBounds="True" SnapsToDevicePixels="True" KeyboardNavigation.TabNavigation="Local">
						<Grid.ColumnDefinitions>
							<ColumnDefinition x:Name="gridCol0"/>
							<ColumnDefinition Width="0" x:Name="gridCol1"/>
						</Grid.ColumnDefinitions>
						<Grid.RowDefinitions>
							<RowDefinition Height="Auto" x:Name="gridRow0"/>
							<RowDefinition Height="*" x:Name="gridRow1"/>
						</Grid.RowDefinitions>
						<Border
							BorderBrush="{x:Null}"
							x:Name="ContentPanel"
							KeyboardNavigation.TabIndex="2"
							KeyboardNavigation.TabNavigation="Local"
							KeyboardNavigation.DirectionalNavigation="Contained"
							Grid.Row="1"
							Visibility="Visible"
							Margin="0,-1,0,0"
							Background="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.TabControlTabStripCenterFillKey}}">
							<!--Background="#FF515151"-->
							<Border
								BorderThickness="{TemplateBinding Border.BorderThickness}"
								Background="{TemplateBinding Background}"
								BorderBrush="{TemplateBinding BorderBrush}"
								Margin="0,1,0,0"
								CornerRadius="{TemplateBinding Border.CornerRadius}">
								<!--<Border Background="{DynamicResource Container_Fill}" BorderBrush="{DynamicResource Container_BorderFill}" CornerRadius="5,5,5,5">-->
								<Border>
									<ContentPresenter
										ContentSource="SelectedContent"
										Margin="{TemplateBinding Control.Padding}"
										Height="{TemplateBinding TabItemContentHeight}"
										Name="PART_SelectedContentHost"
										SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
								</Border>
							</Border>
						</Border>
            <!-- AS 5/4/10 TFS30695 
              Added Tab(Index|Navigation) settings so this gets focus first. -->
            <DockPanel 
              x:Name="PART_HeaderArea" 
              Panel.ZIndex="1" 
							KeyboardNavigation.TabIndex="1"
							KeyboardNavigation.TabNavigation="Local"
              Background="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.TabControlTabStripCenterFillKey}}">
							<ContentPresenter
								x:Name="PreTabItemContent"
								DockPanel.Dock="Left"
								ContentSource="PreTabItemContent"
								TextElement.Foreground="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.TabItemNormalTextFillKey}}"/>
							<Button
								Name="CloseButton"
								DockPanel.Dock="Right"
								Command="igWindows:TabControlCommands.CloseSelected"
								CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}"
								Visibility="Collapsed"
								Style="{DynamicResource {x:Static igWindows:XamTabControl.CloseButtonStyleKey}}"
								/>
							<ContentPresenter
								x:Name="PostTabItemContent"
								DockPanel.Dock="Right"
								ContentSource="PostTabItemContent"
                                TextElement.Foreground="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.TabItemNormalTextFillKey}}"/>
							<igWindows:XamPager x:Name="PART_TabItemScrollViewer" 
                                                Style="{DynamicResource {x:Static igWindows:XamTabControl.SingleRowTabItemPagerStyleKey}}"
                                                CanContentScroll="True"  
                                                ScrollViewer.VerticalScrollBarVisibility="{TemplateBinding TabItemVerticalScrollBarVisibility}" 
                                                ScrollViewer.HorizontalScrollBarVisibility="{TemplateBinding TabItemHorizontalScrollBarVisibility}">
								<ItemsPresenter x:Name="PART_TabHeaderPanel" Margin="7,0,7,0" />
							</igWindows:XamPager>
						</DockPanel>
						<Popup
							x:Name="PART_Popup"
							StaysOpen="False"
							Width="{TemplateBinding PreferredDropDownExtent}"
							IsOpen="{Binding Path=IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}"
							CustomPopupPlacementCallback="{TemplateBinding PreferredDropDownPlacementCallback}"
							Placement="Custom"
							AllowsTransparency="True"
							PopupAnimation="{Binding Path=DropDownAnimation, RelativeSource={RelativeSource TemplatedParent}}">
							<Border
								BorderBrush="#FFD0CEBF"
								BorderThickness="0,0,1,1"
								KeyboardNavigation.TabIndex="2"
								CornerRadius="{TemplateBinding Border.CornerRadius}"
								KeyboardNavigation.TabNavigation="Local"
								KeyboardNavigation.DirectionalNavigation="Contained">
								<Border BorderBrush="{TemplateBinding Border.BorderBrush}" BorderThickness="{TemplateBinding Border.BorderThickness}" CornerRadius="{TemplateBinding Border.CornerRadius}">
									<Border Background="{TemplateBinding Panel.Background}" CornerRadius="{TemplateBinding Border.CornerRadius}">
										<ContentPresenter
											ContentSource="SelectedContent"
											Margin="{TemplateBinding Control.Padding}"
											Height="{TemplateBinding TabItemContentHeight}"
											Name="PART_SelectedContentHostMinimized"
											HorizontalAlignment="{Binding ElementName=PART_SelectedContentHost, Path=HorizontalAlignment}"
											VerticalAlignment="{Binding ElementName=PART_SelectedContentHost, Path=VerticalAlignment}"
											SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"
											ContentTemplateSelector="{TemplateBinding TabControl.SelectedContentTemplateSelector}"
											ContentTemplate="{TemplateBinding TabControl.SelectedContentTemplate}"
											Content="{x:Null}"/>
									</Border>
								</Border>
							</Border>
						</Popup>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="ShowTabHeaderCloseButton" Value="True">
							<Setter Property="Visibility" TargetName="CloseButton" Value="Visible"/>
						</Trigger>
						<Trigger Property="DropDownAnimation" Value="None">
							<!--<Setter Property="AllowsTransparency" TargetName="PART_Popup" Value="False"/>-->
						</Trigger>
						<Trigger Property="TabControl.TabStripPlacement" Value="Top">
							<Setter Property="Width" TargetName="PART_Popup" Value="{Binding Path=PreferredDropDownExtent, RelativeSource={x:Static RelativeSource.TemplatedParent}}"/>
							<Setter TargetName="CloseButton" Property="Margin" Value="3,1,3,0"/>
							<Setter TargetName="PreTabItemContent" Property="VerticalAlignment" Value="Bottom"/>
							<Setter TargetName="PostTabItemContent" Property="VerticalAlignment" Value="Bottom"/>
							<Setter TargetName="PostTabItemContent" Property="Margin" Value="3,0,3,4"/>
							<Setter TargetName="PreTabItemContent" Property="Margin" Value="3,0,3,4"/>
							<Setter Property="FrameworkElement.Margin" TargetName="PART_TabHeaderPanel" Value="7,1,7,0"/>
						</Trigger>
						<Trigger Property="TabControl.TabStripPlacement" Value="Bottom">
							<Setter TargetName="CloseButton" Property="Margin" Value="3,1,3,0"/>
							<Setter TargetName="PostTabItemContent" Property="Margin" Value="3,5,3,2"/>
							<Setter TargetName="PreTabItemContent" Property="Margin" Value="3,5,3,2"/>
							<Setter Property="Grid.Row" TargetName="PART_HeaderArea" Value="1"/>
							<Setter Property="Grid.Row" TargetName="ContentPanel" Value="0"/>
							<Setter Property="Height" TargetName="gridRow0" Value="*"/>
							<Setter Property="Height" TargetName="gridRow1" Value="Auto"/>
							<Setter Property="Width" TargetName="PART_Popup" Value="{Binding Path=PreferredDropDownExtent, RelativeSource={x:Static RelativeSource.TemplatedParent}}"/>
							<Setter Property="FrameworkElement.Margin" TargetName="PART_TabHeaderPanel" Value="7,0,7,1"/>
						</Trigger>
						<Trigger Property="TabControl.TabStripPlacement" Value="Left">
							<Setter TargetName="PostTabItemContent" Property="Margin" Value="5,3,4,3"/>
							<Setter TargetName="PreTabItemContent" Property="Margin" Value="5,3,4,3"/>
							<Setter Property="Margin" TargetName="CloseButton" Value="0,0,4,3"/>
							<Setter Property="DockPanel.Dock" TargetName="CloseButton" Value="Bottom"/>
							<Setter Property="HorizontalAlignment" TargetName="CloseButton" Value="Right"/>
							<Setter Property="Grid.Row" TargetName="PART_HeaderArea" Value="1"/>
							<Setter Property="Grid.Column" TargetName="ContentPanel" Value="1"/>
							<Setter Property="Height" TargetName="gridRow0" Value="0"/>
							<Setter Property="Width" TargetName="gridCol0" Value="Auto"/>
							<Setter Property="Width" TargetName="gridCol1" Value="*"/>
							<Setter Property="DockPanel.Dock" TargetName="PreTabItemContent" Value="Top"/>
							<Setter Property="DockPanel.Dock" TargetName="PostTabItemContent" Value="Bottom"/>
							<Setter Property="Height" TargetName="PART_Popup" Value="{Binding Path=PreferredDropDownExtent, RelativeSource={x:Static RelativeSource.TemplatedParent}}"/>
							<Setter Property="FrameworkElement.Margin" TargetName="PART_TabHeaderPanel" Value="1,7,0,7"/>
						</Trigger>
						<Trigger Property="TabControl.TabStripPlacement" Value="Right">
							<Setter TargetName="PostTabItemContent" Property="Margin" Value="4,3,4,3"/>
							<Setter TargetName="PreTabItemContent" Property="Margin" Value="4,3,4,3"/>
							<Setter Property="Margin" TargetName="CloseButton" Value="4,0,0,3"/>
							<Setter Property="DockPanel.Dock" TargetName="CloseButton" Value="Bottom"/>
							<Setter Property="HorizontalAlignment" TargetName="CloseButton" Value="Left"/>
							<Setter Property="Grid.Row" TargetName="PART_HeaderArea" Value="1"/>
							<Setter Property="Grid.Column" TargetName="PART_HeaderArea" Value="1"/>
							<Setter Property="Height" TargetName="gridRow0" Value="0"/>
							<Setter Property="Width" TargetName="gridCol0" Value="*"/>
							<Setter Property="Width" TargetName="gridCol1" Value="Auto"/>
							<Setter Property="DockPanel.Dock" TargetName="PreTabItemContent" Value="Top"/>
							<Setter Property="DockPanel.Dock" TargetName="PostTabItemContent" Value="Bottom"/>
							<Setter Property="Height" TargetName="PART_Popup" Value="{Binding Path=PreferredDropDownExtent, RelativeSource={x:Static RelativeSource.TemplatedParent}}"/>
							<Setter Property="FrameworkElement.Margin" TargetName="PART_TabHeaderPanel" Value="0,7,1,7"/>
						</Trigger>
						<Trigger Property="UIElement.IsEnabled" Value="False">
							<Setter Property="TextElement.Foreground" Value="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.GrayTextBrushKey}}"/>
						</Trigger>
						<Trigger Property="IsMinimized" Value="True">
							<Setter Property="Visibility" TargetName="ContentPanel" Value="Collapsed"/>
						</Trigger>
							<Trigger Property="IsMultiRow" Value="True">
								<Setter TargetName="PART_TabItemScrollViewer" Property="Style" Value="{DynamicResource {x:Static igWindows:XamTabControl.MultiRowTabItemPagerStyleKey}}"/>
							</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Style.Triggers>
		
			<Trigger Property="TabControl.TabStripPlacement" Value="Bottom">
				<Setter Property="Panel.Background" Value="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.TabControlBottomCenterFillKey}}"/>
			</Trigger>
			
			<Trigger Property="TabControl.TabStripPlacement" Value="Left">
				<Setter Property="Panel.Background" Value="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.TabControlLeftCenterFillKey}}"/>
			</Trigger>
			
			<Trigger Property="TabControl.TabStripPlacement" Value="Right">
				<Setter Property="Panel.Background" Value="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.TabControlRightCenterFillKey}}"/>
			</Trigger>
			
		</Style.Triggers>
	</Style>


	<!-- _________________________ TabItemEx ______________________________________ -->
	<Style x:Key="{x:Type igWindows:TabItemEx}" TargetType="{x:Type igWindows:TabItemEx}">
		<!-- <Setter Property="FocusVisualStyle" Value="{StaticResource Foo}" /> -->
		<Setter Property="Foreground" Value="#FF000000"/>
		<Setter Property="BorderBrush" Value="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.TabItemNormalOuterBorderFillKey}}"/>
		<Setter Property="Background" Value="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.TabItemNormalTopCenterFillKey}}"/>
		<Setter Property="HorizontalContentAlignment" Value="Stretch"/>
		<Setter Property="VerticalContentAlignment" Value="Stretch"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type igWindows:TabItemEx}">
					<ControlTemplate.Resources>
						<Storyboard x:Key="TabMouseOver">
							<ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="TabHottrack" Storyboard.TargetProperty="(UIElement.Visibility)">
								<DiscreteObjectKeyFrame KeyTime="00:00:00.0000" Value="{x:Static Visibility.Visible}"/>
							</ObjectAnimationUsingKeyFrames>
							<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="TabHottrack" Storyboard.TargetProperty="(UIElement.Opacity)">
								<SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="1"/>
							</DoubleAnimationUsingKeyFrames>
						</Storyboard>
						<Storyboard x:Key="TabMouseOut" FillBehavior="Stop">
							<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="TabHottrack" Storyboard.TargetProperty="(UIElement.Opacity)">
								<SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0"/>
							</DoubleAnimationUsingKeyFrames>
							<ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="TabHottrack" Storyboard.TargetProperty="(UIElement.Visibility)">
								<DiscreteObjectKeyFrame KeyTime="00:00:00.310000" Value="{x:Static Visibility.Collapsed}"/>
							</ObjectAnimationUsingKeyFrames>
						</Storyboard>
						<Storyboard x:Key="TabMouseOverNotSelected">
							<ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="TabMouseOverNotSelected" Storyboard.TargetProperty="(UIElement.Visibility)">
								<DiscreteObjectKeyFrame KeyTime="00:00:00.00000" Value="{x:Static Visibility.Visible}"/>
							</ObjectAnimationUsingKeyFrames>
							<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="TabMouseOverNotSelected" Storyboard.TargetProperty="(UIElement.Opacity)">
								<SplineDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
							</DoubleAnimationUsingKeyFrames>
						</Storyboard>
						<Storyboard x:Key="TabMouseOutNotSelected" FillBehavior="Stop">
							<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="TabMouseOverNotSelected" Storyboard.TargetProperty="(UIElement.Opacity)">
								<SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="0"/>
							</DoubleAnimationUsingKeyFrames>
							<ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="TabMouseOverNotSelected" Storyboard.TargetProperty="(UIElement.Visibility)">
								<DiscreteObjectKeyFrame KeyTime="00:00:00.21000" Value="{x:Static Visibility.Collapsed}"/>
							</ObjectAnimationUsingKeyFrames>
						</Storyboard>
					</ControlTemplate.Resources>
					<Grid SnapsToDevicePixels="true">
					<Border Name="Bd">
							<Grid Background="Transparent">
								<Grid.ColumnDefinitions>
									<ColumnDefinition/>
									<ColumnDefinition Width="Auto"/>
								</Grid.ColumnDefinitions>

								<Grid
									Visibility="Collapsed"
									x:Name="TabMouseOverNotSelected"
									Height="Auto"
									Background="Transparent"
									Opacity="0"
									SnapsToDevicePixels="True"
									d:IsHidden="True" Grid.ColumnSpan="2">
									<Border
										x:Name="notSelectedBase"
										Background="#00000000"
										BorderBrush="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.TabItemHottrackOuterBorderFillKey}}"
										BorderThickness="1,1,1,0"
										CornerRadius="3,3,0,0"
										SnapsToDevicePixels="True"/>
									<Border
										x:Name="notSelectedInnerGlow2"
										SnapsToDevicePixels="True"
										Margin="1,1,1,0"
										Background="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.TabItemHottrackMiddleCenterFillKey}}"
										CornerRadius="2,2,0,0"/>
									<Border x:Name="notSelectedHighlight" Margin="1,1,1,0" VerticalAlignment="Top" Height="9" Background="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.TabItemHottrackTopCenterFillKey}}" CornerRadius="2,2,5,5" SnapsToDevicePixels="True"/>
									<Border
										x:Name="notSelectedInnerGlow"
										SnapsToDevicePixels="True"
										Background="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.TabItemHottrackCenterGlowFillKey}}"
										Margin="1,0,1,0"/>
						</Grid>


						<Grid
							x:Name="TabSelected"
							Height="Auto"
							Visibility="Collapsed"
							Margin="0,0,0,-1"
							VerticalAlignment="Stretch"
							Grid.ColumnSpan="2">
							<Border
								SnapsToDevicePixels="True"
								Margin="3,1,3,0"
								CornerRadius="4,3,0,0"
								x:Name="InnerBorder1"
								Background="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.TabItemIsSelectedHighlightLightFillKey}}"/>
							<Path
								Height="4"
								Width="4"
								Stretch="Fill"
								Opacity="1"
								Data="M 24,71 C24,71 24,72 24,72 24,73 23,74 22,74 22,74 21,74 21,74 21,74 21,75 21,75 21,75 22,75 22,75 22,75 23,75 23,75 24,75 25,74 25,73 25,73 25,71 25,71 25,71 24,71 24,71 z"
								Fill="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.TabItemIsSelectedLeftHighlightFillKey}}"
								SnapsToDevicePixels="True"
								x:Name="BottomLeftInnerFilet1"
								HorizontalAlignment="Left"
								Margin="1,0,0,0"
								VerticalAlignment="Bottom"/>
							<Path
								Height="4"
								Width="4"
								Stretch="Fill"
								Opacity="1"
								Data="M 28,75 C28,75 29,75 29,75 29,75 30,75 30,75 30,75 30,74 30,74 30,74 29,74 29,74 28,74 27,73 27,72 27,72 27,71 27,71 27,71 26,71 26,71 26,71 26,72 26,72 26,72 26,73 26,73 26,74 27,75 28,75 z"
								Fill="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.TabItemIsSelectedLeftHighlightFillKey}}"
								SnapsToDevicePixels="True"
								x:Name="BottomRightInnerFilet1"
								HorizontalAlignment="Right"
								Margin="0,0,1,0"
								VerticalAlignment="Bottom"/>
							<Border
								SnapsToDevicePixels="True"
								HorizontalAlignment="Left"
								Margin="4,1,4,3"
								x:Name="InnerSideHighlightLeft1"
								Width="3"
								BorderBrush="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.TabItemIsSelectedLeftHighlightFillKey}}"
								BorderThickness="1,0,0,0"
								CornerRadius="2,0,0,0"/>
							<Border
								x:Name="InnerSideHighlightRight1"
								Width="3"
								BorderThickness="0,0,1,0"
								CornerRadius="2,2,0,0"
								SnapsToDevicePixels="True"
								HorizontalAlignment="Right"
								Margin="0,1,4,3"
								VerticalAlignment="Stretch"
								Height="Auto"
								BorderBrush="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.TabItemIsSelectedRightHighlightFillKey}}"/>
							<Border
								SnapsToDevicePixels="True"
								Margin="4,1,4,0"
								BorderThickness="0,1,0,0"
								CornerRadius="2,2,0,0"
								x:Name="TopHighlight"
								BorderBrush="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.TabItemIsSelectedHighlightDarkFillKey}}"/>
							<Path
								Margin="0,0,0,0"
								HorizontalAlignment="Left"
								VerticalAlignment="Bottom"
								Height="4"
								Width="4"
								Stretch="Fill"
								Opacity="1"
								Data="M 24,71 C24,71 24,72 24,72 24,73 23,74 22,74 22,74 21,74 21,74 21,74 21,75 21,75 21,75 22,75 22,75 22,75 23,75 23,75 24,75 25,74 25,73 25,73 25,71 25,71 25,71 24,71 24,71 z"
								Fill="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.TabItemIsSelectedOuterBorderFillKey}}"
								SnapsToDevicePixels="True"
								x:Name="BottomLeftFilet1"/>
							<Path
								Margin="0,0,0,0"
								HorizontalAlignment="Right"
								VerticalAlignment="Bottom"
								Height="4"
								Width="4"
								Stretch="Fill"
								Opacity="1"
								Data="M 28,75 C28,75 29,75 29,75 29,75 30,75 30,75 30,75 30,74 30,74 30,74 29,74 29,74 28,74 27,73 27,72 27,72 27,71 27,71 27,71 26,71 26,71 26,71 26,72 26,72 26,72 26,73 26,73 26,74 27,75 28,75 z"
								Fill="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.TabItemIsSelectedOuterBorderFillKey}}"
								SnapsToDevicePixels="True"
								x:Name="BottomRightFilet1"/>
							<Border
								SnapsToDevicePixels="True"
								Margin="3,0,3,3"
								x:Name="OuterStroke1"
								BorderBrush="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.TabItemIsSelectedOuterBorderFillKey}}"
								BorderThickness="1,1,1,0"
								CornerRadius="3,3,0,0"/>
							<Border
								Margin="6,4,6,0"
								CornerRadius="1,1,0,0"
								SnapsToDevicePixels="True"
								x:Name="Center1"
								Background="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.TabItemIsSelectedTopCenterFillKey}}"/>
						</Grid>

						<Grid
							x:Name="TabHottrack"
							Visibility="Collapsed"
							Opacity="0" d:IsHidden="True" Grid.ColumnSpan="2">
							<Border Height="Auto" CornerRadius="2,0,1,0" SnapsToDevicePixels="True" Opacity="1" x:Name="OuterGlowLeft" Background="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.TabItemIsSelectedHottrackOuterGlowFillKey}}" HorizontalAlignment="Left" Margin="1,0,0,0" Width="2" Padding="0,0,0,0"/>
							<Border Height="Auto" CornerRadius="0,2,0,1" SnapsToDevicePixels="True" Opacity="1" x:Name="OuterGlowRight" Background="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.TabItemIsSelectedHottrackOuterGlowFillKey}}" Width="2" Padding="0,0,0,0" HorizontalAlignment="Right" Margin="0,0,1,0"/>
							<Border SnapsToDevicePixels="True" x:Name="HotTrackOuterStroke" BorderThickness="1,1,1,0" CornerRadius="3,3,0,0" Margin="3,0,3,0" BorderBrush="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.TabItemIsSelectedHottrackOuterBorderFillKey}}"/>
							<Rectangle SnapsToDevicePixels="True" HorizontalAlignment="Right" Margin="0,3,4,0" x:Name="HoverSideHighlightRight" Width="1" Fill="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.TabItemIsSelectedHottrackSideHighlightFillKey}}"/>
							<Rectangle SnapsToDevicePixels="True" HorizontalAlignment="Left" Margin="4,3,0,0" x:Name="HoverSideHighlightLeft" Width="1" Fill="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.TabItemIsSelectedHottrackSideHighlightFillKey}}"/>
							<Border SnapsToDevicePixels="True" Margin="4,1,4,0" VerticalAlignment="Top" Height="2" Background="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.TabItemIsSelectedHottrackTopHighlightFillKey}}" CornerRadius="3,3,0,0" x:Name="TopHighlight2"/>
						</Grid>
							<ContentPresenter
								Name="Content"
								ContentSource="Header"
								Margin="15,5,15,4"
								TextElement.Foreground="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.TabItemNormalTextFillKey}}"
								SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
								RecognizesAccessKey="true"
								HorizontalAlignment="{Binding Path=HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"
								VerticalAlignment="{Binding Path=VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
							<Button
								Name="CloseButton"
								Grid.Column="1"
								Command="igWindows:TabItemExCommands.Close"
								CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}"
								Visibility="{TemplateBinding ComputedCloseButtonVisibility}"
								Style="{DynamicResource {x:Static igWindows:XamTabControl.CloseButtonStyleKey}}"
								/>
							</Grid>
						</Border>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True"/>
						<MultiDataTrigger>
							<MultiDataTrigger.Conditions>
								<Condition Binding="{Binding Path=IsMouseOverTab, RelativeSource={x:Static RelativeSource.Self}}" Value="True"/>
								<Condition Binding="{Binding Path=IsSelected, RelativeSource={x:Static RelativeSource.Self}}" Value="False"/>
							</MultiDataTrigger.Conditions>
							<MultiDataTrigger.EnterActions>
								<BeginStoryboard x:Name="TabMouseOverNotSelected_BeginStoryboard" Storyboard="{StaticResource TabMouseOverNotSelected}"/>
							</MultiDataTrigger.EnterActions>
							<MultiDataTrigger.ExitActions>
								<BeginStoryboard x:Name="TabMouseOutNotSelected_BeginStoryboard" Storyboard="{StaticResource TabMouseOutNotSelected}"/>
								<StopStoryboard BeginStoryboardName="TabMouseOverNotSelected_BeginStoryboard"/> 
							</MultiDataTrigger.ExitActions>
						</MultiDataTrigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsMouseOverTab" Value="True"/>
								<Condition Property="IsSelected" Value="True"/>
							</MultiTrigger.Conditions>
							<MultiTrigger.EnterActions>
								<BeginStoryboard Storyboard="{StaticResource TabMouseOver}"/>
							</MultiTrigger.EnterActions>
							<MultiTrigger.ExitActions>
								<BeginStoryboard x:Name="TabMouseOut_BeginStoryboard" Storyboard="{StaticResource TabMouseOut}"/>
							</MultiTrigger.ExitActions>
						</MultiTrigger>
						<Trigger Property="IsSelected" Value="True">
							<Setter Property="Visibility" TargetName="TabSelected" Value="Visible"/>
							<Setter TargetName="Content" Property="TextElement.Foreground" Value="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.TabItemIsSelectedTextFillKey}}"/>
						</Trigger>
						<Trigger Property="TabStripPlacement" Value="Top">
							<Setter TargetName="TabMouseOverNotSelected" Property="Margin" Value="3,0,3,0"/>
							<Setter TargetName="CloseButton" Property="Margin" Value="0,0,10,0"/>
						</Trigger>
						<Trigger Property="TabStripPlacement" Value="Bottom">
							<Setter TargetName="Content" Property="Margin" Value="15,5,15,4"/>
							<Setter TargetName="CloseButton" Property="Margin" Value="0,0,10,0"/>
							<Setter TargetName="TabMouseOverNotSelected" Property="Margin" Value="3,0,3,0"/>
							<Setter TargetName="TabMouseOverNotSelected"  Property="LayoutTransform">
								<Setter.Value>
									<RotateTransform Angle="180" />
								</Setter.Value>
							</Setter>
							<Setter TargetName="TabSelected"  Property="LayoutTransform">
								<Setter.Value>
									<RotateTransform Angle="180" />
								</Setter.Value>
							</Setter>
							<Setter TargetName="TabHottrack"  Property="LayoutTransform">
								<Setter.Value>
									<RotateTransform Angle="180" />
								</Setter.Value>
							</Setter>
						</Trigger>
						<Trigger Property="TabStripPlacement" Value="Left">
							<Setter TargetName="Content" Property="Margin" Value="5,8,4,8"/>
							<Setter TargetName="TabHottrack" Property="Margin" Value="0,-2,0,-2"/>
							<Setter TargetName="CloseButton" Property="Margin" Value="5,0,4,0"/>
							<Setter TargetName="TabMouseOverNotSelected" Property="Margin" Value="0,1,0,1"/>
							<Setter TargetName="TabMouseOverNotSelected"  Property="LayoutTransform">
								<Setter.Value>
									<RotateTransform Angle="-90" />
								</Setter.Value>
							</Setter>
							<Setter TargetName="TabSelected"  Property="LayoutTransform">
								<Setter.Value>
									<RotateTransform Angle="-90" />
								</Setter.Value>
							</Setter>
							<Setter TargetName="TabHottrack"  Property="LayoutTransform">
								<Setter.Value>
									<RotateTransform Angle="-90" />
								</Setter.Value>
							</Setter>
						</Trigger>
						<Trigger Property="TabStripPlacement" Value="Right">
							<Setter TargetName="Content" Property="Margin" Value="5,8,4,8"/>
							<Setter TargetName="TabHottrack" Property="Margin" Value="0,-2,0,-2"/>
							<Setter TargetName="CloseButton" Property="Margin" Value="5,0,4,0"/>
							<Setter TargetName="TabMouseOverNotSelected" Property="Margin" Value="0,1,0,1"/>
							<Setter TargetName="TabMouseOverNotSelected"  Property="LayoutTransform">
								<Setter.Value>
									<RotateTransform Angle="90" />
								</Setter.Value>
							</Setter>
							<Setter TargetName="TabSelected"  Property="LayoutTransform">
								<Setter.Value>
									<RotateTransform Angle="90" />
								</Setter.Value>
							</Setter>
							<Setter TargetName="TabHottrack"  Property="LayoutTransform">
								<Setter.Value>
									<RotateTransform Angle="90" />
								</Setter.Value>
							</Setter>
						</Trigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsSelected" Value="true"/>
								<Condition Property="TabStripPlacement" Value="Top"/>
							</MultiTrigger.Conditions>
						</MultiTrigger>
							
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsSelected" Value="true"/>
								<Condition Property="TabStripPlacement" Value="Bottom"/>
							</MultiTrigger.Conditions>
							<Setter TargetName="TabSelected" Property="Margin" Value="0,-1,0,0"/>
						</MultiTrigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsSelected" Value="true"/>
								<Condition Property="TabStripPlacement" Value="Left"/>
							</MultiTrigger.Conditions>
							<Setter TargetName="TabSelected" Property="Margin" Value="0,-2,-1,-2"/>
						</MultiTrigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsSelected" Value="true"/>
								<Condition Property="TabStripPlacement" Value="Right"/>
							</MultiTrigger.Conditions>
							<Setter TargetName="TabSelected" Property="Margin" Value="-1,-2,0,-2"/>
						</MultiTrigger>
						
						<Trigger Property="IsEnabled" Value="false">
							<Setter Value="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.GrayTextBrushKey}}" Property="TextElement.Foreground" TargetName="Content"/>
							<Setter TargetName="TabSelected" Property="Visibility" Value="Collapsed"/>
							<Setter TargetName="TabMouseOverNotSelected" Property="Visibility" Value="Collapsed"/>
							<Setter TargetName="TabHottrack" Property="Visibility" Value="Collapsed"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
    
    
    
    

    <!-- ================================ -->
    <!--          ToolWindow          -->
    <!-- ================================ -->
    <Style TargetType="{x:Type igWindows:ToolWindow}">
        <Setter Property="Background" Value="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.ToolWindowBackgroundFillKey}}" />
        <!--<Setter Property="BorderThickness" Value="1,1,1,1" />-->
        <Setter Property="BorderThickness" Value="{Binding Path=PreferredBorderThickness, RelativeSource={x:Static RelativeSource.Self}}" />
        <!-- AS 6/30/10 TFS14299
        <Setter Property="SnapsToDevicePixels" Value="True"/>-->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type igWindows:ToolWindow}">
                    <AdornerDecorator>
                        <Grid Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition x:Name="captionRow" Height="Auto" />
                                    <RowDefinition x:Name="contentRow" Height="*" />
                                </Grid.RowDefinitions>
								<!-- AS 6/24/11 FloatingWindowCaptionSource - Bind Visibility -->
								<Border x:Name="captionOuterBorder" BorderBrush="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.ToolWindowInactiveCaptionOuterBorderFillKey}}" BorderThickness="1,1,1,1" Visibility="{TemplateBinding CaptionVisibility}">
                                    <Border x:Name="captionInnerBorder" BorderBrush="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.ToolWindowInactiveCaptionInnerBorderFillKey}}" BorderThickness="0,1,0,0" HorizontalAlignment="Stretch">
                                        <DockPanel x:Name="PART_Caption" Background="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.ToolWindowInactiveCaptionCenterFillKey}}"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
								HorizontalAlignment="Stretch">
                                            <Button Style="{StaticResource ToolWindowCloseButtonStyle}" Command="{x:Static igWindows:ToolWindow.CloseCommand}" HorizontalAlignment="Right" VerticalAlignment="Center" DockPanel.Dock="Right" Margin="0,1,5,0"/>

											<!-- NA 2011.1 - ToolWindow changes -->
											<Button x:Name="MaximizeButton"
												Style="{StaticResource ToolWindowMaximizeButtonStyle}"
                                                Command="{x:Static igWindows:ToolWindow.MaximizeCommand}" 
												Visibility="{TemplateBinding MaximizeButtonVisibility}"
                                                HorizontalAlignment="Right" VerticalAlignment="Center" 
												ToolTip="{StaticResource maximizeToolTip}"
                                                DockPanel.Dock="Right"/>
											<Button x:Name="MinimizeButton" 
												Style="{StaticResource ToolWindowMinimizeButtonStyle}"
                                                Command="{x:Static igWindows:ToolWindow.MinimizeCommand}" 
												Visibility="{TemplateBinding MinimizeButtonVisibility}"
                                                HorizontalAlignment="Right" VerticalAlignment="Center" 
												ToolTip="{StaticResource minimizeToolTip}"
                                                DockPanel.Dock="Right"/>

											<TextBlock x:Name="txtCaption"
                                                   Text="{TemplateBinding Title}" 
                                                   Foreground="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.ToolWindowInactiveCaptionTextFillKey}}"
                                                   FontFamily="{DynamicResource {x:Static SystemFonts.SmallCaptionFontFamilyKey}}"
                                                   FontSize="{DynamicResource {x:Static SystemFonts.SmallCaptionFontSizeKey}}"
                                                   FontStyle="{DynamicResource {x:Static SystemFonts.SmallCaptionFontStyleKey}}"
                                                   FontWeight="{DynamicResource {x:Static SystemFonts.SmallCaptionFontWeightKey}}"
                                                   TextDecorations="{DynamicResource {x:Static SystemFonts.SmallCaptionFontTextDecorationsKey}}"
                                                   IsHitTestVisible="False" 
                                                   TextTrimming="CharacterEllipsis"
                                                   Margin="2,4,0,2"/>
                                    </DockPanel>
                                    </Border>
                                </Border>
                                <Grid Grid.Row="1">
                                    <Border x:Name="windowBorder"
                                        BorderBrush="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.ToolWindowInactiveOuterBorder1FillKey}}"
                                        BorderThickness="1,0,1,1">
                                        <Border x:Name="windowBorder2" BorderBrush="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.ToolWindowInactiveOuterBorder2FillKey}}" BorderThickness="1,0,1,1">
                                            <Border x:Name="windowBorder3" BorderBrush="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.ToolWindowInactiveOuterBorder3FillKey}}" BorderThickness="1,0,1,1">
                                                <Border x:Name="windowBorder4" BorderBrush="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.ToolWindowInactiveOuterBorder4FillKey}}" BorderThickness="1,0,1,1">
                                                    <Grid SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                                        <ContentPresenter x:Name="PART_Content"
                                                    Grid.Row="1"
                                                    Margin="{TemplateBinding Padding}"
                                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                    ContentSource="Content" />
                                                        <!-- Put the resize grip within the border so it doesn't overlap the border -->
                                                        <Grid Name="PART_ResizeGrip" Grid.RowSpan="2" Background="Transparent" HorizontalAlignment="Right" VerticalAlignment="Bottom" Visibility="Collapsed">
                                                            <!-- We need to wrap the resize grip in an element and prevent hittesting on the resize grip -->
                                                            <ResizeGrip IsTabStop="False" IsHitTestVisible="False" />
                                                        </Grid>
                                                    </Grid>
                                                </Border>
                                            </Border>
                                        </Border>
                                    </Border>
                                </Grid>
                            </Grid>
							<Grid x:Name="resizeAreas" Visibility="Collapsed" FlowDirection="LeftToRight">
                                <igWindows:ToolWindowResizeElement x:Name="PART_BorderTop" BorderLocation="Top"/>
                                <igWindows:ToolWindowResizeElement x:Name="PART_BorderLeft" BorderLocation="Left"/>
                                <igWindows:ToolWindowResizeElement x:Name="PART_BorderBottom" BorderLocation="Bottom"/>
                                <igWindows:ToolWindowResizeElement x:Name="PART_BorderRight" BorderLocation="Right"/>

                                <igWindows:ToolWindowResizeElement x:Name="PART_BorderTopLeft" BorderLocation="TopLeft"/>
                                <igWindows:ToolWindowResizeElement x:Name="PART_BorderTopRight" BorderLocation="TopRight"/>
                                <igWindows:ToolWindowResizeElement x:Name="PART_BorderBottomLeft" BorderLocation="BottomLeft"/>
                                <igWindows:ToolWindowResizeElement x:Name="PART_BorderBottomRight" BorderLocation="BottomRight"/>
                            </Grid>
                        </Grid>
                    </AdornerDecorator>
                    <ControlTemplate.Triggers>
						<!-- NA 2011.1 - ToolWindow changes -->
						<Trigger Property="WindowState" Value="Minimized">
							<Setter Property="Command" TargetName="MinimizeButton" Value="{x:Static igWindows:ToolWindow.RestoreCommand}" />
							<Setter Property="ToolTip" TargetName="MinimizeButton" Value="{StaticResource restoreUpToolTip}" />
							<Setter Property="Style" TargetName="MinimizeButton" Value="{StaticResource ToolWindowRestoreButtonStyle}" />
						</Trigger>
						<Trigger Property="WindowState" Value="Maximized">
							<Setter Property="Command" TargetName="MaximizeButton" Value="{x:Static igWindows:ToolWindow.RestoreCommand}" />
							<Setter Property="ToolTip" TargetName="MaximizeButton" Value="{StaticResource restoreDownToolTip}" />
							<Setter Property="Style" TargetName="MaximizeButton" Value="{StaticResource ToolWindowRestoreButtonStyle}" />
						</Trigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="WindowState" Value="Minimized" />
								<Condition Property="IsUsingOSNonClientArea" Value="False" />
                                <!-- AS 1/4/12 TFS85418 -->
                                <Condition Property="CaptionVisibility" Value="Visible" />
                            </MultiTrigger.Conditions>
							<Setter Property="Visibility" TargetName="windowBorder" Value="Collapsed" />
							<Setter Property="Height" TargetName="captionRow" Value="*" />
							<Setter Property="Height" TargetName="contentRow" Value="0" />
						</MultiTrigger>
						
						<Trigger Property="IsActive" Value="True">
                            <Setter Property="Foreground" TargetName="txtCaption" Value="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.ToolWindowActiveCaptionTextFillKey}}" />
                            <Setter TargetName="PART_Caption" Property="Background" Value="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.ToolWindowActiveCaptionCenterFillKey}}"/>
                            <Setter TargetName="captionOuterBorder" Property="BorderBrush" Value="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.ToolWindowActiveCaptionOuterBorderFillKey}}"/>
                            <Setter TargetName="captionInnerBorder" Property="BorderBrush" Value="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.ToolWindowActiveCaptionInnerBorderFillKey}}"/>
                            <Setter TargetName="windowBorder" Property="BorderBrush" Value="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.ToolWindowActiveOuterBorder1FillKey}}"/>
                            <Setter TargetName="windowBorder2" Property="BorderBrush" Value="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.ToolWindowActiveOuterBorder2FillKey}}"/>
                            <Setter TargetName="windowBorder3" Property="BorderBrush" Value="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.ToolWindowActiveOuterBorder3FillKey}}"/>
                            <Setter TargetName="windowBorder4" Property="BorderBrush" Value="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.ToolWindowActiveOuterBorder4FillKey}}"/>
                        </Trigger>

                        <!-- Do not allow resizing unless canresize or canresizewithgrip -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="ResizeMode" Value="CanResize" />
                                <Condition Property="IsUsingOSNonClientArea" Value="False" />
								<!-- NA 2011.1 - ToolWindow changes -->
								<Condition Property="WindowState" Value="Normal" />
							</MultiTrigger.Conditions>
                            <Setter Property="Visibility" TargetName="resizeAreas" Value="Visible" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="ResizeMode" Value="CanResizeWithGrip" />
                                <Condition Property="IsUsingOSNonClientArea" Value="False" />
								<!-- NA 2011.1 - ToolWindow changes -->
								<Condition Property="WindowState" Value="Normal" />
							</MultiTrigger.Conditions>
                            <Setter Property="Visibility" TargetName="resizeAreas" Value="Visible" />
                        </MultiTrigger>

						<!-- NA 2011.1 - ToolWindow changes -->
						<!--<Trigger Property="ResizeMode" Value="CanResizeWithGrip">
                            <Setter Property="Visibility" TargetName="PART_ResizeGrip" Value="Visible" />
                        </Trigger>-->
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="ResizeMode" Value="CanResizeWithGrip" />
								<Condition Property="WindowState" Value="Normal" />
							</MultiTrigger.Conditions>
							<Setter Property="Visibility" TargetName="PART_ResizeGrip" Value="Visible" />
						</MultiTrigger>

						<Trigger Property="IsUsingOSNonClientArea" Value="True">
                            <Setter Property="BorderThickness" TargetName="windowBorder" Value="0" />
                            <Setter Property="BorderThickness" TargetName="windowBorder2" Value="0" />
                            <Setter Property="BorderThickness" TargetName="windowBorder3" Value="0" />
                            <Setter Property="BorderThickness" TargetName="windowBorder4" Value="0" />
                            <Setter Property="Visibility" TargetName="captionOuterBorder" Value="Collapsed" />
                            <!--<Setter Property="Visibility" TargetName="resizeAreas" Value="Collapsed" />-->
                        </Trigger>

						<!-- AS 6/24/11 FloatingWindowCaptionSource - Show space on top when we're not providing the caption -->
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsUsingOSNonClientArea" Value="False" />
								<Condition Property="CaptionVisibility" Value="Collapsed" />
							</MultiTrigger.Conditions>
							<Setter Property="BorderThickness" TargetName="windowBorder" Value="1" />
							<Setter Property="BorderThickness" TargetName="windowBorder2" Value="1" />
							<Setter Property="BorderThickness" TargetName="windowBorder3" Value="1" />
							<Setter Property="BorderThickness" TargetName="windowBorder4" Value="1" />
						</MultiTrigger>
						
						<!-- AS 6/24/11 FloatingWindowCaptionSource - Hide the resize area when maximized and we're providing the nonclient area. -->
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsUsingOSNonClientArea" Value="False" />
								<Condition Property="WindowState" Value="Maximized" />
							</MultiTrigger.Conditions>
							<Setter Property="BorderThickness" TargetName="windowBorder" Value="0" />
							<Setter Property="BorderThickness" TargetName="windowBorder2" Value="0" />
							<Setter Property="BorderThickness" TargetName="windowBorder3" Value="0" />
							<Setter Property="BorderThickness" TargetName="windowBorder4" Value="0" />
							<Setter Property="BorderThickness" TargetName="captionInnerBorder" Value="0" />
							<Setter Property="BorderThickness" TargetName="captionOuterBorder" Value="0" />
						</MultiTrigger>

                        <!-- AS 1/4/12 TFS85418 -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="WindowState" Value="Minimized" />
                                <Condition Property="IsUsingOSNonClientArea" Value="False" />
                                <Condition Property="CaptionVisibility" Value="Collapsed" />
                            </MultiTrigger.Conditions>
                            <Setter Property="BorderThickness" TargetName="windowBorder" Value="0" />
                            <Setter Property="BorderThickness" TargetName="windowBorder2" Value="0" />
                            <Setter Property="BorderThickness" TargetName="windowBorder3" Value="0" />
                            <Setter Property="BorderThickness" TargetName="windowBorder4" Value="0" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsActive" Value="True">
                <Setter Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.ActiveBorderBrushKey}}" />
            </Trigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>
