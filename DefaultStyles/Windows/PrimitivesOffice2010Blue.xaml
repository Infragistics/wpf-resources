<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:ig="http://infragistics.com/Windows"
	xmlns:igWindows="http://infragistics.com/Windows"
	xmlns:looks="http://infragistics.com/Windows.Looks"
	xmlns:themes="http://infragistics.com/Themes"
	xmlns:d="http://schemas.microsoft.com/expression/interactivedesigner/2006"
	xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:interactions="http://schemas.infragistics.com/xaml"
    xmlns:igPrim="http://schemas.infragistics.com/xaml/primitives"   
	mc:Ignorable="d"
	>
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="PrimitivesOffice2k7Black.xaml" />
        <ResourceDictionary Source="PrimitivesOffice2010Blue_Brushes.xaml" />
    </ResourceDictionary.MergedDictionaries>


    <!-- _________________________ XamTabControl ______________________________________ -->
    <Style TargetType="{x:Type igWindows:XamTabControl}">
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="Padding" Value="4"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.TabItemIsSelectedOuterBorderFillKey}}"/>
        <Setter Property="Background" Value="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.TabContentBackgroundFillKey}}"/>
        <Setter Property="Border.CornerRadius" Value="0"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type igWindows:XamTabControl}">
                    <Grid ClipToBounds="True" SnapsToDevicePixels="True" KeyboardNavigation.TabNavigation="Local">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition x:Name="gridCol0"/>
                            <ColumnDefinition Width="0" x:Name="gridCol1"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" x:Name="gridRow0"/>
                            <RowDefinition Height="*" x:Name="gridRow1"/>
                        </Grid.RowDefinitions>
                        <Border
							BorderBrush="{x:Null}"
							x:Name="ContentPanel"
							KeyboardNavigation.TabIndex="2"
							KeyboardNavigation.TabNavigation="Local"
							KeyboardNavigation.DirectionalNavigation="Contained"
							Grid.Row="1"
							Visibility="Visible"
							Margin="0,-1,0,0"
							Background="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.TabControlTabStripCenterFillKey}}">
                            <!--Background="#FF515151"-->
                            <Border
								BorderThickness="{TemplateBinding Border.BorderThickness}"
								Background="{TemplateBinding Background}"
								BorderBrush="{TemplateBinding BorderBrush}"
								Margin="0,1,0,0"
								CornerRadius="{TemplateBinding Border.CornerRadius}">
                                <!--<Border Background="{DynamicResource Container_Fill}" BorderBrush="{DynamicResource Container_BorderFill}" CornerRadius="5,5,5,5">-->
                                <Border>
                                    <ContentPresenter
										ContentSource="SelectedContent"
										Margin="{TemplateBinding Control.Padding}"
										Height="{TemplateBinding TabItemContentHeight}"
										Name="PART_SelectedContentHost"
										SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                                </Border>
                            </Border>
                        </Border>
                        <!--<DockPanel x:Name="PART_HeaderArea" Panel.ZIndex="1" Background="#FF535353">-->
                        <!-- AS 5/4/10 TFS30695 
              Added Tab(Index|Navigation) settings so this gets focus first. -->
                        <DockPanel 
              x:Name="PART_HeaderArea" 
              Panel.ZIndex="1" 
							KeyboardNavigation.TabIndex="1"
							KeyboardNavigation.TabNavigation="Local"
              Background="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.TabControlTabStripCenterFillKey}}">
                            <ContentPresenter
								x:Name="PreTabItemContent"
								DockPanel.Dock="Left"
								ContentSource="PreTabItemContent"
								TextElement.Foreground="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.TabItemNormalTextFillKey}}"/>
                            <Button
								Name="CloseButton"
								DockPanel.Dock="Right"
								Command="igWindows:TabControlCommands.CloseSelected"
								CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}"
								Visibility="Collapsed"
								Style="{DynamicResource {x:Static igWindows:XamTabControl.CloseButtonStyleKey}}"
								/>
                            <ContentPresenter
								x:Name="PostTabItemContent"
								DockPanel.Dock="Right"
								ContentSource="PostTabItemContent"
                                TextElement.Foreground="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.TabItemNormalTextFillKey}}"/>
                            <igWindows:XamPager x:Name="PART_TabItemScrollViewer" 
                                                Style="{DynamicResource {x:Static igWindows:XamTabControl.SingleRowTabItemPagerStyleKey}}"
                                                CanContentScroll="True"
                                                ScrollViewer.VerticalScrollBarVisibility="{TemplateBinding TabItemVerticalScrollBarVisibility}" 
                                                ScrollViewer.HorizontalScrollBarVisibility="{TemplateBinding TabItemHorizontalScrollBarVisibility}">
                                <ItemsPresenter x:Name="PART_TabHeaderPanel" />
                            </igWindows:XamPager>
                        </DockPanel>
                        <Popup
							x:Name="PART_Popup"
							StaysOpen="False"
							Width="{TemplateBinding PreferredDropDownExtent}"
							IsOpen="{Binding Path=IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}"
							CustomPopupPlacementCallback="{TemplateBinding PreferredDropDownPlacementCallback}"
							Placement="Custom"
							AllowsTransparency="True"
							PopupAnimation="{Binding Path=DropDownAnimation, RelativeSource={RelativeSource TemplatedParent}}">
                            <Border
								BorderBrush="#FFD0CEBF"
								BorderThickness="0,0,1,1"
								CornerRadius="{TemplateBinding Border.CornerRadius}"
								KeyboardNavigation.TabIndex="2"
								KeyboardNavigation.TabNavigation="Local"
								KeyboardNavigation.DirectionalNavigation="Contained">
                                <Border BorderBrush="{TemplateBinding Border.BorderBrush}" BorderThickness="{TemplateBinding Border.BorderThickness}" CornerRadius="{TemplateBinding Border.CornerRadius}">
                                    <Border Background="{TemplateBinding Panel.Background}" CornerRadius="{TemplateBinding Border.CornerRadius}">
                                        <ContentPresenter
											ContentSource="SelectedContent"
											Margin="{TemplateBinding Control.Padding}"
											Height="{TemplateBinding TabItemContentHeight}"
											Name="PART_SelectedContentHostMinimized"
											HorizontalAlignment="{Binding ElementName=PART_SelectedContentHost, Path=HorizontalAlignment}"
											VerticalAlignment="{Binding ElementName=PART_SelectedContentHost, Path=VerticalAlignment}"
											SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"
											ContentTemplateSelector="{TemplateBinding TabControl.SelectedContentTemplateSelector}"
											ContentTemplate="{TemplateBinding TabControl.SelectedContentTemplate}"
											Content="{x:Null}"/>
                                    </Border>
                                </Border>
                            </Border>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="ShowTabHeaderCloseButton" Value="True">
                            <Setter Property="Visibility" TargetName="CloseButton" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="DropDownAnimation" Value="None">
                            <!--<Setter Property="AllowsTransparency" TargetName="PART_Popup" Value="True"/>-->
                        </Trigger>
                        <Trigger Property="TabControl.TabStripPlacement" Value="Top">
                            <Setter Property="Width" TargetName="PART_Popup" Value="{Binding Path=PreferredDropDownExtent, RelativeSource={x:Static RelativeSource.TemplatedParent}}"/>
                            <Setter TargetName="CloseButton" Property="Margin" Value="3,1,3,0"/>
                            <Setter TargetName="PreTabItemContent" Property="VerticalAlignment" Value="Bottom"/>
                            <Setter TargetName="PostTabItemContent" Property="VerticalAlignment" Value="Bottom"/>
                            <Setter TargetName="PostTabItemContent" Property="Margin" Value="3,0,3,4"/>
                            <Setter TargetName="PreTabItemContent" Property="Margin" Value="3,0,3,4"/>
                            <Setter Property="FrameworkElement.Margin" TargetName="PART_TabHeaderPanel" Value="7,1,7,0"/>
                        </Trigger>
                        <Trigger Property="TabControl.TabStripPlacement" Value="Bottom">
                            <Setter TargetName="CloseButton" Property="Margin" Value="3,1,3,0"/>
                            <Setter TargetName="PostTabItemContent" Property="Margin" Value="3,5,3,2"/>
                            <Setter TargetName="PreTabItemContent" Property="Margin" Value="3,5,3,2"/>
                            <Setter Property="Grid.Row" TargetName="PART_HeaderArea" Value="1"/>
                            <Setter Property="Grid.Row" TargetName="ContentPanel" Value="0"/>
                            <Setter Property="Height" TargetName="gridRow0" Value="*"/>
                            <Setter Property="Height" TargetName="gridRow1" Value="Auto"/>
                            <Setter Property="Width" TargetName="PART_Popup" Value="{Binding Path=PreferredDropDownExtent, RelativeSource={x:Static RelativeSource.TemplatedParent}}"/>
                            <Setter Property="FrameworkElement.Margin" TargetName="PART_TabHeaderPanel" Value="7,0,7,1"/>
                        </Trigger>
                        <Trigger Property="TabControl.TabStripPlacement" Value="Left">
                            <Setter TargetName="PostTabItemContent" Property="Margin" Value="5,3,4,3"/>
                            <Setter TargetName="PreTabItemContent" Property="Margin" Value="5,3,4,3"/>
                            <Setter Property="Margin" TargetName="CloseButton" Value="0,0,4,3"/>
                            <Setter Property="DockPanel.Dock" TargetName="CloseButton" Value="Bottom"/>
                            <Setter Property="HorizontalAlignment" TargetName="CloseButton" Value="Right"/>
                            <Setter Property="Grid.Row" TargetName="PART_HeaderArea" Value="1"/>
                            <Setter Property="Grid.Column" TargetName="ContentPanel" Value="1"/>
                            <Setter Property="Height" TargetName="gridRow0" Value="0"/>
                            <Setter Property="Width" TargetName="gridCol0" Value="Auto"/>
                            <Setter Property="Width" TargetName="gridCol1" Value="*"/>
                            <Setter Property="DockPanel.Dock" TargetName="PreTabItemContent" Value="Top"/>
                            <Setter Property="DockPanel.Dock" TargetName="PostTabItemContent" Value="Bottom"/>
                            <Setter Property="Height" TargetName="PART_Popup" Value="{Binding Path=PreferredDropDownExtent, RelativeSource={x:Static RelativeSource.TemplatedParent}}"/>
                            <Setter Property="FrameworkElement.Margin" TargetName="PART_TabHeaderPanel" Value="1,7,0,7"/>
                        </Trigger>
                        <Trigger Property="TabControl.TabStripPlacement" Value="Right">
                            <Setter TargetName="PostTabItemContent" Property="Margin" Value="4,3,4,3"/>
                            <Setter TargetName="PreTabItemContent" Property="Margin" Value="4,3,4,3"/>
                            <Setter Property="Margin" TargetName="CloseButton" Value="4,0,0,3"/>
                            <Setter Property="DockPanel.Dock" TargetName="CloseButton" Value="Bottom"/>
                            <Setter Property="HorizontalAlignment" TargetName="CloseButton" Value="Left"/>
                            <Setter Property="Grid.Row" TargetName="PART_HeaderArea" Value="1"/>
                            <Setter Property="Grid.Column" TargetName="PART_HeaderArea" Value="1"/>
                            <Setter Property="Height" TargetName="gridRow0" Value="0"/>
                            <Setter Property="Width" TargetName="gridCol0" Value="*"/>
                            <Setter Property="Width" TargetName="gridCol1" Value="Auto"/>
                            <Setter Property="DockPanel.Dock" TargetName="PreTabItemContent" Value="Top"/>
                            <Setter Property="DockPanel.Dock" TargetName="PostTabItemContent" Value="Bottom"/>
                            <Setter Property="Height" TargetName="PART_Popup" Value="{Binding Path=PreferredDropDownExtent, RelativeSource={x:Static RelativeSource.TemplatedParent}}"/>
                            <Setter Property="FrameworkElement.Margin" TargetName="PART_TabHeaderPanel" Value="0,7,1,7"/>
                        </Trigger>
                        <Trigger Property="UIElement.IsEnabled" Value="False">
                            <Setter Property="TextElement.Foreground" Value="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.GrayTextBrushKey}}"/>
                        </Trigger>
                        <Trigger Property="IsMinimized" Value="True">
                            <Setter Property="Visibility" TargetName="ContentPanel" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="IsMultiRow" Value="True">
                            <Setter TargetName="PART_TabItemScrollViewer" Property="Style" Value="{DynamicResource {x:Static igWindows:XamTabControl.MultiRowTabItemPagerStyleKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>

            <Trigger Property="TabControl.TabStripPlacement" Value="Bottom">
                <Setter Property="Panel.Background" Value="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.TabControlBottomCenterFillKey}}"/>
            </Trigger>

            <Trigger Property="TabControl.TabStripPlacement" Value="Left">
                <Setter Property="Panel.Background" Value="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.TabControlLeftCenterFillKey}}"/>
            </Trigger>

            <Trigger Property="TabControl.TabStripPlacement" Value="Right">
                <Setter Property="Panel.Background" Value="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.TabControlRightCenterFillKey}}"/>
            </Trigger>

        </Style.Triggers>
    </Style>


    <!-- _________________________ TabItemEx ______________________________________ -->
    <Style x:Key="{x:Type igWindows:TabItemEx}" TargetType="{x:Type igWindows:TabItemEx}">
        <!-- <Setter Property="FocusVisualStyle" Value="{StaticResource Foo}" /> -->
        <Setter Property="Foreground" Value="#FF000000"/>
		<Setter Property="BorderThickness" Value="1,1,1,0"/>
        <Setter Property="BorderBrush" Value="{x:Null}"/>
		<Setter Property="Background" Value="{x:Null}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type igWindows:TabItemEx}">
                    <Grid SnapsToDevicePixels="true">
                        <Border Name="Bd">
                            <Grid Background="Transparent">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
								
								<Border
										x:Name="normalTabItem"
										SnapsToDevicePixels="True"
										CornerRadius="2,2,0,0"
										BorderThickness="{TemplateBinding BorderThickness}"
										Background="{TemplateBinding Background}"
										BorderBrush="{TemplateBinding BorderBrush}"/>
										
                                <Grid 
									Visibility="Collapsed"
									x:Name="TabMouseOverNotSelected" 
									SnapsToDevicePixels="True" Grid.ColumnSpan="2">
									<Border
										SnapsToDevicePixels="True"
										CornerRadius="2,2,0,0"
										BorderThickness="{TemplateBinding BorderThickness}"
										Background="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.TabItemHottrackTopCenterFillKey}}"
										BorderBrush="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.TabItemHottrackOuterBorderFillKey}}">
										<Border BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.TabItemHottrackHighlightLightFillKey}}" CornerRadius="1,1,0,0"/>
										
										</Border>
                                </Grid>


                                <Grid
									x:Name="TabSelected"
									Visibility="Collapsed"
									Margin="0,0,0,-1"
									Grid.ColumnSpan="2">
                                    <Border
										SnapsToDevicePixels="True"
										CornerRadius="2,2,0,0"
										BorderThickness="{TemplateBinding BorderThickness}"
										Background="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.TabItemIsSelectedTopCenterFillKey}}"
										BorderBrush="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.TabItemIsSelectedOuterBorderFillKey}}"/>
                                </Grid>

                                <ContentPresenter
									Name="Content"
									ContentSource="Header"
									Margin="15,5,15,4"
									TextElement.Foreground="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.TabItemNormalTextFillKey}}"
									SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
									RecognizesAccessKey="true"
									HorizontalAlignment="{Binding Path=HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"
									VerticalAlignment="{Binding Path=VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                                <Button
									Name="CloseButton"
									Grid.Column="1"
									Command="igWindows:TabItemExCommands.Close"
									CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}"
									Visibility="{TemplateBinding ComputedCloseButtonVisibility}"
									Style="{DynamicResource {x:Static igWindows:XamTabControl.CloseButtonStyleKey}}"
									/>
                            </Grid>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True"/>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=IsMouseOverTab, RelativeSource={x:Static RelativeSource.Self}}" Value="True"/>
                                <Condition Binding="{Binding Path=IsSelected, RelativeSource={x:Static RelativeSource.Self}}" Value="False"/>
                            </MultiDataTrigger.Conditions>
							<Setter TargetName="TabMouseOverNotSelected" Property="Visibility" Value="Visible"/>
							<Setter TargetName="normalTabItem" Property="Visibility" Value="Collapsed"/>
                        </MultiDataTrigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Visibility" TargetName="TabSelected" Value="Visible"/>
                            <Setter TargetName="Content" Property="TextElement.Foreground" Value="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.TabItemIsSelectedTextFillKey}}"/>
                        </Trigger>

                        <Trigger Property="TabStripPlacement" Value="Top">
                            <Setter TargetName="CloseButton" Property="Margin" Value="0,0,10,0"/>
                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Bottom">
                            <Setter TargetName="Content" Property="Margin" Value="15,5,15,4"/>
                            <Setter TargetName="CloseButton" Property="Margin" Value="0,0,10,0"/>
                            <Setter TargetName="TabMouseOverNotSelected"  Property="LayoutTransform">
                                <Setter.Value>
                                    <RotateTransform Angle="180" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="TabSelected"  Property="LayoutTransform">
                                <Setter.Value>
                                    <RotateTransform Angle="180" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Left">
                            <Setter TargetName="Content" Property="Margin" Value="5,8,4,8"/>
                            <Setter TargetName="CloseButton" Property="Margin" Value="5,0,4,0"/>
                            <Setter TargetName="TabMouseOverNotSelected" Property="Margin" Value="0,1"/>
                            <Setter TargetName="TabMouseOverNotSelected"  Property="LayoutTransform">
                                <Setter.Value>
                                    <RotateTransform Angle="-90" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="TabSelected"  Property="LayoutTransform">
                                <Setter.Value>
                                    <RotateTransform Angle="-90" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Right">
                            <Setter TargetName="Content" Property="Margin" Value="5,8,4,8"/>
                            <Setter TargetName="CloseButton" Property="Margin" Value="5,0,4,0"/>
                            <Setter TargetName="TabMouseOverNotSelected" Property="Margin" Value="0,1"/>
                            <Setter TargetName="TabMouseOverNotSelected"  Property="LayoutTransform">
                                <Setter.Value>
                                    <RotateTransform Angle="90" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="TabSelected"  Property="LayoutTransform">
                                <Setter.Value>
                                    <RotateTransform Angle="90" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="true"/>
                                <Condition Property="TabStripPlacement" Value="Top"/>
                            </MultiTrigger.Conditions>
                        </MultiTrigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="true"/>
                                <Condition Property="TabStripPlacement" Value="Bottom"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="TabSelected" Property="Margin" Value="0,-1,0,0"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="true"/>
                                <Condition Property="TabStripPlacement" Value="Left"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="TabSelected" Property="Margin" Value="0,-2,-1,-2"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="true"/>
                                <Condition Property="TabStripPlacement" Value="Right"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="TabSelected" Property="Margin" Value="-1,-2,0,-2"/>
                        </MultiTrigger>

                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Value="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.GrayTextBrushKey}}" Property="TextElement.Foreground" TargetName="Content"/>
                            <Setter TargetName="TabSelected" Property="Visibility" Value="Collapsed"/>
                            <Setter TargetName="TabMouseOverNotSelected" Property="Visibility" Value="Collapsed"/>
							<Setter TargetName="normalTabItem" Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- _________________________ XamBusyIndicator ______________________________________ -->
    
   
    <!-- ================================ -->
    <!-- ProgressBar -->
    <!-- ================================ -->
    <Style x:Key="ProgressBarOffice2013Style" TargetType="{x:Type ProgressBar}" BasedOn="{StaticResource ProgressBarStyle}">
        <Setter Property="Foreground" Value="{StaticResource ProgressBar.Foreground}"/>
        <Setter Property="Background" Value="{StaticResource ProgressBar.Background}"/>
        <Setter Property="BorderBrush" Value="{StaticResource ProgressBar.Border}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ProgressBar}">
                    <Grid x:Name="TemplateRoot">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Determinate"/>
                                <VisualState x:Name="Indeterminate">
                                    <Storyboard RepeatBehavior="Forever">
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="Animation">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="0.25"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:1" Value="0.25"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:2" Value="0.25"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <PointAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransformOrigin)" Storyboard.TargetName="Animation">
                                            <EasingPointKeyFrame KeyTime="0" Value="-0.5,0.5"/>
                                            <EasingPointKeyFrame KeyTime="0:0:1" Value="0.5,0.5"/>
                                            <EasingPointKeyFrame KeyTime="0:0:2" Value="1.5,0.5"/>
                                        </PointAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="3" />
                        <Rectangle x:Name="PART_Track"/>
                        <Grid x:Name="PART_Indicator" ClipToBounds="true" HorizontalAlignment="Left" Margin="1,0">
                            <Rectangle x:Name="Indicator" Fill="{StaticResource ProgressBar.Progress}" RenderTransformOrigin="0.5,0.5" Margin="2" RadiusX="3" RadiusY="3" />
                            <Border x:Name="Animation" Margin="2" BorderBrush="{TemplateBinding BorderBrush}" Background="{StaticResource ProgressBar.Progress}" BorderThickness="1" CornerRadius="3">
                                <Rectangle x:Name="AnimationFill" Fill="{StaticResource ProgressBar.Progress}" RenderTransformOrigin="0.5,0.5" RadiusX="6" RadiusY="6" VerticalAlignment="Stretch" HorizontalAlignment="Stretch"/>
                                <Border.RenderTransform>
                                    <TransformGroup>
                                        <ScaleTransform />
                                        <SkewTransform/>
                                        <RotateTransform/>
                                        <TranslateTransform/>
                                    </TransformGroup>
                                </Border.RenderTransform>
                            </Border>
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Orientation" Value="Vertical">
                            <Setter Property="LayoutTransform" TargetName="TemplateRoot">
                                <Setter.Value>
                                    <RotateTransform Angle="-90"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsIndeterminate" Value="true">
                            <Setter Property="Visibility" TargetName="Indicator" Value="Collapsed"/>
                            <Setter Property="CornerRadius" TargetName="Animation" Value="6"/>
                            <Setter Property="Padding" TargetName="Animation" Value="4,1,4,1"/>
                            <Setter Property="BorderThickness" TargetName="Animation" Value="4,1,4,1"/>
                        </Trigger>
                        <Trigger Property="IsIndeterminate" Value="false">
                            <Setter Property="Visibility" TargetName="AnimationFill" Value="Collapsed"/>
                            <Setter Property="Margin" TargetName="PART_Indicator" Value="0,0,1,0"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type igPrim:ProgressBarBusyAnimationPresenter}" BasedOn="{StaticResource BusyAnimationPresenterStyle}">
        <Setter Property="ProgressBarStyle" Value="{StaticResource ProgressBarOffice2013Style}" />
        <Setter Property="Height" Value="24" />
    </Style>
    
    <!-- ================================ -->
    <!-- ProgressRing -->
    <!-- ================================ -->
    <Style TargetType="{x:Type igPrim:ProgressRingBusyAnimationPresenter}"
           BasedOn="{StaticResource BusyAnimationPresenterStyle}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="RingFill" Value="{StaticResource BusyIndicatorAnimationFirstItemBackgroundBrush}" />
        <Setter Property="RingBackground" Value="{StaticResource BusyIndicatorAnimationSecondItemBackgroundBrush}" />
        <Setter Property="Foreground" Value="{StaticResource BusyIndicatorForegroundBrush}" />
    </Style>
    
    <!-- ================================ -->
    <!-- Gears animation -->
    <!-- ================================ -->
    <Style TargetType="{x:Type igPrim:GearsBusyAnimationPresenter}" BasedOn="{StaticResource BusyAnimationPresenterStyle}">
        <Setter Property="SmallGearFill" Value="{StaticResource BusyIndicatorAnimationSecondItemBackgroundBrush}" />
        <Setter Property="BigGearFill" Value="{StaticResource BusyIndicatorAnimationFirstItemBackgroundBrush}" />
    </Style>

    <!-- ================================ -->
    <!-- SpinnerSegmented animation -->
    <!-- ================================ -->
    <Style TargetType="{x:Type igPrim:SpinnerSegmentedBusyAnimationPresenter}" BasedOn="{StaticResource BusyAnimationPresenterStyle}">
        <Setter Property="AnimationFill" Value="{StaticResource BusyIndicatorAnimationFirstItemBackgroundBrush}" />
    </Style>

    <!-- ================================ -->
    <!-- SpinnerBalls animation -->
    <!-- ================================ -->
    <Style TargetType="{x:Type igPrim:SpinnerBallsBusyAnimationPresenter}" BasedOn="{StaticResource BusyAnimationPresenterStyle}">
        <Setter Property="AnimationFill" Value="{StaticResource BusyIndicatorAnimationFirstItemBackgroundBrush}" />
    </Style>

    <!-- ================================ -->
    <!-- SpinnerBars animation -->
    <!-- ================================ -->
    <Style TargetType="{x:Type igPrim:SpinnerBarsBusyAnimationPresenter}" BasedOn="{StaticResource BusyAnimationPresenterStyle}">
        <Setter Property="AnimationFill" Value="{StaticResource BusyIndicatorAnimationFirstItemBackgroundBrush}" />
    </Style>

    <!-- ================================ -->
    <!-- SpinnerBarsWave animation -->
    <!-- ================================ -->
    <Style TargetType="{x:Type igPrim:SpinnerBarsWaveBusyAnimationPresenter}" BasedOn="{StaticResource BusyAnimationPresenterStyle}">
        <Setter Property="AnimationFill" Value="{StaticResource BusyIndicatorAnimationFirstItemBackgroundBrush}" />
    </Style>

    <!-- ================================ -->
    <!-- Azure animation -->
    <!-- ================================ -->
    <Style TargetType="{x:Type igPrim:AzureBusyAnimationPresenter}" BasedOn="{StaticResource BusyAnimationPresenterStyle}">
        <Setter Property="UpperElementsFill" Value="{StaticResource BusyIndicatorAnimationFirstItemBackgroundBrush}" />
        <Setter Property="LowerElementsFill" Value="{StaticResource BusyIndicatorAnimationSecondItemBackgroundBrush}" />
    </Style>

    <!--  *********************************  PopupResizerBar Style  *********************************  -->
    <Style TargetType="{x:Type igWindows:PopupResizerBar}">
        <Setter Property="Background" Value="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.PopupResizerBarCenterFillKey}}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="BorderBrush" Value="{StaticResource {x:Static igWindows:PrimitivesBrushKeys.PopupResizerBarBorderFillKey}}" />
        <Setter Property="Height" Value="16" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type igWindows:PopupResizerBar}">
                    <Border Width="Auto"
                            Height="Auto"
                            Margin="0"
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Stretch"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="0 1 0 0"
                            SnapsToDevicePixels="True" >
                        <igWindows:CardPanel Margin="{TemplateBinding Padding}">
                            <igWindows:CardPanel x:Name="GlyphArea">
                                <!--  the thumb is transparent and needs to be placed after the glyphs so that it is on top with respect to z-order  -->
                                <Thumb x:Name="PART_Thumb"
                                       Background="{StaticResource TransparentBrush}"
                                       Foreground="{StaticResource TransparentBrush}"
                                       Opacity="0" />
                                <Grid x:Name="BottomRightGlyph"
                                      Width="{Binding ActualHeight, Mode=OneWay, RelativeSource={RelativeSource Self}}"
                                      HorizontalAlignment="Right"
                                      VerticalAlignment="Bottom"
                                      Background="{x:Null}"
                                      IsHitTestVisible="False"
                                      Visibility="Collapsed"
                                      Height="20">
                                    <Path Width="6"
                                          Height="6"
                                          Margin="3"
                                          HorizontalAlignment="Right"
                                          VerticalAlignment="Bottom"
                                          Data="M4,4 L6,4 6,6 4,6 z M0,4 L2,4 2,6 0,6 z M4,0 L6,0 6,2 4,2 z"
                                          Fill="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.PopupResizerBarGlyphFillKey}}"
                                          Opacity="1"
                                          SnapsToDevicePixels="True"
                                          Stretch="Fill" />                                   
                                </Grid>
                                <!--  the glyph that is used when the resizemode is Both and the location is Top  -->
                                <Grid x:Name="TopRightGlyph"
                                      Width="{Binding ActualHeight, Mode=OneWay, RelativeSource={RelativeSource Self}}"
                                      HorizontalAlignment="Right"
                                      VerticalAlignment="Top"
                                      Background="{x:Null}"
                                      IsHitTestVisible="False"
                                      Visibility="Collapsed">
                                    <Path Width="6"
                                          Height="6"
                                          Margin="0,2,2,0"
                                          HorizontalAlignment="Right"
                                          VerticalAlignment="Top"
                                          Data="M4,4 L6,4 6,6 4,6 z M4,0 L6,0 6,2 4,2 z M0,0 L2,0 2,2 0,2 z"
                                           Fill="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.PopupResizerBarGlyphFillKey}}"
                                          SnapsToDevicePixels="True"
                                          Stretch="Fill" />                                    
                                </Grid>
                                <!--  the glyph that is used when the resizemode is VerticalOnly  -->
                                <Grid x:Name="VerticalOnlyGlyph"
                                      Width="Auto"
                                      Height="Auto"
                                      Margin="6,0"
                                      HorizontalAlignment="Center"
                                      VerticalAlignment="Center"
                                      IsHitTestVisible="False"
                                      Visibility="Collapsed">
                                    <Path x:Name="WhiteShadows"
                                          Width="18"
                                          Height="2"
                                          Margin="1,1,0,0"
                                          HorizontalAlignment="Left"
                                          VerticalAlignment="Top"
                                          Data="M16,0 L18,0 18,1.9999999 16,1.9999999 z M12,0 L14,0 14,1.9999999 12,1.9999999 z M8,0 L10,0 10,1.9999999 8,1.9999999 z M4,0 L6,0 6,1.9999999 4,1.9999999 z M0,0 L1.9999999,0 1.9999999,1.9999999 0,1.9999999 z"
                                          Fill="{DynamicResource {x:Static igWindows:PrimitivesBrushKeys.PopupResizerBarGlyphFillKey}}"
                                          SnapsToDevicePixels="True"
                                          Stretch="None" />                                  
                                </Grid>
                            </igWindows:CardPanel>
                        </igWindows:CardPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="ResizeMode" Value="Both" />
                                <Condition Property="Location" Value="Bottom" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="BottomRightGlyph" Property="Visibility" Value="Visible" />
                            <Setter TargetName="PART_Thumb" Property="Cursor" Value="SizeNWSE" />
                            <Setter TargetName="GlyphArea" Property="HorizontalAlignment" Value="Right" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="ResizeMode" Value="Both" />
                                <Condition Property="Location" Value="Bottom" />
                                <Condition Property="FlowDirection" Value="RightToLeft" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="PART_Thumb" Property="Cursor" Value="SizeNESW" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="ResizeMode" Value="Both" />
                                <Condition Property="Location" Value="Top" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="TopRightGlyph" Property="Visibility" Value="Visible" />
                            <Setter TargetName="PART_Thumb" Property="Cursor" Value="SizeNESW" />
                            <Setter TargetName="GlyphArea" Property="HorizontalAlignment" Value="Right" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="ResizeMode" Value="Both" />
                                <Condition Property="Location" Value="Top" />
                                <Condition Property="FlowDirection" Value="RightToLeft" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="PART_Thumb" Property="Cursor" Value="SizeNWSE" />
                        </MultiTrigger>
                        <Trigger Property="ResizeMode" Value="VerticalOnly">
                            <Setter TargetName="VerticalOnlyGlyph" Property="Visibility" Value="Visible" />
                            <Setter TargetName="PART_Thumb" Property="Cursor" Value="SizeNS" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
</ResourceDictionary>