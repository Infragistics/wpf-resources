<ResourceDictionary 
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:igwindows="http://infragistics.com/Windows"
	xmlns:PresentationOptions="http://schemas.microsoft.com/winfx/2006/xaml/presentation/options"
	xmlns:igOutlookBar="http://infragistics.com/OutlookBar"
	>
	
	
	<MenuScrollingVisibilityConverter x:Key="MenuScrollingVisibilityConverter" />

    <SolidColorBrush x:Key="{x:Static igOutlookBar:OutlookBarBrushKeys.OutlookBarGroupGlowFillKey}" Color="#00FFFFFF" PresentationOptions:Freeze="true"/>


    <!-- =============================================================================== -->
    <!-- Overflow Menu Separator Style: OverflowMenuSeparatorStyleKey                    -->
    <!-- =============================================================================== -->
	<Style x:Key="{x:Static igOutlookBar:XamOutlookBar.OverflowMenuSeparatorStyleKey}" TargetType="{x:Type Separator}">
		<Setter Property="Height" Value="1"/>
		<Setter Property="Background" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.SeparatorFillKey}}"/>
		<Setter Property="Margin" Value="0"/>
		<Setter Property="Focusable" Value="False"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="Separator">
					<Grid Background="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.MenuCenterFillKey}}">
						<Grid.ColumnDefinitions>
							<ColumnDefinition
								MinWidth="24"
								Width="Auto"
								x:Name="iconColumn"
								SharedSizeGroup="MenuItemIconColumnGroup"/>
							<ColumnDefinition Width="*"/>
						</Grid.ColumnDefinitions>
						<Border 
							x:Name="IconAreaBackground" 
							Background="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.MenuIconGroupCenterFillKey}}"
							BorderBrush="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.MenuIconGroupOuterBorderFillKey}}"
							BorderThickness="0,0,1,0"/>
						<Border
							Grid.Column="1"
							Height="{TemplateBinding Height}"
							Margin="8,0,0,0"
							Background="{TemplateBinding Background}"
							SnapsToDevicePixels="True"/>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>



	<!-- =============================================================================== -->
	<!-- MenuScrollViewer and MenuScrollViewerButton Styles		                    -->
	<!-- =============================================================================== -->
	
	<Style x:Key="MenuScrollViewerUpButton" TargetType="{x:Type RepeatButton}">
		<Setter Property="ClickMode" Value="Hover"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type RepeatButton}">
					<Grid x:Name="MenuScrollViewerUpButton">
						<Border
							SnapsToDevicePixels="True"
							x:Name="OuterBorder"
							Background="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.MenuScrollViewerButtonNormalOuterBorderFillKey}}"
							CornerRadius="2,2,2,2"/>
						<Border
							SnapsToDevicePixels="True"
							Margin="1,1,1,1"
							x:Name="InnerBorder_Center"
							Background="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.MenuScrollViewerButtonNormalCenterFillKey}}"/>
						<Path
							x:Name="Glyph"
							Margin="0,4,0,5"
							HorizontalAlignment="Center"
							VerticalAlignment="Center"
							Height="4"
							Width="8"
							Stretch="Fill"
							Opacity="1"
							Data="M 0,4 C0,4 8,4 8,4 8,4 4,0 4,0 4,0 0,4 0,4 z"
							Fill="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.MenuScrollViewerButtonNormalGlyphFillKey}}"
							SnapsToDevicePixels="True"/>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsPressed" Value="True">
							<Setter Property="Background" TargetName="OuterBorder" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.MenuScrollViewerButtonHottrackOuterBorderFillKey}}"/>
							<Setter Property="BorderThickness" TargetName="InnerBorder_Center" Value="1,1,1,1"/>
							<Setter Property="Background" TargetName="InnerBorder_Center" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.MenuScrollViewerButtonHottrackCenterFillKey}}"/>
							<Setter Property="BorderBrush" TargetName="InnerBorder_Center" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.MenuScrollViewerButtonHottrackInnerBorderFillKey}}"/>
							<Setter Property="Fill" TargetName="Glyph" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.MenuScrollViewerButtonHottrackGlyphFillKey}}"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	
	
	<Style x:Key="MenuScrollViewerDownButton" TargetType="{x:Type RepeatButton}">
		<Setter Property="ClickMode" Value="Hover"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type RepeatButton}">
					<Grid x:Name="MenuScrollViewerDownButton">
						<Border
							SnapsToDevicePixels="True"
							x:Name="OuterBorder"
							Background="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.MenuScrollViewerButtonNormalOuterBorderFillKey}}"
							CornerRadius="2,2,2,2"/>
						<Border
							SnapsToDevicePixels="True"
							Margin="1,1,1,1"
							x:Name="InnerBorder_Center"
							Background="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.MenuScrollViewerButtonNormalCenterFillKey}}"/>
						<Path
							x:Name="Glyph"
							Margin="0,5,0,4"
							HorizontalAlignment="Center"
							VerticalAlignment="Center"
							Height="3"
							Width="6"
							Stretch="Fill"
							Opacity="1"
							Data="M 1,0 C1,0 7,0 7,0 7,0 4,3 4,3 4,3 1,0 1,0 z"
							Fill="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.MenuScrollViewerButtonNormalGlyphFillKey}}"
							SnapsToDevicePixels="True"
							ClipToBounds="False"/>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsPressed" Value="True">
							<Setter Property="Background" TargetName="OuterBorder" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.MenuScrollViewerButtonHottrackOuterBorderFillKey}}"/>
							<Setter Property="BorderThickness" TargetName="InnerBorder_Center" Value="1,1,1,1"/>
							<Setter Property="Background" TargetName="InnerBorder_Center" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.MenuScrollViewerButtonHottrackCenterFillKey}}"/>
							<Setter Property="BorderBrush" TargetName="InnerBorder_Center" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.MenuScrollViewerButtonHottrackInnerBorderFillKey}}"/>
							<Setter Property="Fill" TargetName="Glyph" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.MenuScrollViewerButtonHottrackGlyphFillKey}}"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	

	<!-- ========== MenuScrollViewer ========== -->
	<Style x:Key="MenuScrollViewer" TargetType="{x:Type ScrollViewer}" BasedOn="{x:Null}">
		<Setter Property="HorizontalScrollBarVisibility" Value="Hidden"/>
		<Setter Property="VerticalScrollBarVisibility" Value="Auto"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ScrollViewer}">
					<Grid SnapsToDevicePixels="true" Background="{TemplateBinding Background}">
						<Grid.RowDefinitions>
							<RowDefinition Height="Auto"/>
							<RowDefinition Height="*"/>
							<RowDefinition Height="Auto"/>
						</Grid.RowDefinitions>
						<Border Grid.Row="1">
							<ScrollContentPresenter CanContentScroll="{TemplateBinding CanContentScroll}" x:Name="PART_ScrollContentPresenter" Margin="{TemplateBinding Padding}"/>
						</Border>
						<RepeatButton
							Command="{x:Static ScrollBar.LineUpCommand}"
							Style="{StaticResource MenuScrollViewerUpButton}"
							Focusable="false"
							CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}"
							Margin="1,1,1,0">
							<RepeatButton.Visibility>
								<MultiBinding FallbackValue="Visibility.Collapsed" Converter="{StaticResource MenuScrollingVisibilityConverter}" ConverterParameter="0">
									<Binding Path="ComputedVerticalScrollBarVisibility" RelativeSource="{RelativeSource TemplatedParent}"/>
									<Binding Path="VerticalOffset" RelativeSource="{RelativeSource TemplatedParent}"/>
									<Binding Path="ExtentHeight" RelativeSource="{RelativeSource TemplatedParent}"/>
									<Binding Path="ViewportHeight" RelativeSource="{RelativeSource TemplatedParent}"/>
								</MultiBinding>
							</RepeatButton.Visibility>
						</RepeatButton>
						<RepeatButton
							Grid.Row="2"
							Command="{x:Static ScrollBar.LineDownCommand}"
							Style="{StaticResource MenuScrollViewerDownButton}"
							Focusable="false"
							CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}"
							Margin="1,0,1,1">
							<RepeatButton.Visibility>
								<MultiBinding FallbackValue="Visibility.Collapsed" Converter="{StaticResource MenuScrollingVisibilityConverter}" ConverterParameter="100">
									<Binding Path="ComputedVerticalScrollBarVisibility" RelativeSource="{RelativeSource TemplatedParent}"/>
									<Binding Path="VerticalOffset" RelativeSource="{RelativeSource TemplatedParent}"/>
									<Binding Path="ExtentHeight" RelativeSource="{RelativeSource TemplatedParent}"/>
									<Binding Path="ViewportHeight" RelativeSource="{RelativeSource TemplatedParent}"/>
								</MultiBinding>
							</RepeatButton.Visibility>
						</RepeatButton>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	
	
	
	<!-- =============================================================================== -->
	<!-- MenuItem style for 'fixed' menu items: OverflowMenuItemStyleKey                 -->
	<!-- =============================================================================== -->
	<Style x:Key="{x:Static igOutlookBar:XamOutlookBar.OverflowMenuItemStyleKey}" TargetType="MenuItem">
		<Setter Property="HorizontalContentAlignment" Value="{Binding Path=HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
		<Setter Property="VerticalContentAlignment" Value="{Binding Path=VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
		<Setter Property="Background" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.MenuCenterFillKey}}"/>
		<Setter Property="BorderBrush" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.MenuOuterBorderFillKey}}"/>
		<Setter Property="Foreground" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.MenuItemTextNormalFillKey}}"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type MenuItem}">
					<Border
							x:Name="Border"
							Background="{TemplateBinding Background}"
							BorderBrush="{TemplateBinding BorderBrush}"
							BorderThickness="{TemplateBinding BorderThickness}"
							Margin="{TemplateBinding Margin}">
						<Grid Visibility="Visible">
							<!-- The Grid is used to hold together columns for an Icon, Content, Glyph checkmark and Arrow to show the next level
							 Size sharing is used in Grid so that the Icon, Content, Arrow for each MenuItem align together -->
							<Grid.ColumnDefinitions>
								<ColumnDefinition x:Name="MenuItemIconColumnGroup" MinWidth="17" Width="Auto" SharedSizeGroup="MenuItemIconColumnGroup"/>
								<ColumnDefinition Width="*"/>
								<ColumnDefinition Width="Auto" SharedSizeGroup="MenuItemIGTColumnGroup"/>
								<ColumnDefinition Width="14"/>
							</Grid.ColumnDefinitions>
							<Border 
								x:Name="IconAreaBackground" 
								Background="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.MenuIconGroupCenterFillKey}}"
								BorderBrush="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.MenuIconGroupOuterBorderFillKey}}"
								BorderThickness="0,0,1,0"
								Visibility="Collapsed"/>
							<!-- MenuItem Highlight -->
							<Grid
									HorizontalAlignment="Stretch"
									Margin="1,1,1,1"
									Width="Auto"
									Grid.Column="0"
									Grid.ColumnSpan="4"
									x:Name="Highlight"
									Visibility="Collapsed">
								<Rectangle x:Name="HighlightFill" Fill="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.MenuItemHottrackCenterFillKey}}" Stroke="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.MenuItemHottrackOuterBorderFillKey}}"/>
							</Grid>
							<Border
									x:Name="checkedState"
									Background="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.MenuCheckmarkBoxNormalCenterFillKey}}"
									BorderBrush="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.MenuCheckmarkBoxNormalOuterBorderFillKey}}"
									BorderThickness="1"
									Visibility="Collapsed"
									Margin="2"/>
							<!-- ContentPresenter to show an Icon if needed -->
							<ContentPresenter
									x:Name="Icon"
									VerticalAlignment="Center"
									HorizontalAlignment="Center"
									ContentSource="Icon"
									MaxHeight="18"
									MaxWidth="18"/>
							<!-- Glyph is a checkmark if needed for a checkable menu -->
							<Grid
									Visibility="Collapsed"
									Margin="1,0,0,0"
									x:Name="GlyphPanel"
									VerticalAlignment="Center"
									HorizontalAlignment="Center">
								<Path
										x:Name="GlyphPanelpath"
										VerticalAlignment="Center"
										Fill="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.DarkBrushKey}}"
										Data="M0,2 L0,4.8 L2.5,7.4 L7.1,2.8 L7.1,0 L2.5,4.6 z"
										FlowDirection="LeftToRight"/>
							</Grid>
							<!-- Content for the menu text etc -->
							<ContentPresenter
									Grid.Column="1"
									x:Name="HeaderHost"
									RecognizesAccessKey="True"
									ContentSource="Header"
									VerticalAlignment="Center"
									Margin="0,4,0,4"/>
							<!-- Arrow drawn path which points to the next level of the menu -->
							<Grid
									Grid.Column="3"
									Margin="0,0,1,0"
									x:Name="ArrowPanel"
									VerticalAlignment="Center"
									HorizontalAlignment="Center">
								<Path
										x:Name="ArrowPanelPath"
										VerticalAlignment="Center"
										Fill="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.DarkBrushKey}}"
										Data="M0,0 L0,8 L4,4 z"/>
							</Grid>
							<!-- The Popup is the body of the menu which expands down or across depending on the level of the item -->
							<Popup
									IsOpen="{Binding Path=IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}"
									Placement="Right"
									x:Name="SubMenuPopup"
									Focusable="false"
									AllowsTransparency="true"
									PopupAnimation="{x:Static SystemParameters.MenuPopupAnimation}"
									VerticalOffset="-3">
								<Grid x:Name="SubMenu">
									<Border
											x:Name="SubMenuBorder"
											Background="{TemplateBinding Background}"
											BorderBrush="{TemplateBinding BorderBrush}"
											BorderThickness="1">
										<!-- StackPanel holds children of the menu. This is set bu IsItemsHost=True -->
										<!--<StackPanel
											x:Name="itemsStackPanel"
											IsItemsHost="True"
											KeyboardNavigation.DirectionalNavigation="Cycle"
											Width="Auto"
											Height="Auto"/>-->
										<ScrollViewer
											x:Name="Popup_ScrollViewer"
											HorizontalScrollBarVisibility="Disabled"
											VerticalScrollBarVisibility="Auto"
											Style="{StaticResource MenuScrollViewer}">
											<ItemsPresenter
												Grid.IsSharedSizeScope="true"
												KeyboardNavigation.TabNavigation="Cycle"
												KeyboardNavigation.DirectionalNavigation="Cycle"
												SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
										</ScrollViewer>
									</Border>
								</Grid>
							</Popup>
						</Grid>
					</Border>
					<!-- These triggers re-configure the four arrangements of MenuItem to show different levels of menu via Role -->
					<ControlTemplate.Triggers>
						<!-- Role = TopLevelHeader : this is the root menu item in a menu; the Popup expands down -->
						<Trigger Property="Role" Value="TopLevelHeader">
							<Setter Property="Padding" Value="6,3,6,3"/>
							<Setter Property="Grid.IsSharedSizeScope" Value="true"/>
							<Setter Property="Placement" Value="Bottom" TargetName="SubMenuPopup"/>
							<Setter Property="Visibility" Value="Collapsed" TargetName="ArrowPanel"/>
							<Setter Property="Foreground" Value="Cyan"/>
							<Setter TargetName="HighlightFill" Property="Fill" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.MenuItemHottrackCenterFillKey}}"/>
							<Setter TargetName="HighlightFill" Property="Stroke" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.MenuItemHottrackOuterBorderFillKey}}"/>
						</Trigger>
						<!-- Role = TopLevelItem :  this is a child menu item from the top level without any child items-->
						<Trigger Property="Role" Value="TopLevelItem">
							<Setter Property="Padding" Value="6,3,6,3"/>
							<Setter Property="Visibility" Value="Collapsed" TargetName="ArrowPanel"/>
							<Setter TargetName="IconAreaBackground" Property="Visibility" Value="Visible"/>
							<Setter TargetName="MenuItemIconColumnGroup" Property="MinWidth" Value="24"/>
							<Setter TargetName="HeaderHost" Property="Margin" Value="8,5,0,6"/>
						</Trigger>
						<!-- Role = SubMenuHeader : this is a child menu item which does not have children -->
						<Trigger Property="Role" Value="SubmenuHeader">
							<Setter Property="DockPanel.Dock" Value="Top"/>
							<Setter Property="Padding" Value="0,2,0,2"/>
							<Setter Property="Grid.IsSharedSizeScope" Value="true"/>
							<Setter TargetName="IconAreaBackground" Property="Visibility" Value="Visible"/>
							<Setter TargetName="MenuItemIconColumnGroup" Property="MinWidth" Value="24"/>
							<Setter TargetName="HeaderHost" Property="Margin" Value="8,5,0,6"/>
						</Trigger>
						<!-- Role = SubMenuItem : this is a child menu item which has children-->
						<Trigger Property="Role" Value="SubmenuItem">
							<Setter Property="DockPanel.Dock" Value="Top"/>
							<Setter Property="Padding" Value="0,2,0,2"/>
							<Setter Property="Visibility" Value="Collapsed" TargetName="ArrowPanel"/>
							<Setter TargetName="IconAreaBackground" Property="Visibility" Value="Visible"/>
							<Setter TargetName="MenuItemIconColumnGroup" Property="MinWidth" Value="24"/>
							<Setter TargetName="HeaderHost" Property="Margin" Value="8,5,0,6"/>
						</Trigger>
						<Trigger Property="IsSuspendingPopupAnimation" Value="true">
							<Setter Property="PopupAnimation" Value="None" TargetName="SubMenuPopup"/>
						</Trigger>
						<!-- If no Icon is present then we collapse the Icon Content -->
						<Trigger Property="Icon" Value="{x:Null}">
							<Setter Property="Visibility" Value="Collapsed" TargetName="Icon"/>
						</Trigger>
						<!-- The GlyphPanel contains the CheckMark -->
						<Trigger Property="IsChecked" Value="true">
							<Setter Property="Visibility" Value="Visible" TargetName="checkedState"/>
						</Trigger>
						<Trigger Property="AllowsTransparency" SourceName="SubMenuPopup" Value="true">
							<Setter Property="Margin" Value="0,0,3,3" TargetName="SubMenu"/>
							<Setter Property="SnapsToDevicePixels" Value="true" TargetName="SubMenu"/>
							<!-- JM 06-03-09 TFS 17547 -->
							<!--<Setter Property="BitmapEffect" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.DropShadowBitmapEffect}}" TargetName="SubMenuBorder"/>-->
						</Trigger>
						<!-- Using the system colors for the Menu Highlight and IsEnabled-->
						<Trigger Property="IsHighlighted" Value="true">
							<Setter Property="Visibility" TargetName="Highlight" Value="Visible"/>
							<Setter Property="Foreground" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.MenuItemTextHottrackFillKey}}"/>
						</Trigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsChecked" Value="True"/>
								<Condition Property="IsHighlighted" Value="True"/>
							</MultiTrigger.Conditions>
							<Setter TargetName="checkedState" Property="Background" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.MenuCheckmarkBoxHottrackCenterFillKey}}"/>
							<Setter TargetName="checkedState" Property="BorderBrush" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.MenuCheckmarkBoxHottrackOuterBorderFillKey}}"/>
						</MultiTrigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="Role" Value="TopLevelHeader"/>
								<Condition Property="IsHighlighted" Value="True"/>
							</MultiTrigger.Conditions>
							<Setter Property="Foreground" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.DarkBrushKey}}"/>
						</MultiTrigger>
						<Trigger Property="IsEnabled" Value="false">
							<Setter Property="Foreground" Value="Gray"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- =============================================================================== -->
	<!-- MenuItem style for the header of overflow menu: OverflowMenuButtonStyleKey      -->
	<!-- =============================================================================== -->
	<Style x:Key="{x:Static igOutlookBar:XamOutlookBar.OverflowMenuButtonStyleKey}" TargetType="MenuItem">
		<Setter Property="BorderBrush" Value="Transparent"/>
		<Setter Property="SnapsToDevicePixels" Value="True"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="MenuItem">
					<Border Name="Border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}">
						<Grid>
							<ContentPresenter Margin="6,3,6,3" ContentSource="Header" RecognizesAccessKey="True"/>
							<Popup
								Name="Popup"
								Placement="Right"
								IsOpen="{TemplateBinding IsSubmenuOpen}"
								AllowsTransparency="True"
								Focusable="False"
								PopupAnimation="Fade">
								<Border
									Name="SubmenuBorder"
									SnapsToDevicePixels="True"
									Background="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.MenuCenterFillKey}}"
									BorderBrush="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.MenuOuterBorderFillKey}}"
									BorderThickness="1">
									<!--<StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle"/>-->
									<ScrollViewer
											x:Name="Popup_ScrollViewer"
											HorizontalScrollBarVisibility="Disabled"
											VerticalScrollBarVisibility="Auto"
											Style="{StaticResource MenuScrollViewer}">
										<ItemsPresenter
												Grid.IsSharedSizeScope="true"
												KeyboardNavigation.TabNavigation="Cycle"
												KeyboardNavigation.DirectionalNavigation="Cycle"
												SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
									</ScrollViewer>
								</Border>
							</Popup>
						</Grid>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsSuspendingPopupAnimation" Value="true">
							<Setter TargetName="Popup" Property="PopupAnimation" Value="None"/>
						</Trigger>
						<Trigger Property="IsHighlighted" Value="true">
							<Setter TargetName="Border" Property="Background" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.NavigationGroupHeaderHottrackCenterFillKey}}"/>
						</Trigger>
						<Trigger Property="IsPressed" Value="true">
							<Setter TargetName="Border" Property="Background" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.NavigationGroupHeaderPressedCenterFillKey}}"/>
						</Trigger>
						<Trigger Property="IsEnabled" Value="False">
							<Setter Property="Foreground" Value="Gray"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- =============================================================================== -->
	<!--  Navigation Pane Toggle Button Style:NavigationPaneToggleButtonStyleKey         -->
	<!-- =============================================================================== -->
	<Style x:Key="{x:Static igOutlookBar:XamOutlookBar.NavigationPaneToggleButtonStyleKey}" TargetType="{x:Type ToggleButton}" BasedOn="{x:Null}">
		<Setter Property="Background" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.MinimizedNavigationPaneNormalFillKey}}"/>
		<!-- JM 01-13-12 TFS99281 - Add Setter for HorizontalContentAlignment-->
		<Setter Property="HorizontalContentAlignment" Value="Stretch"/>
		<Setter Property="Cursor" Value="Hand"/>
        <Setter Property="ToolTip"	Value="{x:Static igOutlookBar:ResourcesOutlookBar.NavigationPaneMinimizedTooltip}"/>
        <Setter Property="Content"	Value="{x:Static igOutlookBar:ResourcesOutlookBar.NavigationPaneMinimizedText}"/>
        <Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ToggleButton}">
					<Grid>
						<Border x:Name="Border" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}"/>
						<!-- JM 01-13-12 TFS99281 - Add TextBlock.TextAlignment="Center" -->
						<ContentPresenter x:Name="header" TextElement.Foreground="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.MinimizedNavigationPaneNormalTextFillKey}}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" RecognizesAccessKey="True" TextBlock.TextAlignment="Center"/>
					</Grid>
					<ControlTemplate.Triggers>

                        <MultiDataTrigger>
							<MultiDataTrigger.Conditions>
								<Condition Binding="{Binding Path=(igOutlookBar:XamOutlookBar.OutlookBar).IsMinimized, RelativeSource={RelativeSource Self}}" Value="True"/>
								<Condition Binding="{Binding Path=IsMouseOver, RelativeSource={x:Static RelativeSource.Self}}" Value="True"/>
							</MultiDataTrigger.Conditions>
							<Setter Property="Background" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.MinimizedNavigationPaneHottrackFillKey}}"/>
							<Setter TargetName="header" Property="TextElement.Foreground" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.MinimizedNavigationPaneHottrackTextFillKey}}"/>
						</MultiDataTrigger>
                        
						<MultiDataTrigger>
							<MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=(igOutlookBar:XamOutlookBar.OutlookBar).IsMinimized, RelativeSource={RelativeSource Self}}" Value="True"/>
                                <Condition Binding="{Binding Path=IsPressed, RelativeSource={x:Static RelativeSource.Self}}" Value="True"/>
							</MultiDataTrigger.Conditions>
							<Setter Property="Background" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.MinimizedNavigationPanePressedFillKey}}"/>
							<Setter TargetName="header" Property="TextElement.Foreground" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.MinimizedNavigationPaneHottrackTextFillKey}}"/>
						</MultiDataTrigger>
                        
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
								<Condition Binding="{Binding Path=(igOutlookBar:XamOutlookBar.OutlookBar).IsMinimized, RelativeSource={RelativeSource Self}}" Value="True"/>
                                <Condition Binding="{Binding Path=IsChecked, RelativeSource={x:Static RelativeSource.Self}}" Value="True"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.MinimizedNavigationPaneIsSuspendedFillKey}}"/>
                            <Setter TargetName="header" Property="TextElement.Foreground" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.MinimizedNavigationPaneHottrackTextFillKey}}"/>
                        </MultiDataTrigger>
                        
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- =============================================================================== -->
	<!-- XamOutlookBar                                                                   -->
	<!-- =============================================================================== -->
	<Style TargetType="{x:Type igOutlookBar:XamOutlookBar}">
		<Style.Resources>
			<BooleanToVisibilityConverter x:Key="booleanToVisibilityConverter"/>
		</Style.Resources>
		<Setter Property="Background" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.XamOutlookBarOuterBorderFillKey}}"/>
		<Setter Property="Padding" Value="1"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type igOutlookBar:XamOutlookBar}">
					<!-- JM 02-09-09 TFS12731 - Add an AdornerDecorator to force the AdornerLayer for the Splitter Preview to be created here -->
					<AdornerDecorator>
						<Border VerticalAlignment="Stretch">
							<Grid VerticalAlignment="Stretch">

								<Grid.ColumnDefinitions>
									<!-- JM 04-27-11 TFS73968 Revert back to original layout and rely on changes made in code behind to address TFS73871 & TFS22746 -->
									<!-- JM 04-27-11 TFS73871 First column should be '*' column -->
									<!-- JM 04-25-11 TFS22746 Remove errant 3rd ColumnDefinition -->
									<ColumnDefinition Width="Auto"/>
									<ColumnDefinition Width="*"/>
									<ColumnDefinition Width="Auto"/>
								</Grid.ColumnDefinitions>

								<!-- JM 04-27-11 TFS73968 Revert back to original layout and rely on changes made in code behind to address TFS73871 & TFS22746 -->
								<!-- JM 04-25-11 TFS22746 Change Grid.Column from 2 to 1 -->
								<Thumb
										x:Name="PART_VerticalSplitter"
										Grid.Column="2"
										Style="{DynamicResource {x:Static igOutlookBar:XamOutlookBar.VerticalSplitterStyleKey}}"
										Visibility="{Binding Path=IsVerticalSplitterVisible, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource booleanToVisibilityConverter}}"/>

								<!-- JM 04-27-11 TFS73968 Revert back to original layout and rely on changes made in code behind to address TFS73871 & TFS22746 -->
								<!-- JM 04-25-11 TFS22746 Change Grid.Column from 1 to 0 -->
								<Border
										Background="{TemplateBinding Background}"
										Grid.Column="1"
										BorderBrush="{TemplateBinding BorderBrush}"
										BorderThickness="{TemplateBinding BorderThickness}"
										Padding="{TemplateBinding Padding}"
										VerticalAlignment="Stretch"
										SnapsToDevicePixels="True">

									<Grid x:Name="PART_Grid">

										<Grid.RowDefinitions>
											<!-- Header Row -->
											<RowDefinition Height="Auto"/>
											<!-- Selected Group Content Row -->
											<RowDefinition Height="*" MinHeight="{TemplateBinding SelectedAreaMinHeight}"/>
											<!-- Splitter Row -->
											<RowDefinition Height="Auto"/>
											<!-- Groups Row -->
											<RowDefinition Height="0" MaxHeight="{Binding ElementName=PART_NavigationArea, Path=Height}"/>
											<!-- Toolbar Row -->
											<RowDefinition Height="Auto"/>
										</Grid.RowDefinitions>

										<Grid.ColumnDefinitions>
											<ColumnDefinition Width="Auto"/>
											<ColumnDefinition/>
											<ColumnDefinition Width="Auto"/>
										</Grid.ColumnDefinitions>

										<!-- Header ================================================ -->
										<igOutlookBar:SelectedGroupHeader
												x:Name="PART_SelectedGroupHeader"
												Grid.Row="0"
												Grid.Column="1"
												TextBlock.FontWeight="Bold"/>

										<!-- Selected Group Content ================================ -->
										<igOutlookBar:SelectedGroupContent
												x:Name="PART_SelectedGroupContent"
												Grid.Row="1"
												Grid.Column="1"
												MinHeight="{TemplateBinding SelectedAreaMinHeight}"/>
										<!-- Splitter ============================================== -->
										<igOutlookBar:GroupAreaSplitter x:Name="PART_Splitter" Grid.Row="2" Grid.Column="1"/>

										<!-- Groups   ============================================== -->
										<igOutlookBar:GroupsPresenter
												x:Name="PART_NavigationArea"
												Grid.Row="3"
												Grid.Column="1"
												ItemsSource="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=NavigationAreaGroups}"/>

										<!-- Toolbar =============================================== -->
										<!--
												GGroups="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=OverflowAreaGroups}"
											-->
										<igOutlookBar:GroupOverflowArea 
												x:Name="PART_OverflowArea" Grid.Row="4" Grid.Column="1"
		                                        
												/>
									</Grid>
								</Border>
							</Grid>
						</Border>
					</AdornerDecorator>
                    <ControlTemplate.Triggers>
						<Trigger SourceName="PART_Splitter" Property="IsMouseOver" Value="true">
							<Setter Property="Cursor" Value="SizeNS">
							</Setter>
						</Trigger>
						<Trigger SourceName="PART_VerticalSplitter" Property="IsMouseOver" Value="true">
							<Setter Property="Cursor" Value="SizeWE">
							</Setter>
						</Trigger>
						<DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=VerticalSplitterLocation}" Value="Left">
							<Setter TargetName="PART_VerticalSplitter" Property="Grid.Column" Value="0"/>
						</DataTrigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- =============================================================================== -->
	<!-- OutlookBarGroup                                                                 -->
	<!-- =============================================================================== -->
	<Style TargetType="{x:Type igOutlookBar:OutlookBarGroup}">
		<Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="ToolTipService.IsEnabled" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type igOutlookBar:OutlookBarGroup}">
                    <Border
						Background="{TemplateBinding Background}"
						BorderBrush="{TemplateBinding BorderBrush}"
						BorderThickness="{TemplateBinding BorderThickness}"
						SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
						Margin="0,0,0,1">
                        <Grid Margin="2">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition x:Name="ImageColumn" Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <!-- Group Image (large/small depends on location) -->
							<!-- JM 04-30-09 TFS 16159 Change the x:Name from 'Image' to 'PART_Image' -->
                            <Image
								x:Name="PART_Image"
								Grid.Column="0"
								Stretch="Uniform"
								Margin="2,2,0,1"
								MinHeight="16"
								MinWidth="16"
								MaxHeight="24"
								MaxWidth="24"
								Source="{TemplateBinding LargeImage}"/>
                            <!-- Group Header(navigartion area/menu)-->
                            <ContentPresenter 
								x:Name="PART_Header"
								TextElement.FontWeight="Bold"
								Grid.Column="1"
								Margin="4,0,0,1"
								VerticalAlignment="Center"
								Content="{TemplateBinding Header}"
								ContentTemplate="{TemplateBinding HeaderTemplate}"
								ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                     
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=LargeImage, RelativeSource={RelativeSource Self}}" Value="{x:Null}"/>
                                <Condition Binding="{Binding Path=Location, RelativeSource={RelativeSource Self}}" Value="NavigationGroupArea"/>
                                <Condition Binding="{Binding Path=OutlookBar.ReserveSpaceForLargeImage, RelativeSource={RelativeSource Self}}" Value="True"/>
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="PART_Header"  Property="Margin" Value="12,0,0,1"/>
                            <Setter TargetName="ImageColumn" Property="Width" Value="Auto"/>
                        </MultiDataTrigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=LargeImage, RelativeSource={RelativeSource Self}}" Value="{x:Null}"/>
                                <Condition Binding="{Binding Path=Location, RelativeSource={RelativeSource Self}}" Value="NavigationGroupArea"/>
                                <Condition Binding="{Binding Path=OutlookBar.ReserveSpaceForLargeImage, RelativeSource={RelativeSource Self}}" Value="False"/>
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="ImageColumn" Property="Width" Value="0"/>
                        </MultiDataTrigger>

                        <Trigger Property="IsSelected" Value="False">
                            <Setter TargetName="PART_Header"  Property="TextElement.Foreground" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.NavigationGroupHeaderNormalTextFillKey}}"/>
                        </Trigger>

                        <Trigger Property="Location" Value="NavigationGroupArea">
                            <Setter TargetName="PART_Header" Property="Visibility" Value="Visible"/>
							
							<!-- JM 04-30-09 TFS 16159 -->
							<!--<Setter TargetName="Image" Property="Source" Value="{Binding Path=LargeImage, RelativeSource={x:Static RelativeSource.TemplatedParent}}"/>-->
							<Setter TargetName="PART_Image" Property="Source" Value="{Binding Path=LargeImage, RelativeSource={x:Static RelativeSource.TemplatedParent}}"/>
						</Trigger>
                        
                        <DataTrigger Binding="{Binding Path=OutlookBar.ShowGroupHeaderAsToolTip, RelativeSource={RelativeSource Self}}" Value="True">
                            <Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Self}, Path=Header}"/>
                        </DataTrigger>

                        <Trigger Property="Location" Value="OverflowContextMenu">
							<!-- JM 04-30-09 TFS 16159 -->
							<!--<Setter TargetName="Image" Property="Source" Value="{Binding Path=SmallImageResolved, RelativeSource={x:Static RelativeSource.TemplatedParent}}"/>
                            <Setter TargetName="Image" Property="Visibility" Value="Collapsed"/>-->
							<Setter TargetName="PART_Image" Property="Source" Value="{Binding Path=SmallImageResolved, RelativeSource={x:Static RelativeSource.TemplatedParent}}"/>
							<Setter TargetName="PART_Image" Property="Visibility" Value="Collapsed"/>
						</Trigger>

                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Background" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.NavigationGroupHeaderActiveCenterFillKey}}"/>
                            <Setter TargetName="PART_Header"  Property="TextElement.Foreground" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.NavigationGroupHeaderActiveTextFillKey}}"/>
                        </Trigger>

                        <DataTrigger Binding="{Binding Path=OutlookBar.IsMinimized, RelativeSource={RelativeSource Self}}" Value="True">
                            <Setter TargetName="PART_Header" Property="Visibility" Value="Collapsed"/>
							
							<!-- JM 04-30-09 TFS 16159 -->
							<!--<Setter TargetName="Image" Property="Source" Value="{Binding Path=LargeImage, RelativeSource={x:Static RelativeSource.TemplatedParent}}"/>-->
							<Setter TargetName="PART_Image" Property="Source" Value="{Binding Path=LargeImage, RelativeSource={x:Static RelativeSource.TemplatedParent}}"/>
							
							<Setter Property="ToolTipService.IsEnabled" Value="{Binding Path=OutlookBar.ShowToolTips, RelativeSource={RelativeSource Self}}"/>
                        </DataTrigger>
                        
                        <Trigger Property="Location" Value="OverflowArea">
							<!-- JM 04-30-09 TFS 16159 -->
							<!--<Setter TargetName="Image" Property="Source" Value="{Binding Path=SmallImageResolved, RelativeSource={x:Static RelativeSource.TemplatedParent}}"/>-->
							<Setter TargetName="PART_Image" Property="Source" Value="{Binding Path=SmallImageResolved, RelativeSource={x:Static RelativeSource.TemplatedParent}}"/>
							
							<Setter TargetName="PART_Header" Property="Visibility" Value="Collapsed"/>
							
							<!-- JM 04-30-09 TFS 16159 -->
							<!--<Setter TargetName="Image" Property="Margin" Value="2,6,2,3"/>
                            <Setter TargetName="Image" Property="MaxHeight" Value="16"/>
                            <Setter TargetName="Image" Property="MaxWidth" Value="16"/>-->
							<Setter TargetName="PART_Image" Property="Margin" Value="2,6,2,3"/>
							<Setter TargetName="PART_Image" Property="MaxHeight" Value="16"/>
							<Setter TargetName="PART_Image" Property="MaxWidth" Value="16"/>
							
							<Setter Property="ToolTipService.IsEnabled" Value="{Binding Path=OutlookBar.ShowToolTips, RelativeSource={RelativeSource Self}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="False">
                <Setter Property="Background" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.NavigationGroupHeaderNormalCenterFillKey}}"/>
                <Setter Property="Foreground" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.NavigationGroupHeaderNormalTextFillKey}}"/>
            </Trigger>

			<!-- HC 050108 - Added 2 triggers. One for a MouseOver, and another for a MouseOver on a IsSelected group-->
			<MultiDataTrigger>
				<MultiDataTrigger.Conditions>
					<Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseOverGroup}" Value="True"/>
					<Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsSelected}" Value="False"/>
				</MultiDataTrigger.Conditions>
				<Setter Property="Background" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.NavigationGroupHeaderHottrackCenterFillKey}}"/>
				<Setter Property="Foreground" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.NavigationGroupHeaderHottrackTextFillKey}}"/>
				<Setter Property="Tag" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.NavigationGroupHeaderHottrackTextFillKey}}"/>
				<Setter Property="Cursor" Value="Hand"/>
			</MultiDataTrigger>
			
			<MultiDataTrigger>
				<MultiDataTrigger.Conditions>
					<Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseOverGroup}" Value="True"/>
					<Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsSelected}" Value="True"/>
				</MultiDataTrigger.Conditions>
				<Setter Property="Background" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.NavigationGroupHeaderActiveHottrackCenterFillKey}}"/>
				<Setter Property="Cursor" Value="Hand"/>
			</MultiDataTrigger>


			<!-- Highlight on mouse down-->
			<MultiDataTrigger>
				<MultiDataTrigger.Conditions>
					<Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseOverGroup}" Value="True"/>
					
					<!-- JM 01-13-12 TFS96983 -->
					<!--<Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseCaptured}" Value="True"/>-->
					<Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseLeftButtonPressed}" Value="True"/>

					<Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsSelected}" Value="False"/>
				</MultiDataTrigger.Conditions>
				<Setter Property="Background" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.NavigationGroupHeaderPressedCenterFillKey}}"/>
				<Setter Property="Cursor" Value="Hand"/>
			</MultiDataTrigger>
        </Style.Triggers>
    </Style>

	<!-- =============================================================================== -->
	<!-- GroupOverflowArea                                                               -->
	<!-- =============================================================================== -->
	<Style TargetType="{x:Type igOutlookBar:GroupOverflowArea}">
		<Setter Property="Background" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.NavigationGroupHeaderNormalCenterFillKey}}"/>
		<Setter Property="Foreground" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.HeaderDarkTextFillKey}}"/>
		<Setter Property="SnapsToDevicePixels" Value="True"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type igOutlookBar:GroupOverflowArea}">
					<Border
						Background="{TemplateBinding Background}"
						BorderBrush="{TemplateBinding BorderBrush}"
						BorderThickness="{TemplateBinding BorderThickness}"
						SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
						<Grid>
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="*"/>
								<ColumnDefinition Width="Auto"/>
							</Grid.ColumnDefinitions>
							<!-- Ovwerflow Toolbar -->
							<igOutlookBar:GroupsPresenter
								x:Name="PART_OverflowGroups"
								Grid.Column="0" Orientation="Horizontal"
							    ItemsSource="{Binding RelativeSource={RelativeSource Self}, Path=(igOutlookBar:XamOutlookBar.OutlookBar).OverflowAreaGroups}"
                            />

                            <!-- Overflow Menu     -->
							<Menu Grid.Column="1" Background="Transparent" x:Name="MainOverflowMenu">
								<MenuItem x:Name="PART_OverflowMenu" 
                                          ToolTip="{x:Static igOutlookBar:ResourcesOutlookBar.OverflowMenuButtonTooltip}"
                                          Style="{DynamicResource {x:Static igOutlookBar:XamOutlookBar.OverflowMenuButtonStyleKey}}">
									<MenuItem.Header>
										<Grid>
											<Path
											Width="5"
											Height="3"
											Margin="0,10,0,9"
											Fill="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.OverflowGlyphBackgroundFillKey}}"
											Stretch="Fill"
											Data="M0,0C0,0 5,0 5,0 5,0 2.5,2.5 2.5,2.5 2.5,2.5 0,0 0,0z"
											VerticalAlignment="Center"
											HorizontalAlignment="Center"/>
											<Path
											Width="5"
											Height="3"
											Margin="0,9,0,10"
											Fill="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.OverflowGlyphForegroundFillKey}}"
											Stretch="Fill"
											Data="M0,0C0,0 5,0 5,0 5,0 2.5,2.5 2.5,2.5 2.5,2.5 0,0 0,0z"
											VerticalAlignment="Center"
											HorizontalAlignment="Center"/>
										</Grid>
									</MenuItem.Header>
                                    <MenuItem
										Header="{x:Static igOutlookBar:ResourcesOutlookBar.ShowMoreButtonsMenuItemHeader}"
										Style="{DynamicResource {x:Static igOutlookBar:XamOutlookBar.OverflowMenuItemStyleKey}}"
										Command="{x:Static igOutlookBar:OutlookBarCommands.ShowMoreButtonsCommand}"
                                        CommandTarget="{Binding Path=(igOutlookBar:XamOutlookBar.OutlookBar), RelativeSource={RelativeSource Self}}"
                                        >
                                        <MenuItem.Icon>
                                            <Image Source="{DynamicResource {x:Static igOutlookBar:XamOutlookBar.ShowMoreButtonsImageKey}}"/>
                                        </MenuItem.Icon>
                                    </MenuItem>
                                    <MenuItem
										Header="{x:Static igOutlookBar:ResourcesOutlookBar.ShowFewerButtonsMenuItemHeader}"
										Style="{DynamicResource {x:Static igOutlookBar:XamOutlookBar.OverflowMenuItemStyleKey}}"
										Command="{x:Static igOutlookBar:OutlookBarCommands.ShowFewerButtonsCommand}"
                                        CommandTarget="{Binding Path=(igOutlookBar:XamOutlookBar.OutlookBar), RelativeSource={RelativeSource Self}}"
                                        >
                                        <MenuItem.Icon>
                                            <Image Source="{DynamicResource {x:Static igOutlookBar:XamOutlookBar.ShowFewerButtonsImageKey}}"/>
                                        </MenuItem.Icon>
                                    </MenuItem>
                                    <MenuItem
										Header="{x:Static igOutlookBar:ResourcesOutlookBar.NavigationAreaOptionsMenuItemHeader}"
										Style="{DynamicResource {x:Static igOutlookBar:XamOutlookBar.OverflowMenuItemStyleKey}}"
										Command="{x:Static igOutlookBar:OutlookBarCommands.ShowOptionsCommand}"
                                        CommandTarget="{Binding Path=(igOutlookBar:XamOutlookBar.OutlookBar), RelativeSource={RelativeSource Self}}"
										/>
									<!-- JM 04-30-09 TFS 16159 -->
                                    <!--<MenuItem x:Name="MenuAddRemove"-->
									<MenuItem x:Name="PART_AddRemoveMenu" 
										Header="{x:Static igOutlookBar:ResourcesOutlookBar.AddOrRemoveButtonsMenuItemHeader}"
                                        Style="{DynamicResource {x:Static igOutlookBar:XamOutlookBar.OverflowMenuItemStyleKey}}"/>
									<Separator x:Name="OverflowMenuSeparator"
                                        Style="{DynamicResource {x:Static igOutlookBar:XamOutlookBar.OverflowMenuSeparatorStyleKey}}"/>
								</MenuItem>
							</Menu>
						</Grid>
					</Border>
					<ControlTemplate.Triggers>
						<DataTrigger Binding="{Binding Path=(igOutlookBar:XamOutlookBar.OutlookBar).ContextMenuGroups.Count, RelativeSource={RelativeSource Self}}" Value="0">
							<Setter TargetName="OverflowMenuSeparator" Property="Visibility" Value="Collapsed"/>
						</DataTrigger>
						<Trigger Property="IsMouseOver" Value="True" SourceName="PART_OverflowMenu">
							<Setter TargetName="PART_OverflowMenu" Property="Background" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.NavigationGroupHeaderHottrackCenterFillKey}}"/>
						</Trigger>
						<Trigger Property="IsPressed" Value="True" SourceName="PART_OverflowMenu">
							<Setter TargetName="PART_OverflowMenu" Property="Background" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.NavigationGroupHeaderPressedCenterFillKey}}"/>
						</Trigger>
						<Trigger Property="IsSuspendingPopupAnimation" Value="True" SourceName="PART_OverflowMenu">
							<Setter TargetName="PART_OverflowMenu" Property="Background" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.NavigationGroupHeaderHottrackCenterFillKey}}"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- =============================================================================== -->
	<!-- SelectedGroupContent                                                            -->
	<!-- =============================================================================== -->
	<Style TargetType="{x:Type igOutlookBar:SelectedGroupContent}">
		<Setter Property="Background" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.LightBrushKey}}"/>
		<Setter Property="Foreground" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.HeaderDarkTextFillKey}}"/>
		<Setter Property="SnapsToDevicePixels" Value="True"/>
		
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type igOutlookBar:SelectedGroupContent}">
					<Border
						Background="{TemplateBinding Background}"
						BorderBrush="{TemplateBinding BorderBrush}"
						BorderThickness="{TemplateBinding BorderThickness}"
						SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
						<Grid>
							<!-- JM 03-10-09 TFS11436 - Change name to use the 'PART_' naming convention -->
							<ContentPresenter x:Name="PART_SelectedGroupContentPresenter"
                                              Content="{Binding Path=(igOutlookBar:XamOutlookBar.OutlookBar).SelectedGroupContent, RelativeSource={RelativeSource Self}}"
                                              ContentTemplate="{Binding Path=(igOutlookBar:XamOutlookBar.OutlookBar).SelectedGroupContentTemplate, RelativeSource={RelativeSource Self}}"
                                              ContentTemplateSelector="{Binding Path=(igOutlookBar:XamOutlookBar.OutlookBar).SelectedGroupContentTemplateSelector, RelativeSource={RelativeSource Self}}"
                                              />
                            <!-- Popup ================================================= -->
							<!-- JM 03-10-09 TFS11436 - Changed the PlacementTarget ElementName binding name to use the new name for the SelectedGroupContentPresenter (see above) -->
                            <Popup
							x:Name="PART_Popup"
							Grid.Row="1"
							StaysOpen="False"
							Placement="Right"
							PlacementTarget="{Binding ElementName=PART_SelectedGroupContentPresenter}">
							<Border BorderThickness="1" Background="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.MinimizedNavigationPopupFillKey}}" BorderBrush="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.MinimizedNavigationPopupBorderFillKey}}">
								<Border BorderBrush="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.XamOutlookBarOuterBorderFillKey}}" BorderThickness="1" Margin="4,3,3,3">
									<!-- JM 03-10-09 TFS11436 - Change name to use the 'PART_' naming convention -->
									<igwindows:PopupResizerDecorator x:Name="PART_PopupResizerDecorator" ResizeMode="Both">
										<ContentPresenter x:Name="SelectedContent" 
                                         Content="{Binding Path=(igOutlookBar:XamOutlookBar.OutlookBar).SelectedGroupContent, RelativeSource={RelativeSource Self}}"
                                         ContentTemplate="{Binding Path=(igOutlookBar:XamOutlookBar.OutlookBar).SelectedGroupContentTemplate, RelativeSource={RelativeSource Self}}"
                                         ContentTemplateSelector="{Binding Path=(igOutlookBar:XamOutlookBar.OutlookBar).SelectedGroupContentTemplateSelector, RelativeSource={RelativeSource Self}}"
                                                         />
									</igwindows:PopupResizerDecorator>
								</Border>
							</Border>
                            </Popup>
                            <ToggleButton
								x:Name="PART_ButtonShowPopup"
    							Visibility="Collapsed"
								Command="{x:Static igOutlookBar:OutlookBarCommands.ShowPopupCommand}"
								TextElement.FontWeight="Bold"
								Style="{DynamicResource {x:Static igOutlookBar:XamOutlookBar.NavigationPaneToggleButtonStyleKey}}"
                                IsChecked="{Binding ElementName=PART_Popup, Path=IsOpen, UpdateSourceTrigger=Explicit}"
                                >
								<ToggleButton.LayoutTransform>
									<RotateTransform Angle="-90"/>
								</ToggleButton.LayoutTransform>
							</ToggleButton>
						</Grid>
					</Border>
					<ControlTemplate.Triggers>
						<DataTrigger Binding="{Binding Path=OutlookBar.IsMinimized, RelativeSource={RelativeSource TemplatedParent}}" Value="True">
							<Setter TargetName="PART_ButtonShowPopup" Property="Visibility" Value="Visible"/>
							<!-- JM 03-10-09 TFS11436 - Changed the TargetName to use the new name for the SelectedGroupContentPresenter with the 'PART_' prefix -->
							<Setter TargetName="PART_SelectedGroupContentPresenter" Property="Visibility" Value="Hidden"/>
                        </DataTrigger>
						<DataTrigger Binding="{Binding Path=OutlookBar.IsMinimized, RelativeSource={RelativeSource TemplatedParent}}" Value="False">
							<!-- JM 03-10-09 TFS11436 - Changed the TargetName to use the new name for the SelectedGroupContentPresenter with the 'PART_' prefix -->
							<Setter TargetName="PART_SelectedGroupContentPresenter" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="PART_SelectedGroupContentPresenter" Property="Content" Value="{Binding Path=(igOutlookBar:XamOutlookBar.OutlookBar).SelectedGroupContent, RelativeSource={RelativeSource Self}}"/>
                            <Setter TargetName="PART_SelectedGroupContentPresenter" Property="ContentTemplate" Value="{Binding Path=(igOutlookBar:XamOutlookBar.OutlookBar).SelectedGroupContentTemplate, RelativeSource={RelativeSource Self}}"/>
                            <Setter TargetName="PART_SelectedGroupContentPresenter" Property="ContentTemplateSelector" Value="{Binding Path=(igOutlookBar:XamOutlookBar.OutlookBar).SelectedGroupContentTemplateSelector, RelativeSource={RelativeSource Self}}"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Path=OutlookBar.VerticalSplitterLocation, RelativeSource={RelativeSource TemplatedParent}}" Value="Left">
                            <Setter TargetName="PART_Popup" Property="Placement" Value="Left"/>
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- =============================================================================== -->
	<!-- SelectedGroupHeader                                                             -->
	<!-- =============================================================================== -->
	<Style TargetType="{x:Type igOutlookBar:SelectedGroupHeader}">
		<Style.Resources>
			<RotateTransform x:Key="MinimizeOnRightTransform" Angle="180"/>
		</Style.Resources>
		<Setter Property="Background" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.CurrentGroupHeaderCenterFillKey}}"/>
		<Setter Property="BorderBrush" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.GroupInnerBorderFillKey}}"/>
		<Setter Property="Foreground" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.HeaderDarkTextFillKey}}"/>
		<Setter Property="SnapsToDevicePixels" Value="True"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type igOutlookBar:SelectedGroupHeader}">
					<Grid Margin="0,0,0,1">
						<Border
							Background="{TemplateBinding Background}"
							BorderBrush="{TemplateBinding BorderBrush}"
							BorderThickness="{TemplateBinding BorderThickness}"
							SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
							<Grid>
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="*"/>
									<ColumnDefinition Width="Auto"/>
								</Grid.ColumnDefinitions>
								<ContentPresenter
									x:Name="ContentPresenterHeader"
									Grid.Column="0"
									Content="{Binding Path=(igOutlookBar:XamOutlookBar.OutlookBar).SelectedGroup.Header, RelativeSource={RelativeSource Self}}"
									Margin="7,7,8,3"/>
								<!-- JM 03-25-10 TFS30068 Collapse the MinimizeButton when AllowMinimized is false in a trigger below instead of binding the enabled property here-->
								<!--<ToggleButton
									x:Name="MinimizeButton"
									Grid.Column="1"
									IsChecked="{Binding Path=(igOutlookBar:XamOutlookBar.OutlookBar).IsMinimized, RelativeSource={RelativeSource Self}}"
									IsEnabled="{Binding Path=(igOutlookBar:XamOutlookBar.OutlookBar).AllowMinimized, RelativeSource={RelativeSource Self}}"
									Style="{DynamicResource {x:Static igOutlookBar:XamOutlookBar.MinimizeToggleButtonStyleKey}}"
									Margin="0,4,0,3"/>-->
								<ToggleButton
									x:Name="MinimizeButton"
									Grid.Column="1"
									IsChecked="{Binding Path=(igOutlookBar:XamOutlookBar.OutlookBar).IsMinimized, RelativeSource={RelativeSource Self}}"
									Style="{DynamicResource {x:Static igOutlookBar:XamOutlookBar.MinimizeToggleButtonStyleKey}}"
									Margin="0,4,0,3"/>
							</Grid>
						</Border>
						<Border x:Name="innerBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1,1,0,0"/>
					</Grid>
					<ControlTemplate.Triggers>
						<!-- JM 03-25-10 TFS30068 Collapse the MinimizeButton when AllowMinimized is false instead of binding the enabled property of the minimized button above.-->
						<DataTrigger Binding="{Binding Path=OutlookBar.AllowMinimized, RelativeSource={RelativeSource TemplatedParent}}" Value="False">
							<Setter TargetName="MinimizeButton" Property="Visibility" Value="Hidden"/>
						</DataTrigger>
						
						<DataTrigger Binding="{Binding Path=OutlookBar.IsMinimized, RelativeSource={RelativeSource TemplatedParent}}" Value="True">
                                <Setter TargetName="ContentPresenterHeader" Property="Visibility" Value="Collapsed"/>
						</DataTrigger>
                        <DataTrigger Binding="{Binding Path=OutlookBar.VerticalSplitterLocation, RelativeSource={RelativeSource TemplatedParent}}" Value="Left">
                            <Setter TargetName="MinimizeButton" Property="LayoutTransform" Value="{StaticResource MinimizeOnRightTransform}"/>
                        </DataTrigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- =============================================================================== -->
	<!-- MinimizeToggleButtonStyle: MinimizeToggleButtonStyleKey                         -->
	<!-- =============================================================================== -->
	<Style x:Key= "{x:Static igOutlookBar:XamOutlookBar.MinimizeToggleButtonStyleKey}" TargetType="ToggleButton">
		<Setter Property="Focusable" Value="False"/>
		<Setter Property="Cursor" Value="Hand"/>
        <Setter Property="ToolTip"	Value="{x:Static igOutlookBar:ResourcesOutlookBar.MinimizeButtonMinimizeTooltip}"/>
        
        <Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="ToggleButton">
					<Grid x:Name="glyphArea"
		                Width="18"
		                Height="18"
                          Margin="0,0,3,0"
                          Background="Transparent">
						<Grid x:Name="glyph">
							<Path x:Name="glyph1bg"
			                Margin="4,0,0,0"
			                HorizontalAlignment="Center"
			                VerticalAlignment="Center"
			                Height="9"
			                Width="6.5"
			                Stretch="Fill"
			                Opacity="1"
			                Data="M 8.5,7 C8.5,7 4,3.5 4,3.5 4,3.5 8.5,0 8.5,0 8.5,0 8.5,2 8.5,2 8.5,2 6.5,3 6.5,3 6.5,3 6.5,4 6.5,4 6.5,4 8.5,5 8.5,5 8.5,5 8.5,7 8.5,7 z"
			                Fill="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.GlyphThemeBackgroundFillKey}}" />
							<Path x:Name="glyph2bg"
			                Margin="0,0,5,0"
			                HorizontalAlignment="Center"
			                VerticalAlignment="Center"
			                Height="9"
			                Width="6.5"
			                Stretch="Fill"
			                Opacity="1"
			                Data="M 4.5,7 C4.5,7 0,3.5 0,3.5 0,3.5 4.5,0 4.5,0 4.5,0 4.5,2 4.5,2 4.5,2 2.5,3 2.5,3 2.5,3 2.5,4 2.5,4 2.5,4 4.5,5 4.5,5 4.5,5 4.5,7 4.5,7 z"
			                Fill="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.GlyphThemeBackgroundFillKey}}" />
							<Path x:Name="glyph1"
			                Margin="4,0,0,0"
			                HorizontalAlignment="Center"
			                VerticalAlignment="Center"
			                Height="7"
			                Width="4.5"
			                Stretch="Fill"
			                Opacity="1"
			                Data="M 8.5,7 C8.5,7 4,3.5 4,3.5 4,3.5 8.5,0 8.5,0 8.5,0 8.5,2 8.5,2 8.5,2 6.5,3 6.5,3 6.5,3 6.5,4 6.5,4 6.5,4 8.5,5 8.5,5 8.5,5 8.5,7 8.5,7 z"
			                Fill="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.GlyphThemeForegroundFillKey}}" />
							<Path x:Name="glyph2"
			                Margin="0,0,4,0"
			                HorizontalAlignment="Center"
			                VerticalAlignment="Center"
			                Height="7"
			                Width="4.5"
			                Stretch="Fill"
			                Opacity="1"
			                Data="M 4.5,7 C4.5,7 0,3.5 0,3.5 0,3.5 4.5,0 4.5,0 4.5,0 4.5,2 4.5,2 4.5,2 2.5,3 2.5,3 2.5,3 2.5,4 2.5,4 2.5,4 4.5,5 4.5,5 4.5,5 4.5,7 4.5,7 z"
			                Fill="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.GlyphThemeForegroundFillKey}}" />
						</Grid>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsChecked" Value="True">
							<Setter Property="LayoutTransform" TargetName="glyph1">
								<Setter.Value>
									<RotateTransform Angle="180" />
								</Setter.Value>
                            </Setter>
							<Setter Property="LayoutTransform" TargetName="glyph2">
								<Setter.Value>
									<RotateTransform Angle="180" />
								</Setter.Value>
							</Setter>
							<Setter Property="LayoutTransform" TargetName="glyph1bg">
								<Setter.Value>
									<RotateTransform Angle="180" />
								</Setter.Value>
							</Setter>
							<Setter Property="LayoutTransform" TargetName="glyph2bg">
								<Setter.Value>
									<RotateTransform Angle="180" />
								</Setter.Value>
							</Setter>
                            <Setter Property="ToolTip"	Value="{x:Static igOutlookBar:ResourcesOutlookBar.MinimizeButtonExpandTooltip}"/>
                        </Trigger>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter TargetName="glyphArea" Property="Background" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.ContentAreaDropdownHottrackCenterFillKey}}"/>
						</Trigger>
						<Trigger Property="IsPressed" Value="True">
							<Setter TargetName="glyphArea" Property="Background" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.ContentAreaDropdownPressedCenterFillKey}}"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- =============================================================================== -->
	<!-- GroupAreaSplitterThumb                                                          -->
	<!-- =============================================================================== -->
	<Style x:Key="{x:Static igOutlookBar:XamOutlookBar.HorizontalSplitterStyleKey}" TargetType="{x:Type Thumb}">
		<Setter Property="Background" Value="Transparent"/>
		<Setter Property="BorderBrush" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.GroupInnerBorderFillKey}}"/>
        <Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Thumb}">
					<Grid VerticalAlignment="Stretch">
						<Border Background="{TemplateBinding Background}"/>
						<Border Background="{TemplateBinding BorderBrush}" Height="1" VerticalAlignment="Top"/>
						<Grid VerticalAlignment="Center" HorizontalAlignment="Center" Margin="0,2,0,2">
							<Path
	                            Margin="1,1,0,0"
	                            Stretch="Fill"
	                            Opacity="1"
	                            Data="M 17,1 C17,1.5522918701171875 17.447708129882812,2 18,2 18.552291870117188,2 19,1.5522918701171875 19,1 19,0.4477081298828125 18.552291870117188,0 18,0 17.447708129882812,0 17,0.4477081298828125 17,1 zM 13,1 C13,1.5522918701171875 13.447708129882812,2 14,2 14.552291870117188,2 15,1.5522918701171875 15,1 15,0.4477081298828125 14.552291870117188,0 14,0 13.447708129882812,0 13,0.4477081298828125 13,1 zM 9,1 C9,1.5522918701171875 9.447708129882812,2 10,2 10.552291870117188,2 11,1.5522918701171875 11,1 11,0.4477081298828125 10.552291870117188,0 10,0 9.447708129882812,0 9,0.4477081298828125 9,1 zM 5,1 C5,1.5522918701171875 5.4477081298828125,2 6,2 6.5522918701171875,2 7,1.5522918701171875 7,1 7,0.4477081298828125 6.5522918701171875,0 6,0 5.4477081298828125,0 5,0.4477081298828125 5,1 zM 1,1 C1,1.5522918701171875 1.4477081298828125,2 2,2 2.5522918701171875,2 3,1.5522918701171875 3,1 3,0.4477081298828125 2.5522918701171875,0 2,0 1.4477081298828125,0 1,0.4477081298828125 1,1 z"
	                            Fill="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.LightBrushKey}}" Width="18" Height="2" x:Name="backgroundGlyph" />
							<Path
		                        HorizontalAlignment="Left"
		                        VerticalAlignment="Top"
		                        Height="2"
		                        Width="18"
		                        Stretch="Fill"
		                        Opacity="1"
		                        Data="M 17,1 C17,1.5522918701171875 17.447708129882812,2 18,2 18.552291870117188,2 19,1.5522918701171875 19,1 19,0.4477081298828125 18.552291870117188,0 18,0 17.447708129882812,0 17,0.4477081298828125 17,1 zM 13,1 C13,1.5522918701171875 13.447708129882812,2 14,2 14.552291870117188,2 15,1.5522918701171875 15,1 15,0.4477081298828125 14.552291870117188,0 14,0 13.447708129882812,0 13,0.4477081298828125 13,1 zM 9,1 C9,1.5522918701171875 9.447708129882812,2 10,2 10.552291870117188,2 11,1.5522918701171875 11,1 11,0.4477081298828125 10.552291870117188,0 10,0 9.447708129882812,0 9,0.4477081298828125 9,1 zM 5,1 C5,1.5522918701171875 5.4477081298828125,2 6,2 6.5522918701171875,2 7,1.5522918701171875 7,1 7,0.4477081298828125 6.5522918701171875,0 6,0 5.4477081298828125,0 5,0.4477081298828125 5,1 zM 1,1 C1,1.5522918701171875 1.4477081298828125,2 2,2 2.5522918701171875,2 3,1.5522918701171875 3,1 3,0.4477081298828125 2.5522918701171875,0 2,0 1.4477081298828125,0 1,0.4477081298828125 1,1 z"
		                        Fill="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.XamOutlookBarOuterBorderFillKey}}" x:Name="foregroundGlyph" />
						</Grid>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- =============================================================================== -->
	<!-- VerticalSplitterStyleKey Thumb                                                  -->
	<!-- =============================================================================== -->
    <Style x:Key="{x:Static igOutlookBar:XamOutlookBar.VerticalSplitterStyleKey}" TargetType="{x:Type Thumb}">
		<Setter Property="Background" Value="Transparent"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Thumb}">
					<Rectangle Fill="{TemplateBinding Background}" Width="{Binding Path=(igOutlookBar:XamOutlookBar.OutlookBar).VerticalSplitterWidth, RelativeSource={RelativeSource Self}}"/>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
    
	<!-- =============================================================================== -->
	<!-- GroupAreaSplitter                                                               -->
	<!-- =============================================================================== -->
	<Style TargetType="{x:Type igOutlookBar:GroupAreaSplitter}">
		<Setter Property="Background" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.SplitterCenterFillKey}}"/>
		<Setter Property="SnapsToDevicePixels" Value="True"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type igOutlookBar:GroupAreaSplitter}">
					<Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Margin="0,1,0,1">
                        <Thumb Style="{DynamicResource {x:Static igOutlookBar:XamOutlookBar.HorizontalSplitterStyleKey}}"/>
                    </Border>
					<ControlTemplate.Triggers>
						<Trigger Property="UIElement.IsMouseOver" Value="true">
							<Setter Property="Cursor" Value="SizeNS"></Setter>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- =============================================================================== -->
	<!-- NavigationPaneOptionsControl                                                    -->
	<!-- =============================================================================== -->
	<Style TargetType="{x:Type igOutlookBar:NavigationPaneOptionsControl}">
		<Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.MenuBarBrushKey}}"/>
		<!--<Setter Property="Padding" Value="6"/>-->
		<!-- JM 04-26-11 TFS64509 Changed Width to MinWidth -->
		<!--<Setter Property="Width" Value="314"/>-->
		<Setter Property="MinWidth" Value="314"/>
		<Setter Property="Height" Value="181"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type igOutlookBar:NavigationPaneOptionsControl}">
					<ControlTemplate.Resources>
						<Style x:Key="labelRuler" TargetType="{x:Type Separator}">
							<Setter Property="Height" Value="2"/>
							<Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}"/>
							<Setter Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}"/>
							<Setter Property="Focusable" Value="false"/>
							<Setter Property="SnapsToDevicePixels" Value="True"/>
							<Setter Property="Template">
								<Setter.Value>
									<ControlTemplate TargetType="{x:Type Separator}">
										<Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0,0,0,1" Background="{TemplateBinding Background}"/>
									</ControlTemplate>
								</Setter.Value>
							</Setter>
						</Style>
					</ControlTemplate.Resources>
						<Border
						Background="{TemplateBinding Background}"
						BorderBrush="{TemplateBinding BorderBrush}"
						BorderThickness="{TemplateBinding BorderThickness}"
						Padding="{TemplateBinding Padding}"
                        >
						<Grid>
							<Grid.RowDefinitions>
								<RowDefinition Height="Auto"/>
								<RowDefinition Height="Auto"/>
								<RowDefinition Height="Auto"/>
								<RowDefinition Height="Auto"/>
								<RowDefinition Height="Auto"/>
							</Grid.RowDefinitions>
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="*"/>
								<ColumnDefinition Width="Auto"/>
							</Grid.ColumnDefinitions>
							<DockPanel Grid.ColumnSpan="2" Margin="0,2,7,0">
								<Label DockPanel.Dock="Left" Content="{x:Static igOutlookBar:ResourcesOutlookBar.NavigationPaneOptionsControlOrderLabel}"/>
								<Separator Style="{StaticResource labelRuler}"/>
							</DockPanel>
							<!-- JM 04-26-11 TFS64509 Added MinWidth setter -->
							<ListBox 
								x:Name="PART_ListBox"
								Grid.Row="1"
								Grid.RowSpan="3"
								Height="116"
								MinWidth="209"
								Margin="15,2,0,8"/>
							<!-- JM 04-26-11 TFS64509 Change Width to MinWidth, and HorizontalAlignment from Center to Stretch -->
							<Button
								x:Name="btnMoveUp" Content="{x:Static igOutlookBar:ResourcesOutlookBar.NavigationPaneOptionsControlMoveUpButton}"
								Command="{x:Static igOutlookBar:NavigationPaneOptionsControlCommands.MoveSelectedUpCommand}"
								Grid.Column="1"
								Grid.Row="1"
								MinWidth="75"
								Height="23"
								HorizontalAlignment="Stretch"
								VerticalAlignment="Top"
								Margin="8,2,5,0"/>
							<!-- JM 04-26-11 TFS64509 Change Width to MinWidth, and HorizontalAlignment from Center to Stretch -->
							<Button
								x:Name="btnMoveDn" Content="{x:Static igOutlookBar:ResourcesOutlookBar.NavigationPaneOptionsControlMoveDownButton}"
								Command="{x:Static igOutlookBar:NavigationPaneOptionsControlCommands.MoveSelectedDownCommand}"
								Grid.Column="1"
								Grid.Row="2"
								MinWidth="75"
								Height="23"
								HorizontalAlignment="Stretch"
								VerticalAlignment="Top"
								Margin="8,0,5,9"/>
							<!-- JM 04-26-11 TFS64509 Change Width to MinWidth, and HorizontalAlignment from Center to Stretch -->
							<Button
								x:Name="btnReset" Content="{x:Static igOutlookBar:ResourcesOutlookBar.NavigationPaneOptionsControlResetButton}"
								Command="{x:Static igOutlookBar:NavigationPaneOptionsControlCommands.ResetGroupSequenceAndVisibilityCommand}"
								Grid.Column="1"
								Grid.Row="3"
								MinWidth="75"
								Height="23"
								HorizontalAlignment="Stretch"
								VerticalAlignment="Top"
								Margin="8,0,5,27"/>
							<!-- JM 04-26-11 TFS64509 Put the OK & Cancel Buttons in a StackPanel -->
							<!--<Button
								Name="btnOK" Content="{x:Static igOutlookBar:Resources.NavigationPaneOptionsControlOkButton}"
								Command="{x:Static igOutlookBar:NavigationPaneOptionsControlCommands.CommitChangesAndCloseCommand}"
								IsDefault="True"
								Grid.Column="0"
								Grid.Row="4"
								Width="75"
								Height="23"
								HorizontalAlignment="Right"
								Margin="0,0,0,8"/>
							<Button
								Name="btnCancel" Content="{x:Static igOutlookBar:Resources.NavigationPaneOptionsControlCancelButton}"
								IsCancel="True"
								Grid.Column="1"
								Grid.Row="4"
								Width="75"
								Height="23"
								HorizontalAlignment="Left"
								Margin="9,0,6,8"/>-->
							<StackPanel Grid.Row="4" Grid.ColumnSpan="2" Orientation="Horizontal" HorizontalAlignment="Right">
								<Button
									Name="btnOK" Content="{x:Static igOutlookBar:ResourcesOutlookBar.NavigationPaneOptionsControlOkButton}"
									Command="{x:Static igOutlookBar:NavigationPaneOptionsControlCommands.CommitChangesAndCloseCommand}"
									IsDefault="True"
									MinWidth="75"
									Height="23"
									HorizontalAlignment="Right"
									Margin="0,0,0,8"/>
								<Button
									Name="btnCancel" Content="{x:Static igOutlookBar:ResourcesOutlookBar.NavigationPaneOptionsControlCancelButton}"
									IsCancel="True"
									MinWidth="75"
									Height="23"
									HorizontalAlignment="Right"
									Margin="9,0,6,8"/>
							</StackPanel>
						</Grid>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- =============================================================================== -->
	<!-- OutlookBarProxy DataTemplate                                                    -->
	<!-- =============================================================================== -->
	<DataTemplate DataType="{x:Type igOutlookBar:Internal.OutlookBarGroupProxy}">
		<Border Name="Border">
			<Grid>
				<Grid.ColumnDefinitions>
					<ColumnDefinition></ColumnDefinition>
					<ColumnDefinition></ColumnDefinition>
				</Grid.ColumnDefinitions>
				<CheckBox x:Name="Checked" Grid.Column="0" IsChecked="{Binding Path=IsSelected}" />
				<!-- Bind the Content to the new GroupHeader property -->
                <!--<ContentPresenter x:Name="Header" Margin="2,0,2,0" Grid.Column="1"
								Content="{Binding Path=Group.Header}"
								ContentTemplate="{Binding Path=Group.HeaderTemplate}"
								ContentTemplateSelector="{Binding Path=Group.HeaderTemplateSelector}"/>-->
				<!-- JM 11-19-09 TFS24616 Don't bind the ContentTemplate and ConetntTemplateSelector properties -->
				<!--<ContentPresenter x:Name="Header" Margin="2,0,2,0" Grid.Column="1"
								Content="{Binding Path=GroupHeader}"
								ContentTemplate="{Binding Path=Group.HeaderTemplate}"
								ContentTemplateSelector="{Binding Path=Group.HeaderTemplateSelector}"/>-->
				<ContentPresenter x:Name="Header" Margin="2,0,2,0" Grid.Column="1"
								  Content="{Binding Path=GroupHeader}"/>
			</Grid>
		</Border>

	</DataTemplate>

    <!-- =============================================================================== -->
    <!-- Show Fewer Buttons Image                                                        -->
    <!-- =============================================================================== -->
    <BitmapImage PresentationOptions:Freeze="true" x:Key="{x:Static igOutlookBar:XamOutlookBar.ShowFewerButtonsImageKey}"
                 UriSource="Images/ShowFewerButtonsImage.png"/>

    <!-- =============================================================================== -->
    <!-- Show More Buttons Image                                                         -->
    <!-- =============================================================================== -->
    <BitmapImage PresentationOptions:Freeze="true" x:Key="{x:Static igOutlookBar:XamOutlookBar.ShowMoreButtonsImageKey}"
                 UriSource="Images/ShowMoreButtonsImage.png"/>

    <!-- =============================================================================== -->
    <!-- Default Small Image                                                             -->
    <!-- =============================================================================== -->
    <BitmapImage PresentationOptions:Freeze="true" x:Key="{x:Static igOutlookBar:XamOutlookBar.DefaultSmallImageKey}"
                 UriSource="Images/DefaultSmallImage.png"/>
    
    <!-- =============================================================================== -->
    <!-- VerticalSplitterPreview                                                         -->
    <!-- =============================================================================== -->
    <Style TargetType="{x:Type igOutlookBar:VerticalSplitterPreview}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type igOutlookBar:VerticalSplitterPreview}">
                    <Rectangle Fill="{TemplateBinding Background}" SnapsToDevicePixels="True" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>    
    
    <!-- =============================================================================== -->
	<!-- VerticalSplitterPreviewStyleKey                                                 -->
	<!-- =============================================================================== -->
    <Style x:Key="{x:Static igOutlookBar:XamOutlookBar.VerticalSplitterPreviewStyleKey}" 
           TargetType="{x:Type igOutlookBar:VerticalSplitterPreview}">
        <Setter Property="Background" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.VerticalSplitterCenterFillKey}}"/>
    </Style>
    
</ResourceDictionary>
