<ResourceDictionary
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:igwindows="http://infragistics.com/Windows"
	xmlns:igOutlookBar="http://infragistics.com/OutlookBar"
	>
	<ResourceDictionary.MergedDictionaries>
		<ResourceDictionary Source="OutlookBarOffice2k7Blue.xaml"/>
		<ResourceDictionary Source="OutlookBarLunaNormal_Brushes.xaml"/>
	</ResourceDictionary.MergedDictionaries>
	
	
	<!--
	==================== NOTE NOTE NOTE NOTE ====================
	Template differences between Luna and OutlookBarBase(Office)
	
	- Rectangle x:Name="HighlightFill" of OverflowMenuItemStyleKey template.
	It has rounded corners, OutlookBarBase (Office Themes) does not have rounded corners.
	
	
	Any changes made to these templates from OutlookBarBase can just be copy & pasted into this xaml template.
	Just remember to change:
	
	- RadiusX and RadiusY of Rectangle x:Name="HighlightFill"
	-->


	<!-- =============================================================================== -->
	<!-- Overflow Menu Separator Style: OverflowMenuSeparatorStyleKey                    -->
	<!-- =============================================================================== -->
	<Style x:Key="{x:Static igOutlookBar:XamOutlookBar.OverflowMenuSeparatorStyleKey}" TargetType="Separator">
		<Setter Property="Height" Value="1"/>
		<Setter Property="Background" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.SeparatorFillKey}}"/>
		<Setter Property="Margin" Value="0"/>
		<Setter Property="Focusable" Value="False"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="Separator">
					<Grid Background="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.MenuCenterFillKey}}">
						<Grid.ColumnDefinitions>
							<ColumnDefinition
								MinWidth="24"
								Width="Auto"
								x:Name="iconColumn"
								SharedSizeGroup="MenuItemIconColumnGroup"/>
							<ColumnDefinition Width="*"/>
						</Grid.ColumnDefinitions>
						<Border 
							x:Name="IconAreaBackground" 
							Background="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.MenuIconGroupCenterFillKey}}"
							BorderBrush="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.MenuIconGroupOuterBorderFillKey}}"
							BorderThickness="0,0,1,0"/>
						<Rectangle
							Grid.Column="1"
							Height="{TemplateBinding Height}"
							Margin="8,0,0,0"
							Fill="{TemplateBinding Background}"
							SnapsToDevicePixels="True"/>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>



	<!-- =============================================================================== -->
	<!-- MenuScrollViewer and MenuScrollViewerButton Styles		                    -->
	<!-- =============================================================================== -->

	<Style x:Key="MenuScrollViewerUpButton" TargetType="{x:Type RepeatButton}">
		<Setter Property="ClickMode" Value="Hover"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type RepeatButton}">
					<Grid x:Name="MenuScrollViewerUpButton">
						<Border
							SnapsToDevicePixels="True"
							x:Name="OuterBorder"
							Background="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.MenuScrollViewerButtonNormalOuterBorderFillKey}}"
							CornerRadius="2,2,2,2"/>
						<Border
							SnapsToDevicePixels="True"
							Margin="1,1,1,1"
							x:Name="InnerBorder_Center"
							Background="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.MenuScrollViewerButtonNormalCenterFillKey}}"/>
						<Path
							x:Name="Glyph"
							Margin="0,4,0,5"
							HorizontalAlignment="Center"
							VerticalAlignment="Center"
							Height="4"
							Width="8"
							Stretch="Fill"
							Opacity="1"
							Data="M 0,4 C0,4 8,4 8,4 8,4 4,0 4,0 4,0 0,4 0,4 z"
							Fill="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.MenuScrollViewerButtonNormalGlyphFillKey}}"
							SnapsToDevicePixels="True"/>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsPressed" Value="True">
							<Setter Property="Background" TargetName="OuterBorder" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.MenuScrollViewerButtonHottrackOuterBorderFillKey}}"/>
							<Setter Property="BorderThickness" TargetName="InnerBorder_Center" Value="1,1,1,1"/>
							<Setter Property="Background" TargetName="InnerBorder_Center" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.MenuScrollViewerButtonHottrackCenterFillKey}}"/>
							<Setter Property="BorderBrush" TargetName="InnerBorder_Center" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.MenuScrollViewerButtonHottrackInnerBorderFillKey}}"/>
							<Setter Property="Fill" TargetName="Glyph" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.MenuScrollViewerButtonHottrackGlyphFillKey}}"/>
						</Trigger>
						<!--<Trigger Property="IsPressed" Value="True">
							<Setter Property="Background" TargetName="OuterBorder" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.MenuScrollViewerButtonPressedOuterBorderFillKey}}"/>
							<Setter Property="BorderThickness" TargetName="InnerBorder_Center" Value="1,1,1,1"/>
							<Setter Property="Background" TargetName="InnerBorder_Center" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.MenuScrollViewerButtonPressedCenterFillKey}}"/>
							<Setter Property="BorderBrush" TargetName="InnerBorder_Center" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.MenuScrollViewerButtonPressedInnerBorderFillKey}}"/>
							<Setter Property="Fill" TargetName="Glyph" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.MenuScrollViewerButtonHottrackGlyphFillKey}}"/>
						</Trigger>-->
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>


	<Style x:Key="MenuScrollViewerDownButton" TargetType="{x:Type RepeatButton}">
		<Setter Property="ClickMode" Value="Hover"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type RepeatButton}">
					<Grid x:Name="MenuScrollViewerDownButton">
						<Border
							SnapsToDevicePixels="True"
							x:Name="OuterBorder"
							Background="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.MenuScrollViewerButtonNormalOuterBorderFillKey}}"
							CornerRadius="2,2,2,2"/>
						<Border
							SnapsToDevicePixels="True"
							Margin="1,1,1,1"
							x:Name="InnerBorder_Center"
							Background="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.MenuScrollViewerButtonNormalCenterFillKey}}"/>
						<Path
							x:Name="Glyph"
							Margin="0,5,0,4"
							HorizontalAlignment="Center"
							VerticalAlignment="Center"
							Height="3"
							Width="6"
							Stretch="Fill"
							Opacity="1"
							Data="M 1,0 C1,0 7,0 7,0 7,0 4,3 4,3 4,3 1,0 1,0 z"
							Fill="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.MenuScrollViewerButtonNormalGlyphFillKey}}"
							SnapsToDevicePixels="True"
							ClipToBounds="False"/>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsPressed" Value="True">
							<Setter Property="Background" TargetName="OuterBorder" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.MenuScrollViewerButtonHottrackOuterBorderFillKey}}"/>
							<Setter Property="BorderThickness" TargetName="InnerBorder_Center" Value="1,1,1,1"/>
							<Setter Property="Background" TargetName="InnerBorder_Center" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.MenuScrollViewerButtonHottrackCenterFillKey}}"/>
							<Setter Property="BorderBrush" TargetName="InnerBorder_Center" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.MenuScrollViewerButtonHottrackInnerBorderFillKey}}"/>
							<Setter Property="Fill" TargetName="Glyph" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.MenuScrollViewerButtonHottrackGlyphFillKey}}"/>
						</Trigger>
						<!--<Trigger Property="IsPressed" Value="True">
							<Setter Property="Background" TargetName="OuterBorder" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.MenuScrollViewerButtonPressedOuterBorderFillKey}}"/>
							<Setter Property="BorderThickness" TargetName="InnerBorder_Center" Value="1,1,1,1"/>
							<Setter Property="Background" TargetName="InnerBorder_Center" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.MenuScrollViewerButtonPressedCenterFillKey}}"/>
							<Setter Property="BorderBrush" TargetName="InnerBorder_Center" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.MenuScrollViewerButtonPressedInnerBorderFillKey}}"/>
							<Setter Property="Fill" TargetName="Glyph" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.MenuScrollViewerButtonHottrackGlyphFillKey}}"/>
						</Trigger>-->
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>


	<!-- ========== MenuScrollViewer ========== -->
	<Style x:Key="MenuScrollViewer" TargetType="{x:Type ScrollViewer}" BasedOn="{x:Null}">
		<Setter Property="Background" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.MenuCenterFillKey}}"/>
		<Setter Property="HorizontalScrollBarVisibility" Value="Hidden"/>
		<Setter Property="VerticalScrollBarVisibility" Value="Auto"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ScrollViewer}">
					<Grid SnapsToDevicePixels="true" Background="{TemplateBinding Background}">
						<Grid.RowDefinitions>
							<RowDefinition Height="Auto"/>
							<RowDefinition Height="*"/>
							<RowDefinition Height="Auto"/>
						</Grid.RowDefinitions>
						<Border Grid.Row="1">
							<ScrollContentPresenter CanContentScroll="{TemplateBinding CanContentScroll}" x:Name="PART_ScrollContentPresenter" Margin="{TemplateBinding Padding}"/>
						</Border>
						<RepeatButton
							Command="{x:Static ScrollBar.LineUpCommand}"
							Style="{StaticResource MenuScrollViewerUpButton}"
							Focusable="false"
							CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}"
							Margin="1,1,1,0">
							<RepeatButton.Visibility>
								<MultiBinding FallbackValue="Visibility.Collapsed" Converter="{StaticResource MenuScrollingVisibilityConverter}" ConverterParameter="0">
									<Binding Path="ComputedVerticalScrollBarVisibility" RelativeSource="{RelativeSource TemplatedParent}"/>
									<Binding Path="VerticalOffset" RelativeSource="{RelativeSource TemplatedParent}"/>
									<Binding Path="ExtentHeight" RelativeSource="{RelativeSource TemplatedParent}"/>
									<Binding Path="ViewportHeight" RelativeSource="{RelativeSource TemplatedParent}"/>
								</MultiBinding>
							</RepeatButton.Visibility>
						</RepeatButton>
						<RepeatButton
							Grid.Row="2"
							Command="{x:Static ScrollBar.LineDownCommand}"
							Style="{StaticResource MenuScrollViewerDownButton}"
							Focusable="false"
							CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}"
							Margin="1,0,1,1">
							<RepeatButton.Visibility>
								<MultiBinding FallbackValue="Visibility.Collapsed" Converter="{StaticResource MenuScrollingVisibilityConverter}" ConverterParameter="100">
									<Binding Path="ComputedVerticalScrollBarVisibility" RelativeSource="{RelativeSource TemplatedParent}"/>
									<Binding Path="VerticalOffset" RelativeSource="{RelativeSource TemplatedParent}"/>
									<Binding Path="ExtentHeight" RelativeSource="{RelativeSource TemplatedParent}"/>
									<Binding Path="ViewportHeight" RelativeSource="{RelativeSource TemplatedParent}"/>
								</MultiBinding>
							</RepeatButton.Visibility>
						</RepeatButton>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>



	<!-- =============================================================================== -->
	<!-- MenuItem style for 'fixed' menu items: OverflowMenuItemStyleKey                 -->
	<!-- =============================================================================== -->
	<Style x:Key="{x:Static igOutlookBar:XamOutlookBar.OverflowMenuItemStyleKey}" TargetType="MenuItem">
		<Setter Property="HorizontalContentAlignment" Value="{Binding Path=HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
		<Setter Property="VerticalContentAlignment" Value="{Binding Path=VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
		<Setter Property="Background" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.MenuCenterFillKey}}"/>
		<Setter Property="BorderBrush" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.MenuOuterBorderFillKey}}"/>
		<Setter Property="Foreground" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.MenuItemTextNormalFillKey}}"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type MenuItem}">
					<Border
							x:Name="Border"
							Background="{TemplateBinding Background}"
							BorderBrush="{TemplateBinding BorderBrush}"
							BorderThickness="{TemplateBinding BorderThickness}"
							Margin="{TemplateBinding Margin}">
						<Grid Visibility="Visible">
							<!-- The Grid is used to hold together columns for an Icon, Content, Glyph checkmark and Arrow to show the next level
							 Size sharing is used in Grid so that the Icon, Content, Arrow for each MenuItem align together -->
							<Grid.ColumnDefinitions>
								<ColumnDefinition x:Name="MenuItemIconColumnGroup" MinWidth="17" Width="Auto" SharedSizeGroup="MenuItemIconColumnGroup"/>
								<ColumnDefinition Width="*"/>
								<ColumnDefinition Width="Auto" SharedSizeGroup="MenuItemIGTColumnGroup"/>
								<ColumnDefinition Width="14"/>
							</Grid.ColumnDefinitions>
							<Border 
								x:Name="IconAreaBackground" 
								Background="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.MenuIconGroupCenterFillKey}}"
								BorderBrush="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.MenuIconGroupOuterBorderFillKey}}"
								BorderThickness="0,0,1,0"
								Visibility="Collapsed"/>
							<!-- MenuItem Highlight -->
							<Grid
									HorizontalAlignment="Stretch"
									Margin="1,1,1,1"
									Width="Auto"
									Grid.Column="0"
									Grid.ColumnSpan="4"
									x:Name="Highlight"
									Visibility="Collapsed">
								<Rectangle x:Name="HighlightFill" Fill="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.MenuItemHottrackCenterFillKey}}" Stroke="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.MenuItemHottrackOuterBorderFillKey}}" RadiusX="3" RadiusY="3"/>
							</Grid>
							<Border
									x:Name="checkedState"
									Background="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.MenuCheckmarkBoxNormalCenterFillKey}}"
									BorderBrush="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.MenuCheckmarkBoxNormalOuterBorderFillKey}}"
									BorderThickness="1"
									Visibility="Collapsed"
									Margin="2"/>
							<!-- ContentPresenter to show an Icon if needed -->
							<ContentPresenter
									x:Name="Icon"
									VerticalAlignment="Center"
									HorizontalAlignment="Center"
									ContentSource="Icon"
									MaxHeight="18"
									MaxWidth="18"/>
							<!-- Glyph is a checkmark if needed for a checkable menu -->
							<Grid
									Visibility="Collapsed"
									Margin="1,0,0,0"
									x:Name="GlyphPanel"
									VerticalAlignment="Center"
									HorizontalAlignment="Center">
								<Path
										x:Name="GlyphPanelpath"
										VerticalAlignment="Center"
										Fill="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.DarkBrushKey}}"
										Data="M0,2 L0,4.8 L2.5,7.4 L7.1,2.8 L7.1,0 L2.5,4.6 z"
										FlowDirection="LeftToRight"/>
							</Grid>
							<!-- Content for the menu text etc -->
							<ContentPresenter
									Grid.Column="1"
									x:Name="HeaderHost"
									RecognizesAccessKey="True"
									ContentSource="Header"
									VerticalAlignment="Center"
									Margin="0,4,0,4"/>
							<!-- Arrow drawn path which points to the next level of the menu -->
							<Grid
									Grid.Column="3"
									Margin="0,0,1,0"
									x:Name="ArrowPanel"
									VerticalAlignment="Center"
									HorizontalAlignment="Center">
								<Path
										x:Name="ArrowPanelPath"
										VerticalAlignment="Center"
										Fill="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.DarkBrushKey}}"
										Data="M0,0 L0,8 L4,4 z"/>
							</Grid>
							<!-- The Popup is the body of the menu which expands down or across depending on the level of the item -->
							<Popup
									IsOpen="{Binding Path=IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}"
									Placement="Right"
									x:Name="SubMenuPopup"
									Focusable="false"
									AllowsTransparency="true"
									PopupAnimation="{x:Static SystemParameters.MenuPopupAnimation}"
									VerticalOffset="-3">
								<Grid x:Name="SubMenu">
									<Border
											x:Name="SubMenuBorder"
											Background="{TemplateBinding Background}"
											BorderBrush="{TemplateBinding BorderBrush}"
											BorderThickness="1">
										<!-- StackPanel holds children of the menu. This is set bu IsItemsHost=True -->
										<!--<StackPanel
											x:Name="itemsStackPanel"
											IsItemsHost="True"
											KeyboardNavigation.DirectionalNavigation="Cycle"
											Width="Auto"
											Height="Auto"/>-->
										<ScrollViewer
											x:Name="Popup_ScrollViewer"
											HorizontalScrollBarVisibility="Disabled"
											VerticalScrollBarVisibility="Auto"
											Style="{StaticResource MenuScrollViewer}">
											<ItemsPresenter
												Grid.IsSharedSizeScope="true"
												KeyboardNavigation.TabNavigation="Cycle"
												KeyboardNavigation.DirectionalNavigation="Cycle"
												SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
										</ScrollViewer>
									</Border>
								</Grid>
							</Popup>
						</Grid>
					</Border>
					<!-- These triggers re-configure the four arrangements of MenuItem to show different levels of menu via Role -->
					<ControlTemplate.Triggers>
						<!-- Role = TopLevelHeader : this is the root menu item in a menu; the Popup expands down -->
						<Trigger Property="Role" Value="TopLevelHeader">
							<Setter Property="Padding" Value="6,3,6,3"/>
							<Setter Property="Grid.IsSharedSizeScope" Value="true"/>
							<Setter Property="Placement" Value="Bottom" TargetName="SubMenuPopup"/>
							<Setter Property="Visibility" Value="Collapsed" TargetName="ArrowPanel"/>
							<Setter Property="Foreground" Value="Cyan"/>
							<Setter TargetName="HighlightFill" Property="Fill" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.MenuItemHottrackCenterFillKey}}"/>
							<Setter TargetName="HighlightFill" Property="Stroke" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.MenuItemHottrackOuterBorderFillKey}}"/>
						</Trigger>
						<!-- Role = TopLevelItem :  this is a child menu item from the top level without any child items-->
						<Trigger Property="Role" Value="TopLevelItem">
							<Setter Property="Padding" Value="6,3,6,3"/>
							<Setter Property="Visibility" Value="Collapsed" TargetName="ArrowPanel"/>
							<Setter TargetName="IconAreaBackground" Property="Visibility" Value="Visible"/>
							<Setter TargetName="MenuItemIconColumnGroup" Property="MinWidth" Value="24"/>
							<Setter TargetName="HeaderHost" Property="Margin" Value="8,5,0,6"/>
						</Trigger>
						<!-- Role = SubMenuHeader : this is a child menu item which does not have children -->
						<Trigger Property="Role" Value="SubmenuHeader">
							<Setter Property="DockPanel.Dock" Value="Top"/>
							<Setter Property="Padding" Value="0,2,0,2"/>
							<Setter Property="Grid.IsSharedSizeScope" Value="true"/>
							<Setter TargetName="IconAreaBackground" Property="Visibility" Value="Visible"/>
							<Setter TargetName="MenuItemIconColumnGroup" Property="MinWidth" Value="24"/>
							<Setter TargetName="HeaderHost" Property="Margin" Value="8,5,0,6"/>
						</Trigger>
						<!-- Role = SubMenuItem : this is a child menu item which has children-->
						<Trigger Property="Role" Value="SubmenuItem">
							<Setter Property="DockPanel.Dock" Value="Top"/>
							<Setter Property="Padding" Value="0,2,0,2"/>
							<Setter Property="Visibility" Value="Collapsed" TargetName="ArrowPanel"/>
							<Setter TargetName="IconAreaBackground" Property="Visibility" Value="Visible"/>
							<Setter TargetName="MenuItemIconColumnGroup" Property="MinWidth" Value="24"/>
							<Setter TargetName="HeaderHost" Property="Margin" Value="8,5,0,6"/>
						</Trigger>
						<Trigger Property="IsSuspendingPopupAnimation" Value="true">
							<Setter Property="PopupAnimation" Value="None" TargetName="SubMenuPopup"/>
						</Trigger>
						<!-- If no Icon is present then we collapse the Icon Content -->
						<Trigger Property="Icon" Value="{x:Null}">
							<Setter Property="Visibility" Value="Collapsed" TargetName="Icon"/>
						</Trigger>
						<!-- The GlyphPanel contains the CheckMark -->
						<Trigger Property="IsChecked" Value="true">
							<Setter Property="Visibility" Value="Visible" TargetName="checkedState"/>
						</Trigger>
						<Trigger Property="AllowsTransparency" SourceName="SubMenuPopup" Value="true">
							<Setter Property="Margin" Value="0,0,3,3" TargetName="SubMenu"/>
							<Setter Property="SnapsToDevicePixels" Value="true" TargetName="SubMenu"/>
							<!-- JM 06-03-09 TFS 17547 -->
							<!--<Setter Property="BitmapEffect" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.DropShadowBitmapEffect}}" TargetName="SubMenuBorder"/>-->
						</Trigger>
						<!-- Using the system colors for the Menu Highlight and IsEnabled-->
						<Trigger Property="IsHighlighted" Value="true">
							<Setter Property="Visibility" TargetName="Highlight" Value="Visible"/>
							<Setter Property="Foreground" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.MenuItemTextHottrackFillKey}}"/>
						</Trigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsChecked" Value="True"/>
								<Condition Property="IsHighlighted" Value="True"/>
							</MultiTrigger.Conditions>
							<Setter TargetName="checkedState" Property="Background" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.MenuCheckmarkBoxHottrackCenterFillKey}}"/>
							<Setter TargetName="checkedState" Property="BorderBrush" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.MenuCheckmarkBoxHottrackOuterBorderFillKey}}"/>
						</MultiTrigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="Role" Value="TopLevelHeader"/>
								<Condition Property="IsHighlighted" Value="True"/>
							</MultiTrigger.Conditions>
							<Setter Property="Foreground" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.DarkBrushKey}}"/>
						</MultiTrigger>
						<Trigger Property="IsEnabled" Value="false">
							<Setter Property="Foreground" Value="Gray"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>



</ResourceDictionary>