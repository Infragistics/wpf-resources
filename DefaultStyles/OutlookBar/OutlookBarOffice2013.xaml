<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
                    xmlns:igOutlookBar="http://infragistics.com/OutlookBar" 
                    xmlns:igwindows="http://infragistics.com/Windows" 
                    xmlns:PresentationOptions="http://schemas.microsoft.com/winfx/2006/xaml/presentation/options" 
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="OutlookBarBase.xaml" />
        <ResourceDictionary Source="OutlookBarOffice2013_Brushes.xaml" />
    </ResourceDictionary.MergedDictionaries>

	<!--*********************************  DefaultSmallImage Drawing  *********************************-->
	<DrawingImage PresentationOptions:Freeze="True" x:Key="DefaultSmallImage">
		<DrawingImage.Drawing>
			<GeometryDrawing Brush="{StaticResource ArrowNormalFill}">
				<GeometryDrawing.Geometry>
          <GeometryGroup FillRule="EvenOdd">
            <RectangleGeometry Rect="1,3,14,2" />
            <RectangleGeometry Rect="1,7,14,2" />
            <RectangleGeometry Rect="1,11,14,2" />
            <!--Using EvenOdd fill rule for the geometry drawing. Adding 4 fake elements (2 defining vertical rectangle, 2 - horizontal). 
				Using EvenOdd fill rule will negate the 4 elements to transparent. They serve to define the width and height of the drawing image only.-->
            <RectangleGeometry Rect="0,0,16,0" />
            <RectangleGeometry Rect="0,0,16,0" />
            <RectangleGeometry Rect="0,0,0,16" />
            <RectangleGeometry Rect="0,0,0,16" />
          </GeometryGroup>
				</GeometryDrawing.Geometry>
			</GeometryDrawing>
		</DrawingImage.Drawing>
	</DrawingImage>

	<!--*********************************  DefaultLargeImage Drawing  *********************************-->
	<DrawingImage PresentationOptions:Freeze="True" x:Key="DefaultLargeImage">
		<DrawingImage.Drawing>
			<GeometryDrawing Brush="{StaticResource ArrowNormalFill}">
				<GeometryDrawing.Geometry>
					<GeometryGroup FillRule="EvenOdd">
						<RectangleGeometry Rect="4,5,16,3" />
						<RectangleGeometry Rect="4,10,16,3" />
						<RectangleGeometry Rect="4,15,16,3" />
						<!--Using EvenOdd fill rule for the geometry drawing. Adding 4 fake elements (2 defining vertical rectangle, 2 - horizontal). 
						 Using EvenOdd fill rule will negate the 4 elements to transparent. They serve to define the width and height of the drawing image only.-->
						<RectangleGeometry Rect="0,0,24,0" />
						<RectangleGeometry Rect="0,0,24,0" />
						<RectangleGeometry Rect="0,0,0,24" />
						<RectangleGeometry Rect="0,0,0,24" />
					</GeometryGroup>
				</GeometryDrawing.Geometry>
			</GeometryDrawing>
		</DrawingImage.Drawing>
	</DrawingImage>

	<!-- *********************************  ToolTipStyle  ********************************* -->
    <Style x:Key="ToolTipStyle" TargetType="ContentControl">
        <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
        <Setter Property="FontSize" Value="12" />
        <Setter Property="FontFamily" Value="Segoe UI" />
        <Setter Property="Background" Value="{StaticResource TooltipBackgroundBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource TooltipBorderBrush}" />
        <Setter Property="Padding" Value="12,9" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ContentControl">
                    <Grid>
                        <Grid>
                            <Border Background="{StaticResource TooltipShadowBrush}" CornerRadius="5" Margin="-4" Opacity="0.1" />
                            <Border Background="{StaticResource TooltipShadowBrush}" CornerRadius="4" Margin="-3" Opacity="0.3" />
                            <Border Background="{StaticResource TooltipShadowBrush}" CornerRadius="3" Margin="-2" Opacity="0.5" />
                            <Border Background="{StaticResource TooltipShadowBrush}" CornerRadius="2" Margin="-1" Opacity="0.7" />
                            <Rectangle Stroke="{TemplateBinding BorderBrush}" Fill="{TemplateBinding Background}" StrokeThickness="{TemplateBinding BorderThickness}" />
                            <ContentPresenter Margin="{TemplateBinding Padding}" HorizontalAlignment="{TemplateBinding HorizontalAlignment}" VerticalAlignment="{TemplateBinding VerticalAlignment}" />
                        </Grid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="ToolTip" BasedOn="{StaticResource ToolTipStyle}" />

    <!-- *********************************  ScrollBarButton Style  ********************************* -->
    <Style x:Key="ScrollBarButtonStyle" TargetType="{x:Type RepeatButton}">
        <Setter Property="MinWidth" Value="15" />
        <Setter Property="MinHeight" Value="15" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Grid x:Name="grid1">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Fill" Storyboard.TargetName="Arrow">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ScrollbarPageButtonArrowHoverBackgroundBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Background" Storyboard.TargetName="Bg">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ScrollbarPageButtonHoverBackgroundBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="Bg">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ScrollbarPageButtonHoverBorderBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Fill" Storyboard.TargetName="Arrow">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ScrollbarPageButtonArrowPressedBackgroundBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Background" Storyboard.TargetName="Bg">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ScrollbarPageButtonPressedBackgroundBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="Bg">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ScrollbarPageButtonPressedBorderBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Fill" Storyboard.TargetName="Arrow">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource DisabledBorderBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Background" Storyboard.TargetName="Bg">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource DisabledBackgroundBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="Bg">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource DisabledBorderBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="Bg" Background="{StaticResource ScrollbarPageButtonBackgroundBrush}" BorderBrush="{StaticResource ScrollbarPageButtonBorderBrush}" BorderThickness="1" />
                        <Path x:Name="Arrow" Data="M0,4 L7,4 L4,0 z" Height="4" Stretch="Uniform" Width="7" Fill="{StaticResource ScrollbarPageButtonArrowBackgroundBrush}" Margin="{TemplateBinding Padding}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- *********************************  ScrollBarPageButton Style  ********************************* -->
    <Style x:Key="ScrollBarPageButtonStyle" TargetType="{x:Type RepeatButton}">
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Rectangle Fill="{TemplateBinding Background}" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver" />
                                <VisualState x:Name="Pressed" />
                                <VisualState x:Name="Disabled" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Rectangle>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- *********************************  Horizontal ScrollBarThumb Style  ********************************* -->
    <Style x:Key="HScrollBarThumbStyle" TargetType="{x:Type Thumb}">
        <Setter Property="MinWidth" Value="15" />
        <Setter Property="MinHeight" Value="15" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Grid Margin="0">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Fill" Storyboard.TargetName="Thumb">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource HScrollbarThumbHoverBackgroundBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Stroke" Storyboard.TargetName="Thumb">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource HScrollbarThumbHoverBorderBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Fill" Storyboard.TargetName="Thumb">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource HScrollbarThumbPressedBackgroundBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Stroke" Storyboard.TargetName="Thumb">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource HScrollbarThumbPressedBorderBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Fill" Storyboard.TargetName="Thumb">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource DisabledBackgroundBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Stroke" Storyboard.TargetName="Thumb">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource DisabledBorderBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Rectangle x:Name="Thumb" Fill="{StaticResource HScrollbarThumbBackgroundBrush}" Stroke="{StaticResource HScrollbarThumbBorderBrush}" Height="15" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- *********************************  Vertical ScrollbarThumb Style  ********************************* -->
    <Style x:Key="VScrollBarThumbStyle" TargetType="{x:Type Thumb}">
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="MinWidth" Value="15" />
        <Setter Property="MinHeight" Value="15" />
        <Setter Property="Stylus.IsPressAndHoldEnabled" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Grid x:Name="grid" Height="Auto" Width="Auto">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Fill" Storyboard.TargetName="Thumb">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource VScrollbarThumbHoverBackgroundBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Stroke" Storyboard.TargetName="Thumb">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource VScrollbarThumbHoverBorderBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Fill" Storyboard.TargetName="Thumb">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource VScrollbarThumbPressedBackgroundBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Stroke" Storyboard.TargetName="Thumb">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource VScrollbarThumbPressedBorderBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Fill" Storyboard.TargetName="Thumb">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource DisabledBackgroundBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Stroke" Storyboard.TargetName="Thumb">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource DisabledBorderBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Rectangle x:Name="Thumb" Fill="{StaticResource VScrollbarThumbBackgroundBrush}" Stroke="{StaticResource VScrollbarThumbBorderBrush}" Width="15" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- *********************************  ScrollBar Style  ********************************* -->
    <Style x:Key="ScrollBarStyle" TargetType="{x:Type ScrollBar}">
        <Setter Property="Stylus.IsPressAndHoldEnabled" Value="false" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="false" />
        <Setter Property="Width" Value="15" />
        <Setter Property="MinWidth" Value="15" />
        <Setter Property="Margin" Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollBar}">
                    <Grid x:Name="Bg" SnapsToDevicePixels="true">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="15" />
                            <RowDefinition Height="*" />
                            <RowDefinition Height="15" />
                        </Grid.RowDefinitions>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0:0:0.3" />
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver" />
                                <VisualState x:Name="Disabled" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Rectangle Grid.RowSpan="3" Fill="{StaticResource ScrollbarBackgroundBrush}" />
                        <RepeatButton x:Name="repeatButton" Command="{x:Static ScrollBar.LineUpCommand}" IsEnabled="True" Style="{StaticResource ScrollBarButtonStyle}" HorizontalAlignment="Center" />
                        <Track x:Name="PART_Track" IsDirectionReversed="true" IsEnabled="True" Grid.Row="1">
                            <Track.DecreaseRepeatButton>
                                <RepeatButton Command="{x:Static ScrollBar.PageUpCommand}" Style="{StaticResource ScrollBarPageButtonStyle}" />
                            </Track.DecreaseRepeatButton>
                            <Track.IncreaseRepeatButton>
                                <RepeatButton Command="{x:Static ScrollBar.PageDownCommand}" Style="{StaticResource ScrollBarPageButtonStyle}" />
                            </Track.IncreaseRepeatButton>
                            <Track.Thumb>
                                <Thumb x:Name="thumb" Style="{StaticResource VScrollBarThumbStyle}" HorizontalAlignment="Center" Width="30" />
                            </Track.Thumb>
                        </Track>
                        <RepeatButton x:Name="repeatButton1" Command="{x:Static ScrollBar.LineDownCommand}" IsEnabled="True" Grid.Row="2" Style="{StaticResource ScrollBarButtonStyle}" RenderTransformOrigin="0.5,0.5" HorizontalAlignment="Center">
                            <RepeatButton.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform />
                                    <SkewTransform />
                                    <RotateTransform Angle="180" />
                                    <TranslateTransform />
                                </TransformGroup>
                            </RepeatButton.RenderTransform>
                        </RepeatButton>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Orientation" Value="Horizontal">
                <Setter Property="Width" Value="Auto" />
                <Setter Property="MinWidth" Value="0" />
                <Setter Property="Height" Value="15" />
                <Setter Property="MinHeight" Value="15" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ScrollBar}">
                            <Grid x:Name="Bg" SnapsToDevicePixels="true">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="15" />
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="15" />
                                </Grid.ColumnDefinitions>
                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="CommonStates">
                                        <VisualStateGroup.Transitions>
                                            <VisualTransition GeneratedDuration="0:0:0.3" />
                                        </VisualStateGroup.Transitions>
                                        <VisualState x:Name="Normal" />
                                        <VisualState x:Name="MouseOver">
                                            <Storyboard>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="repeatButton">
                                                    <EasingDoubleKeyFrame KeyTime="0" Value="1" />
                                                </DoubleAnimationUsingKeyFrames>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="repeatButton1">
                                                    <EasingDoubleKeyFrame KeyTime="0" Value="1" />
                                                </DoubleAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="Disabled" />
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>
                                <Rectangle Grid.ColumnSpan="5" Fill="{StaticResource ScrollbarBackgroundBrush}" />
                                <RepeatButton x:Name="repeatButton" Command="{x:Static ScrollBar.LineLeftCommand}" IsEnabled="True" Style="{StaticResource ScrollBarButtonStyle}" Opacity="1" RenderTransformOrigin="0.5,0.5" VerticalAlignment="Center">
                                    <RepeatButton.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform />
                                            <SkewTransform />
                                            <RotateTransform Angle="-90" />
                                            <TranslateTransform />
                                        </TransformGroup>
                                    </RepeatButton.RenderTransform>
                                </RepeatButton>
                                <Track x:Name="PART_Track" Grid.Column="1" IsEnabled="True">
                                    <Track.DecreaseRepeatButton>
                                        <RepeatButton Command="{x:Static ScrollBar.PageLeftCommand}" Style="{StaticResource ScrollBarPageButtonStyle}" />
                                    </Track.DecreaseRepeatButton>
                                    <Track.IncreaseRepeatButton>
                                        <RepeatButton Command="{x:Static ScrollBar.PageRightCommand}" Style="{StaticResource ScrollBarPageButtonStyle}" />
                                    </Track.IncreaseRepeatButton>
                                    <Track.Thumb>
                                        <Thumb Style="{StaticResource HScrollBarThumbStyle}" VerticalAlignment="Center" Height="30" />
                                    </Track.Thumb>
                                </Track>
                                <RepeatButton x:Name="repeatButton1" Grid.Column="2" Command="{x:Static ScrollBar.LineRightCommand}" IsEnabled="True" Style="{StaticResource ScrollBarButtonStyle}" Opacity="1" RenderTransformOrigin="0.5,0.5" VerticalAlignment="Center">
                                    <RepeatButton.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform />
                                            <SkewTransform />
                                            <RotateTransform Angle="90" />
                                            <TranslateTransform />
                                        </TransformGroup>
                                    </RepeatButton.RenderTransform>
                                </RepeatButton>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style TargetType="{x:Type ScrollBar}" BasedOn="{StaticResource ScrollBarStyle}" />

    <!-- *********************************  ScrollViewer Style ********************************* -->
    <Style x:Key="ScrollViewerStyle" TargetType="{x:Type ScrollViewer}">
        <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Top" />
        <Setter Property="VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                    <Grid x:Name="Grid" Background="{TemplateBinding Background}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <Rectangle Fill="{StaticResource TransparentBrush}" />
                        <ScrollContentPresenter x:Name="PART_ScrollContentPresenter" CanContentScroll="{TemplateBinding CanContentScroll}" CanHorizontallyScroll="False" CanVerticallyScroll="False" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Grid.Column="0" Margin="{TemplateBinding Padding}" Grid.Row="0" />
                        <ScrollBar x:Name="PART_VerticalScrollBar" AutomationProperties.AutomationId="VerticalScrollBar" Cursor="Arrow" Grid.Column="1" Maximum="{TemplateBinding ScrollableHeight}" Minimum="0" Grid.Row="0" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportHeight}" Style="{StaticResource ScrollBarStyle}" />
                        <ScrollBar x:Name="PART_HorizontalScrollBar" AutomationProperties.AutomationId="HorizontalScrollBar" Cursor="Arrow" Grid.Column="0" Maximum="{TemplateBinding ScrollableWidth}" Minimum="0" Orientation="Horizontal" Grid.Row="1" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportWidth}" Style="{StaticResource ScrollBarStyle}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- JJD 06/25/14 TFS169389 
    Should never create a Style without a Key for a framework standard element
    <Style TargetType="{x:Type ScrollViewer}" BasedOn="{StaticResource ScrollViewerStyle}"/>-->

    <!-- *********************************  OverflowMenuButton Style ********************************* -->
    <Style x:Key="{x:Static igOutlookBar:XamOutlookBar.OverflowMenuButtonStyleKey}" TargetType="MenuItem">
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="MinWidth" Value="30" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type MenuItem}">
                    <Border x:Name="Border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}">
                        <Grid>
                            <Path x:Name="glyph" Fill="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.OverflowGlyphForegroundFillKey}}" 
                                  Data="M16,1.4210855E-14 C17.104569,-1.1920928E-07 18,0.89543039 18,1.9999999 18,3.1045693 17.104569,3.9999999 16,3.9999999 14.895431,3.9999999 14,3.1045693 14,1.9999999 14,0.89543039 14.895431,-1.1920928E-07 16,1.4210855E-14 z M9,1.4210855E-14 C10.104569,-1.1920928E-07 11,0.89543039 11,1.9999999 11,3.1045693 10.104569,3.9999999 9,3.9999999 7.8954306,3.9999999 7,3.1045693 7,1.9999999 7,0.89543039 7.8954306,-1.1920928E-07 9,1.4210855E-14 z M2,1.4210855E-14 C3.1045694,-1.1920928E-07 4,0.89543039 4,1.9999999 4,3.1045693 3.1045694,3.9999999 2,3.9999999 0.89543056,3.9999999 0,3.1045693 0,1.9999999 0,0.89543039 0.89543056,-1.1920928E-07 2,1.4210855E-14 z" 
                                  Height="4" Stretch="Fill" Width="18" Margin="6,3" />
                            <!--<Path x:Name="glyph" Fill="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.OverflowGlyphForegroundFillKey}}" Data="F1 M541.53699,173.589 L531.10699,173.589 L536.32202,179.18501 L541.53699,173.589 z" Stretch="Uniform" Height="6" Width="10" Margin="6,3,6,3" />-->
                            <Popup x:Name="Popup" Placement="Right" IsOpen="{TemplateBinding IsSubmenuOpen}" AllowsTransparency="True" Focusable="False" PopupAnimation="Fade">
                                <Border x:Name="SubmenuBorder" SnapsToDevicePixels="True" Background="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.MenuCenterFillKey}}" BorderBrush="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.MenuOuterBorderFillKey}}" BorderThickness="1">
                                    <ScrollViewer x:Name="Popup_ScrollViewer" HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Auto" Style="{StaticResource ScrollViewerStyle}">
                                        <ItemsPresenter Grid.IsSharedSizeScope="true" KeyboardNavigation.TabNavigation="Cycle" KeyboardNavigation.DirectionalNavigation="Cycle" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                    </ScrollViewer>
                                </Border>
                            </Popup>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSuspendingPopupAnimation" Value="true">
                            <Setter TargetName="Popup" Property="PopupAnimation" Value="None" />
                            <Setter TargetName="glyph" Property="Fill" Value="{StaticResource ArrowPressedFill}" />
                        </Trigger>
                        <Trigger Property="IsHighlighted" Value="true">
                            <Setter TargetName="glyph" Property="Fill" Value="{StaticResource OverflowmenuDotsHoverFill}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="glyph" Property="Fill" Value="{StaticResource ArrowPressedFill}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="glyph" Property="Fill" Value="{StaticResource DisabledBackgroundBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- *********************************  OverflowMenuItem Style ********************************* -->
    <Style x:Key="{x:Static igOutlookBar:XamOutlookBar.OverflowMenuItemStyleKey}" TargetType="MenuItem">
        <Setter Property="HorizontalContentAlignment" Value="{Binding Path=HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="VerticalContentAlignment" Value="{Binding Path=VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="Background" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.MenuCenterFillKey}}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.MenuOuterBorderFillKey}}"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.MenuItemTextNormalFillKey}}"/>
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="FontSize" Value="12" />
        <Setter Property="FontFamily" Value="Segoe UI" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type MenuItem}">
                    <Border x:Name="Border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Margin="{TemplateBinding Margin}">
                        <Grid Visibility="Visible">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition x:Name="MenuItemIconColumnGroup" MinWidth="20" Width="Auto" SharedSizeGroup="MenuItemIconColumnGroup" />
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" SharedSizeGroup="MenuItemIGTColumnGroup" />
                                <ColumnDefinition Width="20" />
                            </Grid.ColumnDefinitions>
                            <Border Grid.Column="0" BorderBrush="{StaticResource MenuItemVerticalLineBrush}" BorderThickness="0" />
                            <Border x:Name="IconAreaBackground" Background="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.MenuIconGroupCenterFillKey}}" 
                                    BorderBrush="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.MenuIconGroupOuterBorderFillKey}}" BorderThickness="0,0,1,0" Visibility="Collapsed" />
                            <Grid HorizontalAlignment="Stretch" Margin="1,1,1,1" Width="Auto" Grid.Column="0" Grid.ColumnSpan="4" x:Name="Highlight" Visibility="Collapsed">
                                <Rectangle x:Name="HighlightFill" Fill="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.MenuItemHottrackCenterFillKey}}" 
                                           Stroke="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.MenuItemHottrackOuterBorderFillKey}}" />
                            </Grid>
                            <Border x:Name="checkedState" Background="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.MenuCheckmarkBoxNormalCenterFillKey}}" 
                                    BorderBrush="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.MenuCheckmarkBoxNormalOuterBorderFillKey}}" BorderThickness="1" Visibility="Collapsed" Margin="2,3" />

                            <ContentPresenter x:Name="Icon" VerticalAlignment="Center" HorizontalAlignment="Center" ContentSource="Icon" MaxHeight="16" MaxWidth="16" />

                            <Grid Visibility="Collapsed" Margin="1,0,0,0" x:Name="GlyphPanel" VerticalAlignment="Center" HorizontalAlignment="Center">
                                <Path x:Name="GlyphPanelpath" VerticalAlignment="Center" Fill="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.DarkBrushKey}}" 
                                      Data="M0,2 L0,4.8 L2.5,7.4 L7.1,2.8 L7.1,0 L2.5,4.6 z" FlowDirection="LeftToRight" />
                            </Grid>
                            <!--Margin affect menu items height-->
                            <ContentControl x:Name="ContentControl" Grid.Column="1" VerticalAlignment="Center" Margin="5,0,0,0" Focusable="false" 
                                            Foreground="{TemplateBinding Foreground}" FontFamily="{TemplateBinding FontFamily}" FontSize="12">
                                <ContentPresenter x:Name="HeaderHost" RecognizesAccessKey="True" ContentSource="Header" />
                            </ContentControl>
                            <Grid Grid.Column="3" Margin="0,0,1,0" x:Name="ArrowPanel" VerticalAlignment="Center" HorizontalAlignment="Center">
                                <Path x:Name="ArrowPanelPath" VerticalAlignment="Center" Fill="{StaticResource ArrowNormalFill}" Data="M0,0 L0,8 L4,4 z" Width="5" Height="8" Stretch="Fill" />
                            </Grid>
                            <Popup IsOpen="{Binding Path=IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}" Placement="Right" x:Name="SubMenuPopup" 
                                   Focusable="false" AllowsTransparency="true" 
                                   PopupAnimation="{x:Static SystemParameters.MenuPopupAnimation}" VerticalOffset="-3">
                                <Grid x:Name="SubMenu">
                                    <Border x:Name="SubMenuBorder" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1">
                                          <!-- JJD 06/25/14 TFS169389 
                                            Explicitly set the Style -->
                                        <ScrollViewer x:Name="Popup_ScrollViewer" HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Auto"
                                                      Style="{StaticResource ScrollViewerStyle}">
                                            <ItemsPresenter Grid.IsSharedSizeScope="true" KeyboardNavigation.TabNavigation="Cycle" 
                                                            KeyboardNavigation.DirectionalNavigation="Cycle" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                        </ScrollViewer>
                                    </Border>
                                </Grid>
                            </Popup>
                        </Grid>
                    </Border>
                    <!-- These triggers re-configure the four arrangements of MenuItem to show different levels of menu via Role -->
                    <ControlTemplate.Triggers>
                        <!-- Role = TopLevelHeader : this is the root menu item in a menu; the Popup expands down -->
                        <Trigger Property="Role" Value="TopLevelHeader">
                            <Setter Property="Padding" Value="6,3,6,3" />
                            <Setter Property="Grid.IsSharedSizeScope" Value="true" />
                            <Setter Property="Placement" Value="Bottom" TargetName="SubMenuPopup" />
                            <Setter Property="Visibility" Value="Collapsed" TargetName="ArrowPanel" />
                            <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
                            <Setter TargetName="HighlightFill" Property="Fill" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.MenuItemHottrackCenterFillKey}}" />
                            <Setter TargetName="HighlightFill" Property="Stroke" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.MenuItemHottrackOuterBorderFillKey}}" />
                        </Trigger>
                        <!-- Role = TopLevelItem :  this is a child menu item from the top level without any child items-->
                        <Trigger Property="Role" Value="TopLevelItem">
                            <Setter Property="Padding" Value="6,3,6,3" />
                            <Setter Property="Visibility" Value="Collapsed" TargetName="ArrowPanel" />
                            <Setter TargetName="IconAreaBackground" Property="Visibility" Value="Visible" />
                            <Setter TargetName="MenuItemIconColumnGroup" Property="MinWidth" Value="24" />
                            <Setter TargetName="HeaderHost" Property="Margin" Value="8,5,0,6" />
                        </Trigger>
                        <!-- Role = SubMenuHeader : this is a child menu item which does not have children -->
                        <Trigger Property="Role" Value="SubmenuHeader">
                            <Setter Property="DockPanel.Dock" Value="Top" />
                            <Setter Property="Padding" Value="0,2,0,2" />
                            <Setter Property="Grid.IsSharedSizeScope" Value="true" />
                            <Setter TargetName="IconAreaBackground" Property="Visibility" Value="Visible" />
                            <Setter TargetName="MenuItemIconColumnGroup" Property="MinWidth" Value="24" />
                            <Setter TargetName="HeaderHost" Property="Margin" Value="8,5,0,6" />
                        </Trigger>
                        <!-- Role = SubMenuItem : this is a child menu item which has children-->
                        <Trigger Property="Role" Value="SubmenuItem">
                            <Setter Property="DockPanel.Dock" Value="Top" />
                            <Setter Property="Padding" Value="0,2,0,2" />
                            <Setter Property="Visibility" Value="Collapsed" TargetName="ArrowPanel" />
                            <Setter TargetName="IconAreaBackground" Property="Visibility" Value="Visible" />
                            <Setter TargetName="MenuItemIconColumnGroup" Property="MinWidth" Value="24" />
                            <Setter TargetName="HeaderHost" Property="Margin" Value="8,5,0,6" />
                        </Trigger>
                        <Trigger Property="IsSuspendingPopupAnimation" Value="true">
                            <Setter Property="PopupAnimation" Value="None" TargetName="SubMenuPopup" />
                        </Trigger>
                        <!-- If no Icon is present then we collapse the Icon Content -->
                        <Trigger Property="Icon" Value="{x:Null}">
                            <Setter Property="Visibility" Value="Collapsed" TargetName="Icon" />
                        </Trigger>
                        <!-- The GlyphPanel contains the CheckMark -->
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Visibility" Value="Visible" TargetName="checkedState" />
                        </Trigger>
                        <Trigger Property="AllowsTransparency" SourceName="SubMenuPopup" Value="true">
                            <Setter Property="Margin" Value="0,0,3,3" TargetName="SubMenu" />
                            <Setter Property="SnapsToDevicePixels" Value="true" TargetName="SubMenu" />
                        </Trigger>
                        <Trigger Property="IsHighlighted" Value="true">
                            <Setter Property="Visibility" TargetName="Highlight" Value="Visible" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsChecked" Value="True" />
                                <Condition Property="IsHighlighted" Value="True" />
                            </MultiTrigger.Conditions>
                            <!--<Setter TargetName="checkedState" Property="Background" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.MenuCheckmarkBoxHottrackCenterFillKey}}" />
                            <Setter TargetName="checkedState" Property="BorderBrush" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.MenuCheckmarkBoxHottrackOuterBorderFillKey}}" />-->
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Role" Value="TopLevelHeader" />
                                <Condition Property="IsHighlighted" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.DarkBrushKey}}" />
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="ContentControl" Property="Opacity" Value=".5" />
                            <Setter TargetName="Icon" Property="Opacity" Value=".5" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- *********************************  MinimizeToggleButton Style ********************************* -->
    <Style x:Key="MinimizeToggleButtonStyleKey" TargetType="{x:Type ToggleButton}">
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Foreground" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.DarkBrushKey}}" />
        <Setter Property="ToolTip" Value="{x:Static igOutlookBar:ResourcesOutlookBar.MinimizeButtonMinimizeTooltip}" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="MinWidth" Value="22" />
        <Setter Property="MinHeight" Value="22" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Opacity" Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border x:Name="glyphArea" Opacity="{TemplateBinding Opacity}" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}" RenderTransformOrigin="0.5,0.5">
                        <Grid Width="18" Height="18">
                            <Path Width="6" Height="10" Fill="{TemplateBinding Foreground}" Stretch="Fill" Data="M566.8764,1436.906 L572.19147,1442.2482 L573.91058,1440.78 L569.90887,1436.9374 L573.91083,1433.001 L572.19153,1431.5951 z" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="glyphArea" Property="LayoutTransform">
                                <Setter.Value>
                                    <RotateTransform Angle="180" />
                                </Setter.Value>
                            </Setter>
                            <Setter Property="ToolTip" Value="{x:Static igOutlookBar:ResourcesOutlookBar.MinimizeButtonExpandTooltip}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Opacity" Value="1" />
                <Setter Property="Background" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.ContentAreaDropdownHottrackCenterFillKey}}"/>
                <Setter Property="Foreground" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.GlyphThemeBackgroundFillKey}}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Opacity" Value="1" />
                <Setter Property="Background" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.ContentAreaDropdownPressedCenterFillKey}}"/>
                <Setter Property="Foreground" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.GlyphThemeBackgroundFillKey}}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- *********************************  OutlookBarGroup Style ********************************* -->
    <Style TargetType="{x:Type igOutlookBar:OutlookBarGroup}" x:Key="OutlookBarGroupStyle">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="ToolTipService.IsEnabled" Value="False" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="MinWidth" Value="24" />
        <Setter Property="MinHeight" Value="22" />
        <Setter Property="Background" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.NavigationGroupHeaderNormalCenterFillKey}}" />
        <Setter Property="BorderBrush" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.OutlookBarGroupNormalBorderFillKey}}" />
        <Setter Property="Foreground" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.NavigationGroupHeaderNormalTextFillKey}}" />
        <Setter Property="SmallImage" Value="{StaticResource DefaultSmallImage}"/>
        <Setter Property="LargeImage" Value="{StaticResource DefaultLargeImage}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type igOutlookBar:OutlookBarGroup}">
                    <Grid>
                        <Border x:Name="Bd" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Margin="2 2 1 0">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition x:Name="ImageColumn" Width="Auto"/>
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <!--<ContentControl x:Name="ImageControl" Foreground="{TemplateBinding Foreground}" VerticalAlignment="Center" HorizontalAlignment="Center"  Grid.Column="0" MaxHeight="24" MaxWidth="24" MinHeight="16" MinWidth="16" >-->

                                <Image x:Name="PART_Image" VerticalAlignment="Center" HorizontalAlignment="Center"  Grid.Column="0" MaxHeight="24" MaxWidth="24" MinHeight="16" MinWidth="16"  Source="{TemplateBinding LargeImage}" Stretch="Uniform" />

                                <!--</ContentControl>-->
                                <ContentPresenter x:Name="PART_Header" Grid.Column="1" Margin="4,0,0,1" VerticalAlignment="Center" Content="{TemplateBinding Header}" ContentTemplate="{TemplateBinding HeaderTemplate}" ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}" />
                            </Grid>
                        </Border>
                        <Rectangle x:Name="focusRec" Stroke="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.GroupInnerBorderFillKey}}" StrokeThickness="0" Visibility="Collapsed" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=LargeImage, RelativeSource={RelativeSource Self}}" Value="{x:Null}" />
                                <Condition Binding="{Binding Path=Location, RelativeSource={RelativeSource Self}}" Value="NavigationGroupArea" />
                                <Condition Binding="{Binding Path=OutlookBar.ReserveSpaceForLargeImage, RelativeSource={RelativeSource Self}}" Value="True" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="PART_Header" Property="Margin" Value="12,0,0,1" />
                            <Setter TargetName="ImageColumn" Property="Width" Value="Auto" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=LargeImage, RelativeSource={RelativeSource Self}}" Value="{x:Null}" />
                                <Condition Binding="{Binding Path=Location, RelativeSource={RelativeSource Self}}" Value="NavigationGroupArea" />
                                <Condition Binding="{Binding Path=OutlookBar.ReserveSpaceForLargeImage, RelativeSource={RelativeSource Self}}" Value="False" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="ImageColumn" Property="Width" Value="0" />
                        </MultiDataTrigger>
                        <Trigger Property="Location" Value="NavigationGroupArea">
                            <Setter TargetName="PART_Header" Property="Visibility" Value="Visible" />
                            <Setter TargetName="PART_Image" Property="Source" Value="{Binding Path=LargeImage, RelativeSource={x:Static RelativeSource.TemplatedParent}}" />
                        </Trigger>
                        <DataTrigger Binding="{Binding Path=OutlookBar.ShowGroupHeaderAsToolTip, RelativeSource={RelativeSource Self}}" Value="True">
                            <Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Self}, Path=Header}" />
                        </DataTrigger>
                        <Trigger Property="Location" Value="OverflowContextMenu">
                            <Setter TargetName="PART_Image" Property="Source" Value="{Binding Path=SmallImageResolved, RelativeSource={x:Static RelativeSource.TemplatedParent}}" />
                            <Setter TargetName="PART_Image" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Background" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.NavigationGroupHeaderActiveCenterFillKey}}" />
                            <!--<Setter Property="BorderBrush" Value="{StaticResource NavigationGroupHeaderActiveCenterBorderKey}" />-->
                            <Setter TargetName="PART_Header" Property="TextElement.Foreground" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.NavigationGroupHeaderActiveTextFillKey}}" />
                            <Setter TargetName="PART_Header" Property="TextElement.FontWeight" Value="Bold" />
                            <!--<Setter TargetName="ImageControl" Property="Foreground" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.NavigationGroupHeaderActiveTextFillKey}}" />-->
                        </Trigger>
                        <DataTrigger Binding="{Binding Path=OutlookBar.IsMinimized, RelativeSource={RelativeSource Self}}" Value="True">
                            <Setter TargetName="PART_Header" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="PART_Image" Property="Source" Value="{Binding Path=LargeImage, RelativeSource={x:Static RelativeSource.TemplatedParent}}" />
                            <Setter Property="ToolTipService.IsEnabled" Value="{Binding Path=OutlookBar.ShowToolTips, RelativeSource={RelativeSource Self}}" />
                        </DataTrigger>
                        <Trigger Property="Location" Value="OverflowArea">
                            <Setter TargetName="PART_Image" Property="Source" Value="{Binding Path=SmallImageResolved, RelativeSource={x:Static RelativeSource.TemplatedParent}}" />
                            <Setter TargetName="PART_Header" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="PART_Image" Property="Margin" Value="4,2" />
                            <Setter TargetName="PART_Image" Property="MaxHeight" Value="16" />
                            <Setter TargetName="PART_Image" Property="MaxWidth" Value="16" />
                            <Setter TargetName="Bd" Property="Margin" Value="1 1 0 1" />
                            <Setter Property="ToolTipService.IsEnabled" Value="{Binding Path=OutlookBar.ShowToolTips, RelativeSource={RelativeSource Self}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseOverGroup}" Value="True" />
                    <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsSelected}" Value="False" />
                </MultiDataTrigger.Conditions>
                <Setter Property="Background" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.NavigationGroupHeaderHottrackCenterFillKey}}" />
                <!--<Setter Property="BorderBrush" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.MenuCheckmarkBoxHottrackOuterBorderFillKey}}" />-->
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseOverGroup}" Value="True" />
                    <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsSelected}" Value="True" />
                </MultiDataTrigger.Conditions>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseOverGroup}" Value="True" />
                    <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseCaptured}" Value="True" />
                    <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsSelected}" Value="False" />
                </MultiDataTrigger.Conditions>
                <Setter Property="Background" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.NavigationGroupHeaderPressedCenterFillKey}}" />
                <!--<Setter Property="BorderBrush" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.MenuItemHottrackOuterBorderFillKey}}" />-->
                <Setter Property="Foreground" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.DarkBrushKey}}" />
            </MultiDataTrigger>
        </Style.Triggers>
    </Style>
    <Style TargetType="{x:Type igOutlookBar:OutlookBarGroup}" BasedOn="{StaticResource OutlookBarGroupStyle}" />

    <!-- *********************************  SelectedGroupHeader Style ********************************* -->
    <Style TargetType="{x:Type igOutlookBar:SelectedGroupHeader}" x:Key="SelectedGroupHeaderStyle">
        <Style.Resources>
            <RotateTransform x:Key="MinimizeOnRightTransform" Angle="180" />
        </Style.Resources>
        <Setter Property="Background" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.CurrentGroupHeaderCenterFillKey}}" />
        <Setter Property="BorderBrush" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.GroupInnerBorderFillKey}}" />
        <Setter Property="Foreground" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.DarkBrushKey}}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Padding" Value="7 4 8 3" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type igOutlookBar:SelectedGroupHeader}">
                    <Grid>
                        <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <ContentPresenter x:Name="ContentPresenterHeader" Grid.Column="0" Margin="{TemplateBinding Padding}" Content="{Binding Path=(igOutlookBar:XamOutlookBar.OutlookBar).SelectedGroup.Header, RelativeSource={RelativeSource Self}}" />
                                <ToggleButton x:Name="MinimizeButton" Grid.Column="1" IsChecked="{Binding Path=(igOutlookBar:XamOutlookBar.OutlookBar).IsMinimized, RelativeSource={RelativeSource Self}}" Style="{StaticResource MinimizeToggleButtonStyleKey}" />
                            </Grid>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding Path=OutlookBar.AllowMinimized, RelativeSource={RelativeSource TemplatedParent}}" Value="False">
                            <Setter TargetName="MinimizeButton" Property="Visibility" Value="Hidden" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Path=OutlookBar.IsMinimized, RelativeSource={RelativeSource TemplatedParent}}" Value="True">
                            <Setter TargetName="ContentPresenterHeader" Property="Visibility" Value="Collapsed" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Path=OutlookBar.VerticalSplitterLocation, RelativeSource={RelativeSource TemplatedParent}}" Value="Left">
                            <Setter TargetName="MinimizeButton" Property="LayoutTransform" Value="{StaticResource MinimizeOnRightTransform}" />
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type igOutlookBar:SelectedGroupHeader}" BasedOn="{StaticResource SelectedGroupHeaderStyle}" />

    <!-- *********************************  HorizontalSplitter Style ********************************* -->
    <Style x:Key="HorizontalSplitterStyleKey" TargetType="{x:Type Thumb}">
        <Setter Property="BorderBrush" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.XamOutlookBarOuterBorderFillKey}}" />
        <Setter Property="Background" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.SplitterCenterFillKey}}" />
        <Setter Property="Foreground" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.GlyphThemeForegroundFillKey}}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Padding" Value="0 2" />
        <Setter Property="MinHeight" Value="20" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Grid>
                        <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" />
                        <Grid HorizontalAlignment="Center" Margin="{TemplateBinding Padding}" VerticalAlignment="Center">
                            <Path x:Name="foregroundGlyph" Width="18" Data="M16,0 L18,0 L18,1.9999999 L16,1.9999999 z M12,0 L14,0 L14,1.9999999 L12,1.9999999 z M7.9999995,0 L10,0 L10,1.9999999 L7.9999995,1.9999999 z M3.9999995,0 L5.9999995,0 L5.9999995,1.9999999 L3.9999995,1.9999999 z M0,0 L1.9999999,0 L1.9999999,1.9999999 L0,1.9999999 z" Fill="{TemplateBinding Foreground}" Opacity="1" Stretch="Fill" />
                        </Grid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource HorizontalSplitterHoverBackgroundBrush}" />
                <Setter Property="BorderBrush" Value="{StaticResource HorizontalSplitterHoverBorderBrush}" />
            </Trigger>
            <Trigger Property="IsDragging" Value="True">
                <Setter Property="Background" Value="{StaticResource HorizontalSplitterSelectedBackgroundBrush}" />
                <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- *********************************  OverflowMenuSeparator Style ********************************* -->
    <Style x:Key="OverflowMenuSeparatorStyleKey" TargetType="{x:Type Separator}">
        <Setter Property="Height" Value="1" />
        <Setter Property="Background" Value="{StaticResource MenuItemVerticalLineBrush}" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Separator">
                    <Grid Background="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.MenuCenterFillKey}}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition MinWidth="24" Width="Auto" x:Name="iconColumn" SharedSizeGroup="MenuItemIconColumnGroup" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Border x:Name="IconAreaBackground" Background="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.MenuIconGroupCenterFillKey}}" BorderBrush="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.MenuIconGroupOuterBorderFillKey}}" BorderThickness="0" />
                        <Border Grid.Column="1" Height="{TemplateBinding Height}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- *********************************  GroupOverflowAreaS Style - Add or Remove Buttons menu items ********************************* -->
    <Style x:Key="GroupOverflowAreaStyle" TargetType="{x:Type igOutlookBar:GroupOverflowArea}">
        <Setter Property="Background" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.NavigationGroupHeaderPressedCenterFillKey}}" />
        <Setter Property="Foreground" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.HeaderDarkTextFillKey}}" />
        <Setter Property="FontFamily" Value="Segoe UI" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type igOutlookBar:GroupOverflowArea}">
                    <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <!-- Ovwerflow Toolbar -->
                            <igOutlookBar:GroupsPresenter x:Name="PART_OverflowGroups" Grid.Column="0" Orientation="Horizontal" ItemsSource="{Binding RelativeSource={RelativeSource Self}, Path=(igOutlookBar:XamOutlookBar.OutlookBar).OverflowAreaGroups}" />
                            <!-- Overflow Menu     -->
                            <Menu Grid.Column="1" Background="Transparent" x:Name="MainOverflowMenu" VerticalAlignment="Stretch" VerticalContentAlignment="Stretch">
                                <Menu.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <Grid />
                                    </ItemsPanelTemplate>
                                </Menu.ItemsPanel>
                                <MenuItem x:Name="PART_OverflowMenu"  ToolTip="{x:Static igOutlookBar:ResourcesOutlookBar.OverflowMenuButtonTooltip}" Style="{DynamicResource {x:Static igOutlookBar:XamOutlookBar.OverflowMenuButtonStyleKey}}" VerticalContentAlignment="Stretch">

                                    <MenuItem Header="{x:Static igOutlookBar:ResourcesOutlookBar.ShowMoreButtonsMenuItemHeader}" Style="{DynamicResource {x:Static igOutlookBar:XamOutlookBar.OverflowMenuItemStyleKey}}"  Command="{x:Static igOutlookBar:OutlookBarCommands.ShowMoreButtonsCommand}" CommandTarget="{Binding Path=(igOutlookBar:XamOutlookBar.OutlookBar), RelativeSource={RelativeSource Self}}">
                                        <MenuItem.Icon>
                                            <Grid Height="10" Width="10" Background="Transparent" HorizontalAlignment="Left">
                                                <Path Data="F1 M541.53699,173.589 L531.10699,173.589 L536.32202,168.75038 L541.53699,173.589 z"  Height="4" Width="8" Fill="{StaticResource ArrowNormalFill}" Stretch="Fill" HorizontalAlignment="Center" />
                                            </Grid>
                                        </MenuItem.Icon>
                                    </MenuItem>
                                    <MenuItem Header="{x:Static igOutlookBar:ResourcesOutlookBar.ShowFewerButtonsMenuItemHeader}" Style="{DynamicResource {x:Static igOutlookBar:XamOutlookBar.OverflowMenuItemStyleKey}}" Command="{x:Static igOutlookBar:OutlookBarCommands.ShowFewerButtonsCommand}" CommandTarget="{Binding Path=(igOutlookBar:XamOutlookBar.OutlookBar), RelativeSource={RelativeSource Self}}">
                                        <MenuItem.Icon>
                                            <Grid Height="10" Width="10" Background="Transparent" HorizontalAlignment="Left">
                                                <Path x:Name="Arrow" Data="F1 M541.53699,173.589 L531.10699,173.589 L536.32202,179.18501 L541.53699,173.589 z" Height="4" Width="8" Fill="{StaticResource ArrowNormalFill}" Stretch="Fill" HorizontalAlignment="Center" />
                                            </Grid>
                                        </MenuItem.Icon>
                                    </MenuItem>
                                    <MenuItem Header="{x:Static igOutlookBar:ResourcesOutlookBar.NavigationAreaOptionsMenuItemHeader}" Style="{DynamicResource {x:Static igOutlookBar:XamOutlookBar.OverflowMenuItemStyleKey}}"  Command="{x:Static igOutlookBar:OutlookBarCommands.ShowOptionsCommand}" CommandTarget="{Binding Path=(igOutlookBar:XamOutlookBar.OutlookBar), RelativeSource={RelativeSource Self}}" />

                                    <MenuItem x:Name="PART_AddRemoveMenu" Header="{x:Static igOutlookBar:ResourcesOutlookBar.AddOrRemoveButtonsMenuItemHeader}" Style="{DynamicResource {x:Static igOutlookBar:XamOutlookBar.OverflowMenuItemStyleKey}}" />

                                    <Separator x:Name="OverflowMenuSeparator" Style="{StaticResource OverflowMenuSeparatorStyleKey}" />
                                </MenuItem>
                            </Menu>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding Path=(igOutlookBar:XamOutlookBar.OutlookBar).ContextMenuGroups.Count, RelativeSource={RelativeSource Self}}" Value="0">
                            <Setter TargetName="OverflowMenuSeparator" Property="Visibility" Value="Collapsed" />
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type igOutlookBar:GroupOverflowArea}" BasedOn="{StaticResource GroupOverflowAreaStyle}" />

    <!-- *********************************  TextBlock Style  ********************************* -->
    <Style x:Key="TextBlockStyle" TargetType="TextBlock">
        <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
        <Setter Property="FontSize" Value="12" />
        <Setter Property="FontFamily" Value="Segoe UI" />
    </Style>

    <!-- *********************************  OutlookBarGroupProxy Style ********************************* -->
    <DataTemplate DataType="{x:Type igOutlookBar:Internal.OutlookBarGroupProxy}">
        <Border Name="Border">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition></ColumnDefinition>
                    <ColumnDefinition></ColumnDefinition>
                </Grid.ColumnDefinitions>
                <CheckBox x:Name="Checked" Grid.Column="0" IsChecked="{Binding Path=IsSelected}" />
                <ContentPresenter x:Name="Header" Margin="2,0,2,0" Grid.Column="1" VerticalAlignment="Center" Content="{Binding Path=GroupHeader}" />
            </Grid>
        </Border>
    </DataTemplate>

    <!-- *********************************  NavigationPaneOptionsControl Style ********************************* -->
    <Style x:Key="NavigationPaneOptionsControlStyle" TargetType="{x:Type igOutlookBar:NavigationPaneOptionsControl}">
        <Setter Property="Background" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.XamOutlookBarBackgroundFillKey}}" />
        <Setter Property="MinWidth" Value="400" />
        <Setter Property="Height" Value="230" />
        <Setter Property="Padding" Value="15" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type igOutlookBar:NavigationPaneOptionsControl}">
                    <ControlTemplate.Resources>
                        
                        <Style x:Key="ButtonStyle" TargetType="{x:Type Button}">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.HeaderDarkTextFillKey}}" />
                            <Setter Property="Background" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.XamOutlookBarBackgroundFillKey}}" />
                            <Setter Property="BorderBrush" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.XamOutlookBarOuterBorderFillKey}}" />
                            <Setter Property="FontSize" Value="12" />
                            <Setter Property="FontFamily" Value="Segoe UI" />
                            <Setter Property="Padding" Value="7,0,7,2" />
                            <Setter Property="MinHeight" Value="24" />
                            <Setter Property="MinWidth" Value="30" />
                            <Setter Property="BorderThickness" Value="1" />
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type Button}">
                                        <Grid x:Name="Root">
                                            <Border x:Name="Bd" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                                                <ContentPresenter Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" Margin="{TemplateBinding Padding}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                                            </Border>
                                        </Grid>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                            <Style.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.ContentAreaDropdownHottrackCenterFillKey}}" />
                                    <Setter Property="BorderBrush" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.GroupInnerBorderFillKey}}" />
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter Property="Background" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.ContentAreaDropdownPressedCenterFillKey}}" />
                                    <Setter Property="BorderBrush" Value="{StaticResource ButtonPressedBorderBrush}" />
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Background" Value="{StaticResource DisabledBackgroundBrush }" />
                                    <Setter Property="BorderBrush" Value="{StaticResource DisabledBorderBrush}" />
                                    <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>

                        <Style TargetType="{x:Type Button}" BasedOn="{StaticResource ButtonStyle}" />

                        <Style TargetType="{x:Type ListBoxItem}">
                            <Setter Property="Background" Value="Transparent" />
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.HeaderDarkTextFillKey}}" />
                            <Setter Property="FontSize" Value="12" />
                            <Setter Property="FontFamily" Value="Segoe UI" />
                            <Setter Property="MinHeight" Value="22" />
                            <Setter Property="Padding" Value="6,2" />
                            <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
                            <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                        <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                                            <ContentControl x:Name="contentControl" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                                <ContentPresenter />
                                            </ContentControl>
                                        </Border>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsMouseOver" Value="true">
                                                <Setter Property="BorderBrush" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.GroupInnerBorderFillKey}}" />
                                                <Setter Property="BorderThickness" Value="1" />
                                                <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.ContentAreaDropdownHottrackCenterFillKey}}" />
                                                <Setter Property="Foreground" TargetName="contentControl" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.DarkBrushKey}}" />
                                            </Trigger>
                                            <Trigger Property="IsSelected" Value="true">
                                                <Setter Property="BorderBrush" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.ContentAreaDropdownPressedCenterFillKey}}" />
                                                <Setter Property="BorderThickness" Value="1" />
                                                <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.ContentAreaDropdownPressedCenterFillKey}}" />
                                                <Setter Property="Foreground" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.DarkBrushKey}}" />
                                            </Trigger>
                                            <MultiTrigger>
                                                <MultiTrigger.Conditions>
                                                    <Condition Property="IsSelected" Value="true" />
                                                    <Condition Property="Selector.IsSelectionActive" Value="false" />
                                                </MultiTrigger.Conditions>
                                                <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
                                            </MultiTrigger>
                                            <Trigger Property="IsEnabled" Value="false">
                                                <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}" />
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>

                        <Style TargetType="{x:Type ListBox}">
                            <Setter Property="Background" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.XamOutlookBarBackgroundFillKey}}" />
                            <Setter Property="BorderBrush" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.XamOutlookBarOuterBorderFillKey}}" />
                            <Setter Property="BorderThickness" Value="1" />
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.HeaderDarkTextFillKey}}" />
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type ListBox}">
                                        <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="1" SnapsToDevicePixels="true">
                                            <ScrollViewer Focusable="false" Padding="{TemplateBinding Padding}" Style="{StaticResource ScrollViewerStyle}">
                                                <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                            </ScrollViewer>
                                        </Border>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsEnabled" Value="false">
                                                <Setter Property="Background" TargetName="Bd" Value="{StaticResource DisabledBackgroundBrush}" />
                                            </Trigger>
                                            <Trigger Property="IsGrouping" Value="true">
                                                <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>

                        <Style x:Key="EmptyCheckBoxFocusVisual">
                            <Setter Property="Control.Template">
                                <Setter.Value>
                                    <ControlTemplate>
                                        <Rectangle Margin="1" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.ContentAreaDropdownPressedCenterFillKey}}" StrokeThickness="1" />

                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>

                        <Style x:Key="CheckRadioFocusVisual">
                            <Setter Property="Control.Template">
                                <Setter.Value>
                                    <ControlTemplate>
                                        <Rectangle Margin="14,0,0,0" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.ContentAreaDropdownPressedCenterFillKey}}" StrokeThickness="1" />

                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>

                        <Style TargetType="{x:Type CheckBox}">
                            <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}"/>
                            <Setter Property="Background" Value="{StaticResource CheckBoxBackgroundBrush}"/>
                            <Setter Property="BorderBrush" Value="{StaticResource CheckBoxBorderBrush}"/>
                            <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
                            <Setter Property="FontSize" Value="12" />
                            <Setter Property="FontFamily" Value="Segoe UI" />
                            <Setter Property="HorizontalContentAlignment" Value="Left" />
                            <Setter Property="VerticalContentAlignment" Value="Center" />
                            <Setter Property="Padding" Value="6,0,0,0" />
                            <Setter Property="MinHeight" Value="13" />
                            <Setter Property="MinWidth" Value="13" />
                            <Setter Property="BorderThickness" Value="1" />
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type CheckBox}">
                                        <BulletDecorator Background="Transparent" SnapsToDevicePixels="true" VerticalAlignment="Center">
                                            <BulletDecorator.Bullet>
                                                <Grid>
                                                    <Rectangle x:Name="normal" Opacity="1" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="1" Fill="{TemplateBinding Background}" Width="13" Height="13"/>
                                                    <Path x:Name="checkBox" Fill="{StaticResource ArrowNormalFill}" Height="8" Width="8" Stretch="Fill" Visibility="Collapsed" 
                                      Data="M 1145.607177734375,430 C1145.607177734375,430 1141.449951171875,435.0772705078125 1141.449951171875,435.0772705078125 1141.449951171875,435.0772705078125 1139.232177734375,433.0999755859375 1139.232177734375,433.0999755859375 1139.232177734375,433.0999755859375 1138,434.5538330078125 1138,434.5538330078125 1138,434.5538330078125 1141.482177734375,438 1141.482177734375,438 1141.482177734375,438 1141.96875,437.9375 1141.96875,437.9375 1141.96875,437.9375 1147,431.34619140625 1147,431.34619140625 1147,431.34619140625 1145.607177734375,430 1145.607177734375,430 z"  />
                                                    <Rectangle x:Name="IndeterminateCheck" Fill="{StaticResource ArrowNormalFill}" Height="7" Width="7" Opacity="0"/>
                                                </Grid>
                                            </BulletDecorator.Bullet>
                                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                        </BulletDecorator>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsEnabled" Value="false">
                                                <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}"/>
                                                <Setter Property="Background" Value="{StaticResource DisabledBackgroundBrush}"/>
                                                <Setter Property="BorderBrush" Value="{StaticResource DisabledBorderBrush}"/>
                                            </Trigger>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter Property="Stroke" TargetName="normal" Value="{StaticResource CheckBoxHoverBorderBrush}"/>
                                                <Setter Property="Background" Value="{StaticResource CheckBoxHoverBackgroundBrush}"/>
                                                <Setter Property="BorderBrush" Value="{StaticResource CheckBoxHoverBorderBrush}"/>
                                                <Setter Property="Fill" TargetName="checkBox" Value="{StaticResource ArrowPressedFill}"/>
                                            </Trigger>
                                            <Trigger Property="IsPressed" Value="True">
                                                <Setter Property="Stroke" TargetName="normal" Value="{StaticResource CheckBoxHoverBorderBrush}"/>
                                                <Setter Property="Background" Value="{StaticResource CheckBoxPressedBackgroundBrush}"/>
                                                <Setter Property="BorderBrush" Value="{StaticResource CheckBoxPressedBorderBrush}"/>
                                                <Setter Property="Fill" TargetName="checkBox" Value="{StaticResource ArrowPressedFill}"/>
                                            </Trigger>
                                            <Trigger Property="IsChecked" Value="True">
                                                <Setter Property="Visibility" TargetName="checkBox" Value="Visible"/>
                                            </Trigger>
                                            <Trigger Property="IsChecked" Value="{x:Null}">
                                                <Setter Property="Opacity" TargetName="IndeterminateCheck" Value="1"/>
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </ControlTemplate.Resources>

                    <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <DockPanel Grid.ColumnSpan="2">
                                <Label DockPanel.Dock="Left" Content="{x:Static igOutlookBar:ResourcesOutlookBar.NavigationPaneOptionsControlOrderLabel}" FontSize="12" Foreground="{StaticResource ForegroundBrush}" />
                            </DockPanel>
                            <ListBox x:Name="PART_ListBox" Grid.Row="1" Grid.RowSpan="3" Height="116" Margin="0,2,0,8" />

                            <Button x:Name="btnMoveUp" Content="{x:Static igOutlookBar:ResourcesOutlookBar.NavigationPaneOptionsControlMoveUpButton}" Command="{x:Static igOutlookBar:NavigationPaneOptionsControlCommands.MoveSelectedUpCommand}" Grid.Column="1" Grid.Row="1" Width="100" HorizontalAlignment="Right" VerticalAlignment="Top" Margin="0,2,0,0" BorderThickness="1" Style="{StaticResource ButtonStyle}" />

                            <Button x:Name="btnMoveDn" Content="{x:Static igOutlookBar:ResourcesOutlookBar.NavigationPaneOptionsControlMoveDownButton}" Command="{x:Static igOutlookBar:NavigationPaneOptionsControlCommands.MoveSelectedDownCommand}" Grid.Column="1" Grid.Row="2" Width="100" HorizontalAlignment="Right" VerticalAlignment="Top" Margin="0,2,0,0" Style="{StaticResource ButtonStyle}" />

                            <Button x:Name="btnReset" Content="{x:Static igOutlookBar:ResourcesOutlookBar.NavigationPaneOptionsControlResetButton}" Command="{x:Static igOutlookBar:NavigationPaneOptionsControlCommands.ResetGroupSequenceAndVisibilityCommand}" Grid.Column="1" Grid.Row="3" Width="100" HorizontalAlignment="Right" VerticalAlignment="Bottom" Margin="8,0,0,8" Style="{StaticResource ButtonStyle}" />

                            <Button x:Name="btnOK" Content="{x:Static igOutlookBar:ResourcesOutlookBar.NavigationPaneOptionsControlOkButton}" Command="{x:Static igOutlookBar:NavigationPaneOptionsControlCommands.CommitChangesAndCloseCommand}" IsDefault="True" Grid.Column="0" Grid.Row="4" Width="100" HorizontalAlignment="Right" Margin="0,0,0,8" Style="{StaticResource ButtonStyle}" />

                            <Button x:Name="btnCancel" Content="{x:Static igOutlookBar:ResourcesOutlookBar.NavigationPaneOptionsControlCancelButton}" IsCancel="True" Grid.Column="1" Grid.Row="4" Width="100" HorizontalAlignment="Right" Margin="5,0,0,8" Style="{StaticResource ButtonStyle}" />
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type igOutlookBar:NavigationPaneOptionsControl}" BasedOn="{StaticResource NavigationPaneOptionsControlStyle}" />

    <!-- *********************************  NavigationPaneToggleButton Style ********************************* -->
    <Style x:Key="{x:Static igOutlookBar:XamOutlookBar.NavigationPaneToggleButtonStyleKey}" TargetType="{x:Type ToggleButton}">
        <Setter Property="Background" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.MinimizedNavigationPaneNormalFillKey}}" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="ToolTip" Value="{x:Static igOutlookBar:ResourcesOutlookBar.NavigationPaneMinimizedTooltip}" />
        <Setter Property="Content" Value="{x:Static igOutlookBar:ResourcesOutlookBar.NavigationPaneMinimizedText}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Padding" Value="10,0" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Grid>
                        <Border x:Name="Border" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" />
                        <Rectangle x:Name="highlight" />
                        <ContentPresenter x:Name="header" TextElement.Foreground="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.MinimizedNavigationPaneNormalTextFillKey}}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" RecognizesAccessKey="True" TextBlock.TextAlignment="Center" />
                    </Grid>
                    <ControlTemplate.Triggers>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=(igOutlookBar:XamOutlookBar.OutlookBar).IsMinimized, RelativeSource={RelativeSource Self}}" Value="True" />
                                <Condition Binding="{Binding Path=IsMouseOver, RelativeSource={x:Static RelativeSource.Self}}" Value="True" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.MinimizedNavigationPaneHottrackFillKey}}" />
                            <Setter Property="BorderBrush" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.OutlookBarGroupNormalBorderFillKey}}" />
                        </MultiDataTrigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=(igOutlookBar:XamOutlookBar.OutlookBar).IsMinimized, RelativeSource={RelativeSource Self}}" Value="True" />
                                <Condition Binding="{Binding Path=IsPressed, RelativeSource={x:Static RelativeSource.Self}}" Value="True" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.MinimizedNavigationPanePressedFillKey}}" />
                            <Setter Property="BorderBrush" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.OutlookBarGroupNormalBorderFillKey}}" />
                            <Setter TargetName="header" Property="TextElement.Foreground" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.DarkBrushKey}}" />
                        </MultiDataTrigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=(igOutlookBar:XamOutlookBar.OutlookBar).IsMinimized, RelativeSource={RelativeSource Self}}" Value="True" />
                                <Condition Binding="{Binding Path=IsChecked, RelativeSource={x:Static RelativeSource.Self}}" Value="True" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.MinimizedNavigationPaneIsSuspendedFillKey}}" />
                            <Setter Property="BorderBrush" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.OutlookBarGroupNormalBorderFillKey}}" />
                            <Setter TargetName="header" Property="TextElement.Foreground" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.DarkBrushKey}}" />
                        </MultiDataTrigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="PopupResizerTemplate">
        <Border x:Name="ResizeElem" Grid.Column="1" Cursor="SizeWE" BorderThickness="1" VerticalAlignment="Bottom" Background="#00000000" HorizontalAlignment="Right">
            <Grid x:Name="BelowDots" VerticalAlignment="Bottom" Width="7" Height="7" Margin="0,0,2,2">
                <Rectangle x:Name="TouchableZone" Fill="{StaticResource TransparentBrush}" Grid.Column="1"  />
                <Rectangle HorizontalAlignment="Right" Height="2" Margin="0,0,4,0" VerticalAlignment="Bottom" Width="2" Fill="White" />
                <Rectangle HorizontalAlignment="Right" Height="2" VerticalAlignment="Bottom" Width="2" Fill="White" />
                <Rectangle HorizontalAlignment="Right" Height="2" Margin="0,0,0,4" VerticalAlignment="Bottom" Width="2" Fill="White" />
                <Rectangle HorizontalAlignment="Right" Height="2" Margin="0,0,5,1" VerticalAlignment="Bottom" Width="2" Fill="{StaticResource StrokeBrush}" />
                <Rectangle HorizontalAlignment="Right" Height="2" Margin="0,0,1,1" VerticalAlignment="Bottom" Width="2" Fill="{StaticResource StrokeBrush}" />
                <Rectangle HorizontalAlignment="Right" Margin="0,0,1,5" Width="2" Fill="{StaticResource StrokeBrush}" Height="2" VerticalAlignment="Bottom" />
            </Grid>
        </Border>
    </ControlTemplate>

    <!-- *********************************  PopupResizerBar Style ********************************* -->
    <Style TargetType="{x:Type igwindows:PopupResizerBar}">
        <Setter Property="Background" Value="{StaticResource TransparentBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.XamOutlookBarOuterBorderFillKey}}" />
        <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Height" Value="15" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type igwindows:PopupResizerBar}">
                    <Border SnapsToDevicePixels="True" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                        <igwindows:CardPanel Margin="{TemplateBinding Padding}">
                            <igwindows:CardPanel x:Name="GlyphArea">
                                <!-- the thumb is transparent and needs to be placed after the glyphs so that it is on top with respect to z-order -->
                                <Path Width="6" Height="6" HorizontalAlignment="Right" VerticalAlignment="Bottom" Data="M4,4 L6,4 6,6 4,6 z M0,4 L2,4 2,6 0,6 z M4,0 L6,0 6,2 4,2 z" Fill="{TemplateBinding BorderBrush}" Stretch="Fill" />
                                <Thumb x:Name="PART_Thumb" Margin="-1" Opacity="0" />
                            </igwindows:CardPanel>
                        </igwindows:CardPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="ResizeMode" Value="Both" />
                                <Condition Property="Location" Value="Bottom" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="PART_Thumb" Property="Cursor" Value="SizeNWSE" />
                            <Setter TargetName="GlyphArea" Property="HorizontalAlignment" Value="Right" />
                        </MultiTrigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="ResizeMode" Value="Both" />
                                <Condition Property="Location" Value="Bottom" />
                                <Condition Property="FlowDirection" Value="RightToLeft" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="PART_Thumb" Property="Cursor" Value="SizeNESW" />
                        </MultiTrigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="ResizeMode" Value="Both" />
                                <Condition Property="Location" Value="Top" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="PART_Thumb" Property="Cursor" Value="SizeNESW" />
                            <Setter TargetName="GlyphArea" Property="HorizontalAlignment" Value="Right" />
                        </MultiTrigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="ResizeMode" Value="Both" />
                                <Condition Property="Location" Value="Top" />
                                <Condition Property="FlowDirection" Value="RightToLeft" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="PART_Thumb" Property="Cursor" Value="SizeNWSE" />
                        </MultiTrigger>

                        <Trigger Property="ResizeMode" Value="VerticalOnly">
                            <Setter TargetName="PART_Thumb" Property="Cursor" Value="SizeNS" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- *********************************  SelectedGroupContent Style ********************************* -->
    <Style TargetType="{x:Type igOutlookBar:SelectedGroupContent}" x:Key="SelectedGroupContentStyle">
        <Setter Property="Background" Value="{StaticResource TransparentBrush}" />
        <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
        <Setter Property="FontFamily" Value="Segoe UI" />
        <Setter Property="FontSize" Value="12" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type igOutlookBar:SelectedGroupContent}">
                    <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                        <Grid>
                            <ContentPresenter x:Name="PART_SelectedGroupContentPresenter" Content="{Binding Path=(igOutlookBar:XamOutlookBar.OutlookBar).SelectedGroupContent, RelativeSource={RelativeSource Self}}" ContentTemplate="{Binding Path=(igOutlookBar:XamOutlookBar.OutlookBar).SelectedGroupContentTemplate, RelativeSource={RelativeSource Self}}" ContentTemplateSelector="{Binding Path=(igOutlookBar:XamOutlookBar.OutlookBar).SelectedGroupContentTemplateSelector, RelativeSource={RelativeSource Self}}" Margin="{TemplateBinding Padding}" />
                            <Popup x:Name="PART_Popup" Grid.Row="1" StaysOpen="False" Placement="Right" PlacementTarget="{Binding ElementName=PART_SelectedGroupContentPresenter}">
                                <Border BorderThickness="1" Background="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.MinimizedNavigationPopupFillKey}}" BorderBrush="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.MinimizedNavigationPopupBorderFillKey}}">
                                    <Border Margin="12">
                                        <Grid>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="*" />
                                                <RowDefinition Height="Auto" />
                                            </Grid.RowDefinitions>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto" />
                                                <ColumnDefinition Width="Auto" />
                                            </Grid.ColumnDefinitions>
                                            <igwindows:PopupResizerDecorator x:Name="PART_PopupResizerDecorator" ResizeMode="Both">
                                                <ContentPresenter x:Name="SelectedContent" Content="{Binding Path=(igOutlookBar:XamOutlookBar.OutlookBar).SelectedGroupContent, RelativeSource={RelativeSource Self}}" ContentTemplate="{Binding Path=(igOutlookBar:XamOutlookBar.OutlookBar).SelectedGroupContentTemplate, RelativeSource={RelativeSource Self}}" ContentTemplateSelector="{Binding Path=(igOutlookBar:XamOutlookBar.OutlookBar).SelectedGroupContentTemplateSelector, RelativeSource={RelativeSource Self}}" />
                                            </igwindows:PopupResizerDecorator>
                                        </Grid>
                                    </Border>
                                </Border>
                            </Popup>
                            <ToggleButton x:Name="PART_ButtonShowPopup" Visibility="Collapsed" Command="{x:Static igOutlookBar:OutlookBarCommands.ShowPopupCommand}" Style="{DynamicResource {x:Static igOutlookBar:XamOutlookBar.NavigationPaneToggleButtonStyleKey}}" IsChecked="{Binding ElementName=PART_Popup, Path=IsOpen, UpdateSourceTrigger=Explicit}">
                                <ToggleButton.LayoutTransform>
                                    <RotateTransform Angle="-90" />
                                </ToggleButton.LayoutTransform>
                            </ToggleButton>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding Path=OutlookBar.IsMinimized, RelativeSource={RelativeSource TemplatedParent}}" Value="True">
                            <Setter TargetName="PART_ButtonShowPopup" Property="Visibility" Value="Visible" />
                            <Setter TargetName="PART_SelectedGroupContentPresenter" Property="Visibility" Value="Hidden" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Path=OutlookBar.IsMinimized, RelativeSource={RelativeSource TemplatedParent}}" Value="False">
                            <Setter TargetName="PART_SelectedGroupContentPresenter" Property="Visibility" Value="Visible" />
                            <Setter TargetName="PART_SelectedGroupContentPresenter" Property="Content" Value="{Binding Path=(igOutlookBar:XamOutlookBar.OutlookBar).SelectedGroupContent, RelativeSource={RelativeSource Self}}" />
                            <Setter TargetName="PART_SelectedGroupContentPresenter" Property="ContentTemplate" Value="{Binding Path=(igOutlookBar:XamOutlookBar.OutlookBar).SelectedGroupContentTemplate, RelativeSource={RelativeSource Self}}" />
                            <Setter TargetName="PART_SelectedGroupContentPresenter" Property="ContentTemplateSelector" Value="{Binding Path=(igOutlookBar:XamOutlookBar.OutlookBar).SelectedGroupContentTemplateSelector, RelativeSource={RelativeSource Self}}" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Path=OutlookBar.VerticalSplitterLocation, RelativeSource={RelativeSource TemplatedParent}}" Value="Left">
                            <Setter TargetName="PART_Popup" Property="Placement" Value="Left" />
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type igOutlookBar:SelectedGroupContent}" BasedOn="{StaticResource SelectedGroupContentStyle}" />

    <!-- *********************************  XamOutlookBar Style ********************************* -->
    <Style TargetType="{x:Type igOutlookBar:XamOutlookBar}">
        <Style.Resources>
            <BooleanToVisibilityConverter x:Key="booleanToVisibilityConverter" />
        </Style.Resources>
        <Setter Property="FontFamily" Value="Segoe UI" />
        <Setter Property="FontSize" Value="12" />
        <Setter Property="BorderBrush" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.XamOutlookBarOuterBorderFillKey}}" />
        <Setter Property="Background" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.XamOutlookBarBackgroundFillKey}}" />
        <Setter Property="Foreground" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.MenuItemTextNormalFillKey}}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type igOutlookBar:XamOutlookBar}">
                    <AdornerDecorator>
                        <Border VerticalAlignment="Stretch">
                            <Grid VerticalAlignment="Stretch">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <Thumb x:Name="PART_VerticalSplitter" Style="{DynamicResource {x:Static igOutlookBar:XamOutlookBar.VerticalSplitterStyleKey}}" Grid.Column="2" Visibility="{Binding IsVerticalSplitterVisible, Converter={StaticResource booleanToVisibilityConverter}, RelativeSource={RelativeSource TemplatedParent}}" />
                                <Border Grid.Column="1" VerticalAlignment="Stretch" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="True">
                                    <Grid x:Name="PART_Grid">
                                        <Grid.RowDefinitions>
                                            <!-- Header Row -->
                                            <RowDefinition Height="Auto" />
                                            <!-- Selected Group Content Row -->
                                            <RowDefinition Height="*" MinHeight="{TemplateBinding SelectedAreaMinHeight}" />
                                            <!-- Splitter Row -->
                                            <RowDefinition Height="Auto" />
                                            <!-- Groups Row -->
                                            <RowDefinition Height="0" MaxHeight="{Binding Height, ElementName=PART_NavigationArea}" />
                                            <!-- Toolbar Row -->
                                            <RowDefinition Height="Auto" />
                                        </Grid.RowDefinitions>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition />
                                            <ColumnDefinition Width="Auto" />
                                        </Grid.ColumnDefinitions>
                                        <!-- Header ================================================ -->
                                        <igOutlookBar:SelectedGroupHeader x:Name="PART_SelectedGroupHeader" Grid.Column="1" Grid.Row="0" />
                                        <!-- Selected Group Content ================================ -->
                                        <igOutlookBar:SelectedGroupContent x:Name="PART_SelectedGroupContent" MinHeight="{TemplateBinding SelectedAreaMinHeight}" Grid.Column="1" Grid.Row="1" />
                                        <!-- Splitter ============================================== -->
                                        <igOutlookBar:GroupAreaSplitter x:Name="PART_Splitter" Grid.Column="1" Grid.Row="2" Style="{StaticResource HorizontalSplitterStyleKey}" />
                                        <!-- Groups   ============================================== -->
                                        <igOutlookBar:GroupsPresenter x:Name="PART_NavigationArea" Grid.Column="1" Grid.Row="3" ItemsSource="{Binding NavigationAreaGroups, RelativeSource={RelativeSource TemplatedParent}}" />
                                        <!-- Toolbar =============================================== -->
                                        <igOutlookBar:GroupOverflowArea x:Name="PART_OverflowArea" Grid.Column="1" Grid.Row="4" />
                                    </Grid>
                                </Border>
                            </Grid>
                        </Border>
                    </AdornerDecorator>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" SourceName="PART_Splitter" Value="true">
                            <Setter Property="Cursor" Value="SizeNS" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" SourceName="PART_VerticalSplitter" Value="true">
                            <Setter Property="Cursor" Value="SizeWE" />
                        </Trigger>
                        <DataTrigger Binding="{Binding VerticalSplitterLocation, RelativeSource={RelativeSource Self}}" Value="Left">
                            <Setter TargetName="PART_VerticalSplitter" Property="Grid.Column" Value="0" />
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>