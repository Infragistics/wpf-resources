<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:PresentationOptions="http://schemas.microsoft.com/winfx/2006/xaml/presentation/options"
                    xmlns:System="clr-namespace:System;assembly=mscorlib"
                    xmlns:igOutlookBar="http://infragistics.com/OutlookBar"
                    xmlns:igwindows="http://infragistics.com/Windows">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="OutlookBarBase.xaml" />
        <ResourceDictionary Source="OutlookBarRoyalLight_Brushes.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <!--  *********************************  COMMON ATTRIBUTES  *********************************  -->
    <!--  Fonts  -->
    <FontFamily x:Key="FontFamily">#Segoe UI</FontFamily>
    <System:Double x:Key="FontSize">12</System:Double>
    <Geometry x:Key="ScrollbarArrow">M 5 5 L 1 0 L -3 5 L 5 5 Z</Geometry>
    <Thickness x:Key="DefaultBorderThickness">1 1 1 1</Thickness>
    <CornerRadius x:Key="CornerRadius">2</CornerRadius>

    <Geometry x:Key="OverflowIcon">M16,1.4210855E-14 C17.104569,-1.1920928E-07 18,0.89543039 18,1.9999999 18,3.1045693 17.104569,3.9999999 16,3.9999999 14.895431,3.9999999 14,3.1045693 14,1.9999999 14,0.89543039 14.895431,-1.1920928E-07 16,1.4210855E-14 z M9,1.4210855E-14 C10.104569,-1.1920928E-07 11,0.89543039 11,1.9999999 11,3.1045693 10.104569,3.9999999 9,3.9999999 7.8954306,3.9999999 7,3.1045693 7,1.9999999 7,0.89543039 7.8954306,-1.1920928E-07 9,1.4210855E-14 z M2,1.4210855E-14 C3.1045694,-1.1920928E-07 4,0.89543039 4,1.9999999 4,3.1045693 3.1045694,3.9999999 2,3.9999999 0.89543056,3.9999999 0,3.1045693 0,1.9999999 0,0.89543039 0.89543056,-1.1920928E-07 2,1.4210855E-14 z</Geometry>
    <Geometry x:Key="SplitterIcon">M 1464 1407 L 1464 1408.5 L 1464 1410 L 1465.5 1410 L 1467 1410 L 1467 1408.5 L 1467 1407 L 1465.5 1407 L 1464 1407 ZM 1458 1407 L 1458 1408.5 L 1458 1410 L 1459.5 1410 L 1461 1410 L 1461 1408.5 L 1461 1407 L 1459.5 1407 L 1458 1407 ZM 1452 1407 L 1452 1408.5 L 1452 1410 L 1453.5 1410 L 1455 1410 L 1455 1408.5 L 1455 1407 L 1453.5 1407 L 1452 1407 Z</Geometry>
    <Geometry x:Key="MinimiTogglezeIcon">M 6 8.3882 L 4.5825 10 L 0 5 L 4.5825 0 L 5.9325 1.489 L 2.7823 4.9755 L 6 8.3882 Z</Geometry>
    <Geometry x:Key="CheckBoxCheck">M 1.3394 3.4286 L 0 4.8932 L 3.75 8 L 9 1.165 L 7.5938 0 L 3.6831 5.3703 L 1.3394 3.4286 Z</Geometry>
    <Geometry x:Key="PopupResizerIcon">M4,4 L6,4 6,6 4,6 z M0,4 L2,4 2,6 0,6 z M4,0 L6,0 6,2 4,2 z</Geometry>

   <!--  VShaped Arrow   --> <!--  Height="6" Width="10"  -->
   <Geometry x:Key="VArrowDown">M 8.3882 0 L 10 1.4175 L 5 6 L 0 1.4175 L 1.489 0.0675 L 4.9755 3.2177 L 8.3882 0 Z</Geometry>
   <Geometry x:Key="VArrowTop">M 1.6118 6 L 0 4.5825 L 5 0 L 10 4.5825 L 8.511 5.9325 L 5.0245 2.7823 L 1.6118 6 Z</Geometry>
   <Geometry x:Key="VArrowRight">M 0 8.3882 L 1.4175 10 L 6 5 L 1.4175 0 L 0.0675 1.489 L 3.2177 4.9755 L 0 8.3882 Z</Geometry>

    <!--  *********************************  DefaultSmallImage Drawing  *********************************  -->
    <DrawingImage x:Key="DefaultSmallImage" PresentationOptions:Freeze="True">
        <DrawingImage.Drawing>
             <GeometryDrawing Brush="{StaticResource ImageFillBrush}">
                <GeometryDrawing.Geometry>
                    <GeometryGroup FillRule="EvenOdd">
                        <RectangleGeometry Rect="1,3,14,2" />
                        <RectangleGeometry Rect="1,7,14,2" />
                        <RectangleGeometry Rect="1,11,14,2" />
                        <!--
                            Using EvenOdd fill rule for the geometry drawing. Adding 4 fake elements (2 defining vertical rectangle, 2 - horizontal).
                            Using EvenOdd fill rule will negate the 4 elements to transparent. They serve to define the width and height of the drawing image only.
                        -->
                        <RectangleGeometry Rect="0,0,16,0" />
                        <RectangleGeometry Rect="0,0,16,0" />
                        <RectangleGeometry Rect="0,0,0,16" />
                        <RectangleGeometry Rect="0,0,0,16" />
                    </GeometryGroup>
                </GeometryDrawing.Geometry>
            </GeometryDrawing>
        </DrawingImage.Drawing>
    </DrawingImage>

    <!--  *********************************  DefaultLargeImage Drawing  *********************************  -->
    <DrawingImage x:Key="DefaultLargeImage" PresentationOptions:Freeze="True">
        <DrawingImage.Drawing>
              <GeometryDrawing Brush="{StaticResource ImageFillBrush}">
                <GeometryDrawing.Geometry>
                    <GeometryGroup FillRule="EvenOdd">
                        <RectangleGeometry Rect="4,5,16,3" />
                        <RectangleGeometry Rect="4,10,16,3" />
                        <RectangleGeometry Rect="4,15,16,3" />
                        <!--
                            Using EvenOdd fill rule for the geometry drawing. Adding 4 fake elements (2 defining vertical rectangle, 2 - horizontal).
                            Using EvenOdd fill rule will negate the 4 elements to transparent. They serve to define the width and height of the drawing image only.
                        -->
                        <RectangleGeometry Rect="0,0,24,0" />
                        <RectangleGeometry Rect="0,0,24,0" />
                        <RectangleGeometry Rect="0,0,0,24" />
                        <RectangleGeometry Rect="0,0,0,24" />
                    </GeometryGroup>
                </GeometryDrawing.Geometry>
            </GeometryDrawing>
        </DrawingImage.Drawing>
    </DrawingImage>

    <!--  *********************************  ToolTipStyle  *********************************  -->
    <Style x:Key="ToolTipStyle" TargetType="ContentControl">
        <Setter Property="Foreground" Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igOutlookBar:XamOutlookBar}, ResourceId=ForegroundBrush}}" />
        <Setter Property="FontSize" Value="{StaticResource FontSize}" />
        <Setter Property="FontFamily" Value="{StaticResource FontFamily}" />
        <Setter Property="Background" Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igOutlookBar:XamOutlookBar}, ResourceId=TooltipBackgroundBrush}}" />
        <Setter Property="BorderBrush" Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igOutlookBar:XamOutlookBar}, ResourceId=TooltipBorderBrush}}" />
        <Setter Property="Padding" Value="8 6 8 8" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ContentControl">
                    <Grid>
                        <Grid>
                            <Border Margin="-4"
                                    Background="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igOutlookBar:XamOutlookBar},ResourceId=TooltipShadowBrush}}"
                                    CornerRadius="5"
                                    Opacity="0.1" />
                            <Border Margin="-3"
                                    Background="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igOutlookBar:XamOutlookBar},ResourceId=TooltipShadowBrush}}"
                                    CornerRadius="4"
                                    Opacity="0.3" />
                            <Border Margin="-2"
                                    Background="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igOutlookBar:XamOutlookBar},ResourceId=TooltipShadowBrush}}"
                                    CornerRadius="3"
                                    Opacity="0.5" />
                            <Border Margin="-1"
                                    Background="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igOutlookBar:XamOutlookBar},ResourceId=TooltipShadowBrush}}"
                                    CornerRadius="2"
                                    Opacity="0.7" />
                            <Rectangle Fill="{TemplateBinding Background}"
                                       Stroke="{TemplateBinding BorderBrush}"
                                       StrokeThickness="{TemplateBinding BorderThickness}" />
                            <ContentPresenter Margin="{TemplateBinding Padding}"
                                              HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalAlignment}" />
                        </Grid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style BasedOn="{StaticResource ToolTipStyle}" TargetType="ToolTip" />

    <!--  *********************************  ScrollBarButton Style  *********************************  -->
    <Style x:Key="ScrollBarButtonStyle" TargetType="{x:Type RepeatButton}">
        <Setter Property="MinWidth" Value="18" />
        <Setter Property="MinHeight" Value="18" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Grid x:Name="grid1">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="Arrow" Storyboard.TargetProperty="Fill">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igOutlookBar:XamOutlookBar}, ResourceId=ScrollbarPageButtonArrowHoverBackgroundBrush}}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="Bg" Storyboard.TargetProperty="Background">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igOutlookBar:XamOutlookBar}, ResourceId=ScrollbarPageButtonHoverBackgroundBrush}}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <!--<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="Bg">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ScrollbarPageButtonHoverBorderBrush}" />
                                        </ObjectAnimationUsingKeyFrames>-->
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="Arrow" Storyboard.TargetProperty="Fill">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igOutlookBar:XamOutlookBar}, ResourceId=ScrollbarPageButtonArrowPressedBackgroundBrush}}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="Bg" Storyboard.TargetProperty="Background">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igOutlookBar:XamOutlookBar}, ResourceId=ScrollbarPageButtonPressedBackgroundBrush}}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <!--<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="Bg">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ScrollbarPageButtonPressedBorderBrush}" />
                                        </ObjectAnimationUsingKeyFrames>-->
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" Storyboard.TargetName="grid1" Storyboard.TargetProperty="Opacity" To="0.3" />
                                        <!--<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Fill" Storyboard.TargetName="Arrow">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource DisabledBorderBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Background" Storyboard.TargetName="Bg">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource DisabledBackgroundBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="Bg">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource DisabledBorderBrush}" />
                                        </ObjectAnimationUsingKeyFrames>-->
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="Bg"
                                Background="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igOutlookBar:XamOutlookBar},ResourceId=ScrollbarPageButtonBackgroundBrush}}"
                                BorderThickness="0" />
                        <Path x:Name="Arrow"
                              Width="8"
                              Height="5"
                              Margin="{TemplateBinding Padding}"
                              Data="{StaticResource ScrollbarArrow}"
                              Fill="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igOutlookBar:XamOutlookBar},ResourceId=ScrollbarPageButtonArrowBackgroundBrush}}"
                              Stretch="Fill" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  *********************************  ScrollBarPageButton Style  *********************************  -->
    <Style x:Key="ScrollBarPageButtonStyle" TargetType="{x:Type RepeatButton}">
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Rectangle Width="{TemplateBinding Width}"
                               Height="{TemplateBinding Height}"
                               Fill="{TemplateBinding Background}">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver" />
                                <VisualState x:Name="Pressed" />
                                <VisualState x:Name="Disabled" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Rectangle>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  *********************************  Horizontal ScrollBarThumb Style  *********************************  -->
    <Style x:Key="HScrollBarThumbStyle" TargetType="{x:Type Thumb}">
        <Setter Property="MinWidth" Value="18" />
        <Setter Property="MinHeight" Value="18" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Grid x:Name="grid1" Margin="0">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="Thumb" Storyboard.TargetProperty="Fill">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igOutlookBar:XamOutlookBar}, ResourceId=ScrollbarThumbHoverBackgroundBrush}}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <!--<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Stroke" Storyboard.TargetName="Thumb">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource HScrollbarThumbHoverBorderBrush}" />
                                        </ObjectAnimationUsingKeyFrames>-->
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="Thumb" Storyboard.TargetProperty="Fill">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igOutlookBar:XamOutlookBar}, ResourceId=ScrollbarThumbPressedBackgroundBrush}}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <!--<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Stroke" Storyboard.TargetName="Thumb">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource HScrollbarThumbPressedBorderBrush}" />
                                        </ObjectAnimationUsingKeyFrames>-->
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" Storyboard.TargetName="grid1" Storyboard.TargetProperty="Opacity" To="0.3" />
                                        <!--<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Fill" Storyboard.TargetName="Thumb">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource DisabledBackgroundBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Stroke" Storyboard.TargetName="Thumb">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource DisabledBorderBrush}" />
                                        </ObjectAnimationUsingKeyFrames>-->
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Rectangle x:Name="Thumb"
                                   Height="18"
                                   Fill="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igOutlookBar:XamOutlookBar},ResourceId=ScrollbarThumbBackgroundBrush}}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  *********************************  Vertical ScrollbarThumb Style  *********************************  -->
    <Style x:Key="VScrollBarThumbStyle" TargetType="{x:Type Thumb}">
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="MinWidth" Value="18" />
        <Setter Property="MinHeight" Value="18" />
        <Setter Property="Stylus.IsPressAndHoldEnabled" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Grid x:Name="grid"
                          Width="Auto"
                          Height="Auto">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="Thumb" Storyboard.TargetProperty="Fill">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igOutlookBar:XamOutlookBar}, ResourceId=ScrollbarThumbHoverBackgroundBrush}}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <!--<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Stroke" Storyboard.TargetName="Thumb">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource VScrollbarThumbHoverBorderBrush}" />
                                        </ObjectAnimationUsingKeyFrames>-->
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="Thumb" Storyboard.TargetProperty="Fill">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igOutlookBar:XamOutlookBar}, ResourceId=ScrollbarThumbPressedBackgroundBrush}}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <!--<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Stroke" Storyboard.TargetName="Thumb">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource VScrollbarThumbPressedBorderBrush}" />
                                        </ObjectAnimationUsingKeyFrames>-->
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" Storyboard.TargetName="grid" Storyboard.TargetProperty="Opacity" To="0.3" />
                                        <!--<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Fill" Storyboard.TargetName="Thumb">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource DisabledBackgroundBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Stroke" Storyboard.TargetName="Thumb">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource DisabledBorderBrush}" />
                                        </ObjectAnimationUsingKeyFrames>-->
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Rectangle x:Name="Thumb"
                                   Width="18"
                                   Fill="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igOutlookBar:XamOutlookBar},ResourceId=ScrollbarThumbBackgroundBrush}}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  *********************************  ScrollBar Style  *********************************  -->
    <Style x:Key="ScrollBarStyle" TargetType="{x:Type ScrollBar}">
        <Setter Property="Stylus.IsPressAndHoldEnabled" Value="false" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="false" />
        <Setter Property="Width" Value="18" />
        <Setter Property="MinWidth" Value="18" />
        <Setter Property="Margin" Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollBar}">
                    <Grid x:Name="Bg" SnapsToDevicePixels="true">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="18" />
                            <RowDefinition Height="*" />
                            <RowDefinition Height="18" />
                        </Grid.RowDefinitions>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0:0:0.3" />
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver" />
                                <VisualState x:Name="Disabled" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Rectangle Grid.RowSpan="3" Fill="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igOutlookBar:XamOutlookBar}, ResourceId=ScrollbarBackgroundBrush}}" />
                        <RepeatButton x:Name="repeatButton"
                                      HorizontalAlignment="Center"
                                      Command="{x:Static ScrollBar.LineUpCommand}"
                                      IsEnabled="True"
                                      Style="{StaticResource ScrollBarButtonStyle}" />
                        <Track x:Name="PART_Track"
                               Grid.Row="1"
                               IsDirectionReversed="true"
                               IsEnabled="True">
                            <Track.DecreaseRepeatButton>
                                <RepeatButton Command="{x:Static ScrollBar.PageUpCommand}" Style="{StaticResource ScrollBarPageButtonStyle}" />
                            </Track.DecreaseRepeatButton>
                            <Track.IncreaseRepeatButton>
                                <RepeatButton Command="{x:Static ScrollBar.PageDownCommand}" Style="{StaticResource ScrollBarPageButtonStyle}" />
                            </Track.IncreaseRepeatButton>
                            <Track.Thumb>
                                <Thumb x:Name="thumb"
                                       Width="30"
                                       HorizontalAlignment="Center"
                                       Style="{StaticResource VScrollBarThumbStyle}" />
                            </Track.Thumb>
                        </Track>
                        <RepeatButton x:Name="repeatButton1"
                                      Grid.Row="2"
                                      HorizontalAlignment="Center"
                                      Command="{x:Static ScrollBar.LineDownCommand}"
                                      IsEnabled="True"
                                      RenderTransformOrigin="0.5,0.5"
                                      Style="{StaticResource ScrollBarButtonStyle}">
                            <RepeatButton.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform />
                                    <SkewTransform />
                                    <RotateTransform Angle="180" />
                                    <TranslateTransform />
                                </TransformGroup>
                            </RepeatButton.RenderTransform>
                        </RepeatButton>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Orientation" Value="Horizontal">
                <Setter Property="Width" Value="Auto" />
                <Setter Property="MinWidth" Value="0" />
                <Setter Property="Height" Value="18" />
                <Setter Property="MinHeight" Value="18" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ScrollBar}">
                            <Grid x:Name="Bg" SnapsToDevicePixels="true">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="18" />
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="18" />
                                </Grid.ColumnDefinitions>
                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="CommonStates">
                                        <VisualStateGroup.Transitions>
                                            <VisualTransition GeneratedDuration="0:0:0.3" />
                                        </VisualStateGroup.Transitions>
                                        <VisualState x:Name="Normal" />
                                        <VisualState x:Name="MouseOver">
                                            <Storyboard>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="repeatButton" Storyboard.TargetProperty="(UIElement.Opacity)">
                                                    <EasingDoubleKeyFrame KeyTime="0" Value="1" />
                                                </DoubleAnimationUsingKeyFrames>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="repeatButton1" Storyboard.TargetProperty="(UIElement.Opacity)">
                                                    <EasingDoubleKeyFrame KeyTime="0" Value="1" />
                                                </DoubleAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="Disabled" />
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>
                                <Rectangle Grid.ColumnSpan="5" Fill="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igOutlookBar:XamOutlookBar}, ResourceId=ScrollbarBackgroundBrush}}" />
                                <RepeatButton x:Name="repeatButton"
                                              VerticalAlignment="Center"
                                              Command="{x:Static ScrollBar.LineLeftCommand}"
                                              IsEnabled="True"
                                              Opacity="1"
                                              RenderTransformOrigin="0.5,0.5"
                                              Style="{DynamicResource ScrollBarButtonStyle}">
                                    <RepeatButton.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform />
                                            <SkewTransform />
                                            <RotateTransform Angle="-90" />
                                            <TranslateTransform />
                                        </TransformGroup>
                                    </RepeatButton.RenderTransform>
                                </RepeatButton>
                                <Track x:Name="PART_Track"
                                       Grid.Column="1"
                                       IsEnabled="True">
                                    <Track.DecreaseRepeatButton>
                                        <RepeatButton Command="{x:Static ScrollBar.PageLeftCommand}" Style="{StaticResource ScrollBarPageButtonStyle}" />
                                    </Track.DecreaseRepeatButton>
                                    <Track.IncreaseRepeatButton>
                                        <RepeatButton Command="{x:Static ScrollBar.PageRightCommand}" Style="{StaticResource ScrollBarPageButtonStyle}" />
                                    </Track.IncreaseRepeatButton>
                                    <Track.Thumb>
                                        <Thumb Height="30"
                                               VerticalAlignment="Center"
                                               Style="{StaticResource HScrollBarThumbStyle}" />
                                    </Track.Thumb>
                                </Track>
                                <RepeatButton x:Name="repeatButton1"
                                              Grid.Column="2"
                                              VerticalAlignment="Center"
                                              Command="{x:Static ScrollBar.LineRightCommand}"
                                              IsEnabled="True"
                                              Opacity="1"
                                              RenderTransformOrigin="0.5,0.5"
                                              Style="{DynamicResource ScrollBarButtonStyle}">
                                    <RepeatButton.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform />
                                            <SkewTransform />
                                            <RotateTransform Angle="90" />
                                            <TranslateTransform />
                                        </TransformGroup>
                                    </RepeatButton.RenderTransform>
                                </RepeatButton>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style BasedOn="{StaticResource ScrollBarStyle}" TargetType="{x:Type ScrollBar}" />

    <!--  *********************************  ScrollViewer Style *********************************  -->
    <Style x:Key="ScrollViewerStyle" TargetType="{x:Type ScrollViewer}">
        <Setter Property="Foreground" Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igOutlookBar:XamOutlookBar}, ResourceId=ForegroundBrush}}" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Top" />
        <Setter Property="VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="BorderThickness" Value="{StaticResource DefaultBorderThickness}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                    <Grid x:Name="Grid" Background="{TemplateBinding Background}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <Rectangle Fill="{StaticResource TransparentBrush}" />
                        <ScrollContentPresenter x:Name="PART_ScrollContentPresenter"
                                                Grid.Row="0"
                                                Grid.Column="0"
                                                Margin="{TemplateBinding Padding}"
                                                CanContentScroll="{TemplateBinding CanContentScroll}"
                                                CanHorizontallyScroll="False"
                                                CanVerticallyScroll="False"
                                                Content="{TemplateBinding Content}"
                                                ContentTemplate="{TemplateBinding ContentTemplate}" />
                        <ScrollBar x:Name="PART_VerticalScrollBar"
                                   Grid.Row="0"
                                   Grid.Column="1"
                                   AutomationProperties.AutomationId="VerticalScrollBar"
                                   Cursor="Arrow"
                                   Maximum="{TemplateBinding ScrollableHeight}"
                                   Minimum="0"
                                   Style="{StaticResource ScrollBarStyle}"
                                   ViewportSize="{TemplateBinding ViewportHeight}"
                                   Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                                   Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
                        <ScrollBar x:Name="PART_HorizontalScrollBar"
                                   Grid.Row="1"
                                   Grid.Column="0"
                                   AutomationProperties.AutomationId="HorizontalScrollBar"
                                   Cursor="Arrow"
                                   Maximum="{TemplateBinding ScrollableWidth}"
                                   Minimum="0"
                                   Orientation="Horizontal"
                                   Style="{StaticResource ScrollBarStyle}"
                                   ViewportSize="{TemplateBinding ViewportWidth}"
                                   Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
                                   Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- JJD 06/25/14 TFS169389
    Should never create a Style without a Key for a framework standard element
    <Style TargetType="{x:Type ScrollViewer}" BasedOn="{StaticResource ScrollViewerStyle}"/>-->

    <!--  *********************************  OverflowMenuButton Style *********************************  -->
    <Style x:Key="{x:Static igOutlookBar:XamOutlookBar.OverflowMenuButtonStyleKey}" TargetType="MenuItem">
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="MinWidth" Value="30" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type MenuItem}">
                    <Border x:Name="Border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}">
                        <Grid>
                            <Path x:Name="glyph"
                                  Width="18"
                                  Height="4"
                                  Margin="6,3"
                                  Data="{StaticResource OverflowIcon}"
                                  Fill="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.OverflowGlyphForegroundFillKey}}"
                                  Stretch="Fill" />
                            <!--<Path x:Name="glyph" Fill="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.OverflowGlyphForegroundFillKey}}" Data="F1 M541.53699,173.589 L531.10699,173.589 L536.32202,179.18501 L541.53699,173.589 z" Stretch="Uniform" Height="6" Width="10" Margin="6,3,6,3" />-->
                            <Popup x:Name="Popup"
                                   AllowsTransparency="True"
                                   Focusable="False"
                                   IsOpen="{TemplateBinding IsSubmenuOpen}"
                                   Placement="Right"
                                   PopupAnimation="Fade">
                                <Border x:Name="SubmenuBorder"
                                        Background="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.MenuCenterFillKey}}"
                                        BorderBrush="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.MenuOuterBorderFillKey}}"
                                        BorderThickness="1"
                                        SnapsToDevicePixels="True">
                                    <ScrollViewer x:Name="Popup_ScrollViewer"
                                                  HorizontalScrollBarVisibility="Disabled"
                                                  Style="{StaticResource ScrollViewerStyle}"
                                                  VerticalScrollBarVisibility="Auto">
                                        <ItemsPresenter Grid.IsSharedSizeScope="true"
                                                        KeyboardNavigation.DirectionalNavigation="Cycle"
                                                        KeyboardNavigation.TabNavigation="Cycle"
                                                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                    </ScrollViewer>
                                </Border>
                            </Popup>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSuspendingPopupAnimation" Value="true">
                            <Setter TargetName="Popup" Property="PopupAnimation" Value="None" />
                            <Setter TargetName="glyph" Property="Fill" Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igOutlookBar:XamOutlookBar}, ResourceId=GlyphHoverBackgroundBrush}}" />
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.NavigationGroupHeaderActiveCenterFillKey}}" />
                        </Trigger>
                        <Trigger Property="IsHighlighted" Value="true">
                            <Setter TargetName="glyph" Property="Fill" Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igOutlookBar:XamOutlookBar}, ResourceId=GlyphHoverBackgroundBrush}}" />
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.NavigationGroupHeaderHottrackCenterFillKey}}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="glyph" Property="Fill" Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igOutlookBar:XamOutlookBar}, ResourceId=GlyphPressedBackgroundBrush}}" />
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.NavigationGroupHeaderActiveCenterFillKey}}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Border" Property="Opacity" Value="0.3" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  *********************************  OverflowMenuItem Style *********************************  -->
    <Style x:Key="{x:Static igOutlookBar:XamOutlookBar.OverflowMenuItemStyleKey}" TargetType="MenuItem">
        <Setter Property="HorizontalContentAlignment" Value="{Binding Path=HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="VerticalContentAlignment" Value="{Binding Path=VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="Background" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.MenuCenterFillKey}}" />
        <Setter Property="BorderBrush" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.MenuOuterBorderFillKey}}" />
        <Setter Property="Foreground" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.MenuItemTextNormalFillKey}}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="FontSize" Value="{StaticResource FontSize}" />
        <Setter Property="FontFamily" Value="{StaticResource FontFamily}" />
        <Setter Property="MinHeight" Value="22" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type MenuItem}">
                    <Border x:Name="Border"
                            Margin="{TemplateBinding Margin}"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid Visibility="Visible">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition x:Name="MenuItemIconColumnGroup"
                                                  Width="Auto"
                                                  MinWidth="22"
                                                  SharedSizeGroup="MenuItemIconColumnGroup" />
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" SharedSizeGroup="MenuItemIGTColumnGroup" />
                                <ColumnDefinition Width="22" />
                            </Grid.ColumnDefinitions>
                              <Border Grid.Column="0"
                                    BorderBrush="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igOutlookBar:XamOutlookBar},ResourceId=MenuItemVerticalLineBrush}}"
                                    BorderThickness="0" />
                            <Border x:Name="IconAreaBackground"
                                    Background="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.MenuIconGroupCenterFillKey}}"
                                    BorderBrush="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.MenuIconGroupOuterBorderFillKey}}"
                                    BorderThickness="0,0,1,0"
                                    Visibility="Collapsed" />
                             <Grid x:Name="Highlight"
                                  Grid.Column="0"
                                  Grid.ColumnSpan="4"
                                  Width="Auto"
                                  Margin="1,1,1,1"
                                  HorizontalAlignment="Stretch"
                                  Visibility="Collapsed">
                                <Rectangle x:Name="HighlightFill"
                                           Fill="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.MenuItemHottrackCenterFillKey}}"
                                           Stroke="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.MenuItemHottrackOuterBorderFillKey}}" />
                            </Grid>
                            <Border x:Name="checkedState"
                                    Margin="2,3"
                                    Background="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.MenuCheckmarkBoxNormalCenterFillKey}}"
                                    BorderBrush="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.MenuCheckmarkBoxNormalOuterBorderFillKey}}"
                                    BorderThickness="1"
                                    Visibility="Collapsed" />
                            <ContentPresenter x:Name="Icon"
                                              MaxWidth="16"
                                              MaxHeight="16"
                                              HorizontalAlignment="Center"
                                              VerticalAlignment="Center"
                                              ContentSource="Icon" />
                            <Grid x:Name="GlyphPanel"
                                  Margin="1,0,0,0"
                                  HorizontalAlignment="Center"
                                  VerticalAlignment="Center"
                                  Visibility="Collapsed">
                                <Path x:Name="GlyphPanelpath"
                                      VerticalAlignment="Center"
                                      Data="M0,2 L0,4.8 L2.5,7.4 L7.1,2.8 L7.1,0 L2.5,4.6 z"
                                      Fill="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.DarkBrushKey}}"
                                      FlowDirection="LeftToRight" />
                            </Grid>
                             <!--  Margin affect menu items height  -->
                            <ContentControl x:Name="ContentControl"
                                            Grid.Column="1"
                                            Margin="5,0,0,0"
                                            VerticalAlignment="Center"
                                            Focusable="false"
                                            FontFamily="{TemplateBinding FontFamily}"
                                            FontSize="{TemplateBinding FontSize}"
                                            Foreground="{TemplateBinding Foreground}">
                                <ContentPresenter x:Name="HeaderHost"
                                                  ContentSource="Header"
                                                  RecognizesAccessKey="True" />
                            </ContentControl>                            
                            <Grid x:Name="ArrowPanel"
                                  Grid.Column="3"
                                  Margin="0,0,1,0"
                                  HorizontalAlignment="Center"
                                  VerticalAlignment="Center">
                                <Path x:Name="ArrowPanelPath"
                                      Width="6"
                                      Height="10"
                                      VerticalAlignment="Center"
                                      Data="{StaticResource VArrowRight}"
                                      Fill="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igOutlookBar:XamOutlookBar},ResourceId=GlyphBackgroundBrush}}"
                                      Stretch="Fill" />
                            </Grid>
                            <Popup x:Name="SubMenuPopup"
                                   AllowsTransparency="true"
                                   Focusable="false"
                                   IsOpen="{Binding Path=IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}"
                                   Placement="Right"
                                   PopupAnimation="{x:Static SystemParameters.MenuPopupAnimation}"
                                   VerticalOffset="-3">
                                <Grid x:Name="SubMenu">
                                    <Border x:Name="SubMenuBorder"
                                            Background="{TemplateBinding Background}"
                                            BorderBrush="{TemplateBinding BorderBrush}"
                                            BorderThickness="1">
                                        <!-- JJD 06/25/14 TFS169389 Explicitly set the Style  -->
                                        <ScrollViewer x:Name="Popup_ScrollViewer"
                                                      HorizontalScrollBarVisibility="Disabled"
                                                      Style="{StaticResource ScrollViewerStyle}"
                                                      VerticalScrollBarVisibility="Auto">
                                            <ItemsPresenter Grid.IsSharedSizeScope="true"
                                                            KeyboardNavigation.DirectionalNavigation="Cycle"
                                                            KeyboardNavigation.TabNavigation="Cycle"
                                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                        </ScrollViewer>
                                    </Border>
                                </Grid>
                            </Popup>        
                        </Grid>
                    </Border>
                    <!--  These triggers re-configure the four arrangements of MenuItem to show different levels of menu via Role  -->
                    <ControlTemplate.Triggers>
                        <!--  Role = TopLevelHeader : this is the root menu item in a menu; the Popup expands down  -->
                        <Trigger Property="Role" Value="TopLevelHeader">
                            <Setter Property="Padding" Value="6,3,6,3" />
                            <Setter Property="Grid.IsSharedSizeScope" Value="true" />
                            <Setter TargetName="SubMenuPopup" Property="Placement" Value="Bottom" />
                            <Setter TargetName="ArrowPanel" Property="Visibility" Value="Collapsed" />
                            <Setter Property="Foreground" Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igOutlookBar:XamOutlookBar}, ResourceId=ForegroundBrush}}" />
                            <Setter TargetName="HighlightFill" Property="Fill" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.MenuItemHottrackCenterFillKey}}" />
                            <Setter TargetName="HighlightFill" Property="Stroke" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.MenuItemHottrackOuterBorderFillKey}}" />
                        </Trigger>
                        <!--  Role = TopLevelItem :  this is a child menu item from the top level without any child items  -->
                        <Trigger Property="Role" Value="TopLevelItem">
                            <Setter Property="Padding" Value="6,3,6,3" />
                            <Setter TargetName="ArrowPanel" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="IconAreaBackground" Property="Visibility" Value="Visible" />
                            <Setter TargetName="MenuItemIconColumnGroup" Property="MinWidth" Value="24" />
                            <Setter TargetName="HeaderHost" Property="Margin" Value="8,5,0,6" />
                        </Trigger>
                        <!--  Role = SubMenuHeader : this is a child menu item which does not have children  -->
                        <Trigger Property="Role" Value="SubmenuHeader">
                            <Setter Property="DockPanel.Dock" Value="Top" />
                            <Setter Property="Padding" Value="0,2,0,2" />
                            <Setter Property="Grid.IsSharedSizeScope" Value="true" />
                            <Setter TargetName="IconAreaBackground" Property="Visibility" Value="Visible" />
                            <Setter TargetName="MenuItemIconColumnGroup" Property="MinWidth" Value="24" />
                            <Setter TargetName="HeaderHost" Property="Margin" Value="8,5,0,6" />
                        </Trigger>
                        <!--  Role = SubMenuItem : this is a child menu item which has children  -->
                        <Trigger Property="Role" Value="SubmenuItem">
                            <Setter Property="DockPanel.Dock" Value="Top" />
                            <Setter Property="Padding" Value="0,2,0,2" />
                            <Setter TargetName="ArrowPanel" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="IconAreaBackground" Property="Visibility" Value="Visible" />
                            <Setter TargetName="MenuItemIconColumnGroup" Property="MinWidth" Value="24" />
                            <Setter TargetName="HeaderHost" Property="Margin" Value="8,5,0,6" />
                        </Trigger>
                        <Trigger Property="IsSuspendingPopupAnimation" Value="true">
                            <Setter TargetName="SubMenuPopup" Property="PopupAnimation" Value="None" />
                        </Trigger>
                        <!--  If no Icon is present then we collapse the Icon Content  -->
                        <Trigger Property="Icon" Value="{x:Null}">
                            <Setter TargetName="Icon" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <!--  The GlyphPanel contains the CheckMark  -->
                        <Trigger Property="IsChecked" Value="true">
                            <Setter TargetName="checkedState" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger SourceName="SubMenuPopup" Property="AllowsTransparency" Value="true">
                            <Setter TargetName="SubMenu" Property="Margin" Value="0,0,3,3" />
                            <Setter TargetName="SubMenu" Property="SnapsToDevicePixels" Value="true" />
                        </Trigger>
                        <Trigger Property="IsHighlighted" Value="true">
                            <Setter TargetName="Highlight" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsChecked" Value="True" />
                                <Condition Property="IsHighlighted" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="checkedState" Property="Background" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.MenuCheckmarkBoxHottrackCenterFillKey}}" />
                            <Setter TargetName="checkedState" Property="BorderBrush" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.MenuCheckmarkBoxHottrackOuterBorderFillKey}}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Role" Value="TopLevelHeader" />
                                <Condition Property="IsHighlighted" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.DarkBrushKey}}" />
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="ContentControl" Property="Opacity" Value=".5" />
                            <Setter TargetName="Icon" Property="Opacity" Value=".5" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  *********************************  MinimizeToggleButton Style *********************************  -->
    <Style x:Key="MinimizeToggleButtonStyleKey" TargetType="{x:Type ToggleButton}">
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Foreground" Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igOutlookBar:XamOutlookBar}, ResourceId=GlyphBackgroundBrush}}" />
        <Setter Property="ToolTip" Value="{x:Static igOutlookBar:ResourcesOutlookBar.MinimizeButtonMinimizeTooltip}" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="MinWidth" Value="24" />
        <Setter Property="MinHeight" Value="24" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border x:Name="glyphArea"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Opacity="{TemplateBinding Opacity}"
                            Padding="{TemplateBinding Padding}"
                            RenderTransformOrigin="0.5,0.5">
                        <Grid Width="18" Height="18">
                            <Path Width="6"
                                  Height="10"
                                  Data="{StaticResource MinimiTogglezeIcon}"
                                  Fill="{TemplateBinding Foreground}"
                                  Stretch="Fill" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="glyphArea" Property="LayoutTransform">
                                <Setter.Value>
                                    <RotateTransform Angle="180" />
                                </Setter.Value>
                            </Setter>
                            <Setter Property="ToolTip" Value="{x:Static igOutlookBar:ResourcesOutlookBar.MinimizeButtonExpandTooltip}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                 <Setter Property="Background" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.ContentAreaDropdownHottrackCenterFillKey}}" />
                <Setter Property="Foreground" Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igOutlookBar:XamOutlookBar}, ResourceId=GlyphHoverBackgroundBrush}}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.ContentAreaDropdownPressedCenterFillKey}}" />
                <Setter Property="Foreground" Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igOutlookBar:XamOutlookBar}, ResourceId=GlyphPressedBackgroundBrush}}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--  *********************************  OutlookBarGroup Style *********************************  -->
    <Style x:Key="OutlookBarGroupStyle" TargetType="{x:Type igOutlookBar:OutlookBarGroup}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="ToolTipService.IsEnabled" Value="False" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="MinWidth" Value="24" />
        <Setter Property="MinHeight" Value="24" />
        <Setter Property="Background" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.NavigationGroupHeaderNormalCenterFillKey}}" />
        <Setter Property="BorderBrush" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.OutlookBarGroupNormalBorderFillKey}}" />
        <Setter Property="Foreground" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.NavigationGroupHeaderNormalTextFillKey}}" />
        <Setter Property="SmallImage" Value="{StaticResource DefaultSmallImage}" />
        <Setter Property="LargeImage" Value="{StaticResource DefaultLargeImage}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type igOutlookBar:OutlookBarGroup}">
                    <Grid>
                        <Border x:Name="Bd"
                                Margin="1 1 1 0"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition x:Name="ImageColumn" Width="Auto" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <!--<ContentControl x:Name="ImageControl" Foreground="{TemplateBinding Foreground}" VerticalAlignment="Center" HorizontalAlignment="Center"  Grid.Column="0" MaxHeight="24" MaxWidth="24" MinHeight="16" MinWidth="16" >-->

                                <Image x:Name="PART_Image"
                                       Grid.Column="0"
                                       MinWidth="16"
                                       MinHeight="16"
                                       MaxWidth="24"
                                       MaxHeight="24"
                                       HorizontalAlignment="Center"
                                       VerticalAlignment="Center"
                                       Source="{TemplateBinding LargeImage}"
                                       Stretch="Uniform" />

                                <!--</ContentControl>-->
                                <ContentPresenter x:Name="PART_Header"
                                                  Grid.Column="1"
                                                  Margin="4,0,0,1"
                                                  VerticalAlignment="Center"
                                                  Content="{TemplateBinding Header}"
                                                  ContentTemplate="{TemplateBinding HeaderTemplate}"
                                                  ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}" />
                            </Grid>
                        </Border>
                        <Rectangle x:Name="focusRec"
                                   Stroke="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.GroupInnerBorderFillKey}}"
                                   StrokeThickness="0"
                                   Visibility="Collapsed" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=LargeImage, RelativeSource={RelativeSource Self}}" Value="{x:Null}" />
                                <Condition Binding="{Binding Path=Location, RelativeSource={RelativeSource Self}}" Value="NavigationGroupArea" />
                                <Condition Binding="{Binding Path=OutlookBar.ReserveSpaceForLargeImage, RelativeSource={RelativeSource Self}}" Value="True" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="PART_Header" Property="Margin" Value="12,0,0,1" />
                            <Setter TargetName="ImageColumn" Property="Width" Value="Auto" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=LargeImage, RelativeSource={RelativeSource Self}}" Value="{x:Null}" />
                                <Condition Binding="{Binding Path=Location, RelativeSource={RelativeSource Self}}" Value="NavigationGroupArea" />
                                <Condition Binding="{Binding Path=OutlookBar.ReserveSpaceForLargeImage, RelativeSource={RelativeSource Self}}" Value="False" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="ImageColumn" Property="Width" Value="0" />
                        </MultiDataTrigger>
                        <Trigger Property="Location" Value="NavigationGroupArea">
                            <Setter TargetName="PART_Header" Property="Visibility" Value="Visible" />
                            <Setter TargetName="PART_Image" Property="Source" Value="{Binding Path=LargeImage, RelativeSource={x:Static RelativeSource.TemplatedParent}}" />
                        </Trigger>
                        <DataTrigger Binding="{Binding Path=OutlookBar.ShowGroupHeaderAsToolTip, RelativeSource={RelativeSource Self}}" Value="True">
                            <Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Self}, Path=Header}" />             
                        </DataTrigger>
                        <Trigger Property="Location" Value="OverflowContextMenu">
                            <Setter TargetName="PART_Image" Property="Source" Value="{Binding Path=SmallImageResolved, RelativeSource={x:Static RelativeSource.TemplatedParent}}" />
                            <Setter TargetName="PART_Image" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Background" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.NavigationGroupHeaderActiveCenterFillKey}}" />
                            <!--<Setter Property="BorderBrush" Value="{DynamicResource NavigationGroupHeaderActiveCenterBorderKey}" />-->
                            <Setter TargetName="PART_Header" Property="TextElement.Foreground" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.NavigationGroupHeaderActiveTextFillKey}}" />
                            <!--<Setter TargetName="PART_Header" Property="TextElement.FontWeight" Value="Bold" />-->
                            <!--<Setter TargetName="ImageControl" Property="Foreground" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.NavigationGroupHeaderActiveTextFillKey}}" />-->
                        </Trigger>
                        <DataTrigger Binding="{Binding Path=OutlookBar.IsMinimized, RelativeSource={RelativeSource Self}}" Value="True">
                            <Setter TargetName="PART_Header" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="PART_Image" Property="Source" Value="{Binding Path=LargeImage, RelativeSource={x:Static RelativeSource.TemplatedParent}}" />
                            <Setter Property="ToolTipService.IsEnabled" Value="{Binding Path=OutlookBar.ShowToolTips, RelativeSource={RelativeSource Self}}" />
                        </DataTrigger>
                        <Trigger Property="Location" Value="OverflowArea">
                            <Setter TargetName="PART_Image" Property="Source" Value="{Binding Path=SmallImageResolved, RelativeSource={x:Static RelativeSource.TemplatedParent}}" />
                            <Setter TargetName="PART_Header" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="PART_Image" Property="Margin" Value="4,2" />
                            <Setter TargetName="PART_Image" Property="MaxHeight" Value="16" />
                            <Setter TargetName="PART_Image" Property="MaxWidth" Value="16" />
                            <Setter TargetName="Bd" Property="Margin" Value="1 1 0 1" />
                            <Setter Property="ToolTipService.IsEnabled" Value="{Binding Path=OutlookBar.ShowToolTips, RelativeSource={RelativeSource Self}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseOverGroup}" Value="True" />
                    <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsSelected}" Value="False" />
                </MultiDataTrigger.Conditions>
                <Setter Property="Background" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.NavigationGroupHeaderHottrackCenterFillKey}}" />
                <!--<Setter Property="BorderBrush" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.MenuCheckmarkBoxHottrackOuterBorderFillKey}}" />-->
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseOverGroup}" Value="True" />
                    <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsSelected}" Value="True" />
                </MultiDataTrigger.Conditions>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseOverGroup}" Value="True" />
                    <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseCaptured}" Value="True" />
                    <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsSelected}" Value="False" />
                </MultiDataTrigger.Conditions>
                <Setter Property="Background" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.NavigationGroupHeaderPressedCenterFillKey}}" />
                <!--<Setter Property="BorderBrush" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.MenuItemHottrackOuterBorderFillKey}}" />-->
                <Setter Property="Foreground" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.DarkBrushKey}}" />
            </MultiDataTrigger>
        </Style.Triggers>
    </Style>
    <Style BasedOn="{StaticResource OutlookBarGroupStyle}" TargetType="{x:Type igOutlookBar:OutlookBarGroup}" />

    <!--  *********************************  SelectedGroupHeader Style *********************************  -->
    <Style x:Key="SelectedGroupHeaderStyle" TargetType="{x:Type igOutlookBar:SelectedGroupHeader}">
        <Style.Resources>
            <RotateTransform x:Key="MinimizeOnRightTransform" Angle="180" />
        </Style.Resources>
        <Setter Property="Background" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.CurrentGroupHeaderCenterFillKey}}" />
        <Setter Property="BorderBrush" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.GroupInnerBorderFillKey}}" />
        <Setter Property="Foreground" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.MenuCheckmarkBoxHottrackOuterBorderFillKey}}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Padding" Value="7 4 8 3" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type igOutlookBar:SelectedGroupHeader}">
                    <Grid>
                        <Border Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <ContentPresenter x:Name="ContentPresenterHeader"
                                                  Grid.Column="0"
                                                  Margin="{TemplateBinding Padding}"
                                                  Content="{Binding Path=(igOutlookBar:XamOutlookBar.OutlookBar).SelectedGroup.Header, RelativeSource={RelativeSource Self}}" />
                                <ToggleButton x:Name="MinimizeButton"
                                              Grid.Column="1"
                                              IsChecked="{Binding Path=(igOutlookBar:XamOutlookBar.OutlookBar).IsMinimized, RelativeSource={RelativeSource Self}}"
                                              Style="{DynamicResource MinimizeToggleButtonStyleKey}" />
                            </Grid>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding Path=OutlookBar.AllowMinimized, RelativeSource={RelativeSource TemplatedParent}}" Value="False">
                            <Setter TargetName="MinimizeButton" Property="Visibility" Value="Hidden" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Path=OutlookBar.IsMinimized, RelativeSource={RelativeSource TemplatedParent}}" Value="True">
                            <Setter TargetName="ContentPresenterHeader" Property="Visibility" Value="Collapsed" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Path=OutlookBar.VerticalSplitterLocation, RelativeSource={RelativeSource TemplatedParent}}" Value="Left">
                            <Setter TargetName="MinimizeButton" Property="LayoutTransform" Value="{StaticResource MinimizeOnRightTransform}" />
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style BasedOn="{StaticResource SelectedGroupHeaderStyle}" TargetType="{x:Type igOutlookBar:SelectedGroupHeader}" />

    <!--  *********************************  HorizontalSplitter Style *********************************  -->
    <Style x:Key="HorizontalSplitterStyleKey" TargetType="{x:Type Thumb}">
        <Setter Property="Background" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.SplitterCenterFillKey}}" />
        <Setter Property="Foreground" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.GlyphThemeForegroundFillKey}}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Padding" Value="0 2" />
        <Setter Property="MinHeight" Value="20" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Grid>
                        <Border Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" />
                        <Grid Margin="{TemplateBinding Padding}"
                              HorizontalAlignment="Center"
                              VerticalAlignment="Center">
                            <Path x:Name="foregroundGlyph"
                                  Width="15"
                                  Height="3"
                                  Data="{StaticResource SplitterIcon}"
                                  Fill="{TemplateBinding Foreground}"
                                  Opacity="1"
                                  Stretch="Fill" />
                        </Grid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igOutlookBar:XamOutlookBar}, ResourceId=HorizontalSplitterHoverBackgroundBrush}}" />
            </Trigger>
            <Trigger Property="IsDragging" Value="True">
                <Setter Property="Background" Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igOutlookBar:XamOutlookBar}, ResourceId=HorizontalSplitterSelectedBackgroundBrush}}" />
                <Setter Property="Foreground" Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igOutlookBar:XamOutlookBar}, ResourceId=GlyphPressedBackgroundBrush}}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--  *********************************  OverflowMenuSeparator Style *********************************  -->
    <Style x:Key="OverflowMenuSeparatorStyleKey" TargetType="{x:Type Separator}">
        <Setter Property="Height" Value="1" />
        <Setter Property="Background" Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igOutlookBar:XamOutlookBar}, ResourceId=MenuItemVerticalLineBrush}}" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Separator">
                    <Grid Background="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.MenuCenterFillKey}}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition x:Name="iconColumn"
                                              Width="Auto"
                                              MinWidth="24"
                                              SharedSizeGroup="MenuItemIconColumnGroup" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Border x:Name="IconAreaBackground"
                                Background="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.MenuIconGroupCenterFillKey}}"
                                BorderBrush="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.MenuIconGroupOuterBorderFillKey}}"
                                BorderThickness="0" />
                        <Border Grid.Column="1"
                                Height="{TemplateBinding Height}"
                                Background="{TemplateBinding Background}"
                                SnapsToDevicePixels="True" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  *********************************  GroupOverflowAreaS Style - Add or Remove Buttons menu items *********************************  -->
    <Style x:Key="GroupOverflowAreaStyle" TargetType="{x:Type igOutlookBar:GroupOverflowArea}">
        <Setter Property="Background" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.NavigationGroupHeaderNormalCenterFillKey}}" />
        <Setter Property="Foreground" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.HeaderDarkTextFillKey}}" />
        <Setter Property="FontFamily" Value="{StaticResource FontFamily}" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type igOutlookBar:GroupOverflowArea}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <!--  Ovwerflow Toolbar  -->
                            <igOutlookBar:GroupsPresenter x:Name="PART_OverflowGroups"
                                                          Grid.Column="0"
                                                          ItemsSource="{Binding RelativeSource={RelativeSource Self}, Path=(igOutlookBar:XamOutlookBar.OutlookBar).OverflowAreaGroups}"
                                                          Orientation="Horizontal" />
                            <!--  Overflow Menu  -->
                            <Menu x:Name="MainOverflowMenu"
                                  Grid.Column="1"
                                  VerticalAlignment="Stretch"
                                  VerticalContentAlignment="Stretch"
                                  Background="Transparent">
                                <Menu.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <Grid />
                                    </ItemsPanelTemplate>
                                </Menu.ItemsPanel>
                                <MenuItem x:Name="PART_OverflowMenu"
                                          VerticalContentAlignment="Stretch"
                                          Style="{DynamicResource {x:Static igOutlookBar:XamOutlookBar.OverflowMenuButtonStyleKey}}"
                                          ToolTip="{x:Static igOutlookBar:ResourcesOutlookBar.OverflowMenuButtonTooltip}">

                                    <MenuItem Command="{x:Static igOutlookBar:OutlookBarCommands.ShowMoreButtonsCommand}"
                                              CommandTarget="{Binding Path=(igOutlookBar:XamOutlookBar.OutlookBar), RelativeSource={RelativeSource Self}}"
                                              Header="{x:Static igOutlookBar:ResourcesOutlookBar.ShowMoreButtonsMenuItemHeader}"
                                              Style="{DynamicResource {x:Static igOutlookBar:XamOutlookBar.OverflowMenuItemStyleKey}}">
                                        <MenuItem.Icon>
                                            <Grid Width="10"
                                                  Height="10"
                                                  HorizontalAlignment="Left"
                                                  Background="Transparent">
                                                <Path x:Name="ArrowUp"
                                                      Width="10"
                                                      Height="6"
                                                      HorizontalAlignment="Center"
                                                      Data="{StaticResource VArrowTop}"
                                                      Fill="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igOutlookBar:XamOutlookBar},ResourceId=GlyphBackgroundBrush}}"
                                                      Stretch="Fill" />
                                            </Grid>
                                        </MenuItem.Icon>
                                    </MenuItem>
                                    <MenuItem Command="{x:Static igOutlookBar:OutlookBarCommands.ShowFewerButtonsCommand}"
                                              CommandTarget="{Binding Path=(igOutlookBar:XamOutlookBar.OutlookBar), RelativeSource={RelativeSource Self}}"
                                              Header="{x:Static igOutlookBar:ResourcesOutlookBar.ShowFewerButtonsMenuItemHeader}"
                                              Style="{DynamicResource {x:Static igOutlookBar:XamOutlookBar.OverflowMenuItemStyleKey}}">
                                        <MenuItem.Icon>
                                            <Grid Width="10"
                                                  Height="10"
                                                  HorizontalAlignment="Left"
                                                  Background="Transparent">
                                                <Path x:Name="ArrowDown"
                                                      Width="10"
                                                      Height="6"
                                                      HorizontalAlignment="Center"
                                                      Data="{StaticResource VArrowDown}"
                                                      Fill="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igOutlookBar:XamOutlookBar},ResourceId=GlyphBackgroundBrush}}"
                                                      Stretch="Fill" />
                                            </Grid>
                                        </MenuItem.Icon>                                       
                                    </MenuItem>
                                    <MenuItem Command="{x:Static igOutlookBar:OutlookBarCommands.ShowOptionsCommand}"
                                              CommandTarget="{Binding Path=(igOutlookBar:XamOutlookBar.OutlookBar), RelativeSource={RelativeSource Self}}"
                                              Header="{x:Static igOutlookBar:ResourcesOutlookBar.NavigationAreaOptionsMenuItemHeader}"
                                              Style="{DynamicResource {x:Static igOutlookBar:XamOutlookBar.OverflowMenuItemStyleKey}}" />

                                    <MenuItem x:Name="PART_AddRemoveMenu"
                                              Header="{x:Static igOutlookBar:ResourcesOutlookBar.AddOrRemoveButtonsMenuItemHeader}"
                                              Style="{DynamicResource {x:Static igOutlookBar:XamOutlookBar.OverflowMenuItemStyleKey}}" />
                                    <Separator x:Name="OverflowMenuSeparator" Style="{DynamicResource OverflowMenuSeparatorStyleKey}" />
                                </MenuItem>
                            </Menu>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>                    
                        <DataTrigger Binding="{Binding Path=(igOutlookBar:XamOutlookBar.OutlookBar).ContextMenuGroups.Count, RelativeSource={RelativeSource Self}}" Value="0">
                            <Setter TargetName="OverflowMenuSeparator" Property="Visibility" Value="Collapsed" />
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style BasedOn="{StaticResource GroupOverflowAreaStyle}" TargetType="{x:Type igOutlookBar:GroupOverflowArea}" />

    <!--  *********************************  TextBlock Style  *********************************  -->
    <Style x:Key="TextBlockStyle" TargetType="TextBlock">
        <Setter Property="Foreground" Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igOutlookBar:XamOutlookBar}, ResourceId=ForegroundBrush}}" />
        <Setter Property="FontSize" Value="{StaticResource FontSize}" />
        <Setter Property="FontFamily" Value="{StaticResource FontFamily}" />
    </Style>

    <!--  *********************************  OutlookBarGroupProxy Style *********************************  -->
    <DataTemplate DataType="{x:Type igOutlookBar:Internal.OutlookBarGroupProxy}">
        <Border Name="Border">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition />
                </Grid.ColumnDefinitions>
                <CheckBox x:Name="Checked"
                          Grid.Column="0"
                          IsChecked="{Binding Path=IsSelected}" />
                <ContentPresenter x:Name="Header"
                                  Grid.Column="1"
                                  Margin="2,0,2,0"
                                  VerticalAlignment="Center"
                                  Content="{Binding Path=GroupHeader}" />
            </Grid>
        </Border>
    </DataTemplate>

    <!--  *********************************  NavigationPaneOptionsControl Style *********************************  -->
    <Style x:Key="NavigationPaneOptionsControlStyle" TargetType="{x:Type igOutlookBar:NavigationPaneOptionsControl}">
        <Setter Property="Background" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.XamOutlookBarBackgroundFillKey}}" />
        <Setter Property="MinWidth" Value="400" />
        <Setter Property="Height" Value="200" />
        <Setter Property="Padding" Value="10" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type igOutlookBar:NavigationPaneOptionsControl}">
                    <ControlTemplate.Resources>
                        <Style x:Key="ButtonStyle" TargetType="{x:Type Button}">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.HeaderDarkTextFillKey}}" />
                            <Setter Property="Background" Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igOutlookBar:XamOutlookBar}, ResourceId=ButtonBackgroundBrush}}" />
                            <Setter Property="BorderBrush" Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igOutlookBar:XamOutlookBar}, ResourceId=ButtonBorderBrush}}" />
                            <Setter Property="FontSize" Value="{StaticResource FontSize}" />
                            <Setter Property="FontFamily" Value="{StaticResource FontFamily}" />
                            <Setter Property="Padding" Value="7,0,7,2" />
                            <Setter Property="MinHeight" Value="24" />
                            <Setter Property="MinWidth" Value="30" />
                            <Setter Property="BorderThickness" Value="{StaticResource DefaultBorderThickness}" />
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type Button}">
                                        <Grid x:Name="Root">
                                            <Border x:Name="Bd"
                                                    Background="{TemplateBinding Background}"
                                                    BorderBrush="{TemplateBinding BorderBrush}"
                                                    BorderThickness="{TemplateBinding BorderThickness}"
                                                    CornerRadius="{StaticResource CornerRadius}">
                                                <ContentPresenter Margin="{TemplateBinding Padding}"
                                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                                  Content="{TemplateBinding Content}"
                                                                  ContentTemplate="{TemplateBinding ContentTemplate}"/>
                                              
                                            </Border>
                                        </Grid>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsEnabled" Value="False">
                                                <Setter TargetName="Root" Property="Opacity" Value="0.3" />
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                            <Style.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igOutlookBar:XamOutlookBar}, ResourceId=ButtonHoverBackgroundBrush}}" />
                                    <Setter Property="BorderBrush" Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igOutlookBar:XamOutlookBar}, ResourceId=ButtonHoverBorderBrush}}" />
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter Property="Background" Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igOutlookBar:XamOutlookBar}, ResourceId=ButtonPressedBackgroundBrush}}" />
                                    <Setter Property="BorderBrush" Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igOutlookBar:XamOutlookBar}, ResourceId=ButtonPressedBorderBrush}}" />
                                </Trigger>
                                <Trigger Property="IsFocused" Value="True">
                                    <Setter Property="Background" Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igOutlookBar:XamOutlookBar}, ResourceId=ButtonBackgroundBrush}}" />
                                    <Setter Property="BorderBrush" Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igOutlookBar:XamOutlookBar}, ResourceId=ButtonFocusedBorderBrush}}" />
                             </Trigger>
                            </Style.Triggers>
                        </Style>
                        <Style BasedOn="{StaticResource ButtonStyle}" TargetType="{x:Type Button}" />

                        <Style TargetType="{x:Type ListBoxItem}">
                            <Setter Property="Background" Value="Transparent" />
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.HeaderDarkTextFillKey}}" />
                            <Setter Property="FontSize" Value="{StaticResource FontSize}" />
                            <Setter Property="FontFamily" Value="{StaticResource FontFamily}" />
                            <Setter Property="MinHeight" Value="22" />
                            <Setter Property="Padding" Value="6,2" />
                            <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
                            <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                        <Border x:Name="Bd"
                                                Background="{TemplateBinding Background}"
                                                BorderBrush="{TemplateBinding BorderBrush}"
                                                BorderThickness="0"
                                                Padding="{TemplateBinding Padding}"
                                                SnapsToDevicePixels="true">
                                            <ContentControl x:Name="contentControl"
                                                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                                <ContentPresenter />
                                            </ContentControl>
                                        </Border>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsMouseOver" Value="true">
                                                <Setter TargetName="Bd" Property="BorderBrush" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.GroupInnerBorderFillKey}}" />
                                                <!--<Setter Property="BorderThickness" Value="{StaticResource DefaultBorderThickness}" />-->
                                                <Setter TargetName="Bd" Property="Background" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.ContentAreaDropdownHottrackCenterFillKey}}" />
                                            </Trigger>
                                            <Trigger Property="IsSelected" Value="true">
                                                <Setter TargetName="Bd" Property="BorderBrush" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.ContentAreaDropdownPressedCenterFillKey}}" />
                                                <Setter TargetName="contentControl" Property="Foreground" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.NavigationGroupHeaderActiveTextFillKey}}" />
                                                <Setter TargetName="Bd" Property="Background" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.ContentAreaDropdownPressedCenterFillKey}}" />
                                                <!--<Setter Property="Foreground" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.HeaderDarkTextFillKey}}" />-->
                                            </Trigger>
                                            <!--<MultiTrigger>
                                                <MultiTrigger.Conditions>
                                                    <Condition Property="IsSelected" Value="true" />
                                                    <Condition Property="Selector.IsSelectionActive" Value="false" />
                                                </MultiTrigger.Conditions>
                                                 <Setter Property="Foreground" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.HeaderDarkTextFillKey}}" />
                                            </MultiTrigger>-->
                                            <Trigger Property="IsEnabled" Value="false">
                                                <Setter TargetName="Bd" Property="Opacity" Value="0.3" />
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>

                        <Style TargetType="{x:Type ListBox}">
                            <Setter Property="Background" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.XamOutlookBarBackgroundFillKey}}" />
                            <Setter Property="BorderBrush" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.XamOutlookBarOuterBorderFillKey}}" />
                            <Setter Property="BorderThickness" Value="1" />
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.HeaderDarkTextFillKey}}" />
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type ListBox}">
                                        <Border x:Name="Bd"
                                                Background="{TemplateBinding Background}"
                                                BorderBrush="{TemplateBinding BorderBrush}"
                                                BorderThickness="{TemplateBinding BorderThickness}"
                                                Padding="1"
                                                SnapsToDevicePixels="true">
                                            <ScrollViewer Focusable="false"
                                                          Padding="{TemplateBinding Padding}"
                                                          Style="{StaticResource ScrollViewerStyle}">
                                                <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                            </ScrollViewer>
                                        </Border>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsEnabled" Value="false">
                                                <Setter TargetName="Bd" Property="Opacity" Value="0.3" />
                                            </Trigger>
                                            <Trigger Property="IsGrouping" Value="true">
                                                <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>

                        <Style x:Key="EmptyCheckBoxFocusVisual">
                            <Setter Property="Control.Template">
                                <Setter.Value>
                                    <ControlTemplate>
                                        <Rectangle Margin="1"
                                                   SnapsToDevicePixels="true"
                                                   Stroke="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.ContentAreaDropdownPressedCenterFillKey}}"
                                                   StrokeThickness="1" />

                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>

                        <Style x:Key="CheckRadioFocusVisual">
                            <Setter Property="Control.Template">
                                <Setter.Value>
                                    <ControlTemplate>
                                        <Rectangle Margin="14,0,0,0"
                                                   SnapsToDevicePixels="true"
                                                   Stroke="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.ContentAreaDropdownPressedCenterFillKey}}"
                                                   StrokeThickness="1" />

                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>

                        <Style TargetType="{x:Type CheckBox}">
                            <Setter Property="Foreground" Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igOutlookBar:XamOutlookBar}, ResourceId=ForegroundBrush}}" />
                            <Setter Property="Background" Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igOutlookBar:XamOutlookBar}, ResourceId=CheckBoxBackgroundBrush}}" />
                            <Setter Property="BorderBrush" Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igOutlookBar:XamOutlookBar}, ResourceId=CheckBoxBorderBrush}}" />
                            <Setter Property="FontSize" Value="{StaticResource FontSize}" />
                            <Setter Property="FontFamily" Value="{StaticResource FontFamily}" />
                            <Setter Property="HorizontalContentAlignment" Value="Left" />
                            <Setter Property="VerticalContentAlignment" Value="Center" />
                            <Setter Property="Padding" Value="6,0,0,0" />
                            <Setter Property="MinHeight" Value="15" />
                            <Setter Property="MinWidth" Value="15" />
                            <Setter Property="BorderThickness" Value="{StaticResource DefaultBorderThickness}" />
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type CheckBox}">
                                        <BulletDecorator VerticalAlignment="Center"
                                                         Background="Transparent"
                                                         SnapsToDevicePixels="true">
                                            <BulletDecorator.Bullet>
                                                <Grid x:Name="mainGrid">
                                                    <Rectangle x:Name="normal"
                                                               Width="15"
                                                               Height="15"
                                                               Fill="{TemplateBinding Background}"
                                                               Opacity="1"
                                                               Stroke="{TemplateBinding BorderBrush}"
                                                               StrokeThickness="1" />
                                                    <Path x:Name="checkBox"
                                                          Width="9"
                                                          Height="8"
                                                          Data="{StaticResource CheckBoxCheck}"
                                                          Fill="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igOutlookBar:XamOutlookBar}, ResourceId=CheckBoxCheckBackgroundBrush}}"
                                                          Stretch="Fill"
                                                          Visibility="Collapsed" />
                                                    <Rectangle x:Name="IndeterminateCheck"
                                                               Width="7"
                                                               Height="7"
                                                               Fill="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igOutlookBar:XamOutlookBar}, ResourceId=CheckBoxCheckBackgroundBrush}}"
                                                               Opacity="0" />
                                                </Grid>
                                            </BulletDecorator.Bullet>
                                            <ContentPresenter Margin="{TemplateBinding Padding}"
                                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                              RecognizesAccessKey="True"
                                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                        </BulletDecorator>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsEnabled" Value="false">
                                                <Setter TargetName="mainGrid" Property="Opacity" Value="0.3" />
                                                <!--<Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}"/>
                                                <Setter Property="Background" Value="{StaticResource DisabledBackgroundBrush}"/>
                                                <Setter Property="BorderBrush" Value="{StaticResource DisabledBorderBrush}"/>-->
                                            </Trigger>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter Property="Background" Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igOutlookBar:XamOutlookBar}, ResourceId=CheckBoxHoverBackgroundBrush}}" />
                                                <Setter Property="BorderBrush" Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igOutlookBar:XamOutlookBar}, ResourceId=CheckBoxHoverBorderBrush}}" />

                                            </Trigger>
                                            <Trigger Property="IsPressed" Value="True">
                                                <!--<Setter Property="Stroke" TargetName="normal" Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igOutlookBar:XamOutlookBar}, ResourceId=CheckBoxPressedBackgroundBrush}}"/>-->
                                                <Setter Property="Background" Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igOutlookBar:XamOutlookBar}, ResourceId=CheckBoxPressedBackgroundBrush}}" />
                                                <Setter Property="BorderBrush" Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igOutlookBar:XamOutlookBar}, ResourceId=CheckBoxPressedBorderBrush}}" />

                                            </Trigger>
                                            <Trigger Property="IsChecked" Value="True">
                                                <Setter TargetName="checkBox" Property="Visibility" Value="Visible" />
                                                <Setter Property="Background" Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igOutlookBar:XamOutlookBar}, ResourceId=CheckBoxPressedBackgroundBrush}}" />
                                                <Setter Property="BorderBrush" Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igOutlookBar:XamOutlookBar}, ResourceId=CheckBoxPressedBorderBrush}}" />
                                            </Trigger>
                                            <Trigger Property="IsChecked" Value="{x:Null}">
                                                <Setter TargetName="IndeterminateCheck" Property="Opacity" Value="1" />
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </ControlTemplate.Resources>

                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Padding="{TemplateBinding Padding}">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <DockPanel Grid.ColumnSpan="2">
                                <Label Content="{x:Static igOutlookBar:ResourcesOutlookBar.NavigationPaneOptionsControlOrderLabel}"
                                       DockPanel.Dock="Left"
                                       FontSize="12"
                                       Foreground="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igOutlookBar:XamOutlookBar},ResourceId=ForegroundBrush}}" />
                            </DockPanel>
                            <ListBox x:Name="PART_ListBox"
                                     Grid.Row="1"
                                     Grid.RowSpan="3"
                                     Height="116"
                                     Margin="0,2,0,8" />

                            <Button x:Name="btnMoveUp"
                                    Grid.Row="1"
                                    Grid.Column="1"
                                    Width="100"
                                    Margin="0,2,0,0"
                                    HorizontalAlignment="Right"
                                    VerticalAlignment="Top"
                                    BorderThickness="1"
                                    Command="{x:Static igOutlookBar:NavigationPaneOptionsControlCommands.MoveSelectedUpCommand}"
                                    Content="{x:Static igOutlookBar:ResourcesOutlookBar.NavigationPaneOptionsControlMoveUpButton}"
                                    Style="{StaticResource ButtonStyle}" />

                            <Button x:Name="btnMoveDn"
                                    Grid.Row="2"
                                    Grid.Column="1"
                                    Width="100"
                                    Margin="0,2,0,0"
                                    HorizontalAlignment="Right"
                                    VerticalAlignment="Top"
                                    Command="{x:Static igOutlookBar:NavigationPaneOptionsControlCommands.MoveSelectedDownCommand}"
                                    Content="{x:Static igOutlookBar:ResourcesOutlookBar.NavigationPaneOptionsControlMoveDownButton}"
                                    Style="{StaticResource ButtonStyle}" />

                            <Button x:Name="btnReset"
                                    Grid.Row="3"
                                    Grid.Column="1"
                                    Width="100"
                                    Margin="8,0,0,8"
                                    HorizontalAlignment="Right"
                                    VerticalAlignment="Bottom"
                                    Command="{x:Static igOutlookBar:NavigationPaneOptionsControlCommands.ResetGroupSequenceAndVisibilityCommand}"
                                    Content="{x:Static igOutlookBar:ResourcesOutlookBar.NavigationPaneOptionsControlResetButton}"
                                    Style="{StaticResource ButtonStyle}" />

                            <Button x:Name="btnOK"
                                    Grid.Row="4"
                                    Grid.Column="0"
                                    Width="100"
                                    Margin="0,0,0,8"
                                    HorizontalAlignment="Right"
                                    Command="{x:Static igOutlookBar:NavigationPaneOptionsControlCommands.CommitChangesAndCloseCommand}"
                                    Content="{x:Static igOutlookBar:ResourcesOutlookBar.NavigationPaneOptionsControlOkButton}"
                                    IsDefault="True"
                                    Style="{StaticResource ButtonStyle}" />

                            <Button x:Name="btnCancel"
                                    Grid.Row="4"
                                    Grid.Column="1"
                                    Width="100"
                                    Margin="5,0,0,8"
                                    HorizontalAlignment="Right"
                                    Content="{x:Static igOutlookBar:ResourcesOutlookBar.NavigationPaneOptionsControlCancelButton}"
                                    IsCancel="True"
                                    Style="{StaticResource ButtonStyle}" />
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style BasedOn="{StaticResource NavigationPaneOptionsControlStyle}" TargetType="{x:Type igOutlookBar:NavigationPaneOptionsControl}" />

    <!--  *********************************  NavigationPaneToggleButton Style *********************************  -->
    <Style x:Key="{x:Static igOutlookBar:XamOutlookBar.NavigationPaneToggleButtonStyleKey}" TargetType="{x:Type ToggleButton}">
        <Setter Property="Background" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.MinimizedNavigationPaneNormalFillKey}}" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="ToolTip" Value="{x:Static igOutlookBar:ResourcesOutlookBar.NavigationPaneMinimizedTooltip}" />
        <Setter Property="Content" Value="{x:Static igOutlookBar:ResourcesOutlookBar.NavigationPaneMinimizedText}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Padding" Value="10,0" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Grid>
                        <Border x:Name="Border"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Padding="{TemplateBinding Padding}" />
                        <Rectangle x:Name="highlight" />
                        <ContentPresenter x:Name="header"
                                          Margin="{TemplateBinding Padding}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          RecognizesAccessKey="True"
                                          TextBlock.TextAlignment="Center"
                                          TextElement.Foreground="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.MinimizedNavigationPaneNormalTextFillKey}}" />
                    </Grid>
                    <ControlTemplate.Triggers>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=(igOutlookBar:XamOutlookBar.OutlookBar).IsMinimized, RelativeSource={RelativeSource Self}}" Value="True" />
                                <Condition Binding="{Binding Path=IsMouseOver, RelativeSource={x:Static RelativeSource.Self}}" Value="True" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.MinimizedNavigationPaneHottrackFillKey}}" />
                            <Setter Property="BorderBrush" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.OutlookBarGroupNormalBorderFillKey}}" />
                            <Setter TargetName="header" Property="TextElement.Foreground" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.MinimizedNavigationPaneNormalTextFillKey}}" />
                        </MultiDataTrigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=(igOutlookBar:XamOutlookBar.OutlookBar).IsMinimized, RelativeSource={RelativeSource Self}}" Value="True" />
                                <Condition Binding="{Binding Path=IsPressed, RelativeSource={x:Static RelativeSource.Self}}" Value="True" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.MinimizedNavigationPanePressedFillKey}}" />
                            <Setter Property="BorderBrush" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.OutlookBarGroupNormalBorderFillKey}}" />
                            <Setter TargetName="header" Property="TextElement.Foreground" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.MinimizedNavigationPaneHottrackTextFillKey}}" />
                        </MultiDataTrigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=(igOutlookBar:XamOutlookBar.OutlookBar).IsMinimized, RelativeSource={RelativeSource Self}}" Value="True" />
                                <Condition Binding="{Binding Path=IsChecked, RelativeSource={x:Static RelativeSource.Self}}" Value="True" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.MinimizedNavigationPaneIsSuspendedFillKey}}" />
                            <Setter Property="BorderBrush" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.OutlookBarGroupNormalBorderFillKey}}" />
                            <Setter TargetName="header" Property="TextElement.Foreground" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.MinimizedNavigationPaneHottrackTextFillKey}}" />
                        </MultiDataTrigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="PopupResizerTemplate">
        <Border x:Name="ResizeElem"
                HorizontalAlignment="Right"
                VerticalAlignment="Bottom"
                Background="{StaticResource TransparentBrush}"
                BorderThickness="1"
                Cursor="SizeWE">
            <Grid x:Name="BelowDots"
                  Width="7"
                  Height="7"
                  Margin="0,0,2,2"
                  VerticalAlignment="Bottom">
                 <Path Width="6"
                       Height="6"
                       HorizontalAlignment="Right"
                       VerticalAlignment="Bottom"
                       Data="{StaticResource PopupResizerIcon}"
                       Fill="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igOutlookBar:XamOutlookBar},ResourceId=GlyphBackgroundBrush}}"
                       Stretch="Fill" />
                <Rectangle x:Name="TouchableZone"
                           Fill="{StaticResource TransparentBrush}" />
            </Grid>
        </Border>
    </ControlTemplate>

    <!--  *********************************  PopupResizerBar Style *********************************  -->
    <Style TargetType="{x:Type igwindows:PopupResizerBar}">
        <Setter Property="Background" Value="{StaticResource TransparentBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.XamOutlookBarOuterBorderFillKey}}" />
        <Setter Property="Foreground" Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igOutlookBar:XamOutlookBar}, ResourceId=ForegroundBrush}}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Height" Value="15" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type igwindows:PopupResizerBar}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="True">
                        <igwindows:CardPanel Margin="{TemplateBinding Padding}">
                            <igwindows:CardPanel x:Name="GlyphArea">
                                <!--  the thumb is transparent and needs to be placed after the glyphs so that it is on top with respect to z-order  -->
                                <Path Width="6"
                                      Height="6"
                                      HorizontalAlignment="Right"
                                      VerticalAlignment="Bottom"
                                      Data="{StaticResource PopupResizerIcon}"
                                      Fill="{TemplateBinding BorderBrush}"
                                      Stretch="Fill" />
                                <Thumb x:Name="PART_Thumb"
                                       Margin="-1"
                                       Opacity="0" />
                            </igwindows:CardPanel>
                        </igwindows:CardPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="ResizeMode" Value="Both" />
                                <Condition Property="Location" Value="Bottom" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="PART_Thumb" Property="Cursor" Value="SizeNWSE" />
                            <Setter TargetName="GlyphArea" Property="HorizontalAlignment" Value="Right" />
                        </MultiTrigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="ResizeMode" Value="Both" />
                                <Condition Property="Location" Value="Bottom" />
                                <Condition Property="FlowDirection" Value="RightToLeft" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="PART_Thumb" Property="Cursor" Value="SizeNESW" />
                        </MultiTrigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="ResizeMode" Value="Both" />
                                <Condition Property="Location" Value="Top" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="PART_Thumb" Property="Cursor" Value="SizeNESW" />
                            <Setter TargetName="GlyphArea" Property="HorizontalAlignment" Value="Right" />
                        </MultiTrigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="ResizeMode" Value="Both" />
                                <Condition Property="Location" Value="Top" />
                                <Condition Property="FlowDirection" Value="RightToLeft" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="PART_Thumb" Property="Cursor" Value="SizeNWSE" />
                        </MultiTrigger>

                        <Trigger Property="ResizeMode" Value="VerticalOnly">
                            <Setter TargetName="PART_Thumb" Property="Cursor" Value="SizeNS" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  *********************************  SelectedGroupContent Style *********************************  -->
    <Style x:Key="SelectedGroupContentStyle" TargetType="{x:Type igOutlookBar:SelectedGroupContent}">
        <Setter Property="Background" Value="{StaticResource TransparentBrush}" />
        <Setter Property="Foreground" Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igOutlookBar:XamOutlookBar}, ResourceId=ForegroundBrush}}" />
        <Setter Property="FontFamily" Value="{StaticResource FontFamily}" />
        <Setter Property="FontSize" Value="{StaticResource FontSize}" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type igOutlookBar:SelectedGroupContent}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                        <Grid>
                            <ContentPresenter x:Name="PART_SelectedGroupContentPresenter"
                                              Margin="{TemplateBinding Padding}"
                                              Content="{Binding Path=(igOutlookBar:XamOutlookBar.OutlookBar).SelectedGroupContent, RelativeSource={RelativeSource Self}}"
                                              ContentTemplate="{Binding Path=(igOutlookBar:XamOutlookBar.OutlookBar).SelectedGroupContentTemplate, RelativeSource={RelativeSource Self}}"
                                              ContentTemplateSelector="{Binding Path=(igOutlookBar:XamOutlookBar.OutlookBar).SelectedGroupContentTemplateSelector, RelativeSource={RelativeSource Self}}" />
                            
                            <Popup x:Name="PART_Popup"
                                   Grid.Row="1"
                                   Placement="Right"
                                   PlacementTarget="{Binding ElementName=PART_SelectedGroupContentPresenter}"
                                   StaysOpen="False">
                                <Border Background="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.MinimizedNavigationPopupFillKey}}"
                                        BorderBrush="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.MinimizedNavigationPopupBorderFillKey}}"
                                        BorderThickness="1">
                                    <Border Margin="12">
                                        <Grid>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="*" />
                                                <RowDefinition Height="Auto" />
                                            </Grid.RowDefinitions>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto" />
                                                <ColumnDefinition Width="Auto" />
                                            </Grid.ColumnDefinitions>
                                            <igwindows:PopupResizerDecorator x:Name="PART_PopupResizerDecorator" ResizeMode="Both">
                                                <ContentPresenter x:Name="SelectedContent"
                                                                  Content="{Binding Path=(igOutlookBar:XamOutlookBar.OutlookBar).SelectedGroupContent, RelativeSource={RelativeSource Self}}"
                                                                  ContentTemplate="{Binding Path=(igOutlookBar:XamOutlookBar.OutlookBar).SelectedGroupContentTemplate, RelativeSource={RelativeSource Self}}"
                                                                  ContentTemplateSelector="{Binding Path=(igOutlookBar:XamOutlookBar.OutlookBar).SelectedGroupContentTemplateSelector, RelativeSource={RelativeSource Self}}" />
                                            </igwindows:PopupResizerDecorator>
                                        </Grid>
                                    </Border>
                                </Border>
                            </Popup>
                            <ToggleButton x:Name="PART_ButtonShowPopup"
                                          Command="{x:Static igOutlookBar:OutlookBarCommands.ShowPopupCommand}"
                                          IsChecked="{Binding ElementName=PART_Popup, Path=IsOpen, UpdateSourceTrigger=Explicit}"
                                          Style="{DynamicResource {x:Static igOutlookBar:XamOutlookBar.NavigationPaneToggleButtonStyleKey}}"
                                          Visibility="Collapsed">
                                <ToggleButton.LayoutTransform>
                                    <RotateTransform Angle="-90" />
                                </ToggleButton.LayoutTransform>
                            </ToggleButton>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding Path=OutlookBar.IsMinimized, RelativeSource={RelativeSource TemplatedParent}}" Value="True">
                            <Setter TargetName="PART_ButtonShowPopup" Property="Visibility" Value="Visible" />
                            <Setter TargetName="PART_SelectedGroupContentPresenter" Property="Visibility" Value="Hidden" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Path=OutlookBar.IsMinimized, RelativeSource={RelativeSource TemplatedParent}}" Value="False">
                            <Setter TargetName="PART_SelectedGroupContentPresenter" Property="Visibility" Value="Visible" />
                            <Setter TargetName="PART_SelectedGroupContentPresenter" Property="Content" Value="{Binding Path=(igOutlookBar:XamOutlookBar.OutlookBar).SelectedGroupContent, RelativeSource={RelativeSource Self}}" />
                            <Setter TargetName="PART_SelectedGroupContentPresenter" Property="ContentTemplate" Value="{Binding Path=(igOutlookBar:XamOutlookBar.OutlookBar).SelectedGroupContentTemplate, RelativeSource={RelativeSource Self}}" />
                            <Setter TargetName="PART_SelectedGroupContentPresenter" Property="ContentTemplateSelector" Value="{Binding Path=(igOutlookBar:XamOutlookBar.OutlookBar).SelectedGroupContentTemplateSelector, RelativeSource={RelativeSource Self}}" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Path=OutlookBar.VerticalSplitterLocation, RelativeSource={RelativeSource TemplatedParent}}" Value="Left">
                            <Setter TargetName="PART_Popup" Property="Placement" Value="Left" />
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style BasedOn="{StaticResource SelectedGroupContentStyle}" TargetType="{x:Type igOutlookBar:SelectedGroupContent}" />

    <!--  *********************************  XamOutlookBar Style *********************************  -->
    <Style TargetType="{x:Type igOutlookBar:XamOutlookBar}">
        <Style.Resources>
            <BooleanToVisibilityConverter x:Key="booleanToVisibilityConverter" />
        </Style.Resources>
        <Setter Property="FontFamily" Value="{StaticResource FontFamily}" />
        <Setter Property="FontSize" Value="{StaticResource FontSize}" />
        <Setter Property="BorderBrush" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.XamOutlookBarOuterBorderFillKey}}" />
        <Setter Property="Background" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.XamOutlookBarBackgroundFillKey}}" />
        <Setter Property="Foreground" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.MenuItemTextNormalFillKey}}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type igOutlookBar:XamOutlookBar}">
                    <AdornerDecorator>
                        <Border VerticalAlignment="Stretch">
                            <Grid VerticalAlignment="Stretch">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <Thumb x:Name="PART_VerticalSplitter"
                                       Grid.Column="2"
                                       Style="{DynamicResource {x:Static igOutlookBar:XamOutlookBar.VerticalSplitterStyleKey}}"
                                       Visibility="{Binding IsVerticalSplitterVisible, Converter={StaticResource booleanToVisibilityConverter}, RelativeSource={RelativeSource TemplatedParent}}" />
                           
                                <Border Grid.Column="1"
                                        VerticalAlignment="Stretch"
                                        Background="{TemplateBinding Background}"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        Padding="{TemplateBinding Padding}"
                                        SnapsToDevicePixels="True">
                                    <Grid x:Name="PART_Grid">
                                        <Grid.RowDefinitions>
                                            <!--  Header Row  -->
                                            <RowDefinition Height="Auto" />
                                            <!--  Selected Group Content Row  -->
                                            <RowDefinition Height="*" MinHeight="{TemplateBinding SelectedAreaMinHeight}" />
                                            <!--  Splitter Row  -->
                                            <RowDefinition Height="Auto" />
                                            <!--  Groups Row  -->
                                            <RowDefinition Height="0" MaxHeight="{Binding Height, ElementName=PART_NavigationArea}" />
                                            <!--  Toolbar Row  -->
                                            <RowDefinition Height="Auto" />
                                        </Grid.RowDefinitions>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition />
                                            <ColumnDefinition Width="Auto" />
                                        </Grid.ColumnDefinitions>
                                        <!--  Header ================================================  -->
                                        <igOutlookBar:SelectedGroupHeader x:Name="PART_SelectedGroupHeader"
                                                                          Grid.Row="0"
                                                                          Grid.Column="1" />
                                        <!--  Selected Group Content ================================  -->
                                        <igOutlookBar:SelectedGroupContent x:Name="PART_SelectedGroupContent"
                                                                           Grid.Row="1"
                                                                           Grid.Column="1"
                                                                           MinHeight="{TemplateBinding SelectedAreaMinHeight}" />
                                        <!--  Splitter ==============================================  -->
                                        <igOutlookBar:GroupAreaSplitter x:Name="PART_Splitter"
                                                                        Grid.Row="2"
                                                                        Grid.Column="1"
                                                                        Style="{StaticResource HorizontalSplitterStyleKey}" />
                                        <!--  Groups   ==============================================  -->
                                        <igOutlookBar:GroupsPresenter x:Name="PART_NavigationArea"
                                                                      Grid.Row="3"
                                                                      Grid.Column="1"
                                                                      ItemsSource="{Binding NavigationAreaGroups, RelativeSource={RelativeSource TemplatedParent}}" />
                                        <!--  Toolbar ===============================================  -->
                                        <igOutlookBar:GroupOverflowArea x:Name="PART_OverflowArea"
                                                                        Grid.Row="4"
                                                                        Grid.Column="1" />
                                    </Grid>
                                </Border>
                                 </Grid>
                        </Border>
                    </AdornerDecorator>
                    <ControlTemplate.Triggers>
                        <Trigger SourceName="PART_Splitter" Property="IsMouseOver" Value="true">
                            <Setter Property="Cursor" Value="SizeNS" />
                        </Trigger>
                        <Trigger SourceName="PART_VerticalSplitter" Property="IsMouseOver" Value="true">
                            <Setter Property="Cursor" Value="SizeWE" />
                        </Trigger>
                        <DataTrigger Binding="{Binding VerticalSplitterLocation, RelativeSource={RelativeSource Self}}" Value="Left">
                            <Setter TargetName="PART_VerticalSplitter" Property="Grid.Column" Value="0" />
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>