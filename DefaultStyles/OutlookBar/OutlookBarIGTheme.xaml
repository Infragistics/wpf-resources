<ResourceDictionary
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:igOutlookBar="http://infragistics.com/OutlookBar"
	xmlns:igwindows="http://infragistics.com/Windows"
	xmlns:PresentationOptions="http://schemas.microsoft.com/winfx/2006/xaml/presentation/options"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

  <ResourceDictionary.MergedDictionaries>
    <ResourceDictionary Source="OutlookBarBase.xaml"/>
    <ResourceDictionary Source="OutlookBarIGTheme_Brushes.xaml"/>
  </ResourceDictionary.MergedDictionaries>

  <!-- *********************************  ToolTip Style  ********************************* -->
  <Style x:Key="ToolTipStyle" TargetType="ContentControl">
    <Setter Property="Foreground" Value="{StaticResource ThemeForegroundBrush}"/>
    <Setter Property="Background" Value="{StaticResource TooltipBackgroundBrush}"/>
    <Setter Property="BorderBrush" Value="{StaticResource TooltipBorderBrush}"/>
    <Setter Property="Padding" Value="6,2,6,2"/>
    <Setter Property="BorderThickness" Value="1"/>
    <Setter Property="HorizontalAlignment" Value="Left"/>
    <Setter Property="VerticalAlignment" Value="Center"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="ContentControl">
          <Border>
            <Border.Effect>
              <DropShadowEffect BlurRadius="15" Direction="270" ShadowDepth="1" Opacity="0.26" Color="{StaticResource Color_000}"/>
            </Border.Effect>
            <Grid>
              <Rectangle Stroke="{TemplateBinding BorderBrush}" Fill="{TemplateBinding Background}" StrokeThickness="{TemplateBinding BorderThickness}"/>
              <ContentPresenter Margin="{TemplateBinding Padding}" HorizontalAlignment="{TemplateBinding HorizontalAlignment}" VerticalAlignment="{TemplateBinding VerticalAlignment}"/>
            </Grid>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="ToolTip" BasedOn="{StaticResource ToolTipStyle}"/>

  <!-- *********************************  DefaultSmallImage Drawing  ********************************* -->
  <DrawingImage PresentationOptions:Freeze="True" x:Key="DefaultSmallImage">
    <DrawingImage.Drawing>
      <GeometryDrawing Brush="{StaticResource IconBackgroundBrush}">
        <GeometryDrawing.Geometry>
          <GeometryGroup FillRule="EvenOdd">
            <RectangleGeometry Rect="1,3,14,2" />
            <RectangleGeometry Rect="1,7,14,2" />
            <RectangleGeometry Rect="1,11,14,2" />
            <!--Using EvenOdd fill rule for the geometry drawing. Adding 4 fake elements (2 defining vertical rectangle, 2 - horizontal). 
				Using EvenOdd fill rule will negate the 4 elements to transparent. They serve to define the width and height of the drawing image only.-->
            <RectangleGeometry Rect="0,0,16,0" />
            <RectangleGeometry Rect="0,0,16,0" />
            <RectangleGeometry Rect="0,0,0,16" />
            <RectangleGeometry Rect="0,0,0,16" />
          </GeometryGroup>
        </GeometryDrawing.Geometry>
      </GeometryDrawing>
    </DrawingImage.Drawing>
  </DrawingImage>

  <!--*********************************  DefaultLargeImage Drawing  *********************************-->
  <DrawingImage PresentationOptions:Freeze="True" x:Key="DefaultLargeImage">
    <DrawingImage.Drawing>
      <GeometryDrawing Brush="{StaticResource IconBackgroundBrush}">
        <GeometryDrawing.Geometry>
          <GeometryGroup FillRule="EvenOdd">
            <RectangleGeometry Rect="4,5,16,3" />
            <RectangleGeometry Rect="4,10,16,3" />
            <RectangleGeometry Rect="4,15,16,3" />
            <!--Using EvenOdd fill rule for the geometry drawing. Adding 4 fake elements (2 defining vertical rectangle, 2 - horizontal). 
						Using EvenOdd fill rule will negate the 4 elements to transparent. They serve to define the width and height of the drawing image only.-->
            <RectangleGeometry Rect="0,0,24,0" />
            <RectangleGeometry Rect="0,0,24,0" />
            <RectangleGeometry Rect="0,0,0,24" />
            <RectangleGeometry Rect="0,0,0,24" />
          </GeometryGroup>
        </GeometryDrawing.Geometry>
      </GeometryDrawing>
    </DrawingImage.Drawing>
  </DrawingImage>

  <!-- *********************************  ScrollBarButton Style  ********************************* -->
  <Style x:Key="ScrollBarButtonStyle" TargetType="{x:Type RepeatButton}">
    <Setter Property="OverridesDefaultStyle" Value="true" />
    <Setter Property="Focusable" Value="false" />
    <Setter Property="IsTabStop" Value="false" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type RepeatButton}">
          <Grid x:Name="grid1">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="MouseOver">
                  <Storyboard>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="hover">
                      <EasingDoubleKeyFrame KeyTime="0" Value="1" />
                    </DoubleAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Pressed">
                  <Storyboard>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="pressed">
                      <EasingDoubleKeyFrame KeyTime="0" Value="1" />
                    </DoubleAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Disabled">
                  <Storyboard>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="normal">
                      <EasingDoubleKeyFrame KeyTime="0" Value="0.5" />
                    </DoubleAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Rectangle Fill="Transparent" />
            <Path x:Name="normal" Data="F1 M 541.537,173.589L 531.107,173.589L 536.322,167.49L 541.537,173.589 Z " Height="5" Stretch="Uniform" Width="8" Stroke="{StaticResource ArrowDarkBorderBrush}" Fill="{StaticResource ArrowBackgroundBrush}" />
            <Path x:Name="hover" Data="F1 M 541.537,173.589L 531.107,173.589L 536.322,167.49L 541.537,173.589 Z " Height="5" Stretch="Uniform" Width="8" Fill="{StaticResource ButtonFocusedBorderBrush}" Opacity="0" Stroke="{StaticResource ArrowHoverBorderBrush}" />
            <Path x:Name="pressed" Data="F1 M 541.537,173.589L 531.107,173.589L 536.322,167.49L 541.537,173.589 Z " Height="5" Stretch="Uniform" Width="8" Fill="{StaticResource ButtonHoverBorderBrush}" Opacity="0" Stroke="{StaticResource ArrowHoverBorderBrush}" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- *********************************  ScrollBarPageButton Style  ********************************* -->
  <Style x:Key="ScrollBarPageButtonStyle" TargetType="{x:Type RepeatButton}">
    <Setter Property="OverridesDefaultStyle" Value="true" />
    <Setter Property="Background" Value="Transparent" />
    <Setter Property="Focusable" Value="false" />
    <Setter Property="IsTabStop" Value="false" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type RepeatButton}">
          <Rectangle Fill="{TemplateBinding Background}" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- *********************************  Horizontal ScrollBarThumb Style  ********************************* -->
  <Style x:Key="HScrollBarThumbStyle" TargetType="{x:Type Thumb}">
    <Setter Property="OverridesDefaultStyle" Value="true" />
    <Setter Property="IsTabStop" Value="false" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Thumb}">
          <Grid Margin="0">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="MouseOver">
                  <Storyboard>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="hover">
                      <EasingDoubleKeyFrame KeyTime="0" Value="1" />
                    </DoubleAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Pressed">
                  <Storyboard>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="pressed">
                      <EasingDoubleKeyFrame KeyTime="0" Value="1" />
                    </DoubleAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Disabled">
                  <Storyboard>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="normal">
                      <EasingDoubleKeyFrame KeyTime="0" Value="0.5" />
                    </DoubleAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Rectangle x:Name="normal" RadiusY="2" RadiusX="2" StrokeThickness="1" Margin="1" Fill="{StaticResource HScrollbarThumbBackgroundBrush}" Stroke="{StaticResource ArrowDarkBorderBrush}" />
            <Rectangle x:Name="hover" RadiusY="2" RadiusX="2" StrokeThickness="1" Margin="1" Fill="{StaticResource HScrollbarThumbHoverBackgroundBrush}" Opacity="0" Stroke="{StaticResource ArrowHoverBorderBrush}" />
            <Rectangle x:Name="pressed" Fill="{StaticResource HScrollbarThumbPressedBackgroundBrush}" RadiusY="2" RadiusX="2" StrokeThickness="1" Margin="1" Opacity="0" Stroke="{StaticResource ArrowHoverBorderBrush}" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- *********************************  Vertical ScrollbarThumb Style  ********************************* -->
  <Style x:Key="VScrollBarThumbStyle" TargetType="{x:Type Thumb}">
    <Setter Property="OverridesDefaultStyle" Value="true" />
    <Setter Property="Stylus.IsPressAndHoldEnabled" Value="false" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Thumb}">
          <Grid x:Name="grid" Height="Auto" Width="Auto">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="MouseOver">
                  <Storyboard>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="hover">
                      <EasingDoubleKeyFrame KeyTime="0" Value="1" />
                    </DoubleAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Pressed">
                  <Storyboard>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="pressed">
                      <EasingDoubleKeyFrame KeyTime="0" Value="1" />
                    </DoubleAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Disabled">
                  <Storyboard>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="normal">
                      <EasingDoubleKeyFrame KeyTime="0" Value="0.4" />
                    </DoubleAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Rectangle x:Name="normal" RadiusY="2" RadiusX="2" StrokeThickness="1" Margin="1" Stroke="{StaticResource ArrowDarkBorderBrush}" Fill="{StaticResource HScrollbarThumbBackgroundBrush}">
            </Rectangle>
            <Rectangle x:Name="hover" RadiusY="2" RadiusX="2" StrokeThickness="1" Margin="1" Fill="{StaticResource VScrollbarThumbHoverBackgroundBrush}" Opacity="0" Stroke="{StaticResource ArrowHoverBorderBrush}" />
            <Rectangle x:Name="pressed" Fill="{StaticResource VScrollbarThumbPressedBackgroundBrush}" RadiusY="2" RadiusX="2" StrokeThickness="1" Margin="1" Opacity="0" Stroke="{StaticResource ArrowHoverBorderBrush}" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- *********************************  ScrollBar Style  ********************************* -->
  <Style x:Key="ScrollbarStyle" TargetType="{x:Type ScrollBar}">
    <Setter Property="Stylus.IsPressAndHoldEnabled" Value="false" />
    <Setter Property="Stylus.IsFlicksEnabled" Value="false" />
    <Setter Property="Width" Value="20" />
    <Setter Property="MinWidth" Value="20" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ScrollBar}">
          <Grid x:Name="Bg" SnapsToDevicePixels="true">
            <Grid.RowDefinitions>
              <RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}" />
              <RowDefinition Height="0.00001*" />
              <RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}" />
            </Grid.RowDefinitions>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualStateGroup.Transitions>
                  <VisualTransition GeneratedDuration="0:0:0.3" />
                </VisualStateGroup.Transitions>
                <VisualState x:Name="Normal" />
                <VisualState x:Name="MouseOver" />
                <VisualState x:Name="Disabled">
                  <Storyboard>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="repeatButton">
                      <EasingDoubleKeyFrame KeyTime="0" Value="0.6" />
                    </DoubleAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="repeatButton1">
                      <EasingDoubleKeyFrame KeyTime="0" Value="0.6" />
                    </DoubleAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="thumb">
                      <EasingDoubleKeyFrame KeyTime="0" Value="0" />
                    </DoubleAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Rectangle Grid.RowSpan="3" StrokeThickness="1" Fill="{StaticResource VScrollbarBackgroundBrush}" Stroke="{StaticResource ScrollbarBorderBrush}" Margin="0" />
            <RepeatButton x:Name="repeatButton" Margin="1" Command="{x:Static ScrollBar.LineUpCommand}" Style="{StaticResource ScrollBarButtonStyle}" />
            <Track x:Name="PART_Track" IsDirectionReversed="true" Grid.Row="1">
              <Track.DecreaseRepeatButton>
                <RepeatButton Command="{x:Static ScrollBar.PageUpCommand}" Style="{StaticResource ScrollBarPageButtonStyle}" />
              </Track.DecreaseRepeatButton>
              <Track.IncreaseRepeatButton>
                <RepeatButton Command="{x:Static ScrollBar.PageDownCommand}" Style="{StaticResource ScrollBarPageButtonStyle}" />
              </Track.IncreaseRepeatButton>
              <Track.Thumb>
                <Thumb x:Name="thumb" Style="{StaticResource VScrollBarThumbStyle}" Margin="5,0" />
              </Track.Thumb>
            </Track>
            <RepeatButton x:Name="repeatButton1" Command="{x:Static ScrollBar.LineDownCommand}" Grid.Row="2" Style="{StaticResource ScrollBarButtonStyle}" Margin="1" RenderTransformOrigin="0.5,0.5">
              <RepeatButton.RenderTransform>
                <TransformGroup>
                  <ScaleTransform />
                  <SkewTransform />
                  <RotateTransform Angle="180" />
                  <TranslateTransform />
                </TransformGroup>
              </RepeatButton.RenderTransform>
              <Path x:Name="smallIncreaseGlyph" Width="9" Height="5" Data="M 4,5 C4,5 4,4 4,4 4,4 3,4 3,4 3,4 3,3 3,3 3,3 2,3 2,3 2,3 2,2 2,2 2,2 1,2 1,2 1,2 1,1 1,1 1,1 0,1 0,1 0,1 0,0 0,0 0,0 9,0 9,0 9,0 9,1 9,1 9,1 8,1 8,1 8,1 8,2 8,2 8,2 7,2 7,2 7,2 7,3 7,3 7,3 6,3 6,3 6,3 6,4 6,4 6,4 5,4 5,4 5,4 5,5 5,5 5,5 4,5 4,5 z" IsHitTestVisible="False" HorizontalAlignment="Center" VerticalAlignment="Center" Fill="Lime">
              </Path>
            </RepeatButton>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="false">
              <Setter Property="Background" TargetName="Bg" Value="{StaticResource DisabledBackgroundBrush}" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Style.Triggers>
      <Trigger Property="Orientation" Value="Horizontal">
        <Setter Property="Width" Value="Auto" />
        <Setter Property="MinWidth" Value="0" />
        <Setter Property="Height" Value="20" />
        <Setter Property="MinHeight" Value="20" />
        <Setter Property="Template">
          <Setter.Value>
            <ControlTemplate TargetType="{x:Type ScrollBar}">
              <Grid x:Name="Bg" SnapsToDevicePixels="true">
                <Grid.ColumnDefinitions>
                  <ColumnDefinition MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}" />
                  <ColumnDefinition Width="0.00001*" />
                  <ColumnDefinition MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}" />
                </Grid.ColumnDefinitions>
                <VisualStateManager.VisualStateGroups>
                  <VisualStateGroup x:Name="CommonStates">
                    <VisualStateGroup.Transitions>
                      <VisualTransition GeneratedDuration="0:0:0.3" />
                    </VisualStateGroup.Transitions>
                    <VisualState x:Name="Normal" />
                    <VisualState x:Name="MouseOver">
                      <Storyboard>
                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="repeatButton">
                          <EasingDoubleKeyFrame KeyTime="0" Value="1" />
                        </DoubleAnimationUsingKeyFrames>
                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="repeatButton1">
                          <EasingDoubleKeyFrame KeyTime="0" Value="1" />
                        </DoubleAnimationUsingKeyFrames>
                      </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Disabled" />
                  </VisualStateGroup>
                </VisualStateManager.VisualStateGroups>
                <Rectangle Grid.ColumnSpan="5" StrokeThickness="1" Fill="{StaticResource HScrollbarBackgroundBrush}" Stroke="{StaticResource ScrollbarBorderBrush}" />
                <RepeatButton x:Name="repeatButton" Command="{x:Static ScrollBar.LineLeftCommand}" Style="{StaticResource ScrollBarButtonStyle}" Opacity="1" RenderTransformOrigin="0.5,0.5">
                  <RepeatButton.RenderTransform>
                    <TransformGroup>
                      <ScaleTransform />
                      <SkewTransform />
                      <RotateTransform Angle="-90" />
                      <TranslateTransform />
                    </TransformGroup>
                  </RepeatButton.RenderTransform>
                  <Path x:Name="horizontalSmallDecreaseGlyph" Width="5" Height="9" Data="M 0,4 C0,4 1,4 1,4 1,4 1,3 1,3 1,3 2,3 2,3 2,3 2,2 2,2 2,2 3,2 3,2 3,2 3,1 3,1 3,1 4,1 4,1 4,1 4,0 4,0 4,0 5,0 5,0 5,0 5,9 5,9 5,9 4,9 4,9 4,9 4,8 4,8 4,8 3,8 3,8 3,8 3,7 3,7 3,7 2,7 2,7 2,7 2,6 2,6 2,6 1,6 1,6 1,6 1,5 1,5 1,5 0,5 0,5 0,5 0,4 0,4 z" IsHitTestVisible="False" HorizontalAlignment="Center" Margin="0" VerticalAlignment="Center" Fill="Magenta">
                  </Path>
                </RepeatButton>
                <Track x:Name="PART_Track" Grid.Column="1">
                  <Track.DecreaseRepeatButton>
                    <RepeatButton Command="{x:Static ScrollBar.PageLeftCommand}" Style="{StaticResource ScrollBarPageButtonStyle}" />
                  </Track.DecreaseRepeatButton>
                  <Track.IncreaseRepeatButton>
                    <RepeatButton Command="{x:Static ScrollBar.PageRightCommand}" Style="{StaticResource ScrollBarPageButtonStyle}" />
                  </Track.IncreaseRepeatButton>
                  <Track.Thumb>
                    <Thumb Style="{StaticResource HScrollBarThumbStyle}" Margin="0,5" />
                  </Track.Thumb>
                </Track>
                <RepeatButton x:Name="repeatButton1" Grid.Column="2" Command="{x:Static ScrollBar.LineRightCommand}" Style="{StaticResource ScrollBarButtonStyle}" Opacity="1" RenderTransformOrigin="0.5,0.5">
                  <RepeatButton.RenderTransform>
                    <TransformGroup>
                      <ScaleTransform />
                      <SkewTransform />
                      <RotateTransform Angle="90" />
                      <TranslateTransform />
                    </TransformGroup>
                  </RepeatButton.RenderTransform>
                  <Path x:Name="horizontalSmallIncreaseGlyph" Width="5" Height="9" Data="M 5,4 C5,4 4,4 4,4 4,4 4,3 4,3 4,3 3,3 3,3 3,3 3,2 3,2 3,2 2,2 2,2 2,2 2,1 2,1 2,1 1,1 1,1 1,1 1,0 1,0 1,0 0,0 0,0 0,0 0,9 0,9 0,9 1,9 1,9 1,9 1,8 1,8 1,8 2,8 2,8 2,8 2,7 2,7 2,7 3,7 3,7 3,7 3,6 3,6 3,6 4,6 4,6 4,6 4,5 4,5 4,5 5,5 5,5 5,5 5,4 5,4 z" IsHitTestVisible="False" HorizontalAlignment="Center" Margin="0" VerticalAlignment="Center" Fill="Cyan">
                  </Path>
                </RepeatButton>
              </Grid>
              <ControlTemplate.Triggers>
                <Trigger Property="IsEnabled" Value="false">
                  <Setter Property="Background" TargetName="Bg" Value="{StaticResource DisabledBackgroundBrush}" />
                </Trigger>
              </ControlTemplate.Triggers>
            </ControlTemplate>
          </Setter.Value>
        </Setter>
      </Trigger>
    </Style.Triggers>
  </Style>
  <Style TargetType="{x:Type ScrollBar}" BasedOn="{StaticResource ScrollbarStyle}"/>

  <!-- *********************************  ScrollViewer Style ********************************* -->
  <Style x:Key="ScrollViewerStyle" TargetType="{x:Type ScrollViewer}">
    <Setter Property="BorderThickness" Value="0"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ScrollViewer}">
          <Grid x:Name="Grid" Background="{TemplateBinding Background}">
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="*"/>
              <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
              <RowDefinition Height="*"/>
              <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <Rectangle x:Name="Corner" Grid.Column="1" Fill="{StaticResource ScrollviewerCornerBackgroundBrush}" Grid.Row="1" Opacity="0.5" />
            <ScrollContentPresenter x:Name="PART_ScrollContentPresenter" CanContentScroll="{TemplateBinding CanContentScroll}" CanHorizontallyScroll="False" CanVerticallyScroll="False" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Grid.Column="0" Margin="{TemplateBinding Padding}" Grid.Row="0"/>
            <ScrollBar x:Name="PART_VerticalScrollBar" AutomationProperties.AutomationId="VerticalScrollBar" Cursor="Arrow" Grid.Column="1" Maximum="{TemplateBinding ScrollableHeight}" Minimum="0" Grid.Row="0" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportHeight}" Style="{StaticResource ScrollbarStyle}"/>
            <ScrollBar x:Name="PART_HorizontalScrollBar" AutomationProperties.AutomationId="HorizontalScrollBar" Cursor="Arrow" Grid.Column="0" Maximum="{TemplateBinding ScrollableWidth}" Minimum="0" Orientation="Horizontal" Grid.Row="1" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportWidth}" Style="{StaticResource ScrollbarStyle}"/>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Style.Triggers>
      <Trigger Property="IsEnabled" Value="false">
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
      </Trigger>
    </Style.Triggers>
  </Style>
  <!-- JJD 06/25/14 TFS169389 
    Should never create a Style without a Key for a framework standard element
    <Style TargetType="{x:Type ScrollViewer}" BasedOn="{StaticResource ScrollViewerStyle}"/>-->

  <!-- *********************************  MenuItem style for the header of overflow menu: OverflowMenuButtonStyleKey  ********************************* -->
  <Style x:Key="{x:Static igOutlookBar:XamOutlookBar.OverflowMenuButtonStyleKey}" TargetType="MenuItem">
    <Setter Property="BorderBrush" Value="Transparent"/>
    <Setter Property="SnapsToDevicePixels" Value="True"/>
    <Setter Property="Width" Value="28" />
    <Setter Property="Margin" Value="1" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="MenuItem">
          <Border Name="Border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}"  BorderThickness="{TemplateBinding BorderThickness}">
            <Grid>
              <ContentPresenter Margin="6,3,6,3" ContentSource="Header" RecognizesAccessKey="True"/>
              <Popup Name="Popup"
                     Placement="Right"
                     IsOpen="{TemplateBinding IsSubmenuOpen}"
                     AllowsTransparency="True"
                     Focusable="False"
                     PopupAnimation="Fade">
                <Border Name="SubmenuBorder"
                        SnapsToDevicePixels="True"
                        Background="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.XamOutlookBarBackgroundFillKey}}"
                        BorderBrush="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.MenuOuterBorderFillKey}}"
                        BorderThickness="1">
                  <ScrollViewer	x:Name="Popup_ScrollViewer"
                                HorizontalScrollBarVisibility="Disabled"
                                VerticalScrollBarVisibility="Auto"
                                Style="{StaticResource MenuScrollViewer}">
                    <ItemsPresenter Grid.IsSharedSizeScope="true"
                                    KeyboardNavigation.TabNavigation="Cycle"
                                    KeyboardNavigation.DirectionalNavigation="Cycle"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                  </ScrollViewer>
                </Border>
              </Popup>
            </Grid>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="IsSuspendingPopupAnimation" Value="true">
              <Setter TargetName="Popup" Property="PopupAnimation" Value="None"/>
            </Trigger>
            <Trigger Property="IsHighlighted" Value="true">
              <Setter TargetName="Border" Property="Background" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.NavigationGroupHeaderHottrackCenterFillKey}}"/>
              <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.MenuItemHottrackOuterBorderFillKey}}"/>
              <Setter TargetName="Border" Property="BorderThickness" Value="1"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="true">
              <Setter TargetName="Border" Property="Background" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.NavigationGroupHeaderPressedCenterFillKey}}"/>
              <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.MenuItemHottrackOuterBorderFillKey}}"/>
              <Setter TargetName="Border" Property="BorderThickness" Value="1"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
              <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- *********************************  MenuItem style for 'fixed' menu items: OverflowMenuItemStyleKey   ********************************* -->
  <Style x:Key="{x:Static igOutlookBar:XamOutlookBar.OverflowMenuItemStyleKey}" TargetType="MenuItem">
    <Setter Property="HorizontalContentAlignment" Value="{Binding Path=HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
    <Setter Property="VerticalContentAlignment" Value="{Binding Path=VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
    <Setter Property="Background" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.MenuCenterFillKey}}"/>
    <Setter Property="BorderBrush" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.MenuOuterBorderFillKey}}"/>
    <Setter Property="Foreground" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.MenuItemTextNormalFillKey}}"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type MenuItem}">
          <Border x:Name="Border"
                  Background="{TemplateBinding Background}"
                  BorderBrush="{TemplateBinding BorderBrush}"
                  BorderThickness="0"
                  Margin="{TemplateBinding Margin}">
            <Grid Visibility="Visible">
              <Grid.ColumnDefinitions>
                <ColumnDefinition x:Name="MenuItemIconColumnGroup" MinWidth="17" Width="Auto" SharedSizeGroup="MenuItemIconColumnGroup"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto" SharedSizeGroup="MenuItemIGTColumnGroup"/>
                <ColumnDefinition Width="14"/>
              </Grid.ColumnDefinitions>
              <Border x:Name="IconAreaBackground"
                      Background="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.MenuIconGroupCenterFillKey}}"
                      BorderBrush="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.MenuIconGroupOuterBorderFillKey}}"
                      BorderThickness="0"
                      Visibility="Collapsed"/>
              <Grid HorizontalAlignment="Stretch"
                    Margin="1,1,1,1"
                    Width="Auto"
                    Grid.Column="0"
                    Grid.ColumnSpan="4"
                    x:Name="Highlight"
                    Visibility="Collapsed">
                <Rectangle x:Name="HighlightFill" Fill="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.MenuItemHottrackCenterFillKey}}" Stroke="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.MenuItemHottrackOuterBorderFillKey}}"/>
              </Grid>
              <Border x:Name="checkedState"
                      Background="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.MenuCheckmarkBoxNormalCenterFillKey}}"
                      BorderBrush="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.MenuCheckmarkBoxNormalOuterBorderFillKey}}"
                      BorderThickness="1"
                      Visibility="Collapsed"
                      Margin="2"/>
              <ContentPresenter x:Name="Icon"
                                VerticalAlignment="Center"
                                HorizontalAlignment="Center"
                                ContentSource="Icon"
                                MaxHeight="16"
                                MaxWidth="16"/>
              <Grid x:Name="GlyphPanel"
                    Visibility="Collapsed"
                    Margin="1,0,0,0"
                    VerticalAlignment="Center"
                    HorizontalAlignment="Center">
                <Path x:Name="GlyphPanelpath"
                      VerticalAlignment="Center"
                      Fill="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.DarkBrushKey}}"
                      Data="M0,2 L0,4.8 L2.5,7.4 L7.1,2.8 L7.1,0 L2.5,4.6 z"
                      FlowDirection="LeftToRight"/>
              </Grid>
              <ContentPresenter x:Name="HeaderHost"
                                Grid.Column="1"
                                RecognizesAccessKey="True"
                                ContentSource="Header"
                                VerticalAlignment="Center"
                                Margin="0,4,0,4"/>
              <Grid x:Name="ArrowPanel"
                    Grid.Column="3"
                    Margin="0,0,1,0"
                    VerticalAlignment="Center"
                    HorizontalAlignment="Center">
                <Path x:Name="ArrowPanelPath"
                      VerticalAlignment="Center"
                      Fill="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.DarkBrushKey}}"
                      Data="M0,0 L0,8 L4,4 z"/>
              </Grid>
              <Popup x:Name="SubMenuPopup"
                     IsOpen="{Binding Path=IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}"
                     Placement="Right"
                     Focusable="false"
                     AllowsTransparency="true"
                     PopupAnimation="{x:Static SystemParameters.MenuPopupAnimation}"
                     VerticalOffset="-3" >
                <Grid x:Name="SubMenu">
                  <Border x:Name="SubMenuBorder"
                          Background="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.XamOutlookBarBackgroundFillKey}}"
                          BorderBrush="{TemplateBinding BorderBrush}"
                          BorderThickness="1">
                    <ScrollViewer x:Name="Popup_ScrollViewer"
                                  HorizontalScrollBarVisibility="Disabled"
                                  VerticalScrollBarVisibility="Auto"
                                  Style="{StaticResource MenuScrollViewer}">
                      <ItemsPresenter  Grid.IsSharedSizeScope="true"
                                       KeyboardNavigation.TabNavigation="Cycle"
                                       KeyboardNavigation.DirectionalNavigation="Cycle"
                                       SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </ScrollViewer>
                  </Border>
                </Grid>
              </Popup>
            </Grid>
          </Border>
          <!-- These triggers re-configure the four arrangements of MenuItem to show different levels of menu via Role -->
          <ControlTemplate.Triggers>
            <!-- Role = TopLevelHeader : this is the root menu item in a menu; the Popup expands down -->
            <Trigger Property="Role" Value="TopLevelHeader">
              <Setter Property="Padding" Value="6,3,6,3"/>
              <Setter Property="Grid.IsSharedSizeScope" Value="true"/>
              <Setter Property="Placement" Value="Bottom" TargetName="SubMenuPopup"/>
              <Setter Property="Visibility" Value="Collapsed" TargetName="ArrowPanel"/>
              <Setter Property="Foreground" Value="{StaticResource ThemeForegroundBrush}"/>
              <Setter TargetName="HighlightFill" Property="Fill" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.MenuItemHottrackCenterFillKey}}"/>
              <Setter TargetName="HighlightFill" Property="Stroke" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.MenuItemHottrackOuterBorderFillKey}}"/>
            </Trigger>
            <!-- Role = TopLevelItem :  this is a child menu item from the top level without any child items-->
            <Trigger Property="Role" Value="TopLevelItem">
              <Setter Property="Padding" Value="6,3,6,3"/>
              <Setter Property="Visibility" Value="Collapsed" TargetName="ArrowPanel"/>
              <Setter TargetName="IconAreaBackground" Property="Visibility" Value="Visible"/>
              <Setter TargetName="MenuItemIconColumnGroup" Property="MinWidth" Value="24"/>
              <Setter TargetName="HeaderHost" Property="Margin" Value="8,5,0,6"/>
            </Trigger>
            <!-- Role = SubMenuHeader : this is a child menu item which does not have children -->
            <Trigger Property="Role" Value="SubmenuHeader">
              <Setter Property="DockPanel.Dock" Value="Top"/>
              <Setter Property="Padding" Value="0,2,0,2"/>
              <Setter Property="Grid.IsSharedSizeScope" Value="true"/>
              <Setter TargetName="IconAreaBackground" Property="Visibility" Value="Visible"/>
              <Setter TargetName="MenuItemIconColumnGroup" Property="MinWidth" Value="24"/>
              <Setter TargetName="HeaderHost" Property="Margin" Value="8,5,0,6"/>
            </Trigger>
            <!-- Role = SubMenuItem : this is a child menu item which has children-->
            <Trigger Property="Role" Value="SubmenuItem">
              <Setter Property="DockPanel.Dock" Value="Top"/>
              <Setter Property="Padding" Value="0,2,0,2"/>
              <Setter Property="Visibility" Value="Collapsed" TargetName="ArrowPanel"/>
              <Setter TargetName="IconAreaBackground" Property="Visibility" Value="Visible"/>
              <Setter TargetName="MenuItemIconColumnGroup" Property="MinWidth" Value="24"/>
              <Setter TargetName="HeaderHost" Property="Margin" Value="8,5,0,6"/>
            </Trigger>
            <Trigger Property="IsSuspendingPopupAnimation" Value="true">
              <Setter Property="PopupAnimation" Value="None" TargetName="SubMenuPopup"/>
            </Trigger>
            <!-- If no Icon is present then we collapse the Icon Content -->
            <Trigger Property="Icon" Value="{x:Null}">
              <Setter Property="Visibility" Value="Collapsed" TargetName="Icon"/>
            </Trigger>
            <!-- The GlyphPanel contains the CheckMark -->
            <Trigger Property="IsChecked" Value="true">
              <Setter Property="Visibility" Value="Visible" TargetName="checkedState"/>
            </Trigger>
            <Trigger Property="AllowsTransparency" SourceName="SubMenuPopup" Value="true">
              <Setter Property="Margin" Value="0,0,3,3" TargetName="SubMenu"/>
              <Setter Property="SnapsToDevicePixels" Value="true" TargetName="SubMenu"/>
            </Trigger>
            <Trigger Property="IsHighlighted" Value="true">
              <Setter Property="Visibility" TargetName="Highlight" Value="Visible"/>
              <Setter Property="Foreground" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.MenuItemTextHottrackFillKey}}"/>
              <Setter TargetName="ArrowPanelPath" Property="Fill" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.LightBrushKey}}"/>
            </Trigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="IsChecked" Value="True"/>
                <Condition Property="IsHighlighted" Value="True"/>
              </MultiTrigger.Conditions>
              <Setter TargetName="checkedState" Property="Background" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.MenuCheckmarkBoxHottrackCenterFillKey}}"/>
              <Setter TargetName="checkedState" Property="BorderBrush" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.MenuCheckmarkBoxHottrackOuterBorderFillKey}}"/>
            </MultiTrigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="Role" Value="TopLevelHeader"/>
                <Condition Property="IsHighlighted" Value="True"/>
              </MultiTrigger.Conditions>
              <Setter Property="Foreground" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.DarkBrushKey}}"/>
            </MultiTrigger>
            <Trigger Property="IsEnabled" Value="false">
              <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- *********************************  OutlookBarGroup   ********************************* -->
  <Style TargetType="{x:Type igOutlookBar:OutlookBarGroup}">
    <Setter Property="SnapsToDevicePixels" Value="True"/>
    <Setter Property="ToolTipService.IsEnabled" Value="False"/>
    <Setter Property="BorderThickness" Value="1,1,1,0"/>
    <Setter Property="Background" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.NavigationGroupHeaderNormalCenterFillKey}}"/>
    <Setter Property="BorderBrush" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.OutlookBarGroupNormalBorderFillKey}}"/>
    <Setter Property="Foreground" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.NavigationGroupHeaderNormalTextFillKey}}"/>
    <Setter Property="SmallImage" Value="{StaticResource DefaultSmallImage}"/>
    <Setter Property="LargeImage" Value="{StaticResource DefaultLargeImage}"/>
    <Setter Property="Margin" Value="0"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type igOutlookBar:OutlookBarGroup}">
          <Grid>
            <Border Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
              <Grid Margin="2">
                <Grid.ColumnDefinitions>
                  <ColumnDefinition x:Name="ImageColumn" Width="Auto"/>
                  <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Image x:Name="PART_Image"
                       MaxHeight="24"
                       MaxWidth="24"
                       MinHeight="16"
                       MinWidth="16"
                       Grid.Column="0"
                       Margin="2,2,0,1"
                       Source="{TemplateBinding LargeImage}"
                       Stretch="Uniform"/>
                <!-- Group Header(navigation area/menu)-->
                <ContentPresenter x:Name="PART_Header"
                                  Grid.Column="1"
                                  Margin="4,0,0,1"
                                  VerticalAlignment="Center"
                                  Content="{TemplateBinding Header}"
                                  ContentTemplate="{TemplateBinding HeaderTemplate}"
                                  ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}"
                                  TextElement.FontWeight="Bold"/>
              </Grid>
            </Border>
            <Rectangle x:Name="focusRec"
                       Stroke="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.GroupInnerBorderFillKey}}"
                       StrokeThickness="1"
                       Visibility="Collapsed"/>
          </Grid>
          <ControlTemplate.Triggers>
            <MultiDataTrigger>
              <MultiDataTrigger.Conditions>
                <Condition Binding="{Binding Path=LargeImage, RelativeSource={RelativeSource Self}}" Value="{x:Null}"/>
                <Condition Binding="{Binding Path=Location, RelativeSource={RelativeSource Self}}" Value="NavigationGroupArea"/>
                <Condition Binding="{Binding Path=OutlookBar.ReserveSpaceForLargeImage, RelativeSource={RelativeSource Self}}" Value="True"/>
              </MultiDataTrigger.Conditions>
              <Setter TargetName="PART_Header" Property="Margin" Value="12,0,0,1"/>
              <Setter TargetName="ImageColumn" Property="Width" Value="Auto"/>
            </MultiDataTrigger>
            <MultiDataTrigger>
              <MultiDataTrigger.Conditions>
                <Condition Binding="{Binding Path=LargeImage, RelativeSource={RelativeSource Self}}" Value="{x:Null}"/>
                <Condition Binding="{Binding Path=Location, RelativeSource={RelativeSource Self}}" Value="NavigationGroupArea"/>
                <Condition Binding="{Binding Path=OutlookBar.ReserveSpaceForLargeImage, RelativeSource={RelativeSource Self}}" Value="False"/>
              </MultiDataTrigger.Conditions>
              <Setter TargetName="ImageColumn" Property="Width" Value="0"/>
            </MultiDataTrigger>
            <Trigger Property="Location" Value="NavigationGroupArea">
              <Setter TargetName="PART_Header" Property="Visibility" Value="Visible"/>
              <Setter TargetName="PART_Image" Property="Source" Value="{Binding Path=LargeImage, RelativeSource={x:Static RelativeSource.TemplatedParent}}"/>
            </Trigger>
            <DataTrigger Binding="{Binding Path=OutlookBar.ShowGroupHeaderAsToolTip, RelativeSource={RelativeSource Self}}" Value="True">
              <Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Self}, Path=Header}"/>
            </DataTrigger>
            <Trigger Property="Location" Value="OverflowContextMenu">
              <Setter TargetName="PART_Image" Property="Source" Value="{Binding Path=SmallImageResolved, RelativeSource={x:Static RelativeSource.TemplatedParent}}"/>
              <Setter TargetName="PART_Image" Property="Visibility" Value="Collapsed"/>
            </Trigger>
            <Trigger Property="IsSelected" Value="True">
              <Setter Property="Background" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.NavigationGroupHeaderActiveCenterFillKey}}"/>
              <Setter TargetName="PART_Header" Property="TextElement.Foreground" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.NavigationGroupHeaderActiveTextFillKey}}"/>
              <Setter TargetName="focusRec" Property="Visibility" Value="Visible"/>
            </Trigger>
            <DataTrigger Binding="{Binding Path=OutlookBar.IsMinimized, RelativeSource={RelativeSource Self}}" Value="True">
              <Setter TargetName="PART_Header" Property="Visibility" Value="Collapsed"/>
              <Setter TargetName="PART_Image" Property="Source" Value="{Binding Path=LargeImage, RelativeSource={x:Static RelativeSource.TemplatedParent}}"/>
              <Setter Property="ToolTipService.IsEnabled" Value="{Binding Path=OutlookBar.ShowToolTips, RelativeSource={RelativeSource Self}}"/>
            </DataTrigger>
            <Trigger Property="Location" Value="OverflowArea">
              <Setter TargetName="PART_Image" Property="Source" Value="{Binding Path=SmallImageResolved, RelativeSource={x:Static RelativeSource.TemplatedParent}}"/>
              <Setter TargetName="PART_Header" Property="Visibility" Value="Collapsed"/>
              <Setter TargetName="PART_Image" Property="Margin" Value="2,6,2,3"/>
              <Setter TargetName="PART_Image" Property="MaxHeight" Value="16"/>
              <Setter TargetName="PART_Image" Property="MaxWidth" Value="16"/>
              <Setter Property="ToolTipService.IsEnabled" Value="{Binding Path=OutlookBar.ShowToolTips, RelativeSource={RelativeSource Self}}"/>
              <Setter Property="BorderThickness" Value="0"/>
              <Setter Property="Background" Value="{x:Null}"/>
            </Trigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="Location" Value="OverflowArea"/>
                <Condition Property="IsSelected" Value="True"/>
              </MultiTrigger.Conditions>
              <Setter Property="Background" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.NavigationGroupHeaderNormalCenterFillKey}}"/>
            </MultiTrigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Style.Triggers>
      <MultiDataTrigger>
        <MultiDataTrigger.Conditions>
          <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseOverGroup}" Value="True"/>
          <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsSelected}" Value="False"/>
        </MultiDataTrigger.Conditions>
        <Setter Property="Background" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.NavigationGroupHeaderHottrackCenterFillKey}}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.MenuItemHottrackOuterBorderFillKey}}"/>
      </MultiDataTrigger>
      <MultiDataTrigger>
        <MultiDataTrigger.Conditions>
          <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseOverGroup}" Value="True"/>
          <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsSelected}" Value="True"/>
        </MultiDataTrigger.Conditions>
        <Setter Property="Background" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.NavigationGroupHeaderActiveHottrackCenterFillKey}}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.MenuItemHottrackOuterBorderFillKey}}"/>
      </MultiDataTrigger>
      <!-- Highlight on mouse down-->
      <MultiDataTrigger>
        <MultiDataTrigger.Conditions>
          <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseOverGroup}" Value="True"/>
          <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseCaptured}" Value="True"/>
          <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsSelected}" Value="False"/>
        </MultiDataTrigger.Conditions>
        <Setter Property="Background" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.NavigationGroupHeaderPressedCenterFillKey}}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.MenuItemHottrackOuterBorderFillKey}}"/>
      </MultiDataTrigger>
    </Style.Triggers>
  </Style>

  <!-- *********************************  SelectedGroupHeader   ********************************* -->
  <Style TargetType="{x:Type igOutlookBar:SelectedGroupHeader}">
    <Style.Resources>
      <RotateTransform x:Key="MinimizeOnRightTransform" Angle="180"/>
    </Style.Resources>
    <Setter Property="Background" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.CurrentGroupHeaderCenterFillKey}}"/>
    <Setter Property="BorderBrush" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.GroupInnerBorderFillKey}}"/>
    <Setter Property="Foreground" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.HeaderDarkTextFillKey}}"/>
    <Setter Property="BorderThickness" Value="1"/>
    <Setter Property="SnapsToDevicePixels" Value="True"/>
    <Setter Property="Padding" Value="0"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type igOutlookBar:SelectedGroupHeader}">
          <Grid>
            <Border Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    Padding="{TemplateBinding Padding}"
                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
              <Grid>
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="*"/>
                  <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <ContentPresenter x:Name="ContentPresenterHeader"
                                  Grid.Column="0"
                                  Margin="7,7,8,3"
                                  Content="{Binding Path=(igOutlookBar:XamOutlookBar.OutlookBar).SelectedGroup.Header, RelativeSource={RelativeSource Self}}"/>
                <ToggleButton  x:Name="MinimizeButton"
                               Grid.Column="1"
                               Margin="0,4,0,3"
                               IsChecked="{Binding Path=(igOutlookBar:XamOutlookBar.OutlookBar).IsMinimized, RelativeSource={RelativeSource Self}}"
                               Style="{DynamicResource {x:Static igOutlookBar:XamOutlookBar.MinimizeToggleButtonStyleKey}}"/>
              </Grid>
            </Border>
          </Grid>
          <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding Path=OutlookBar.AllowMinimized, RelativeSource={RelativeSource TemplatedParent}}" Value="False">
              <Setter TargetName="MinimizeButton" Property="Visibility" Value="Hidden"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=OutlookBar.IsMinimized, RelativeSource={RelativeSource TemplatedParent}}" Value="True">
              <Setter TargetName="ContentPresenterHeader" Property="Visibility" Value="Collapsed"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=OutlookBar.VerticalSplitterLocation, RelativeSource={RelativeSource TemplatedParent}}" Value="Left">
              <Setter TargetName="MinimizeButton" Property="LayoutTransform" Value="{StaticResource MinimizeOnRightTransform}"/>
            </DataTrigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- *********************************  GroupAreaSplitterThumb   ********************************* -->
  <Style x:Key="{x:Static igOutlookBar:XamOutlookBar.HorizontalSplitterStyleKey}" TargetType="{x:Type Thumb}">
    <Setter Property="BorderBrush" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.XamOutlookBarOuterBorderFillKey}}"/>
    <Setter Property="Background" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.SplitterCenterFillKey}}"/>
    <Setter Property="BorderThickness" Value="0,1"/>
    <Setter Property="Padding" Value="0,2"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Thumb}">
          <Grid>
            <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"/>
            <Grid HorizontalAlignment="Center" Margin="{TemplateBinding Padding}" VerticalAlignment="Center">
              <Path  x:Name="backgroundGlyph"
                     Width="18"
                     Height="2"
                     Margin="1,1,0,0"
                     Data="M 17,1 C17,1.552 17.447,2 18,2 18.552,2 19,1.552 19,1 19,0.447 18.552,0 18,0 17.447,0 17,0.447 17,1 zM 13,1 C13,1.552 13.447,2 14,2 14.552,2 15,1.552 15,1 15,0.447 14.552,0 14,0 13.447,0 13,0.447 13,1 zM 9,1 C9,1.552 9.447,2 10,2 10.552,2 11,1.552 11,1 11,0.447 10.552,0 10,0 9.447,0 9,0.447 9,1 zM 5,1 C5,1.552 5.447,2 6,2 6.552,2 7,1.552 7,1 7,0.447 6.552,0 6,0 5.447,0 5,0.447 5,1 zM 1,1 C1,1.552 1.447,2 2,2 2.552,2 3,1.552 3,1 3,0.447 2.552,0 2,0 1.447,0 1,0.447 1,1 z"
                     Fill="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.LightBrushKey}}"
                     Opacity="1"
                     Stretch="Fill"/>
              <Path x:Name="foregroundGlyph"
                    Width="18"
                    Height="2"
                    HorizontalAlignment="Left"
                    VerticalAlignment="Top"
                    Data="M 17,1 C17,1.552 17.447,2 18,2 18.552,2 19,1.552 19,1 19,0.447 18.552,0 18,0 17.447,0 17,0.447 17,1 zM 13,1 C13,1.552 13.447,2 14,2 14.552,2 15,1.552 15,1 15,0.447 14.552,0 14,0 13.447,0 13,0.447 13,1 zM 9,1 C9,1.552 9.447,2 10,2 10.552,2 11,1.552 11,1 11,0.447 10.552,0 10,0 9.447,0 9,0.447 9,1 zM 5,1 C5,1.552 5.447,2 6,2 6.552,2 7,1.552 7,1 7,0.447 6.552,0 6,0 5.447,0 5,0.447 5,1 zM 1,1 C1,1.552 1.447,2 2,2 2.552,2 3,1.552 3,1 3,0.447 2.552,0 2,0 1.447,0 1,0.447 1,1 z"
                    Fill="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.GlyphThemeForegroundFillKey}}"
                    Opacity="1"
                    Stretch="Fill"/>
            </Grid>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- *********************************  GroupOverflowArea   ********************************* -->
  <Style TargetType="{x:Type igOutlookBar:GroupOverflowArea}">
    <Setter Property="Background" Value="{StaticResource TransparentBrush}"/>
    <Setter Property="VerticalContentAlignment" Value="Stretch"/>
    <Setter Property="SnapsToDevicePixels" Value="True"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type igOutlookBar:GroupOverflowArea}">
          <Border Background="{TemplateBinding Background}"
                  BorderBrush="{TemplateBinding BorderBrush}"
                  BorderThickness="{TemplateBinding BorderThickness}"
                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
            <Grid>
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
              </Grid.ColumnDefinitions>
              <!-- Ovwerflow Toolbar -->
              <igOutlookBar:GroupsPresenter x:Name="PART_OverflowGroups"
                                            Grid.Column="0" Orientation="Horizontal"
                                            ItemsSource="{Binding RelativeSource={RelativeSource Self}, Path=(igOutlookBar:XamOutlookBar.OutlookBar).OverflowAreaGroups}"/>
              <!-- Overflow Menu     -->
              <Menu Grid.Column="1" Background="{StaticResource TransparentBrush}" x:Name="MainOverflowMenu" VerticalAlignment="Stretch" VerticalContentAlignment="Stretch">
                <Menu.ItemsPanel>
                  <ItemsPanelTemplate>
                    <Grid />
                  </ItemsPanelTemplate>
                </Menu.ItemsPanel>
                <MenuItem x:Name="PART_OverflowMenu"
                          ToolTip="{x:Static igOutlookBar:ResourcesOutlookBar.OverflowMenuButtonTooltip}"
                          Style="{DynamicResource {x:Static igOutlookBar:XamOutlookBar.OverflowMenuButtonStyleKey}}"
                          VerticalContentAlignment="Stretch">
                  <MenuItem.Header>
                    <Path x:Name="glyph"
                          Width="10"
                          Height="5"
                          Fill="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.OverflowGlyphForegroundFillKey}}"
                          Stretch="Fill"
                         Data="M 0,0 C0,0 0,1 0,1 0,1 1,1 1,1 1,1 1,2 1,2 1,2 2,2 2,2 2,2 2,3 2,3 2,3 3,3 3,3 3,3 3,4 3,4 3,4 4,4 4,4 4,4 4,5 4,5 4,5 6,5 6,5 6,5 6,4 6,4 6,4 7,4 7,4 7,4 7,3 7,3 7,3 8,3 8,3 8,3 8,2 8,2 8,2 9,2 9,2 9,2 9,1 9,1 9,1 10,1 10,1 10,1 10,0 10,0 10,0 0,0 0,0 z"/>
                  </MenuItem.Header>
                  <MenuItem  Header="{x:Static igOutlookBar:ResourcesOutlookBar.ShowMoreButtonsMenuItemHeader}"
                             Style="{DynamicResource {x:Static igOutlookBar:XamOutlookBar.OverflowMenuItemStyleKey}}"
                             Command="{x:Static igOutlookBar:OutlookBarCommands.ShowMoreButtonsCommand}"
                             CommandTarget="{Binding Path=(igOutlookBar:XamOutlookBar.OutlookBar), RelativeSource={RelativeSource Self}}"  >
                    <MenuItem.Icon>
                      <Grid Height="16" Width="16" Background="Transparent" HorizontalAlignment="Left">
                        <Path Data="F1 M541.53699,173.589 L531.10699,173.589 L536.32202,168.75038 L541.53699,173.589 z" Height="4" Width="8" Fill="{StaticResource IconForegroundBrush}" Stretch="Fill" HorizontalAlignment="Center" />
                      </Grid>
                    </MenuItem.Icon>
                  </MenuItem>
                  <MenuItem  Header="{x:Static igOutlookBar:ResourcesOutlookBar.ShowFewerButtonsMenuItemHeader}"
                             Style="{DynamicResource {x:Static igOutlookBar:XamOutlookBar.OverflowMenuItemStyleKey}}"
                             Command="{x:Static igOutlookBar:OutlookBarCommands.ShowFewerButtonsCommand}"
                             CommandTarget="{Binding Path=(igOutlookBar:XamOutlookBar.OutlookBar), RelativeSource={RelativeSource Self}}" >
                    <MenuItem.Icon>
                      <Grid Height="16" Width="16" Background="Transparent" HorizontalAlignment="Left">
                        <Path Data="F1 M541.53699,173.589 L531.10699,173.589 L536.32202,179.18501 L541.53699,173.589 z" Height="4" Width="8" Fill="{StaticResource IconForegroundBrush}" Stretch="Fill" HorizontalAlignment="Center" />
                      </Grid>
                    </MenuItem.Icon>
                  </MenuItem>
                  <MenuItem  Header="{x:Static igOutlookBar:ResourcesOutlookBar.NavigationAreaOptionsMenuItemHeader}"
                             Style="{DynamicResource {x:Static igOutlookBar:XamOutlookBar.OverflowMenuItemStyleKey}}"
                             Command="{x:Static igOutlookBar:OutlookBarCommands.ShowOptionsCommand}"
                             CommandTarget="{Binding Path=(igOutlookBar:XamOutlookBar.OutlookBar), RelativeSource={RelativeSource Self}}" />
                  <MenuItem x:Name="PART_AddRemoveMenu"
                            Header="{x:Static igOutlookBar:ResourcesOutlookBar.AddOrRemoveButtonsMenuItemHeader}"
                            Style="{DynamicResource {x:Static igOutlookBar:XamOutlookBar.OverflowMenuItemStyleKey}}"/>
                  <Separator x:Name="OverflowMenuSeparator"
                             Style="{DynamicResource {x:Static igOutlookBar:XamOutlookBar.OverflowMenuSeparatorStyleKey}}"/>
                </MenuItem>
              </Menu>
            </Grid>
          </Border>
          <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding Path=(igOutlookBar:XamOutlookBar.OutlookBar).ContextMenuGroups.Count, RelativeSource={RelativeSource Self}}" Value="0">
              <Setter TargetName="OverflowMenuSeparator" Property="Visibility" Value="Collapsed"/>
            </DataTrigger>
            <Trigger Property="IsMouseOver" Value="True" SourceName="PART_OverflowMenu">
              <Setter TargetName="PART_OverflowMenu" Property="Background" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.NavigationGroupHeaderHottrackCenterFillKey}}"/>
              <Setter TargetName="glyph" Property="Fill" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.LightBrushKey}}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True" SourceName="PART_OverflowMenu">
              <Setter TargetName="PART_OverflowMenu" Property="Background" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.NavigationGroupHeaderPressedCenterFillKey}}"/>
              <Setter TargetName="glyph" Property="Fill" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.LightBrushKey}}"/>
            </Trigger>
            <Trigger Property="IsSuspendingPopupAnimation" Value="True" SourceName="PART_OverflowMenu">
              <Setter TargetName="PART_OverflowMenu" Property="Background" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.NavigationGroupHeaderHottrackCenterFillKey}}"/>
              <Setter TargetName="glyph" Property="Fill" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.LightBrushKey}}"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- *********************************  MinimizeToggleButtonStyle: MinimizeToggleButtonStyleKey    ********************************* -->
  <Style x:Key="{x:Static igOutlookBar:XamOutlookBar.MinimizeToggleButtonStyleKey}" TargetType="ToggleButton">
    <Setter Property="Focusable" Value="False"/>
    <Setter Property="Cursor" Value="Hand"/>
    <Setter Property="ToolTip" Value="{x:Static igOutlookBar:ResourcesOutlookBar.MinimizeButtonMinimizeTooltip}"/>
    <Setter Property="Padding" Value="0"/>
    <Setter Property="BorderThickness" Value="0"/>
    <Setter Property="Background" Value="{StaticResource TransparentBrush}"/>
    <Setter Property="Foreground" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.GlyphThemeForegroundFillKey}}"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="ToggleButton">
          <Border x:Name="glyphArea"
                  Width="18"
                  Height="18"
                  Background="{TemplateBinding Background}"
                  BorderBrush="{TemplateBinding BorderBrush}"
                  BorderThickness="{TemplateBinding BorderThickness}"
                  Padding="{TemplateBinding Padding}"
                  RenderTransformOrigin="0.5,0.5">
            <Path Width="4"
                  Height="7"
                  Data="M 0,3 C0,3 0,4 0,4 0,4 1,4 1,4 1,4 1,5 1,5 1,5 2,5 2,5 2,5 2,6 2,6 2,6 3,6 3,6 3,6 3,7 3,7 3,7 4,7 4,7 4,7 4,5 4,5 4,5 3,5 3,5 3,5 3,4 3,4 3,4 2,4 2,4 2,4 2,3 2,3 2,3 3,3 3,3 3,3 3,2 3,2 3,2 4,2 4,2 4,2 4,0 4,0 4,0 3,0 3,0 3,0 3,1 3,1 3,1 2,1 2,1 2,1 2,2 2,2 2,2 1,2 1,2 1,2 1,3 1,3 1,3 0,3 0,3 z"
                  Fill="{TemplateBinding Foreground}"
                  Stretch="Fill"/>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="IsChecked" Value="True">
              <Setter TargetName="glyphArea" Property="LayoutTransform">
                <Setter.Value>
                  <RotateTransform Angle="180"/>
                </Setter.Value>
              </Setter>
              <Setter Property="ToolTip" Value="{x:Static igOutlookBar:ResourcesOutlookBar.MinimizeButtonExpandTooltip}"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Style.Triggers>
      <Trigger Property="IsMouseOver" Value="True">
        <Setter Property="Background" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.ContentAreaDropdownHottrackCenterFillKey}}"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.GlyphThemeBackgroundFillKey}}"/>
      </Trigger>
      <Trigger Property="IsPressed" Value="True">
        <Setter Property="Background" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.ContentAreaDropdownPressedCenterFillKey}}"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.GlyphThemeBackgroundFillKey}}"/>
      </Trigger>
    </Style.Triggers>
  </Style>

  <!-- *********************************  NavigationPaneOptionsControl  ********************************* -->
  <Style TargetType="{x:Type igOutlookBar:NavigationPaneOptionsControl}">
    <Setter Property="Background" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.XamOutlookBarBackgroundFillKey}}"/>
    <Setter Property="MinWidth" Value="314"/>
    <Setter Property="Height" Value="181"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type igOutlookBar:NavigationPaneOptionsControl}">
          <ControlTemplate.Resources>

            <Style x:Key="labelRuler" TargetType="{x:Type Separator}">
              <Setter Property="Height" Value="2"/>
              <Setter Property="Background" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.MenuOuterBorderFillKey}}"/>
              <Setter Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}"/>
              <Setter Property="Focusable" Value="false"/>
              <Setter Property="SnapsToDevicePixels" Value="True"/>
              <Setter Property="Template">
                <Setter.Value>
                  <ControlTemplate TargetType="{x:Type Separator}">
                    <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0,0,0,1" Background="{TemplateBinding Background}"/>
                  </ControlTemplate>
                </Setter.Value>
              </Setter>
            </Style>

            <!-- *********************************  Button Style  ********************************* -->
            <Style TargetType="{x:Type Button}">
              <Setter Property="Background" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.MenuScrollViewerButtonNormalCenterFillKey}}"/>
              <Setter Property="BorderBrush" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.MenuScrollViewerButtonNormalOuterBorderFillKey}}"/>
              <Setter Property="BorderThickness" Value="1"/>
              <Setter Property="Foreground" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.MenuScrollViewerButtonNormalGlyphFillKey}}"/>
              <Setter Property="Template">
                <Setter.Value>
                  <ControlTemplate TargetType="{x:Type Button}">
                    <Grid x:Name="Root">
                      <Border x:Name="Bd" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="2">
                        <ContentPresenter Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" Margin="{TemplateBinding Padding}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                      </Border>
                    </Grid>
                  </ControlTemplate>
                </Setter.Value>
              </Setter>
              <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                  <Setter Property="Background" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.MenuScrollViewerButtonHottrackInnerBorderFillKey}}"/>
                  <Setter Property="BorderBrush" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.MenuScrollViewerButtonHottrackOuterBorderFillKey}}"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                  <Setter Property="Background"  Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.MenuScrollViewerButtonPressedInnerBorderFillKey}}"/>
                  <Setter Property="BorderBrush" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.MenuScrollViewerButtonHottrackOuterBorderFillKey}}"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                  <Setter Property="Background"  Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igOutlookBar:XamOutlookBar}, ResourceId=ButtonDisabledBackground}}"/>
                  <Setter Property="BorderBrush" Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type igOutlookBar:XamOutlookBar}, ResourceId=ButtonDisabledBorderBrush}}"/>
                </Trigger>
              </Style.Triggers>
            </Style>

            <!-- *********************************  ListBoxItem Style  ********************************* -->
            <Style x:Key="ListBoxItemStyle" TargetType="{x:Type ListBoxItem}">
              <Setter Property="Foreground" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.HeaderDarkTextFillKey}}"/>
              <Setter Property="Background" Value="{StaticResource TransparentBrush}"/>
              <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
              <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
              <Setter Property="Padding" Value="4,1"/>
              <Setter Property="Template">
                <Setter.Value>
                  <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                      <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                      <Trigger Property="IsMouseOver" Value="true">
                        <Setter Property="BorderBrush" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.MenuScrollViewerButtonHottrackOuterBorderFillKey}}"/>
                        <Setter Property="BorderThickness" Value="1"/>
                        <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.MenuScrollViewerButtonHottrackInnerBorderFillKey}}"/>
                        <Setter Property="Foreground" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.MenuScrollViewerButtonNormalGlyphFillKey}}"/>
                      </Trigger>
                      <Trigger Property="IsSelected" Value="true">
                        <Setter Property="BorderBrush" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.MenuScrollViewerButtonHottrackOuterBorderFillKey}}"/>
                        <Setter Property="BorderThickness" Value="1"/>
                        <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.MenuScrollViewerButtonPressedInnerBorderFillKey}}"/>
                        <Setter Property="Foreground" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.HeaderDarkTextFillKey}}"/>
                      </Trigger>
                      <MultiTrigger>
                        <MultiTrigger.Conditions>
                          <Condition Property="IsSelected" Value="true"/>
                          <Condition Property="Selector.IsSelectionActive" Value="false"/>
                        </MultiTrigger.Conditions>
                        <Setter Property="Foreground" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.HeaderDarkTextFillKey}}"/>
                      </MultiTrigger>
                      <Trigger Property="IsEnabled" Value="false">
                        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                      </Trigger>
                    </ControlTemplate.Triggers>
                  </ControlTemplate>
                </Setter.Value>
              </Setter>
            </Style>

            <!-- *********************************  Listbox Style  ********************************* -->
            <Style x:Key="ListBoxStyle" TargetType="{x:Type ListBox}">
              <Setter Property="Background" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.LightBrushKey}}"/>
              <Setter Property="BorderBrush" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.XamOutlookBarOuterBorderFillKey}}"/>
              <Setter Property="BorderThickness" Value="1"/>
              <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
              <Setter Property="VerticalContentAlignment" Value="Center"/>
              <Setter Property="ItemContainerStyle" Value="{StaticResource ListBoxItemStyle}"/>
              <Setter Property="Template">
                <Setter.Value>
                  <ControlTemplate TargetType="{x:Type ListBox}">
                    <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="1" SnapsToDevicePixels="true">
                      <ScrollViewer Focusable="false" Padding="{TemplateBinding Padding}" Style="{StaticResource ScrollViewerStyle}">
                        <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                      </ScrollViewer>
                    </Border>
                    <ControlTemplate.Triggers>
                      <Trigger Property="IsEnabled" Value="false">
                        <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                      </Trigger>
                      <Trigger Property="IsGrouping" Value="true">
                        <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                      </Trigger>
                    </ControlTemplate.Triggers>
                  </ControlTemplate>
                </Setter.Value>
              </Setter>
            </Style>

            <!-- *********************************  EmptyCheckBoxFocusVisual Style  ********************************* -->
            <Style x:Key="EmptyCheckBoxFocusVisual">
              <Setter Property="Control.Template">
                <Setter.Value>
                  <ControlTemplate>
                    <Rectangle Margin="1" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                  </ControlTemplate>
                </Setter.Value>
              </Setter>
            </Style>

            <!-- *********************************  CheckRadioFocusVisual Style  ********************************* -->
            <Style x:Key="CheckRadioFocusVisual">
              <Setter Property="Control.Template">
                <Setter.Value>
                  <ControlTemplate>
                    <Rectangle Margin="14,0,0,0" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                  </ControlTemplate>
                </Setter.Value>
              </Setter>
            </Style>

            <!-- *********************************  CheckBox Style  ********************************* -->
            <Style TargetType="{x:Type CheckBox}">
              <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
              <Setter Property="Background" Value="{StaticResource CheckBoxBackgroundBrush}"/>
              <Setter Property="BorderBrush" Value="{StaticResource CheckBoxBorderBrush}"/>
              <Setter Property="BorderThickness" Value="1"/>
              <Setter Property="FocusVisualStyle" Value="{StaticResource EmptyCheckBoxFocusVisual}"/>
              <Setter Property="VerticalContentAlignment" Value="Center"/>
              <Setter Property="Template">
                <Setter.Value>
                  <ControlTemplate TargetType="{x:Type CheckBox}">
                    <Grid>
                      <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="16"/>
                        <ColumnDefinition Width="*"/>
                      </Grid.ColumnDefinitions>
                      <Rectangle x:Name="normal"
                                 Width="13"
                                 RadiusX="1"
                                 RadiusY="1"
                                 Stroke="{DynamicResource CheckBoxBorderBrush}"
                                 StrokeThickness="1" HorizontalAlignment="Left" Margin="2,2,0,2" Height="13" VerticalAlignment="Top" Fill="{DynamicResource CheckBoxBackgroundBrush}" />
                      <Rectangle x:Name="innerShadow" Width="11" StrokeThickness="1" HorizontalAlignment="Left" Margin="3,3,0,0" Height="11" VerticalAlignment="Top" Fill="{StaticResource CheckBoxInnerShadowBrush}" />
                      <Path x:Name="checkBox"
                            Height="8"
                            Width="9"
                            Stretch="Fill"
                            Opacity="0"
                            Data="M 1145.607177734375,430 C1145.607177734375,430 1141.449951171875,435.0772705078125 1141.449951171875,435.0772705078125 1141.449951171875,435.0772705078125 1139.232177734375,433.0999755859375 1139.232177734375,433.0999755859375 1139.232177734375,433.0999755859375 1138,434.5538330078125 1138,434.5538330078125 1138,434.5538330078125 1141.482177734375,438 1141.482177734375,438 1141.482177734375,438 1141.96875,437.9375 1141.96875,437.9375 1141.96875,437.9375 1147,431.34619140625 1147,431.34619140625 1147,431.34619140625 1145.607177734375,430 1145.607177734375,430 z"
                            Fill="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.GlyphThemeForegroundFillKey}}" HorizontalAlignment="Left" Margin="4,5,0,0" VerticalAlignment="Top" />
                      <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Grid.Column="1"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                      <Trigger Property="IsMouseOver" Value="True">
                        <Setter TargetName="normal" Property="Stroke" Value="{DynamicResource CheckBoxHoverBorderBrush}"/>
                      </Trigger>
                      <Trigger Property="IsPressed" Value="True">
                        <Setter TargetName="normal" Property="Stroke" Value="{DynamicResource CheckBoxFocusedBorderBrush}"/>
                      </Trigger>
                      <Trigger Property="IsChecked" Value="True">
                        <Setter TargetName="checkBox" Property="Opacity" Value="1"/>
                      </Trigger>
                      <Trigger Property="HasContent" Value="true">
                        <Setter Property="FocusVisualStyle" Value="{DynamicResource CheckBoxFocusedBorderBrush}"/>
                        <Setter Property="Padding" Value="4,0,0,0"/>
                      </Trigger>
                      <Trigger Property="IsEnabled" Value="false">
                        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                      </Trigger>
                    </ControlTemplate.Triggers>
                  </ControlTemplate>
                </Setter.Value>
              </Setter>
            </Style>
          </ControlTemplate.Resources>
          <Border  Background="{TemplateBinding Background}"
                   BorderBrush="{TemplateBinding BorderBrush}"
                   BorderThickness="{TemplateBinding BorderThickness}"
                   Padding="{TemplateBinding Padding}" >
            <Grid>
              <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
              </Grid.RowDefinitions>
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
              </Grid.ColumnDefinitions>
              <DockPanel Grid.ColumnSpan="2" Margin="0,2,7,0">
                <Label DockPanel.Dock="Left" Content="{x:Static igOutlookBar:ResourcesOutlookBar.NavigationPaneOptionsControlOrderLabel}" Foreground="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.HeaderDarkTextFillKey}}"/>
                <Separator Style="{StaticResource labelRuler}"/>
              </DockPanel>
              <ListBox x:Name="PART_ListBox"
                       Grid.Row="1"
                       Grid.RowSpan="3"
                       Height="116"
                       Style="{StaticResource ListBoxStyle}"
                       Margin="15,2,0,8"/>
              <Button x:Name="btnMoveUp"
                      Content="{x:Static igOutlookBar:ResourcesOutlookBar.NavigationPaneOptionsControlMoveUpButton}"
                      Command="{x:Static igOutlookBar:NavigationPaneOptionsControlCommands.MoveSelectedUpCommand}"
                      Grid.Column="1"
                      Grid.Row="1"
                      Width="75"
                      Height="23"
                      HorizontalAlignment="Center"
                      VerticalAlignment="Top"
                      Margin="8,2,5,0"/>
              <Button x:Name="btnMoveDn"
                      Content="{x:Static igOutlookBar:ResourcesOutlookBar.NavigationPaneOptionsControlMoveDownButton}"
                      Command="{x:Static igOutlookBar:NavigationPaneOptionsControlCommands.MoveSelectedDownCommand}"
                      Grid.Column="1"
                      Grid.Row="2"
                      Width="75"
                      Height="23"
                      HorizontalAlignment="Center"
                      VerticalAlignment="Top"
                      Margin="8,0,5,9"/>
              <Button x:Name="btnReset"
                      Content="{x:Static igOutlookBar:ResourcesOutlookBar.NavigationPaneOptionsControlResetButton}"
                      Command="{x:Static igOutlookBar:NavigationPaneOptionsControlCommands.ResetGroupSequenceAndVisibilityCommand}"
                      Grid.Column="1"
                      Grid.Row="3"
                      Width="75"
                      Height="23"
                      HorizontalAlignment="Center"
                      VerticalAlignment="Top"
                      Margin="8,0,5,27"/>
              <Button Name="btnOK"
                      Content="{x:Static igOutlookBar:ResourcesOutlookBar.NavigationPaneOptionsControlOkButton}"
                      Command="{x:Static igOutlookBar:NavigationPaneOptionsControlCommands.CommitChangesAndCloseCommand}"
                      IsDefault="True"
                      Grid.Column="0"
                      Grid.Row="4"
                      Width="75"
                      Height="23"
                      HorizontalAlignment="Right"
                      Margin="0,0,0,8"/>
              <Button Name="btnCancel"
                      Content="{x:Static igOutlookBar:ResourcesOutlookBar.NavigationPaneOptionsControlCancelButton}"
                      IsCancel="True"
                      Grid.Column="1"
                      Grid.Row="4"
                      Width="75"
                      Height="23"
                      HorizontalAlignment="Left"
                      Margin="9,0,6,8"/>
            </Grid>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- *********************************  XamOutlookBar  ********************************* -->
  <Style TargetType="{x:Type igOutlookBar:XamOutlookBar}">
    <Style.Resources>
      <BooleanToVisibilityConverter x:Key="booleanToVisibilityConverter"/>
    </Style.Resources>
    <Setter Property="BorderBrush" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.XamOutlookBarOuterBorderFillKey}}"/>
    <Setter Property="BorderThickness" Value="1"/>
    <Setter Property="Background" Value="{DynamicResource {x:Static igOutlookBar:OutlookBarBrushKeys.XamOutlookBarBackgroundFillKey}}"/>
    <Setter Property="Padding" Value="0"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type igOutlookBar:XamOutlookBar}">
          <AdornerDecorator>
            <Border VerticalAlignment="Stretch">
              <Grid VerticalAlignment="Stretch">
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="Auto"/>
                  <ColumnDefinition Width="*"/>
                  <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <Thumb x:Name="PART_VerticalSplitter"
                       Grid.Column="2"
                       Style="{DynamicResource {x:Static igOutlookBar:XamOutlookBar.VerticalSplitterStyleKey}}"
                       Visibility="{Binding Path=IsVerticalSplitterVisible, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource booleanToVisibilityConverter}}"/>
                <Border Grid.Column="1"
                        VerticalAlignment="Stretch"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        Padding="{TemplateBinding Padding}"
                        SnapsToDevicePixels="True">
                  <Grid x:Name="PART_Grid">
                    <Grid.RowDefinitions>
                      <!-- Header Row -->
                      <RowDefinition Height="Auto"/>
                      <!-- Selected Group Content Row -->
                      <RowDefinition Height="*" MinHeight="{TemplateBinding SelectedAreaMinHeight}"/>
                      <!-- Splitter Row -->
                      <RowDefinition Height="Auto"/>
                      <!-- Groups Row -->
                      <RowDefinition Height="0" MaxHeight="{Binding ElementName=PART_NavigationArea, Path=Height}"/>
                      <!-- Toolbar Row -->
                      <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                      <ColumnDefinition Width="Auto"/>
                      <ColumnDefinition/>
                      <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <!-- Header  -->
                    <igOutlookBar:SelectedGroupHeader x:Name="PART_SelectedGroupHeader"
                                                      Grid.Column="1"
                                                      Grid.Row="0"
                                                      TextBlock.FontWeight="Bold"/>
                    <!-- Selected Group Content  -->
                    <igOutlookBar:SelectedGroupContent x:Name="PART_SelectedGroupContent"
                                                       MinHeight="{TemplateBinding SelectedAreaMinHeight}"
                                                       Grid.Column="1"
                                                       Grid.Row="1"
                                                       Background="{TemplateBinding Background}"/>
                    <!-- Splitter  -->
                    <igOutlookBar:GroupAreaSplitter x:Name="PART_Splitter" Grid.Column="1" Grid.Row="2"/>
                    <!-- Groups   -->
                    <igOutlookBar:GroupsPresenter x:Name="PART_NavigationArea"
                                                  Grid.Column="1"
                                                  Grid.Row="3"
                                                  ItemsSource="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=NavigationAreaGroups}"/>
                    <!-- Toolbar -->
                    <igOutlookBar:GroupOverflowArea x:Name="PART_OverflowArea" Grid.Column="1" Grid.Row="4"/>
                  </Grid>
                </Border>
              </Grid>
            </Border>
          </AdornerDecorator>
          <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" SourceName="PART_Splitter" Value="true">
              <Setter Property="Cursor" Value="SizeNS">
              </Setter>
            </Trigger>
            <Trigger Property="IsMouseOver" SourceName="PART_VerticalSplitter" Value="true">
              <Setter Property="Cursor" Value="SizeWE">
              </Setter>
            </Trigger>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=VerticalSplitterLocation}" Value="Left">
              <Setter TargetName="PART_VerticalSplitter" Property="Grid.Column" Value="0"/>
            </DataTrigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

</ResourceDictionary>
